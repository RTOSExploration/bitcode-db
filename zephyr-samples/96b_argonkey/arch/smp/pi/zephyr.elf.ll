; ModuleID = 'build/96b_argonkey/pi/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.emitter = type { i8*, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234503 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234483 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234473 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234573 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234563 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234553 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234543 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234533 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234523 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234513 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235832 to i8*), void (i8*)* inttoptr (i32 134234493 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [5 x i8] c"%.4d\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"Calculate first %d digits of Pi independently by %d threads.\0A\00", align 1
@tthread = internal global [16 x %struct.k_thread] zeroinitializer, align 8, !dbg !25
@tstack = internal global [16 x [4480 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !123
@counter = internal global i32 16, align 4, !dbg !139
@buffer = internal global [16 x [241 x i8]] zeroinitializer, align 1, !dbg !134
@.str.2 = private unnamed_addr constant [39 x i8] c"Pi value calculated by thread #%d: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"All %d threads executed by %d cores in %d msec\0A\00", align 1
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str.4 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !268
@.str.1.5 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.6 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.7 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.8 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !293
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !303
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !354
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !383
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !517
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !389
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !526
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !562
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !572
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !577
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !597
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !790
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !751
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !734
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !707
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !723
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !753
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !767
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !769
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !771
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !773
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !775
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !777
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !779
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !781
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !783
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !785
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !795
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !822
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !917
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !906
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !958
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !815
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1024
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1305
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1275
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1261
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1203
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !813
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1307
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1279
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1277
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1217
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !811
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1320
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1283
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1281
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1226
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !809
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1322
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1287
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1285
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1235
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !807
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1324
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1291
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1289
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1241
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !805
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1326
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1295
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1293
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1247
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !803
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1328
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1299
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1297
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1253
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !801
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1330
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1303
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1301
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1259
@.str.8.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1332
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !817
@.str.1.127 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1488
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1543
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1486
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1545
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.127, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1477
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1479
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1532
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1535
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1537
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1540
@.str.2.129 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.130 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.131 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.132 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.133 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.136 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.138 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.139 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !890
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1556
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1665
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1667
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1663
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1658
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1632
@.str.143 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.144 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.145 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.146 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.147 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.148 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1669
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1201
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1215
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1224
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1233
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1239
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1245
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1251
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1257
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1759
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1800
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1803
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1808
@.str.182 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.186 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.187 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.188 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.192 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.193 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.194 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.195 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.196 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.191 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.190 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.192, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.193, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.194, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.195, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.196, i32 0, i32 0)], align 4
@.str.198 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1815
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2041
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2028
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2036
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2048
@.str.5.204 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2053
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.208 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.214, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.215, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.216, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.218, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.212, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.219, i32 0, i32 0)], align 4, !dbg !2081
@.str.213 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.214 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.215 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.216 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.217 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.218 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.212 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.219 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2196
@.str.8.211 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.222 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.223 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.224 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.225 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.229 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.230 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.233 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.234 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.244 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.245 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.246 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2209
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2320
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2323
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2325
@.str.247 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.263 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.254 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.268 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.276 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.256 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.271 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.253 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.280 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.281 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.289 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.290 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.291 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.292 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.248 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.249 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.250 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.251 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.252 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.255 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.267 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.272 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.273 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2038
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2046
@.str.23.284 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.298 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.299 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.300 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.301 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2327
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2357
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2362
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1902
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2360
@.str.4.302 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.303 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.304 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.308 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.309 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.329 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2951 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2955, !srcloc !2956
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2957, !srcloc !2958
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2959, !srcloc !2960
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2961, !srcloc !2962
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2963, !srcloc !2964
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2965, !srcloc !2966
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2967, !srcloc !2968
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2969, !srcloc !2970
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2971, !srcloc !2972
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2973, !srcloc !2974
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2975, !srcloc !2976
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2977, !srcloc !2978
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2979, !srcloc !2980
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2981, !srcloc !2982
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2983, !srcloc !2984
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2985, !srcloc !2986
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2987, !srcloc !2988
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !2989, !srcloc !2990
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2991, !srcloc !2992
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2993, !srcloc !2994
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !2995, !srcloc !2996
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !2997, !srcloc !2998
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2999, !srcloc !3000
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3001, !srcloc !3002
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3003, !srcloc !3004
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3005, !srcloc !3006
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3007, !srcloc !3008
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3009, !srcloc !3012
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3013, !srcloc !3014
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3015, !srcloc !3016
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3017, !srcloc !3018
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3019, !srcloc !3020
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3021, !srcloc !3022
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3023, !srcloc !3024
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3025, !srcloc !3026
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3027, !srcloc !3028
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3029, !srcloc !3030
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3031, !srcloc !3032
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3033, !srcloc !3034
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3035, !srcloc !3036
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3037, !srcloc !3038
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3039, !srcloc !3040
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3041, !srcloc !3042
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3043, !srcloc !3044
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3045, !srcloc !3046
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3047, !srcloc !3048
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3049, !srcloc !3050
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3051, !srcloc !3052
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3053, !srcloc !3054
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3055, !srcloc !3056
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3057, !srcloc !3058
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3059, !srcloc !3060
  ret void, !dbg !3061
}

; Function Attrs: noinline nounwind optsize
define dso_local void @test_thread(i8* nocapture noundef %0, i8* noundef %1, i8* nocapture readnone %2) #1 !dbg !3064 {
  %4 = alloca [841 x i32], align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3066, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i8* %1, metadata !3067, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i8* undef, metadata !3068, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i8* %0, metadata !3069, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i8* %1, metadata !3070, metadata !DIExpression()), !dbg !3083
  %5 = bitcast [841 x i32]* %4 to i8*, !dbg !3084
  call void @llvm.lifetime.start.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3084
  call void @llvm.dbg.declare(metadata [841 x i32]* %4, metadata !3071, metadata !DIExpression()), !dbg !3085
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(3364) %5, i8 0, i32 3364, i1 false), !dbg !3085
  call void @llvm.dbg.value(metadata i32 0, metadata !3075, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 0, metadata !3076, metadata !DIExpression()), !dbg !3083
  br label %6, !dbg !3086

6:                                                ; preds = %3, %6
  %7 = phi i32 [ 0, %3 ], [ %9, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3076, metadata !DIExpression()), !dbg !3083
  %8 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %7, !dbg !3088
  store i32 2000, i32* %8, align 4, !dbg !3091
  %9 = add nuw nsw i32 %7, 1, !dbg !3092
  call void @llvm.dbg.value(metadata i32 %9, metadata !3076, metadata !DIExpression()), !dbg !3083
  %10 = icmp eq i32 %9, 840, !dbg !3093
  br i1 %10, label %11, label %6, !dbg !3086, !llvm.loop !3094

11:                                               ; preds = %6, %32
  %12 = phi i8* [ %38, %32 ], [ %1, %6 ]
  %13 = phi i32 [ %39, %32 ], [ 840, %6 ]
  %14 = phi i32 [ %36, %32 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i8* %12, metadata !3070, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %13, metadata !3076, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %14, metadata !3075, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 0, metadata !3078, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %13, metadata !3077, metadata !DIExpression()), !dbg !3083
  br label %15, !dbg !3097

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %27, %15 ], [ 0, %11 ]
  %17 = phi i32 [ %30, %15 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3078, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %17, metadata !3077, metadata !DIExpression()), !dbg !3083
  %18 = mul nsw i32 %16, %17, !dbg !3099
  %19 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %17, !dbg !3102
  %20 = load i32, i32* %19, align 4, !dbg !3102
  %21 = mul nsw i32 %20, 10000, !dbg !3103
  %22 = add nsw i32 %21, %18, !dbg !3104
  call void @llvm.dbg.value(metadata i32 %22, metadata !3078, metadata !DIExpression()), !dbg !3096
  %23 = shl nuw nsw i32 %17, 1, !dbg !3105
  %24 = add nsw i32 %23, -1, !dbg !3106
  %25 = freeze i32 %22
  %26 = freeze i32 %24
  %27 = sdiv i32 %25, %26, !dbg !3107
  %28 = mul i32 %27, %26
  %29 = sub i32 %25, %28
  store i32 %29, i32* %19, align 4, !dbg !3108
  call void @llvm.dbg.value(metadata i32 %27, metadata !3078, metadata !DIExpression()), !dbg !3096
  %30 = add nsw i32 %17, -1, !dbg !3109
  call void @llvm.dbg.value(metadata i32 %30, metadata !3077, metadata !DIExpression()), !dbg !3083
  %31 = icmp sgt i32 %17, 1, !dbg !3110
  br i1 %31, label %15, label %32, !dbg !3097, !llvm.loop !3111

32:                                               ; preds = %15
  %33 = sdiv i32 %27, 10000, !dbg !3113
  %34 = add nsw i32 %33, %14, !dbg !3114
  call void @llvm.dbg.value(metadata i32 %34, metadata !3082, metadata !DIExpression()), !dbg !3096
  %35 = mul i32 %33, 10000
  %36 = sub i32 %27, %35
  call void @llvm.dbg.value(metadata i32 %36, metadata !3075, metadata !DIExpression()), !dbg !3083
  %37 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %12, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 noundef %34) #24, !dbg !3115
  %38 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !3116
  call void @llvm.dbg.value(metadata i8* %38, metadata !3070, metadata !DIExpression()), !dbg !3083
  %39 = add nsw i32 %13, -14, !dbg !3117
  call void @llvm.dbg.value(metadata i32 %39, metadata !3076, metadata !DIExpression()), !dbg !3083
  %40 = icmp ugt i32 %13, 14, !dbg !3118
  br i1 %40, label %11, label %41, !dbg !3119, !llvm.loop !3120

41:                                               ; preds = %32
  %42 = bitcast i8* %0 to i32*, !dbg !3122
  call void @llvm.dbg.value(metadata i32* %42, metadata !3069, metadata !DIExpression()), !dbg !3083
  tail call fastcc void @atomic_dec(i32* noundef %42) #25, !dbg !3123
  call void @llvm.lifetime.end.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3124
  ret void, !dbg !3124
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_dec(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3125 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3131, metadata !DIExpression()), !dbg !3132
  tail call fastcc void @atomic_sub(i32* noundef %0) #25, !dbg !3133
  ret void, !dbg !3134
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_sub(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3135 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3139, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32 1, metadata !3140, metadata !DIExpression()), !dbg !3141
  %2 = atomicrmw sub i32* %0, i32 1 seq_cst, align 4, !dbg !3142
  ret void, !dbg !3143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3144 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i32 0, i32 0), i32 noundef 240, i32 noundef 16) #24, !dbg !3151
  %1 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3152
  call void @llvm.dbg.value(metadata i32 %1, metadata !3146, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.value(metadata i32 0, metadata !3150, metadata !DIExpression()), !dbg !3153
  br label %8, !dbg !3154

2:                                                ; preds = %8
  %3 = load i32, i32* @counter, align 4, !dbg !3156
  %4 = icmp eq i32 %3, 0, !dbg !3157
  br i1 %4, label %18, label %5, !dbg !3157

5:                                                ; preds = %2
  %6 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #25, !dbg !3153
  %7 = insertvalue [1 x i64] poison, i64 %6, 0
  br label %15, !dbg !3157

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 0, %0 ], [ %13, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3150, metadata !DIExpression()), !dbg !3153
  %10 = getelementptr inbounds [16 x %struct.k_thread], [16 x %struct.k_thread]* @tthread, i32 0, i32 %9, !dbg !3158
  %11 = getelementptr inbounds [16 x [4480 x %struct.z_thread_stack_element]], [16 x [4480 x %struct.z_thread_stack_element]]* @tstack, i32 0, i32 %9, i32 0, !dbg !3161
  %12 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %9, i32 0, !dbg !3162
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %10, %struct.z_thread_stack_element* noundef nonnull %11, i8* noundef nonnull %12) #25, !dbg !3163
  %13 = add nuw nsw i32 %9, 1, !dbg !3164
  call void @llvm.dbg.value(metadata i32 %13, metadata !3150, metadata !DIExpression()), !dbg !3153
  %14 = icmp eq i32 %13, 16, !dbg !3165
  br i1 %14, label %2, label %8, !dbg !3154, !llvm.loop !3166

15:                                               ; preds = %5, %15
  tail call fastcc void @k_sleep([1 x i64] %7) #25, !dbg !3168
  %16 = load i32, i32* @counter, align 4, !dbg !3156
  %17 = icmp eq i32 %16, 0, !dbg !3157
  br i1 %17, label %18, label %15, !dbg !3157, !llvm.loop !3170

18:                                               ; preds = %15, %2
  %19 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3172
  call void @llvm.dbg.value(metadata i32 %19, metadata !3147, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %1), metadata !3148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3153
  call void @llvm.dbg.value(metadata i64 undef, metadata !3149, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3153
  call void @llvm.dbg.value(metadata i32 0, metadata !3150, metadata !DIExpression()), !dbg !3153
  br label %20, !dbg !3173

20:                                               ; preds = %18, %20
  %21 = phi i32 [ 0, %18 ], [ %23, %20 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3150, metadata !DIExpression()), !dbg !3153
  %22 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %21, i32 0, !dbg !3175
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0), i32 noundef %21, i8* noundef nonnull %22) #24, !dbg !3178
  %23 = add nuw nsw i32 %21, 1, !dbg !3179
  call void @llvm.dbg.value(metadata i32 %23, metadata !3150, metadata !DIExpression()), !dbg !3153
  %24 = icmp eq i32 %23, 16, !dbg !3180
  br i1 %24, label %25, label %20, !dbg !3173, !llvm.loop !3181

25:                                               ; preds = %20
  %26 = sub i32 %19, %1, !dbg !3183
  call void @llvm.dbg.value(metadata i32 %26, metadata !3148, metadata !DIExpression()), !dbg !3153
  %27 = zext i32 %26 to i64, !dbg !3184
  %28 = tail call fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %27) #25, !dbg !3185
  call void @llvm.dbg.value(metadata i64 %28, metadata !3149, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3153
  %29 = trunc i64 %28 to i32, !dbg !3186
  call void @llvm.dbg.value(metadata i32 %29, metadata !3149, metadata !DIExpression()), !dbg !3153
  %30 = udiv i32 %29, 1000000, !dbg !3187
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i32 0, i32 0), i32 noundef 16, i32 noundef 1, i32 noundef %30) #24, !dbg !3188
  ret void, !dbg !3189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3190 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !3193
  ret i32 %1, !dbg !3194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #6 !dbg !3195 {
  call void @llvm.dbg.value(metadata i64 1, metadata !3200, metadata !DIExpression()), !dbg !3201
  ret i64 10, !dbg !3202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3203 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3225, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3216, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3217, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata i32 4384, metadata !3218, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_thread, metadata !3219, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata i8* bitcast (i32* @counter to i8*), metadata !3220, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata i8* %2, metadata !3221, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata i8* null, metadata !3222, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata i32 -6, metadata !3223, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.value(metadata i32 0, metadata !3224, metadata !DIExpression()), !dbg !3226
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3227, !srcloc !3229
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 4384, void (i8*, i8*, i8*)* noundef nonnull @test_thread, i8* noundef bitcast (i32* @counter to i8*), i8* noundef %2, i8* noundef null, i32 noundef -6, i32 noundef 0, [1 x i64] zeroinitializer) #24, !dbg !3230
  ret void, !dbg !3231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3232 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3236, metadata !DIExpression()), !dbg !3237
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3238, !srcloc !3240
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3241
  ret void, !dbg !3242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %0) unnamed_addr #6 !dbg !3243 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3245, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.value(metadata i64 %0, metadata !3247, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 84000000, metadata !3252, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 1000000000, metadata !3253, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i8 1, metadata !3254, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i8 0, metadata !3255, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i1 false, metadata !3256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3264
  call void @llvm.dbg.value(metadata i8 0, metadata !3257, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i1 false, metadata !3258, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3264
  call void @llvm.dbg.value(metadata i1 false, metadata !3259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3264
  call void @llvm.dbg.value(metadata i64 0, metadata !3260, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i64 0, metadata !3260, metadata !DIExpression()), !dbg !3264
  %2 = udiv i64 %0, 84000000, !dbg !3266
  %3 = mul i64 %2, 1000000000, !dbg !3273
  %4 = mul i64 %2, 84000000
  %5 = sub i64 %0, %4
  %6 = mul nuw nsw i64 %5, 1000000000, !dbg !3274
  %7 = udiv i64 %6, 84000000, !dbg !3275
  %8 = add i64 %7, %3, !dbg !3276
  ret i64 %8, !dbg !3277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3278 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !3280
  ret i32 %1, !dbg !3281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3282 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %0, metadata !3293, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %1, metadata !3294, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %2, metadata !3295, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %3, metadata !3296, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %0, metadata !3298, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %0, metadata !3299, metadata !DIExpression()), !dbg !3360
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3361
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3361
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3302, metadata !DIExpression()), !dbg !3362
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3363
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3363
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3304, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i32 0, metadata !3305, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 0, metadata !3306, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 0, metadata !3307, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 -1, metadata !3308, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 0, metadata !3311, metadata !DIExpression()), !dbg !3360
  %12 = and i32 %2, 4, !dbg !3365
  %13 = icmp eq i32 %12, 0, !dbg !3366
  call void @llvm.dbg.value(metadata i1 %13, metadata !3312, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3360
  %14 = lshr i32 %2, 3, !dbg !3367
  %15 = and i32 %14, 7, !dbg !3367
  %16 = add nuw nsw i32 %15, 1, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %16, metadata !3313, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 0, metadata !3314, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %0, metadata !3315, metadata !DIExpression()), !dbg !3360
  %17 = ptrtoint i8* %0 to i32, !dbg !3369
  %18 = and i32 %17, 3, !dbg !3371
  %19 = icmp eq i32 %18, 0, !dbg !3371
  br i1 %19, label %20, label %320, !dbg !3372

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3373
  call void @llvm.dbg.value(metadata i8* %21, metadata !3299, metadata !DIExpression()), !dbg !3360
  %22 = icmp eq i8* %0, null, !dbg !3374
  %23 = and i32 %1, 7, !dbg !3376
  %24 = sub nuw nsw i32 8, %23, !dbg !3376
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3376
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3376
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %27, metadata !3294, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %26, metadata !3299, metadata !DIExpression()), !dbg !3360
  br i1 %22, label %33, label %28, !dbg !3377

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3379
  %30 = sub i32 4, %17, !dbg !3379
  %31 = add i32 %30, %29, !dbg !3380
  %32 = icmp ugt i32 %31, %27, !dbg !3381
  br i1 %32, label %320, label %33, !dbg !3382

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3383
  call void @llvm.dbg.value(metadata i8* %34, metadata !3296, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %3, metadata !3310, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 4, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 4, metadata !3300, metadata !DIExpression()), !dbg !3360
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3384

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %42, metadata !3296, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %43, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %44, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %45, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %72, metadata !3308, metadata !DIExpression()), !dbg !3360
  br i1 %46, label %73, label %47, !dbg !3385

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3386
  %49 = zext i1 %48 to i32, !dbg !3390
  %50 = add nsw i32 %72, %49, !dbg !3390
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3390
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3390
  call void @llvm.dbg.value(metadata i32 %52, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %51, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3311, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %50, metadata !3308, metadata !DIExpression()), !dbg !3360
  br label %53, !dbg !3391

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %40, metadata !3296, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %58, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %57, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %56, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3311, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %54, metadata !3308, metadata !DIExpression()), !dbg !3360
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3392
  call void @llvm.dbg.value(metadata i8* %60, metadata !3296, metadata !DIExpression()), !dbg !3360
  %61 = load i8, i8* %60, align 1, !dbg !3394
  %62 = icmp eq i8 %61, 0, !dbg !3395
  br i1 %62, label %226, label %63, !dbg !3396, !llvm.loop !3397

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3385

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3400

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3311, metadata !DIExpression()), !dbg !3360
  %75 = add nsw i32 %72, -1, !dbg !3401
  call void @llvm.dbg.value(metadata i32 %75, metadata !3308, metadata !DIExpression()), !dbg !3360
  br label %53, !dbg !3402

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3403

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 4, metadata !3300, metadata !DIExpression()), !dbg !3360
  br label %53, !dbg !3404

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 4, metadata !3300, metadata !DIExpression()), !dbg !3360
  br label %53, !dbg !3405

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3406
  %81 = icmp eq i8 %80, 108, !dbg !3408
  br i1 %81, label %82, label %109, !dbg !3409

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3410
  %84 = load i8, i8* %83, align 1, !dbg !3410
  %85 = icmp eq i8 %84, 108, !dbg !3413
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3414
  %89 = add i32 %88, 7, !dbg !3414
  %90 = and i32 %89, -8, !dbg !3414
  %91 = inttoptr i32 %90 to i8*, !dbg !3414
  %92 = inttoptr i32 %90 to double*, !dbg !3414
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3414
  %94 = load double, double* %92, align 8, !dbg !3414
  call void @llvm.dbg.value(metadata i8* %93, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 8, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 8, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata double %94, metadata !3328, metadata !DIExpression()), !dbg !3416
  %95 = ptrtoint i8* %43 to i32, !dbg !3417
  %96 = add i32 %95, 7, !dbg !3417
  %97 = and i32 %96, -8, !dbg !3417
  %98 = inttoptr i32 %97 to i8*, !dbg !3418
  call void @llvm.dbg.value(metadata i8* %98, metadata !3299, metadata !DIExpression()), !dbg !3360
  br i1 %22, label %104, label %99, !dbg !3419

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3420
  %101 = icmp ugt i32 %100, %196, !dbg !3424
  br i1 %101, label %320, label %102, !dbg !3425

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3426
  store double %94, double* %103, align 8, !dbg !3426
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3429
  call void @llvm.dbg.value(metadata i8* %105, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3311, metadata !DIExpression()), !dbg !3360
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3311, metadata !DIExpression()), !dbg !3360
  br label %53, !dbg !3430

107:                                              ; preds = %73, %73
  br label %109, !dbg !3431

108:                                              ; preds = %73
  br label %109, !dbg !3431

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3360
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3360
  call void @llvm.dbg.value(metadata i32 %113, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %112, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3314, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3311, metadata !DIExpression()), !dbg !3360
  %114 = ptrtoint i8* %43 to i32, !dbg !3431
  %115 = add i32 %114, -1, !dbg !3431
  %116 = add i32 %115, %112, !dbg !3431
  %117 = sub i32 0, %112, !dbg !3431
  %118 = and i32 %116, %117, !dbg !3431
  %119 = inttoptr i32 %118 to i8*, !dbg !3432
  call void @llvm.dbg.value(metadata i8* %119, metadata !3299, metadata !DIExpression()), !dbg !3360
  br i1 %22, label %124, label %120, !dbg !3433

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3435
  %122 = add i32 %121, %118, !dbg !3436
  %123 = icmp ugt i32 %122, %196, !dbg !3437
  br i1 %123, label %320, label %124, !dbg !3438

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3439

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3432
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3440
  call void @llvm.dbg.value(metadata i8* %127, metadata !3297, metadata !DIExpression()), !dbg !3360
  %128 = bitcast i8* %41 to i8**, !dbg !3440
  %129 = load i8*, i8** %128, align 4, !dbg !3440
  call void @llvm.dbg.value(metadata i8* %129, metadata !3310, metadata !DIExpression()), !dbg !3360
  br label %130, !dbg !3441

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3360
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3442
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3360
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3443
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3360
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3360
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3360
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3360
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3360
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3360
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3444
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %142, metadata !3294, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %141, metadata !3296, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %140, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %139, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %138, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %137, metadata !3305, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %136, metadata !3313, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %135, metadata !3306, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3311, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %133, metadata !3310, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %132, metadata !3308, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %131, metadata !3307, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.label(metadata !3359), !dbg !3446
  br i1 %22, label %146, label %144, !dbg !3447

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3448
  store i8* %133, i8** %145, align 4, !dbg !3451
  br label %146, !dbg !3452

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3453
  call void @llvm.dbg.value(metadata i32 %147, metadata !3313, metadata !DIExpression()), !dbg !3360
  %148 = icmp sgt i32 %136, 0, !dbg !3454
  br i1 %148, label %152, label %149, !dbg !3455

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !3456
  %151 = zext i1 %150 to i32, !dbg !3456
  br label %152, !dbg !3455

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3455
  %154 = icmp eq i32 %153, 0, !dbg !3455
  call void @llvm.dbg.value(metadata i1 %154, metadata !3337, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3457
  call void @llvm.dbg.value(metadata i1 %36, metadata !3340, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3457
  %155 = or i1 %36, %154, !dbg !3458
  br i1 %155, label %156, label %192, !dbg !3458

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3459
  %158 = sub i32 %157, %17, !dbg !3459
  %159 = lshr i32 %158, 2, !dbg !3460
  call void @llvm.dbg.value(metadata i32 %159, metadata !3341, metadata !DIExpression()), !dbg !3461
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3462
  br i1 %161, label %162, label %163, !dbg !3462

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3464
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.8, i32 0, i32 0)) #24, !dbg !3464
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3464
  unreachable, !dbg !3464

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3469
  br i1 %164, label %165, label %166, !dbg !3471

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #24, !dbg !3472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3472
  unreachable, !dbg !3472

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3477

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3478
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3481
  store i8 %168, i8* %169, align 1, !dbg !3482
  %170 = trunc i32 %132 to i8, !dbg !3483
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3484
  store i8 %170, i8* %171, align 1, !dbg !3485
  br i1 %154, label %175, label %172, !dbg !3486

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3487
  store i8 %173, i8* %169, align 1, !dbg !3487
  %174 = add i32 %131, 1, !dbg !3490
  call void @llvm.dbg.value(metadata i32 %174, metadata !3307, metadata !DIExpression()), !dbg !3360
  br label %187, !dbg !3491

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3492
  call void @llvm.dbg.value(metadata i32 %176, metadata !3306, metadata !DIExpression()), !dbg !3360
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3494

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3495
  call void @llvm.dbg.value(metadata i32 %179, metadata !3294, metadata !DIExpression()), !dbg !3360
  br label %187, !dbg !3498

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3499

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %182, metadata !3294, metadata !DIExpression()), !dbg !3360
  br label %187, !dbg !3503

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !3504
  %185 = add i32 %142, 2, !dbg !3506
  %186 = add i32 %185, %184, !dbg !3507
  call void @llvm.dbg.value(metadata i32 %186, metadata !3294, metadata !DIExpression()), !dbg !3360
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3360
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3360
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3360
  call void @llvm.dbg.value(metadata i32 %190, metadata !3294, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %189, metadata !3306, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %188, metadata !3307, metadata !DIExpression()), !dbg !3360
  %191 = add nuw nsw i32 %137, 1, !dbg !3508
  call void @llvm.dbg.value(metadata i32 %191, metadata !3305, metadata !DIExpression()), !dbg !3360
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3360
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3443
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3360
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3444
  call void @llvm.dbg.value(metadata i32 %196, metadata !3294, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %195, metadata !3305, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %194, metadata !3306, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %193, metadata !3307, metadata !DIExpression()), !dbg !3360
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3509
  call void @llvm.dbg.value(metadata i8* %197, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %143, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %141, metadata !3296, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %139, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %138, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3314, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3311, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %132, metadata !3308, metadata !DIExpression()), !dbg !3360
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3392
  call void @llvm.dbg.value(metadata i8* %198, metadata !3296, metadata !DIExpression()), !dbg !3360
  %199 = load i8, i8* %198, align 1, !dbg !3394
  %200 = icmp eq i8 %199, 0, !dbg !3395
  br i1 %200, label %226, label %63, !dbg !3396

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3510

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3511
  call void @llvm.dbg.value(metadata i8* %203, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 undef, metadata !3344, metadata !DIExpression()), !dbg !3512
  br i1 %22, label %219, label %204, !dbg !3513

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3511
  %206 = load i32, i32* %205, align 4, !dbg !3511
  call void @llvm.dbg.value(metadata i32 %206, metadata !3344, metadata !DIExpression()), !dbg !3512
  %207 = inttoptr i32 %118 to i32*, !dbg !3514
  store i32 %206, i32* %207, align 4, !dbg !3517
  br label %219, !dbg !3518

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3519
  %210 = add i32 %209, 7, !dbg !3519
  %211 = and i32 %210, -8, !dbg !3519
  %212 = inttoptr i32 %211 to i8*, !dbg !3519
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3519
  call void @llvm.dbg.value(metadata i8* %213, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i64 undef, metadata !3350, metadata !DIExpression()), !dbg !3520
  br i1 %22, label %219, label %214, !dbg !3521

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3519
  %216 = load i64, i64* %215, align 8, !dbg !3519
  call void @llvm.dbg.value(metadata i64 %216, metadata !3350, metadata !DIExpression()), !dbg !3520
  %217 = inttoptr i32 %118 to i64*, !dbg !3522
  store i64 %216, i64* %217, align 8, !dbg !3527
  br label %219, !dbg !3528

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #24, !dbg !3529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3529
  unreachable, !dbg !3529

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3534
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3534
  call void @llvm.dbg.value(metadata i8* %221, metadata !3297, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %40, metadata !3296, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %222, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %113, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %112, metadata !3301, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3314, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8 poison, metadata !3311, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %72, metadata !3308, metadata !DIExpression()), !dbg !3360
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3392
  call void @llvm.dbg.value(metadata i8* %223, metadata !3296, metadata !DIExpression()), !dbg !3360
  %224 = load i8, i8* %223, align 1, !dbg !3394
  %225 = icmp eq i8 %224, 0, !dbg !3395
  br i1 %225, label %226, label %38, !dbg !3396

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3535
  %228 = ptrtoint i8* %227 to i32, !dbg !3536
  %229 = sub i32 %228, %17, !dbg !3536
  %230 = lshr i32 %229, 2, !dbg !3538
  %231 = icmp ugt i32 %229, 1023, !dbg !3539
  br i1 %231, label %232, label %233, !dbg !3540

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3541
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #24, !dbg !3541
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3541
  unreachable, !dbg !3541

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3546

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3547
  %236 = add i32 %235, %229, !dbg !3550
  br label %320, !dbg !3551

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3552
  store i8 %238, i8* %0, align 1, !dbg !3553
  %239 = trunc i32 %194 to i8, !dbg !3554
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3556
  store i8 %240, i8* %242, align 1, !dbg !3558
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3559
  store i8 %241, i8* %243, align 1, !dbg !3560
  %244 = trunc i32 %193 to i8, !dbg !3561
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3562
  store i8 %244, i8* %245, align 1, !dbg !3563
  %246 = icmp eq i32 %193, 0, !dbg !3564
  %247 = xor i1 %246, true, !dbg !3565
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3565
  call void @llvm.dbg.value(metadata i8* %227, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 0, metadata !3309, metadata !DIExpression()), !dbg !3360
  br i1 %249, label %250, label %269, !dbg !3565

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3566

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %254, metadata !3309, metadata !DIExpression()), !dbg !3360
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3567
  %256 = load i8, i8* %255, align 1, !dbg !3567
  %257 = icmp sgt i8 %256, -1, !dbg !3569
  br i1 %257, label %265, label %258, !dbg !3570

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3353, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3571
  %259 = ptrtoint i8* %253 to i32, !dbg !3572
  %260 = add i32 %251, %259, !dbg !3574
  %261 = icmp ugt i32 %260, %196, !dbg !3575
  br i1 %261, label %320, label %262, !dbg !3576

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3577
  call void @llvm.dbg.value(metadata i8 %263, metadata !3353, metadata !DIExpression()), !dbg !3571
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3578
  call void @llvm.dbg.value(metadata i8* %264, metadata !3299, metadata !DIExpression()), !dbg !3360
  store i8 %263, i8* %253, align 1, !dbg !3579
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3509
  call void @llvm.dbg.value(metadata i8* %266, metadata !3299, metadata !DIExpression()), !dbg !3360
  %267 = add nuw i32 %254, 1, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %267, metadata !3309, metadata !DIExpression()), !dbg !3360
  %268 = icmp eq i32 %267, %195, !dbg !3581
  br i1 %268, label %269, label %252, !dbg !3566, !llvm.loop !3582

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3509
  call void @llvm.dbg.value(metadata i8* %270, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 0, metadata !3309, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %133, metadata !3310, metadata !DIExpression()), !dbg !3360
  %271 = icmp eq i32 %195, 0, !dbg !3584
  br i1 %271, label %316, label %272, !dbg !3587

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3587

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %276, metadata !3310, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %277, metadata !3309, metadata !DIExpression()), !dbg !3360
  br i1 %246, label %282, label %278, !dbg !3588

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3591
  %280 = load i8, i8* %279, align 1, !dbg !3591
  %281 = icmp sgt i8 %280, -1, !dbg !3592
  br i1 %281, label %282, label %311, !dbg !3593

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3594

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3300, metadata !DIExpression()), !dbg !3360
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3595
  %285 = load i8, i8* %284, align 1, !dbg !3595
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3598
  call void @llvm.dbg.value(metadata i8* %286, metadata !3299, metadata !DIExpression()), !dbg !3360
  store i8 %285, i8* %275, align 1, !dbg !3599
  br label %297, !dbg !3600

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3601
  %289 = load i8, i8* %288, align 1, !dbg !3601
  %290 = zext i8 %289 to i32, !dbg !3601
  %291 = shl nuw nsw i32 %290, 2, !dbg !3603
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3604
  %293 = bitcast i8* %292 to i8**, !dbg !3605
  %294 = load i8*, i8** %293, align 4, !dbg !3605
  call void @llvm.dbg.value(metadata i8* %294, metadata !3310, metadata !DIExpression()), !dbg !3360
  store i8* null, i8** %293, align 4, !dbg !3606
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !3607
  %296 = add i32 %295, 1, !dbg !3608
  call void @llvm.dbg.value(metadata i32 %296, metadata !3300, metadata !DIExpression()), !dbg !3360
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3360
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3609
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3360
  call void @llvm.dbg.value(metadata i8* %300, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %299, metadata !3300, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %298, metadata !3310, metadata !DIExpression()), !dbg !3360
  %301 = ptrtoint i8* %300 to i32, !dbg !3610
  %302 = add i32 %273, %299, !dbg !3612
  %303 = add i32 %302, %301, !dbg !3613
  %304 = icmp ugt i32 %303, %196, !dbg !3614
  br i1 %304, label %320, label %305, !dbg !3615

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3616
  %307 = load i8, i8* %306, align 1, !dbg !3616
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3617
  call void @llvm.dbg.value(metadata i8* %308, metadata !3299, metadata !DIExpression()), !dbg !3360
  store i8 %307, i8* %300, align 1, !dbg !3618
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !3619
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3620
  call void @llvm.dbg.value(metadata i8* %310, metadata !3299, metadata !DIExpression()), !dbg !3360
  br label %311, !dbg !3621

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3622
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3360
  call void @llvm.dbg.value(metadata i8* %313, metadata !3299, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %312, metadata !3310, metadata !DIExpression()), !dbg !3360
  %314 = add nuw i32 %277, 1, !dbg !3623
  call void @llvm.dbg.value(metadata i32 %314, metadata !3309, metadata !DIExpression()), !dbg !3360
  %315 = icmp eq i32 %314, %195, !dbg !3584
  br i1 %315, label %316, label %274, !dbg !3587, !llvm.loop !3624

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3509
  %318 = ptrtoint i8* %317 to i32, !dbg !3626
  %319 = sub i32 %318, %17, !dbg !3626
  br label %320, !dbg !3627

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3628
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3628
  ret i32 %321, !dbg !3628
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3629 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3633, metadata !DIExpression()), !dbg !3634
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !3635
  ret i1 %2, !dbg !3636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3637 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3642, metadata !DIExpression()), !dbg !3643
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3644
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3645
  %4 = and i1 %2, %3, !dbg !3645
  ret i1 %4, !dbg !3646
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3647 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3651, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i32 %1, metadata !3652, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i32 %2, metadata !3653, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i8* %3, metadata !3654, metadata !DIExpression()), !dbg !3657
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3658
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3658
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3655, metadata !DIExpression()), !dbg !3659
  call void @llvm.va_start(i8* nonnull %6), !dbg !3660
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3661
  %8 = load i32, i32* %7, align 4, !dbg !3661
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3661
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %10, metadata !3656, metadata !DIExpression()), !dbg !3657
  call void @llvm.va_end(i8* nonnull %6), !dbg !3662
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3663
  ret i32 %10, !dbg !3664
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3665 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3677, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3678, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i8* %2, metadata !3679, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i8* %3, metadata !3680, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i8* %3, metadata !3681, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i8* %3, metadata !3682, metadata !DIExpression()), !dbg !3696
  %5 = icmp eq i8* %3, null, !dbg !3697
  br i1 %5, label %45, label %6, !dbg !3699

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3691, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3696
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3700
  %8 = load i8, i8* %7, align 1, !dbg !3700
  %9 = zext i8 %8 to i32, !dbg !3701
  call void @llvm.dbg.value(metadata i32 %9, metadata !3692, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i8 undef, metadata !3693, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3696
  call void @llvm.dbg.value(metadata i8 undef, metadata !3694, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  call void @llvm.dbg.value(metadata i32 0, metadata !3690, metadata !DIExpression()), !dbg !3696
  %10 = icmp eq i8 %8, 0, !dbg !3702
  br i1 %10, label %39, label %11, !dbg !3705

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3706
  call void @llvm.dbg.value(metadata i8 %12, metadata !3691, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %13 = zext i8 %12 to i32, !dbg !3707
  call void @llvm.dbg.value(metadata i32 %13, metadata !3691, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %14 = shl nuw nsw i32 %13, 2, !dbg !3708
  call void @llvm.dbg.value(metadata i32 %14, metadata !3691, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3709
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3710
  %17 = load i8, i8* %16, align 1, !dbg !3710
  call void @llvm.dbg.value(metadata i8 %17, metadata !3693, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %18 = zext i8 %17 to i32, !dbg !3711
  call void @llvm.dbg.value(metadata i32 %18, metadata !3693, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3712
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3713
  %21 = load i8, i8* %20, align 1, !dbg !3713
  call void @llvm.dbg.value(metadata i8 %21, metadata !3694, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %22 = zext i8 %21 to i32, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %22, metadata !3694, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %23 = shl nuw nsw i32 %22, 1, !dbg !3715
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3696
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3716
  call void @llvm.dbg.value(metadata i8* %24, metadata !3688, metadata !DIExpression()), !dbg !3696
  br label %25, !dbg !3705

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3688, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i32 %27, metadata !3690, metadata !DIExpression()), !dbg !3696
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3717
  call void @llvm.dbg.value(metadata i8* %28, metadata !3688, metadata !DIExpression()), !dbg !3696
  %29 = load i8, i8* %26, align 1, !dbg !3719
  %30 = zext i8 %29 to i32, !dbg !3719
  call void @llvm.dbg.value(metadata i32 %30, metadata !3695, metadata !DIExpression()), !dbg !3696
  %31 = shl nuw nsw i32 %30, 2, !dbg !3720
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3721
  %33 = bitcast i8* %32 to i8**, !dbg !3722
  call void @llvm.dbg.value(metadata i8** %33, metadata !3689, metadata !DIExpression()), !dbg !3696
  store i8* %28, i8** %33, align 4, !dbg !3723
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !3724
  %35 = add i32 %34, 1, !dbg !3725
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3726
  call void @llvm.dbg.value(metadata i8* %36, metadata !3688, metadata !DIExpression()), !dbg !3696
  %37 = add nuw nsw i32 %27, 1, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %37, metadata !3690, metadata !DIExpression()), !dbg !3696
  %38 = icmp eq i32 %37, %9, !dbg !3702
  br i1 %38, label %39, label %25, !dbg !3705, !llvm.loop !3728

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3730
  call void @llvm.dbg.value(metadata i8* %40, metadata !3681, metadata !DIExpression()), !dbg !3696
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3731
  %42 = bitcast i8* %41 to i8**, !dbg !3731
  %43 = load i8*, i8** %42, align 1, !dbg !3731
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !3732
  br label %45, !dbg !3733

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3696
  ret i32 %46, !dbg !3734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3735 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3739, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3740, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i8* %2, metadata !3741, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i8* %3, metadata !3742, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i8* %4, metadata !3743, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i8* %4, metadata !3744, metadata !DIExpression()), !dbg !3749
  %6 = ptrtoint i8* %4 to i32, !dbg !3750
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3750
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !3750
  ret i32 %8, !dbg !3751
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !3752 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3756, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %1, metadata !3757, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 0, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 0, metadata !3760, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 poison, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %0, metadata !3756, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3761
  %3 = load i8, i8* %0, align 1, !dbg !3762
  call void @llvm.dbg.value(metadata i8 %3, metadata !3758, metadata !DIExpression()), !dbg !3761
  %4 = icmp eq i8 %3, 0, !dbg !3763
  br i1 %4, label %29, label %5, !dbg !3764

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %8, metadata !3760, metadata !DIExpression()), !dbg !3761
  br i1 %9, label %11, label %22, !dbg !3766

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3768
  br i1 %12, label %13, label %17, !dbg !3772

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3773
  br i1 %14, label %29, label %15, !dbg !3776

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3777
  br i1 %16, label %29, label %22, !dbg !3779

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3780
  %19 = xor i1 %18, true, !dbg !3782
  %20 = zext i1 %18 to i32, !dbg !3782
  %21 = add nsw i32 %8, %20, !dbg !3782
  br label %22, !dbg !3782

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3761
  call void @llvm.dbg.value(metadata i32 %24, metadata !3760, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8 poison, metadata !3759, metadata !DIExpression()), !dbg !3761
  %25 = icmp eq i8 %6, 37, !dbg !3783
  %26 = xor i1 %25, %23, !dbg !3785
  call void @llvm.dbg.value(metadata i8* %10, metadata !3756, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %10, metadata !3756, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3761
  %27 = load i8, i8* %10, align 1, !dbg !3762
  call void @llvm.dbg.value(metadata i8 %27, metadata !3758, metadata !DIExpression()), !dbg !3761
  %28 = icmp eq i8 %27, 0, !dbg !3763
  br i1 %28, label %29, label %5, !dbg !3764, !llvm.loop !3786

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3761
  ret i1 %30, !dbg !3788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !3789 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3793, metadata !DIExpression()), !dbg !3794
  %2 = add i8 %0, -64, !dbg !3795
  %3 = icmp ult i8 %2, 59, !dbg !3795
  ret i1 %3, !dbg !3796
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3797 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3805, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3807, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %3, metadata !3808, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %4, metadata !3809, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i16* %5, metadata !3810, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %6, metadata !3811, metadata !DIExpression()), !dbg !3874
  %11 = icmp eq i8* %0, null, !dbg !3875
  br i1 %11, label %12, label %13, !dbg !3878

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3879
  unreachable, !dbg !3879

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3812, metadata !DIExpression()), !dbg !3874
  %14 = bitcast i8* %0 to i32*, !dbg !3881
  call void @llvm.dbg.value(metadata i32* %14, metadata !3813, metadata !DIExpression()), !dbg !3874
  %15 = and i32 %4, 8, !dbg !3882
  %16 = icmp eq i32 %15, 0, !dbg !3883
  call void @llvm.dbg.value(metadata i1 %16, metadata !3817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %0, metadata !3820, metadata !DIExpression()), !dbg !3874
  %17 = icmp eq i32 %1, 0, !dbg !3884
  br i1 %17, label %18, label %20, !dbg !3885

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !3886
  br label %20, !dbg !3885

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3885
  call void @llvm.dbg.value(metadata i32 %21, metadata !3806, metadata !DIExpression()), !dbg !3874
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3887
  %23 = load i8, i8* %22, align 1, !dbg !3887
  %24 = zext i8 %23 to i32, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %24, metadata !3815, metadata !DIExpression()), !dbg !3874
  %25 = icmp ne i8 %23, 0, !dbg !3889
  %26 = and i32 %4, 1, !dbg !3890
  %27 = icmp ne i32 %26, 0, !dbg !3890
  %28 = and i1 %27, %25, !dbg !3890
  call void @llvm.dbg.value(metadata i1 %28, metadata !3819, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3874
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3891
  %30 = load i8, i8* %29, align 1, !dbg !3891
  %31 = zext i8 %30 to i32, !dbg !3892
  call void @llvm.dbg.value(metadata i32 %31, metadata !3816, metadata !DIExpression()), !dbg !3874
  %32 = icmp ne i8 %30, 0, !dbg !3893
  %33 = and i32 %4, 2, !dbg !3894
  %34 = icmp ne i32 %33, 0, !dbg !3894
  %35 = and i1 %34, %32, !dbg !3894
  call void @llvm.dbg.value(metadata i1 %35, metadata !3818, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3874
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3895
  br i1 %36, label %41, label %37, !dbg !3895

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3897
  br i1 %38, label %287, label %39, !dbg !3900

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !3901
  br label %287, !dbg !3903

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3904
  %43 = zext i8 %42 to i32, !dbg !3905
  %44 = shl nuw nsw i32 %43, 2, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %44, metadata !3814, metadata !DIExpression()), !dbg !3874
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3907
  %46 = bitcast i8* %45 to i8**, !dbg !3908
  %47 = load i8*, i8** %46, align 4, !dbg !3908
  call void @llvm.dbg.value(metadata i8* %47, metadata !3823, metadata !DIExpression()), !dbg !3874
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3909
  call void @llvm.dbg.value(metadata i8* %48, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 0, metadata !3825, metadata !DIExpression()), !dbg !3874
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3910
  br i1 %49, label %50, label %135, !dbg !3911

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3822, metadata !DIExpression()), !dbg !3874
  br i1 %28, label %51, label %76, !dbg !3912

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %48, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 0, metadata !3825, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 0, metadata !3826, metadata !DIExpression()), !dbg !3913
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3914

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %55, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %56, metadata !3825, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %57, metadata !3826, metadata !DIExpression()), !dbg !3913
  %58 = load i8, i8* %55, align 1, !dbg !3915
  %59 = zext i8 %58 to i32, !dbg !3916
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3916
  %61 = bitcast i32* %60 to i8**, !dbg !3917
  %62 = load i8*, i8** %61, align 4, !dbg !3917
  call void @llvm.dbg.value(metadata i8* %62, metadata !3832, metadata !DIExpression()), !dbg !3918
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !3919
  call void @llvm.dbg.value(metadata i32 %63, metadata !3835, metadata !DIExpression()), !dbg !3918
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3920
  br i1 %65, label %66, label %70, !dbg !3920

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3922
  %68 = add nuw i32 %56, 1, !dbg !3924
  call void @llvm.dbg.value(metadata i32 %68, metadata !3825, metadata !DIExpression()), !dbg !3874
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3925
  store i16 %67, i16* %69, align 2, !dbg !3926
  br label %70, !dbg !3927

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3874
  call void @llvm.dbg.value(metadata i32 %71, metadata !3825, metadata !DIExpression()), !dbg !3874
  %72 = add nsw i32 %63, %54, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %72, metadata !3822, metadata !DIExpression()), !dbg !3874
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3929
  call void @llvm.dbg.value(metadata i8* %73, metadata !3824, metadata !DIExpression()), !dbg !3874
  %74 = add nuw nsw i32 %57, 1, !dbg !3930
  call void @llvm.dbg.value(metadata i32 %74, metadata !3826, metadata !DIExpression()), !dbg !3913
  %75 = icmp eq i32 %74, %24, !dbg !3931
  br i1 %75, label %82, label %53, !dbg !3914, !llvm.loop !3932

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3934
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3934
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3934
  br label %82, !dbg !3934

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3937
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3874
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3938
  call void @llvm.dbg.value(metadata i1 undef, metadata !3836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3939
  call void @llvm.dbg.value(metadata i32 0, metadata !3837, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %85, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %84, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %83, metadata !3825, metadata !DIExpression()), !dbg !3874
  %86 = icmp eq i8 %30, 0, !dbg !3941
  br i1 %86, label %287, label %87, !dbg !3942

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3943
  %89 = icmp eq i32 %88, 0, !dbg !3944
  call void @llvm.dbg.value(metadata i1 %89, metadata !3836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3939
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3942

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %96, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %97, metadata !3825, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %98, metadata !3837, metadata !DIExpression()), !dbg !3940
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3945
  call void @llvm.dbg.value(metadata i8* %99, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 undef, metadata !3839, metadata !DIExpression()), !dbg !3946
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3947
  call void @llvm.dbg.value(metadata i8* %100, metadata !3824, metadata !DIExpression()), !dbg !3874
  %101 = load i8, i8* %99, align 1, !dbg !3948
  call void @llvm.dbg.value(metadata i8 %101, metadata !3842, metadata !DIExpression()), !dbg !3946
  %102 = zext i8 %101 to i32, !dbg !3949
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3949
  %104 = bitcast i32* %103 to i8**, !dbg !3950
  %105 = load i8*, i8** %104, align 4, !dbg !3950
  call void @llvm.dbg.value(metadata i8* %105, metadata !3843, metadata !DIExpression()), !dbg !3946
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !3951
  call void @llvm.dbg.value(metadata i1 %106, metadata !3844, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3946
  br i1 %16, label %113, label %107, !dbg !3952

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3954
  call void @llvm.dbg.value(metadata i8 %108, metadata !3839, metadata !DIExpression()), !dbg !3946
  %109 = zext i8 %108 to i32, !dbg !3955
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !3956
  br i1 %110, label %111, label %113, !dbg !3957

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !3958
  %112 = add nsw i32 %95, -2, !dbg !3964
  call void @llvm.dbg.value(metadata i32 %112, metadata !3822, metadata !DIExpression()), !dbg !3874
  br label %130, !dbg !3965

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3966

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3967

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3969
  call void @llvm.dbg.value(metadata i32 %116, metadata !3822, metadata !DIExpression()), !dbg !3874
  br label %130, !dbg !3972

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3973

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3870), !dbg !3974
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !3975
  call void @llvm.dbg.value(metadata i32 %119, metadata !3845, metadata !DIExpression()), !dbg !3946
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3976
  br i1 %121, label %122, label %126, !dbg !3976

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3978
  %124 = add nuw i32 %97, 1, !dbg !3980
  call void @llvm.dbg.value(metadata i32 %124, metadata !3825, metadata !DIExpression()), !dbg !3874
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3981
  store i16 %123, i16* %125, align 2, !dbg !3982
  br label %126, !dbg !3983

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3874
  call void @llvm.dbg.value(metadata i32 %127, metadata !3825, metadata !DIExpression()), !dbg !3874
  %128 = add i32 %95, -1, !dbg !3984
  %129 = add i32 %128, %119, !dbg !3985
  call void @llvm.dbg.value(metadata i32 %129, metadata !3822, metadata !DIExpression()), !dbg !3874
  br label %130, !dbg !3986

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3874
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3946
  call void @llvm.dbg.value(metadata i32 %132, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %131, metadata !3825, metadata !DIExpression()), !dbg !3874
  %133 = add nuw nsw i32 %98, 1, !dbg !3987
  call void @llvm.dbg.value(metadata i8* %100, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %133, metadata !3837, metadata !DIExpression()), !dbg !3940
  %134 = icmp eq i32 %133, %31, !dbg !3941
  br i1 %134, label %287, label %94, !dbg !3942, !llvm.loop !3988

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3847, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3848, metadata !DIExpression()), !dbg !3991
  br i1 %28, label %136, label %138, !dbg !3992

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3849, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 0, metadata !3850, metadata !DIExpression()), !dbg !3874
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3993
  call void @llvm.dbg.value(metadata i8* %137, metadata !3851, metadata !DIExpression()), !dbg !3874
  br label %143, !dbg !3996

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3997
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3997

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3851, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 undef, metadata !3850, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 0, metadata !3849, metadata !DIExpression()), !dbg !3874
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !3999
  br label %148, !dbg !4002

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4003
  call void @llvm.dbg.value(metadata i8* %151, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 0, metadata !3853, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i8 %149, metadata !3850, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 %150, metadata !3849, metadata !DIExpression()), !dbg !3874
  %152 = icmp eq i8 %30, 0, !dbg !4005
  br i1 %152, label %153, label %155, !dbg !4006

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4007
  br label %160, !dbg !4006

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4006

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4007
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4008
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4009
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3874
  call void @llvm.dbg.value(metadata i8 undef, metadata !3846, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3874
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4010
  %166 = load i8, i8* %165, align 1, !dbg !4010
  %167 = zext i8 %162 to i32, !dbg !4011
  %168 = add i8 %166, %162, !dbg !4012
  call void @llvm.dbg.value(metadata i8 %168, metadata !3846, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3874
  %169 = icmp eq i32 %33, 0, !dbg !4013
  %170 = lshr i8 %163, 1, !dbg !4014
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4014
  call void @llvm.dbg.value(metadata i8 %171, metadata !3846, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3874
  %172 = icmp eq i32 %26, 0, !dbg !4015
  %173 = icmp eq i32 %161, 0, !dbg !4007
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4007
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4007
  call void @llvm.dbg.value(metadata i8 %175, metadata !3846, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3874
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3861, metadata !DIExpression()), !dbg !4016
  %176 = load i32, i32* %14, align 1, !dbg !4017
  store i8 %168, i8* %165, align 1, !dbg !4018
  store i8 %175, i8* %22, align 1, !dbg !4018
  store i8 %171, i8* %29, align 1, !dbg !4018
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4019
  call void @llvm.dbg.value(metadata i32 %177, metadata !3852, metadata !DIExpression()), !dbg !3874
  %178 = icmp slt i32 %177, 0, !dbg !4020
  br i1 %178, label %287, label %240, !dbg !4022

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %181, metadata !3853, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i8 %182, metadata !3850, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 %183, metadata !3849, metadata !DIExpression()), !dbg !3874
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4023
  call void @llvm.dbg.value(metadata i8* %184, metadata !3824, metadata !DIExpression()), !dbg !3874
  %185 = load i8, i8* %180, align 1, !dbg !4024
  call void @llvm.dbg.value(metadata i8 %185, metadata !3855, metadata !DIExpression()), !dbg !4025
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4026
  call void @llvm.dbg.value(metadata i8* %186, metadata !3824, metadata !DIExpression()), !dbg !3874
  %187 = load i8, i8* %184, align 1, !dbg !4027
  call void @llvm.dbg.value(metadata i8 %187, metadata !3858, metadata !DIExpression()), !dbg !4025
  %188 = zext i8 %187 to i32, !dbg !4028
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4028
  %190 = bitcast i32* %189 to i8**, !dbg !4029
  %191 = load i8*, i8** %190, align 4, !dbg !4029
  call void @llvm.dbg.value(metadata i8* %191, metadata !3859, metadata !DIExpression()), !dbg !4025
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4030
  call void @llvm.dbg.value(metadata i1 %192, metadata !3860, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4025
  br i1 %16, label %196, label %193, !dbg !4031

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4033
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4034
  br i1 %195, label %235, label %196, !dbg !4035

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4036

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4037

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4040
  br i1 %199, label %201, label %200, !dbg !4045

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4046
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4046
  unreachable, !dbg !4046

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4040
  %203 = add nuw nsw i8 %183, 1, !dbg !4048
  call void @llvm.dbg.value(metadata i8 %203, metadata !3849, metadata !DIExpression()), !dbg !3874
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4049
  br label %231, !dbg !4050

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4051

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4052
  br i1 %207, label %209, label %208, !dbg !4057

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4058
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4058
  unreachable, !dbg !4058

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4052
  %211 = add nuw nsw i8 %182, 1, !dbg !4060
  call void @llvm.dbg.value(metadata i8 %211, metadata !3850, metadata !DIExpression()), !dbg !3874
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4061
  br label %231, !dbg !4062

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4063

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4065
  br i1 %215, label %217, label %216, !dbg !4070

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4071
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4071
  unreachable, !dbg !4071

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4065
  %219 = add nuw nsw i8 %183, 1, !dbg !4073
  call void @llvm.dbg.value(metadata i8 %219, metadata !3849, metadata !DIExpression()), !dbg !3874
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4074
  br label %231, !dbg !4075

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4076
  br i1 %222, label %224, label %223, !dbg !4080

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4081
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4081
  unreachable, !dbg !4081

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4076
  %226 = add nuw nsw i8 %182, 1, !dbg !4083
  call void @llvm.dbg.value(metadata i8 %226, metadata !3850, metadata !DIExpression()), !dbg !3874
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4084
  store i8 %185, i8* %227, align 1, !dbg !4085
  %228 = add nuw nsw i8 %182, 2, !dbg !4086
  call void @llvm.dbg.value(metadata i8 %228, metadata !3850, metadata !DIExpression()), !dbg !3874
  %229 = zext i8 %226 to i32, !dbg !4087
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4087
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4088
  br label %235, !dbg !4089

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3874
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4009
  call void @llvm.dbg.value(metadata i8 %237, metadata !3850, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8 %236, metadata !3849, metadata !DIExpression()), !dbg !3874
  %238 = add nuw nsw i32 %181, 1, !dbg !4089
  call void @llvm.dbg.value(metadata i8* %186, metadata !3824, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %238, metadata !3853, metadata !DIExpression()), !dbg !4004
  %239 = icmp eq i32 %238, %31, !dbg !4005
  br i1 %239, label %160, label %179, !dbg !4006, !llvm.loop !4090

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %177, metadata !3822, metadata !DIExpression()), !dbg !3874
  store i32 %176, i32* %14, align 1, !dbg !4092
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4093
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %243, metadata !3852, metadata !DIExpression()), !dbg !3874
  %244 = icmp slt i32 %243, 0, !dbg !4095
  br i1 %244, label %287, label %245, !dbg !4097

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3822, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3874
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4098
  %248 = add nuw nsw i32 %44, %24, !dbg !4098
  %249 = sub i32 %247, %248, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %249, metadata !3862, metadata !DIExpression()), !dbg !3874
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %250, metadata !3852, metadata !DIExpression()), !dbg !3874
  %251 = icmp slt i32 %250, 0, !dbg !4100
  br i1 %251, label %287, label %252, !dbg !4102

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %253, metadata !3822, metadata !DIExpression()), !dbg !3874
  %254 = add nuw nsw i32 %253, %250, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %254, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 0, metadata !3863, metadata !DIExpression()), !dbg !4105
  %255 = icmp eq i8 %162, 0, !dbg !4106
  br i1 %255, label %284, label %256, !dbg !4107

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4107

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3863, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata i32 %260, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4108
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4109
  %262 = load i8, i8* %261, align 1, !dbg !4109
  call void @llvm.dbg.value(metadata i8 %262, metadata !3865, metadata !DIExpression()), !dbg !4110
  store i8 %262, i8* %10, align 1, !dbg !4111
  %263 = zext i8 %262 to i32, !dbg !4112
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4112
  %265 = bitcast i32* %264 to i8**, !dbg !4113
  %266 = load i8*, i8** %265, align 4, !dbg !4113
  call void @llvm.dbg.value(metadata i8* %266, metadata !3868, metadata !DIExpression()), !dbg !4110
  br i1 %257, label %270, label %267, !dbg !4114

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4115
  %269 = load i16, i16* %268, align 2, !dbg !4115
  br label %270, !dbg !4114

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4114
  call void @llvm.dbg.value(metadata i32 undef, metadata !3869, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4110
  call void @llvm.dbg.value(metadata i8* %10, metadata !3865, metadata !DIExpression(DW_OP_deref)), !dbg !4110
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4116
  call void @llvm.dbg.value(metadata i32 %272, metadata !3852, metadata !DIExpression()), !dbg !3874
  %273 = icmp slt i32 %272, 0, !dbg !4117
  br i1 %273, label %277, label %274, !dbg !4119

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3869, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3822, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3874
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %275, metadata !3852, metadata !DIExpression()), !dbg !3874
  %276 = icmp slt i32 %275, 0, !dbg !4121
  br i1 %276, label %277, label %279, !dbg !4123

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4124
  call void @llvm.dbg.value(metadata i32 undef, metadata !3822, metadata !DIExpression()), !dbg !3874
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4125
  call void @llvm.dbg.value(metadata i32 %280, metadata !3822, metadata !DIExpression()), !dbg !3874
  %281 = add nsw i32 %280, %275, !dbg !4126
  call void @llvm.dbg.value(metadata i32 %281, metadata !3822, metadata !DIExpression()), !dbg !3874
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4124
  %282 = add nuw nsw i32 %259, 1, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %282, metadata !3863, metadata !DIExpression()), !dbg !4105
  %283 = icmp eq i32 %282, %167, !dbg !4106
  br i1 %283, label %284, label %258, !dbg !4107, !llvm.loop !4128

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4104
  call void @llvm.dbg.value(metadata i32 %285, metadata !3822, metadata !DIExpression()), !dbg !3874
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4130
  br label %287, !dbg !4131

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3874
  ret i32 %288, !dbg !4132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4133 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4137, metadata !DIExpression()), !dbg !4145
  %2 = icmp eq i8* %0, null, !dbg !4146
  br i1 %2, label %3, label %4, !dbg !4149

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4150
  unreachable, !dbg !4150

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4138, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8* %0, metadata !4139, metadata !DIExpression()), !dbg !4145
  %5 = load i8, i8* %0, align 1, !dbg !4152
  %6 = zext i8 %5 to i32, !dbg !4152
  %7 = shl nuw nsw i32 %6, 2, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %7, metadata !4140, metadata !DIExpression()), !dbg !4145
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4154
  %9 = load i8, i8* %8, align 1, !dbg !4154
  %10 = zext i8 %9 to i32, !dbg !4154
  call void @llvm.dbg.value(metadata i32 %10, metadata !4141, metadata !DIExpression()), !dbg !4145
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4155
  %12 = load i8, i8* %11, align 1, !dbg !4155
  %13 = zext i8 %12 to i32, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %13, metadata !4142, metadata !DIExpression()), !dbg !4145
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4156
  call void @llvm.dbg.value(metadata i8* %14, metadata !4138, metadata !DIExpression()), !dbg !4145
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4157
  call void @llvm.dbg.value(metadata i8* %15, metadata !4138, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 0, metadata !4143, metadata !DIExpression()), !dbg !4158
  %16 = icmp eq i8 %9, 0, !dbg !4159
  br i1 %16, label %17, label %22, !dbg !4161

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4145
  %19 = ptrtoint i8* %18 to i32, !dbg !4162
  %20 = ptrtoint i8* %0 to i32, !dbg !4162
  %21 = sub i32 %19, %20, !dbg !4162
  ret i32 %21, !dbg !4163

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4143, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.value(metadata i8* %24, metadata !4138, metadata !DIExpression()), !dbg !4145
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4164
  call void @llvm.dbg.value(metadata i8* %25, metadata !4138, metadata !DIExpression()), !dbg !4145
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !4166
  %27 = add i32 %26, 1, !dbg !4167
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4168
  call void @llvm.dbg.value(metadata i8* %28, metadata !4138, metadata !DIExpression()), !dbg !4145
  %29 = add nuw nsw i32 %23, 1, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %29, metadata !4143, metadata !DIExpression()), !dbg !4158
  %30 = icmp eq i32 %29, %10, !dbg !4159
  br i1 %30, label %17, label %22, !dbg !4161, !llvm.loop !4170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4172 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4176, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata i8* %1, metadata !4177, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata i8* %2, metadata !4178, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata i16 %3, metadata !4179, metadata !DIExpression()), !dbg !4180
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4181
  br i1 %5, label %6, label %9, !dbg !4183

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4184
  %8 = add i32 %7, 1, !dbg !4186
  br label %20, !dbg !4187

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4188
  br i1 %10, label %13, label %11, !dbg !4189

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4189
  br label %16, !dbg !4189

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4190
  %15 = add i32 %14, 1, !dbg !4191
  br label %16, !dbg !4189

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4189
  %18 = and i32 %17, 65535, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %17, metadata !4179, metadata !DIExpression()), !dbg !4180
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4193
  br label %20, !dbg !4194

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4180
  ret i32 %21, !dbg !4195
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4198, metadata !DIExpression()), !dbg !4199
  ret i32 0, !dbg !4200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4201 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4205, metadata !DIExpression()), !dbg !4206
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4207
  ret void, !dbg !4208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4209 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4212
  ret i8* %1, !dbg !4213
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4214 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4225, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i8* %0, metadata !4224, metadata !DIExpression()), !dbg !4236
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !4237
  ret void, !dbg !4239
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4244, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %1, metadata !4245, metadata !DIExpression()), !dbg !4246
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4247
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4247
  ret i32 %4, !dbg !4248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4249 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4256, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4253, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i8* %1, metadata !4254, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i8* %2, metadata !4255, metadata !DIExpression()), !dbg !4257
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4258
  ret void, !dbg !4259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4260 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4264, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %1, metadata !4265, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 0, metadata !4266, metadata !DIExpression()), !dbg !4267
  %3 = icmp eq i32 %1, 0, !dbg !4268
  br i1 %3, label %13, label %4, !dbg !4271

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4266, metadata !DIExpression()), !dbg !4267
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4272
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4274
  %8 = load i8, i8* %7, align 1, !dbg !4274
  %9 = zext i8 %8 to i32, !dbg !4274
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4272
  %11 = add nuw i32 %5, 1, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %11, metadata !4266, metadata !DIExpression()), !dbg !4267
  %12 = icmp eq i32 %11, %1, !dbg !4268
  br i1 %12, label %13, label %4, !dbg !4271, !llvm.loop !4276

13:                                               ; preds = %4, %2
  ret void, !dbg !4278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4279 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4283, metadata !DIExpression()), !dbg !4285
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4286
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4286
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4284, metadata !DIExpression()), !dbg !4287
  call void @llvm.va_start(i8* nonnull %3), !dbg !4288
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4289
  %5 = load i32, i32* %4, align 4, !dbg !4289
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4289
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !4289
  call void @llvm.va_end(i8* nonnull %3), !dbg !4290
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4291
  ret void, !dbg !4291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4292 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4296, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i32 %1, metadata !4297, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i8* %2, metadata !4298, metadata !DIExpression()), !dbg !4301
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4302
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4302
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4299, metadata !DIExpression()), !dbg !4303
  call void @llvm.va_start(i8* nonnull %5), !dbg !4304
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4305
  %7 = load i32, i32* %6, align 4, !dbg !4305
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4305
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !4305
  call void @llvm.dbg.value(metadata i32 %9, metadata !4300, metadata !DIExpression()), !dbg !4301
  call void @llvm.va_end(i8* nonnull %5), !dbg !4306
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4307
  ret i32 %9, !dbg !4308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4309 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4316, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i8* %0, metadata !4313, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i32 %1, metadata !4314, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i8* %2, metadata !4315, metadata !DIExpression()), !dbg !4323
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4324
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4324
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4317, metadata !DIExpression()), !dbg !4325
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4326
  store i8* %0, i8** %7, align 4, !dbg !4326
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4326
  store i32 %1, i32* %8, align 4, !dbg !4326
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4326
  store i32 0, i32* %9, align 4, !dbg !4326
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !4327
  %10 = load i32, i32* %9, align 4, !dbg !4328
  %11 = load i32, i32* %8, align 4, !dbg !4330
  %12 = icmp slt i32 %10, %11, !dbg !4331
  br i1 %12, label %13, label %15, !dbg !4332

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4333
  store i8 0, i8* %14, align 1, !dbg !4335
  br label %15, !dbg !4336

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4337
  ret i32 %10, !dbg !4338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !4339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4344, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4345, metadata !DIExpression()), !dbg !4346
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4347
  %4 = load i8*, i8** %3, align 4, !dbg !4347
  %5 = icmp eq i8* %4, null, !dbg !4349
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4350
  br i1 %5, label %12, label %8, !dbg !4351

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4352
  %10 = load i32, i32* %9, align 4, !dbg !4352
  %11 = icmp slt i32 %7, %10, !dbg !4353
  br i1 %11, label %15, label %12, !dbg !4354

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4355
  %14 = add nsw i32 %7, 1, !dbg !4357
  store i32 %14, i32* %13, align 4, !dbg !4357
  br label %25, !dbg !4358

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4359
  %17 = icmp eq i32 %7, %16, !dbg !4361
  br i1 %17, label %18, label %21, !dbg !4362

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4363
  store i32 %19, i32* %6, align 4, !dbg !4363
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4365
  store i8 0, i8* %20, align 1, !dbg !4366
  br label %25, !dbg !4367

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4368
  %23 = add nsw i32 %7, 1, !dbg !4370
  store i32 %23, i32* %6, align 4, !dbg !4370
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4371
  store i8 %22, i8* %24, align 1, !dbg !4372
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4373
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !4374 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4379, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i8* %1, metadata !4380, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i8* %2, metadata !4381, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i8* %3, metadata !4382, metadata !DIExpression()), !dbg !4383
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !4384
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4385
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !4386
  unreachable, !dbg !4387
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !4388 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4495
  ret %struct.k_thread* %1, !dbg !4496
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4501, metadata !DIExpression()), !dbg !4502
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4503, !srcloc !4505
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !4506
  ret void, !dbg !4507
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !4508 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4509, !srcloc !4511
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !4512
  ret %struct.k_thread* %1, !dbg !4513
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4514 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4527, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4524, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %1, metadata !4525, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %2, metadata !4526, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %4, metadata !4528, metadata !DIExpression()), !dbg !4653
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4654
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4654
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4529, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i32 0, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i1 undef, metadata !4535, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4653
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4656

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4656

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4657
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4527, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %30, metadata !4526, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %29, metadata !4533, metadata !DIExpression()), !dbg !4653
  %31 = load i8, i8* %30, align 1, !dbg !4658
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4656

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4658
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4659
  call void @llvm.dbg.value(metadata i8* %34, metadata !4526, metadata !DIExpression()), !dbg !4653
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %35, metadata !4537, metadata !DIExpression()), !dbg !4660
  %36 = icmp slt i32 %35, 0, !dbg !4661
  %37 = add i32 %29, 1, !dbg !4659
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %36, label %365, label %28, !llvm.loop !4663

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4665
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4542, metadata !DIExpression()), !dbg !4666
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4666
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4585, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4588, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8* %30, metadata !4591, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 -1, metadata !4592, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 -1, metadata !4593, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8* null, metadata !4594, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8* %14, metadata !4595, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8 0, metadata !4596, metadata !DIExpression()), !dbg !4667
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !4668
  call void @llvm.dbg.value(metadata i8* %39, metadata !4526, metadata !DIExpression()), !dbg !4653
  %40 = load i24, i24* %15, align 8, !dbg !4669
  %41 = and i24 %40, 256, !dbg !4669
  %42 = icmp eq i24 %41, 0, !dbg !4669
  br i1 %42, label %51, label %43, !dbg !4671

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4672
  call void @llvm.dbg.value(metadata i8* %44, metadata !4527, metadata !DIExpression()), !dbg !4653
  %45 = bitcast i8* %27 to i32*, !dbg !4672
  %46 = load i32, i32* %45, align 4, !dbg !4672
  call void @llvm.dbg.value(metadata i32 %46, metadata !4592, metadata !DIExpression()), !dbg !4667
  %47 = icmp slt i32 %46, 0, !dbg !4674
  br i1 %47, label %48, label %56, !dbg !4676

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4677
  store i24 %49, i24* %15, align 8, !dbg !4677
  %50 = sub nsw i32 0, %46, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %50, metadata !4592, metadata !DIExpression()), !dbg !4667
  br label %56, !dbg !4680

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4681
  %53 = icmp eq i24 %52, 0, !dbg !4681
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4683
  br label %56, !dbg !4683

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4684
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4667
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4527, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %58, metadata !4592, metadata !DIExpression()), !dbg !4667
  %60 = and i24 %57, 1024, !dbg !4684
  %61 = icmp eq i24 %60, 0, !dbg !4684
  br i1 %61, label %69, label %62, !dbg !4685

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4686
  call void @llvm.dbg.value(metadata i8* %63, metadata !4527, metadata !DIExpression()), !dbg !4653
  %64 = bitcast i8* %59 to i32*, !dbg !4686
  %65 = load i32, i32* %64, align 4, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %65, metadata !4597, metadata !DIExpression()), !dbg !4687
  %66 = icmp slt i32 %65, 0, !dbg !4688
  br i1 %66, label %67, label %74, !dbg !4690

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4691
  store i24 %68, i24* %15, align 8, !dbg !4691
  br label %74, !dbg !4693

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4694
  %71 = icmp eq i24 %70, 0, !dbg !4694
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4696
  br label %74, !dbg !4696

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4697
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4667
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4667
  call void @llvm.dbg.value(metadata i8* %77, metadata !4527, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %76, metadata !4593, metadata !DIExpression()), !dbg !4667
  store i32 0, i32* %16, align 4, !dbg !4698
  store i32 0, i32* %17, align 8, !dbg !4699
  %78 = lshr i24 %75, 16, !dbg !4697
  call void @llvm.dbg.value(metadata i24 %78, metadata !4600, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4667
  %79 = lshr i24 %75, 11, !dbg !4700
  %80 = and i24 %79, 15, !dbg !4700
  %81 = zext i24 %80 to i32, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %81, metadata !4601, metadata !DIExpression()), !dbg !4667
  %82 = trunc i24 %78 to i3, !dbg !4701
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4701

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4702

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4705
  call void @llvm.dbg.value(metadata i8* %85, metadata !4527, metadata !DIExpression()), !dbg !4653
  %86 = bitcast i8* %77 to i32*, !dbg !4705
  %87 = load i32, i32* %86, align 4, !dbg !4705
  %88 = sext i32 %87 to i64, !dbg !4705
  store i64 %88, i64* %20, align 8, !dbg !4707
  br label %115, !dbg !4708

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4709
  call void @llvm.dbg.value(metadata i8* %90, metadata !4527, metadata !DIExpression()), !dbg !4653
  %91 = bitcast i8* %77 to i32*, !dbg !4709
  %92 = load i32, i32* %91, align 4, !dbg !4709
  %93 = sext i32 %92 to i64, !dbg !4709
  store i64 %93, i64* %20, align 8, !dbg !4712
  br label %115, !dbg !4713

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4714
  %96 = add i32 %95, 7, !dbg !4714
  %97 = and i32 %96, -8, !dbg !4714
  %98 = inttoptr i32 %97 to i8*, !dbg !4714
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4714
  call void @llvm.dbg.value(metadata i8* %99, metadata !4527, metadata !DIExpression()), !dbg !4653
  %100 = inttoptr i32 %97 to i64*, !dbg !4714
  %101 = load i64, i64* %100, align 8, !dbg !4714
  store i64 %101, i64* %20, align 8, !dbg !4715
  br label %115, !dbg !4716

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4717
  %104 = add i32 %103, 7, !dbg !4717
  %105 = and i32 %104, -8, !dbg !4717
  %106 = inttoptr i32 %105 to i8*, !dbg !4717
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4717
  call void @llvm.dbg.value(metadata i8* %107, metadata !4527, metadata !DIExpression()), !dbg !4653
  %108 = inttoptr i32 %105 to i64*, !dbg !4717
  %109 = load i64, i64* %108, align 8, !dbg !4717
  store i64 %109, i64* %20, align 8, !dbg !4718
  br label %115, !dbg !4719

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4720
  call void @llvm.dbg.value(metadata i8* %111, metadata !4527, metadata !DIExpression()), !dbg !4653
  %112 = bitcast i8* %77 to i32*, !dbg !4720
  %113 = load i32, i32* %112, align 4, !dbg !4720
  %114 = sext i32 %113 to i64, !dbg !4721
  store i64 %114, i64* %20, align 8, !dbg !4722
  br label %115, !dbg !4723

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4724
  call void @llvm.dbg.value(metadata i8* %117, metadata !4527, metadata !DIExpression()), !dbg !4653
  %118 = trunc i24 %79 to i4, !dbg !4725
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4725

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4726
  %121 = ashr exact i64 %120, 56, !dbg !4726
  store i64 %121, i64* %20, align 8, !dbg !4729
  br label %177, !dbg !4730

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4731
  %124 = ashr exact i64 %123, 48, !dbg !4731
  store i64 %124, i64* %20, align 8, !dbg !4734
  br label %177, !dbg !4735

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4736

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4739
  call void @llvm.dbg.value(metadata i8* %127, metadata !4527, metadata !DIExpression()), !dbg !4653
  %128 = bitcast i8* %77 to i32*, !dbg !4739
  %129 = load i32, i32* %128, align 4, !dbg !4739
  %130 = zext i32 %129 to i64, !dbg !4739
  store i64 %130, i64* %20, align 8, !dbg !4741
  br label %157, !dbg !4742

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4743
  call void @llvm.dbg.value(metadata i8* %132, metadata !4527, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %132, metadata !4527, metadata !DIExpression()), !dbg !4653
  %133 = bitcast i8* %77 to i32*, !dbg !4743
  %134 = load i32, i32* %133, align 4, !dbg !4743
  %135 = zext i32 %134 to i64, !dbg !4743
  store i64 %135, i64* %20, align 8, !dbg !4743
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4745
  %138 = add i32 %137, 7, !dbg !4745
  %139 = and i32 %138, -8, !dbg !4745
  %140 = inttoptr i32 %139 to i8*, !dbg !4745
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4745
  call void @llvm.dbg.value(metadata i8* %141, metadata !4527, metadata !DIExpression()), !dbg !4653
  %142 = inttoptr i32 %139 to i64*, !dbg !4745
  %143 = load i64, i64* %142, align 8, !dbg !4745
  store i64 %143, i64* %20, align 8, !dbg !4746
  br label %157, !dbg !4747

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4748
  %146 = add i32 %145, 7, !dbg !4748
  %147 = and i32 %146, -8, !dbg !4748
  %148 = inttoptr i32 %147 to i8*, !dbg !4748
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4748
  call void @llvm.dbg.value(metadata i8* %149, metadata !4527, metadata !DIExpression()), !dbg !4653
  %150 = inttoptr i32 %147 to i64*, !dbg !4748
  %151 = load i64, i64* %150, align 8, !dbg !4748
  store i64 %151, i64* %20, align 8, !dbg !4749
  br label %157, !dbg !4750

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4751
  call void @llvm.dbg.value(metadata i8* %153, metadata !4527, metadata !DIExpression()), !dbg !4653
  %154 = bitcast i8* %77 to i32*, !dbg !4751
  %155 = load i32, i32* %154, align 4, !dbg !4751
  %156 = zext i32 %155 to i64, !dbg !4752
  store i64 %156, i64* %20, align 8, !dbg !4753
  br label %157, !dbg !4754

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4755
  call void @llvm.dbg.value(metadata i8* %159, metadata !4527, metadata !DIExpression()), !dbg !4653
  %160 = trunc i24 %79 to i4, !dbg !4756
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4756

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4757
  store i64 %162, i64* %20, align 8, !dbg !4760
  br label %177, !dbg !4761

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4762
  store i64 %164, i64* %20, align 8, !dbg !4765
  br label %177, !dbg !4766

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4767
  %167 = add i32 %166, 7, !dbg !4767
  %168 = and i32 %167, -8, !dbg !4767
  %169 = inttoptr i32 %168 to i8*, !dbg !4767
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4767
  call void @llvm.dbg.value(metadata i8* %170, metadata !4527, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %170, metadata !4527, metadata !DIExpression()), !dbg !4653
  %171 = inttoptr i32 %168 to double*, !dbg !4767
  %172 = load double, double* %171, align 8, !dbg !4767
  store double %172, double* %19, align 8, !dbg !4767
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4771
  call void @llvm.dbg.value(metadata i8* %174, metadata !4527, metadata !DIExpression()), !dbg !4653
  %175 = bitcast i8* %77 to i8**, !dbg !4771
  %176 = load i8*, i8** %175, align 4, !dbg !4771
  store i8* %176, i8** %18, align 8, !dbg !4774
  br label %177, !dbg !4775

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4667
  call void @llvm.dbg.value(metadata i8* %178, metadata !4527, metadata !DIExpression()), !dbg !4653
  %179 = and i24 %75, 3, !dbg !4776
  %180 = icmp eq i24 %179, 0, !dbg !4776
  br i1 %180, label %185, label %181, !dbg !4776

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !4777
  call void @llvm.dbg.value(metadata i32 %182, metadata !4602, metadata !DIExpression()), !dbg !4778
  %183 = icmp slt i32 %182, 0, !dbg !4779
  %184 = add i32 %182, %29, !dbg !4777
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4781
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4782

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %188, metadata !4606, metadata !DIExpression()), !dbg !4784
  %189 = icmp slt i32 %188, 0, !dbg !4785
  %190 = add i32 %29, 1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4787
  call void @llvm.dbg.value(metadata i8* %192, metadata !4594, metadata !DIExpression()), !dbg !4667
  %193 = icmp sgt i32 %76, -1, !dbg !4788
  br i1 %193, label %194, label %196, !dbg !4790

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %195, metadata !4609, metadata !DIExpression()), !dbg !4793
  br label %241, !dbg !4794

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !4795
  call void @llvm.dbg.value(metadata i32 %197, metadata !4609, metadata !DIExpression()), !dbg !4793
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4594, metadata !DIExpression()), !dbg !4667
  %199 = load i64, i64* %20, align 8, !dbg !4797
  %200 = trunc i64 %199 to i8, !dbg !4798
  store i8 %200, i8* %10, align 1, !dbg !4799
  call void @llvm.dbg.value(metadata i8* %23, metadata !4595, metadata !DIExpression()), !dbg !4667
  br label %245, !dbg !4800

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4801
  %203 = icmp eq i24 %202, 0, !dbg !4801
  %204 = trunc i24 %75 to i8, !dbg !4803
  %205 = shl i8 %204, 1, !dbg !4803
  %206 = and i8 %205, 32, !dbg !4803
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4803
  call void @llvm.dbg.value(metadata i8 %207, metadata !4596, metadata !DIExpression()), !dbg !4667
  %208 = load i64, i64* %20, align 8, !dbg !4804
  call void @llvm.dbg.value(metadata i64 %208, metadata !4534, metadata !DIExpression()), !dbg !4653
  %209 = icmp slt i64 %208, 0, !dbg !4805
  br i1 %209, label %210, label %212, !dbg !4807

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4596, metadata !DIExpression()), !dbg !4667
  %211 = sub nsw i64 0, %208, !dbg !4808
  store i64 %211, i64* %20, align 8, !dbg !4810
  br label %212, !dbg !4811

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4667
  call void @llvm.dbg.value(metadata i8 %213, metadata !4596, metadata !DIExpression()), !dbg !4667
  %214 = load i64, i64* %20, align 8, !dbg !4812
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4813
  call void @llvm.dbg.value(metadata i8* %215, metadata !4594, metadata !DIExpression()), !dbg !4667
  br label %216, !dbg !4814

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4815
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4816
  call void @llvm.dbg.value(metadata i8* %218, metadata !4594, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8 %217, metadata !4596, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.label(metadata !4652), !dbg !4817
  %219 = icmp sgt i32 %76, -1, !dbg !4818
  br i1 %219, label %222, label %220, !dbg !4819

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4820
  br label %245, !dbg !4819

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4822
  %224 = sub i32 %22, %223, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %224, metadata !4611, metadata !DIExpression()), !dbg !4823
  %225 = load i24, i24* %15, align 8, !dbg !4824
  %226 = and i24 %225, -65, !dbg !4824
  store i24 %226, i24* %15, align 8, !dbg !4824
  %227 = icmp ugt i32 %76, %224, !dbg !4825
  br i1 %227, label %228, label %245, !dbg !4827

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4828
  store i32 %229, i32* %16, align 4, !dbg !4830
  br label %245, !dbg !4831

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4832
  %232 = icmp eq i8* %231, null, !dbg !4834
  br i1 %232, label %245, label %233, !dbg !4835

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4836
  %235 = zext i32 %234 to i64, !dbg !4836
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %236, metadata !4594, metadata !DIExpression()), !dbg !4667
  %237 = load i24, i24* %15, align 8, !dbg !4839
  %238 = or i24 %237, 1048576, !dbg !4839
  store i24 %238, i24* %15, align 8, !dbg !4839
  store i8 120, i8* %21, align 1, !dbg !4840
  br label %216, !dbg !4841

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4842
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !4845
  br label %363, !dbg !4846

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4847
  call void @llvm.dbg.value(metadata i32 %242, metadata !4609, metadata !DIExpression()), !dbg !4793
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4848
  call void @llvm.dbg.value(metadata i32 -1, metadata !4593, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %29, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %192, metadata !4594, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8* %243, metadata !4595, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8 0, metadata !4596, metadata !DIExpression()), !dbg !4667
  %244 = icmp eq i8* %192, null, !dbg !4849
  br i1 %244, label %363, label %245, !dbg !4851, !llvm.loop !4663

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4820
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4667
  call void @llvm.dbg.value(metadata i32 0, metadata !4615, metadata !DIExpression()), !dbg !4667
  %250 = zext i8 %249 to i32, !dbg !4852
  %251 = icmp eq i8 %249, 0, !dbg !4854
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  call void @llvm.dbg.value(metadata i32 undef, metadata !4614, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  call void @llvm.dbg.value(metadata i32 undef, metadata !4614, metadata !DIExpression()), !dbg !4667
  %252 = icmp sgt i32 %58, 0, !dbg !4855
  br i1 %252, label %253, label %302, !dbg !4856

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4820
  %255 = icmp eq i24 %254, 0, !dbg !4820
  %256 = ptrtoint i8* %248 to i32, !dbg !4857
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  %257 = ptrtoint i8* %247 to i32, !dbg !4857
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  %258 = xor i1 %251, true, !dbg !4858
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  %259 = sext i1 %258 to i32, !dbg !4858
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  %260 = lshr i24 %246, 19, !dbg !4859
  %261 = and i24 %260, 1, !dbg !4859
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4859
  %263 = zext i24 %262 to i32, !dbg !4859
  %264 = add i32 %257, %259, !dbg !4859
  %265 = add i32 %256, %263, !dbg !4859
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  %266 = and i24 %246, 4194304, !dbg !4860
  %267 = icmp eq i24 %266, 0, !dbg !4860
  %268 = load i32, i32* %16, align 4, !dbg !4862
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4667
  call void @llvm.dbg.value(metadata i32 undef, metadata !4614, metadata !DIExpression()), !dbg !4667
  %269 = load i32, i32* %17, align 8, !dbg !4863
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4863
  call void @llvm.dbg.value(metadata i32 undef, metadata !4614, metadata !DIExpression()), !dbg !4667
  %271 = add i32 %264, %58, !dbg !4863
  %272 = add i32 %265, %268, !dbg !4863
  %273 = add i32 %272, %270, !dbg !4864
  %274 = sub i32 %271, %273, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %274, metadata !4592, metadata !DIExpression()), !dbg !4667
  %275 = and i24 %246, 4, !dbg !4865
  %276 = icmp eq i24 %275, 0, !dbg !4865
  br i1 %276, label %277, label %302, !dbg !4866

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4616, metadata !DIExpression()), !dbg !4867
  %278 = and i24 %246, 64, !dbg !4868
  %279 = icmp eq i24 %278, 0, !dbg !4868
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4869
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4869
  %282 = select i1 %279, i32 32, i32 48, !dbg !4869
  br i1 %280, label %287, label %283, !dbg !4869

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !4870
  call void @llvm.dbg.value(metadata i32 %284, metadata !4621, metadata !DIExpression()), !dbg !4871
  %285 = icmp slt i32 %284, 0, !dbg !4872
  %286 = add i32 %29, 1, !dbg !4870
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4667
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %290, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8 undef, metadata !4616, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i8 %288, metadata !4596, metadata !DIExpression()), !dbg !4667
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4874
  %292 = add i32 %291, -1, !dbg !4874
  br label %293, !dbg !4874

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4875
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %295, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %294, metadata !4592, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %294, metadata !4592, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4667
  %296 = icmp sgt i32 %294, 0, !dbg !4876
  br i1 %296, label %297, label %302, !dbg !4874

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4877
  call void @llvm.dbg.value(metadata i32 %298, metadata !4592, metadata !DIExpression()), !dbg !4667
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !4878
  call void @llvm.dbg.value(metadata i32 %299, metadata !4627, metadata !DIExpression()), !dbg !4879
  %300 = icmp slt i32 %299, 0, !dbg !4880
  %301 = add i32 %295, 1, !dbg !4878
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %300, label %361, label %293, !llvm.loop !4882

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4667
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4667
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %305, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %304, metadata !4592, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i8 %303, metadata !4596, metadata !DIExpression()), !dbg !4667
  %306 = icmp eq i8 %303, 0, !dbg !4884
  br i1 %306, label %312, label %307, !dbg !4885

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4886
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %309, metadata !4630, metadata !DIExpression()), !dbg !4888
  %310 = icmp slt i32 %309, 0, !dbg !4889
  %311 = add i32 %305, 1, !dbg !4887
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %313, metadata !4533, metadata !DIExpression()), !dbg !4653
  %314 = lshr i24 %246, 20, !dbg !4891
  %315 = lshr i24 %246, 19, !dbg !4892
  %316 = or i24 %314, %315, !dbg !4893
  %317 = and i24 %316, 1, !dbg !4893
  %318 = icmp eq i24 %317, 0, !dbg !4893
  br i1 %318, label %323, label %319, !dbg !4894

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %320, metadata !4634, metadata !DIExpression()), !dbg !4896
  %321 = icmp slt i32 %320, 0, !dbg !4897
  %322 = add i32 %313, 1, !dbg !4895
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %324, metadata !4533, metadata !DIExpression()), !dbg !4653
  %325 = and i24 %246, 1048576, !dbg !4899
  %326 = icmp eq i24 %325, 0, !dbg !4899
  br i1 %326, label %333, label %327, !dbg !4900

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4901
  %329 = zext i8 %328 to i32, !dbg !4901
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %330, metadata !4640, metadata !DIExpression()), !dbg !4902
  %331 = icmp slt i32 %330, 0, !dbg !4903
  %332 = add i32 %324, 1, !dbg !4901
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %334, metadata !4533, metadata !DIExpression()), !dbg !4653
  %335 = load i32, i32* %16, align 4, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %335, metadata !4615, metadata !DIExpression()), !dbg !4667
  br label %336, !dbg !4906

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4907
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %338, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %337, metadata !4615, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4667
  %339 = icmp sgt i32 %337, 0, !dbg !4908
  br i1 %339, label %340, label %345, !dbg !4906

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %341, metadata !4615, metadata !DIExpression()), !dbg !4667
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %342, metadata !4644, metadata !DIExpression()), !dbg !4911
  %343 = icmp slt i32 %342, 0, !dbg !4912
  %344 = add i32 %338, 1, !dbg !4910
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %343, label %361, label %336, !llvm.loop !4914

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %346, metadata !4647, metadata !DIExpression()), !dbg !4917
  %347 = icmp slt i32 %346, 0, !dbg !4918
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %349, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %304, metadata !4592, metadata !DIExpression()), !dbg !4667
  %350 = icmp sgt i32 %304, 0, !dbg !4920
  br i1 %350, label %351, label %363, !dbg !4921

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4921
  %353 = add i32 %352, %338, !dbg !4921
  br label %354, !dbg !4921

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %355, metadata !4592, metadata !DIExpression()), !dbg !4667
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %356, metadata !4649, metadata !DIExpression()), !dbg !4923
  %357 = icmp slt i32 %356, 0, !dbg !4924
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4926
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %359, metadata !4592, metadata !DIExpression()), !dbg !4667
  %360 = icmp sgt i32 %355, 1, !dbg !4920
  br i1 %360, label %354, label %363, !dbg !4921, !llvm.loop !4927

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4664
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4657
  call void @llvm.dbg.value(metadata i32 %364, metadata !4533, metadata !DIExpression()), !dbg !4653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4664
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4653
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4929
  ret i32 %366, !dbg !4929
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4930 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4934, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.value(metadata i8* %1, metadata !4935, metadata !DIExpression()), !dbg !4936
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4937
  store i24 0, i24* %3, align 4, !dbg !4937
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4937
  store i8 0, i8* %4, align 1, !dbg !4937
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4937
  store i32 0, i32* %5, align 4, !dbg !4937
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4937
  store i32 0, i32* %6, align 4, !dbg !4937
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4938
  call void @llvm.dbg.value(metadata i8* %7, metadata !4935, metadata !DIExpression()), !dbg !4936
  %8 = load i8, i8* %7, align 1, !dbg !4939
  %9 = icmp eq i8 %8, 37, !dbg !4941
  br i1 %9, label %10, label %12, !dbg !4942

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4943
  call void @llvm.dbg.value(metadata i8* %11, metadata !4935, metadata !DIExpression()), !dbg !4936
  store i8 37, i8* %4, align 1, !dbg !4945
  br label %18, !dbg !4946

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !4947
  call void @llvm.dbg.value(metadata i8* %13, metadata !4935, metadata !DIExpression()), !dbg !4936
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %14, metadata !4935, metadata !DIExpression()), !dbg !4936
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !4949
  call void @llvm.dbg.value(metadata i8* %15, metadata !4935, metadata !DIExpression()), !dbg !4936
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !4950
  call void @llvm.dbg.value(metadata i8* %16, metadata !4935, metadata !DIExpression()), !dbg !4936
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !4951
  call void @llvm.dbg.value(metadata i8* %17, metadata !4935, metadata !DIExpression()), !dbg !4936
  br label %18, !dbg !4952

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4936
  ret i8* %19, !dbg !4953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4954 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4958, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i8* %1, metadata !4959, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i8* %2, metadata !4960, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i8* %3, metadata !4961, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i32 0, metadata !4962, metadata !DIExpression()), !dbg !4965
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4966

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4967
  call void @llvm.dbg.value(metadata i32 %9, metadata !4962, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i8* %8, metadata !4960, metadata !DIExpression()), !dbg !4965
  %10 = icmp ult i8* %8, %3, !dbg !4968
  br i1 %10, label %11, label %13, !dbg !4969

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4970
  br label %17, !dbg !4969

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4971

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4972
  %16 = icmp eq i8 %15, 0, !dbg !4971
  br i1 %16, label %24, label %17, !dbg !4966

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4970
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4973
  call void @llvm.dbg.value(metadata i8* %19, metadata !4960, metadata !DIExpression()), !dbg !4965
  %20 = zext i8 %18 to i32, !dbg !4974
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !4975
  call void @llvm.dbg.value(metadata i32 %21, metadata !4963, metadata !DIExpression()), !dbg !4976
  %22 = icmp slt i32 %21, 0, !dbg !4977
  %23 = add i32 %9, 1, !dbg !4979
  call void @llvm.dbg.value(metadata i32 undef, metadata !4962, metadata !DIExpression()), !dbg !4965
  br i1 %22, label %24, label %7, !llvm.loop !4980

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4965
  ret i32 %25, !dbg !4982
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4983 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4987, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4988, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i8* %2, metadata !4989, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i8* %3, metadata !4990, metadata !DIExpression()), !dbg !4997
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4998
  %6 = load i8, i8* %5, align 1, !dbg !4998
  %7 = zext i8 %6 to i32, !dbg !4999
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !5000
  %9 = icmp eq i32 %8, 0, !dbg !5000
  call void @llvm.dbg.value(metadata i1 %9, metadata !4991, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4997
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %10, metadata !4992, metadata !DIExpression()), !dbg !4997
  %11 = ptrtoint i8* %3 to i32, !dbg !5002
  %12 = ptrtoint i8* %2 to i32, !dbg !5002
  %13 = sub i32 %11, %12, !dbg !5002
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5003
  call void @llvm.dbg.value(metadata i8* %14, metadata !4994, metadata !DIExpression()), !dbg !4997
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5004

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4997
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4987, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i8* %18, metadata !4994, metadata !DIExpression()), !dbg !4997
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5005
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %25, metadata !4995, metadata !DIExpression()), !dbg !5007
  %26 = icmp ult i32 %25, 10, !dbg !5008
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5009
  %28 = add i32 %27, %25, !dbg !5007
  %29 = trunc i32 %28 to i8, !dbg !5009
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5010
  call void @llvm.dbg.value(metadata i8* %30, metadata !4994, metadata !DIExpression()), !dbg !4997
  store i8 %29, i8* %30, align 1, !dbg !5011
  call void @llvm.dbg.value(metadata i64 %22, metadata !4987, metadata !DIExpression()), !dbg !4997
  %31 = icmp uge i64 %19, %15, !dbg !5012
  %32 = icmp ugt i8* %30, %2, !dbg !5013
  %33 = and i1 %31, %32, !dbg !5013
  br i1 %33, label %17, label %34, !dbg !5014, !llvm.loop !5015

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5017
  %36 = load i24, i24* %35, align 4, !dbg !5017
  %37 = and i24 %36, 32, !dbg !5017
  %38 = icmp eq i24 %37, 0, !dbg !5017
  br i1 %38, label %44, label %39, !dbg !5019

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5020

40:                                               ; preds = %39
  br label %41, !dbg !5022

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5026
  store i24 %43, i24* %35, align 4, !dbg !5026
  br label %44, !dbg !5027

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5028 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5034, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %1, metadata !5035, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i32 %2, metadata !5036, metadata !DIExpression()), !dbg !5037
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5038
  %5 = load i24, i24* %4, align 4, !dbg !5038
  %6 = lshr i24 %5, 11, !dbg !5038
  %7 = and i24 %6, 15, !dbg !5038
  %8 = zext i24 %7 to i32, !dbg !5038
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5039

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5040
  store i32 %2, i32* %10, align 4, !dbg !5042
  br label %28, !dbg !5043

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5044
  store i8 %12, i8* %1, align 1, !dbg !5045
  br label %28, !dbg !5046

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5047
  %15 = bitcast i8* %1 to i16*, !dbg !5048
  store i16 %14, i16* %15, align 2, !dbg !5049
  br label %28, !dbg !5050

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5051
  store i32 %2, i32* %17, align 4, !dbg !5052
  br label %28, !dbg !5053

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5054
  %20 = bitcast i8* %1 to i64*, !dbg !5055
  store i64 %19, i64* %20, align 8, !dbg !5056
  br label %28, !dbg !5057

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5058
  %23 = bitcast i8* %1 to i64*, !dbg !5059
  store i64 %22, i64* %23, align 8, !dbg !5060
  br label %28, !dbg !5061

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5062
  store i32 %2, i32* %25, align 4, !dbg !5063
  br label %28, !dbg !5064

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5065
  store i32 %2, i32* %27, align 4, !dbg !5066
  br label %28, !dbg !5067

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5068
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !5069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5072, metadata !DIExpression()), !dbg !5073
  %2 = add i32 %0, -65, !dbg !5074
  %3 = icmp ult i32 %2, 26, !dbg !5075
  %4 = zext i1 %3 to i32, !dbg !5075
  ret i32 %4, !dbg !5076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !5077 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5081, metadata !DIExpression()), !dbg !5082
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5083

2:                                                ; preds = %1
  br label %4, !dbg !5084

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5086

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5087
  ret i32 %5, !dbg !5088
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5089 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5091, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.value(metadata i8* %1, metadata !5092, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.value(metadata i8 1, metadata !5093, metadata !DIExpression()), !dbg !5094
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5095

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5093, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.value(metadata i8* %5, metadata !5092, metadata !DIExpression()), !dbg !5094
  %6 = load i8, i8* %5, align 1, !dbg !5096
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5098

7:                                                ; preds = %4
  br label %11, !dbg !5099

8:                                                ; preds = %4
  br label %11, !dbg !5101

9:                                                ; preds = %4
  br label %11, !dbg !5102

10:                                               ; preds = %4
  br label %11, !dbg !5103

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5104
  %14 = or i24 %13, %12, !dbg !5104
  store i24 %14, i24* %3, align 4, !dbg !5104
  call void @llvm.dbg.value(metadata i8 poison, metadata !5093, metadata !DIExpression()), !dbg !5094
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5092, metadata !DIExpression()), !dbg !5094
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5093, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.value(metadata i8* %15, metadata !5092, metadata !DIExpression()), !dbg !5094
  %17 = load i24, i24* %3, align 4, !dbg !5105
  %18 = and i24 %17, 68, !dbg !5107
  %19 = icmp eq i24 %18, 68, !dbg !5107
  br i1 %19, label %20, label %22, !dbg !5107

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5108
  store i24 %21, i24* %3, align 4, !dbg !5108
  br label %22, !dbg !5110

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5111
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5112 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5114, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8* %1, metadata !5115, metadata !DIExpression()), !dbg !5118
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5119
  %5 = load i24, i24* %4, align 4, !dbg !5120
  %6 = or i24 %5, 128, !dbg !5120
  store i24 %6, i24* %4, align 4, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %1, metadata !5115, metadata !DIExpression()), !dbg !5118
  %7 = load i8, i8* %1, align 1, !dbg !5121
  %8 = icmp eq i8 %7, 42, !dbg !5123
  br i1 %8, label %9, label %12, !dbg !5124

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5125
  store i24 %10, i24* %4, align 4, !dbg !5125
  call void @llvm.dbg.value(metadata i8* %1, metadata !5115, metadata !DIExpression()), !dbg !5118
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %11, metadata !5115, metadata !DIExpression()), !dbg !5118
  store i8* %11, i8** %3, align 4, !dbg !5127
  br label %29, !dbg !5128

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5116, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8** %3, metadata !5115, metadata !DIExpression(DW_OP_deref)), !dbg !5118
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %13, metadata !5117, metadata !DIExpression()), !dbg !5118
  %14 = load i8*, i8** %3, align 4, !dbg !5130
  call void @llvm.dbg.value(metadata i8* %14, metadata !5115, metadata !DIExpression()), !dbg !5118
  %15 = icmp eq i8* %14, %1, !dbg !5132
  br i1 %15, label %29, label %16, !dbg !5133

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5134
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5136
  store i32 %13, i32* %18, align 4, !dbg !5137
  %19 = lshr i32 %13, 31, !dbg !5138
  %20 = lshr i24 %17, 1, !dbg !5139
  %21 = and i24 %20, 1, !dbg !5139
  %22 = zext i24 %21 to i32, !dbg !5139
  %23 = or i32 %19, %22, !dbg !5139
  %24 = trunc i32 %23 to i24, !dbg !5139
  %25 = shl nuw nsw i24 %24, 1, !dbg !5139
  %26 = and i24 %17, -131, !dbg !5139
  %27 = or i24 %26, 128, !dbg !5139
  %28 = or i24 %25, %27, !dbg !5139
  store i24 %28, i24* %4, align 4, !dbg !5139
  br label %29, !dbg !5140

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5118
  ret i8* %30, !dbg !5141
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5142 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5144, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i8* %1, metadata !5145, metadata !DIExpression()), !dbg !5147
  %4 = load i8, i8* %1, align 1, !dbg !5148
  %5 = icmp eq i8 %4, 46, !dbg !5149
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5150
  %7 = load i24, i24* %6, align 4, !dbg !5151
  %8 = select i1 %5, i24 512, i24 0, !dbg !5151
  %9 = and i24 %7, -513, !dbg !5151
  %10 = or i24 %9, %8, !dbg !5151
  store i24 %10, i24* %6, align 4, !dbg !5151
  br i1 %5, label %11, label %32, !dbg !5152

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5145, metadata !DIExpression()), !dbg !5147
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5153
  call void @llvm.dbg.value(metadata i8* %12, metadata !5145, metadata !DIExpression()), !dbg !5147
  store i8* %12, i8** %3, align 4, !dbg !5153
  %13 = load i8, i8* %12, align 1, !dbg !5154
  %14 = icmp eq i8 %13, 42, !dbg !5156
  br i1 %14, label %15, label %18, !dbg !5157

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5158
  store i24 %16, i24* %6, align 4, !dbg !5158
  call void @llvm.dbg.value(metadata i8* %12, metadata !5145, metadata !DIExpression()), !dbg !5147
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5160
  call void @llvm.dbg.value(metadata i8* %17, metadata !5145, metadata !DIExpression()), !dbg !5147
  store i8* %17, i8** %3, align 4, !dbg !5160
  br label %32, !dbg !5161

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5145, metadata !DIExpression(DW_OP_deref)), !dbg !5147
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %19, metadata !5146, metadata !DIExpression()), !dbg !5147
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5163
  store i32 %19, i32* %20, align 4, !dbg !5164
  %21 = lshr i32 %19, 31, !dbg !5165
  %22 = load i24, i24* %6, align 4, !dbg !5166
  %23 = lshr i24 %22, 1, !dbg !5166
  %24 = and i24 %23, 1, !dbg !5166
  %25 = zext i24 %24 to i32, !dbg !5166
  %26 = or i32 %21, %25, !dbg !5166
  %27 = trunc i32 %26 to i24, !dbg !5166
  %28 = shl nuw nsw i24 %27, 1, !dbg !5166
  %29 = and i24 %22, -3, !dbg !5166
  %30 = or i24 %28, %29, !dbg !5166
  store i24 %30, i24* %6, align 4, !dbg !5166
  %31 = load i8*, i8** %3, align 4, !dbg !5167
  call void @llvm.dbg.value(metadata i8* %31, metadata !5145, metadata !DIExpression()), !dbg !5147
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5147
  ret i8* %33, !dbg !5168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5169 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5171, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i8* %1, metadata !5172, metadata !DIExpression()), !dbg !5173
  %3 = load i8, i8* %1, align 1, !dbg !5174
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5175

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5176
  call void @llvm.dbg.value(metadata i8* %5, metadata !5172, metadata !DIExpression()), !dbg !5173
  %6 = load i8, i8* %5, align 1, !dbg !5179
  %7 = icmp eq i8 %6, 104, !dbg !5180
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5181
  %9 = load i24, i24* %8, align 4, !dbg !5181
  %10 = and i24 %9, -30721, !dbg !5181
  br i1 %7, label %11, label %14, !dbg !5182

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5183
  store i24 %12, i24* %8, align 4, !dbg !5183
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5185
  call void @llvm.dbg.value(metadata i8* %13, metadata !5172, metadata !DIExpression()), !dbg !5173
  br label %56, !dbg !5186

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5187
  store i24 %15, i24* %8, align 4, !dbg !5187
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5189
  call void @llvm.dbg.value(metadata i8* %17, metadata !5172, metadata !DIExpression()), !dbg !5173
  %18 = load i8, i8* %17, align 1, !dbg !5191
  %19 = icmp eq i8 %18, 108, !dbg !5192
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5193
  %21 = load i24, i24* %20, align 4, !dbg !5193
  %22 = and i24 %21, -30721, !dbg !5193
  br i1 %19, label %23, label %26, !dbg !5194

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5195
  store i24 %24, i24* %20, align 4, !dbg !5195
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5197
  call void @llvm.dbg.value(metadata i8* %25, metadata !5172, metadata !DIExpression()), !dbg !5173
  br label %56, !dbg !5198

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5199
  store i24 %27, i24* %20, align 4, !dbg !5199
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5201
  %30 = load i24, i24* %29, align 4, !dbg !5202
  %31 = and i24 %30, -30721, !dbg !5202
  %32 = or i24 %31, 10240, !dbg !5202
  store i24 %32, i24* %29, align 4, !dbg !5202
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %33, metadata !5172, metadata !DIExpression()), !dbg !5173
  br label %56, !dbg !5204

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5205
  %36 = load i24, i24* %35, align 4, !dbg !5206
  %37 = and i24 %36, -30721, !dbg !5206
  %38 = or i24 %37, 12288, !dbg !5206
  store i24 %38, i24* %35, align 4, !dbg !5206
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5207
  call void @llvm.dbg.value(metadata i8* %39, metadata !5172, metadata !DIExpression()), !dbg !5173
  br label %56, !dbg !5208

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5209
  %42 = load i24, i24* %41, align 4, !dbg !5210
  %43 = and i24 %42, -30721, !dbg !5210
  %44 = or i24 %43, 14336, !dbg !5210
  store i24 %44, i24* %41, align 4, !dbg !5210
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %45, metadata !5172, metadata !DIExpression()), !dbg !5173
  br label %56, !dbg !5212

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5213
  %48 = load i24, i24* %47, align 4, !dbg !5214
  %49 = and i24 %48, -30723, !dbg !5214
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5215
  call void @llvm.dbg.value(metadata i8* %50, metadata !5172, metadata !DIExpression()), !dbg !5173
  %51 = or i24 %49, 16386, !dbg !5216
  store i24 %51, i24* %47, align 4, !dbg !5216
  br label %56, !dbg !5217

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5218
  %54 = load i24, i24* %53, align 4, !dbg !5219
  %55 = and i24 %54, -30721, !dbg !5219
  store i24 %55, i24* %53, align 4, !dbg !5219
  br label %56, !dbg !5220

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5172, metadata !DIExpression()), !dbg !5173
  ret i8* %57, !dbg !5221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5222 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5224, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i8* %1, metadata !5225, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i8 0, metadata !5226, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i8* %1, metadata !5225, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5229
  %3 = load i8, i8* %1, align 1, !dbg !5230
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5231
  store i8 %3, i8* %4, align 1, !dbg !5232
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5233

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5234

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5235
  %9 = load i24, i24* %8, align 4, !dbg !5235
  %10 = and i24 %9, -458753, !dbg !5235
  %11 = or i24 %10, %7, !dbg !5235
  call void @llvm.dbg.label(metadata !5227), !dbg !5236
  %12 = and i24 %9, 30720, !dbg !5237
  %13 = icmp eq i24 %12, 16384, !dbg !5237
  %14 = zext i1 %13 to i24, !dbg !5239
  %15 = or i24 %11, %14, !dbg !5239
  %16 = icmp eq i8 %3, 99, !dbg !5240
  br i1 %16, label %17, label %43, !dbg !5242

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5243
  %19 = icmp ne i24 %18, 0, !dbg !5243
  call void @llvm.dbg.value(metadata i1 %19, metadata !5226, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5229
  br label %43, !dbg !5245

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5246
  %22 = load i24, i24* %21, align 4, !dbg !5247
  %23 = and i24 %22, -458753, !dbg !5247
  %24 = or i24 %23, 262144, !dbg !5247
  call void @llvm.dbg.value(metadata i8 1, metadata !5226, metadata !DIExpression()), !dbg !5229
  br label %43, !dbg !5248

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5251
  %27 = load i24, i24* %26, align 4, !dbg !5252
  %28 = and i24 %27, -458753, !dbg !5252
  %29 = or i24 %28, 196608, !dbg !5252
  %30 = and i24 %27, 30720, !dbg !5253
  %31 = icmp eq i24 %30, 16384, !dbg !5253
  br label %43, !dbg !5255

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5256
  %34 = load i24, i24* %33, align 4, !dbg !5257
  %35 = and i24 %34, -458753, !dbg !5257
  %36 = or i24 %35, 196608, !dbg !5257
  %37 = and i24 %34, 30720, !dbg !5258
  %38 = icmp ne i24 %37, 0, !dbg !5258
  br label %43, !dbg !5260

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5261
  %41 = load i24, i24* %40, align 4, !dbg !5262
  %42 = or i24 %41, 1, !dbg !5262
  br label %43, !dbg !5263

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5264
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5265
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5266
  call void @llvm.dbg.value(metadata i8* %48, metadata !5225, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i8 poison, metadata !5226, metadata !DIExpression()), !dbg !5229
  %49 = lshr i24 %44, 1, !dbg !5264
  %50 = and i24 %49, 1, !dbg !5264
  %51 = zext i24 %50 to i32, !dbg !5264
  %52 = or i32 %51, %47, !dbg !5264
  %53 = trunc i32 %52 to i24, !dbg !5264
  %54 = shl nuw nsw i24 %53, 1, !dbg !5264
  %55 = and i24 %44, -3, !dbg !5264
  %56 = or i24 %54, %55, !dbg !5264
  store i24 %56, i24* %46, align 4, !dbg !5264
  ret i8* %48, !dbg !5267
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5268 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5272, metadata !DIExpression()), !dbg !5275
  %2 = load i8*, i8** %0, align 4, !dbg !5276
  call void @llvm.dbg.value(metadata i8* %2, metadata !5273, metadata !DIExpression()), !dbg !5275
  call void @llvm.dbg.value(metadata i32 0, metadata !5274, metadata !DIExpression()), !dbg !5275
  %3 = load i8, i8* %2, align 1, !dbg !5277
  %4 = zext i8 %3 to i32, !dbg !5278
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !5279
  %6 = icmp eq i32 %5, 0, !dbg !5280
  br i1 %6, label %19, label %7, !dbg !5280

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5274, metadata !DIExpression()), !dbg !5275
  call void @llvm.dbg.value(metadata i8* %10, metadata !5273, metadata !DIExpression()), !dbg !5275
  %11 = mul i32 %9, 10, !dbg !5281
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %12, metadata !5273, metadata !DIExpression()), !dbg !5275
  %13 = add i32 %11, -48, !dbg !5284
  %14 = add i32 %13, %8, !dbg !5285
  call void @llvm.dbg.value(metadata i32 %14, metadata !5274, metadata !DIExpression()), !dbg !5275
  %15 = load i8, i8* %12, align 1, !dbg !5277
  %16 = zext i8 %15 to i32, !dbg !5278
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !5279
  %18 = icmp eq i32 %17, 0, !dbg !5280
  br i1 %18, label %19, label %7, !dbg !5280, !llvm.loop !5286

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5275
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5275
  store i8* %20, i8** %0, align 4, !dbg !5288
  ret i32 %21, !dbg !5289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !5290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5292, metadata !DIExpression()), !dbg !5293
  %2 = add i32 %0, -48, !dbg !5294
  %3 = icmp ult i32 %2, 10, !dbg !5295
  %4 = zext i1 %3 to i32, !dbg !5295
  ret i32 %4, !dbg !5296
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5297 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5302, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 %1, metadata !5303, metadata !DIExpression()), !dbg !5304
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5305, !srcloc !5307
  ret void, !dbg !5308
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5309 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5311, metadata !DIExpression()), !dbg !5319
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5320
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5320
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5312, metadata !DIExpression()), !dbg !5321
  call void @llvm.va_start(i8* nonnull %3), !dbg !5322
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5323
  %5 = load i32, i32* %4, align 4, !dbg !5323
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5323
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5323
  call void @llvm.va_end(i8* nonnull %3), !dbg !5324
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5325
  ret void, !dbg !5325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5326 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,11\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5982, !srcloc !5983
  ret void, !dbg !5984
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5985 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5987, metadata !DIExpression()), !dbg !5989
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !5990
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !5991
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5992, !srcloc !6001
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5992
  call void @llvm.dbg.value(metadata i32 %3, metadata !5998, metadata !DIExpression()) #23, !dbg !6002
  call void @llvm.dbg.value(metadata i32 undef, metadata !5999, metadata !DIExpression()) #23, !dbg !6002
  call void @llvm.dbg.value(metadata i32 %3, metadata !5988, metadata !DIExpression()), !dbg !5989
  call void @llvm.dbg.value(metadata i32 %3, metadata !6003, metadata !DIExpression()) #23, !dbg !6008
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6010, !srcloc !6011
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6012
  ret i32 0, !dbg !6013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6014 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6016
  %2 = or i32 %1, 512, !dbg !6016
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6016
  ret void, !dbg !6017
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6018 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6019
  %2 = or i32 %1, 1024, !dbg !6019
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6019
  ret void, !dbg !6020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #6 !dbg !6021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6023, metadata !DIExpression()), !dbg !6024
  ret i32 0, !dbg !6025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6026 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6029, metadata !DIExpression()), !dbg !6037
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6038
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6030, metadata !DIExpression()), !dbg !6039
  call void @llvm.va_start(i8* nonnull %3), !dbg !6040
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6041
  %5 = load i32, i32* %4, align 4, !dbg !6041
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6041
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6041
  call void @llvm.va_end(i8* nonnull %3), !dbg !6042
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6043
  ret void, !dbg !6043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6044 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6049, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.value(metadata i8* %0, metadata !6048, metadata !DIExpression()), !dbg !6050
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !6051
  ret void, !dbg !6052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6057, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i8* %1, metadata !6058, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i32 %2, metadata !6059, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i8* %1, metadata !6060, metadata !DIExpression()), !dbg !6061
  %4 = icmp eq i32 %2, 0, !dbg !6062
  br i1 %4, label %14, label %5, !dbg !6063

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !6061
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6063

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6060, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i32 %10, metadata !6059, metadata !DIExpression()), !dbg !6061
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #24, !dbg !6064
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !6066
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6067
  call void @llvm.dbg.value(metadata i32 %11, metadata !6059, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i8* %12, metadata !6060, metadata !DIExpression()), !dbg !6061
  br i1 %13, label %14, label %8, !dbg !6067, !llvm.loop !6068

14:                                               ; preds = %8, %3
  ret void, !dbg !6070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !6071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6076, metadata !DIExpression()), !dbg !6077
  %2 = add i32 %0, -1, !dbg !6078
  %3 = icmp ult i32 %2, 4, !dbg !6078
  %4 = shl i32 %2, 3, !dbg !6078
  %5 = lshr i32 1145657157, %4, !dbg !6078
  %6 = trunc i32 %5 to i8, !dbg !6078
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6078
  ret i8 %7, !dbg !6079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6080 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6084, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.value(metadata i32 %1, metadata !6085, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.value(metadata i32 0, metadata !6086, metadata !DIExpression()), !dbg !6096
  br label %4, !dbg !6097

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #24, !dbg !6098
  call void @llvm.dbg.value(metadata i32 0, metadata !6088, metadata !DIExpression()), !dbg !6099
  br label %16, !dbg !6100

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6086, metadata !DIExpression()), !dbg !6096
  %6 = icmp ult i32 %5, %1, !dbg !6101
  br i1 %6, label %7, label %11, !dbg !6105

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6106
  %9 = load i8, i8* %8, align 1, !dbg !6106
  %10 = zext i8 %9 to i32, !dbg !6108
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #24, !dbg !6109
  br label %12, !dbg !6110

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #24, !dbg !6111
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6113
  call void @llvm.dbg.value(metadata i32 %13, metadata !6086, metadata !DIExpression()), !dbg !6096
  %14 = icmp eq i32 %13, 8, !dbg !6114
  br i1 %14, label %3, label %4, !dbg !6097, !llvm.loop !6115

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #24, !dbg !6117
  ret void, !dbg !6118

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6088, metadata !DIExpression()), !dbg !6099
  %18 = icmp ult i32 %17, %1, !dbg !6119
  br i1 %18, label %19, label %26, !dbg !6120

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6121
  %21 = load i8, i8* %20, align 1, !dbg !6121
  call void @llvm.dbg.value(metadata i8 %21, metadata !6090, metadata !DIExpression()), !dbg !6122
  %22 = zext i8 %21 to i32, !dbg !6123
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !6124
  %24 = icmp eq i32 %23, 0, !dbg !6125
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6124
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #24, !dbg !6126
  br label %27, !dbg !6127

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #24, !dbg !6128
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6130
  call void @llvm.dbg.value(metadata i32 %28, metadata !6088, metadata !DIExpression()), !dbg !6099
  %29 = icmp eq i32 %28, 8, !dbg !6131
  br i1 %29, label %15, label %16, !dbg !6100, !llvm.loop !6132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !6134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6136, metadata !DIExpression()), !dbg !6137
  %2 = add i32 %0, -32, !dbg !6138
  %3 = icmp ult i32 %2, 95, !dbg !6138
  %4 = zext i1 %3 to i32, !dbg !6138
  ret i32 %4, !dbg !6139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6189, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6190, metadata !DIExpression()), !dbg !6191
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6192
  br i1 %3, label %5, label %4, !dbg !6194

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !6195
  br label %5, !dbg !6197

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !6198
  ret void, !dbg !6199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6200 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6204, metadata !DIExpression()), !dbg !6205
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6206
  %3 = load i32, i32* %2, align 4, !dbg !6206
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6206
  %5 = load i32, i32* %4, align 4, !dbg !6206
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6206
  %7 = load i32, i32* %6, align 4, !dbg !6206
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !6206
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6211
  %9 = load i32, i32* %8, align 4, !dbg !6211
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6211
  %11 = load i32, i32* %10, align 4, !dbg !6211
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6211
  %13 = load i32, i32* %12, align 4, !dbg !6211
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !6211
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6216
  %15 = load i32, i32* %14, align 4, !dbg !6216
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !6216
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6221
  %17 = load i32, i32* %16, align 4, !dbg !6221
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !6221
  ret void, !dbg !6226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6227 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6244, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6245, metadata !DIExpression()), !dbg !6247
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6248
  %4 = load i32, i32* %3, align 4, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %4, metadata !6246, metadata !DIExpression()), !dbg !6247
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !6249
  ret void, !dbg !6250
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !6251 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6255, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.value(metadata i8* %0, metadata !6256, metadata !DIExpression()), !dbg !6258
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6259
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6259
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6257, metadata !DIExpression()), !dbg !6260
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6260
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6261
  %5 = bitcast i8* %4 to i32*, !dbg !6261
  %6 = load i32, i32* %5, align 4, !dbg !6261
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6262
  store i32 %6, i32* %7, align 4, !dbg !6263
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !6264
  unreachable, !dbg !6265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6269, metadata !DIExpression()), !dbg !6270
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !6271
  ret void, !dbg !6272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6277, metadata !DIExpression()), !dbg !6278
  %2 = icmp sgt i32 %0, -1, !dbg !6279
  br i1 %2, label %3, label %8, !dbg !6281

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6282, !srcloc !6284
  %4 = and i32 %0, 31, !dbg !6285
  %5 = shl nuw i32 1, %4, !dbg !6286
  %6 = lshr i32 %0, 5, !dbg !6287
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6288
  store volatile i32 %5, i32* %7, align 4, !dbg !6289
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6290, !srcloc !6291
  br label %8, !dbg !6292

8:                                                ; preds = %3, %1
  ret void, !dbg !6293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6296, metadata !DIExpression()), !dbg !6297
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !6298
  ret void, !dbg !6299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6302, metadata !DIExpression()), !dbg !6303
  %2 = icmp sgt i32 %0, -1, !dbg !6304
  br i1 %2, label %3, label %8, !dbg !6306

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6307
  %5 = shl nuw i32 1, %4, !dbg !6309
  %6 = lshr i32 %0, 5, !dbg !6310
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6311
  store volatile i32 %5, i32* %7, align 4, !dbg !6312
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6313, !srcloc !6317
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6318, !srcloc !6321
  br label %8, !dbg !6322

8:                                                ; preds = %3, %1
  ret void, !dbg !6323
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !6324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6328, metadata !DIExpression()), !dbg !6329
  %2 = lshr i32 %0, 5, !dbg !6330
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6331
  %4 = load volatile i32, i32* %3, align 4, !dbg !6331
  %5 = and i32 %0, 31, !dbg !6332
  %6 = shl nuw i32 1, %5, !dbg !6332
  %7 = and i32 %4, %6, !dbg !6333
  ret i32 %7, !dbg !6334
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6339, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i32 %1, metadata !6340, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i32 %2, metadata !6341, metadata !DIExpression()), !dbg !6342
  %4 = add i32 %1, 1, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %4, metadata !6340, metadata !DIExpression()), !dbg !6342
  %5 = icmp ult i32 %4, 16, !dbg !6346
  br i1 %5, label %7, label %6, !dbg !6349

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6350
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !6350
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6350
  unreachable, !dbg !6350

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !6352
  ret void, !dbg !6353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6358, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i32 %1, metadata !6359, metadata !DIExpression()), !dbg !6360
  %3 = trunc i32 %1 to i8, !dbg !6361
  %4 = shl i8 %3, 4, !dbg !6361
  %5 = and i32 %0, 15, !dbg !6363
  %6 = add nsw i32 %5, -4, !dbg !6363
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6363
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6363
  %9 = icmp slt i32 %0, 0, !dbg !6363
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6363
  store volatile i8 %4, i8* %10, align 1, !dbg !6361
  ret void, !dbg !6364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6365 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6367, metadata !DIExpression()), !dbg !6368
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !6369
  ret void, !dbg !6370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6371 {
  tail call void @z_SysNmiOnReset() #24, !dbg !6373
  tail call void @z_arm_int_exit() #24, !dbg !6374
  ret void, !dbg !6375
}

; Function Attrs: optsize
declare !dbg !6376 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6377 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !6379 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !6381
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !6382
  tail call void @z_bss_zero() #24, !dbg !6383
  tail call void @z_data_copy() #24, !dbg !6384
  tail call void @z_arm_interrupt_init() #24, !dbg !6385
  tail call void @z_cstart() #27, !dbg !6386
  unreachable, !dbg !6386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6387 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6388
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6389, !srcloc !6392
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6393, !srcloc !6396
  ret void, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6398 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6399
  %2 = and i32 %1, -15728641, !dbg !6399
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6399
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6400, !srcloc !6405
  call void @llvm.dbg.value(metadata i32 %3, metadata !6403, metadata !DIExpression()) #23, !dbg !6406
  %4 = and i32 %3, -5, !dbg !6407
  call void @llvm.dbg.value(metadata i32 %4, metadata !6408, metadata !DIExpression()) #23, !dbg !6413
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6417, !srcloc !6396
  ret void, !dbg !6419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6423, metadata !DIExpression()), !dbg !6424
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6425
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6426
  store i32 %0, i32* %3, align 4, !dbg !6427
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6428
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6429
  store i32 %4, i32* %5, align 4, !dbg !6430
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6431
  %7 = or i32 %6, 268435456, !dbg !6431
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6431
  call void @llvm.dbg.value(metadata i32 0, metadata !6432, metadata !DIExpression()) #23, !dbg !6435
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6437, !srcloc !6438
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6439
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6440
  %10 = load i32, i32* %9, align 4, !dbg !6440
  ret i32 %10, !dbg !6441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !6442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6555, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6556, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %2, metadata !6557, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6558, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %4, metadata !6559, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %5, metadata !6560, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %6, metadata !6561, metadata !DIExpression()), !dbg !6563
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6564
  call void @llvm.dbg.value(metadata i8* %8, metadata !6562, metadata !DIExpression()), !dbg !6563
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6565
  %10 = bitcast i8* %9 to i32*, !dbg !6565
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6566
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6567
  %12 = bitcast i8* %8 to i32*, !dbg !6568
  store i32 %11, i32* %12, align 4, !dbg !6569
  %13 = ptrtoint i8* %4 to i32, !dbg !6570
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6571
  %15 = bitcast i8* %14 to i32*, !dbg !6571
  store i32 %13, i32* %15, align 4, !dbg !6572
  %16 = ptrtoint i8* %5 to i32, !dbg !6573
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6574
  %18 = bitcast i8* %17 to i32*, !dbg !6574
  store i32 %16, i32* %18, align 4, !dbg !6575
  %19 = ptrtoint i8* %6 to i32, !dbg !6576
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6577
  %21 = bitcast i8* %20 to i32*, !dbg !6577
  store i32 %19, i32* %21, align 4, !dbg !6578
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6579
  %23 = bitcast i8* %22 to i32*, !dbg !6579
  store i32 16777216, i32* %23, align 4, !dbg !6580
  %24 = ptrtoint i8* %8 to i32, !dbg !6581
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6582
  store i32 %24, i32* %25, align 8, !dbg !6583
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6584
  store i32 0, i32* %26, align 4, !dbg !6585
  ret void, !dbg !6586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6592, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.value(metadata i32 %1, metadata !6593, metadata !DIExpression()), !dbg !6598
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6599
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6594, metadata !DIExpression()), !dbg !6598
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6600
  br i1 %4, label %19, label %5, !dbg !6602

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6597, metadata !DIExpression()), !dbg !6598
  %6 = icmp eq i32 %0, -22, !dbg !6603
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6603
  %8 = load i32, i32* %7, align 4, !dbg !6603
  br i1 %6, label %16, label %9, !dbg !6605

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6603
  %11 = icmp ule i32 %10, %0, !dbg !6603
  %12 = icmp ugt i32 %8, %0, !dbg !6603
  %13 = and i1 %12, %11, !dbg !6603
  %14 = icmp ugt i32 %8, %1, !dbg !6603
  %15 = and i1 %14, %13, !dbg !6603
  br i1 %15, label %18, label %19, !dbg !6603

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6603
  br i1 %17, label %18, label %19, !dbg !6605

18:                                               ; preds = %9, %16
  br label %19, !dbg !6606

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6598
  ret i32 %20, !dbg !6608
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !6609 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6613, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata i8* %1, metadata !6614, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6615, metadata !DIExpression()), !dbg !6616
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6617
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !6618
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6619, !srcloc !6620
  unreachable, !dbg !6621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6622 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6640, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i32 %1, metadata !6641, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i32 %2, metadata !6642, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6643, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i32 0, metadata !6644, metadata !DIExpression()), !dbg !6650
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6651
  call void @llvm.dbg.value(metadata i32 %8, metadata !6645, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6650
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6652
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6652
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6653
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6653
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6649, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i32 0, metadata !6655, metadata !DIExpression()) #23, !dbg !6658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6660, !srcloc !6661
  call void @llvm.dbg.value(metadata i8* %6, metadata !6647, metadata !DIExpression(DW_OP_deref)), !dbg !6650
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !6662
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6648, metadata !DIExpression()), !dbg !6650
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6663
  br i1 %11, label %12, label %13, !dbg !6666

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6667
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #24, !dbg !6667
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6667
  unreachable, !dbg !6667

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6669
  call void @llvm.dbg.value(metadata i32 %14, metadata !6645, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i8* %5, metadata !6646, metadata !DIExpression(DW_OP_deref)), !dbg !6650
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !6670
  call void @llvm.dbg.value(metadata i32 %15, metadata !6644, metadata !DIExpression()), !dbg !6650
  %16 = load i8, i8* %5, align 1, !dbg !6671, !range !6673
  call void @llvm.dbg.value(metadata i8 %16, metadata !6646, metadata !DIExpression()), !dbg !6650
  %17 = icmp eq i8 %16, 0, !dbg !6671
  br i1 %17, label %18, label %35, !dbg !6674

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6675
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !6676
  %21 = load i8, i8* %6, align 1, !dbg !6677, !range !6673
  call void @llvm.dbg.value(metadata i8 %21, metadata !6647, metadata !DIExpression()), !dbg !6650
  %22 = icmp eq i8 %21, 0, !dbg !6677
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6679
  %24 = load i32, i32* %23, align 4, !dbg !6679
  br i1 %22, label %30, label %25, !dbg !6680

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6681
  %27 = icmp eq i32 %26, 0, !dbg !6684
  br i1 %27, label %28, label %34, !dbg !6685

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6686
  br label %32, !dbg !6688

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6689
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6679
  br label %34, !dbg !6691

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !6691
  br label %35, !dbg !6692

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6692
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6692
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6692
  ret void, !dbg !6692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6698, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i32 %1, metadata !6699, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i32 %2, metadata !6700, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i8* %3, metadata !6701, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i8 0, metadata !6702, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6703, metadata !DIExpression()), !dbg !6704
  store i8 0, i8* %3, align 1, !dbg !6705
  %5 = icmp ugt i32 %2, -16777217, !dbg !6706
  br i1 %5, label %6, label %17, !dbg !6708

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6709
  %8 = icmp eq i32 %7, 8, !dbg !6709
  br i1 %8, label %9, label %10, !dbg !6709

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #24, !dbg !6711
  br label %17, !dbg !6717

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6718
  %12 = icmp eq i32 %11, 0, !dbg !6718
  br i1 %12, label %13, label %14, !dbg !6719

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6703, metadata !DIExpression()), !dbg !6704
  store i8 1, i8* %3, align 1, !dbg !6722
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6704
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6703, metadata !DIExpression()), !dbg !6704
  br label %17, !dbg !6725

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6704
  ret %struct.__esf* %18, !dbg !6726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6727 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6731, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.value(metadata i32 %1, metadata !6732, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.value(metadata i8* %2, metadata !6733, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.value(metadata i32 0, metadata !6734, metadata !DIExpression()), !dbg !6735
  store i8 0, i8* %2, align 1, !dbg !6736
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6737

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !6738
  call void @llvm.dbg.value(metadata i32 %5, metadata !6734, metadata !DIExpression()), !dbg !6735
  br label %12, !dbg !6740

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %7, metadata !6734, metadata !DIExpression()), !dbg !6735
  br label %12, !dbg !6742

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6743
  call void @llvm.dbg.value(metadata i32 0, metadata !6734, metadata !DIExpression()), !dbg !6735
  br label %12, !dbg !6744

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !6745
  call void @llvm.dbg.value(metadata i32 0, metadata !6734, metadata !DIExpression()), !dbg !6735
  br label %12, !dbg !6746

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !6747
  br label %12, !dbg !6748

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !6749
  br label %12, !dbg !6750

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6735
  call void @llvm.dbg.value(metadata i32 %13, metadata !6734, metadata !DIExpression()), !dbg !6735
  ret i32 %13, !dbg !6751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6752 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6756, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i8* %1, metadata !6757, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6759
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #24, !dbg !6760
  store i8 0, i8* %1, align 1, !dbg !6765
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6766
  %4 = and i32 %3, 2, !dbg !6768
  %5 = icmp eq i32 %4, 0, !dbg !6769
  br i1 %5, label %7, label %6, !dbg !6770

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #24, !dbg !6771
  br label %38, !dbg !6777

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6778
  %9 = icmp sgt i32 %8, -1, !dbg !6780
  br i1 %9, label %11, label %10, !dbg !6781

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #24, !dbg !6782
  br label %38, !dbg !6788

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6789
  %13 = and i32 %12, 1073741824, !dbg !6791
  %14 = icmp eq i32 %13, 0, !dbg !6792
  br i1 %14, label %37, label %15, !dbg !6793

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #24, !dbg !6794
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !6800
  br i1 %16, label %17, label %21, !dbg !6802

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6803
  %19 = load i32, i32* %18, align 4, !dbg !6803
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !6803
  %20 = load i32, i32* %18, align 4, !dbg !6809
  call void @llvm.dbg.value(metadata i32 %20, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %38, !dbg !6810

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6811
  %23 = and i32 %22, 255, !dbg !6813
  %24 = icmp eq i32 %23, 0, !dbg !6814
  br i1 %24, label %27, label %25, !dbg !6815

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6816
  call void @llvm.dbg.value(metadata i32 %26, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %38, !dbg !6818

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6819
  %29 = and i32 %28, 65280, !dbg !6821
  %30 = icmp eq i32 %29, 0, !dbg !6822
  br i1 %30, label %32, label %31, !dbg !6823

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6824
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %38, !dbg !6826

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6827
  %34 = icmp ult i32 %33, 65536, !dbg !6829
  br i1 %34, label %36, label %35, !dbg !6830

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #25, !dbg !6831
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #24, !dbg !6833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6833
  unreachable, !dbg !6833

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #24, !dbg !6838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6838
  unreachable, !dbg !6838

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6759
  call void @llvm.dbg.value(metadata i32 %39, metadata !6758, metadata !DIExpression()), !dbg !6759
  ret i32 %39, !dbg !6843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6844 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6846, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 %1, metadata !6847, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i8* %2, metadata !6848, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 0, metadata !6849, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 -22, metadata !6850, metadata !DIExpression()), !dbg !6859
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #24, !dbg !6860
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6865
  %5 = and i32 %4, 16, !dbg !6867
  %6 = icmp eq i32 %5, 0, !dbg !6868
  br i1 %6, label %8, label %7, !dbg !6869

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !6870
  br label %8, !dbg !6876

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6877
  %10 = and i32 %9, 8, !dbg !6879
  %11 = icmp eq i32 %10, 0, !dbg !6880
  br i1 %11, label %13, label %12, !dbg !6881

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !6882
  br label %13, !dbg !6888

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6889
  %15 = and i32 %14, 2, !dbg !6890
  %16 = icmp eq i32 %15, 0, !dbg !6891
  br i1 %16, label %27, label %17, !dbg !6892

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #24, !dbg !6893
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6898
  call void @llvm.dbg.value(metadata i32 %18, metadata !6851, metadata !DIExpression()), !dbg !6899
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6900
  %20 = and i32 %19, 128, !dbg !6902
  %21 = icmp eq i32 %20, 0, !dbg !6903
  br i1 %21, label %27, label %22, !dbg !6904

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6850, metadata !DIExpression()), !dbg !6859
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #24, !dbg !6905
  %23 = icmp eq i32 %1, 0, !dbg !6911
  br i1 %23, label %27, label %24, !dbg !6913

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6914
  %26 = and i32 %25, -129, !dbg !6914
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6914
  br label %27, !dbg !6916

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6859
  call void @llvm.dbg.value(metadata i32 %28, metadata !6850, metadata !DIExpression()), !dbg !6859
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6917
  %30 = and i32 %29, 1, !dbg !6919
  %31 = icmp eq i32 %30, 0, !dbg !6920
  br i1 %31, label %33, label %32, !dbg !6921

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !6922
  br label %33, !dbg !6928

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6929
  %35 = and i32 %34, 32, !dbg !6931
  %36 = icmp eq i32 %35, 0, !dbg !6932
  br i1 %36, label %38, label %37, !dbg !6933

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !6934
  br label %38, !dbg !6940

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6941
  %40 = and i32 %39, 16, !dbg !6942
  %41 = icmp eq i32 %40, 0, !dbg !6942
  br i1 %41, label %42, label %46, !dbg !6943

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6944
  %44 = and i32 %43, 2, !dbg !6945
  %45 = icmp eq i32 %44, 0, !dbg !6945
  br i1 %45, label %60, label %46, !dbg !6946

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6947
  %48 = and i32 %47, 2048, !dbg !6948
  %49 = icmp eq i32 %48, 0, !dbg !6948
  br i1 %49, label %60, label %50, !dbg !6949

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6950
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #24, !dbg !6951
  call void @llvm.dbg.value(metadata i32 %52, metadata !6854, metadata !DIExpression()), !dbg !6952
  %53 = icmp eq i32 %52, 0, !dbg !6953
  br i1 %53, label %55, label %54, !dbg !6955

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6956, metadata !DIExpression()) #23, !dbg !6959
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6962, !srcloc !6963
  call void @llvm.dbg.value(metadata i32 2, metadata !6849, metadata !DIExpression()), !dbg !6859
  br label %60, !dbg !6964

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6965
  %57 = and i32 %56, 16, !dbg !6965
  %58 = icmp eq i32 %57, 0, !dbg !6965
  br i1 %58, label %60, label %59, !dbg !6969

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !6970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !6970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !6970
  unreachable, !dbg !6970

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6859
  call void @llvm.dbg.value(metadata i32 %61, metadata !6849, metadata !DIExpression()), !dbg !6859
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6972
  %63 = and i32 %62, 32, !dbg !6974
  %64 = icmp eq i32 %63, 0, !dbg !6975
  br i1 %64, label %68, label %65, !dbg !6976

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6977
  %67 = and i32 %66, -8193, !dbg !6977
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6977
  br label %68, !dbg !6979

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  %70 = or i32 %69, 255, !dbg !6980
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  store i8 0, i8* %2, align 1, !dbg !6981
  ret i32 %61, !dbg !6982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6983 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6987, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata i32 %0, metadata !6988, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata i8* %1, metadata !6989, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata i32 0, metadata !6990, metadata !DIExpression()), !dbg !6994
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #24, !dbg !6995
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7000
  %4 = and i32 %3, 4096, !dbg !7002
  %5 = icmp eq i32 %4, 0, !dbg !7002
  br i1 %5, label %7, label %6, !dbg !7003

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !7004
  br label %7, !dbg !7010

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  %9 = and i32 %8, 2048, !dbg !7013
  %10 = icmp eq i32 %9, 0, !dbg !7013
  br i1 %10, label %12, label %11, !dbg !7014

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !7015
  br label %12, !dbg !7021

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7022
  %14 = and i32 %13, 512, !dbg !7023
  %15 = icmp eq i32 %14, 0, !dbg !7023
  br i1 %15, label %26, label %16, !dbg !7024

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !7025
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7030
  call void @llvm.dbg.value(metadata i32 %17, metadata !6991, metadata !DIExpression()), !dbg !7031
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7032
  %19 = and i32 %18, 32768, !dbg !7034
  %20 = icmp eq i32 %19, 0, !dbg !7035
  br i1 %20, label %26, label %21, !dbg !7036

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7037
  %22 = icmp eq i32 %0, 0, !dbg !7043
  br i1 %22, label %26, label %23, !dbg !7045

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7046
  %25 = and i32 %24, -32769, !dbg !7046
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7046
  br label %26, !dbg !7048

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7049
  %28 = and i32 %27, 1024, !dbg !7051
  %29 = icmp eq i32 %28, 0, !dbg !7051
  br i1 %29, label %31, label %30, !dbg !7052

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !7053
  br label %31, !dbg !7059

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7060
  %33 = and i32 %32, 256, !dbg !7062
  %34 = icmp eq i32 %33, 0, !dbg !7063
  br i1 %34, label %35, label %39, !dbg !7064

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7065
  %37 = and i32 %36, 8192, !dbg !7067
  %38 = icmp eq i32 %37, 0, !dbg !7067
  br i1 %38, label %41, label %39, !dbg !7068

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !7069
  br label %41, !dbg !7070

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7070
  %43 = or i32 %42, 65280, !dbg !7070
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7070
  store i8 0, i8* %1, align 1, !dbg !7071
  ret void, !dbg !7072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7073 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7079, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.value(metadata i32 0, metadata !7080, metadata !DIExpression()), !dbg !7081
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #24, !dbg !7082
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7087
  %2 = and i32 %1, 33554432, !dbg !7089
  %3 = icmp eq i32 %2, 0, !dbg !7090
  br i1 %3, label %5, label %4, !dbg !7091

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #24, !dbg !7092
  br label %5, !dbg !7098

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7099
  %7 = and i32 %6, 16777216, !dbg !7101
  %8 = icmp eq i32 %7, 0, !dbg !7102
  br i1 %8, label %10, label %9, !dbg !7103

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #24, !dbg !7104
  br label %10, !dbg !7110

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7111
  %12 = and i32 %11, 524288, !dbg !7113
  %13 = icmp eq i32 %12, 0, !dbg !7114
  br i1 %13, label %15, label %14, !dbg !7115

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !7116
  br label %15, !dbg !7122

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7123
  %17 = and i32 %16, 262144, !dbg !7125
  %18 = icmp eq i32 %17, 0, !dbg !7126
  br i1 %18, label %20, label %19, !dbg !7127

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !7128
  br label %20, !dbg !7134

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7135
  %22 = and i32 %21, 131072, !dbg !7137
  %23 = icmp eq i32 %22, 0, !dbg !7138
  br i1 %23, label %25, label %24, !dbg !7139

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #24, !dbg !7140
  br label %25, !dbg !7146

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7147
  %27 = and i32 %26, 65536, !dbg !7149
  %28 = icmp eq i32 %27, 0, !dbg !7150
  br i1 %28, label %30, label %29, !dbg !7151

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !7152
  br label %30, !dbg !7158

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7159
  %32 = or i32 %31, -65536, !dbg !7159
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7159
  ret void, !dbg !7160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7161 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7165, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i8* %0, metadata !7166, metadata !DIExpression()), !dbg !7167
  store i8 0, i8* %0, align 1, !dbg !7168
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !7169
  ret void, !dbg !7174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7175 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7179, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.value(metadata i32 %0, metadata !7180, metadata !DIExpression()), !dbg !7181
  %2 = icmp slt i32 %0, 16, !dbg !7182
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7182
  %4 = add nsw i32 %0, -16, !dbg !7182
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !7182
  ret void, !dbg !7187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7188 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7192, metadata !DIExpression()), !dbg !7195
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7196
  %3 = load i32, i32* %2, align 4, !dbg !7196
  %4 = inttoptr i32 %3 to i16*, !dbg !7197
  call void @llvm.dbg.value(metadata i16* %4, metadata !7193, metadata !DIExpression()), !dbg !7195
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7198
  %6 = or i32 %5, 256, !dbg !7198
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7198
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7199, !srcloc !7202
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7203, !srcloc !7206
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7207
  %8 = load i16, i16* %7, align 2, !dbg !7208
  call void @llvm.dbg.value(metadata i16 %8, metadata !7194, metadata !DIExpression()), !dbg !7195
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7209
  %10 = and i32 %9, -257, !dbg !7209
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7209
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7210, !srcloc !7202
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7212, !srcloc !7206
  %11 = icmp eq i16 %8, -8446, !dbg !7214
  ret i1 %11, !dbg !7216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7217 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7218
  %2 = or i32 %1, 16, !dbg !7218
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7218
  ret void, !dbg !7219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7220 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7223, metadata !DIExpression()), !dbg !7224
  br label %1, !dbg !7225

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7223, metadata !DIExpression()), !dbg !7224
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #25, !dbg !7227
  %3 = add nuw nsw i32 %2, 1, !dbg !7230
  call void @llvm.dbg.value(metadata i32 %3, metadata !7223, metadata !DIExpression()), !dbg !7224
  %4 = icmp eq i32 %3, 97, !dbg !7231
  br i1 %4, label %5, label %1, !dbg !7225, !llvm.loop !7232

5:                                                ; preds = %1
  ret void, !dbg !7234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #15 !dbg !7235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7237, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i32 1, metadata !7238, metadata !DIExpression()), !dbg !7239
  %2 = and i32 %0, 15, !dbg !7240
  %3 = add nsw i32 %2, -4, !dbg !7240
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7240
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7240
  %6 = icmp slt i32 %0, 0, !dbg !7240
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7240
  store volatile i8 16, i8* %7, align 1, !dbg !7241
  ret void, !dbg !7243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7244 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7353, metadata !DIExpression()), !dbg !7354
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7355
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7357
  br i1 %3, label %4, label %12, !dbg !7358

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7359, !srcloc !7371
  call void @llvm.dbg.value(metadata i32 %5, metadata !7362, metadata !DIExpression()) #23, !dbg !7372
  %6 = icmp eq i32 %5, 0, !dbg !7373
  br i1 %6, label %12, label %7, !dbg !7374

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7375
  %9 = or i32 %8, 268435456, !dbg !7375
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7375
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7377
  %11 = and i32 %10, -32769, !dbg !7377
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7377
  br label %12, !dbg !7378

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !7379
  ret void, !dbg !7380
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7381 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !7382
  ret void, !dbg !7383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !499, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.value(metadata i8 0, metadata !500, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.value(metadata i32 64, metadata !502, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.value(metadata i32 undef, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7384
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7385
  %3 = load i32, i32* %2, align 4, !dbg !7385
  call void @llvm.dbg.value(metadata i32 %3, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7384
  %4 = add i32 %3, -64, !dbg !7387
  call void @llvm.dbg.value(metadata i32 %4, metadata !501, metadata !DIExpression()), !dbg !7384
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7388
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7389
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7390
  call void @llvm.dbg.value(metadata i8 1, metadata !500, metadata !DIExpression()), !dbg !7384
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !7391
  ret void, !dbg !7392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7393 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7394
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7395, !srcloc !7398
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7399, !srcloc !7402
  ret void, !dbg !7403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7404 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7405, !srcloc !7408
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7409
  ret void, !dbg !7410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7411 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7426, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i8 %1, metadata !7427, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 %2, metadata !7428, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 %3, metadata !7429, metadata !DIExpression()), !dbg !7430
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7431
  %6 = icmp eq i32 %5, -22, !dbg !7433
  br i1 %6, label %7, label %9, !dbg !7434

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7435
  %8 = zext i8 %1 to i32, !dbg !7435
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #24, !dbg !7435
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7435
  unreachable, !dbg !7435

9:                                                ; preds = %4
  ret void, !dbg !7440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7441 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7446, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i8 %1, metadata !7447, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i32 undef, metadata !7448, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i32 undef, metadata !7449, metadata !DIExpression()), !dbg !7451
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7452
  call void @llvm.dbg.value(metadata i8 %3, metadata !7450, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7451
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !7453
  call void @llvm.dbg.value(metadata i32 %4, metadata !7450, metadata !DIExpression()), !dbg !7451
  %5 = trunc i32 %4 to i8, !dbg !7454
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7455
  ret i32 %4, !dbg !7456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7457 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7461, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i8 %1, metadata !7462, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i8 %2, metadata !7463, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i1 %3, metadata !7464, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7467
  %5 = zext i8 %2 to i32, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %5, metadata !7466, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i32 0, metadata !7465, metadata !DIExpression()), !dbg !7467
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7466, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i32 0, metadata !7465, metadata !DIExpression()), !dbg !7467
  %7 = icmp eq i8 %1, 0, !dbg !7469
  br i1 %7, label %30, label %8, !dbg !7472

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7466, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i32 %10, metadata !7465, metadata !DIExpression()), !dbg !7467
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7473
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7476
  %13 = load i32, i32* %12, align 4, !dbg !7476
  %14 = icmp eq i32 %13, 0, !dbg !7477
  br i1 %14, label %26, label %15, !dbg !7478

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7479

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7481
  %18 = icmp eq i32 %17, 0, !dbg !7481
  br i1 %18, label %19, label %20, !dbg !7482

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #24, !dbg !7483
  br label %30, !dbg !7489

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7490
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7491
  call void @llvm.dbg.value(metadata i32 %22, metadata !7466, metadata !DIExpression()), !dbg !7467
  %23 = icmp eq i32 %22, -22, !dbg !7492
  br i1 %23, label %30, label %24, !dbg !7494

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7495
  call void @llvm.dbg.value(metadata i32 %25, metadata !7466, metadata !DIExpression()), !dbg !7467
  br label %26, !dbg !7496

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7467
  call void @llvm.dbg.value(metadata i32 %27, metadata !7466, metadata !DIExpression()), !dbg !7467
  %28 = add nuw nsw i32 %10, 1, !dbg !7497
  call void @llvm.dbg.value(metadata i32 %28, metadata !7465, metadata !DIExpression()), !dbg !7467
  %29 = icmp eq i32 %28, %6, !dbg !7469
  br i1 %29, label %30, label %8, !dbg !7472, !llvm.loop !7498

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7467
  ret i32 %31, !dbg !7500
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7501 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7505, metadata !DIExpression()), !dbg !7507
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7508
  %3 = load i32, i32* %2, align 4, !dbg !7508
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7509, !range !7510
  %5 = icmp ult i32 %4, 2, !dbg !7509
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7511
  br i1 %7, label %8, label %15, !dbg !7511

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7512
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7513
  %11 = load i32, i32* %10, align 4, !dbg !7513
  %12 = and i32 %11, %9, !dbg !7514
  %13 = icmp eq i32 %12, 0, !dbg !7515
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7506, metadata !DIExpression()), !dbg !7507
  ret i32 %16, !dbg !7516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7517 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7521, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7522, metadata !DIExpression()), !dbg !7524
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7525
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7525
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7523, metadata !DIExpression()), !dbg !7526
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7527
  %6 = load i32, i32* %5, align 4, !dbg !7527
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7528
  store i32 %6, i32* %7, align 4, !dbg !7529
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7530
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7531
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7532
  %11 = load i32, i32* %10, align 4, !dbg !7532
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #25, !dbg !7533
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !7534
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7535
  ret i32 %12, !dbg !7536
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7537 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7544, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7545, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 undef, metadata !7546, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %2, metadata !7547, metadata !DIExpression()), !dbg !7548
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7549
  %5 = load i32, i32* %4, align 4, !dbg !7549
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !7550
  %7 = or i32 %6, %5, !dbg !7551
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7552
  store i32 %7, i32* %8, align 4, !dbg !7553
  ret void, !dbg !7554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7555 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7559, metadata !DIExpression()), !dbg !7561
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7560, metadata !DIExpression()), !dbg !7561
  %3 = zext i8 %0 to i32, !dbg !7562
  %4 = icmp ugt i8 %0, 7, !dbg !7564
  br i1 %4, label %5, label %6, !dbg !7565

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #24, !dbg !7566
  br label %7, !dbg !7572

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !7573
  br label %7, !dbg !7574

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7561
  ret i32 %8, !dbg !7575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7580, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7581, metadata !DIExpression()), !dbg !7582
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !7583
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7584
  %4 = load i32, i32* %3, align 4, !dbg !7584
  %5 = and i32 %4, -32, !dbg !7585
  %6 = or i32 %5, %0, !dbg !7586
  %7 = or i32 %6, 16, !dbg !7586
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7587
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7588
  %9 = load i32, i32* %8, align 4, !dbg !7588
  %10 = or i32 %9, 1, !dbg !7589
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7590
  ret void, !dbg !7591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7595, metadata !DIExpression()), !dbg !7596
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7597
  ret void, !dbg !7598
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !7599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7603, metadata !DIExpression()), !dbg !7604
  %2 = icmp ult i32 %0, 33, !dbg !7605
  br i1 %2, label %11, label %3, !dbg !7607

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7608
  br i1 %4, label %11, label %5, !dbg !7610

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7611
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7612, !range !7510
  %8 = mul nsw i32 %7, -2, !dbg !7613
  %9 = add nsw i32 %8, 62, !dbg !7613
  %10 = and i32 %9, 62, !dbg !7614
  br label %11, !dbg !7615

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7604
  ret i32 %12, !dbg !7616
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7617 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7621, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8 %1, metadata !7622, metadata !DIExpression()), !dbg !7623
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7624
  %4 = icmp eq i32 %3, -22, !dbg !7626
  br i1 %4, label %5, label %7, !dbg !7627

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7628
  %6 = zext i8 %1 to i32, !dbg !7628
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #24, !dbg !7628
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7628
  unreachable, !dbg !7628

7:                                                ; preds = %2
  ret void, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7634 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7638, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8 %1, metadata !7639, metadata !DIExpression()), !dbg !7645
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7646
  call void @llvm.dbg.value(metadata i8 %3, metadata !7640, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7645
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !7647
  call void @llvm.dbg.value(metadata i32 %4, metadata !7640, metadata !DIExpression()), !dbg !7645
  %5 = icmp ne i32 %4, -22, !dbg !7648
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %4, metadata !7641, metadata !DIExpression()), !dbg !7650
  br i1 %7, label %8, label %12, !dbg !7649

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7641, metadata !DIExpression()), !dbg !7650
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !7651
  %10 = add i32 %9, 1, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %10, metadata !7641, metadata !DIExpression()), !dbg !7650
  %11 = icmp eq i32 %10, 8, !dbg !7655
  br i1 %11, label %12, label %8, !dbg !7656, !llvm.loop !7657

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7663, metadata !DIExpression()), !dbg !7664
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7665
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7666
  ret void, !dbg !7667
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7668 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7673
  %2 = icmp ugt i32 %1, 8, !dbg !7675
  br i1 %2, label %3, label %4, !dbg !7676

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #24, !dbg !7677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7677
  unreachable, !dbg !7677

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !7682
  call void @llvm.dbg.value(metadata i32 0, metadata !7672, metadata !DIExpression()), !dbg !7683
  %5 = icmp eq i32 %1, 0, !dbg !7684
  br i1 %5, label %13, label %6, !dbg !7687

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7687

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7672, metadata !DIExpression()), !dbg !7683
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7688
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #25, !dbg !7690
  %11 = add nuw i32 %9, 1, !dbg !7691
  call void @llvm.dbg.value(metadata i32 %11, metadata !7672, metadata !DIExpression()), !dbg !7683
  %12 = icmp eq i32 %11, %1, !dbg !7684
  br i1 %12, label %13, label %8, !dbg !7687, !llvm.loop !7692

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7694
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7695
  tail call void @arm_core_mpu_enable() #25, !dbg !7696
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7697
  %16 = and i32 %15, 65280, !dbg !7697
  %17 = icmp eq i32 %16, 2048, !dbg !7697
  br i1 %17, label %19, label %18, !dbg !7700

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #24, !dbg !7701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7701
  unreachable, !dbg !7701

19:                                               ; preds = %13
  ret i32 0, !dbg !7703
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7704 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7711, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i8* %1, metadata !7712, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i8* %0, metadata !7713, metadata !DIExpression()), !dbg !7714
  %3 = load i8, i8* %1, align 1, !dbg !7715
  %4 = icmp eq i8 %3, 0, !dbg !7716
  br i1 %4, label %13, label %5, !dbg !7717

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7711, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i8* %8, metadata !7712, metadata !DIExpression()), !dbg !7714
  store i8 %6, i8* %7, align 1, !dbg !7718
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7720
  call void @llvm.dbg.value(metadata i8* %9, metadata !7711, metadata !DIExpression()), !dbg !7714
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7721
  call void @llvm.dbg.value(metadata i8* %10, metadata !7712, metadata !DIExpression()), !dbg !7714
  %11 = load i8, i8* %10, align 1, !dbg !7715
  %12 = icmp eq i8 %11, 0, !dbg !7716
  br i1 %12, label %13, label %5, !dbg !7717, !llvm.loop !7722

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7724
  ret i8* %0, !dbg !7725
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7726 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %1, metadata !7731, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %2, metadata !7732, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %0, metadata !7733, metadata !DIExpression()), !dbg !7734
  %4 = icmp eq i32 %2, 0, !dbg !7735
  br i1 %4, label %22, label %5, !dbg !7736

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %7, metadata !7732, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %8, metadata !7731, metadata !DIExpression()), !dbg !7734
  %9 = load i8, i8* %8, align 1, !dbg !7737
  %10 = icmp eq i8 %9, 0, !dbg !7738
  br i1 %10, label %16, label %11, !dbg !7739

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7740
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7742
  call void @llvm.dbg.value(metadata i8* %12, metadata !7731, metadata !DIExpression()), !dbg !7734
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7743
  call void @llvm.dbg.value(metadata i8* %13, metadata !7730, metadata !DIExpression()), !dbg !7734
  %14 = add i32 %7, -1, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %14, metadata !7732, metadata !DIExpression()), !dbg !7734
  %15 = icmp eq i32 %14, 0, !dbg !7735
  br i1 %15, label %22, label %5, !dbg !7736, !llvm.loop !7745

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %18, metadata !7732, metadata !DIExpression()), !dbg !7734
  store i8 0, i8* %17, align 1, !dbg !7747
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7749
  call void @llvm.dbg.value(metadata i8* %19, metadata !7730, metadata !DIExpression()), !dbg !7734
  %20 = add i32 %18, -1, !dbg !7750
  call void @llvm.dbg.value(metadata i32 %20, metadata !7732, metadata !DIExpression()), !dbg !7734
  %21 = icmp eq i32 %20, 0, !dbg !7751
  br i1 %21, label %22, label %16, !dbg !7752, !llvm.loop !7753

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7755
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7760, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i32 %1, metadata !7761, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i32 %1, metadata !7762, metadata !DIExpression()), !dbg !7763
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7764

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7760, metadata !DIExpression()), !dbg !7763
  %6 = load i8, i8* %5, align 1, !dbg !7765
  %7 = icmp eq i8 %6, %3, !dbg !7766
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7767
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7768
  call void @llvm.dbg.value(metadata i8* %10, metadata !7760, metadata !DIExpression()), !dbg !7763
  br i1 %9, label %11, label %4, !dbg !7767, !llvm.loop !7770

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7772
  ret i8* %12, !dbg !7773
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i32 %1, metadata !7777, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* null, metadata !7778, metadata !DIExpression()), !dbg !7779
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7780

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7779
  call void @llvm.dbg.value(metadata i8* %6, metadata !7778, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %5, metadata !7776, metadata !DIExpression()), !dbg !7779
  %7 = load i8, i8* %5, align 1, !dbg !7781
  %8 = icmp eq i8 %7, %3, !dbg !7784
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7785
  call void @llvm.dbg.value(metadata i8* %9, metadata !7778, metadata !DIExpression()), !dbg !7779
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7786
  call void @llvm.dbg.value(metadata i8* %10, metadata !7776, metadata !DIExpression()), !dbg !7779
  %11 = icmp eq i8 %7, 0, !dbg !7787
  br i1 %11, label %12, label %4, !dbg !7787, !llvm.loop !7788

12:                                               ; preds = %4
  ret i8* %9, !dbg !7790
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !7791 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7795, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32 0, metadata !7796, metadata !DIExpression()), !dbg !7797
  %2 = load i8, i8* %0, align 1, !dbg !7798
  %3 = icmp eq i8 %2, 0, !dbg !7799
  br i1 %3, label %11, label %4, !dbg !7800

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7796, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i8* %6, metadata !7795, metadata !DIExpression()), !dbg !7797
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7801
  call void @llvm.dbg.value(metadata i8* %7, metadata !7795, metadata !DIExpression()), !dbg !7797
  %8 = add i32 %5, 1, !dbg !7803
  call void @llvm.dbg.value(metadata i32 %8, metadata !7796, metadata !DIExpression()), !dbg !7797
  %9 = load i8, i8* %7, align 1, !dbg !7798
  %10 = icmp eq i8 %9, 0, !dbg !7799
  br i1 %10, label %11, label %4, !dbg !7800, !llvm.loop !7804

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7797
  ret i32 %12, !dbg !7806
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7811, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i32 %1, metadata !7812, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i32 0, metadata !7813, metadata !DIExpression()), !dbg !7814
  %3 = load i8, i8* %0, align 1, !dbg !7815
  %4 = icmp ne i8 %3, 0, !dbg !7816
  %5 = icmp ne i32 %1, 0, !dbg !7817
  %6 = and i1 %4, %5, !dbg !7817
  br i1 %6, label %7, label %16, !dbg !7818

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i8* %9, metadata !7811, metadata !DIExpression()), !dbg !7814
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7819
  call void @llvm.dbg.value(metadata i8* %10, metadata !7811, metadata !DIExpression()), !dbg !7814
  %11 = add nuw i32 %8, 1, !dbg !7821
  call void @llvm.dbg.value(metadata i32 %11, metadata !7813, metadata !DIExpression()), !dbg !7814
  %12 = load i8, i8* %10, align 1, !dbg !7815
  %13 = icmp ne i8 %12, 0, !dbg !7816
  %14 = icmp ult i32 %11, %1, !dbg !7817
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7817
  br i1 %15, label %7, label %16, !dbg !7818, !llvm.loop !7822

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7814
  ret i32 %17, !dbg !7824
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !7825 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7829, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %1, metadata !7830, metadata !DIExpression()), !dbg !7831
  %3 = load i8, i8* %0, align 1, !dbg !7832
  %4 = load i8, i8* %1, align 1, !dbg !7833
  %5 = icmp ne i8 %3, %4, !dbg !7834
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7835
  br i1 %7, label %18, label %8, !dbg !7835

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7830, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %10, metadata !7829, metadata !DIExpression()), !dbg !7831
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7836
  call void @llvm.dbg.value(metadata i8* %11, metadata !7829, metadata !DIExpression()), !dbg !7831
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7838
  call void @llvm.dbg.value(metadata i8* %12, metadata !7830, metadata !DIExpression()), !dbg !7831
  %13 = load i8, i8* %11, align 1, !dbg !7832
  %14 = load i8, i8* %12, align 1, !dbg !7833
  %15 = icmp ne i8 %13, %14, !dbg !7834
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7835
  br i1 %17, label %18, label %8, !dbg !7835, !llvm.loop !7839

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7832
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7833
  %21 = zext i8 %19 to i32, !dbg !7842
  %22 = zext i8 %20 to i32, !dbg !7843
  %23 = sub nsw i32 %21, %22, !dbg !7844
  ret i32 %23, !dbg !7845
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7846 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7850, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %1, metadata !7851, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i32 %2, metadata !7852, metadata !DIExpression()), !dbg !7853
  %4 = icmp eq i32 %2, 0, !dbg !7854
  br i1 %4, label %23, label %5, !dbg !7854

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7852, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %7, metadata !7851, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %8, metadata !7850, metadata !DIExpression()), !dbg !7853
  %9 = load i8, i8* %8, align 1, !dbg !7855
  %10 = load i8, i8* %7, align 1, !dbg !7856
  %11 = icmp ne i8 %9, %10, !dbg !7857
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7858
  br i1 %13, label %19, label %14, !dbg !7858

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7859
  call void @llvm.dbg.value(metadata i8* %15, metadata !7850, metadata !DIExpression()), !dbg !7853
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7861
  call void @llvm.dbg.value(metadata i8* %16, metadata !7851, metadata !DIExpression()), !dbg !7853
  %17 = add i32 %6, -1, !dbg !7862
  call void @llvm.dbg.value(metadata i32 %17, metadata !7852, metadata !DIExpression()), !dbg !7853
  %18 = icmp eq i32 %17, 0, !dbg !7854
  br i1 %18, label %23, label %5, !dbg !7854, !llvm.loop !7863

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7866
  %21 = zext i8 %10 to i32, !dbg !7867
  %22 = sub nsw i32 %20, %21, !dbg !7868
  br label %23, !dbg !7869

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7869
  ret i32 %24, !dbg !7870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7875, metadata !DIExpression()), !dbg !7880
  call void @llvm.dbg.value(metadata i8* %1, metadata !7876, metadata !DIExpression()), !dbg !7880
  call void @llvm.dbg.value(metadata i8** %2, metadata !7877, metadata !DIExpression()), !dbg !7880
  %4 = icmp eq i8* %0, null, !dbg !7881
  br i1 %4, label %5, label %7, !dbg !7881

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7882
  br label %7, !dbg !7881

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7881
  call void @llvm.dbg.value(metadata i8* %8, metadata !7878, metadata !DIExpression()), !dbg !7880
  %9 = load i8, i8* %8, align 1, !dbg !7883
  %10 = icmp eq i8 %9, 0, !dbg !7883
  br i1 %10, label %33, label %11, !dbg !7884

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7878, metadata !DIExpression()), !dbg !7880
  %14 = zext i8 %12 to i32, !dbg !7883
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !7885
  %16 = icmp eq i8* %15, null, !dbg !7884
  br i1 %16, label %21, label %17, !dbg !7886

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7887
  call void @llvm.dbg.value(metadata i8* %18, metadata !7878, metadata !DIExpression()), !dbg !7880
  %19 = load i8, i8* %18, align 1, !dbg !7883
  %20 = icmp eq i8 %19, 0, !dbg !7883
  br i1 %20, label %33, label %11, !dbg !7884, !llvm.loop !7889

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7879, metadata !DIExpression()), !dbg !7880
  %24 = zext i8 %22 to i32, !dbg !7891
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !7892
  %26 = icmp eq i8* %25, null, !dbg !7893
  br i1 %26, label %27, label %31, !dbg !7894

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7895
  call void @llvm.dbg.value(metadata i8* %28, metadata !7879, metadata !DIExpression()), !dbg !7880
  %29 = load i8, i8* %28, align 1, !dbg !7891
  %30 = icmp eq i8 %29, 0, !dbg !7891
  br i1 %30, label %33, label %21, !dbg !7897, !llvm.loop !7898

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7900
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7903
  br label %33, !dbg !7904

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7880
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7880
  store i8* %34, i8** %2, align 4, !dbg !7880
  ret i8* %35, !dbg !7905
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7906 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7908, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata i8* %1, metadata !7909, metadata !DIExpression()), !dbg !7910
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7911
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7912
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !7913
  ret i8* %0, !dbg !7914
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7917, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %1, metadata !7918, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %2, metadata !7919, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %0, metadata !7920, metadata !DIExpression()), !dbg !7922
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7923
  call void @llvm.dbg.value(metadata i32 %4, metadata !7921, metadata !DIExpression()), !dbg !7922
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7924
  call void @llvm.dbg.value(metadata i8* %5, metadata !7917, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %1, metadata !7918, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %2, metadata !7919, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %2, metadata !7919, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7922
  %6 = icmp eq i32 %2, 0, !dbg !7925
  br i1 %6, label %18, label %7, !dbg !7926

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7927
  call void @llvm.dbg.value(metadata i8* %9, metadata !7917, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %10, metadata !7918, metadata !DIExpression()), !dbg !7922
  %12 = load i8, i8* %10, align 1, !dbg !7928
  %13 = icmp eq i8 %12, 0, !dbg !7929
  br i1 %13, label %18, label %14, !dbg !7930

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7931
  call void @llvm.dbg.value(metadata i8* %15, metadata !7918, metadata !DIExpression()), !dbg !7922
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7933
  call void @llvm.dbg.value(metadata i8* %16, metadata !7917, metadata !DIExpression()), !dbg !7922
  store i8 %12, i8* %9, align 1, !dbg !7934
  call void @llvm.dbg.value(metadata i32 %11, metadata !7919, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %11, metadata !7919, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7922
  %17 = icmp eq i32 %11, 0, !dbg !7925
  br i1 %17, label %18, label %7, !dbg !7926, !llvm.loop !7935

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7922
  store i8 0, i8* %19, align 1, !dbg !7937
  ret i8* %0, !dbg !7938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7943, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* %1, metadata !7944, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 %2, metadata !7945, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* %0, metadata !7946, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* %1, metadata !7947, metadata !DIExpression()), !dbg !7948
  %4 = icmp eq i32 %2, 0, !dbg !7949
  br i1 %4, label %31, label %5, !dbg !7951

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* %0, metadata !7946, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 %2, metadata !7945, metadata !DIExpression()), !dbg !7948
  %6 = add i32 %2, -1, !dbg !7952
  call void @llvm.dbg.value(metadata i32 %6, metadata !7945, metadata !DIExpression()), !dbg !7948
  %7 = icmp eq i32 %6, 0, !dbg !7953
  br i1 %7, label %23, label %8, !dbg !7954

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7955
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7955
  br label %11, !dbg !7955

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* %14, metadata !7946, metadata !DIExpression()), !dbg !7948
  %15 = load i8, i8* %14, align 1, !dbg !7956
  %16 = load i8, i8* %13, align 1, !dbg !7957
  %17 = icmp eq i8 %15, %16, !dbg !7958
  br i1 %17, label %18, label %23, !dbg !7955

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7959
  call void @llvm.dbg.value(metadata i8* %19, metadata !7946, metadata !DIExpression()), !dbg !7948
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7961
  call void @llvm.dbg.value(metadata i8* %20, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 %12, metadata !7945, metadata !DIExpression()), !dbg !7948
  %21 = add i32 %12, -1, !dbg !7952
  call void @llvm.dbg.value(metadata i32 %21, metadata !7945, metadata !DIExpression()), !dbg !7948
  %22 = icmp eq i32 %21, 0, !dbg !7953
  br i1 %22, label %23, label %11, !dbg !7954, !llvm.loop !7962

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7948
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7948
  %26 = load i8, i8* %24, align 1, !dbg !7964
  %27 = zext i8 %26 to i32, !dbg !7964
  %28 = load i8, i8* %25, align 1, !dbg !7965
  %29 = zext i8 %28 to i32, !dbg !7965
  %30 = sub nsw i32 %27, %29, !dbg !7966
  br label %31, !dbg !7967

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7948
  ret i32 %32, !dbg !7968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7973, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %1, metadata !7974, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %2, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %0, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %1, metadata !7977, metadata !DIExpression()), !dbg !7978
  %4 = ptrtoint i8* %0 to i32, !dbg !7979
  %5 = ptrtoint i8* %1 to i32, !dbg !7979
  %6 = sub i32 %4, %5, !dbg !7979
  %7 = icmp ult i32 %6, %2, !dbg !7981
  br i1 %7, label %10, label %8, !dbg !7982

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %0, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %2, metadata !7975, metadata !DIExpression()), !dbg !7978
  %9 = icmp eq i32 %2, 0, !dbg !7983
  br i1 %9, label %26, label %17, !dbg !7985

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7975, metadata !DIExpression()), !dbg !7978
  %12 = add i32 %11, -1, !dbg !7986
  call void @llvm.dbg.value(metadata i32 %12, metadata !7975, metadata !DIExpression()), !dbg !7978
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7989
  %14 = load i8, i8* %13, align 1, !dbg !7989
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7990
  store i8 %14, i8* %15, align 1, !dbg !7991
  %16 = icmp eq i32 %12, 0, !dbg !7992
  br i1 %16, label %26, label %10, !dbg !7993, !llvm.loop !7994

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %19, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %20, metadata !7975, metadata !DIExpression()), !dbg !7978
  %21 = load i8, i8* %18, align 1, !dbg !7996
  store i8 %21, i8* %19, align 1, !dbg !7998
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %22, metadata !7976, metadata !DIExpression()), !dbg !7978
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8000
  call void @llvm.dbg.value(metadata i8* %23, metadata !7977, metadata !DIExpression()), !dbg !7978
  %24 = add i32 %20, -1, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %24, metadata !7975, metadata !DIExpression()), !dbg !7978
  %25 = icmp eq i32 %24, 0, !dbg !7983
  br i1 %25, label %26, label %17, !dbg !7985, !llvm.loop !8002

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8004
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8011, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i8* %1, metadata !8012, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i32 %2, metadata !8013, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i8* %0, metadata !8014, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i8* %1, metadata !8015, metadata !DIExpression()), !dbg !8016
  %4 = icmp eq i32 %2, 0, !dbg !8017
  br i1 %4, label %14, label %5, !dbg !8018

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8015, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i8* %7, metadata !8014, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i32 %8, metadata !8013, metadata !DIExpression()), !dbg !8016
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8019
  call void @llvm.dbg.value(metadata i8* %9, metadata !8015, metadata !DIExpression()), !dbg !8016
  %10 = load i8, i8* %6, align 1, !dbg !8021
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8022
  call void @llvm.dbg.value(metadata i8* %11, metadata !8014, metadata !DIExpression()), !dbg !8016
  store i8 %10, i8* %7, align 1, !dbg !8023
  %12 = add i32 %8, -1, !dbg !8024
  call void @llvm.dbg.value(metadata i32 %12, metadata !8013, metadata !DIExpression()), !dbg !8016
  %13 = icmp eq i32 %12, 0, !dbg !8017
  br i1 %13, label %14, label %5, !dbg !8018, !llvm.loop !8025

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8027
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8028 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8032, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i32 %1, metadata !8033, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i32 %2, metadata !8034, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i8* %0, metadata !8035, metadata !DIExpression()), !dbg !8037
  %4 = trunc i32 %1 to i8, !dbg !8038
  call void @llvm.dbg.value(metadata i8 %4, metadata !8036, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i32 %2, metadata !8034, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i8* %0, metadata !8035, metadata !DIExpression()), !dbg !8037
  %5 = icmp eq i32 %2, 0, !dbg !8039
  br i1 %5, label %12, label %6, !dbg !8040

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8034, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i8* %8, metadata !8035, metadata !DIExpression()), !dbg !8037
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8041
  call void @llvm.dbg.value(metadata i8* %9, metadata !8035, metadata !DIExpression()), !dbg !8037
  store i8 %4, i8* %8, align 1, !dbg !8043
  %10 = add i32 %7, -1, !dbg !8044
  call void @llvm.dbg.value(metadata i32 %10, metadata !8034, metadata !DIExpression()), !dbg !8037
  %11 = icmp eq i32 %10, 0, !dbg !8039
  br i1 %11, label %12, label %6, !dbg !8040, !llvm.loop !8045

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8052, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i32 %1, metadata !8053, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i32 %2, metadata !8054, metadata !DIExpression()), !dbg !8058
  %4 = icmp eq i32 %2, 0, !dbg !8059
  br i1 %4, label %17, label %5, !dbg !8060

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8061

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8062
  call void @llvm.dbg.value(metadata i8* %9, metadata !8055, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32 %8, metadata !8054, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %9, metadata !8055, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8062
  %10 = load i8, i8* %9, align 1, !dbg !8063
  %11 = icmp eq i8 %10, %6, !dbg !8066
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8067
  call void @llvm.dbg.value(metadata i8* %12, metadata !8055, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32 %13, metadata !8054, metadata !DIExpression()), !dbg !8058
  br i1 %15, label %16, label %7, !dbg !8067, !llvm.loop !8068

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8070

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8058
  ret i8* %19, !dbg !8071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !8072 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8074, metadata !DIExpression()), !dbg !8075
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8076
  ret void, !dbg !8077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !8078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8080, metadata !DIExpression()), !dbg !8081
  ret i32 -1, !dbg !8082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8087, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32* %1, metadata !8088, metadata !DIExpression()), !dbg !8089
  %3 = ptrtoint i32* %1 to i32, !dbg !8090
  %4 = and i32 %3, -2, !dbg !8090
  %5 = icmp eq i32 %4, 2, !dbg !8090
  br i1 %5, label %6, label %9, !dbg !8090

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8091
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8091
  br label %9, !dbg !8092

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8092
  ret i32 %10, !dbg !8093
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8096, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i32* %1, metadata !8097, metadata !DIExpression()), !dbg !8098
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8099
  ret i32 %3, !dbg !8100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8104, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32* %1, metadata !8105, metadata !DIExpression()), !dbg !8106
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8107, !srcloc !8109
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8110
  ret i32 %3, !dbg !8111
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8112 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8117, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i32* %1, metadata !8118, metadata !DIExpression()), !dbg !8121
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8122
  call void @llvm.dbg.value(metadata i32 %3, metadata !8119, metadata !DIExpression()), !dbg !8121
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !8123
  call void @llvm.dbg.value(metadata i32 %4, metadata !8120, metadata !DIExpression()), !dbg !8121
  %5 = icmp ne i32 %3, %4, !dbg !8124
  %6 = sext i1 %5 to i32, !dbg !8125
  ret i32 %6, !dbg !8126
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8127 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8131, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i32 %1, metadata !8132, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i32 %2, metadata !8133, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i32* %3, metadata !8134, metadata !DIExpression()), !dbg !8135
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8136
  ret i32 %5, !dbg !8137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8138 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8140, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.value(metadata i32 %1, metadata !8141, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.value(metadata i32 %2, metadata !8142, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.value(metadata i32* %3, metadata !8143, metadata !DIExpression()), !dbg !8144
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8145, !srcloc !8147
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8148
  ret i32 %5, !dbg !8149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8152, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 %1, metadata !8153, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 %2, metadata !8154, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32* %3, metadata !8155, metadata !DIExpression()), !dbg !8160
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8161
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8163
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8163
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8163
  br i1 %11, label %33, label %12, !dbg !8163

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8160
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8160
  call void @llvm.dbg.value(metadata i8* %14, metadata !8158, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 %13, metadata !8156, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 %1, metadata !8157, metadata !DIExpression()), !dbg !8160
  br label %15, !dbg !8164

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8166
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8160
  call void @llvm.dbg.value(metadata i8* %17, metadata !8158, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 %16, metadata !8157, metadata !DIExpression()), !dbg !8160
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8167
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8170
  call void @llvm.dbg.value(metadata i8* %19, metadata !8158, metadata !DIExpression()), !dbg !8160
  %20 = load i8, i8* %17, align 1, !dbg !8171
  %21 = zext i8 %20 to i32, !dbg !8172
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !8167
  %23 = icmp eq i32 %22, -1, !dbg !8173
  br i1 %23, label %30, label %24, !dbg !8174

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8175
  call void @llvm.dbg.value(metadata i32 %25, metadata !8157, metadata !DIExpression()), !dbg !8160
  %26 = icmp eq i32 %25, 0, !dbg !8176
  br i1 %26, label %27, label %15, !dbg !8177, !llvm.loop !8178

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8180
  call void @llvm.dbg.value(metadata i32 %28, metadata !8156, metadata !DIExpression()), !dbg !8160
  %29 = icmp eq i32 %28, 0, !dbg !8181
  br i1 %29, label %30, label %12, !dbg !8182, !llvm.loop !8183

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8160
  call void @llvm.dbg.value(metadata i32 %31, metadata !8156, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.label(metadata !8159), !dbg !8186
  %32 = sub i32 %2, %31, !dbg !8187
  br label %33, !dbg !8188

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8160
  ret i32 %34, !dbg !8189
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8190 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8194, metadata !DIExpression()), !dbg !8195
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8196
  %3 = icmp eq i32 %2, -1, !dbg !8198
  br i1 %3, label %8, label %4, !dbg !8199

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8200
  %6 = icmp eq i32 %5, -1, !dbg !8201
  %7 = sext i1 %6 to i32, !dbg !8200
  br label %8, !dbg !8202

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8195
  ret i32 %9, !dbg !8203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, ...) local_unnamed_addr #1 !dbg !8204 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8209, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %1, metadata !8210, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i8* %2, metadata !8211, metadata !DIExpression()), !dbg !8226
  %7 = bitcast %struct.__va_list* %4 to i8*, !dbg !8227
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8227
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !8212, metadata !DIExpression()), !dbg !8228
  %8 = bitcast %struct.emitter* %5 to i8*, !dbg !8229
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8229
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8219, metadata !DIExpression()), !dbg !8230
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8231
  %9 = icmp eq i32 %1, 0, !dbg !8232
  %10 = select i1 %9, i8* %6, i8* %0, !dbg !8234
  call void @llvm.dbg.value(metadata i8* %10, metadata !8209, metadata !DIExpression()), !dbg !8226
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8235
  store i8* %10, i8** %11, align 4, !dbg !8236
  %12 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8237
  store i32 %1, i32* %12, align 4, !dbg !8238
  call void @llvm.va_start(i8* nonnull %7), !dbg !8239
  %13 = bitcast %struct.__va_list* %4 to i32*, !dbg !8240
  %14 = load i32, i32* %13, align 4, !dbg !8240
  %15 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !8240
  %16 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %8, i8* noundef %2, [1 x i32] %15) #25, !dbg !8240
  call void @llvm.dbg.value(metadata i32 %16, metadata !8224, metadata !DIExpression()), !dbg !8226
  call void @llvm.va_end(i8* nonnull %7), !dbg !8241
  %17 = load i8*, i8** %11, align 4, !dbg !8242
  store i8 0, i8* %17, align 1, !dbg !8243
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8244
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8244
  ret i32 %16, !dbg !8245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbvprintf.85(i8* noundef %0, i8* noundef %1, [1 x i32] %2) unnamed_addr #1 !dbg !8246 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8253, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.value(metadata i32 (...)* bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), metadata !8250, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.value(metadata i8* %0, metadata !8251, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.value(metadata i8* %1, metadata !8252, metadata !DIExpression()), !dbg !8254
  %4 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), i8* noundef %0, i8* noundef %1, [1 x i32] %2, i32 noundef 0) #24, !dbg !8255
  ret i32 %4, !dbg !8256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @sprintf_out(i32 noundef %0, %struct.emitter* nocapture noundef %1) #11 !dbg !8257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata %struct.emitter* %1, metadata !8263, metadata !DIExpression()), !dbg !8264
  %3 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 1, !dbg !8265
  %4 = load i32, i32* %3, align 4, !dbg !8265
  %5 = icmp sgt i32 %4, 1, !dbg !8267
  br i1 %5, label %6, label %14, !dbg !8268

6:                                                ; preds = %2
  %7 = trunc i32 %0 to i8, !dbg !8269
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 0, !dbg !8271
  %9 = load i8*, i8** %8, align 4, !dbg !8271
  store i8 %7, i8* %9, align 1, !dbg !8272
  %10 = load i8*, i8** %8, align 4, !dbg !8273
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8273
  store i8* %11, i8** %8, align 4, !dbg !8273
  %12 = load i32, i32* %3, align 4, !dbg !8274
  %13 = add nsw i32 %12, -1, !dbg !8274
  store i32 %13, i32* %3, align 4, !dbg !8274
  br label %14, !dbg !8275

14:                                               ; preds = %6, %2
  ret i32 0, !dbg !8276
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sprintf(i8* noalias noundef %0, i8* noalias noundef %1, ...) local_unnamed_addr #1 !dbg !8277 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8281, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i8* %1, metadata !8282, metadata !DIExpression()), !dbg !8286
  %5 = bitcast %struct.__va_list* %3 to i8*, !dbg !8287
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8287
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !8283, metadata !DIExpression()), !dbg !8288
  %6 = bitcast %struct.emitter* %4 to i8*, !dbg !8289
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8289
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8284, metadata !DIExpression()), !dbg !8290
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8291
  store i8* %0, i8** %7, align 4, !dbg !8292
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8293
  store i32 2147483647, i32* %8, align 4, !dbg !8294
  call void @llvm.va_start(i8* nonnull %5), !dbg !8295
  %9 = bitcast %struct.__va_list* %3 to i32*, !dbg !8296
  %10 = load i32, i32* %9, align 4, !dbg !8296
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !8296
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %6, i8* noundef %1, [1 x i32] %11) #25, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %12, metadata !8285, metadata !DIExpression()), !dbg !8286
  call void @llvm.va_end(i8* nonnull %5), !dbg !8297
  %13 = load i8*, i8** %7, align 4, !dbg !8298
  store i8 0, i8* %13, align 1, !dbg !8299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8300
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8300
  ret i32 %12, !dbg !8301
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !8302 {
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8309, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i8* %0, metadata !8306, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 %1, metadata !8307, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i8* %2, metadata !8308, metadata !DIExpression()), !dbg !8313
  %7 = bitcast %struct.emitter* %5 to i8*, !dbg !8314
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8314
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8310, metadata !DIExpression()), !dbg !8315
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8316
  %8 = icmp eq i32 %1, 0, !dbg !8317
  %9 = select i1 %8, i8* %6, i8* %0, !dbg !8319
  call void @llvm.dbg.value(metadata i8* %9, metadata !8306, metadata !DIExpression()), !dbg !8313
  %10 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8320
  store i8* %9, i8** %10, align 4, !dbg !8321
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8322
  store i32 %1, i32* %11, align 4, !dbg !8323
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %7, i8* noundef %2, [1 x i32] %3) #25, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %12, metadata !8311, metadata !DIExpression()), !dbg !8313
  %13 = load i8*, i8** %10, align 4, !dbg !8325
  store i8 0, i8* %13, align 1, !dbg !8326
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8327
  ret i32 %12, !dbg !8328
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsprintf(i8* noalias noundef %0, i8* noalias noundef %1, [1 x i32] %2) local_unnamed_addr #1 !dbg !8329 {
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !8335, metadata !DIExpression()), !dbg !8338
  call void @llvm.dbg.value(metadata i8* %0, metadata !8333, metadata !DIExpression()), !dbg !8338
  call void @llvm.dbg.value(metadata i8* %1, metadata !8334, metadata !DIExpression()), !dbg !8338
  %5 = bitcast %struct.emitter* %4 to i8*, !dbg !8339
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8339
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8336, metadata !DIExpression()), !dbg !8340
  %6 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8341
  store i8* %0, i8** %6, align 4, !dbg !8342
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8343
  store i32 2147483647, i32* %7, align 4, !dbg !8344
  %8 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %5, i8* noundef %1, [1 x i32] %2) #25, !dbg !8345
  call void @llvm.dbg.value(metadata i32 %8, metadata !8337, metadata !DIExpression()), !dbg !8338
  %9 = load i8*, i8** %6, align 4, !dbg !8346
  store i8 0, i8* %9, align 1, !dbg !8347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8348
  ret i32 %8, !dbg !8349
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8352, metadata !DIExpression()), !dbg !8353
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !8354
  ret void, !dbg !8355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8360, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 %1, metadata !8361, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8362, metadata !DIExpression()), !dbg !8366
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8367
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8367
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8367
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8363, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 %0, metadata !8365, metadata !DIExpression()), !dbg !8366
  %7 = icmp slt i32 %0, %1, !dbg !8368
  br i1 %7, label %8, label %22, !dbg !8371

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8365, metadata !DIExpression()), !dbg !8366
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !8372
  %11 = icmp eq i32 %10, 0, !dbg !8372
  br i1 %11, label %19, label %12, !dbg !8375

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !8376
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8378
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8378
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8380
  br i1 %15, label %19, label %16, !dbg !8381

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8382
  %18 = load i8*, i8** %17, align 4, !dbg !8382
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !8383
  br label %19, !dbg !8384

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8385
  call void @llvm.dbg.value(metadata i32 %20, metadata !8365, metadata !DIExpression()), !dbg !8366
  %21 = icmp eq i32 %20, %1, !dbg !8368
  br i1 %21, label %22, label %8, !dbg !8371, !llvm.loop !8386

22:                                               ; preds = %19, %3
  ret void, !dbg !8388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !8389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8391, metadata !DIExpression()), !dbg !8392
  %2 = shl nuw i32 1, %0, !dbg !8393
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !8396
  ret i32 %3, !dbg !8397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8402, metadata !DIExpression()), !dbg !8403
  %2 = shl nuw i32 1, %0, !dbg !8404
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !8407
  ret void, !dbg !8408
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8412, metadata !DIExpression()), !dbg !8413
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8414
  ret void, !dbg !8415
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !8416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8418, metadata !DIExpression()), !dbg !8419
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8420
  %3 = and i32 %2, %0, !dbg !8420
  %4 = icmp eq i32 %3, %0, !dbg !8421
  %5 = zext i1 %4 to i32, !dbg !8421
  ret i32 %5, !dbg !8422
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8425, metadata !DIExpression()), !dbg !8426
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !8427
  ret void, !dbg !8428
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8429 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8431, metadata !DIExpression()), !dbg !8432
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !8433
  ret void, !dbg !8434
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8437, metadata !DIExpression()), !dbg !8438
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !8439
  ret void, !dbg !8440
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8443, metadata !DIExpression()), !dbg !8444
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !8445
  ret void, !dbg !8446
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8449, metadata !DIExpression()), !dbg !8450
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !8451
  ret void, !dbg !8452
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8455, metadata !DIExpression()), !dbg !8456
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !8457
  ret void, !dbg !8458
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8459 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8461, metadata !DIExpression()), !dbg !8462
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !8463
  ret void, !dbg !8464
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8467, metadata !DIExpression()), !dbg !8468
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !8469
  ret void, !dbg !8470
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8473, metadata !DIExpression()), !dbg !8474
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !8475
  ret void, !dbg !8476
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8479, metadata !DIExpression()), !dbg !8480
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !8481
  ret void, !dbg !8482
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8485, metadata !DIExpression()), !dbg !8486
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !8487
  ret i32 0, !dbg !8488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !755 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !759, metadata !DIExpression()), !dbg !8489
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !8490
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !8492
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !8494
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !8496
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !8498
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !8500
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !8502
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !8504
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !8506
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !8508
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !8510
  ret void, !dbg !8512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8515, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8516, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 undef, metadata !8516, metadata !DIExpression()), !dbg !8517
  %2 = lshr i32 6684671, %0, !dbg !8518
  %3 = and i32 %2, 1, !dbg !8518
  %4 = or i32 %3, %0, !dbg !8520
  %5 = icmp eq i32 %4, 0, !dbg !8520
  br i1 %5, label %6, label %7, !dbg !8520

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8521
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8521
  unreachable, !dbg !8521

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8526
  %9 = load i32, i32* %8, align 4, !dbg !8526
  call void @llvm.dbg.value(metadata i32 %9, metadata !8516, metadata !DIExpression()), !dbg !8517
  %10 = shl nuw i32 1, %0, !dbg !8527
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #25, !dbg !8528
  tail call void @arch_irq_enable(i32 noundef %9) #24, !dbg !8529
  ret void, !dbg !8530
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8533, metadata !DIExpression()), !dbg !8534
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8535
  %3 = or i32 %2, %0, !dbg !8535
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8535
  ret void, !dbg !8536
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8539, metadata !DIExpression()), !dbg !8540
  %2 = icmp slt i32 %0, 32, !dbg !8541
  br i1 %2, label %3, label %5, !dbg !8543

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8544
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !8546
  br label %5, !dbg !8547

5:                                                ; preds = %1, %3
  ret void, !dbg !8548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8551, metadata !DIExpression()), !dbg !8552
  %2 = xor i32 %0, -1, !dbg !8553
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8553
  %4 = and i32 %3, %2, !dbg !8553
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8553
  ret void, !dbg !8554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8559, metadata !DIExpression()), !dbg !8561
  call void @llvm.dbg.value(metadata i32 %1, metadata !8560, metadata !DIExpression()), !dbg !8561
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8562

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8563
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !8565
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !8566
  br label %11, !dbg !8567

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8568
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !8569
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !8570
  br label %11, !dbg !8571

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8572
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !8573
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !8574
  br label %11, !dbg !8575

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8576
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !8577
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !8578
  br label %11, !dbg !8579

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8583, metadata !DIExpression()), !dbg !8584
  %2 = xor i32 %0, -1, !dbg !8585
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8585
  %4 = and i32 %3, %2, !dbg !8585
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8585
  ret void, !dbg !8586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8589, metadata !DIExpression()), !dbg !8590
  %2 = xor i32 %0, -1, !dbg !8591
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8591
  %4 = and i32 %3, %2, !dbg !8591
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8591
  ret void, !dbg !8592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8595, metadata !DIExpression()), !dbg !8596
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8597
  %3 = or i32 %2, %0, !dbg !8597
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8601, metadata !DIExpression()), !dbg !8602
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8603
  %3 = or i32 %2, %0, !dbg !8603
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8603
  ret void, !dbg !8604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !8605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8609, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8610, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8* %2, metadata !8611, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8612, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8614, metadata !DIExpression()), !dbg !8615
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8616
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8616
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8618
  br i1 %6, label %7, label %9, !dbg !8619

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8620
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8621
  store i8* %2, i8** %8, align 4, !dbg !8622
  br label %9, !dbg !8623

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8615
  ret i32 %10, !dbg !8624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !8625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8627, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8628, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8629, metadata !DIExpression()), !dbg !8630
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8631
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8632
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8633
  store i8* null, i8** %3, align 4, !dbg !8634
  ret void, !dbg !8635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8638, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %1, metadata !8639, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %1, metadata !8640, metadata !DIExpression()), !dbg !8643
  %3 = bitcast i8* %1 to i32*, !dbg !8644
  %4 = load i32, i32* %3, align 4, !dbg !8644
  %5 = add i32 %4, -169, !dbg !8644
  %6 = icmp ult i32 %5, -121, !dbg !8644
  br i1 %6, label %15, label %7, !dbg !8646

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8647
  %9 = inttoptr i32 %8 to i32*, !dbg !8648
  call void @llvm.dbg.value(metadata i32* %9, metadata !8641, metadata !DIExpression()), !dbg !8643
  %10 = load volatile i32, i32* %9, align 4, !dbg !8649
  call void @llvm.dbg.value(metadata i32 %10, metadata !8642, metadata !DIExpression()), !dbg !8643
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8650
  %12 = bitcast i8* %11 to i32*, !dbg !8650
  %13 = load i32, i32* %12, align 4, !dbg !8650
  %14 = or i32 %13, %10, !dbg !8651
  call void @llvm.dbg.value(metadata i32 %14, metadata !8642, metadata !DIExpression()), !dbg !8643
  store volatile i32 %14, i32* %9, align 4, !dbg !8652
  br label %15, !dbg !8653

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8643
  ret i32 %16, !dbg !8654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8657, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i8* %1, metadata !8658, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i8* %1, metadata !8659, metadata !DIExpression()), !dbg !8662
  %3 = bitcast i8* %1 to i32*, !dbg !8663
  %4 = load i32, i32* %3, align 4, !dbg !8663
  %5 = add i32 %4, -169, !dbg !8663
  %6 = icmp ult i32 %5, -121, !dbg !8663
  br i1 %6, label %16, label %7, !dbg !8665

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8666
  %9 = inttoptr i32 %8 to i32*, !dbg !8667
  call void @llvm.dbg.value(metadata i32* %9, metadata !8660, metadata !DIExpression()), !dbg !8662
  %10 = load volatile i32, i32* %9, align 4, !dbg !8668
  call void @llvm.dbg.value(metadata i32 %10, metadata !8661, metadata !DIExpression()), !dbg !8662
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8669
  %12 = bitcast i8* %11 to i32*, !dbg !8669
  %13 = load i32, i32* %12, align 4, !dbg !8669
  %14 = xor i32 %13, -1, !dbg !8670
  %15 = and i32 %10, %14, !dbg !8671
  call void @llvm.dbg.value(metadata i32 %15, metadata !8661, metadata !DIExpression()), !dbg !8662
  store volatile i32 %15, i32* %9, align 4, !dbg !8672
  br label %16, !dbg !8673

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8662
  ret i32 %17, !dbg !8674
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8677, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i8* %1, metadata !8678, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i32* %2, metadata !8679, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i8* %1, metadata !8680, metadata !DIExpression()), !dbg !8685
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8686
  call void @llvm.dbg.value(metadata i32 %4, metadata !8681, metadata !DIExpression()), !dbg !8685
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #25, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %5, metadata !8682, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i32 %5, metadata !8683, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i32 %4, metadata !8684, metadata !DIExpression()), !dbg !8685
  %6 = bitcast i8* %1 to i32*, !dbg !8688
  %7 = load i32, i32* %6, align 4, !dbg !8688
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8689

8:                                                ; preds = %3
  br label %18, !dbg !8690

9:                                                ; preds = %3
  br label %18, !dbg !8692

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8693
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #25, !dbg !8694
  br label %18, !dbg !8695

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8696
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #25, !dbg !8697
  br label %18, !dbg !8698

16:                                               ; preds = %3
  br label %18, !dbg !8699

17:                                               ; preds = %3
  br label %18, !dbg !8700

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8701
  br label %20, !dbg !8702

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8685
  ret i32 %21, !dbg !8702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8705, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i8* %1, metadata !8706, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i8* %2, metadata !8707, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i8* %1, metadata !8708, metadata !DIExpression()), !dbg !8713
  %4 = bitcast i8* %1 to i32*, !dbg !8714
  %5 = load i32, i32* %4, align 4, !dbg !8714
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %6, metadata !8712, metadata !DIExpression()), !dbg !8713
  %7 = icmp slt i32 %6, 0, !dbg !8716
  br i1 %7, label %22, label %8, !dbg !8718

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8708, metadata !DIExpression()), !dbg !8713
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8719
  %10 = bitcast i8* %9 to i32*, !dbg !8719
  %11 = load i32, i32* %10, align 4, !dbg !8719
  %12 = lshr i32 %11, 16, !dbg !8719
  %13 = and i32 %12, 7, !dbg !8719
  %14 = lshr i32 %11, 8, !dbg !8720
  %15 = and i32 %14, 31, !dbg !8720
  %16 = shl i32 %13, %15, !dbg !8721
  call void @llvm.dbg.value(metadata i32 %16, metadata !8711, metadata !DIExpression()), !dbg !8713
  %17 = and i32 %11, 255, !dbg !8722
  %18 = or i32 %17, 1073887232, !dbg !8723
  %19 = inttoptr i32 %18 to i32*, !dbg !8724
  call void @llvm.dbg.value(metadata i32* %19, metadata !8709, metadata !DIExpression()), !dbg !8713
  %20 = load volatile i32, i32* %19, align 4, !dbg !8725
  call void @llvm.dbg.value(metadata i32 %20, metadata !8710, metadata !DIExpression()), !dbg !8713
  %21 = or i32 %16, %20, !dbg !8726
  call void @llvm.dbg.value(metadata i32 %21, metadata !8710, metadata !DIExpression()), !dbg !8713
  store volatile i32 %21, i32* %19, align 4, !dbg !8727
  br label %22, !dbg !8728

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8713
  ret i32 %23, !dbg !8729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #6 !dbg !8730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 0, metadata !8735, metadata !DIExpression()), !dbg !8736
  %2 = add i32 %0, -1, !dbg !8737
  %3 = icmp ult i32 %2, 6, !dbg !8737
  br i1 %3, label %4, label %7, !dbg !8737

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8737
  %6 = load i32, i32* %5, align 4, !dbg !8737
  call void @llvm.dbg.value(metadata i32 %6, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %7, !dbg !8738

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8736
  ret i32 %8, !dbg !8739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #6 !dbg !8740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8744, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i32 2, metadata !8745, metadata !DIExpression()), !dbg !8746
  %2 = lshr i32 %0, 1, !dbg !8747
  ret i32 %2, !dbg !8748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8753, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 8, metadata !8754, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 84, metadata !8755, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 %1, metadata !8756, metadata !DIExpression()), !dbg !8757
  %3 = mul i32 %0, 84, !dbg !8758
  %4 = shl nsw i32 %1, 3, !dbg !8759
  %5 = udiv i32 %3, %4, !dbg !8760
  ret i32 %5, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8764, metadata !DIExpression()), !dbg !8767
  tail call void @config_enable_default_clocks() #24, !dbg !8768
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !8769
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !8769
  %4 = lshr i32 %3, 4, !dbg !8769
  %5 = and i32 %4, 15, !dbg !8769
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8769
  %7 = load i8, i8* %6, align 1, !dbg !8769
  %8 = zext i8 %7 to i32, !dbg !8769
  %9 = lshr i32 %2, %8, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %9, metadata !8765, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8766, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8767
  %10 = icmp ult i32 %9, 84000000, !dbg !8770
  br i1 %10, label %11, label %13, !dbg !8772

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !8773
  br label %13, !dbg !8775

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !8776
  tail call fastcc void @set_up_plls() #25, !dbg !8777
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8778
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !8781
  br label %14, !dbg !8782

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8783
  %16 = icmp eq i32 %15, 8, !dbg !8784
  br i1 %16, label %17, label %14, !dbg !8782, !llvm.loop !8785

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8787
  br i1 %18, label %19, label %21, !dbg !8789

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !8790
  br label %21, !dbg !8792

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8793
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !8794
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !8795
  ret i32 0, !dbg !8796
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !8797 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8799
  %2 = and i32 %1, 240, !dbg !8799
  ret i32 %2, !dbg !8800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8801 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !8802
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !8807
  br label %1, !dbg !8808

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !8809
  %3 = icmp eq i32 %2, 1, !dbg !8810
  br i1 %3, label %4, label %1, !dbg !8808, !llvm.loop !8811

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !8813
  br label %5, !dbg !8816

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !8817
  %7 = icmp eq i32 %6, 1, !dbg !8818
  br i1 %7, label %8, label %5, !dbg !8816, !llvm.loop !8819

8:                                                ; preds = %5
  ret void, !dbg !8821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8822 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8823
  %2 = icmp eq i32 %1, 8, !dbg !8825
  br i1 %2, label %3, label %4, !dbg !8826

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8827
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !8829
  br label %4, !dbg !8830

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !8831
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8832
  %6 = and i32 %5, -196609, !dbg !8832
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8832
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8833
  %8 = and i32 %7, -251658241, !dbg !8833
  %9 = or i32 %8, 134217728, !dbg !8833
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8833
  tail call void @config_pll_sysclock() #24, !dbg !8834
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !8835
  br label %10, !dbg !8836

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !8837
  %12 = icmp eq i32 %11, 1, !dbg !8838
  br i1 %12, label %13, label %10, !dbg !8836, !llvm.loop !8839

13:                                               ; preds = %10
  ret void, !dbg !8841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8842 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8844, metadata !DIExpression()), !dbg !8845
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8846
  %2 = and i32 %1, -241, !dbg !8846
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8846
  ret void, !dbg !8847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8850, metadata !DIExpression()), !dbg !8851
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8852
  %3 = and i32 %2, -4, !dbg !8852
  %4 = or i32 %3, %0, !dbg !8852
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8852
  ret void, !dbg !8853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !8854 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8855
  %2 = and i32 %1, 12, !dbg !8855
  ret i32 %2, !dbg !8856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8857 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8859, metadata !DIExpression()), !dbg !8860
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8861
  %2 = and i32 %1, -7169, !dbg !8861
  %3 = or i32 %2, 4096, !dbg !8861
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8861
  ret void, !dbg !8862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8863 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8865, metadata !DIExpression()), !dbg !8866
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8867
  %2 = and i32 %1, -57345, !dbg !8867
  %3 = or i32 %2, 32768, !dbg !8867
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8867
  ret void, !dbg !8868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8869 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8870
  %2 = icmp eq i32 %1, 1, !dbg !8872
  br i1 %2, label %7, label %3, !dbg !8873

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !8874
  br label %4, !dbg !8876

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8877
  %6 = icmp eq i32 %5, 1, !dbg !8878
  br i1 %6, label %7, label %4, !dbg !8876, !llvm.loop !8879

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !8881
  br label %8, !dbg !8882

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8883
  %10 = icmp eq i32 %9, 0, !dbg !8884
  br i1 %10, label %11, label %8, !dbg !8882, !llvm.loop !8885

11:                                               ; preds = %8
  ret void, !dbg !8887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8888 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8889
  %2 = and i32 %1, -16777217, !dbg !8889
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8889
  ret void, !dbg !8890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8891 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8892
  %2 = or i32 %1, 16777216, !dbg !8892
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8892
  ret void, !dbg !8893
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !8894 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8895
  %2 = lshr i32 %1, 25, !dbg !8896
  %3 = and i32 %2, 1, !dbg !8896
  ret i32 %3, !dbg !8897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !8898 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8899
  %2 = lshr i32 %1, 1, !dbg !8900
  %3 = and i32 %2, 1, !dbg !8900
  ret i32 %3, !dbg !8901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8902 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8903
  %2 = or i32 %1, 1, !dbg !8903
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8903
  ret void, !dbg !8904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8905 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8906
  %2 = and i32 %1, -262145, !dbg !8906
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8906
  ret void, !dbg !8907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8908 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8909
  %2 = or i32 %1, 65536, !dbg !8909
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8909
  ret void, !dbg !8910
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !8911 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8912
  %2 = lshr i32 %1, 17, !dbg !8913
  %3 = and i32 %2, 1, !dbg !8913
  ret i32 %3, !dbg !8914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8915 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8916
  %2 = or i32 %1, 1, !dbg !8916
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8916
  ret void, !dbg !8917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !8918 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8919
  %2 = lshr i32 %1, 1, !dbg !8920
  %3 = and i32 %2, 1, !dbg !8920
  ret i32 %3, !dbg !8921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #6 !dbg !8922 {
  ret i32 16000000, !dbg !8924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8928 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8931 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8935, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 8, metadata !8936, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 84, metadata !8937, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 0, metadata !8938, metadata !DIExpression()), !dbg !8939
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8940
  %2 = and i32 %1, -4227072, !dbg !8940
  %3 = or i32 %2, 4199688, !dbg !8940
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8940
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8941
  %5 = and i32 %4, -196609, !dbg !8941
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8941
  ret void, !dbg !8942
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8943 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !8944
  ret void, !dbg !8945
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8946 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8949, metadata !DIExpression()), !dbg !8951
  %2 = bitcast i32* %1 to i8*, !dbg !8952
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8952
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8950, metadata !DIExpression()), !dbg !8953
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8954
  %4 = or i32 %3, 268435456, !dbg !8954
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8954
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8955
  %6 = and i32 %5, 268435456, !dbg !8955
  store volatile i32 %6, i32* %1, align 4, !dbg !8956
  %7 = load volatile i32, i32* %1, align 4, !dbg !8957
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8958
  ret void, !dbg !8958
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8959 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8961, metadata !DIExpression()), !dbg !8962
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !8963
  br i1 %2, label %3, label %4, !dbg !8965

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !8966
  br label %4, !dbg !8967

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8962
  ret i32 %5, !dbg !8968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8974, metadata !DIExpression()), !dbg !8975
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8976, !srcloc !8978
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !8979
  ret i1 %1, !dbg !8980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8981 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !8982
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !8983
  ret void, !dbg !8984
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8987, metadata !DIExpression()), !dbg !8988
  %2 = icmp eq i32 %0, 10, !dbg !8989
  br i1 %2, label %3, label %4, !dbg !8991

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !8992
  br label %4, !dbg !8994

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8995
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !8996
  ret i32 %0, !dbg !8997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8998 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9001, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i8 %0, metadata !9002, metadata !DIExpression()), !dbg !9003
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9004, !srcloc !9006
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !9007
  ret void, !dbg !9008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9009 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9011, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i8 %0, metadata !9012, metadata !DIExpression()), !dbg !9014
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9015
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9013, metadata !DIExpression()), !dbg !9014
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9016
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9016
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #24, !dbg !9017
  ret void, !dbg !9018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9019 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9021, metadata !DIExpression()), !dbg !9022
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #24, !dbg !9023
  ret i1 %1, !dbg !9024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !9025 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9074, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9075, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9076, metadata !DIExpression()), !dbg !9077
  ret void, !dbg !9078
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9079 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9081, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i8 %1, metadata !9082, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32 %2, metadata !9083, metadata !DIExpression()), !dbg !9086
  %5 = bitcast i32* %4 to i8*, !dbg !9087
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9087
  call void @llvm.dbg.value(metadata i32* %4, metadata !9085, metadata !DIExpression(DW_OP_deref)), !dbg !9086
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !9088
  call void @llvm.dbg.value(metadata i32 %6, metadata !9084, metadata !DIExpression()), !dbg !9086
  %7 = icmp eq i32 %6, 0, !dbg !9089
  br i1 %7, label %8, label %31, !dbg !9091

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9084, metadata !DIExpression()), !dbg !9086
  %9 = and i32 %2, 131072, !dbg !9092
  %10 = icmp eq i32 %9, 0, !dbg !9094
  br i1 %10, label %28, label %11, !dbg !9095

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9096
  %13 = icmp eq i32 %12, 0, !dbg !9099
  br i1 %13, label %18, label %14, !dbg !9100

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9101
  %16 = shl nuw i32 1, %15, !dbg !9101
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !9103
  br label %25, !dbg !9104

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9105
  %20 = icmp eq i32 %19, 0, !dbg !9107
  %21 = zext i8 %1 to i32, !dbg !9086
  br i1 %20, label %25, label %22, !dbg !9108

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9109
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !9111
  br label %25, !dbg !9112

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9113
  %27 = load i32, i32* %4, align 4, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %30, metadata !9085, metadata !DIExpression()), !dbg !9086
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !9115
  br label %31, !dbg !9116

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9113
  %30 = load i32, i32* %4, align 4, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %30, metadata !9085, metadata !DIExpression()), !dbg !9086
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !9115
  call void @llvm.dbg.value(metadata i32 0, metadata !9084, metadata !DIExpression()), !dbg !9086
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9117
  ret i32 %6, !dbg !9117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !9118 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9122, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata i32* %1, metadata !9123, metadata !DIExpression()), !dbg !9127
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9128
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9128
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9128
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9124, metadata !DIExpression()), !dbg !9127
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9129
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9129
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9129
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9126, metadata !DIExpression()), !dbg !9127
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !9130
  store i32 %9, i32* %1, align 4, !dbg !9131
  ret i32 0, !dbg !9132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9135, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %1, metadata !9136, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %2, metadata !9137, metadata !DIExpression()), !dbg !9141
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9142
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9142
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9142
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9138, metadata !DIExpression()), !dbg !9141
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9143
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9143
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9143
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9139, metadata !DIExpression()), !dbg !9141
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !9144
  call void @llvm.dbg.value(metadata i32 %10, metadata !9140, metadata !DIExpression()), !dbg !9141
  %11 = xor i32 %1, -1, !dbg !9145
  %12 = and i32 %10, %11, !dbg !9146
  %13 = and i32 %2, %1, !dbg !9147
  %14 = or i32 %12, %13, !dbg !9148
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !9149
  ret i32 0, !dbg !9150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9151 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9153, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %1, metadata !9154, metadata !DIExpression()), !dbg !9157
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9158
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9158
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9158
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9155, metadata !DIExpression()), !dbg !9157
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9159
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9159
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9159
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9156, metadata !DIExpression()), !dbg !9157
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9160
  store volatile i32 %1, i32* %9, align 4, !dbg !9160
  ret i32 0, !dbg !9161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9164, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata i32 %1, metadata !9165, metadata !DIExpression()), !dbg !9168
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9169
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9169
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9169
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9166, metadata !DIExpression()), !dbg !9168
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9170
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9170
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9170
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9167, metadata !DIExpression()), !dbg !9168
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !9171
  ret i32 0, !dbg !9172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9175, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %1, metadata !9176, metadata !DIExpression()), !dbg !9179
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9180
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9180
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9180
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9177, metadata !DIExpression()), !dbg !9179
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9181
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9181
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9181
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9178, metadata !DIExpression()), !dbg !9179
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9182
  %10 = load volatile i32, i32* %9, align 4, !dbg !9182
  %11 = xor i32 %10, %1, !dbg !9182
  store volatile i32 %11, i32* %9, align 4, !dbg !9182
  ret i32 0, !dbg !9183
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9184 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9186, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i8 %1, metadata !9187, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 %2, metadata !9188, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 %3, metadata !9189, metadata !DIExpression()), !dbg !9196
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9197
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9197
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9197
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9190, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i8* undef, metadata !9191, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 0, metadata !9193, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 0, metadata !9194, metadata !DIExpression()), !dbg !9196
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9198

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9199
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !9203
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9204
  %12 = load i32, i32* %11, align 4, !dbg !9204
  %13 = icmp eq i32 %10, %12, !dbg !9205
  br i1 %13, label %14, label %29, !dbg !9206

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !9207
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !9209
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !9210
  br label %29, !dbg !9211

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9212
  %17 = load i8*, i8** %16, align 4, !dbg !9212
  call void @llvm.dbg.value(metadata i8* %17, metadata !9191, metadata !DIExpression()), !dbg !9196
  %18 = zext i8 %1 to i32, !dbg !9213
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !9215
  %20 = icmp eq i32 %19, 0, !dbg !9216
  br i1 %20, label %21, label %29, !dbg !9217

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9218
  %23 = load i32, i32* %22, align 4, !dbg !9218
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !9219
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9220

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9193, metadata !DIExpression()), !dbg !9196
  br label %27, !dbg !9221

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9193, metadata !DIExpression()), !dbg !9196
  br label %27, !dbg !9223

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9193, metadata !DIExpression()), !dbg !9196
  br label %27, !dbg !9224

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9196
  call void @llvm.dbg.value(metadata i32 %28, metadata !9193, metadata !DIExpression()), !dbg !9196
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !9225
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !9226
  br label %29, !dbg !9226

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9196
  call void @llvm.dbg.value(metadata i32 %30, metadata !9194, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.label(metadata !9195), !dbg !9227
  ret i32 %30, !dbg !9228
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9231, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9232, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i1 %2, metadata !9233, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9235
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9236
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9236
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9236
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9234, metadata !DIExpression()), !dbg !9235
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9237
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !9238
  ret i32 %8, !dbg !9239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9240 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9246, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9247, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.value(metadata i1 %2, metadata !9248, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9249
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9250
  br i1 %4, label %5, label %6, !dbg !9253

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.110, i32 0, i32 0)) #24, !dbg !9254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9254
  unreachable, !dbg !9254

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9256
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9256
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9256
  br i1 %9, label %10, label %11, !dbg !9259

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9260
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #24, !dbg !9260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9260
  unreachable, !dbg !9260

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !9262
  br i1 %12, label %18, label %13, !dbg !9264

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9265
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !9268
  %16 = or i1 %15, %2, !dbg !9269
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9269
  br i1 %2, label %19, label %21, !dbg !9269

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9270

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9271
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !9274
  br label %21, !dbg !9275

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9249
  ret i32 %22, !dbg !9276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9281, metadata !DIExpression()), !dbg !9282
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9283
  %3 = icmp eq %struct._snode* %2, null, !dbg !9283
  ret i1 %3, !dbg !9283
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9288, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9289, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9290, metadata !DIExpression()), !dbg !9292
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9293
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9290, metadata !DIExpression()), !dbg !9292
  %4 = icmp eq %struct._snode* %3, null, !dbg !9295
  br i1 %4, label %15, label %5, !dbg !9293

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9290, metadata !DIExpression()), !dbg !9292
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9297
  br i1 %6, label %9, label %11, !dbg !9300

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9290, metadata !DIExpression()), !dbg !9292
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9297
  br i1 %8, label %9, label %11, !dbg !9300, !llvm.loop !9301

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !9302
  br label %15, !dbg !9302

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9290, metadata !DIExpression()), !dbg !9292
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !9295
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9291, metadata !DIExpression()), !dbg !9292
  %14 = icmp eq %struct._snode* %13, null, !dbg !9295
  br i1 %14, label %15, label %7, !dbg !9293, !llvm.loop !9301

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !9305 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9309, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9310, metadata !DIExpression()), !dbg !9311
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9312
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !9312
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !9312
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9313
  %5 = icmp eq %struct._snode* %4, null, !dbg !9313
  br i1 %5, label %6, label %8, !dbg !9312

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9315
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !9315
  br label %8, !dbg !9315

8:                                                ; preds = %6, %2
  ret void, !dbg !9312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9317 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9321, metadata !DIExpression()), !dbg !9322
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9323
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9323
  ret %struct._snode* %3, !dbg !9324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9325 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9329, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9330, metadata !DIExpression()), !dbg !9331
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9332
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9333
  ret void, !dbg !9334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9335 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9337, metadata !DIExpression()), !dbg !9339
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9338, metadata !DIExpression()), !dbg !9339
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9340
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9341
  ret void, !dbg !9342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9343 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9345, metadata !DIExpression()), !dbg !9346
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9347
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9347
  ret %struct._snode* %3, !dbg !9348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9349 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9351, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9352, metadata !DIExpression()), !dbg !9353
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9354
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9355
  ret void, !dbg !9356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !9357 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9361, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9362, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9363, metadata !DIExpression()), !dbg !9364
  %4 = icmp eq %struct._snode* %1, null, !dbg !9365
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !9367
  br i1 %4, label %6, label %11, !dbg !9368

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !9369
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9371
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9371
  br i1 %8, label %9, label %15, !dbg !9369

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9373
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !9373
  br label %15, !dbg !9373

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !9375
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9377
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9377
  br i1 %13, label %14, label %15, !dbg !9375

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !9379
  br label %15, !dbg !9379

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !9368
  ret void, !dbg !9368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !9381 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9385, metadata !DIExpression()), !dbg !9386
  %2 = icmp eq %struct._snode* %0, null, !dbg !9387
  br i1 %2, label %5, label %3, !dbg !9387

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !9387
  br label %5, !dbg !9387

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9387
  ret %struct._snode* %6, !dbg !9387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9388 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9390, metadata !DIExpression()), !dbg !9391
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !9392
  ret %struct._snode* %2, !dbg !9392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9393 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9395, metadata !DIExpression()), !dbg !9396
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9397
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9397
  ret %struct._snode* %3, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9401, metadata !DIExpression()), !dbg !9404
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !9405, !range !9406
  call void @llvm.dbg.value(metadata i32 %2, metadata !9402, metadata !DIExpression()), !dbg !9404
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !9407
  call void @llvm.dbg.value(metadata i32 %3, metadata !9403, metadata !DIExpression()), !dbg !9404
  ret i32 %3, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9411, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %1, metadata !9412, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %1, metadata !9413, metadata !DIExpression()), !dbg !9414
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9415
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9415
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9416
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9416
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9416
  %8 = shl nuw i32 1, %0, !dbg !9417
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !9418
  ret void, !dbg !9419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9420 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9424, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i32 %1, metadata !9425, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9426, metadata !DIExpression()), !dbg !9430
  %4 = bitcast i64* %3 to i8*, !dbg !9431
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9431
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9428, metadata !DIExpression()), !dbg !9430
  store i64 70368744177732, i64* %3, align 8, !dbg !9432
  call void @llvm.dbg.value(metadata i64* %3, metadata !9428, metadata !DIExpression(DW_OP_deref)), !dbg !9430
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %5, metadata !9429, metadata !DIExpression()), !dbg !9430
  %6 = icmp eq i32 %5, 0, !dbg !9434
  br i1 %6, label %7, label %8, !dbg !9436

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !9437
  br label %8, !dbg !9438

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9439
  ret void, !dbg !9439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9440 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9442, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %0, metadata !9443, metadata !DIExpression()), !dbg !9445
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9446
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9444, metadata !DIExpression()), !dbg !9445
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9447
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9447
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !9448
  ret i32 %5, !dbg !9449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9452, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %1, metadata !9453, metadata !DIExpression()), !dbg !9455
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %3, metadata !9454, metadata !DIExpression()), !dbg !9455
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !9457
  ret void, !dbg !9458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #6 !dbg !9459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9463, metadata !DIExpression()), !dbg !9464
  %2 = sdiv i32 %0, 4, !dbg !9465
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9466
  %6 = add nsw i32 %5, 16, !dbg !9467
  %7 = shl i32 15, %6, !dbg !9468
  %8 = or i32 %7, %2, !dbg !9469
  ret i32 %8, !dbg !9470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9475, metadata !DIExpression()), !dbg !9477
  call void @llvm.dbg.value(metadata i32 %1, metadata !9476, metadata !DIExpression()), !dbg !9477
  %3 = and i32 %1, 255, !dbg !9478
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9478
  %5 = load volatile i32, i32* %4, align 4, !dbg !9478
  %6 = lshr i32 %1, 16, !dbg !9478
  %7 = xor i32 %6, -1, !dbg !9478
  %8 = and i32 %5, %7, !dbg !9478
  call void @llvm.dbg.value(metadata i32 %6, metadata !9479, metadata !DIExpression()) #23, !dbg !9483
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9485, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %9, metadata !9482, metadata !DIExpression()) #23, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %9, metadata !9487, metadata !DIExpression()) #23, !dbg !9492
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9494, !range !7510
  %11 = shl i32 %0, %10, !dbg !9478
  %12 = or i32 %11, %8, !dbg !9478
  store volatile i32 %12, i32* %4, align 4, !dbg !9478
  ret void, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9500, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9501, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i32 %2, metadata !9502, metadata !DIExpression()), !dbg !9505
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9506
  %5 = icmp eq %struct._snode* %4, null, !dbg !9506
  br i1 %5, label %24, label %6, !dbg !9506

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !9508
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9504, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9503, metadata !DIExpression()), !dbg !9505
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9509
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9509
  %12 = load i32, i32* %11, align 4, !dbg !9509
  %13 = and i32 %12, %2, !dbg !9513
  %14 = icmp eq i32 %13, 0, !dbg !9513
  br i1 %14, label %22, label %15, !dbg !9514

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9515
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9515
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9515
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9515
  br i1 %19, label %20, label %21, !dbg !9519

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #24, !dbg !9520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9520
  unreachable, !dbg !9520

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !9522
  br label %22, !dbg !9523

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9503, metadata !DIExpression()), !dbg !9505
  %23 = icmp eq %struct._snode* %8, null, !dbg !9524
  br i1 %23, label %24, label %6, !dbg !9524

24:                                               ; preds = %22, %3
  ret void, !dbg !9525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9528, metadata !DIExpression()), !dbg !9529
  %2 = and i32 %0, 255, !dbg !9530
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9530
  %4 = load volatile i32, i32* %3, align 4, !dbg !9530
  %5 = lshr i32 %0, 16, !dbg !9530
  %6 = and i32 %4, %5, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %5, metadata !9479, metadata !DIExpression()) #23, !dbg !9531
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9533, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %7, metadata !9482, metadata !DIExpression()) #23, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %7, metadata !9487, metadata !DIExpression()) #23, !dbg !9534
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9536, !range !7510
  %9 = lshr i32 %6, %8, !dbg !9537
  ret i32 %9, !dbg !9538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9539 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9544, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()), !dbg !9546
  %3 = shl i32 %1, 16, !dbg !9547
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9547
  store volatile i32 %3, i32* %4, align 4, !dbg !9547
  ret void, !dbg !9548
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9549 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9553, metadata !DIExpression()), !dbg !9554
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9555
  %3 = load volatile i32, i32* %2, align 4, !dbg !9555
  ret i32 %3, !dbg !9556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9557 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9559, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %1, metadata !9560, metadata !DIExpression()), !dbg !9561
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9562
  store volatile i32 %1, i32* %3, align 4, !dbg !9562
  ret void, !dbg !9563
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9564 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9566, metadata !DIExpression()), !dbg !9567
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9568
  %3 = load volatile i32, i32* %2, align 4, !dbg !9568
  ret i32 %3, !dbg !9569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !9570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9574, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32* %1, metadata !9575, metadata !DIExpression()), !dbg !9576
  %3 = and i32 %0, 131072, !dbg !9577
  %4 = icmp eq i32 %3, 0, !dbg !9579
  br i1 %4, label %22, label %5, !dbg !9580

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9581
  %6 = and i32 %0, 2, !dbg !9583
  %7 = icmp eq i32 %6, 0, !dbg !9585
  br i1 %7, label %11, label %8, !dbg !9586

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9587
  %10 = icmp eq i32 %9, 0, !dbg !9587
  br i1 %10, label %33, label %11, !dbg !9590

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9591
  store i32 %12, i32* %1, align 4, !dbg !9591
  %13 = and i32 %0, 16, !dbg !9592
  %14 = icmp eq i32 %13, 0, !dbg !9594
  br i1 %14, label %17, label %15, !dbg !9595

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9596
  br label %31, !dbg !9598

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9599
  %19 = icmp eq i32 %18, 0, !dbg !9601
  br i1 %19, label %33, label %20, !dbg !9602

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9603
  br label %31, !dbg !9605

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9606
  %24 = icmp eq i32 %23, 0, !dbg !9608
  br i1 %24, label %31, label %25, !dbg !9609

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9610
  %27 = icmp eq i32 %26, 0, !dbg !9613
  br i1 %27, label %28, label %31, !dbg !9614

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9615
  br label %33, !dbg !9616

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9576
  ret i32 %34, !dbg !9616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9621, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %1, metadata !9622, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9623, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %3, metadata !9624, metadata !DIExpression()), !dbg !9632
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9633
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9633
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9633
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9625, metadata !DIExpression()), !dbg !9632
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9634
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9634
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9634
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9626, metadata !DIExpression()), !dbg !9632
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %11, metadata !9627, metadata !DIExpression()), !dbg !9632
  %12 = and i32 %2, 48, !dbg !9636
  call void @llvm.dbg.value(metadata i32 %12, metadata !9628, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9629, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9630, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9631, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9632
  %13 = lshr i32 %2, 6, !dbg !9637
  %14 = and i32 %13, 1, !dbg !9637
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !9638
  %15 = lshr i32 %2, 7, !dbg !9639
  %16 = and i32 %15, 3, !dbg !9639
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !9640
  %17 = lshr i32 %2, 9, !dbg !9641
  %18 = and i32 %17, 3, !dbg !9641
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !9642
  %19 = icmp eq i32 %12, 32, !dbg !9643
  br i1 %19, label %20, label %24, !dbg !9645

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9646
  br i1 %21, label %22, label %23, !dbg !9649

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9650
  br label %24, !dbg !9652

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9653
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9655
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !9656
  ret void, !dbg !9657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #6 !dbg !9658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9660, metadata !DIExpression()), !dbg !9662
  %2 = shl nuw i32 1, %0, !dbg !9663
  call void @llvm.dbg.value(metadata i32 %2, metadata !9661, metadata !DIExpression()), !dbg !9662
  ret i32 %2, !dbg !9664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9665 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9669, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i32 %1, metadata !9670, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i32 %2, metadata !9671, metadata !DIExpression()), !dbg !9672
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9673
  %5 = load volatile i32, i32* %4, align 4, !dbg !9673
  %6 = xor i32 %1, -1, !dbg !9673
  %7 = and i32 %5, %6, !dbg !9673
  %8 = mul i32 %2, %1, !dbg !9673
  %9 = or i32 %7, %8, !dbg !9673
  store volatile i32 %9, i32* %4, align 4, !dbg !9673
  ret void, !dbg !9674
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9675 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9677, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %1, metadata !9678, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %2, metadata !9679, metadata !DIExpression()), !dbg !9680
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9681
  %5 = load volatile i32, i32* %4, align 4, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9682
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9684, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9682
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9685
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9687, !range !7510
  %8 = shl nuw nsw i32 %7, 1, !dbg !9681
  %9 = shl i32 3, %8, !dbg !9681
  %10 = xor i32 %9, -1, !dbg !9681
  %11 = and i32 %5, %10, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9690
  %12 = shl i32 %2, %8, !dbg !9681
  %13 = or i32 %11, %12, !dbg !9681
  store volatile i32 %13, i32* %4, align 4, !dbg !9681
  ret void, !dbg !9692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9695, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %1, metadata !9696, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %2, metadata !9697, metadata !DIExpression()), !dbg !9698
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9699
  %5 = load volatile i32, i32* %4, align 4, !dbg !9699
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9700
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9702, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9700
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9703
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9705, !range !7510
  %8 = shl nuw nsw i32 %7, 1, !dbg !9699
  %9 = shl i32 3, %8, !dbg !9699
  %10 = xor i32 %9, -1, !dbg !9699
  %11 = and i32 %5, %10, !dbg !9699
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9708
  %12 = shl i32 %2, %8, !dbg !9699
  %13 = or i32 %11, %12, !dbg !9699
  store volatile i32 %13, i32* %4, align 4, !dbg !9699
  ret void, !dbg !9710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9711 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9713, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32 %1, metadata !9714, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32 %2, metadata !9715, metadata !DIExpression()), !dbg !9716
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9717
  %5 = load volatile i32, i32* %4, align 4, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9718
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9720, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9718
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9721
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9723, !range !7510
  %8 = shl nuw nsw i32 %7, 2, !dbg !9717
  %9 = shl i32 15, %8, !dbg !9717
  %10 = xor i32 %9, -1, !dbg !9717
  %11 = and i32 %5, %10, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9726
  %12 = shl i32 %2, %8, !dbg !9717
  %13 = or i32 %11, %12, !dbg !9717
  store volatile i32 %13, i32* %4, align 4, !dbg !9717
  ret void, !dbg !9728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9731, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %1, metadata !9732, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %2, metadata !9733, metadata !DIExpression()), !dbg !9734
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9735
  %5 = load volatile i32, i32* %4, align 4, !dbg !9735
  %6 = lshr i32 %1, 8, !dbg !9735
  call void @llvm.dbg.value(metadata i32 %6, metadata !9479, metadata !DIExpression()) #23, !dbg !9736
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9738, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %7, metadata !9482, metadata !DIExpression()) #23, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %7, metadata !9487, metadata !DIExpression()) #23, !dbg !9739
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9741, !range !7510
  %9 = shl nuw nsw i32 %8, 2, !dbg !9735
  %10 = shl i32 15, %9, !dbg !9735
  %11 = xor i32 %10, -1, !dbg !9735
  %12 = and i32 %5, %11, !dbg !9735
  call void @llvm.dbg.value(metadata i32 %6, metadata !9479, metadata !DIExpression()) #23, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %7, metadata !9482, metadata !DIExpression()) #23, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %7, metadata !9487, metadata !DIExpression()) #23, !dbg !9744
  %13 = shl i32 %2, %9, !dbg !9735
  %14 = or i32 %12, %13, !dbg !9735
  store volatile i32 %14, i32* %4, align 4, !dbg !9735
  ret void, !dbg !9746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9747 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9749, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata i32 %1, metadata !9750, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata i32 %2, metadata !9751, metadata !DIExpression()), !dbg !9752
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9753
  %5 = load volatile i32, i32* %4, align 4, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9754
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9756, !srcloc !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9754
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9757
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9759, !range !7510
  %8 = shl nuw nsw i32 %7, 1, !dbg !9753
  %9 = shl i32 3, %8, !dbg !9753
  %10 = xor i32 %9, -1, !dbg !9753
  %11 = and i32 %5, %10, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()) #23, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %6, metadata !9482, metadata !DIExpression()) #23, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %6, metadata !9487, metadata !DIExpression()) #23, !dbg !9762
  %12 = shl i32 %2, %8, !dbg !9753
  %13 = or i32 %11, %12, !dbg !9753
  store volatile i32 %13, i32* %4, align 4, !dbg !9753
  ret void, !dbg !9764
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9767, metadata !DIExpression()), !dbg !9770
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9771
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9771
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9771
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9768, metadata !DIExpression()), !dbg !9770
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9772
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9773
  %6 = tail call fastcc zeroext i1 @device_is_ready.122() #25, !dbg !9774
  br i1 %6, label %7, label %11, !dbg !9776

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !9777
  call void @llvm.dbg.value(metadata i32 %8, metadata !9769, metadata !DIExpression()), !dbg !9770
  %9 = icmp slt i32 %8, 0, !dbg !9778
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9780
  br label %11, !dbg !9780

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9770
  ret i32 %12, !dbg !9781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122() unnamed_addr #1 !dbg !9782 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9786, metadata !DIExpression()), !dbg !9787
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9788, !srcloc !9790
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123() #25, !dbg !9791
  ret i1 %1, !dbg !9792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9793 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9797, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i8 1, metadata !9798, metadata !DIExpression()), !dbg !9802
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9803
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9803
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9803
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9799, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i32 0, metadata !9800, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9801, metadata !DIExpression()), !dbg !9802
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9804
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9807
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !9808
  call void @llvm.dbg.value(metadata i32 %7, metadata !9800, metadata !DIExpression()), !dbg !9802
  ret i32 %7, !dbg !9809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123() unnamed_addr #1 !dbg !9810 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9812, metadata !DIExpression()), !dbg !9813
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !9814
  ret i1 %1, !dbg !9815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9816 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9820, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %1, metadata !9821, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %2, metadata !9822, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %3, metadata !9823, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 0, metadata !9824, metadata !DIExpression()), !dbg !9828
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !9829
  %5 = icmp eq i32 %3, 17, !dbg !9830
  br i1 %5, label %6, label %14, !dbg !9831

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9832
  call void @llvm.dbg.value(metadata i32 %7, metadata !9825, metadata !DIExpression()), !dbg !9833
  %8 = icmp eq i32 %7, 0, !dbg !9834
  %9 = shl nuw i32 1, %1, !dbg !9836
  br i1 %8, label %12, label %10, !dbg !9837

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9838
  br label %14, !dbg !9840

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9841
  br label %14, !dbg !9844

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9845
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9846 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9848, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i8* %1, metadata !9849, metadata !DIExpression()), !dbg !9852
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9853
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9853
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9853
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9850, metadata !DIExpression()), !dbg !9852
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9854
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9854
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !9856
  %9 = icmp eq i32 %8, 0, !dbg !9856
  br i1 %9, label %12, label %10, !dbg !9857

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9858
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !9860
  br label %12, !dbg !9861

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9862
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9864
  %15 = icmp eq i32 %14, 0, !dbg !9864
  br i1 %15, label %19, label %16, !dbg !9865

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9866
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !9867
  store i8 %18, i8* %1, align 1, !dbg !9868
  br label %19, !dbg !9869

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9852
  ret i32 %20, !dbg !9870
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9873, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i8 %1, metadata !9874, metadata !DIExpression()), !dbg !9877
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9878
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9878
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9878
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9875, metadata !DIExpression()), !dbg !9877
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9879

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9880
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !9883
  %10 = icmp eq i32 %9, 0, !dbg !9883
  br i1 %10, label %18, label %11, !dbg !9884

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9885, !srcloc !9892
  call void @llvm.dbg.value(metadata i32 undef, metadata !9888, metadata !DIExpression()) #23, !dbg !9893
  call void @llvm.dbg.value(metadata i32 undef, metadata !9889, metadata !DIExpression()) #23, !dbg !9893
  call void @llvm.dbg.value(metadata i32 undef, metadata !9876, metadata !DIExpression()), !dbg !9877
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9894
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9896
  %15 = icmp eq i32 %14, 0, !dbg !9896
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9885
  br i1 %15, label %17, label %19, !dbg !9897

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9888, metadata !DIExpression()) #23, !dbg !9893
  call void @llvm.dbg.value(metadata i32 %16, metadata !9876, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i32 undef, metadata !9898, metadata !DIExpression()) #23, !dbg !9901
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9903, !srcloc !9904
  br label %18, !dbg !9905

18:                                               ; preds = %17, %7
  br label %7, !dbg !9880, !llvm.loop !9906

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9885
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9908
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %20, metadata !9898, metadata !DIExpression()) #23, !dbg !9910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9912, !srcloc !9904
  ret void, !dbg !9913
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9914 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9916, metadata !DIExpression()), !dbg !9919
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9920
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9920
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9920
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9917, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.value(metadata i32 0, metadata !9918, metadata !DIExpression()), !dbg !9919
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9921
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9921
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !9923
  %8 = icmp ne i32 %7, 0, !dbg !9923
  %9 = zext i1 %8 to i32, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %9, metadata !9918, metadata !DIExpression()), !dbg !9919
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9925
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !9927
  %12 = icmp eq i32 %11, 0, !dbg !9927
  %13 = or i32 %9, 2, !dbg !9928
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9928
  call void @llvm.dbg.value(metadata i32 %14, metadata !9918, metadata !DIExpression()), !dbg !9919
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9929
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !9931
  %17 = icmp eq i32 %16, 0, !dbg !9931
  %18 = or i32 %14, 4, !dbg !9932
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9932
  call void @llvm.dbg.value(metadata i32 %19, metadata !9918, metadata !DIExpression()), !dbg !9919
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9933
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !9935
  %22 = icmp eq i32 %21, 0, !dbg !9935
  %23 = or i32 %19, 8, !dbg !9936
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %24, metadata !9918, metadata !DIExpression()), !dbg !9919
  %25 = and i32 %24, 8, !dbg !9937
  %26 = icmp eq i32 %25, 0, !dbg !9937
  br i1 %26, label %29, label %27, !dbg !9939

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9940
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !9942
  br label %29, !dbg !9943

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9944
  %31 = icmp eq i32 %30, 0, !dbg !9944
  br i1 %31, label %34, label %32, !dbg !9946

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9947
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !9949
  br label %34, !dbg !9950

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9951
  %36 = icmp eq i32 %35, 0, !dbg !9951
  br i1 %36, label %39, label %37, !dbg !9953

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9954
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !9956
  br label %39, !dbg !9957

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9958
  %41 = icmp eq i32 %40, 0, !dbg !9958
  br i1 %41, label %44, label %42, !dbg !9960

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9961
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !9963
  br label %44, !dbg !9964

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9965
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !9966
  ret i32 %24, !dbg !9967
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9970, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9971, metadata !DIExpression()), !dbg !9979
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9980
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9980
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9980
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9972, metadata !DIExpression()), !dbg !9979
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9981
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9981
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9981
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9973, metadata !DIExpression()), !dbg !9979
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9982
  %10 = load i8, i8* %9, align 4, !dbg !9982
  %11 = zext i8 %10 to i32, !dbg !9983
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !9984
  call void @llvm.dbg.value(metadata i32 %12, metadata !9975, metadata !DIExpression()), !dbg !9979
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9985
  %14 = load i8, i8* %13, align 1, !dbg !9985
  %15 = zext i8 %14 to i32, !dbg !9986
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !9987
  call void @llvm.dbg.value(metadata i32 %16, metadata !9976, metadata !DIExpression()), !dbg !9979
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9988
  %18 = load i8, i8* %17, align 2, !dbg !9988
  %19 = zext i8 %18 to i32, !dbg !9989
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %20, metadata !9977, metadata !DIExpression()), !dbg !9979
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9991
  %22 = load i8, i8* %21, align 1, !dbg !9991
  %23 = zext i8 %22 to i32, !dbg !9992
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !9993
  call void @llvm.dbg.value(metadata i32 %24, metadata !9978, metadata !DIExpression()), !dbg !9979
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9994

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9996
  br i1 %26, label %69, label %27, !dbg !9998

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9999

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10000
  br i1 %29, label %65, label %30, !dbg !10000

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10002
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9979
  br i1 %31, label %38, label %34, !dbg !10004

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10005
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10005

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10008
  br i1 %37, label %38, label %69, !dbg !10009

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10010
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !10011
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !10012
  %41 = icmp eq i32 %12, %40, !dbg !10014
  br i1 %41, label %43, label %42, !dbg !10015

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !10016
  br label %43, !dbg !10018

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !10019
  %45 = icmp eq i32 %16, %44, !dbg !10021
  br i1 %45, label %47, label %46, !dbg !10022

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !10023
  br label %47, !dbg !10025

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !10026
  %49 = icmp eq i32 %20, %48, !dbg !10028
  br i1 %49, label %51, label %50, !dbg !10029

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !10030
  br label %51, !dbg !10032

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !10033
  %53 = icmp eq i32 %24, %52, !dbg !10035
  br i1 %53, label %55, label %54, !dbg !10036

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !10037
  br label %55, !dbg !10039

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10040
  %57 = load i32, i32* %56, align 4, !dbg !10040
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10042
  %59 = load i32, i32* %58, align 4, !dbg !10042
  %60 = icmp eq i32 %57, %59, !dbg !10043
  br i1 %60, label %63, label %61, !dbg !10044

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !10045
  %62 = load i32, i32* %56, align 4, !dbg !10047
  store i32 %62, i32* %58, align 4, !dbg !10048
  br label %63, !dbg !10049

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10050
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !10051
  br label %69, !dbg !10052

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10000
  %67 = and i8 %66, 1, !dbg !10000
  %68 = icmp eq i8 %67, 0, !dbg !10000
  br i1 %68, label %30, label %69, !dbg !10000

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9979
  ret i32 %70, !dbg !10053
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10056, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10057, metadata !DIExpression()), !dbg !10059
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10060
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10060
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10060
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10058, metadata !DIExpression()), !dbg !10059
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10061
  %7 = load i32, i32* %6, align 4, !dbg !10061
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10062
  store i32 %7, i32* %8, align 4, !dbg !10063
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10064, !range !10065
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !10066
  %11 = trunc i32 %10 to i8, !dbg !10066
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10067
  store i8 %11, i8* %12, align 4, !dbg !10068
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !10069, !range !10070
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !10071
  %15 = trunc i32 %14 to i8, !dbg !10071
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10072
  store i8 %15, i8* %16, align 1, !dbg !10073
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !10074
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10075, !range !10065
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !10076
  %20 = trunc i32 %19 to i8, !dbg !10076
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10077
  store i8 %20, i8* %21, align 2, !dbg !10078
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !10079, !range !10080
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !10081
  %24 = trunc i32 %23 to i8, !dbg !10081
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10082
  store i8 %24, i8* %25, align 1, !dbg !10083
  ret i32 0, !dbg !10084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10089, metadata !DIExpression()), !dbg !10091
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10092
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10092
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10092
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10090, metadata !DIExpression()), !dbg !10091
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10093
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10093
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !10094
  ret i32 %7, !dbg !10095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #6 !dbg !10096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10100, metadata !DIExpression()), !dbg !10101
  %2 = icmp eq i32 %0, 1024, !dbg !10102
  %3 = select i1 %2, i32 2, i32 0, !dbg !10102
  %4 = icmp eq i32 %0, 1536, !dbg !10102
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10102
  ret i32 %5, !dbg !10103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10106, metadata !DIExpression()), !dbg !10108
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10109
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10109
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10109
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10107, metadata !DIExpression()), !dbg !10108
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10110
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10110
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !10111
  ret i32 %7, !dbg !10112
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !10113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10117, metadata !DIExpression()), !dbg !10118
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10119
  %3 = icmp ult i32 %2, 4, !dbg !10119
  br i1 %3, label %4, label %7, !dbg !10119

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10119
  %6 = load i32, i32* %5, align 4, !dbg !10119
  br label %7, !dbg !10119

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10120
  ret i32 %8, !dbg !10122
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10123 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10125, metadata !DIExpression()), !dbg !10127
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10128
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10128
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10128
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10126, metadata !DIExpression()), !dbg !10127
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10129
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10129
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !10130
  ret i32 %7, !dbg !10131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10136, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32 %1, metadata !10137, metadata !DIExpression()), !dbg !10138
  %3 = icmp eq i32 %0, 4096, !dbg !10139
  %4 = icmp eq i32 %1, 0, !dbg !10139
  %5 = select i1 %4, i32 4, i32 3, !dbg !10139
  %6 = select i1 %4, i32 3, i32 2, !dbg !10139
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10139
  ret i32 %7, !dbg !10140
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10143, metadata !DIExpression()), !dbg !10145
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10146
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10146
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10146
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10144, metadata !DIExpression()), !dbg !10145
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10147
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10147
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !10148
  ret i32 %7, !dbg !10149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = icmp eq i32 %0, 768, !dbg !10156
  %3 = zext i1 %2 to i32, !dbg !10155
  ret i32 %3, !dbg !10158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10159 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10164, metadata !DIExpression()), !dbg !10165
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10166
  %3 = load volatile i32, i32* %2, align 4, !dbg !10166
  %4 = and i32 %3, 768, !dbg !10166
  ret i32 %4, !dbg !10167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10168 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10170, metadata !DIExpression()), !dbg !10171
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10172
  %3 = load volatile i32, i32* %2, align 4, !dbg !10172
  %4 = and i32 %3, 4096, !dbg !10172
  ret i32 %4, !dbg !10173
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10174 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10178
  %3 = load volatile i32, i32* %2, align 4, !dbg !10178
  %4 = and i32 %3, 12288, !dbg !10178
  ret i32 %4, !dbg !10179
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10180 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10182, metadata !DIExpression()), !dbg !10183
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10184
  %3 = load volatile i32, i32* %2, align 4, !dbg !10184
  %4 = and i32 %3, 1536, !dbg !10184
  ret i32 %4, !dbg !10185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #6 !dbg !10186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10190, metadata !DIExpression()), !dbg !10191
  %2 = icmp eq i32 %0, 2, !dbg !10192
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10192
  %4 = icmp eq i32 %0, 1, !dbg !10192
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10192
  ret i32 %5, !dbg !10193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !10194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10198, metadata !DIExpression()), !dbg !10199
  %2 = icmp ult i32 %0, 3, !dbg !10200
  br i1 %2, label %3, label %6, !dbg !10200

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10200
  %5 = load i32, i32* %4, align 4, !dbg !10200
  br label %6, !dbg !10200

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10201
  ret i32 %7, !dbg !10203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10208, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32 %1, metadata !10209, metadata !DIExpression()), !dbg !10210
  %3 = icmp eq i32 %0, 4, !dbg !10211
  %4 = icmp eq i32 %1, 0, !dbg !10211
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10211
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10211
  ret i32 %6, !dbg !10212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10217, metadata !DIExpression()), !dbg !10218
  %2 = icmp eq i32 %0, 1, !dbg !10219
  %3 = select i1 %2, i32 768, i32 0, !dbg !10218
  ret i32 %3, !dbg !10221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10222 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10226, metadata !DIExpression()), !dbg !10227
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10228
  %3 = load volatile i32, i32* %2, align 4, !dbg !10228
  %4 = and i32 %3, -8193, !dbg !10228
  store volatile i32 %4, i32* %2, align 4, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10230 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10234, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata i32 %1, metadata !10235, metadata !DIExpression()), !dbg !10237
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10238
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10238
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10238
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10236, metadata !DIExpression()), !dbg !10237
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10239
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10239
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10240
  ret void, !dbg !10241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10242 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10244, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 %1, metadata !10245, metadata !DIExpression()), !dbg !10247
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10248
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10248
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10248
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10246, metadata !DIExpression()), !dbg !10247
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10249
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10249
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10250
  ret void, !dbg !10251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10254, metadata !DIExpression()), !dbg !10257
  call void @llvm.dbg.value(metadata i32 %1, metadata !10255, metadata !DIExpression()), !dbg !10257
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10258
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10258
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10258
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10256, metadata !DIExpression()), !dbg !10257
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10259
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10259
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10260
  ret void, !dbg !10261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10264, metadata !DIExpression()), !dbg !10267
  call void @llvm.dbg.value(metadata i32 %1, metadata !10265, metadata !DIExpression()), !dbg !10267
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10268
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10268
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10268
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10266, metadata !DIExpression()), !dbg !10267
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10269
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10269
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10270
  ret void, !dbg !10271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10272 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10274, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata i32 %1, metadata !10275, metadata !DIExpression()), !dbg !10279
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10280
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10280
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10280
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10276, metadata !DIExpression()), !dbg !10279
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10281
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10281
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10281
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10277, metadata !DIExpression()), !dbg !10279
  %10 = bitcast i32* %3 to i8*, !dbg !10282
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10282
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10283
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10283
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10287
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10287
  %15 = load i8*, i8** %14, align 4, !dbg !10287
  call void @llvm.dbg.value(metadata i32* %3, metadata !10278, metadata !DIExpression(DW_OP_deref)), !dbg !10279
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !10288
  %17 = icmp slt i32 %16, 0, !dbg !10289
  br i1 %17, label %18, label %21, !dbg !10290

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10291
  %20 = zext i8 %19 to i32, !dbg !10291
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef %20) #24, !dbg !10291
  br label %31, !dbg !10297

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10298
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10298
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #25, !dbg !10299
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10300
  %25 = load i32, i32* %3, align 4, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %25, metadata !10278, metadata !DIExpression()), !dbg !10279
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #25, !dbg !10302
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10303
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10303
  %28 = load volatile i32, i32* %27, align 4, !dbg !10303
  %29 = icmp ugt i32 %28, 16, !dbg !10303
  br i1 %29, label %31, label %30, !dbg !10306

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.132, i32 0, i32 0), i32 noundef 190) #24, !dbg !10307
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.133, i32 0, i32 0)) #24, !dbg !10307
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.132, i32 0, i32 0), i32 noundef 190) #24, !dbg !10307
  unreachable, !dbg !10307

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10309
  ret void, !dbg !10309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10310 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10312, metadata !DIExpression()), !dbg !10313
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10314
  %3 = load volatile i32, i32* %2, align 4, !dbg !10314
  %4 = or i32 %3, 8192, !dbg !10314
  store volatile i32 %4, i32* %2, align 4, !dbg !10314
  ret void, !dbg !10315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10318, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i8* %1, metadata !10319, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32* %2, metadata !10320, metadata !DIExpression()), !dbg !10322
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10323
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10323
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10323
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10321, metadata !DIExpression()), !dbg !10322
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10324
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10324
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10326
  br i1 %9, label %12, label %10, !dbg !10327

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !10328
  br label %12, !dbg !10329

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10322
  ret i32 %13, !dbg !10330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef %0) unnamed_addr #6 !dbg !10331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10333, metadata !DIExpression()), !dbg !10334
  %2 = icmp eq i32 %0, 2, !dbg !10335
  %3 = select i1 %2, i8 87, i8 63, !dbg !10335
  %4 = icmp eq i32 %0, 1, !dbg !10335
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10335
  ret i8 %5, !dbg !10336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10337 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10341, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i32 0, metadata !10342, metadata !DIExpression()), !dbg !10343
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10344
  %3 = load volatile i32, i32* %2, align 4, !dbg !10344
  %4 = and i32 %3, -32769, !dbg !10344
  store volatile i32 %4, i32* %2, align 4, !dbg !10344
  ret void, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10350, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %1, metadata !10351, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 0, metadata !10352, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %2, metadata !10353, metadata !DIExpression()), !dbg !10354
  %4 = zext i32 %1 to i64, !dbg !10355
  %5 = mul nuw nsw i64 %4, 25, !dbg !10355
  %6 = zext i32 %2 to i64, !dbg !10355
  %7 = shl nuw nsw i64 %6, 2, !dbg !10355
  %8 = udiv i64 %5, %7, !dbg !10355
  %9 = trunc i64 %8 to i32, !dbg !10355
  %10 = udiv i32 %9, 100, !dbg !10355
  %11 = shl nuw nsw i32 %10, 4, !dbg !10355
  %12 = mul i32 %10, -100, !dbg !10355
  %13 = add i32 %12, %9, !dbg !10355
  %14 = shl i32 %13, 4, !dbg !10355
  %15 = add i32 %14, 50, !dbg !10355
  %16 = udiv i32 %15, 100, !dbg !10355
  %17 = and i32 %16, 240, !dbg !10355
  %18 = add nuw nsw i32 %17, %11, !dbg !10355
  %19 = and i32 %16, 15, !dbg !10355
  %20 = and i32 %18, 65520, !dbg !10358
  %21 = or i32 %20, %19, !dbg !10358
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10359
  store volatile i32 %21, i32* %22, align 4, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10364, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %1, metadata !10365, metadata !DIExpression()), !dbg !10366
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10367
  %4 = load volatile i32, i32* %3, align 4, !dbg !10367
  %5 = and i32 %4, -769, !dbg !10367
  %6 = or i32 %5, %1, !dbg !10367
  store volatile i32 %6, i32* %3, align 4, !dbg !10367
  ret void, !dbg !10368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10371, metadata !DIExpression()), !dbg !10373
  call void @llvm.dbg.value(metadata i32 %1, metadata !10372, metadata !DIExpression()), !dbg !10373
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10374
  %4 = load volatile i32, i32* %3, align 4, !dbg !10374
  %5 = and i32 %4, -4097, !dbg !10374
  %6 = or i32 %5, %1, !dbg !10374
  store volatile i32 %6, i32* %3, align 4, !dbg !10374
  ret void, !dbg !10375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10378, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 %1, metadata !10379, metadata !DIExpression()), !dbg !10380
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10381
  %4 = load volatile i32, i32* %3, align 4, !dbg !10381
  %5 = and i32 %4, -12289, !dbg !10381
  %6 = or i32 %5, %1, !dbg !10381
  store volatile i32 %6, i32* %3, align 4, !dbg !10381
  ret void, !dbg !10382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10383 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10385, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata i32 %1, metadata !10386, metadata !DIExpression()), !dbg !10387
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10388
  %4 = load volatile i32, i32* %3, align 4, !dbg !10388
  %5 = and i32 %4, -1537, !dbg !10388
  %6 = or i32 %5, %1, !dbg !10388
  store volatile i32 %6, i32* %3, align 4, !dbg !10388
  ret void, !dbg !10389
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10390 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10392, metadata !DIExpression()), !dbg !10393
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10394
  %3 = load volatile i32, i32* %2, align 4, !dbg !10394
  %4 = lshr i32 %3, 3, !dbg !10395
  %5 = and i32 %4, 1, !dbg !10395
  ret i32 %5, !dbg !10396
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10399, metadata !DIExpression()), !dbg !10400
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10401
  %3 = load volatile i32, i32* %2, align 4, !dbg !10401
  %4 = and i32 %3, 1, !dbg !10401
  ret i32 %4, !dbg !10402
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10403 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10405, metadata !DIExpression()), !dbg !10406
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10407
  %3 = load volatile i32, i32* %2, align 4, !dbg !10407
  %4 = lshr i32 %3, 1, !dbg !10408
  %5 = and i32 %4, 1, !dbg !10408
  ret i32 %5, !dbg !10409
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10410 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10412, metadata !DIExpression()), !dbg !10413
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10414
  %3 = load volatile i32, i32* %2, align 4, !dbg !10414
  %4 = lshr i32 %3, 8, !dbg !10415
  %5 = and i32 %4, 1, !dbg !10415
  ret i32 %5, !dbg !10416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10417 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10419, metadata !DIExpression()), !dbg !10420
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10421
  store volatile i32 -257, i32* %2, align 4, !dbg !10421
  ret void, !dbg !10422
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10423 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10425, metadata !DIExpression()), !dbg !10427
  %3 = bitcast i32* %2 to i8*, !dbg !10428
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10428
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10426, metadata !DIExpression()), !dbg !10429
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10430
  %5 = load volatile i32, i32* %4, align 4, !dbg !10430
  store volatile i32 %5, i32* %2, align 4, !dbg !10431
  %6 = load volatile i32, i32* %2, align 4, !dbg !10432
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10433
  %8 = load volatile i32, i32* %7, align 4, !dbg !10433
  store volatile i32 %8, i32* %2, align 4, !dbg !10434
  %9 = load volatile i32, i32* %2, align 4, !dbg !10435
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10436
  ret void, !dbg !10436
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10437 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10439, metadata !DIExpression()), !dbg !10441
  %3 = bitcast i32* %2 to i8*, !dbg !10442
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10442
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10440, metadata !DIExpression()), !dbg !10443
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10444
  %5 = load volatile i32, i32* %4, align 4, !dbg !10444
  store volatile i32 %5, i32* %2, align 4, !dbg !10445
  %6 = load volatile i32, i32* %2, align 4, !dbg !10446
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10447
  %8 = load volatile i32, i32* %7, align 4, !dbg !10447
  store volatile i32 %8, i32* %2, align 4, !dbg !10448
  %9 = load volatile i32, i32* %2, align 4, !dbg !10449
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10450
  ret void, !dbg !10450
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10451 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10453, metadata !DIExpression()), !dbg !10455
  %3 = bitcast i32* %2 to i8*, !dbg !10456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10456
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10454, metadata !DIExpression()), !dbg !10457
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10458
  %5 = load volatile i32, i32* %4, align 4, !dbg !10458
  store volatile i32 %5, i32* %2, align 4, !dbg !10459
  %6 = load volatile i32, i32* %2, align 4, !dbg !10460
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10461
  %8 = load volatile i32, i32* %7, align 4, !dbg !10461
  store volatile i32 %8, i32* %2, align 4, !dbg !10462
  %9 = load volatile i32, i32* %2, align 4, !dbg !10463
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10464
  ret void, !dbg !10464
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10465 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10467, metadata !DIExpression()), !dbg !10469
  %3 = bitcast i32* %2 to i8*, !dbg !10470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10470
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10468, metadata !DIExpression()), !dbg !10471
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10472
  %5 = load volatile i32, i32* %4, align 4, !dbg !10472
  store volatile i32 %5, i32* %2, align 4, !dbg !10473
  %6 = load volatile i32, i32* %2, align 4, !dbg !10474
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10475
  %8 = load volatile i32, i32* %7, align 4, !dbg !10475
  store volatile i32 %8, i32* %2, align 4, !dbg !10476
  %9 = load volatile i32, i32* %2, align 4, !dbg !10477
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10478
  ret void, !dbg !10478
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10479 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10481, metadata !DIExpression()), !dbg !10482
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10483
  %3 = load volatile i32, i32* %2, align 4, !dbg !10483
  %4 = lshr i32 %3, 7, !dbg !10484
  %5 = and i32 %4, 1, !dbg !10484
  ret i32 %5, !dbg !10485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10486 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10490, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i8 %1, metadata !10491, metadata !DIExpression()), !dbg !10492
  %3 = zext i8 %1 to i32, !dbg !10493
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10494
  store volatile i32 %3, i32* %4, align 4, !dbg !10495
  ret void, !dbg !10496
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10497 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10499, metadata !DIExpression()), !dbg !10500
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10501
  %3 = load volatile i32, i32* %2, align 4, !dbg !10501
  %4 = lshr i32 %3, 5, !dbg !10502
  %5 = and i32 %4, 1, !dbg !10502
  ret i32 %5, !dbg !10503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10504 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10508, metadata !DIExpression()), !dbg !10509
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10510
  %3 = load volatile i32, i32* %2, align 4, !dbg !10510
  %4 = trunc i32 %3 to i8, !dbg !10511
  ret i8 %4, !dbg !10512
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10515, metadata !DIExpression()), !dbg !10521
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10522
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10522
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10522
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10516, metadata !DIExpression()), !dbg !10521
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10523
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10523
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10523
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10517, metadata !DIExpression()), !dbg !10521
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !10524
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10525
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10525
  %10 = tail call fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %9) #25, !dbg !10527
  br i1 %10, label %14, label %11, !dbg !10528

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10529
  %13 = zext i8 %12 to i32, !dbg !10529
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.136, i32 0, i32 0), i32 noundef %13) #24, !dbg !10529
  br label %62, !dbg !10535

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10536
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10537
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10537
  %18 = load i8*, i8** %17, align 4, !dbg !10537
  %19 = tail call fastcc i32 @clock_control_on.137(%struct.device* noundef %15, i8* noundef %18) #25, !dbg !10538
  call void @llvm.dbg.value(metadata i32 %19, metadata !10520, metadata !DIExpression()), !dbg !10521
  %20 = icmp eq i32 %19, 0, !dbg !10539
  br i1 %20, label %24, label %21, !dbg !10541

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10542
  %23 = zext i8 %22 to i32, !dbg !10542
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.138, i32 0, i32 0), i32 noundef %23) #24, !dbg !10542
  br label %62, !dbg !10548

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10549
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10549
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #25, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %27, metadata !10520, metadata !DIExpression()), !dbg !10521
  %28 = icmp slt i32 %27, 0, !dbg !10551
  br i1 %28, label %62, label %29, !dbg !10553

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10554
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10554
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #25, !dbg !10555
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10556
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #25, !dbg !10557
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10558
  %34 = load i32, i32* %33, align 4, !dbg !10558
  %35 = icmp ult i32 %34, 3, !dbg !10560
  br i1 %35, label %39, label %36, !dbg !10560

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 2) #25, !dbg !10561
  %38 = zext i8 %37 to i32, !dbg !10561
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.139, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #24, !dbg !10561
  call void @llvm.dbg.value(metadata i32 0, metadata !10518, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 0, metadata !10519, metadata !DIExpression()), !dbg !10521
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10560
  %41 = load i32, i32* %40, align 4, !dbg !10560
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10560
  %43 = load i32, i32* %42, align 4, !dbg !10560
  br label %44, !dbg !10560

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10570
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10570
  call void @llvm.dbg.value(metadata i32 %46, metadata !10519, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 %45, metadata !10518, metadata !DIExpression()), !dbg !10521
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10571
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #25, !dbg !10572
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10573
  %49 = load i8, i8* %48, align 4, !dbg !10573, !range !6673
  %50 = icmp eq i8 %49, 0, !dbg !10573
  br i1 %50, label %52, label %51, !dbg !10575

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !10576
  br label %52, !dbg !10578

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10579
  %54 = load i32, i32* %53, align 4, !dbg !10579
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #25, !dbg !10580
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10581
  %56 = load i8, i8* %55, align 4, !dbg !10581, !range !6673
  %57 = icmp eq i8 %56, 0, !dbg !10581
  br i1 %57, label %60, label %58, !dbg !10583

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10584
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #25, !dbg !10586
  br label %60, !dbg !10587

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10588
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #25, !dbg !10589
  br label %62, !dbg !10590

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10521
  ret i32 %63, !dbg !10591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !10592 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10596, metadata !DIExpression()), !dbg !10600
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10601
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10601
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10601
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10597, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10598, metadata !DIExpression()), !dbg !10600
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10602
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10603
  ret void, !dbg !10604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %0) unnamed_addr #1 !dbg !10605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10609, metadata !DIExpression()), !dbg !10610
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10611, !srcloc !10613
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) #25, !dbg !10614
  ret i1 %2, !dbg !10615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.137(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10618, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i8* %1, metadata !10619, metadata !DIExpression()), !dbg !10621
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10622
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10622
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10622
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10620, metadata !DIExpression()), !dbg !10621
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10623
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10623
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !10624
  ret i32 %8, !dbg !10625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10626 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10630, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.value(metadata i8 0, metadata !10631, metadata !DIExpression()), !dbg !10634
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10635
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10635
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10633, metadata !DIExpression(DW_OP_deref)), !dbg !10634
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %4, metadata !10632, metadata !DIExpression()), !dbg !10634
  %5 = icmp slt i32 %4, 0, !dbg !10637
  br i1 %5, label %9, label %6, !dbg !10639

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10640
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10633, metadata !DIExpression()), !dbg !10634
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10641
  br label %9, !dbg !10642

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10634
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10643
  ret i32 %10, !dbg !10643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10644 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10646, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32 12, metadata !10647, metadata !DIExpression()), !dbg !10650
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10651

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10652, metadata !DIExpression()) #23, !dbg !10658
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10661, !srcloc !10662
  call void @llvm.dbg.value(metadata i32 %4, metadata !10657, metadata !DIExpression()) #23, !dbg !10658
  %5 = or i32 %4, 12, !dbg !10663
  call void @llvm.dbg.value(metadata i32 %5, metadata !10648, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata i32 %5, metadata !10665, metadata !DIExpression()) #23, !dbg !10672
  call void @llvm.dbg.value(metadata i32* %2, metadata !10670, metadata !DIExpression()) #23, !dbg !10672
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10674, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 %6, metadata !10671, metadata !DIExpression()) #23, !dbg !10672
  %7 = icmp eq i32 %6, 0, !dbg !10651
  br i1 %7, label %8, label %3, !dbg !10663, !llvm.loop !10676

8:                                                ; preds = %3
  ret void, !dbg !10677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10678 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10680, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 %1, metadata !10681, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 %2, metadata !10682, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 0, metadata !10683, metadata !DIExpression()), !dbg !10684
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10685
  %5 = load volatile i32, i32* %4, align 4, !dbg !10685
  %6 = and i32 %5, -5633, !dbg !10685
  %7 = or i32 %2, %1, !dbg !10685
  %8 = or i32 %7, %6, !dbg !10685
  store volatile i32 %8, i32* %4, align 4, !dbg !10685
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10686
  %10 = load volatile i32, i32* %9, align 4, !dbg !10686
  %11 = and i32 %10, -12289, !dbg !10686
  store volatile i32 %11, i32* %9, align 4, !dbg !10686
  ret void, !dbg !10687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10688 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10690, metadata !DIExpression()), !dbg !10691
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10692
  %3 = load volatile i32, i32* %2, align 4, !dbg !10692
  %4 = or i32 %3, 8, !dbg !10692
  store volatile i32 %4, i32* %2, align 4, !dbg !10692
  ret void, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10694 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10698, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10699, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.value(metadata i32 0, metadata !10700, metadata !DIExpression()), !dbg !10701
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10702
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10702
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10703
  %5 = load i8, i8* %4, align 4, !dbg !10703
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10704
  ret i32 %6, !dbg !10705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) unnamed_addr #1 !dbg !10706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10708, metadata !DIExpression()), !dbg !10709
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !10710
  ret i1 %2, !dbg !10711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10712 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10714, metadata !DIExpression()), !dbg !10715
  tail call fastcc void @__NVIC_SetPriority.142() #25, !dbg !10716
  store i32 8399, i32* @last_load, align 4, !dbg !10717
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10718
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10719
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10720
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10721
  %3 = or i32 %2, 7, !dbg !10721
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10721
  ret i32 0, !dbg !10722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.142() unnamed_addr #15 !dbg !10723 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10725, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 1, metadata !10726, metadata !DIExpression()), !dbg !10727
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10728
  ret void, !dbg !10731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10734, metadata !DIExpression()), !dbg !10736
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10737
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10738
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10739
  %5 = add i32 %4, %3, !dbg !10739
  store i32 %5, i32* @cycle_count, align 4, !dbg !10739
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10740
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10741
  %7 = sub i32 %5, %6, !dbg !10744
  %8 = udiv i32 %7, 8400, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %8, metadata !10735, metadata !DIExpression()), !dbg !10736
  %9 = mul nuw i32 %8, 8400, !dbg !10746
  %10 = add i32 %9, %6, !dbg !10747
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10747
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10748
  tail call void @z_arm_int_exit() #24, !dbg !10749
  ret void, !dbg !10750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10751 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %1, metadata !10753, metadata !DIExpression()), !dbg !10757
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %2, metadata !10754, metadata !DIExpression()), !dbg !10757
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %3, metadata !10755, metadata !DIExpression()), !dbg !10757
  %4 = and i32 %2, 65536, !dbg !10760
  %5 = icmp ne i32 %4, 0, !dbg !10760
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10762
  %8 = load i32, i32* @last_load, align 4, !dbg !10757
  br i1 %7, label %9, label %13, !dbg !10762

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10763
  %11 = add i32 %10, %8, !dbg !10763
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10763
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10765
  br label %13, !dbg !10766

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10767
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10768
  %16 = add i32 %14, %15, !dbg !10769
  ret i32 %16, !dbg !10770
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10775, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata i1 %1, metadata !10776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10788
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10789
  br i1 %4, label %5, label %8, !dbg !10789

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10791
  %7 = and i32 %6, -2, !dbg !10791
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10791
  store i32 -16777216, i32* @last_load, align 4, !dbg !10793
  br label %60, !dbg !10794

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10795
  call void @llvm.dbg.value(metadata i32 %9, metadata !10780, metadata !DIExpression()), !dbg !10788
  br i1 %3, label %18, label %10, !dbg !10796

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10796
  call void @llvm.dbg.value(metadata i32 undef, metadata !10775, metadata !DIExpression()), !dbg !10788
  %12 = icmp slt i32 %11, 1, !dbg !10797
  br i1 %12, label %18, label %13, !dbg !10797

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10797
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10797
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10797
  %17 = add nuw nsw i32 %16, 8399, !dbg !10797
  br label %18, !dbg !10797

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10775, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10798, metadata !DIExpression()) #23, !dbg !10805
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10807, !srcloc !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10814
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression()) #23, !dbg !10814
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10805
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10815
  br i1 %21, label %23, label %22, !dbg !10818

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10819
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10819
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10819
  unreachable, !dbg !10819

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10807
  call void @llvm.dbg.value(metadata i32 %24, metadata !10810, metadata !DIExpression()) #23, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %24, metadata !10804, metadata !DIExpression()) #23, !dbg !10805
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %24, metadata !10781, metadata !DIExpression()), !dbg !10788
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %25, metadata !10786, metadata !DIExpression()), !dbg !10788
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %26, metadata !10778, metadata !DIExpression()), !dbg !10788
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10824
  %28 = add i32 %27, %25, !dbg !10824
  store i32 %28, i32* @cycle_count, align 4, !dbg !10824
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10825
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10826
  %30 = sub i32 %28, %29, !dbg !10827
  call void @llvm.dbg.value(metadata i32 %30, metadata !10787, metadata !DIExpression()), !dbg !10788
  %31 = icmp slt i32 %30, 0, !dbg !10828
  br i1 %31, label %41, label %32, !dbg !10830

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10777, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata i32 undef, metadata !10777, metadata !DIExpression()), !dbg !10788
  %33 = add nuw i32 %19, %30, !dbg !10831
  %34 = urem i32 %33, 8400, !dbg !10833
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10777, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10788
  %35 = sub nuw nsw i32 %19, %34, !dbg !10834
  call void @llvm.dbg.value(metadata i32 %35, metadata !10777, metadata !DIExpression()), !dbg !10788
  %36 = icmp ugt i32 %35, 1024, !dbg !10835
  br i1 %36, label %37, label %39, !dbg !10835

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10777, metadata !DIExpression()), !dbg !10788
  %38 = icmp ugt i32 %35, 16766400, !dbg !10836
  br i1 %38, label %41, label %39, !dbg !10838

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10839
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10840
  call void @llvm.dbg.value(metadata i32 %43, metadata !10779, metadata !DIExpression()), !dbg !10788
  %44 = add nsw i32 %42, -1, !dbg !10841
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10842
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10843
  %45 = icmp ult i32 %26, %43, !dbg !10844
  br i1 %45, label %46, label %51, !dbg !10846

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10847
  %48 = add i32 %26, %9, !dbg !10849
  %49 = sub i32 %48, %43, !dbg !10850
  %50 = add i32 %49, %47, !dbg !10847
  br label %55, !dbg !10851

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10852
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10854
  %54 = add i32 %52, %53, !dbg !10854
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10855
  store i32 %56, i32* @cycle_count, align 4, !dbg !10855
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10861, metadata !DIExpression()) #23, !dbg !10862
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10864
  br i1 %57, label %59, label %58, !dbg !10867

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10868
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10868
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10868
  unreachable, !dbg !10868

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10856, metadata !DIExpression()) #23, !dbg !10862
  call void @llvm.dbg.value(metadata i32 %24, metadata !10870, metadata !DIExpression()) #23, !dbg !10873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10875, !srcloc !10876
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10877
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10878 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10798, metadata !DIExpression()) #23, !dbg !10882
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10884, !srcloc !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10882
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10887
  br i1 %2, label %4, label %3, !dbg !10888

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10889
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10889
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10889
  unreachable, !dbg !10889

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10882
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10890
  call void @llvm.dbg.value(metadata i32 undef, metadata !10880, metadata !DIExpression()), !dbg !10891
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10892
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10893
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10894
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10881, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10891
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10861, metadata !DIExpression()) #23, !dbg !10895
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10897
  br i1 %8, label %10, label %9, !dbg !10898

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10899
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10899
  unreachable, !dbg !10899

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10900
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10881, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10891
  %12 = sub i32 %11, %7, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %12, metadata !10881, metadata !DIExpression()), !dbg !10891
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10884
  call void @llvm.dbg.value(metadata i32 %13, metadata !10810, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %13, metadata !10804, metadata !DIExpression()) #23, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %13, metadata !10880, metadata !DIExpression()), !dbg !10891
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10895
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10902
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10904, !srcloc !10876
  %14 = udiv i32 %12, 8400, !dbg !10905
  ret i32 %14, !dbg !10906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10907 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10798, metadata !DIExpression()) #23, !dbg !10911
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10913, !srcloc !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10811, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10911
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10916
  br i1 %2, label %4, label %3, !dbg !10917

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10918
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10918
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10918
  unreachable, !dbg !10918

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10810, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()) #23, !dbg !10911
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10919
  call void @llvm.dbg.value(metadata i32 undef, metadata !10909, metadata !DIExpression()), !dbg !10920
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10921
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10922
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10910, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10920
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10861, metadata !DIExpression()) #23, !dbg !10923
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10925
  br i1 %7, label %9, label %8, !dbg !10926

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10927
  unreachable, !dbg !10927

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10928
  call void @llvm.dbg.value(metadata i32 %10, metadata !10910, metadata !DIExpression()), !dbg !10920
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10913
  call void @llvm.dbg.value(metadata i32 %11, metadata !10810, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 %11, metadata !10804, metadata !DIExpression()) #23, !dbg !10911
  call void @llvm.dbg.value(metadata i32 %11, metadata !10909, metadata !DIExpression()), !dbg !10920
  call void @llvm.dbg.value(metadata i32 undef, metadata !10856, metadata !DIExpression()) #23, !dbg !10923
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10931, !srcloc !10876
  ret i32 %10, !dbg !10932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10933 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10934
  %2 = icmp eq i32 %1, -16777216, !dbg !10936
  br i1 %2, label %3, label %6, !dbg !10937

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10938
  %5 = or i32 %4, 1, !dbg !10938
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10938
  br label %6, !dbg !10940

6:                                                ; preds = %3, %0
  ret void, !dbg !10941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10942 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10943
  %2 = and i32 %1, -2, !dbg !10943
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10943
  ret void, !dbg !10944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10945 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10971, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i8 %1, metadata !10972, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10973, metadata !DIExpression()), !dbg !10974
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10975
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10975
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10974
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10976
  %8 = load i8, i8* %6, align 4, !dbg !10977
  %9 = zext i8 %8 to i32, !dbg !10978
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10978
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10979
  br i1 %11, label %18, label %24, !dbg !10980

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10974
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10976
  %14 = load i8, i8* %6, align 4, !dbg !10977
  %15 = zext i8 %14 to i32, !dbg !10978
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10978
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10979
  br i1 %17, label %18, label %24, !dbg !10980, !llvm.loop !10981

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10983
  %21 = load i8, i8* %20, align 1, !dbg !10983
  %22 = icmp eq i8 %21, %1, !dbg !10986
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10987
  br i1 %22, label %24, label %12, !dbg !10988

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10974
  ret i32 %25, !dbg !10989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10990 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11001, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i8 %1, metadata !11002, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 %2, metadata !11003, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 0, metadata !11006, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i32 0, metadata !11007, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.value(metadata i8 0, metadata !11008, metadata !DIExpression()), !dbg !11018
  %4 = icmp eq i8 %1, 0, !dbg !11019
  br i1 %4, label %35, label %5, !dbg !11020

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11019
  br label %9, !dbg !11020

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11008, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i32 %29, metadata !11006, metadata !DIExpression()), !dbg !11017
  %8 = icmp eq i32 %34, %6, !dbg !11019
  br i1 %8, label %35, label %9, !dbg !11020, !llvm.loop !11021

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11008, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i32 %11, metadata !11006, metadata !DIExpression()), !dbg !11017
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11023
  %13 = load i32, i32* %12, align 4, !dbg !11023
  call void @llvm.dbg.value(metadata i32 %13, metadata !11005, metadata !DIExpression()), !dbg !11017
  %14 = and i32 %13, 31, !dbg !11024
  %15 = icmp ult i32 %14, 16, !dbg !11025
  br i1 %15, label %16, label %20, !dbg !11026

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11027
  %18 = load i32, i32* %17, align 4, !dbg !11027
  %19 = or i32 %18, 32, !dbg !11029
  call void @llvm.dbg.value(metadata i32 %19, metadata !11006, metadata !DIExpression()), !dbg !11017
  br label %28, !dbg !11030

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11031

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11032
  %23 = load i32, i32* %22, align 4, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %23, metadata !11010, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11033
  %24 = lshr i32 %23, 7, !dbg !11034
  %25 = and i32 %24, 16, !dbg !11034
  %26 = or i32 %25, %23, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %26, metadata !11006, metadata !DIExpression()), !dbg !11017
  br label %28, !dbg !11035

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11017
  call void @llvm.dbg.value(metadata i32 %29, metadata !11006, metadata !DIExpression()), !dbg !11017
  %30 = lshr i32 %13, 5, !dbg !11036
  %31 = and i32 %30, 255, !dbg !11036
  call void @llvm.dbg.value(metadata i32 %31, metadata !11004, metadata !DIExpression()), !dbg !11017
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !11037
  call void @llvm.dbg.value(metadata i32 %32, metadata !11007, metadata !DIExpression()), !dbg !11017
  %33 = icmp slt i32 %32, 0, !dbg !11038
  %34 = add nuw nsw i32 %10, 1, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %34, metadata !11008, metadata !DIExpression()), !dbg !11018
  br i1 %33, label %35, label %7, !dbg !11041

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11047, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 %1, metadata !11048, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 %2, metadata !11049, metadata !DIExpression()), !dbg !11051
  %4 = icmp ugt i32 %0, 175, !dbg !11052
  br i1 %4, label %16, label %5, !dbg !11054

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11055
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11056
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11056
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11050, metadata !DIExpression()), !dbg !11051
  %9 = add nsw i32 %6, -8, !dbg !11057
  %10 = icmp ult i32 %9, 3, !dbg !11057
  br i1 %10, label %16, label %11, !dbg !11059

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.155(%struct.device* noundef %8) #25, !dbg !11060
  br i1 %12, label %13, label %16, !dbg !11061

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11062
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !11063
  br label %16, !dbg !11064

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11051
  ret i32 %17, !dbg !11065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155(%struct.device* noundef %0) unnamed_addr #1 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11070, metadata !DIExpression()), !dbg !11071
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11072, !srcloc !11074
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156(%struct.device* noundef %0) #25, !dbg !11075
  ret i1 %2, !dbg !11076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156(%struct.device* noundef %0) unnamed_addr #1 !dbg !11077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11079, metadata !DIExpression()), !dbg !11080
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !11081
  ret i1 %2, !dbg !11082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #6 !dbg !11083 {
  ret void, !dbg !11084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !11085 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11087, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 0, metadata !11088, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 2, metadata !11089, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 0, metadata !11090, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 2, metadata !11091, metadata !DIExpression()), !dbg !11092
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11093
  %2 = and i32 %1, 12, !dbg !11094
  call void @llvm.dbg.value(metadata i32 %2, metadata !11087, metadata !DIExpression()), !dbg !11092
  %3 = icmp eq i32 %2, 8, !dbg !11095
  br i1 %3, label %4, label %18, !dbg !11095

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11096
  call void @llvm.dbg.value(metadata i32 %5, metadata !11090, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11092
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11098
  %7 = and i32 %6, 63, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %7, metadata !11091, metadata !DIExpression()), !dbg !11092
  %8 = udiv i32 16000000, %7, !dbg !11100
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11100
  %10 = lshr i32 %9, 6, !dbg !11100
  %11 = and i32 %10, 511, !dbg !11100
  %12 = mul i32 %11, %8, !dbg !11100
  call void @llvm.dbg.value(metadata i32 %12, metadata !11088, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 %12, metadata !11088, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 %12, metadata !11088, metadata !DIExpression()), !dbg !11092
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11102
  %14 = lshr i32 %13, 15, !dbg !11103
  %15 = and i32 %14, 6, !dbg !11103
  %16 = add nuw nsw i32 %15, 2, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %16, metadata !11089, metadata !DIExpression()), !dbg !11092
  %17 = udiv i32 %12, %16, !dbg !11104
  br label %18, !dbg !11105

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11106
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11107
  %21 = lshr i32 %20, 4, !dbg !11108
  %22 = and i32 %21, 15, !dbg !11108
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11109
  %24 = load i8, i8* %23, align 1, !dbg !11109
  %25 = zext i8 %24 to i32, !dbg !11109
  call void @llvm.dbg.value(metadata i32 %25, metadata !11087, metadata !DIExpression()), !dbg !11092
  %26 = lshr i32 %19, %25, !dbg !11110
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11110
  ret void, !dbg !11111
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11112 {
  ret i32 0, !dbg !11117
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11118 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11145, metadata !DIExpression()), !dbg !11156
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11157
  br i1 %3, label %317, label %4, !dbg !11159

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11160
  %6 = load i32, i32* %5, align 4, !dbg !11160
  %7 = and i32 %6, 1, !dbg !11162
  %8 = icmp eq i32 %7, 0, !dbg !11163
  br i1 %8, label %66, label %9, !dbg !11164

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11165
  %11 = and i32 %10, 12, !dbg !11165
  %12 = icmp eq i32 %11, 4, !dbg !11168
  br i1 %12, label %21, label %13, !dbg !11169

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11170
  %15 = and i32 %14, 12, !dbg !11170
  %16 = icmp eq i32 %15, 8, !dbg !11171
  br i1 %16, label %17, label %29, !dbg !11172

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11173
  %19 = and i32 %18, 4194304, !dbg !11174
  %20 = icmp eq i32 %19, 0, !dbg !11175
  br i1 %20, label %29, label %21, !dbg !11176

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11177
  %23 = and i32 %22, 131072, !dbg !11177
  %24 = icmp eq i32 %23, 0, !dbg !11177
  br i1 %24, label %66, label %25, !dbg !11180

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11181
  %27 = load i32, i32* %26, align 4, !dbg !11181
  %28 = icmp eq i32 %27, 0, !dbg !11182
  br i1 %28, label %317, label %66, !dbg !11183

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11184
  %31 = load i32, i32* %30, align 4, !dbg !11184
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11188

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11189
  %34 = or i32 %33, 65536, !dbg !11189
  br label %45, !dbg !11189

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11191
  %37 = or i32 %36, 262144, !dbg !11191
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11191
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11191
  %39 = or i32 %38, 65536, !dbg !11191
  br label %45, !dbg !11191

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11194
  %42 = and i32 %41, -65537, !dbg !11194
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11194
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11194
  %44 = and i32 %43, -262145, !dbg !11194
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11196
  %47 = load i32, i32* %30, align 4, !dbg !11197
  %48 = icmp eq i32 %47, 0, !dbg !11199
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %49, metadata !11146, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i32 %49, metadata !11146, metadata !DIExpression()), !dbg !11156
  br i1 %48, label %58, label %50, !dbg !11201

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11202
  %52 = and i32 %51, 131072, !dbg !11204
  %53 = icmp eq i32 %52, 0, !dbg !11204
  br i1 %53, label %54, label %66, !dbg !11205

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !11206
  %56 = sub i32 %55, %49, !dbg !11209
  %57 = icmp ugt i32 %56, 100, !dbg !11210
  br i1 %57, label %317, label %50, !dbg !11211, !llvm.loop !11212

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11214
  %60 = and i32 %59, 131072, !dbg !11214
  %61 = icmp eq i32 %60, 0, !dbg !11214
  br i1 %61, label %66, label %62, !dbg !11216

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !11217
  %64 = sub i32 %63, %49, !dbg !11220
  %65 = icmp ugt i32 %64, 100, !dbg !11221
  br i1 %65, label %317, label %58, !dbg !11222, !llvm.loop !11223

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11225
  %68 = and i32 %67, 2, !dbg !11227
  %69 = icmp eq i32 %68, 0, !dbg !11228
  br i1 %69, label %121, label %70, !dbg !11229

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11230
  %72 = and i32 %71, 12, !dbg !11230
  %73 = icmp eq i32 %72, 0, !dbg !11233
  br i1 %73, label %82, label %74, !dbg !11234

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11235
  %76 = and i32 %75, 12, !dbg !11235
  %77 = icmp eq i32 %76, 8, !dbg !11236
  br i1 %77, label %78, label %90, !dbg !11237

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11238
  %80 = and i32 %79, 4194304, !dbg !11239
  %81 = icmp eq i32 %80, 0, !dbg !11240
  br i1 %81, label %82, label %90, !dbg !11241

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11242
  %84 = and i32 %83, 2, !dbg !11242
  %85 = icmp eq i32 %84, 0, !dbg !11242
  br i1 %85, label %114, label %86, !dbg !11245

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11246
  %88 = load i32, i32* %87, align 4, !dbg !11246
  %89 = icmp eq i32 %88, 1, !dbg !11247
  br i1 %89, label %114, label %317, !dbg !11248

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11249
  %92 = load i32, i32* %91, align 4, !dbg !11249
  %93 = icmp eq i32 %92, 0, !dbg !11252
  br i1 %93, label %104, label %94, !dbg !11253

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11254
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %95, metadata !11146, metadata !DIExpression()), !dbg !11156
  br label %96, !dbg !11257

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11258
  %98 = and i32 %97, 2, !dbg !11259
  %99 = icmp eq i32 %98, 0, !dbg !11259
  br i1 %99, label %100, label %114, !dbg !11257

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !11260
  %102 = sub i32 %101, %95, !dbg !11263
  %103 = icmp ugt i32 %102, 2, !dbg !11264
  br i1 %103, label %317, label %96, !dbg !11265, !llvm.loop !11266

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11268
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !11270
  call void @llvm.dbg.value(metadata i32 %105, metadata !11146, metadata !DIExpression()), !dbg !11156
  br label %106, !dbg !11271

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11272
  %108 = and i32 %107, 2, !dbg !11272
  %109 = icmp eq i32 %108, 0, !dbg !11272
  br i1 %109, label %121, label %110, !dbg !11271

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !11273
  %112 = sub i32 %111, %105, !dbg !11276
  %113 = icmp ugt i32 %112, 2, !dbg !11277
  br i1 %113, label %317, label %106, !dbg !11278, !llvm.loop !11279

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11281
  %116 = and i32 %115, -249, !dbg !11281
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11281
  %118 = load i32, i32* %117, align 4, !dbg !11281
  %119 = shl i32 %118, 3, !dbg !11281
  %120 = or i32 %119, %116, !dbg !11281
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11281
  br label %121, !dbg !11282

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11282
  %123 = and i32 %122, 8, !dbg !11284
  %124 = icmp eq i32 %123, 0, !dbg !11285
  br i1 %124, label %149, label %125, !dbg !11286

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11287
  %127 = load i32, i32* %126, align 4, !dbg !11287
  %128 = icmp eq i32 %127, 0, !dbg !11290
  br i1 %128, label %139, label %129, !dbg !11291

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11292
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !11294
  call void @llvm.dbg.value(metadata i32 %130, metadata !11146, metadata !DIExpression()), !dbg !11156
  br label %131, !dbg !11295

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11296
  %133 = and i32 %132, 2, !dbg !11297
  %134 = icmp eq i32 %133, 0, !dbg !11297
  br i1 %134, label %135, label %149, !dbg !11295

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !11298
  %137 = sub i32 %136, %130, !dbg !11301
  %138 = icmp ugt i32 %137, 2, !dbg !11302
  br i1 %138, label %317, label %131, !dbg !11303, !llvm.loop !11304

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11306
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !11308
  call void @llvm.dbg.value(metadata i32 %140, metadata !11146, metadata !DIExpression()), !dbg !11156
  br label %141, !dbg !11309

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11310
  %143 = and i32 %142, 2, !dbg !11310
  %144 = icmp eq i32 %143, 0, !dbg !11310
  br i1 %144, label %149, label %145, !dbg !11309

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !11311
  %147 = sub i32 %146, %140, !dbg !11314
  %148 = icmp ugt i32 %147, 2, !dbg !11315
  br i1 %148, label %317, label %141, !dbg !11316, !llvm.loop !11317

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11319
  %151 = and i32 %150, 4, !dbg !11320
  %152 = icmp eq i32 %151, 0, !dbg !11321
  br i1 %152, label %221, label %153, !dbg !11322

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11148, metadata !DIExpression()), !dbg !11323
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11324
  %155 = and i32 %154, 268435456, !dbg !11324
  %156 = icmp eq i32 %155, 0, !dbg !11324
  br i1 %156, label %157, label %164, !dbg !11325

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11326
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11152, metadata !DIExpression()), !dbg !11326
  store volatile i32 0, i32* %2, align 4, !dbg !11326
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11326
  %160 = or i32 %159, 268435456, !dbg !11326
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11326
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11326
  %162 = and i32 %161, 268435456, !dbg !11326
  store volatile i32 %162, i32* %2, align 4, !dbg !11326
  %163 = load volatile i32, i32* %2, align 4, !dbg !11326
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11327
  call void @llvm.dbg.value(metadata i32 1, metadata !11148, metadata !DIExpression()), !dbg !11323
  br label %164, !dbg !11328

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11148, metadata !DIExpression()), !dbg !11323
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11329
  %166 = and i32 %165, 256, !dbg !11329
  %167 = icmp eq i32 %166, 0, !dbg !11329
  br i1 %167, label %168, label %180, !dbg !11331

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11332
  %170 = or i32 %169, 256, !dbg !11332
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11332
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !11334
  call void @llvm.dbg.value(metadata i32 %171, metadata !11146, metadata !DIExpression()), !dbg !11156
  br label %172, !dbg !11335

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11336
  %174 = and i32 %173, 256, !dbg !11336
  %175 = icmp eq i32 %174, 0, !dbg !11336
  br i1 %175, label %176, label %180, !dbg !11335

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !11337
  %178 = sub i32 %177, %171, !dbg !11340
  %179 = icmp ugt i32 %178, 2, !dbg !11341
  br i1 %179, label %317, label %172, !dbg !11342, !llvm.loop !11343

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11345
  %182 = load i32, i32* %181, align 4, !dbg !11345
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11348

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11349
  %185 = or i32 %184, 1, !dbg !11349
  br label %196, !dbg !11349

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11351
  %188 = or i32 %187, 4, !dbg !11351
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11351
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11351
  %190 = or i32 %189, 1, !dbg !11351
  br label %196, !dbg !11351

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11354
  %193 = and i32 %192, -2, !dbg !11354
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11354
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11354
  %195 = and i32 %194, -5, !dbg !11354
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11356
  %198 = load i32, i32* %181, align 4, !dbg !11357
  %199 = icmp eq i32 %198, 0, !dbg !11359
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %200, metadata !11146, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i32 %200, metadata !11146, metadata !DIExpression()), !dbg !11156
  br i1 %199, label %209, label %201, !dbg !11361

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11362
  %203 = and i32 %202, 2, !dbg !11364
  %204 = icmp eq i32 %203, 0, !dbg !11364
  br i1 %204, label %205, label %217, !dbg !11365

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !11366
  %207 = sub i32 %206, %200, !dbg !11369
  %208 = icmp ugt i32 %207, 5000, !dbg !11370
  br i1 %208, label %317, label %201, !dbg !11371, !llvm.loop !11372

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11374
  %211 = and i32 %210, 2, !dbg !11374
  %212 = icmp eq i32 %211, 0, !dbg !11374
  br i1 %212, label %217, label %213, !dbg !11376

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !11377
  %215 = sub i32 %214, %200, !dbg !11380
  %216 = icmp ugt i32 %215, 5000, !dbg !11381
  br i1 %216, label %317, label %209, !dbg !11382, !llvm.loop !11383

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11385

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11386
  %220 = and i32 %219, -268435457, !dbg !11386
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11386
  br label %221, !dbg !11389

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11390
  %223 = load i32, i32* %222, align 4, !dbg !11390
  %224 = icmp eq i32 %223, 0, !dbg !11392
  br i1 %224, label %316, label %225, !dbg !11393

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11394
  %227 = and i32 %226, 12, !dbg !11394
  %228 = icmp eq i32 %227, 8, !dbg !11397
  br i1 %228, label %277, label %229, !dbg !11398

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11399
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11402
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !11402
  call void @llvm.dbg.value(metadata i32 %231, metadata !11146, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i32 %231, metadata !11146, metadata !DIExpression()), !dbg !11156
  br i1 %230, label %232, label %269, !dbg !11403

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11404
  %234 = and i32 %233, 33554432, !dbg !11404
  %235 = icmp eq i32 %234, 0, !dbg !11404
  br i1 %235, label %240, label %236, !dbg !11406

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !11407
  %238 = sub i32 %237, %231, !dbg !11410
  %239 = icmp ugt i32 %238, 2, !dbg !11411
  br i1 %239, label %317, label %232, !dbg !11412, !llvm.loop !11413

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11415
  %242 = load i32, i32* %241, align 4, !dbg !11415
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11415
  %244 = load i32, i32* %243, align 4, !dbg !11415
  %245 = or i32 %244, %242, !dbg !11415
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11415
  %247 = load i32, i32* %246, align 4, !dbg !11415
  %248 = shl i32 %247, 6, !dbg !11415
  %249 = or i32 %245, %248, !dbg !11415
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11415
  %251 = load i32, i32* %250, align 4, !dbg !11415
  %252 = shl i32 %251, 15, !dbg !11415
  %253 = add i32 %252, -65536, !dbg !11415
  %254 = and i32 %253, -65536, !dbg !11415
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11415
  %256 = load i32, i32* %255, align 4, !dbg !11415
  %257 = shl i32 %256, 24, !dbg !11415
  %258 = or i32 %249, %257, !dbg !11415
  %259 = or i32 %258, %254, !dbg !11415
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11415
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11416
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !11417
  call void @llvm.dbg.value(metadata i32 %260, metadata !11146, metadata !DIExpression()), !dbg !11156
  br label %261, !dbg !11418

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11419
  %263 = and i32 %262, 33554432, !dbg !11420
  %264 = icmp eq i32 %263, 0, !dbg !11420
  br i1 %264, label %265, label %316, !dbg !11418

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !11421
  %267 = sub i32 %266, %260, !dbg !11424
  %268 = icmp ugt i32 %267, 2, !dbg !11425
  br i1 %268, label %317, label %261, !dbg !11426, !llvm.loop !11427

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11429
  %271 = and i32 %270, 33554432, !dbg !11429
  %272 = icmp eq i32 %271, 0, !dbg !11429
  br i1 %272, label %316, label %273, !dbg !11431

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !11432
  %275 = sub i32 %274, %231, !dbg !11435
  %276 = icmp ugt i32 %275, 2, !dbg !11436
  br i1 %276, label %317, label %269, !dbg !11437, !llvm.loop !11438

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11440
  br i1 %278, label %317, label %279, !dbg !11443

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11444
  call void @llvm.dbg.value(metadata i32 %280, metadata !11147, metadata !DIExpression()), !dbg !11156
  %281 = and i32 %280, 4194304, !dbg !11446
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11448
  %283 = load i32, i32* %282, align 4, !dbg !11448
  %284 = icmp eq i32 %281, %283, !dbg !11449
  br i1 %284, label %285, label %317, !dbg !11450

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11451
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11452
  %288 = load i32, i32* %287, align 4, !dbg !11452
  %289 = icmp eq i32 %286, %288, !dbg !11453
  br i1 %289, label %290, label %317, !dbg !11454

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11455
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11456
  %293 = load i32, i32* %292, align 4, !dbg !11456
  %294 = shl i32 %293, 6, !dbg !11457
  %295 = icmp eq i32 %291, %294, !dbg !11458
  br i1 %295, label %296, label %317, !dbg !11459

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11460
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11461
  %299 = load i32, i32* %298, align 4, !dbg !11461
  %300 = shl i32 %299, 15, !dbg !11462
  %301 = add i32 %300, -65536, !dbg !11462
  %302 = and i32 %301, -65536, !dbg !11462
  %303 = icmp eq i32 %297, %302, !dbg !11463
  br i1 %303, label %304, label %317, !dbg !11464

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11465
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11466
  %307 = load i32, i32* %306, align 4, !dbg !11466
  %308 = shl i32 %307, 24, !dbg !11467
  %309 = icmp eq i32 %305, %308, !dbg !11468
  br i1 %309, label %310, label %317, !dbg !11469

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !11470
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11471
  %313 = load i32, i32* %312, align 4, !dbg !11471
  %314 = shl i32 %313, 28, !dbg !11472
  %315 = icmp eq i32 %311, %314, !dbg !11473
  br i1 %315, label %316, label %317, !dbg !11474

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !11475

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11156
  ret i32 %318, !dbg !11476
}

; Function Attrs: optsize
declare !dbg !11477 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11479 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11492, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i32 %1, metadata !11493, metadata !DIExpression()), !dbg !11495
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11496
  br i1 %3, label %115, label %4, !dbg !11498

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11499
  %6 = and i32 %5, 7, !dbg !11499
  %7 = icmp ult i32 %6, %1, !dbg !11501
  br i1 %7, label %8, label %13, !dbg !11502

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11503
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11503
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11505
  %11 = and i32 %10, 7, !dbg !11505
  %12 = icmp eq i32 %11, %1, !dbg !11507
  br i1 %12, label %13, label %115, !dbg !11508

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11509
  %15 = load i32, i32* %14, align 4, !dbg !11509
  %16 = and i32 %15, 2, !dbg !11511
  %17 = icmp eq i32 %16, 0, !dbg !11512
  br i1 %17, label %39, label %18, !dbg !11513

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11514
  %20 = icmp eq i32 %19, 0, !dbg !11517
  br i1 %20, label %25, label %21, !dbg !11518

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11519
  %23 = or i32 %22, 7168, !dbg !11519
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11519
  %24 = load i32, i32* %14, align 4, !dbg !11521
  br label %25, !dbg !11523

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11521
  %27 = and i32 %26, 8, !dbg !11524
  %28 = icmp eq i32 %27, 0, !dbg !11525
  br i1 %28, label %32, label %29, !dbg !11526

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11527
  %31 = or i32 %30, 57344, !dbg !11527
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11527
  br label %32, !dbg !11529

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11530
  %34 = and i32 %33, -241, !dbg !11530
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11530
  %36 = load i32, i32* %35, align 4, !dbg !11530
  %37 = or i32 %34, %36, !dbg !11530
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11530
  %38 = load i32, i32* %14, align 4, !dbg !11531
  br label %39, !dbg !11533

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11531
  %41 = and i32 %40, 1, !dbg !11534
  %42 = icmp eq i32 %41, 0, !dbg !11535
  br i1 %42, label %73, label %43, !dbg !11536

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11537
  %45 = load i32, i32* %44, align 4, !dbg !11537
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11540

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11541
  %48 = and i32 %47, 131072, !dbg !11544
  %49 = icmp eq i32 %48, 0, !dbg !11544
  br i1 %49, label %115, label %58, !dbg !11545

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11546
  %52 = and i32 %51, 33554432, !dbg !11550
  %53 = icmp eq i32 %52, 0, !dbg !11550
  br i1 %53, label %115, label %58, !dbg !11551

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11552
  %56 = and i32 %55, 2, !dbg !11555
  %57 = icmp eq i32 %56, 0, !dbg !11555
  br i1 %57, label %115, label %58, !dbg !11556

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11557
  %60 = and i32 %59, -4, !dbg !11557
  %61 = or i32 %60, %45, !dbg !11557
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11557
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !11558
  call void @llvm.dbg.value(metadata i32 %62, metadata !11494, metadata !DIExpression()), !dbg !11495
  br label %63, !dbg !11559

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11560
  %65 = and i32 %64, 12, !dbg !11560
  %66 = load i32, i32* %44, align 4, !dbg !11561
  %67 = shl i32 %66, 2, !dbg !11562
  %68 = icmp eq i32 %65, %67, !dbg !11563
  br i1 %68, label %73, label %69, !dbg !11559

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !11564
  %71 = sub i32 %70, %62, !dbg !11567
  %72 = icmp ugt i32 %71, 5000, !dbg !11568
  br i1 %72, label %115, label %63, !dbg !11569, !llvm.loop !11570

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11572
  %75 = and i32 %74, 7, !dbg !11572
  %76 = icmp ugt i32 %75, %1, !dbg !11574
  br i1 %76, label %77, label %82, !dbg !11575

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11576
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11576
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11578
  %80 = and i32 %79, 7, !dbg !11578
  %81 = icmp eq i32 %80, %1, !dbg !11580
  br i1 %81, label %82, label %115, !dbg !11581

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11582
  %84 = and i32 %83, 4, !dbg !11584
  %85 = icmp eq i32 %84, 0, !dbg !11585
  br i1 %85, label %93, label %86, !dbg !11586

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11587
  %88 = and i32 %87, -7169, !dbg !11587
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11587
  %90 = load i32, i32* %89, align 4, !dbg !11587
  %91 = or i32 %88, %90, !dbg !11587
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11587
  %92 = load i32, i32* %14, align 4, !dbg !11589
  br label %93, !dbg !11591

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11589
  %95 = and i32 %94, 8, !dbg !11592
  %96 = icmp eq i32 %95, 0, !dbg !11593
  br i1 %96, label %104, label %97, !dbg !11594

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11595
  %99 = and i32 %98, -57345, !dbg !11595
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11595
  %101 = load i32, i32* %100, align 4, !dbg !11595
  %102 = shl i32 %101, 3, !dbg !11595
  %103 = or i32 %102, %99, !dbg !11595
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11595
  br label %104, !dbg !11597

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !11598
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11599
  %107 = lshr i32 %106, 4, !dbg !11600
  %108 = and i32 %107, 15, !dbg !11600
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11601
  %110 = load i8, i8* %109, align 1, !dbg !11601
  %111 = zext i8 %110 to i32, !dbg !11601
  %112 = lshr i32 %105, %111, !dbg !11602
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11603
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11604
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !11605
  br label %115, !dbg !11606

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11495
  ret i32 %116, !dbg !11607
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11608 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11610, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata i32 0, metadata !11611, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata i32 0, metadata !11612, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata i32 0, metadata !11613, metadata !DIExpression()), !dbg !11614
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11615
  %2 = and i32 %1, 12, !dbg !11616
  %3 = icmp eq i32 %2, 8, !dbg !11617
  br i1 %3, label %4, label %21, !dbg !11617

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11618
  %6 = and i32 %5, 63, !dbg !11621
  call void @llvm.dbg.value(metadata i32 %6, metadata !11610, metadata !DIExpression()), !dbg !11614
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11622
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11624
  %9 = lshr i32 %8, 6, !dbg !11624
  %10 = and i32 %9, 511, !dbg !11624
  %11 = zext i32 %10 to i64, !dbg !11624
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11624
  %13 = zext i32 %6 to i64, !dbg !11624
  %14 = udiv i64 %12, %13, !dbg !11624
  %15 = trunc i64 %14 to i32, !dbg !11624
  call void @llvm.dbg.value(metadata i32 %15, metadata !11611, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata i32 %15, metadata !11611, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata i32 %15, metadata !11611, metadata !DIExpression()), !dbg !11614
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11625
  %17 = lshr i32 %16, 15, !dbg !11626
  %18 = and i32 %17, 6, !dbg !11626
  %19 = add nuw nsw i32 %18, 2, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %19, metadata !11612, metadata !DIExpression()), !dbg !11614
  %20 = udiv i32 %15, %19, !dbg !11627
  call void @llvm.dbg.value(metadata i32 %20, metadata !11613, metadata !DIExpression()), !dbg !11614
  br label %21, !dbg !11628

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11629
  call void @llvm.dbg.value(metadata i32 %22, metadata !11613, metadata !DIExpression()), !dbg !11614
  ret i32 %22, !dbg !11630
}

; Function Attrs: optsize
declare !dbg !11631 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11634 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11638, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.value(metadata i32 %1, metadata !11639, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.value(metadata i32 %2, metadata !11640, metadata !DIExpression()), !dbg !11655
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11656
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11656
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11641, metadata !DIExpression()), !dbg !11657
  %7 = icmp eq i32 %0, 0, !dbg !11658
  br i1 %7, label %8, label %24, !dbg !11659

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !11660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !11660
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11651, metadata !DIExpression()), !dbg !11660
  store volatile i32 0, i32* %5, align 4, !dbg !11660
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11660
  %11 = or i32 %10, 1, !dbg !11660
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11660
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11660
  %13 = and i32 %12, 1, !dbg !11660
  store volatile i32 %13, i32* %5, align 4, !dbg !11660
  %14 = load volatile i32, i32* %5, align 4, !dbg !11660
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !11661
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11662
  store i32 256, i32* %15, align 4, !dbg !11663
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11664
  store i32 2, i32* %16, align 4, !dbg !11665
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11666
  store i32 3, i32* %17, align 4, !dbg !11667
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11668
  store i32 0, i32* %18, align 4, !dbg !11669
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11670
  store i32 0, i32* %19, align 4, !dbg !11671
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11672
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11673
  %21 = and i32 %20, -123731969, !dbg !11673
  %22 = or i32 %2, %1, !dbg !11673
  %23 = or i32 %22, %21, !dbg !11673
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11673
  br label %24, !dbg !11674

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11675
  ret void, !dbg !11675
}

; Function Attrs: optsize
declare !dbg !11676 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11680 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11681
  ret void, !dbg !11682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11683 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11684
  ret void, !dbg !11685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !11686 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11687
  ret i32 %1, !dbg !11688
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !11689 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11690
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11691
  %3 = lshr i32 %2, 10, !dbg !11692
  %4 = and i32 %3, 7, !dbg !11692
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11693
  %6 = load i8, i8* %5, align 1, !dbg !11693
  %7 = zext i8 %6 to i32, !dbg !11693
  %8 = lshr i32 %1, %7, !dbg !11694
  ret i32 %8, !dbg !11695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !11696 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11697
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11698
  %3 = lshr i32 %2, 13, !dbg !11699
  %4 = and i32 %3, 7, !dbg !11699
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11700
  %6 = load i8, i8* %5, align 1, !dbg !11700
  %7 = zext i8 %6 to i32, !dbg !11700
  %8 = lshr i32 %1, %7, !dbg !11701
  ret i32 %8, !dbg !11702
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11703 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11707, metadata !DIExpression()), !dbg !11708
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11709
  store i32 15, i32* %2, align 4, !dbg !11710
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11711
  %4 = and i32 %3, 262144, !dbg !11713
  %5 = icmp eq i32 %4, 0, !dbg !11714
  br i1 %5, label %8, label %6, !dbg !11715

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11716
  store i32 327680, i32* %7, align 4, !dbg !11718
  br label %15, !dbg !11719

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11720
  %10 = and i32 %9, 65536, !dbg !11722
  %11 = icmp eq i32 %10, 0, !dbg !11723
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11724
  br i1 %11, label %14, label %13, !dbg !11725

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11726
  br label %15, !dbg !11728

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11729
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11731
  %17 = and i32 %16, 1, !dbg !11733
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11734
  store i32 %17, i32* %18, align 4, !dbg !11736
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11737
  %20 = lshr i32 %19, 3, !dbg !11738
  %21 = and i32 %20, 31, !dbg !11738
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11739
  store i32 %21, i32* %22, align 4, !dbg !11740
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11741
  %24 = and i32 %23, 4, !dbg !11743
  %25 = icmp eq i32 %24, 0, !dbg !11744
  br i1 %25, label %28, label %26, !dbg !11745

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11746
  store i32 5, i32* %27, align 4, !dbg !11748
  br label %35, !dbg !11749

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11750
  %30 = and i32 %29, 1, !dbg !11752
  %31 = icmp eq i32 %30, 0, !dbg !11753
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11754
  br i1 %31, label %34, label %33, !dbg !11755

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11756
  br label %35, !dbg !11758

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11759
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11761
  %37 = and i32 %36, 1, !dbg !11763
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11764
  store i32 %37, i32* %38, align 4, !dbg !11766
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11767
  %40 = and i32 %39, 16777216, !dbg !11769
  %41 = icmp eq i32 %40, 0, !dbg !11770
  %42 = select i1 %41, i32 1, i32 2, !dbg !11771
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11772
  store i32 %42, i32* %43, align 4, !dbg !11774
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11775
  %45 = and i32 %44, 4194304, !dbg !11776
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11777
  store i32 %45, i32* %46, align 4, !dbg !11778
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11779
  %48 = and i32 %47, 63, !dbg !11780
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11781
  store i32 %48, i32* %49, align 4, !dbg !11782
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11783
  %51 = lshr i32 %50, 6, !dbg !11784
  %52 = and i32 %51, 511, !dbg !11784
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11785
  store i32 %52, i32* %53, align 4, !dbg !11786
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11787
  %55 = shl i32 %54, 1, !dbg !11788
  %56 = and i32 %55, 393216, !dbg !11788
  %57 = add nuw nsw i32 %56, 131072, !dbg !11788
  %58 = lshr exact i32 %57, 16, !dbg !11789
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11790
  store i32 %58, i32* %59, align 4, !dbg !11791
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11792
  %61 = lshr i32 %60, 24, !dbg !11793
  %62 = and i32 %61, 15, !dbg !11793
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11794
  store i32 %62, i32* %63, align 4, !dbg !11795
  ret void, !dbg !11796
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !11797 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11801, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.value(metadata i32* %1, metadata !11802, metadata !DIExpression()), !dbg !11803
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11804
  store i32 15, i32* %3, align 4, !dbg !11805
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11806
  %5 = and i32 %4, 3, !dbg !11807
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11808
  store i32 %5, i32* %6, align 4, !dbg !11809
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11810
  %8 = and i32 %7, 240, !dbg !11811
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11812
  store i32 %8, i32* %9, align 4, !dbg !11813
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11814
  %11 = and i32 %10, 7168, !dbg !11815
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11816
  store i32 %11, i32* %12, align 4, !dbg !11817
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11818
  %14 = lshr i32 %13, 3, !dbg !11819
  %15 = and i32 %14, 7168, !dbg !11819
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11820
  store i32 %15, i32* %16, align 4, !dbg !11821
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11822
  %18 = and i32 %17, 7, !dbg !11823
  store i32 %18, i32* %1, align 4, !dbg !11824
  ret void, !dbg !11825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11826 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11827
  %2 = and i32 %1, 128, !dbg !11827
  %3 = icmp eq i32 %2, 0, !dbg !11827
  br i1 %3, label %5, label %4, !dbg !11829

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !11830
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11832
  br label %5, !dbg !11833

5:                                                ; preds = %4, %0
  ret void, !dbg !11834
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11835 {
  ret void, !dbg !11836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11840, metadata !DIExpression()), !dbg !11841
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !11842
  ret void, !dbg !11843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11847, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i32 1000, metadata !11848, metadata !DIExpression()), !dbg !11849
  %2 = udiv i32 %0, 1000, !dbg !11850
  %3 = add nsw i32 %2, -1, !dbg !11851
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11852
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11853
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11854
  ret void, !dbg !11855
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11856 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11858, metadata !DIExpression()), !dbg !11860
  %3 = bitcast i32* %2 to i8*, !dbg !11861
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11861
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11859, metadata !DIExpression()), !dbg !11862
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11863
  store volatile i32 %4, i32* %2, align 4, !dbg !11862
  %5 = load volatile i32, i32* %2, align 4, !dbg !11864
  %6 = icmp eq i32 %0, -1, !dbg !11865
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11858, metadata !DIExpression()), !dbg !11860
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %8, metadata !11858, metadata !DIExpression()), !dbg !11860
  br label %9, !dbg !11867

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11858, metadata !DIExpression()), !dbg !11860
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11868
  call void @llvm.dbg.value(metadata i32 undef, metadata !11858, metadata !DIExpression()), !dbg !11860
  %12 = shl i32 %11, 15, !dbg !11860
  %13 = ashr i32 %12, 31, !dbg !11860
  %14 = add i32 %13, %10, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %14, metadata !11858, metadata !DIExpression()), !dbg !11860
  %15 = icmp eq i32 %14, 0, !dbg !11867
  br i1 %15, label %16, label %9, !dbg !11867

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11871
  ret void, !dbg !11871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !11872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11874, metadata !DIExpression()), !dbg !11875
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11876
  ret void, !dbg !11877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11883, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.value(metadata i32 0, metadata !11886, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.value(metadata i32 0, metadata !11887, metadata !DIExpression()), !dbg !11888
  %2 = icmp eq i32 %0, 0, !dbg !11889
  br i1 %2, label %50, label %3, !dbg !11891

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11892
  %5 = icmp eq i32 %4, 49152, !dbg !11895
  br i1 %5, label %6, label %15, !dbg !11896

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11886, metadata !DIExpression()), !dbg !11888
  %7 = add i32 %0, -64000001, !dbg !11897
  %8 = icmp ult i32 %7, 26000000, !dbg !11897
  br i1 %8, label %15, label %9, !dbg !11897

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11900
  %11 = select i1 %10, i32 0, i32 3, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %11, metadata !11886, metadata !DIExpression()), !dbg !11888
  %12 = add i32 %0, -30000001, !dbg !11903
  %13 = icmp ult i32 %12, 60000000, !dbg !11903
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11903
  call void @llvm.dbg.value(metadata i32 %14, metadata !11886, metadata !DIExpression()), !dbg !11888
  br label %15, !dbg !11903

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11888
  call void @llvm.dbg.value(metadata i32 %16, metadata !11886, metadata !DIExpression()), !dbg !11888
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11906
  %18 = icmp eq i32 %17, 32768, !dbg !11908
  br i1 %18, label %19, label %27, !dbg !11909

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11910
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11913
  br i1 %22, label %27, label %23, !dbg !11913

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11914
  %25 = and i1 %24, %21, !dbg !11917
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11917
  call void @llvm.dbg.value(metadata i32 %26, metadata !11886, metadata !DIExpression()), !dbg !11888
  br label %27, !dbg !11917

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11918
  call void @llvm.dbg.value(metadata i32 %28, metadata !11886, metadata !DIExpression()), !dbg !11888
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11919
  %30 = icmp eq i32 %29, 16384, !dbg !11921
  br i1 %30, label %31, label %39, !dbg !11922

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11923
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11926
  br i1 %34, label %39, label %35, !dbg !11926

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11927
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11930
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11930
  call void @llvm.dbg.value(metadata i32 %38, metadata !11886, metadata !DIExpression()), !dbg !11888
  br label %39, !dbg !11930

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11918
  call void @llvm.dbg.value(metadata i32 %40, metadata !11886, metadata !DIExpression()), !dbg !11888
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #25, !dbg !11931
  call void @llvm.dbg.value(metadata i32 2, metadata !11884, metadata !DIExpression()), !dbg !11888
  br label %41, !dbg !11932

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11918
  call void @llvm.dbg.value(metadata i32 %42, metadata !11884, metadata !DIExpression()), !dbg !11888
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !11933
  call void @llvm.dbg.value(metadata i32 %43, metadata !11885, metadata !DIExpression()), !dbg !11888
  %44 = add nsw i32 %42, -1, !dbg !11935
  call void @llvm.dbg.value(metadata i32 %44, metadata !11884, metadata !DIExpression()), !dbg !11888
  %45 = icmp ne i32 %43, %40, !dbg !11936
  %46 = icmp ne i32 %44, 0, !dbg !11937
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11937
  br i1 %47, label %41, label %48, !dbg !11938, !llvm.loop !11939

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11941
  call void @llvm.dbg.value(metadata i32 %51, metadata !11887, metadata !DIExpression()), !dbg !11888
  ret i32 %51, !dbg !11942
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !11943 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11945
  %2 = and i32 %1, 49152, !dbg !11945
  ret i32 %2, !dbg !11946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11949, metadata !DIExpression()), !dbg !11950
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11951
  %3 = and i32 %2, -8, !dbg !11951
  %4 = or i32 %3, %0, !dbg !11951
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11951
  ret void, !dbg !11952
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !11953 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11954
  %2 = and i32 %1, 7, !dbg !11954
  ret i32 %2, !dbg !11955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11956 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11974, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11975, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.value(metadata i32 0, metadata !11976, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.value(metadata i32 0, metadata !11977, metadata !DIExpression()), !dbg !11978
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !11979
  %4 = icmp eq i32 %3, 0, !dbg !11981
  br i1 %4, label %5, label %21, !dbg !11982

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !11983
  call void @llvm.dbg.value(metadata i32 %6, metadata !11977, metadata !DIExpression()), !dbg !11978
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.165() #25, !dbg !11985
  %8 = icmp eq i32 %7, 1, !dbg !11987
  br i1 %8, label %13, label %9, !dbg !11988

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.166() #25, !dbg !11989
  br label %10, !dbg !11991

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.165() #25, !dbg !11992
  %12 = icmp eq i32 %11, 1, !dbg !11993
  br i1 %12, label %13, label %10, !dbg !11991, !llvm.loop !11994

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11996
  %15 = load i32, i32* %14, align 4, !dbg !11996
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11997
  %17 = load i32, i32* %16, align 4, !dbg !11997
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11998
  %19 = load i32, i32* %18, align 4, !dbg !11998
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.167(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !11999
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !12000
  call void @llvm.dbg.value(metadata i32 %20, metadata !11976, metadata !DIExpression()), !dbg !11978
  br label %21, !dbg !12001

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12002
  call void @llvm.dbg.value(metadata i32 %22, metadata !11976, metadata !DIExpression()), !dbg !11978
  ret i32 %22, !dbg !12003
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !12004 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12008, metadata !DIExpression()), !dbg !12009
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.169() #25, !dbg !12010
  %2 = icmp ne i32 %1, 0, !dbg !12012
  call void @llvm.dbg.value(metadata i1 %2, metadata !12008, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12009
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !12013
  %4 = icmp ne i32 %3, 0, !dbg !12015
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12016
  %6 = zext i1 %5 to i32, !dbg !12016
  call void @llvm.dbg.value(metadata i32 %6, metadata !12008, metadata !DIExpression()), !dbg !12009
  ret i32 %6, !dbg !12017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !12018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12022, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12023, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata i32 0, metadata !12024, metadata !DIExpression()), !dbg !12025
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12026
  %4 = load i32, i32* %3, align 4, !dbg !12026
  %5 = and i32 %4, 63, !dbg !12027
  %6 = udiv i32 %0, %5, !dbg !12028
  call void @llvm.dbg.value(metadata i32 %6, metadata !12024, metadata !DIExpression()), !dbg !12025
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12029
  %8 = load i32, i32* %7, align 4, !dbg !12029
  %9 = and i32 %8, 511, !dbg !12030
  %10 = mul i32 %9, %6, !dbg !12031
  call void @llvm.dbg.value(metadata i32 %10, metadata !12024, metadata !DIExpression()), !dbg !12025
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12032
  %12 = load i32, i32* %11, align 4, !dbg !12032
  %13 = lshr i32 %12, 15, !dbg !12033
  %14 = and i32 %13, 131070, !dbg !12033
  %15 = add nuw nsw i32 %14, 2, !dbg !12033
  %16 = udiv i32 %10, %15, !dbg !12034
  call void @llvm.dbg.value(metadata i32 %16, metadata !12024, metadata !DIExpression()), !dbg !12025
  ret i32 %16, !dbg !12035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.165() unnamed_addr #5 !dbg !12036 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12037
  %2 = lshr i32 %1, 1, !dbg !12038
  %3 = and i32 %2, 1, !dbg !12038
  ret i32 %3, !dbg !12039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.166() unnamed_addr #15 !dbg !12040 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12041
  %2 = or i32 %1, 1, !dbg !12041
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12041
  ret void, !dbg !12042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.167(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12045, metadata !DIExpression()), !dbg !12049
  call void @llvm.dbg.value(metadata i32 %1, metadata !12046, metadata !DIExpression()), !dbg !12049
  call void @llvm.dbg.value(metadata i32 %2, metadata !12047, metadata !DIExpression()), !dbg !12049
  call void @llvm.dbg.value(metadata i32 %3, metadata !12048, metadata !DIExpression()), !dbg !12049
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12050
  %6 = and i32 %5, -4227072, !dbg !12050
  %7 = or i32 %1, %0, !dbg !12050
  %8 = shl i32 %2, 6, !dbg !12050
  %9 = or i32 %7, %8, !dbg !12050
  %10 = or i32 %9, %6, !dbg !12050
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12050
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12051
  %12 = and i32 %11, -196609, !dbg !12051
  %13 = or i32 %12, %3, !dbg !12051
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12051
  ret void, !dbg !12052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12057, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12058, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i32 0, metadata !12059, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i32 0, metadata !12060, metadata !DIExpression()), !dbg !12061
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12062
  %4 = load i32, i32* %3, align 4, !dbg !12062
  %5 = lshr i32 %4, 4, !dbg !12062
  %6 = and i32 %5, 15, !dbg !12062
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12062
  %8 = load i8, i8* %7, align 1, !dbg !12062
  %9 = zext i8 %8 to i32, !dbg !12062
  %10 = lshr i32 %0, %9, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %10, metadata !12060, metadata !DIExpression()), !dbg !12061
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12063
  %12 = icmp ult i32 %11, %10, !dbg !12065
  br i1 %12, label %13, label %16, !dbg !12066

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %14, metadata !12059, metadata !DIExpression()), !dbg !12061
  %15 = icmp eq i32 %14, 0, !dbg !12069
  br i1 %15, label %16, label %30, !dbg !12071

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.168() #25, !dbg !12072
  br label %17, !dbg !12074

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.169() #25, !dbg !12075
  %19 = icmp eq i32 %18, 1, !dbg !12076
  br i1 %19, label %20, label %17, !dbg !12074, !llvm.loop !12077

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12079
  tail call fastcc void @LL_RCC_SetAHBPrescaler.170(i32 noundef %21) #25, !dbg !12080
  tail call fastcc void @LL_RCC_SetSysClkSource.171() #25, !dbg !12081
  br label %22, !dbg !12082

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.172() #25, !dbg !12083
  %24 = icmp eq i32 %23, 8, !dbg !12084
  br i1 %24, label %25, label %22, !dbg !12082, !llvm.loop !12085

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12087
  %27 = load i32, i32* %26, align 4, !dbg !12087
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.173(i32 noundef %27) #25, !dbg !12088
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12089
  %29 = load i32, i32* %28, align 4, !dbg !12089
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.174(i32 noundef %29) #25, !dbg !12090
  br label %30, !dbg !12091

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12092
  %33 = icmp ugt i32 %32, %10, !dbg !12094
  br i1 %33, label %34, label %36, !dbg !12095

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12096
  call void @llvm.dbg.value(metadata i32 %35, metadata !12059, metadata !DIExpression()), !dbg !12061
  br label %36, !dbg !12098

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12061
  call void @llvm.dbg.value(metadata i32 %37, metadata !12059, metadata !DIExpression()), !dbg !12061
  %38 = icmp eq i32 %37, 0, !dbg !12099
  br i1 %38, label %39, label %40, !dbg !12101

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !12102
  br label %40, !dbg !12104

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.168() unnamed_addr #15 !dbg !12106 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12107
  %2 = or i32 %1, 16777216, !dbg !12107
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12107
  ret void, !dbg !12108
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.169() unnamed_addr #5 !dbg !12109 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12110
  %2 = lshr i32 %1, 25, !dbg !12111
  %3 = and i32 %2, 1, !dbg !12111
  ret i32 %3, !dbg !12112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.170(i32 noundef %0) unnamed_addr #15 !dbg !12113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12115, metadata !DIExpression()), !dbg !12116
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12117
  %3 = and i32 %2, -241, !dbg !12117
  %4 = or i32 %3, %0, !dbg !12117
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12117
  ret void, !dbg !12118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.171() unnamed_addr #15 !dbg !12119 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12121, metadata !DIExpression()), !dbg !12122
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12123
  %2 = and i32 %1, -4, !dbg !12123
  %3 = or i32 %2, 2, !dbg !12123
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12123
  ret void, !dbg !12124
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.172() unnamed_addr #5 !dbg !12125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12126
  %2 = and i32 %1, 12, !dbg !12126
  ret i32 %2, !dbg !12127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.173(i32 noundef %0) unnamed_addr #15 !dbg !12128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12130, metadata !DIExpression()), !dbg !12131
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12132
  %3 = and i32 %2, -7169, !dbg !12132
  %4 = or i32 %3, %0, !dbg !12132
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12132
  ret void, !dbg !12133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.174(i32 noundef %0) unnamed_addr #15 !dbg !12134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12136, metadata !DIExpression()), !dbg !12137
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12138
  %3 = and i32 %2, -57345, !dbg !12138
  %4 = or i32 %3, %0, !dbg !12138
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12138
  ret void, !dbg !12139
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !12140 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12141
  %2 = lshr i32 %1, 27, !dbg !12142
  %3 = and i32 %2, 1, !dbg !12142
  ret i32 %3, !dbg !12143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12148, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i32 %1, metadata !12149, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12150, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12151, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i32 0, metadata !12152, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i32 0, metadata !12153, metadata !DIExpression()), !dbg !12154
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12155
  %6 = icmp eq i32 %5, 0, !dbg !12157
  br i1 %6, label %7, label %27, !dbg !12158

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %8, metadata !12153, metadata !DIExpression()), !dbg !12154
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.175() #25, !dbg !12161
  %10 = icmp eq i32 %9, 1, !dbg !12163
  br i1 %10, label %19, label %11, !dbg !12164

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12165
  br i1 %12, label %13, label %14, !dbg !12168

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !12169
  br label %15, !dbg !12171

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.176() #25, !dbg !12172
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.177() #25, !dbg !12174
  br label %16, !dbg !12175

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.175() #25, !dbg !12176
  %18 = icmp eq i32 %17, 1, !dbg !12177
  br i1 %18, label %19, label %16, !dbg !12175, !llvm.loop !12178

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12180
  %21 = load i32, i32* %20, align 4, !dbg !12180
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12181
  %23 = load i32, i32* %22, align 4, !dbg !12181
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12182
  %25 = load i32, i32* %24, align 4, !dbg !12182
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.167(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !12183
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !12184
  call void @llvm.dbg.value(metadata i32 %26, metadata !12152, metadata !DIExpression()), !dbg !12154
  br label %27, !dbg !12185

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12186
  call void @llvm.dbg.value(metadata i32 %28, metadata !12152, metadata !DIExpression()), !dbg !12154
  ret i32 %28, !dbg !12187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.175() unnamed_addr #5 !dbg !12188 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12189
  %2 = lshr i32 %1, 17, !dbg !12190
  %3 = and i32 %2, 1, !dbg !12190
  ret i32 %3, !dbg !12191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12192 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12193
  %2 = or i32 %1, 262144, !dbg !12193
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12193
  ret void, !dbg !12194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.176() unnamed_addr #15 !dbg !12195 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12196
  %2 = and i32 %1, -262145, !dbg !12196
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12196
  ret void, !dbg !12197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.177() unnamed_addr #15 !dbg !12198 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12199
  %2 = or i32 %1, 65536, !dbg !12199
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12199
  ret void, !dbg !12200
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12201 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12204, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 undef, metadata !12204, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 undef, metadata !12204, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12220
  ret void, !dbg !12221
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12226, metadata !DIExpression()), !dbg !12228
  %2 = icmp eq i8* %0, null, !dbg !12229
  br i1 %2, label %29, label %3, !dbg !12231

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12232
  %5 = icmp eq i8 %4, 0, !dbg !12233
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12234
  br i1 %6, label %29, label %8, !dbg !12234

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12227, metadata !DIExpression()), !dbg !12228
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12235

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12227, metadata !DIExpression()), !dbg !12228
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12237
  br i1 %10, label %11, label %15, !dbg !12242

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12243
  %13 = load i8*, i8** %12, align 4, !dbg !12243
  %14 = icmp eq i8* %13, %0, !dbg !12244
  br i1 %14, label %29, label %15, !dbg !12245

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12246
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12227, metadata !DIExpression()), !dbg !12228
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12247
  br i1 %17, label %7, label %8, !dbg !12248, !llvm.loop !12249

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12227, metadata !DIExpression()), !dbg !12228
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12251
  br i1 %20, label %21, label %26, !dbg !12255

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12256
  %23 = load i8*, i8** %22, align 4, !dbg !12256
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12257
  %25 = icmp eq i32 %24, 0, !dbg !12258
  br i1 %25, label %29, label %26, !dbg !12259

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12260
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12227, metadata !DIExpression()), !dbg !12228
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12261
  br i1 %28, label %29, label %18, !dbg !12235, !llvm.loop !12262

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12228
  ret %struct.device* %30, !dbg !12264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12269, metadata !DIExpression()), !dbg !12270
  %2 = icmp eq %struct.device* %0, null, !dbg !12271
  br i1 %2, label %14, label %3, !dbg !12273

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12274
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12274
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12275
  %7 = load i8, i8* %6, align 1, !dbg !12275
  %8 = and i8 %7, 1, !dbg !12275
  %9 = icmp eq i8 %8, 0, !dbg !12275
  br i1 %9, label %14, label %10, !dbg !12276

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12277
  %12 = load i8, i8* %11, align 1, !dbg !12277
  %13 = icmp eq i8 %12, 0, !dbg !12278
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12270
  ret i1 %15, !dbg !12279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12280 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12285, metadata !DIExpression()), !dbg !12286
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12287
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12288
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12289 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12297, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12298, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.value(metadata i8* %2, metadata !12299, metadata !DIExpression()), !dbg !12302
  %5 = bitcast i32* %4 to i8*, !dbg !12303
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12303
  call void @llvm.dbg.value(metadata i32 0, metadata !12300, metadata !DIExpression()), !dbg !12302
  store i32 0, i32* %4, align 4, !dbg !12304
  call void @llvm.dbg.value(metadata i32* %4, metadata !12300, metadata !DIExpression(DW_OP_deref)), !dbg !12302
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12305
  call void @llvm.dbg.value(metadata i16* %6, metadata !12301, metadata !DIExpression()), !dbg !12302
  %7 = load i32, i32* %4, align 4, !dbg !12306
  call void @llvm.dbg.value(metadata i32 %7, metadata !12300, metadata !DIExpression()), !dbg !12302
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12307
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12308
  ret i32 %8, !dbg !12309
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12310 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12314, metadata !DIExpression()), !dbg !12320
  call void @llvm.dbg.value(metadata i32* %1, metadata !12315, metadata !DIExpression()), !dbg !12320
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12321
  %4 = load i16*, i16** %3, align 4, !dbg !12321
  call void @llvm.dbg.value(metadata i16* %4, metadata !12316, metadata !DIExpression()), !dbg !12320
  %5 = icmp eq i16* %4, null, !dbg !12322
  br i1 %5, label %14, label %6, !dbg !12323

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12324
  call void @llvm.dbg.value(metadata i32 %7, metadata !12317, metadata !DIExpression()), !dbg !12324
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12325
  %9 = load i16, i16* %8, align 2, !dbg !12325
  %10 = add i16 %9, -32767, !dbg !12326
  %11 = icmp ult i16 %10, 2, !dbg !12326
  %12 = add i32 %7, 1, !dbg !12327
  call void @llvm.dbg.value(metadata i32 %12, metadata !12317, metadata !DIExpression()), !dbg !12324
  br i1 %11, label %13, label %6, !dbg !12326, !llvm.loop !12329

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12332
  br label %14, !dbg !12333

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12335 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12339, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 %1, metadata !12340, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12341, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i8* %3, metadata !12342, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 0, metadata !12343, metadata !DIExpression()), !dbg !12351
  %5 = icmp eq i32 %1, 0, !dbg !12352
  br i1 %5, label %16, label %8, !dbg !12353

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12343, metadata !DIExpression()), !dbg !12351
  %7 = icmp eq i32 %15, %1, !dbg !12352
  br i1 %7, label %16, label %8, !dbg !12353, !llvm.loop !12354

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12343, metadata !DIExpression()), !dbg !12351
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12356
  %11 = load i16, i16* %10, align 2, !dbg !12356
  call void @llvm.dbg.value(metadata i16 %11, metadata !12345, metadata !DIExpression()), !dbg !12357
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !12358
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12348, metadata !DIExpression()), !dbg !12357
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12359
  call void @llvm.dbg.value(metadata i32 %13, metadata !12349, metadata !DIExpression()), !dbg !12357
  %14 = icmp slt i32 %13, 0, !dbg !12360
  %15 = add nuw i32 %9, 1, !dbg !12362
  call void @llvm.dbg.value(metadata i32 %15, metadata !12343, metadata !DIExpression()), !dbg !12351
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !12364 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12368, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12369, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12370, metadata !DIExpression()), !dbg !12371
  %2 = sext i16 %0 to i32, !dbg !12372
  %3 = icmp slt i16 %0, 1, !dbg !12374
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12375
  %6 = add nsw i32 %2, -1, !dbg !12375
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12375
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12375
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12369, metadata !DIExpression()), !dbg !12371
  ret %struct.device* %8, !dbg !12376
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12377 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12379, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12380, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata i8* %2, metadata !12381, metadata !DIExpression()), !dbg !12384
  %5 = bitcast i32* %4 to i8*, !dbg !12385
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12385
  call void @llvm.dbg.value(metadata i32 0, metadata !12382, metadata !DIExpression()), !dbg !12384
  store i32 0, i32* %4, align 4, !dbg !12386
  call void @llvm.dbg.value(metadata i32* %4, metadata !12382, metadata !DIExpression(DW_OP_deref)), !dbg !12384
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12387
  call void @llvm.dbg.value(metadata i16* %6, metadata !12383, metadata !DIExpression()), !dbg !12384
  %7 = load i32, i32* %4, align 4, !dbg !12388
  call void @llvm.dbg.value(metadata i32 %7, metadata !12382, metadata !DIExpression()), !dbg !12384
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12389
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12390
  ret i32 %8, !dbg !12391
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12392 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12394, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.value(metadata i32* %1, metadata !12395, metadata !DIExpression()), !dbg !12399
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12400
  %4 = load i16*, i16** %3, align 4, !dbg !12400
  call void @llvm.dbg.value(metadata i16* %4, metadata !12396, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.value(metadata i32 0, metadata !12397, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.value(metadata i32 0, metadata !12398, metadata !DIExpression()), !dbg !12399
  %5 = icmp eq i16* %4, null, !dbg !12401
  br i1 %5, label %22, label %6, !dbg !12403

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12397, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.value(metadata i16* %8, metadata !12396, metadata !DIExpression()), !dbg !12399
  %9 = load i16, i16* %8, align 2, !dbg !12404
  %10 = icmp eq i16 %9, -32768, !dbg !12408
  call void @llvm.dbg.value(metadata i32 undef, metadata !12397, metadata !DIExpression()), !dbg !12399
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12409
  call void @llvm.dbg.value(metadata i16* %11, metadata !12396, metadata !DIExpression()), !dbg !12399
  %12 = zext i1 %10 to i32, !dbg !12410
  %13 = add i32 %7, %12, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %13, metadata !12397, metadata !DIExpression()), !dbg !12399
  %14 = icmp eq i32 %13, 2, !dbg !12411
  br i1 %14, label %15, label %6, !dbg !12412

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12399
  call void @llvm.dbg.value(metadata i32 %16, metadata !12398, metadata !DIExpression()), !dbg !12399
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12413
  %18 = load i16, i16* %17, align 2, !dbg !12413
  %19 = icmp eq i16 %18, 32767, !dbg !12414
  %20 = add i32 %16, 1, !dbg !12415
  call void @llvm.dbg.value(metadata i32 %20, metadata !12398, metadata !DIExpression()), !dbg !12399
  br i1 %19, label %21, label %15, !dbg !12417, !llvm.loop !12418

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12420
  br label %22, !dbg !12421

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12422
  call void @llvm.dbg.value(metadata i16* %23, metadata !12396, metadata !DIExpression()), !dbg !12399
  ret i16* %23, !dbg !12423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !12424 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12427
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12428
  ret i32* %2, !dbg !12429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !12430 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12581, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12582, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12583, metadata !DIExpression()), !dbg !12584
  ret void, !dbg !12585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12590, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i32 %1, metadata !12591, metadata !DIExpression()), !dbg !12592
  ret void, !dbg !12593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12598, metadata !DIExpression()), !dbg !12600
  call void @llvm.dbg.value(metadata i32 %1, metadata !12599, metadata !DIExpression()), !dbg !12600
  ret void, !dbg !12601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12606, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata i8* %1, metadata !12607, metadata !DIExpression()), !dbg !12608
  ret i32 -134, !dbg !12609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12614, metadata !DIExpression()), !dbg !12616
  call void @llvm.dbg.value(metadata i8* %1, metadata !12615, metadata !DIExpression()), !dbg !12616
  ret i32 -134, !dbg !12617
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12621, metadata !DIExpression()), !dbg !12622
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12623, !srcloc !12629
  call void @llvm.dbg.value(metadata i32 undef, metadata !12626, metadata !DIExpression()) #23, !dbg !12630
  call void @llvm.dbg.value(metadata i32 undef, metadata !12627, metadata !DIExpression()) #23, !dbg !12630
  br label %3, !dbg !12631

3:                                                ; preds = %3, %1
  br label %3, !dbg !12632, !llvm.loop !12635
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12642, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12643, metadata !DIExpression()), !dbg !12644
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i32 0, i32 0), i32 noundef 69) #24, !dbg !12645
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12650
  unreachable, !dbg !12650
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12653, metadata !DIExpression()), !dbg !12654
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12655
  unreachable, !dbg !12655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12658, metadata !DIExpression()), !dbg !12662
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12659, metadata !DIExpression()), !dbg !12662
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12663, !srcloc !12629
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12663
  call void @llvm.dbg.value(metadata i32 %4, metadata !12626, metadata !DIExpression()) #23, !dbg !12665
  call void @llvm.dbg.value(metadata i32 undef, metadata !12627, metadata !DIExpression()) #23, !dbg !12665
  call void @llvm.dbg.value(metadata i32 %4, metadata !12660, metadata !DIExpression()), !dbg !12662
  %5 = tail call fastcc %struct.k_thread* @k_current_get.185() #26, !dbg !12666
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12661, metadata !DIExpression()), !dbg !12662
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !12667
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.186, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #24, !dbg !12667
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12672
  br i1 %7, label %20, label %8, !dbg !12674

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12675, metadata !DIExpression()), !dbg !12680
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12682
  %10 = load i32, i32* %9, align 4, !dbg !12682
  %11 = and i32 %10, 511, !dbg !12683
  %12 = icmp eq i32 %11, 0, !dbg !12684
  br i1 %12, label %14, label %13, !dbg !12685

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 69) #24, !dbg !12686
  br label %14, !dbg !12692

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12693
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.188, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #24, !dbg !12693
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !12698
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12675, metadata !DIExpression()), !dbg !12699
  %16 = load i32, i32* %9, align 4, !dbg !12704
  %17 = and i32 %16, 511, !dbg !12705
  %18 = icmp eq i32 %17, 0, !dbg !12706
  br i1 %18, label %22, label %19, !dbg !12707

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12708, metadata !DIExpression()) #23, !dbg !12711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12714, !srcloc !12715
  br label %25, !dbg !12716

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12693
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.188, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #24, !dbg !12693
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !12698
  br label %22, !dbg !12717

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12718
  call void @llvm.dbg.value(metadata i32 %4, metadata !12708, metadata !DIExpression()) #23, !dbg !12721
  call void @llvm.dbg.value(metadata i32 %4, metadata !12708, metadata !DIExpression()) #23, !dbg !12724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12662
  br i1 %23, label %25, label %24, !dbg !12726

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.189(%struct.k_thread* noundef %5) #25, !dbg !12727
  br label %25, !dbg !12730

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12730
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.185() unnamed_addr #13 !dbg !12731 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.197() #26, !dbg !12735
  ret %struct.k_thread* %1, !dbg !12736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !12737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12741, metadata !DIExpression()), !dbg !12742
  %2 = icmp ult i32 %0, 5, !dbg !12743
  br i1 %2, label %3, label %6, !dbg !12743

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12743
  %5 = load i8*, i8** %4, align 4, !dbg !12743
  br label %6, !dbg !12743

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.191, i32 0, i32 0), %1 ], !dbg !12744
  ret i8* %7, !dbg !12746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12747 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12751, metadata !DIExpression()), !dbg !12753
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12754
  br i1 %2, label %9, label %3, !dbg !12755

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12756
  call void @llvm.dbg.value(metadata i8* %4, metadata !12752, metadata !DIExpression()), !dbg !12753
  %5 = icmp eq i8* %4, null, !dbg !12757
  br i1 %5, label %9, label %6, !dbg !12759

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12760
  %8 = icmp eq i8 %7, 0, !dbg !12761
  br i1 %8, label %9, label %10, !dbg !12762

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.190, i32 0, i32 0), metadata !12752, metadata !DIExpression()), !dbg !12753
  br label %10, !dbg !12763

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.190, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12753
  call void @llvm.dbg.value(metadata i8* %11, metadata !12752, metadata !DIExpression()), !dbg !12753
  ret i8* %11, !dbg !12765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.189(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12766 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12770, metadata !DIExpression()), !dbg !12771
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12772, !srcloc !12774
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12775
  ret void, !dbg !12776
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.197() unnamed_addr #13 !dbg !12777 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12778, !srcloc !12780
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12781
  ret %struct.k_thread* %1, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12783 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12787, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata i32 %1, metadata !12788, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata i32 %2, metadata !12789, metadata !DIExpression()), !dbg !12790
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12791
  ret void, !dbg !12792
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12793 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12797, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i8* %1, metadata !12798, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i32 %2, metadata !12799, metadata !DIExpression()), !dbg !12800
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12801
  ret void, !dbg !12802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12803 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !12804
  ret void, !dbg !12805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12808, metadata !DIExpression()), !dbg !12809
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !12810
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12811
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12812
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12813
  %4 = trunc i32 %0 to i8, !dbg !12814
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12815
  store i8 %4, i8* %5, align 4, !dbg !12816
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12817
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !12818
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12819
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12820
  store i8* %8, i8** %9, align 4, !dbg !12821
  ret void, !dbg !12822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12825, metadata !DIExpression()), !dbg !12831
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12832
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12826, metadata !DIExpression()), !dbg !12831
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12833
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12827, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.204, i32 0, i32 0), metadata !12830, metadata !DIExpression()), !dbg !12831
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12834
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12835
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.204, i32 0, i32 0)) #24, !dbg !12836
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !12837
  ret void, !dbg !12838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !12839 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12843, metadata !DIExpression()), !dbg !12844
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12845
  ret i8* %2, !dbg !12846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !12847 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12852, metadata !DIExpression()), !dbg !12853
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12854
  %3 = load i8, i8* %2, align 1, !dbg !12855
  %4 = and i8 %3, -5, !dbg !12855
  store i8 %4, i8* %2, align 1, !dbg !12855
  ret void, !dbg !12856
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !12857 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !12860
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !12861
  %3 = ptrtoint i8* %2 to i32, !dbg !12870
  %4 = add i32 %3, 2048, !dbg !12871
  call void @llvm.dbg.value(metadata i32 %4, metadata !12865, metadata !DIExpression()) #23, !dbg !12872
  call void @llvm.dbg.value(metadata i32 %4, metadata !12873, metadata !DIExpression()) #23, !dbg !12876
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12878, !srcloc !12879
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12880
  %6 = or i32 %5, 512, !dbg !12880
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12880
  tail call fastcc void @__NVIC_SetPriority.207(i32 noundef -2, i32 noundef 255) #24, !dbg !12881
  tail call fastcc void @__NVIC_SetPriority.207(i32 noundef -5, i32 noundef 0) #24, !dbg !12884
  tail call fastcc void @__NVIC_SetPriority.207(i32 noundef -12, i32 noundef 0) #24, !dbg !12885
  tail call fastcc void @__NVIC_SetPriority.207(i32 noundef -11, i32 noundef 0) #24, !dbg !12886
  tail call fastcc void @__NVIC_SetPriority.207(i32 noundef -10, i32 noundef 0) #24, !dbg !12887
  tail call fastcc void @__NVIC_SetPriority.207(i32 noundef -4, i32 noundef 0) #24, !dbg !12888
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12889
  %8 = or i32 %7, 458752, !dbg !12889
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12889
  tail call void @z_arm_fault_init() #24, !dbg !12890
  tail call void @z_arm_cpu_idle_init() #24, !dbg !12891
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12892
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12895
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !12896
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !12897
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12898
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12898
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12859, metadata !DIExpression()), !dbg !12899
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !12900
  call void @z_device_state_init() #24, !dbg !12901
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !12902
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !12903
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !12904
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12905
  unreachable, !dbg !12905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2059, metadata !DIExpression()), !dbg !12906
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12907
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12907
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2060, metadata !DIExpression()), !dbg !12906
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2060, metadata !DIExpression()), !dbg !12906
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12908
  br i1 %7, label %8, label %35, !dbg !12909

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2060, metadata !DIExpression()), !dbg !12906
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12910
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12910
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2070, metadata !DIExpression()), !dbg !12911
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12912
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12912
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !12913
  call void @llvm.dbg.value(metadata i32 %14, metadata !2074, metadata !DIExpression()), !dbg !12911
  %15 = icmp eq %struct.device* %11, null, !dbg !12914
  br i1 %15, label %32, label %16, !dbg !12916

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12917
  br i1 %17, label %26, label %18, !dbg !12920

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12921
  call void @llvm.dbg.value(metadata i32 %19, metadata !2074, metadata !DIExpression()), !dbg !12911
  %20 = icmp ult i32 %19, 255, !dbg !12923
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12923
  call void @llvm.dbg.value(metadata i32 %21, metadata !2074, metadata !DIExpression()), !dbg !12911
  %22 = trunc i32 %21 to i8, !dbg !12924
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12925
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12925
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12926
  store i8 %22, i8* %25, align 1, !dbg !12927
  br label %26, !dbg !12928

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12929
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12929
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12930
  %30 = load i8, i8* %29, align 1, !dbg !12931
  %31 = or i8 %30, 1, !dbg !12931
  store i8 %31, i8* %29, align 1, !dbg !12931
  br label %32, !dbg !12932

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12933
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2060, metadata !DIExpression()), !dbg !12906
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12908
  br i1 %34, label %8, label %35, !dbg !12909, !llvm.loop !12934

35:                                               ; preds = %32, %1
  ret void, !dbg !12936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.207(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12939, metadata !DIExpression()), !dbg !12941
  call void @llvm.dbg.value(metadata i32 %1, metadata !12940, metadata !DIExpression()), !dbg !12941
  %3 = trunc i32 %1 to i8, !dbg !12942
  %4 = shl i8 %3, 4, !dbg !12942
  %5 = and i32 %0, 15, !dbg !12945
  %6 = add nsw i32 %5, -4, !dbg !12946
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12947
  store volatile i8 %4, i8* %7, align 1, !dbg !12948
  ret void, !dbg !12949
}

; Function Attrs: optsize
declare !dbg !12950 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !12951 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12954, metadata !DIExpression()), !dbg !12955
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12956
  store i8 1, i8* %2, align 1, !dbg !12957
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12958
  store i8 1, i8* %3, align 4, !dbg !12959
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12960
  store i32 0, i32* %4, align 4, !dbg !12961
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12962
  store i32 0, i32* %5, align 4, !dbg !12963
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12964
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12965
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12966
  ret void, !dbg !12967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12968 {
  tail call void @z_sched_init() #24, !dbg !12973
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12974
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 11, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.208, i32 0, i32 0)) #24, !dbg !12975
  call void @llvm.dbg.value(metadata i8* %1, metadata !12972, metadata !DIExpression()), !dbg !12976
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12977
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12978
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !12979
  ret i8* %1, !dbg !12980
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !12981 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12985, metadata !DIExpression()), !dbg !12986
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !12987
  unreachable, !dbg !12988
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12989 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12991, metadata !DIExpression()), !dbg !12994
  call void @llvm.dbg.value(metadata i8* %1, metadata !12992, metadata !DIExpression()), !dbg !12994
  call void @llvm.dbg.value(metadata i8* %2, metadata !12993, metadata !DIExpression()), !dbg !12994
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12995
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !12996
  tail call void @boot_banner() #24, !dbg !12997
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !12998
  tail call void @z_init_static_threads() #24, !dbg !12999
  tail call void @main() #24, !dbg !13000
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13001
  %5 = and i8 %4, -2, !dbg !13001
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13001
  ret void, !dbg !13002
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13003 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13013, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.value(metadata i8* %1, metadata !13014, metadata !DIExpression()), !dbg !13015
  ret void, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13017 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13019, metadata !DIExpression()), !dbg !13021
  call void @llvm.dbg.value(metadata i8* %1, metadata !13020, metadata !DIExpression()), !dbg !13021
  ret void, !dbg !13022
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13023 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13024, !srcloc !13031
  call void @llvm.dbg.value(metadata i32 %1, metadata !13027, metadata !DIExpression()) #23, !dbg !13032
  %2 = icmp ne i32 %1, 0, !dbg !13033
  ret i1 %2, !dbg !13034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13035 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13036
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13037
  %3 = load i8, i8* %2, align 4, !dbg !13038
  %4 = or i8 %3, 1, !dbg !13038
  store i8 %4, i8* %2, align 4, !dbg !13038
  ret void, !dbg !13039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13040 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13041
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13042
  %3 = load i8, i8* %2, align 4, !dbg !13043
  %4 = and i8 %3, -2, !dbg !13043
  store i8 %4, i8* %2, align 4, !dbg !13043
  ret void, !dbg !13044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13045 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13046
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13047
  %3 = load i8, i8* %2, align 4, !dbg !13047
  %4 = and i8 %3, 1, !dbg !13048
  %5 = icmp ne i8 %4, 0, !dbg !13049
  ret i1 %5, !dbg !13050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13055, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i8* %1, metadata !13056, metadata !DIExpression()), !dbg !13057
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13058
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13060
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13055, metadata !DIExpression()), !dbg !13057
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13061
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #24, !dbg !13062
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13063
  store i8 0, i8* %8, align 1, !dbg !13064
  ret i32 0, !dbg !13065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #6 !dbg !13066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13070, metadata !DIExpression()), !dbg !13071
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13072
  ret i8* %2, !dbg !13073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13074 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13078, metadata !DIExpression()), !dbg !13081
  call void @llvm.dbg.value(metadata i8* %1, metadata !13079, metadata !DIExpression()), !dbg !13081
  call void @llvm.dbg.value(metadata i32 %2, metadata !13080, metadata !DIExpression()), !dbg !13081
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13082
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #24, !dbg !13083
  ret i32 0, !dbg !13084
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2200, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.value(metadata i8* %1, metadata !2201, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.value(metadata i32 %2, metadata !2202, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.value(metadata i32 0, metadata !2203, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.value(metadata i8 undef, metadata !2205, metadata !DIExpression()), !dbg !13085
  %4 = icmp eq i8* %1, null, !dbg !13086
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13088
  br i1 %6, label %46, label %7, !dbg !13088

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13089
  %9 = load i8, i8* %8, align 1, !dbg !13089
  call void @llvm.dbg.value(metadata i8 %9, metadata !2205, metadata !DIExpression()), !dbg !13085
  %10 = add i32 %2, -1, !dbg !13090
  call void @llvm.dbg.value(metadata i32 %10, metadata !2202, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.value(metadata i8 0, metadata !2206, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i8 %9, metadata !2205, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.value(metadata i32 0, metadata !2203, metadata !DIExpression()), !dbg !13085
  %11 = icmp eq i8 %9, 0, !dbg !13092
  br i1 %11, label %12, label %15, !dbg !13094

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13095
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13096
  store i8 0, i8* %14, align 1, !dbg !13097
  br label %46, !dbg !13098

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2206, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i8 %17, metadata !2205, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.value(metadata i32 %18, metadata !2203, metadata !DIExpression()), !dbg !13085
  %19 = zext i8 %17 to i32, !dbg !13099
  %20 = zext i8 %16 to i32, !dbg !13100
  %21 = shl nuw i32 1, %20, !dbg !13100
  call void @llvm.dbg.value(metadata i32 %21, metadata !2204, metadata !DIExpression()), !dbg !13085
  %22 = and i32 %21, %19, !dbg !13102
  %23 = icmp eq i32 %22, 0, !dbg !13104
  br i1 %23, label %42, label %24, !dbg !13105

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13106
  %26 = sub i32 %10, %18, !dbg !13107
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13108
  %28 = load i8*, i8** %27, align 4, !dbg !13108
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13109
  %30 = load i32, i32* %29, align 4, !dbg !13109
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13110
  %32 = add i32 %31, %18, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %32, metadata !2203, metadata !DIExpression()), !dbg !13085
  %33 = trunc i32 %21 to i8, !dbg !13112
  %34 = xor i8 %33, -1, !dbg !13112
  %35 = and i8 %17, %34, !dbg !13112
  call void @llvm.dbg.value(metadata i8 %35, metadata !2205, metadata !DIExpression()), !dbg !13085
  %36 = icmp eq i8 %35, 0, !dbg !13113
  br i1 %36, label %12, label %37, !dbg !13115

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13116
  %39 = sub i32 %10, %32, !dbg !13118
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.211, i32 0, i32 0), i32 noundef 1) #25, !dbg !13119
  %41 = add i32 %40, %32, !dbg !13120
  call void @llvm.dbg.value(metadata i32 %41, metadata !2203, metadata !DIExpression()), !dbg !13085
  br label %42, !dbg !13121

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13085
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13085
  call void @llvm.dbg.value(metadata i8 %44, metadata !2205, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.value(metadata i32 %43, metadata !2203, metadata !DIExpression()), !dbg !13085
  %45 = add i8 %16, 1, !dbg !13122
  call void @llvm.dbg.value(metadata i8 %45, metadata !2206, metadata !DIExpression()), !dbg !13091
  br label %15, !dbg !13094

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.212, i32 0, i32 0), %3 ], !dbg !13085
  ret i8* %47, !dbg !13123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13128, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32 %1, metadata !13129, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i8* %2, metadata !13130, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32 %3, metadata !13131, metadata !DIExpression()), !dbg !13133
  %5 = icmp ult i32 %1, %3, !dbg !13134
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13134
  call void @llvm.dbg.value(metadata i32 %6, metadata !13132, metadata !DIExpression()), !dbg !13133
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13135
  ret i32 %6, !dbg !13136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13137 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13141, metadata !DIExpression()), !dbg !13142
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13143
  ret void, !dbg !13144
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13145 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13154, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13155, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i32 %2, metadata !13156, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13157, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i8* %4, metadata !13158, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i8* %5, metadata !13159, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i8* %6, metadata !13160, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i32 %7, metadata !13161, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i32 %8, metadata !13162, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i8* %9, metadata !13163, metadata !DIExpression()), !dbg !13165
  %11 = icmp eq i32 %7, 15, !dbg !13166
  br i1 %11, label %12, label %15, !dbg !13166

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13166
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !13166
  br i1 %14, label %19, label %18, !dbg !13166

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13166
  %17 = icmp ult i32 %16, 31, !dbg !13166
  br i1 %17, label %19, label %18, !dbg !13166

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.224, i32 0, i32 0), i32 noundef 536) #24, !dbg !13170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.225, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !13170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.224, i32 0, i32 0), i32 noundef 536) #24, !dbg !13170
  unreachable, !dbg !13170

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13172
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #25, !dbg !13173
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13174
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13175
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !13176
  call void @llvm.dbg.value(metadata i8* %22, metadata !13164, metadata !DIExpression()), !dbg !13165
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13177
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13178
  store i8* null, i8** %23, align 4, !dbg !13179
  %24 = icmp eq i8* %9, null, !dbg !13180
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13182
  br i1 %24, label %29, label %26, !dbg !13183

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #24, !dbg !13184
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13186
  store i8 0, i8* %28, align 1, !dbg !13187
  br label %30, !dbg !13188

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13189
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13191
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13191
  br i1 %32, label %36, label %33, !dbg !13193

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13194
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13194
  br label %36, !dbg !13195

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13165
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13196
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13198
  ret i8* %22, !dbg !13199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !13200 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13204, metadata !DIExpression()), !dbg !13205
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13206
  ret i1 %2, !dbg !13207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !13208 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13213, metadata !DIExpression()), !dbg !13214
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13215
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13216
  ret void, !dbg !13217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13218 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13223, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 %1, metadata !13224, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 %2, metadata !13225, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 %3, metadata !13226, metadata !DIExpression()), !dbg !13227
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13228
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13229
  %6 = trunc i32 %3 to i8, !dbg !13230
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13231
  store i8 %6, i8* %7, align 4, !dbg !13232
  %8 = trunc i32 %2 to i8, !dbg !13233
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13234
  store i8 %8, i8* %9, align 1, !dbg !13235
  %10 = trunc i32 %1 to i8, !dbg !13236
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13237
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13237
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13237
  store i8 %10, i8* %13, align 2, !dbg !13238
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13239
  store i8 0, i8* %14, align 1, !dbg !13240
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13241
  ret void, !dbg !13242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !13243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13247, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13248, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 %2, metadata !13249, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 0, metadata !13254, metadata !DIExpression()), !dbg !13255
  %4 = add i32 %2, 7, !dbg !13256
  %5 = and i32 %4, -8, !dbg !13256
  %6 = add i32 %5, 64, !dbg !13256
  call void @llvm.dbg.value(metadata i32 %6, metadata !13250, metadata !DIExpression()), !dbg !13255
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.226(%struct.z_thread_stack_element* noundef %1) #25, !dbg !13258
  call void @llvm.dbg.value(metadata i8* %7, metadata !13253, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 %5, metadata !13251, metadata !DIExpression()), !dbg !13255
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13259
  call void @llvm.dbg.value(metadata i8* %8, metadata !13252, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 0, metadata !13254, metadata !DIExpression()), !dbg !13255
  %9 = ptrtoint i8* %7 to i32, !dbg !13260
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13261
  store i32 %9, i32* %10, align 4, !dbg !13262
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13263
  store i32 %5, i32* %11, align 4, !dbg !13264
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13265
  store i32 0, i32* %12, align 4, !dbg !13266
  call void @llvm.dbg.value(metadata i8* %8, metadata !13252, metadata !DIExpression()), !dbg !13255
  ret i8* %8, !dbg !13267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.226(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13268 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13272, metadata !DIExpression()), !dbg !13273
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13274
  ret i8* %2, !dbg !13275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13276 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13281, metadata !DIExpression()), !dbg !13282
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13283
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13284
  ret void, !dbg !13285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13286 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13288, metadata !DIExpression()), !dbg !13289
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13290
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13291
  ret void, !dbg !13292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13293 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13297, metadata !DIExpression()), !dbg !13298
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13299
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13300
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13301
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13302
  ret void, !dbg !13303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13304 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13309, metadata !DIExpression()), !dbg !13310
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13311
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13312
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13313
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13314
  ret void, !dbg !13315
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13316 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13333, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13324, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13325, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i32 %2, metadata !13326, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13327, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i8* %4, metadata !13328, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i8* %5, metadata !13329, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i8* %6, metadata !13330, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i32 %7, metadata !13331, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i32 %8, metadata !13332, metadata !DIExpression()), !dbg !13334
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13335, !srcloc !13031
  call void @llvm.dbg.value(metadata i32 %11, metadata !13027, metadata !DIExpression()) #23, !dbg !13340
  %12 = icmp eq i32 %11, 0, !dbg !13341
  br i1 %12, label %14, label %13, !dbg !13342

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.224, i32 0, i32 0), i32 noundef 647) #24, !dbg !13343
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.230, i32 0, i32 0)) #24, !dbg !13343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.224, i32 0, i32 0), i32 noundef 647) #24, !dbg !13343
  unreachable, !dbg !13343

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13333, metadata !DIExpression()), !dbg !13334
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #25, !dbg !13345
  %17 = icmp eq i64 %15, -1, !dbg !13346
  br i1 %17, label %19, label %18, !dbg !13348

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !13349
  br label %19, !dbg !13351

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13353 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13358, metadata !DIExpression()), !dbg !13359
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13357, metadata !DIExpression()), !dbg !13359
  %4 = icmp eq i64 %3, 0, !dbg !13360
  br i1 %4, label %5, label %6, !dbg !13362

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13363
  br label %7, !dbg !13365

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13366
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13369 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13373, metadata !DIExpression()), !dbg !13374
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13375, !srcloc !13377
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13378
  ret void, !dbg !13379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13380 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13383, metadata !DIExpression()), !dbg !13384
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13382, metadata !DIExpression()), !dbg !13384
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13385
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13386
  ret void, !dbg !13387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13388 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13390, metadata !DIExpression()), !dbg !13410
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13411

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.224, i32 0, i32 0), i32 noundef 750) #24, !dbg !13415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.234, i32 0, i32 0)) #24, !dbg !13415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.224, i32 0, i32 0), i32 noundef 750) #24, !dbg !13415
  unreachable, !dbg !13415

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13390, metadata !DIExpression()), !dbg !13410
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13418
  br i1 %4, label %6, label %5, !dbg !13419

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !13420
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13408, metadata !DIExpression()), !dbg !13421
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13422

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13426
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13426
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13428
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13428
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13429
  %12 = load i32, i32* %11, align 4, !dbg !13429
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13430
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13430
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13431
  %16 = load i8*, i8** %15, align 4, !dbg !13431
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13432
  %18 = load i8*, i8** %17, align 4, !dbg !13432
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13433
  %20 = load i8*, i8** %19, align 4, !dbg !13433
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13434
  %22 = load i32, i32* %21, align 4, !dbg !13434
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13435
  %24 = load i32, i32* %23, align 4, !dbg !13435
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13436
  %26 = load i8*, i8** %25, align 4, !dbg !13436
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #25, !dbg !13437
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13438
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13439
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13440
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13440
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13441
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13390, metadata !DIExpression()), !dbg !13410
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13442
  br i1 %32, label %1, label %2, !dbg !13411, !llvm.loop !13443

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.224, i32 0, i32 0), i32 noundef 781) #24, !dbg !13445
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.234, i32 0, i32 0)) #24, !dbg !13445
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.224, i32 0, i32 0), i32 noundef 781) #24, !dbg !13445
  unreachable, !dbg !13445

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13408, metadata !DIExpression()), !dbg !13421
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13448
  br i1 %36, label %38, label %37, !dbg !13449

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #24, !dbg !13450
  ret void, !dbg !13451

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13452
  %40 = load i32, i32* %39, align 4, !dbg !13452
  %41 = icmp eq i32 %40, -1, !dbg !13455
  br i1 %41, label %50, label %42, !dbg !13456

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13457
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13457
  %45 = icmp sgt i32 %40, 0, !dbg !13459
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13459
  %47 = zext i32 %46 to i64, !dbg !13459
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.235(i64 noundef %47) #25, !dbg !13459
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13460
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #25, !dbg !13460
  br label %50, !dbg !13461

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13462
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13408, metadata !DIExpression()), !dbg !13421
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13463
  br i1 %52, label %33, label %34, !dbg !13422, !llvm.loop !13464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.235(i64 noundef %0) unnamed_addr #6 !dbg !13466 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13468, metadata !DIExpression()), !dbg !13469
  call void @llvm.dbg.value(metadata i64 %0, metadata !13470, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i32 1000, metadata !13473, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i32 10000, metadata !13474, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8 1, metadata !13475, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8 0, metadata !13476, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8 1, metadata !13477, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8 0, metadata !13478, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8 1, metadata !13479, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8 0, metadata !13480, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i64 0, metadata !13481, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i64 0, metadata !13481, metadata !DIExpression()), !dbg !13485
  %2 = mul i64 %0, 10, !dbg !13487
  ret i64 %2, !dbg !13493
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !13494 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13496, metadata !DIExpression()), !dbg !13500
  call void @llvm.dbg.value(metadata i8* %1, metadata !13497, metadata !DIExpression()), !dbg !13500
  call void @llvm.dbg.value(metadata i8* %2, metadata !13498, metadata !DIExpression()), !dbg !13500
  call void @llvm.dbg.value(metadata i8* %3, metadata !13499, metadata !DIExpression()), !dbg !13500
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13501
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13502
  %7 = load i8, i8* %6, align 4, !dbg !13503
  %8 = or i8 %7, 4, !dbg !13503
  store i8 %8, i8* %6, align 4, !dbg !13503
  tail call void @z_thread_essential_clear() #25, !dbg !13504
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13505
  unreachable, !dbg !13505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !13506 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13511, metadata !DIExpression()), !dbg !13513
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13514
  %3 = load i32, i32* %2, align 4, !dbg !13514
  call void @llvm.dbg.value(metadata i32 %3, metadata !13512, metadata !DIExpression()), !dbg !13513
  %4 = icmp eq i32 %3, 0, !dbg !13515
  br i1 %4, label %10, label %5, !dbg !13517

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13518
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13521
  %8 = zext i8 %7 to i32, !dbg !13522
  %9 = icmp eq i32 %6, %8, !dbg !13523
  br i1 %9, label %11, label %10, !dbg !13524

10:                                               ; preds = %5, %1
  br label %11, !dbg !13525

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13513
  ret i1 %12, !dbg !13526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !13527 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13529, metadata !DIExpression()), !dbg !13530
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13531
  %3 = load i32, i32* %2, align 4, !dbg !13531
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13533
  %5 = zext i8 %4 to i32, !dbg !13534
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13535
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13536
  %8 = or i32 %7, %5, !dbg !13537
  %9 = icmp eq i32 %3, %8, !dbg !13538
  br i1 %9, label %10, label %11, !dbg !13539

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13540
  br label %11, !dbg !13541

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !13543 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13547, metadata !DIExpression()), !dbg !13548
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13549
  %3 = zext i8 %2 to i32, !dbg !13550
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13551
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13552
  %6 = or i32 %5, %3, !dbg !13553
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13554
  store i32 %6, i32* %7, align 4, !dbg !13555
  ret void, !dbg !13556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !13557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13561, metadata !DIExpression()), !dbg !13562
  ret i32 -134, !dbg !13563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13568, metadata !DIExpression()), !dbg !13570
  call void @llvm.dbg.value(metadata i32 %1, metadata !13569, metadata !DIExpression()), !dbg !13570
  ret i32 -134, !dbg !13571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !13572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13579, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13580, metadata !DIExpression()), !dbg !13581
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13582
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13584
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13581
  ret i32 %6, !dbg !13585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !13586 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13590, metadata !DIExpression()), !dbg !13591
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13592
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13591
  ret i32 %3, !dbg !13594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13595 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13597
  ret void, !dbg !13598
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !13599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13601, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i8* %1, metadata !13602, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i8* %2, metadata !13603, metadata !DIExpression()), !dbg !13604
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13605
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13605
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13605
  %7 = load i8, i8* %6, align 2, !dbg !13605
  %8 = icmp sgt i8 %7, -1, !dbg !13605
  br i1 %8, label %10, label %9, !dbg !13608

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.246, i32 0, i32 0), i32 noundef 39) #24, !dbg !13609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.246, i32 0, i32 0), i32 noundef 39) #24, !dbg !13609
  unreachable, !dbg !13609

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13611, !srcloc !13618
  call void @llvm.dbg.value(metadata i32 undef, metadata !13614, metadata !DIExpression()) #23, !dbg !13619
  call void @llvm.dbg.value(metadata i32 undef, metadata !13615, metadata !DIExpression()) #23, !dbg !13619
  tail call fastcc void @k_cpu_idle() #25, !dbg !13620
  br label %10, !dbg !13621, !llvm.loop !13622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13624 {
  tail call void @arch_cpu_idle() #24, !dbg !13625
  ret void, !dbg !13626
}

; Function Attrs: optsize
declare !dbg !13627 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !13628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13632, metadata !DIExpression()), !dbg !13636
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13633, metadata !DIExpression()), !dbg !13636
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13637
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13637
  %5 = load i8, i8* %4, align 2, !dbg !13637
  call void @llvm.dbg.value(metadata i8 %5, metadata !13634, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13636
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13638
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13638
  %8 = load i8, i8* %7, align 2, !dbg !13638
  call void @llvm.dbg.value(metadata i8 %8, metadata !13635, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13636
  %9 = icmp eq i8 %8, %5, !dbg !13639
  %10 = sext i8 %5 to i32, !dbg !13641
  %11 = sext i8 %8 to i32, !dbg !13641
  %12 = sub nsw i32 %11, %10, !dbg !13641
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13641
  ret i32 %13, !dbg !13642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13647, metadata !DIExpression()), !dbg !13648
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !13649
  %3 = icmp eq i32 %2, 0, !dbg !13651
  br i1 %3, label %8, label %4, !dbg !13652

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !13653
  %6 = add i32 %5, %2, !dbg !13655
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13656
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !13657
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !13658
  br label %8, !dbg !13659

8:                                                ; preds = %4, %1
  ret void, !dbg !13660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !13661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13665, metadata !DIExpression()), !dbg !13667
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13668
  call void @llvm.dbg.value(metadata i32 %1, metadata !13666, metadata !DIExpression()), !dbg !13667
  ret i32 %1, !dbg !13669
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13674, metadata !DIExpression()), !dbg !13683
  call void @llvm.dbg.value(metadata i32 %1, metadata !13675, metadata !DIExpression()), !dbg !13683
  call void @llvm.dbg.value(metadata i32 0, metadata !13676, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !13692
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13694, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !13701
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !13701
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !13692
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13702
  br i1 %4, label %6, label %5, !dbg !13705

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !13706
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13706
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !13706
  unreachable, !dbg !13706

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !13701
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !13692
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13708
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i32 undef, metadata !13676, metadata !DIExpression()), !dbg !13684
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13709
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !13712
  %8 = icmp sgt i32 %0, 0, !dbg !13713
  %9 = icmp sgt i32 %7, 2, !dbg !13715
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13715
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13715
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13716
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13717
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !13725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !13725
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13727
  br i1 %12, label %14, label %13, !dbg !13730

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !13731
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13731
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !13731
  unreachable, !dbg !13731

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13694
  call void @llvm.dbg.value(metadata i32 %15, metadata !13697, metadata !DIExpression()) #23, !dbg !13701
  call void @llvm.dbg.value(metadata i32 %15, metadata !13691, metadata !DIExpression()) #23, !dbg !13692
  call void @llvm.dbg.value(metadata i32 %15, metadata !13682, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !13725
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !13736
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13738, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !13676, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i32 undef, metadata !13676, metadata !DIExpression()), !dbg !13684
  ret void, !dbg !13740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !13741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13743, metadata !DIExpression()), !dbg !13744
  call void @llvm.dbg.value(metadata i32 %0, metadata !13745, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13760
  call void @llvm.dbg.value(metadata i32 1000, metadata !13748, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i32 10000, metadata !13749, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i8 1, metadata !13750, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i1 true, metadata !13751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13760
  call void @llvm.dbg.value(metadata i1 true, metadata !13752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13760
  call void @llvm.dbg.value(metadata i8 0, metadata !13753, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i1 true, metadata !13754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13760
  call void @llvm.dbg.value(metadata i1 false, metadata !13755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13760
  call void @llvm.dbg.value(metadata i64 0, metadata !13756, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i64 0, metadata !13756, metadata !DIExpression()), !dbg !13760
  %2 = mul i32 %0, 10, !dbg !13762
  ret i32 %2, !dbg !13768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13771, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !13774
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13776, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !13778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !13778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !13774
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13779
  br i1 %3, label %5, label %4, !dbg !13780

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !13781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !13781
  unreachable, !dbg !13781

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13776
  call void @llvm.dbg.value(metadata i32 %6, metadata !13697, metadata !DIExpression()) #23, !dbg !13778
  call void @llvm.dbg.value(metadata i32 %6, metadata !13691, metadata !DIExpression()) #23, !dbg !13774
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13782
  call void @llvm.dbg.value(metadata i32 %6, metadata !13772, metadata !DIExpression()), !dbg !13773
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13783
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13785
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13786
  br i1 %9, label %10, label %14, !dbg !13787

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13788
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !13790
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13792
  br i1 %11, label %13, label %12, !dbg !13793

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !13794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !13794
  unreachable, !dbg !13794

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13719, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %6, metadata !13733, metadata !DIExpression()) #23, !dbg !13795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13797, !srcloc !13739
  br label %33, !dbg !13798

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13799
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !13800
  %16 = icmp eq i32 %15, 0, !dbg !13800
  br i1 %16, label %27, label %17, !dbg !13802

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !13803
  br i1 %18, label %19, label %27, !dbg !13804

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13805
  %21 = icmp sgt i32 %20, %0, !dbg !13808
  br i1 %21, label %25, label %22, !dbg !13809

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13810
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !13810
  call void @llvm.dbg.value(metadata i32 %24, metadata !13772, metadata !DIExpression()), !dbg !13773
  br label %28, !dbg !13812

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13813
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13813
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13815
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13773
  call void @llvm.dbg.value(metadata i32 %29, metadata !13772, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !13817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !13817
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13819
  br i1 %30, label %32, label %31, !dbg !13820

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !13821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !13821
  unreachable, !dbg !13821

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13719, metadata !DIExpression()) #23, !dbg !13817
  call void @llvm.dbg.value(metadata i32 %29, metadata !13733, metadata !DIExpression()) #23, !dbg !13822
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13824, !srcloc !13739
  br label %33, !dbg !13825

33:                                               ; preds = %32, %13
  ret void, !dbg !13825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !13826 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13830, metadata !DIExpression()), !dbg !13832
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !13833
  %3 = icmp eq i32 %2, 0, !dbg !13833
  br i1 %3, label %16, label %4, !dbg !13834

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !13835
  br i1 %5, label %16, label %6, !dbg !13836

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13837
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13837
  %9 = load i8, i8* %8, align 2, !dbg !13837
  %10 = sext i8 %9 to i32, !dbg !13838
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13839
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !13840
  br i1 %12, label %16, label %13, !dbg !13841

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !13842
  %15 = xor i1 %14, true, !dbg !13843
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13832
  call void @llvm.dbg.value(metadata i1 %17, metadata !13831, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13832
  ret i1 %17, !dbg !13844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13845 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13849, metadata !DIExpression()), !dbg !13851
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13852
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13850, metadata !DIExpression()), !dbg !13851
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !13853
  br i1 %3, label %5, label %4, !dbg !13855

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !13856
  br label %5, !dbg !13858

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13849, metadata !DIExpression()), !dbg !13851
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13859
  ret i32 %6, !dbg !13860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13863, metadata !DIExpression()), !dbg !13865
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13866
  %3 = load i8, i8* %2, align 1, !dbg !13866
  call void @llvm.dbg.value(metadata i8 %3, metadata !13864, metadata !DIExpression()), !dbg !13865
  %4 = and i8 %3, 31, !dbg !13867
  %5 = icmp ne i8 %4, 0, !dbg !13868
  ret i1 %5, !dbg !13869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()), !dbg !13873
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13874
  br i1 %2, label %3, label %7, !dbg !13876

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13877, metadata !DIExpression()) #23, !dbg !13880
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13883
  %5 = load i8, i8* %4, align 1, !dbg !13884
  %6 = and i8 %5, 127, !dbg !13884
  store i8 %6, i8* %4, align 1, !dbg !13884
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13885, metadata !DIExpression()) #23, !dbg !13888
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13892
  br label %7, !dbg !13893

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13894, metadata !DIExpression()) #23, !dbg !13897
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13899
  %9 = load i8, i8* %8, align 1, !dbg !13900
  %10 = or i8 %9, -128, !dbg !13900
  store i8 %10, i8* %8, align 1, !dbg !13900
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13901, metadata !DIExpression()) #23, !dbg !13904
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13908, metadata !DIExpression()) #23, !dbg !13916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13914, metadata !DIExpression()) #23, !dbg !13916
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !13918
  br i1 %11, label %12, label %13, !dbg !13921

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !13922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !13922
  unreachable, !dbg !13922

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13924
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13915, metadata !DIExpression()) #23, !dbg !13916
  %15 = icmp eq %struct._dnode* %14, null, !dbg !13926
  br i1 %15, label %26, label %16, !dbg !13924

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13915, metadata !DIExpression()) #23, !dbg !13916
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !13928
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !13915, metadata !DIExpression()) #23, !dbg !13916
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !13929
  %20 = icmp sgt i32 %19, 0, !dbg !13932
  br i1 %20, label %21, label %23, !dbg !13933

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13934
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !13936
  br label %28, !dbg !13937

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !13926
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13915, metadata !DIExpression()) #23, !dbg !13916
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13926
  br i1 %25, label %26, label %16, !dbg !13924, !llvm.loop !13938

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13940
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !13941
  br label %28, !dbg !13942

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13943
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !13944
  %31 = zext i1 %30 to i32, !dbg !13944
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !13945
  ret void, !dbg !13946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13949, metadata !DIExpression()), !dbg !13950
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !13951
  ret i1 %2, !dbg !13952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13953 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13955, metadata !DIExpression()), !dbg !13957
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13956, metadata !DIExpression()), !dbg !13957
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !13958
  br i1 %3, label %4, label %5, !dbg !13961

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1139) #24, !dbg !13962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1139) #24, !dbg !13962
  unreachable, !dbg !13962

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13964
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !13965
  ret void, !dbg !13966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !13967 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13969, metadata !DIExpression()), !dbg !13970
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13971
  ret i1 %2, !dbg !13972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !13973 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13977, metadata !DIExpression()), !dbg !13978
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !13979
  br i1 %2, label %6, label %3, !dbg !13979

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13980
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13980
  br label %6, !dbg !13979

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13979
  ret %struct._dnode* %7, !dbg !13981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !13982 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13986, metadata !DIExpression()), !dbg !13990
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13987, metadata !DIExpression()), !dbg !13990
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13991
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13991
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13988, metadata !DIExpression()), !dbg !13990
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13992
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13993
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13994
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13995
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13996
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13997
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13998
  ret void, !dbg !13999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14000 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14004, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14005, metadata !DIExpression()), !dbg !14006
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14007
  br i1 %3, label %6, label %4, !dbg !14008

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !14009
  br label %6, !dbg !14008

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14008
  ret %struct._dnode* %7, !dbg !14010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14011 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14015, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14016, metadata !DIExpression()), !dbg !14018
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14019
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14019
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14017, metadata !DIExpression()), !dbg !14018
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14020
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14021
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14022
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14023
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14024
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14025
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14026
  ret void, !dbg !14027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14030, metadata !DIExpression()), !dbg !14032
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14033
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14040, metadata !DIExpression()) #23, !dbg !14042
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14043
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14044
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14044
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14031, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14045, metadata !DIExpression()) #23, !dbg !14051
  call void @llvm.dbg.value(metadata i32 %0, metadata !14050, metadata !DIExpression()) #23, !dbg !14051
  %6 = icmp eq i32 %0, 0, !dbg !14054
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14056
  br i1 %6, label %8, label %18, !dbg !14057

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14058
  br i1 %9, label %10, label %11, !dbg !14061

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 137) #24, !dbg !14062
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !14062
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 137) #24, !dbg !14062
  unreachable, !dbg !14062

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !14064
  br i1 %12, label %18, label %13, !dbg !14066

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14067
  br i1 %14, label %18, label %15, !dbg !14069

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !14070
  %17 = icmp eq i32 %16, 0, !dbg !14070
  br i1 %17, label %21, label %18, !dbg !14072

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14073
  br i1 %19, label %21, label %20, !dbg !14076

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14077
  br label %21, !dbg !14079

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14056
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14056
  ret void, !dbg !14080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !14081 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14085, metadata !DIExpression()), !dbg !14088
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14086, metadata !DIExpression()), !dbg !14088
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !14089
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14087, metadata !DIExpression()), !dbg !14088
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14086, metadata !DIExpression()), !dbg !14088
  ret %struct.k_thread* %3, !dbg !14090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14093, metadata !DIExpression()), !dbg !14094
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14095
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14096
  %4 = xor i1 %3, true, !dbg !14097
  ret i1 %4, !dbg !14098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14101, metadata !DIExpression()), !dbg !14102
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14103
  %3 = load i16, i16* %2, align 2, !dbg !14103
  %4 = icmp ult i16 %3, 128, !dbg !14104
  %5 = zext i1 %4 to i32, !dbg !14104
  ret i32 %5, !dbg !14105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14106 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14112, metadata !DIExpression()), !dbg !14113
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14114
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14115
  %4 = xor i1 %3, true, !dbg !14116
  ret i1 %4, !dbg !14117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14118 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14124, metadata !DIExpression()), !dbg !14125
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14126
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14126
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14127
  ret i1 %4, !dbg !14128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14129 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14131, metadata !DIExpression()), !dbg !14133
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14132, metadata !DIExpression()), !dbg !14133
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14134
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14134
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14135
  br i1 %5, label %9, label %6, !dbg !14136

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14137
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14137
  br label %9, !dbg !14136

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14136
  ret %struct._dnode* %10, !dbg !14138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14143, metadata !DIExpression()), !dbg !14144
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14145
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14145
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14146
  ret i1 %4, !dbg !14147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14152, metadata !DIExpression()), !dbg !14155
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14156
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14156
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14153, metadata !DIExpression()), !dbg !14155
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14157
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14157
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14154, metadata !DIExpression()), !dbg !14155
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14158
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14159
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14160
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14161
  tail call fastcc void @sys_dnode_init.257(%struct._dnode* noundef %0) #25, !dbg !14162
  ret void, !dbg !14163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.257(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14164 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14166, metadata !DIExpression()), !dbg !14167
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14168
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14169
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14170
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14171
  ret void, !dbg !14172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !14173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14177, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata i32 %1, metadata !14178, metadata !DIExpression()), !dbg !14179
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14180
  %4 = load i8, i8* %3, align 1, !dbg !14180
  %5 = zext i8 %4 to i32, !dbg !14181
  %6 = and i32 %5, %1, !dbg !14182
  %7 = icmp ne i32 %6, 0, !dbg !14183
  ret i1 %7, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14189, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 %1, metadata !14190, metadata !DIExpression()), !dbg !14191
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14192
  ret i1 %3, !dbg !14193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14196, metadata !DIExpression()), !dbg !14198
  call void @llvm.dbg.value(metadata i32 %1, metadata !14197, metadata !DIExpression()), !dbg !14198
  %3 = icmp slt i32 %0, %1, !dbg !14199
  ret i1 %3, !dbg !14200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14203, metadata !DIExpression()), !dbg !14207
  call void @llvm.dbg.value(metadata i32 0, metadata !14204, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14209
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14211, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14209
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14214
  br i1 %3, label %5, label %4, !dbg !14215

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14216
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14216
  unreachable, !dbg !14216

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14209
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14217
  call void @llvm.dbg.value(metadata i32 undef, metadata !14206, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !14204, metadata !DIExpression()), !dbg !14208
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14218
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14223
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14225
  br i1 %6, label %8, label %7, !dbg !14226

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14227
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14227
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14227
  unreachable, !dbg !14227

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14211
  call void @llvm.dbg.value(metadata i32 %9, metadata !13697, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata i32 %9, metadata !13691, metadata !DIExpression()) #23, !dbg !14209
  call void @llvm.dbg.value(metadata i32 %9, metadata !14206, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14223
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !14228
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14230, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !14204, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !14204, metadata !DIExpression()), !dbg !14208
  ret void, !dbg !14231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14234, metadata !DIExpression()), !dbg !14235
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14236
  br i1 %2, label %27, label %3, !dbg !14238

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14239
  br i1 %4, label %5, label %27, !dbg !14240

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13894, metadata !DIExpression()) #23, !dbg !14241
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14244
  %7 = load i8, i8* %6, align 1, !dbg !14245
  %8 = or i8 %7, -128, !dbg !14245
  store i8 %8, i8* %6, align 1, !dbg !14245
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13901, metadata !DIExpression()) #23, !dbg !14246
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13908, metadata !DIExpression()) #23, !dbg !14248
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13914, metadata !DIExpression()) #23, !dbg !14248
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14250
  br i1 %9, label %10, label %11, !dbg !14251

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !14252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !14252
  unreachable, !dbg !14252

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14253
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13915, metadata !DIExpression()) #23, !dbg !14248
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14254
  br i1 %13, label %24, label %14, !dbg !14253

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13915, metadata !DIExpression()) #23, !dbg !14248
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14255
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13915, metadata !DIExpression()) #23, !dbg !14248
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !14256
  %18 = icmp sgt i32 %17, 0, !dbg !14257
  br i1 %18, label %19, label %21, !dbg !14258

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14259
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !14260
  br label %26, !dbg !14261

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !14254
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !13915, metadata !DIExpression()) #23, !dbg !14248
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14254
  br i1 %23, label %24, label %14, !dbg !14253, !llvm.loop !14262

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14264
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !14265
  br label %26, !dbg !14266

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14267
  br label %27, !dbg !14268

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14272, metadata !DIExpression()), !dbg !14273
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14274
  br i1 %2, label %6, label %3, !dbg !14275

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14276
  %5 = xor i1 %4, true, !dbg !14275
  br label %6, !dbg !14275

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14280, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.value(metadata i32 0, metadata !14281, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14286
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14288, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14286
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14291
  br i1 %3, label %5, label %4, !dbg !14292

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14293
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14293
  unreachable, !dbg !14293

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14286
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14281, metadata !DIExpression()), !dbg !14285
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14295
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14298
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14300
  br i1 %6, label %8, label %7, !dbg !14301

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14302
  unreachable, !dbg !14302

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14288
  call void @llvm.dbg.value(metadata i32 %9, metadata !13697, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata i32 %9, metadata !13691, metadata !DIExpression()) #23, !dbg !14286
  call void @llvm.dbg.value(metadata i32 %9, metadata !14283, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14298
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !14303
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14305, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !14281, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14281, metadata !DIExpression()), !dbg !14285
  ret void, !dbg !14306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14307 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14309, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14312
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14314, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14316
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14316
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14312
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14317
  br i1 %3, label %5, label %4, !dbg !14318

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14319
  unreachable, !dbg !14319

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14314
  call void @llvm.dbg.value(metadata i32 %6, metadata !13697, metadata !DIExpression()) #23, !dbg !14316
  call void @llvm.dbg.value(metadata i32 %6, metadata !13691, metadata !DIExpression()) #23, !dbg !14312
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %6, metadata !14310, metadata !DIExpression()), !dbg !14311
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14321
  br i1 %7, label %8, label %12, !dbg !14323

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14324
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14327
  br i1 %9, label %11, label %10, !dbg !14328

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14329
  unreachable, !dbg !14329

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13719, metadata !DIExpression()) #23, !dbg !14324
  call void @llvm.dbg.value(metadata i32 %6, metadata !13733, metadata !DIExpression()) #23, !dbg !14330
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14332, !srcloc !13739
  br label %14, !dbg !14333

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.262(%struct.k_thread* noundef %0) #25, !dbg !14334
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14335
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14336
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14336
  br label %14, !dbg !14337

14:                                               ; preds = %12, %11
  ret void, !dbg !14337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14340, metadata !DIExpression()), !dbg !14341
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14342
  %3 = load i8, i8* %2, align 1, !dbg !14342
  %4 = and i8 %3, 4, !dbg !14343
  %5 = icmp eq i8 %4, 0, !dbg !14344
  ret i1 %5, !dbg !14345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.262(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14348, metadata !DIExpression()), !dbg !14349
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14350
  %3 = load i8, i8* %2, align 1, !dbg !14351
  %4 = and i8 %3, -5, !dbg !14351
  store i8 %4, i8* %2, align 1, !dbg !14351
  ret void, !dbg !14352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14353 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14356, metadata !DIExpression()), !dbg !14357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14355, metadata !DIExpression()), !dbg !14357
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !14358
  br i1 %4, label %5, label %12, !dbg !14360

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !14361
  br i1 %6, label %7, label %12, !dbg !14362

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14363, metadata !DIExpression()) #23, !dbg !14369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14368, metadata !DIExpression()) #23, !dbg !14369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14372, metadata !DIExpression()) #23, !dbg !14377
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14379
  br i1 %8, label %10, label %9, !dbg !14382

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !14383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !14383
  unreachable, !dbg !14383

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14363, metadata !DIExpression()) #23, !dbg !14369
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14385
  br label %16, !dbg !14386

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13724, metadata !DIExpression()) #23, !dbg !14387
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14390
  br i1 %13, label %15, label %14, !dbg !14391

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14392
  unreachable, !dbg !14392

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13719, metadata !DIExpression()) #23, !dbg !14387
  call void @llvm.dbg.value(metadata i32 %3, metadata !13733, metadata !DIExpression()) #23, !dbg !14393
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14395, !srcloc !13739
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14401, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i32 %0, metadata !14403, metadata !DIExpression()), !dbg !14408
  %2 = icmp eq i32 %0, 0, !dbg !14410
  br i1 %2, label %3, label %6, !dbg !14411

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14412, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %4, metadata !14415, metadata !DIExpression()) #23, !dbg !14420
  %5 = icmp eq i32 %4, 0, !dbg !14421
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14402
  ret i1 %7, !dbg !14422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !14423 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14426
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14425, metadata !DIExpression()), !dbg !14427
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14428
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14429
  ret i1 %3, !dbg !14430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14433, metadata !DIExpression()), !dbg !14435
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !14436
  call void @llvm.dbg.value(metadata i32 %2, metadata !14434, metadata !DIExpression()), !dbg !14435
  ret i32 %2, !dbg !14437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14440, metadata !DIExpression()), !dbg !14444
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !14445
  call void @llvm.dbg.value(metadata i32 0, metadata !14441, metadata !DIExpression()), !dbg !14446
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14447
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14449, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14447
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14452
  br i1 %4, label %6, label %5, !dbg !14453

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14454
  unreachable, !dbg !14454

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14449
  call void @llvm.dbg.value(metadata i32 %7, metadata !13697, metadata !DIExpression()) #23, !dbg !14451
  call void @llvm.dbg.value(metadata i32 %7, metadata !13691, metadata !DIExpression()) #23, !dbg !14447
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14455
  call void @llvm.dbg.value(metadata i32 %7, metadata !14443, metadata !DIExpression()), !dbg !14446
  call void @llvm.dbg.value(metadata i32 undef, metadata !14441, metadata !DIExpression()), !dbg !14446
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14456
  br i1 %8, label %9, label %13, !dbg !14460

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13877, metadata !DIExpression()) #23, !dbg !14461
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14464
  %11 = load i8, i8* %10, align 1, !dbg !14465
  %12 = and i8 %11, 127, !dbg !14465
  store i8 %12, i8* %10, align 1, !dbg !14465
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13885, metadata !DIExpression()) #23, !dbg !14466
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14468
  br label %13, !dbg !14469

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !14470
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14471
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14472
  %16 = zext i1 %15 to i32, !dbg !14472
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !14473
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14474
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14476
  br i1 %17, label %19, label %18, !dbg !14477

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14478
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14478
  unreachable, !dbg !14478

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13719, metadata !DIExpression()) #23, !dbg !14474
  call void @llvm.dbg.value(metadata i32 %7, metadata !13733, metadata !DIExpression()) #23, !dbg !14479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14481, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !14441, metadata !DIExpression()), !dbg !14446
  call void @llvm.dbg.value(metadata i32 undef, metadata !14441, metadata !DIExpression()), !dbg !14446
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14482
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14484
  br i1 %21, label %22, label %23, !dbg !14485

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !14486
  br label %23, !dbg !14488

23:                                               ; preds = %22, %19
  ret void, !dbg !14489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14492, metadata !DIExpression()), !dbg !14493
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14494
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14495
  ret i32 %3, !dbg !14496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14499, metadata !DIExpression()), !dbg !14500
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14501
  %3 = load i8, i8* %2, align 1, !dbg !14502
  %4 = or i8 %3, 16, !dbg !14502
  store i8 %4, i8* %2, align 1, !dbg !14502
  ret void, !dbg !14503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14504 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14505, !srcloc !13700
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14505
  call void @llvm.dbg.value(metadata i32 %2, metadata !13697, metadata !DIExpression()) #23, !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14507
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !14508
  ret void, !dbg !14509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14512, metadata !DIExpression()), !dbg !14513
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !14514
  br i1 %2, label %3, label %5, !dbg !14516

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14517
  br label %6, !dbg !14519

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13733, metadata !DIExpression()) #23, !dbg !14520
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14523, !srcloc !13739
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14527, metadata !DIExpression()), !dbg !14529
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14530
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14532, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14534
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14534
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14530
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14535
  br i1 %3, label %5, label %4, !dbg !14536

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14537
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14537
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14537
  unreachable, !dbg !14537

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %6, metadata !13697, metadata !DIExpression()) #23, !dbg !14534
  call void @llvm.dbg.value(metadata i32 %6, metadata !13691, metadata !DIExpression()) #23, !dbg !14530
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14538
  call void @llvm.dbg.value(metadata i32 %6, metadata !14528, metadata !DIExpression()), !dbg !14529
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !14539
  br i1 %7, label %12, label %8, !dbg !14541

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14542
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14545
  br i1 %9, label %11, label %10, !dbg !14546

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14547
  unreachable, !dbg !14547

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13719, metadata !DIExpression()) #23, !dbg !14542
  call void @llvm.dbg.value(metadata i32 %6, metadata !13733, metadata !DIExpression()) #23, !dbg !14548
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14550, !srcloc !13739
  br label %14, !dbg !14551

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !14552
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14553
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14554
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14554
  br label %14, !dbg !14555

14:                                               ; preds = %12, %11
  ret void, !dbg !14555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14558, metadata !DIExpression()), !dbg !14559
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14560
  %3 = load i8, i8* %2, align 1, !dbg !14560
  %4 = and i8 %3, 16, !dbg !14561
  %5 = icmp ne i8 %4, 0, !dbg !14562
  ret i1 %5, !dbg !14563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14566, metadata !DIExpression()), !dbg !14567
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14568
  %3 = load i8, i8* %2, align 1, !dbg !14569
  %4 = and i8 %3, -17, !dbg !14569
  store i8 %4, i8* %2, align 1, !dbg !14569
  ret void, !dbg !14570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14571 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14581, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14579, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14580, metadata !DIExpression()), !dbg !14585
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14586
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14586
  br i1 %5, label %9, label %6, !dbg !14586

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !14586
  br i1 %7, label %9, label %8, !dbg !14589

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 773) #24, !dbg !14590
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 773) #24, !dbg !14590
  unreachable, !dbg !14590

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14582, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14593
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14595, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14593
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14598
  br i1 %11, label %13, label %12, !dbg !14599

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14600
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14600
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14600
  unreachable, !dbg !14600

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14593
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14584, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !14582, metadata !DIExpression()), !dbg !14592
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14602
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14605
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14607
  br i1 %14, label %16, label %15, !dbg !14608

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14609
  unreachable, !dbg !14609

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14595
  call void @llvm.dbg.value(metadata i32 %17, metadata !13697, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 %17, metadata !13691, metadata !DIExpression()) #23, !dbg !14593
  call void @llvm.dbg.value(metadata i32 %17, metadata !14584, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14605
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !14610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14612, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !14582, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !14582, metadata !DIExpression()), !dbg !14592
  ret void, !dbg !14613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14614 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14616, metadata !DIExpression()), !dbg !14617
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14618
  %3 = load i8, i8* %2, align 1, !dbg !14618
  %4 = and i8 %3, 1, !dbg !14619
  %5 = icmp ne i8 %4, 0, !dbg !14620
  ret i1 %5, !dbg !14621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14622 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14626, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14624, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14625, metadata !DIExpression()), !dbg !14627
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !14628
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !14629
  ret void, !dbg !14630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14635, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14636, metadata !DIExpression()), !dbg !14637
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !14638
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !14639
  %3 = icmp eq %union.anon* %1, null, !dbg !14640
  br i1 %3, label %24, label %4, !dbg !14642

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14643
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14645
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14646
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13908, metadata !DIExpression()) #23, !dbg !14647
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13914, metadata !DIExpression()) #23, !dbg !14647
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14649
  br i1 %7, label %8, label %9, !dbg !14650

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !14651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !14651
  unreachable, !dbg !14651

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !14652
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13915, metadata !DIExpression()) #23, !dbg !14647
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14653
  br i1 %11, label %22, label %12, !dbg !14652

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13915, metadata !DIExpression()) #23, !dbg !14647
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14654
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13915, metadata !DIExpression()) #23, !dbg !14647
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !14655
  %16 = icmp sgt i32 %15, 0, !dbg !14656
  br i1 %16, label %17, label %19, !dbg !14657

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14658
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !14659
  br label %24, !dbg !14660

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !14653
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13915, metadata !DIExpression()) #23, !dbg !14647
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14653
  br i1 %21, label %22, label %12, !dbg !14652, !llvm.loop !14661

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14663
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !14664
  br label %24, !dbg !14665

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14667 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14672, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14671, metadata !DIExpression()), !dbg !14673
  %4 = icmp eq i64 %3, -1, !dbg !14674
  br i1 %4, label %6, label %5, !dbg !14676

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.264(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14677
  br label %6, !dbg !14679

6:                                                ; preds = %5, %2
  ret void, !dbg !14680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.264(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14681 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14684, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14683, metadata !DIExpression()), !dbg !14685
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14686
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14687
  ret void, !dbg !14688
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14689 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14691, metadata !DIExpression()), !dbg !14699
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14700
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14700
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14692, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata i32 0, metadata !14693, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14702
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14704, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14706
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14706
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14702
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14707
  br i1 %5, label %7, label %6, !dbg !14708

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14709
  unreachable, !dbg !14709

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14706
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14702
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata i32 undef, metadata !14693, metadata !DIExpression()), !dbg !14701
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14711
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14712
  %10 = load i8, i8* %9, align 1, !dbg !14712
  %11 = and i8 %10, 40, !dbg !14713
  %12 = icmp eq i8 %11, 0, !dbg !14713
  call void @llvm.dbg.value(metadata i1 %12, metadata !14696, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14714
  br i1 %12, label %13, label %20, !dbg !14715

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14716
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !14716
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !14716
  %17 = icmp eq %union.anon* %16, null, !dbg !14720
  br i1 %17, label %19, label %18, !dbg !14721

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !14722
  br label %19, !dbg !14724

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.262(%struct.k_thread* noundef nonnull %3) #25, !dbg !14725
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !14726
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !14727
  br label %20, !dbg !14728

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14729
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14731
  br i1 %21, label %23, label %22, !dbg !14732

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14733
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14733
  unreachable, !dbg !14733

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %24, metadata !13697, metadata !DIExpression()) #23, !dbg !14706
  call void @llvm.dbg.value(metadata i32 %24, metadata !13691, metadata !DIExpression()) #23, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %24, metadata !14695, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14729
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !14734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !14736, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !14693, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata i32 undef, metadata !14693, metadata !DIExpression()), !dbg !14701
  ret void, !dbg !14737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14738 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14740, metadata !DIExpression()), !dbg !14741
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !14742
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14743
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !14744
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14745
  store %union.anon* null, %union.anon** %3, align 8, !dbg !14746
  ret void, !dbg !14747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14752, metadata !DIExpression()), !dbg !14753
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14754
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !14754
  %4 = icmp eq %union.anon* %3, null, !dbg !14754
  br i1 %4, label %5, label %6, !dbg !14757

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 726) #24, !dbg !14758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 726) #24, !dbg !14758
  unreachable, !dbg !14758

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !14760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14763, metadata !DIExpression()), !dbg !14764
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14765
  %3 = load i8, i8* %2, align 1, !dbg !14766
  %4 = and i8 %3, -3, !dbg !14766
  store i8 %4, i8* %2, align 1, !dbg !14766
  ret void, !dbg !14767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14770, metadata !DIExpression()), !dbg !14771
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14772
  br i1 %2, label %3, label %7, !dbg !14774

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13877, metadata !DIExpression()) #23, !dbg !14775
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14778
  %5 = load i8, i8* %4, align 1, !dbg !14779
  %6 = and i8 %5, 127, !dbg !14779
  store i8 %6, i8* %4, align 1, !dbg !14779
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13885, metadata !DIExpression()) #23, !dbg !14780
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14782
  br label %7, !dbg !14783

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14784
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14785
  %10 = zext i1 %9 to i32, !dbg !14785
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !14786
  ret void, !dbg !14787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14788 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14790, metadata !DIExpression()), !dbg !14791
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14792
  %3 = load i8, i8* %2, align 1, !dbg !14793
  %4 = or i8 %3, 2, !dbg !14793
  store i8 %4, i8* %2, align 1, !dbg !14793
  ret void, !dbg !14794
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14797, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata i32 0, metadata !14798, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14803
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14805, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14807
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14807
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14803
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14808
  br i1 %3, label %5, label %4, !dbg !14809

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14810
  unreachable, !dbg !14810

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14807
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14803
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14811
  call void @llvm.dbg.value(metadata i32 undef, metadata !14800, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14798, metadata !DIExpression()), !dbg !14802
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14812
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14815
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14817
  br i1 %6, label %8, label %7, !dbg !14818

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14819
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14819
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14819
  unreachable, !dbg !14819

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %9, metadata !13697, metadata !DIExpression()) #23, !dbg !14807
  call void @llvm.dbg.value(metadata i32 %9, metadata !13691, metadata !DIExpression()) #23, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %9, metadata !14800, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !14820
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14822, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !14798, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14798, metadata !DIExpression()), !dbg !14802
  ret void, !dbg !14823
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14824 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14830, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i32 %0, metadata !14828, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14829, metadata !DIExpression()), !dbg !14835
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14836
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14837
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14838
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14839
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %6, metadata !14831, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i32 0, metadata !14832, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14842
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14844, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14846
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14846
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14842
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14847
  br i1 %8, label %10, label %9, !dbg !14848

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14849
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14849
  unreachable, !dbg !14849

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14846
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14842
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14834, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i32 undef, metadata !14832, metadata !DIExpression()), !dbg !14841
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14851
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14855
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !14856
  br i1 %13, label %14, label %15, !dbg !14857

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14858
  br label %15, !dbg !14860

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14861
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14861
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14863
  br i1 %16, label %18, label %17, !dbg !14864

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14865
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14865
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14865
  unreachable, !dbg !14865

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !14844
  call void @llvm.dbg.value(metadata i32 %19, metadata !13697, metadata !DIExpression()) #23, !dbg !14846
  call void @llvm.dbg.value(metadata i32 %19, metadata !13691, metadata !DIExpression()) #23, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %19, metadata !14834, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14861
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !14866
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !14868, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !14832, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i32 undef, metadata !14832, metadata !DIExpression()), !dbg !14841
  ret i32 %6, !dbg !14869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14870 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14875, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata i64 undef, metadata !14877, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14874, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14876, metadata !DIExpression()), !dbg !14878
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14879
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14880
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !14881
  br i1 %6, label %7, label %8, !dbg !14884

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 846) #24, !dbg !14885
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 846) #24, !dbg !14885
  unreachable, !dbg !14885

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14887
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14889, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14887
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14892
  br i1 %10, label %12, label %11, !dbg !14893

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14894
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14894
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14894
  unreachable, !dbg !14894

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14887
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14895
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14896
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14897
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14372, metadata !DIExpression()) #23, !dbg !14898
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14900
  br i1 %14, label %16, label %15, !dbg !14901

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !14902
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !14902
  unreachable, !dbg !14902

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14363, metadata !DIExpression()) #23, !dbg !14903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14368, metadata !DIExpression()) #23, !dbg !14903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14372, metadata !DIExpression()) #23, !dbg !14905
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14907
  br i1 %17, label %19, label %18, !dbg !14908

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !14909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !14909
  unreachable, !dbg !14909

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14363, metadata !DIExpression()) #23, !dbg !14903
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !14910
  ret i32 %21, !dbg !14911
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14912 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14916, metadata !DIExpression()), !dbg !14921
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14917, metadata !DIExpression()), !dbg !14921
  call void @llvm.dbg.value(metadata i32 0, metadata !14918, metadata !DIExpression()), !dbg !14922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14923
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14925, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14927
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14927
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14923
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14928
  br i1 %3, label %5, label %4, !dbg !14929

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14930
  unreachable, !dbg !14930

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14927
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14923
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14931
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()), !dbg !14922
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14917, metadata !DIExpression()), !dbg !14921
  call void @llvm.dbg.value(metadata i32 undef, metadata !14918, metadata !DIExpression()), !dbg !14922
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14917, metadata !DIExpression()), !dbg !14921
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14935
  br i1 %8, label %10, label %9, !dbg !14937

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14938
  br label %10, !dbg !14940

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14941
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14943
  br i1 %11, label %13, label %12, !dbg !14944

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14945
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14945
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14945
  unreachable, !dbg !14945

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14925
  call void @llvm.dbg.value(metadata i32 %14, metadata !13697, metadata !DIExpression()) #23, !dbg !14927
  call void @llvm.dbg.value(metadata i32 %14, metadata !13691, metadata !DIExpression()) #23, !dbg !14923
  call void @llvm.dbg.value(metadata i32 %14, metadata !14920, metadata !DIExpression()), !dbg !14922
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14941
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !14946
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14948, !srcloc !13739
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14917, metadata !DIExpression()), !dbg !14921
  call void @llvm.dbg.value(metadata i32 undef, metadata !14918, metadata !DIExpression()), !dbg !14922
  ret %struct.k_thread* %7, !dbg !14949
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14950 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14952, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14953, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata i32 0, metadata !14954, metadata !DIExpression()), !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14959
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14961, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14963
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14963
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14959
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14964
  br i1 %3, label %5, label %4, !dbg !14965

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14966
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !14966
  unreachable, !dbg !14966

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14963
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14959
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14956, metadata !DIExpression()), !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14953, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14954, metadata !DIExpression()), !dbg !14958
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !14968
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14953, metadata !DIExpression()), !dbg !14957
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14971
  br i1 %8, label %11, label %9, !dbg !14973

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14974
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14976
  br label %11, !dbg !14977

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !14978
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14980
  br i1 %12, label %14, label %13, !dbg !14981

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14982
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14982
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !14982
  unreachable, !dbg !14982

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !14961
  call void @llvm.dbg.value(metadata i32 %15, metadata !13697, metadata !DIExpression()) #23, !dbg !14963
  call void @llvm.dbg.value(metadata i32 %15, metadata !13691, metadata !DIExpression()) #23, !dbg !14959
  call void @llvm.dbg.value(metadata i32 %15, metadata !14956, metadata !DIExpression()), !dbg !14958
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !14983
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14985, !srcloc !13739
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14953, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14954, metadata !DIExpression()), !dbg !14958
  ret %struct.k_thread* %7, !dbg !14986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14989, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14797, metadata !DIExpression()) #23, !dbg !14991
  call void @llvm.dbg.value(metadata i32 0, metadata !14798, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !14994
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14996, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14998
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !14998
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14994
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14999
  br i1 %3, label %5, label %4, !dbg !15000

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15001
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15001
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15001
  unreachable, !dbg !15001

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !14998
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !14994
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !14800, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !14798, metadata !DIExpression()) #23, !dbg !14993
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15003
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15004
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !15004
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15006
  br i1 %6, label %8, label %7, !dbg !15007

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15008
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15008
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15008
  unreachable, !dbg !15008

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14996
  call void @llvm.dbg.value(metadata i32 %9, metadata !13697, metadata !DIExpression()) #23, !dbg !14998
  call void @llvm.dbg.value(metadata i32 %9, metadata !13691, metadata !DIExpression()) #23, !dbg !14994
  call void @llvm.dbg.value(metadata i32 %9, metadata !14800, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15004
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !15009
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15011, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !14798, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !14798, metadata !DIExpression()) #23, !dbg !14993
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15012
  ret void, !dbg !15013
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15016, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata i32 %1, metadata !15017, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata i8 0, metadata !15018, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata i32 0, metadata !15019, metadata !DIExpression()), !dbg !15023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !15024
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15026, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15028
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !15028
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15024
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15029
  br i1 %4, label %6, label %5, !dbg !15030

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15031
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15031
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15031
  unreachable, !dbg !15031

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15028
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15024
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15032
  call void @llvm.dbg.value(metadata i32 undef, metadata !15021, metadata !DIExpression()), !dbg !15023
  call void @llvm.dbg.value(metadata i8 poison, metadata !15018, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15019, metadata !DIExpression()), !dbg !15023
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15033
  call void @llvm.dbg.value(metadata i1 %9, metadata !15018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15022
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15036

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13877, metadata !DIExpression()) #23, !dbg !15037
  %14 = load i8, i8* %7, align 1, !dbg !15043
  %15 = and i8 %14, 127, !dbg !15043
  store i8 %15, i8* %7, align 1, !dbg !15043
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13885, metadata !DIExpression()) #23, !dbg !15044
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15046
  store i8 %12, i8* %11, align 2, !dbg !15047
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13894, metadata !DIExpression()) #23, !dbg !15048
  %16 = load i8, i8* %7, align 1, !dbg !15050
  %17 = or i8 %16, -128, !dbg !15050
  store i8 %17, i8* %7, align 1, !dbg !15050
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13901, metadata !DIExpression()) #23, !dbg !15051
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13908, metadata !DIExpression()) #23, !dbg !15053
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13914, metadata !DIExpression()) #23, !dbg !15053
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15055
  br i1 %18, label %19, label %20, !dbg !15056

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !15057
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !15057
  unreachable, !dbg !15057

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15058
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13915, metadata !DIExpression()) #23, !dbg !15053
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15059
  br i1 %22, label %32, label %23, !dbg !15058

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13915, metadata !DIExpression()) #23, !dbg !15053
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15060
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !13915, metadata !DIExpression()) #23, !dbg !15053
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !15061
  %27 = icmp sgt i32 %26, 0, !dbg !15062
  br i1 %27, label %28, label %29, !dbg !15063

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !15064
  br label %33, !dbg !15065

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !15059
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !13915, metadata !DIExpression()) #23, !dbg !15053
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15059
  br i1 %31, label %32, label %23, !dbg !15058, !llvm.loop !15066

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !15068
  br label %33, !dbg !15069

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15070
  br label %35, !dbg !15071

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15072
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !15074
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15076
  br i1 %36, label %38, label %37, !dbg !15077

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15078
  unreachable, !dbg !15078

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15026
  call void @llvm.dbg.value(metadata i32 %39, metadata !13697, metadata !DIExpression()) #23, !dbg !15028
  call void @llvm.dbg.value(metadata i32 %39, metadata !13691, metadata !DIExpression()) #23, !dbg !15024
  call void @llvm.dbg.value(metadata i32 %39, metadata !15021, metadata !DIExpression()), !dbg !15023
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15074
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !15079
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15081, !srcloc !13739
  call void @llvm.dbg.value(metadata i8 poison, metadata !15018, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15019, metadata !DIExpression()), !dbg !15023
  ret i1 %9, !dbg !15082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15087, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i32 %1, metadata !15088, metadata !DIExpression()), !dbg !15090
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15091
  call void @llvm.dbg.value(metadata i1 %3, metadata !15089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15090
  br i1 %3, label %4, label %12, !dbg !15092

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15094
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15095
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15095
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15095
  %9 = load i8, i8* %8, align 1, !dbg !15095
  %10 = icmp eq i8 %9, 0, !dbg !15096
  br i1 %10, label %11, label %12, !dbg !15097

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15098
  br label %12, !dbg !15100

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15102 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15104, metadata !DIExpression()), !dbg !15107
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !15108
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15110, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15112
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !15112
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15108
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15113
  br i1 %2, label %4, label %3, !dbg !15114

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15115
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15115
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15115
  unreachable, !dbg !15115

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15112
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15108
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15116
  call void @llvm.dbg.value(metadata i32 undef, metadata !15106, metadata !DIExpression()), !dbg !15107
  call void @llvm.dbg.value(metadata i32 undef, metadata !15104, metadata !DIExpression()), !dbg !15107
  tail call fastcc void @z_sched_lock() #25, !dbg !15117
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !15120
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15122
  br i1 %5, label %7, label %6, !dbg !15123

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15124
  unreachable, !dbg !15124

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15110
  call void @llvm.dbg.value(metadata i32 %8, metadata !13697, metadata !DIExpression()) #23, !dbg !15112
  call void @llvm.dbg.value(metadata i32 %8, metadata !13691, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata i32 %8, metadata !15106, metadata !DIExpression()), !dbg !15107
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15120
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !15125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15127, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !15104, metadata !DIExpression()), !dbg !15107
  call void @llvm.dbg.value(metadata i32 undef, metadata !15104, metadata !DIExpression()), !dbg !15107
  ret void, !dbg !15128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15129 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15130, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %1, metadata !14415, metadata !DIExpression()) #23, !dbg !15135
  %2 = icmp eq i32 %1, 0, !dbg !15136
  br i1 %2, label %4, label %3, !dbg !15137

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.272, i32 0, i32 0), i32 noundef 253) #24, !dbg !15138
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.272, i32 0, i32 0), i32 noundef 253) #24, !dbg !15138
  unreachable, !dbg !15138

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15140
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15140
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15140
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15140
  %9 = load i8, i8* %8, align 1, !dbg !15140
  %10 = icmp eq i8 %9, 1, !dbg !15140
  br i1 %10, label %11, label %12, !dbg !15143

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.272, i32 0, i32 0), i32 noundef 254) #24, !dbg !15144
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15144
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.272, i32 0, i32 0), i32 noundef 254) #24, !dbg !15144
  unreachable, !dbg !15144

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15146
  store i8 %13, i8* %8, align 1, !dbg !15146
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15147, !srcloc !15149
  ret void, !dbg !15150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15151 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15153, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !15157
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15159, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15157
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15162
  br i1 %2, label %4, label %3, !dbg !15163

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15164
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15164
  unreachable, !dbg !15164

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15157
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15165
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15153, metadata !DIExpression()), !dbg !15156
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15166
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15166
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15166
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15166
  %9 = load i8, i8* %8, align 1, !dbg !15166
  %10 = icmp eq i8 %9, 0, !dbg !15166
  br i1 %10, label %11, label %12, !dbg !15171

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 999) #24, !dbg !15172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 999) #24, !dbg !15172
  unreachable, !dbg !15172

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15174, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %13, metadata !14415, metadata !DIExpression()) #23, !dbg !15179
  %14 = icmp eq i32 %13, 0, !dbg !15180
  br i1 %14, label %16, label %15, !dbg !15181

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15182
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15182
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15182
  unreachable, !dbg !15182

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15184
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15185
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15185
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15185
  %21 = load i8, i8* %20, align 1, !dbg !15186
  %22 = add i8 %21, 1, !dbg !15186
  store i8 %22, i8* %20, align 1, !dbg !15186
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !15188
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15190
  br i1 %23, label %25, label %24, !dbg !15191

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15192
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15192
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15192
  unreachable, !dbg !15192

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15159
  call void @llvm.dbg.value(metadata i32 %26, metadata !13697, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata i32 %26, metadata !13691, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 %26, metadata !15155, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !15193
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15195, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 1, metadata !15153, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15153, metadata !DIExpression()), !dbg !15156
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15196
  ret void, !dbg !15197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !15198 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15199
  ret %struct.k_thread* %1, !dbg !15200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15201 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15205, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15206, metadata !DIExpression()), !dbg !15210
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15211
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15207, metadata !DIExpression()), !dbg !15210
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15212
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15208, metadata !DIExpression()), !dbg !15210
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15213
  call void @llvm.dbg.value(metadata i32 %5, metadata !15209, metadata !DIExpression()), !dbg !15210
  %6 = icmp sgt i32 %5, 0, !dbg !15214
  br i1 %6, label %17, label %7, !dbg !15216

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15217
  br i1 %8, label %17, label %9, !dbg !15219

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15220
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15220
  %12 = load i32, i32* %11, align 8, !dbg !15220
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15222
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15222
  %15 = load i32, i32* %14, align 8, !dbg !15222
  %16 = icmp ult i32 %12, %15, !dbg !15223
  br label %17, !dbg !15224

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15225
  ret i1 %18, !dbg !15226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15227 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15244, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15245, metadata !DIExpression()), !dbg !15259
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15260
  br i1 %4, label %5, label %6, !dbg !15263

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15264
  unreachable, !dbg !15264

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15266
  %8 = load i32, i32* %7, align 4, !dbg !15267
  %9 = add nsw i32 %8, 1, !dbg !15267
  store i32 %9, i32* %7, align 4, !dbg !15267
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15268
  store i32 %8, i32* %10, align 8, !dbg !15269
  %11 = load i32, i32* %7, align 4, !dbg !15270
  %12 = icmp eq i32 %11, 0, !dbg !15271
  br i1 %12, label %13, label %35, !dbg !15272

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15273
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15273
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15247, metadata !DIExpression()), !dbg !15273
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15273
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15273
  %17 = load i32, i32* %16, align 4, !dbg !15273
  %18 = shl i32 %17, 2, !dbg !15273
  %19 = alloca i8, i32 %18, align 8, !dbg !15273
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15273
  store i8* %19, i8** %20, align 4, !dbg !15273
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15273
  %22 = alloca i8, i32 %17, align 8, !dbg !15273
  store i8* %22, i8** %21, align 4, !dbg !15273
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15273
  store i32 -1, i32* %23, align 4, !dbg !15273
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15274
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15256, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15246, metadata !DIExpression()), !dbg !15259
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15276
  br i1 %25, label %26, label %27, !dbg !15273

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15276
  br label %35, !dbg !15277

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15246, metadata !DIExpression()), !dbg !15259
  %29 = load i32, i32* %7, align 4, !dbg !15278
  %30 = add nsw i32 %29, 1, !dbg !15278
  store i32 %30, i32* %7, align 4, !dbg !15278
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15280
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15280
  store i32 %29, i32* %32, align 8, !dbg !15281
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15274
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15256, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15246, metadata !DIExpression()), !dbg !15259
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15276
  br i1 %34, label %26, label %27, !dbg !15273, !llvm.loop !15282

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15284
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15285
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !15286
  ret void, !dbg !15287
}

; Function Attrs: optsize
declare !dbg !15288 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15293 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15296 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15298, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15299, metadata !DIExpression()), !dbg !15300
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15301
  br i1 %3, label %4, label %5, !dbg !15304

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15305
  unreachable, !dbg !15305

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15307
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15308
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !15309
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15310
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15310
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15312
  br i1 %10, label %11, label %13, !dbg !15313

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15314
  store i32 0, i32* %12, align 4, !dbg !15316
  br label %13, !dbg !15317

13:                                               ; preds = %11, %5
  ret void, !dbg !15318
}

; Function Attrs: optsize
declare !dbg !15319 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15320 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15324, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15325, metadata !DIExpression()), !dbg !15327
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15328
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !15329
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15326, metadata !DIExpression()), !dbg !15327
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15325, metadata !DIExpression()), !dbg !15327
  ret %struct.k_thread* %4, !dbg !15330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15331 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15335, metadata !DIExpression()), !dbg !15336
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !15337
  ret %struct.rbnode* %2, !dbg !15338
}

; Function Attrs: optsize
declare !dbg !15339 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15342 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15352, metadata !DIExpression()), !dbg !15356
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15357
  %3 = load i32, i32* %2, align 4, !dbg !15357
  %4 = icmp eq i32 %3, 0, !dbg !15359
  br i1 %4, label %10, label %5, !dbg !15360

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15353, metadata !DIExpression()), !dbg !15356
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15361, !range !7510
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15362
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15354, metadata !DIExpression()), !dbg !15356
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !15363
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15355, metadata !DIExpression()), !dbg !15356
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15353, metadata !DIExpression()), !dbg !15356
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15356
  ret %struct.k_thread* %11, !dbg !15364
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15365 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15369, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 0, metadata !15370, metadata !DIExpression()), !dbg !15372
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15373
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15371, metadata !DIExpression()), !dbg !15372
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15374
  br i1 %3, label %8, label %4, !dbg !15375

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15376
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15378
  call void @llvm.dbg.value(metadata i32 1, metadata !15370, metadata !DIExpression()), !dbg !15372
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15373
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15371, metadata !DIExpression()), !dbg !15372
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15374
  br i1 %7, label %8, label %4, !dbg !15375, !llvm.loop !15379

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15372
  ret i32 %9, !dbg !15381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !15382 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15384, metadata !DIExpression()), !dbg !15385
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15386
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !15387
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15388
  ret %struct.k_thread* %4, !dbg !15389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !15390 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15399, metadata !DIExpression()), !dbg !15400
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15401
  tail call fastcc void @sys_dlist_init.277(%struct._dnode* noundef nonnull %2) #25, !dbg !15402
  ret void, !dbg !15403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.277(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15404 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15408, metadata !DIExpression()), !dbg !15409
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15410
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15411
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15412
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15413
  ret void, !dbg !15414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15415 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !15416
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !15417
  ret void, !dbg !15418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !15419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15424, metadata !DIExpression()), !dbg !15425
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15426
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15426
  %4 = load i8, i8* %3, align 2, !dbg !15426
  %5 = sext i8 %4 to i32, !dbg !15427
  ret i32 %5, !dbg !15428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15433, metadata !DIExpression()), !dbg !15436
  call void @llvm.dbg.value(metadata i32 %1, metadata !15434, metadata !DIExpression()), !dbg !15436
  %3 = add i32 %1, 16, !dbg !15437
  %4 = icmp ult i32 %3, 31, !dbg !15437
  br i1 %4, label %6, label %5, !dbg !15437

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15441
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.281, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !15441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15441
  unreachable, !dbg !15441

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15443, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %7, metadata !14415, metadata !DIExpression()) #23, !dbg !15448
  %8 = icmp eq i32 %7, 0, !dbg !15449
  br i1 %8, label %10, label %9, !dbg !15450

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15451
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15451
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15451
  unreachable, !dbg !15451

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15435, metadata !DIExpression()), !dbg !15436
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15453
  ret void, !dbg !15454
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15455 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !15456
  br i1 %1, label %8, label %2, !dbg !15457

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15458
  br i1 %3, label %8, label %4, !dbg !15459

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15460
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !15461
  %7 = xor i1 %6, true, !dbg !15459
  br label %8, !dbg !15459

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !15463 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15464, !range !6673
  %2 = icmp eq i8 %1, 0, !dbg !15464
  ret i1 %2, !dbg !15465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15466 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15469, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %1, metadata !14415, metadata !DIExpression()) #23, !dbg !15474
  %2 = icmp eq i32 %1, 0, !dbg !15475
  br i1 %2, label %4, label %3, !dbg !15476

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15477
  unreachable, !dbg !15477

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !15479
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15481, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15479
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15484
  br i1 %6, label %8, label %7, !dbg !15485

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15486
  unreachable, !dbg !15486

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15479
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15487
  call void @llvm.dbg.value(metadata i32 undef, metadata !15468, metadata !DIExpression()), !dbg !15488
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15489
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13877, metadata !DIExpression()) #23, !dbg !15492
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15494
  %11 = load i8, i8* %10, align 1, !dbg !15495
  %12 = and i8 %11, 127, !dbg !15495
  store i8 %12, i8* %10, align 1, !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13885, metadata !DIExpression()) #23, !dbg !15496
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !15498
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15499
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13894, metadata !DIExpression()) #23, !dbg !15500
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15502
  %15 = load i8, i8* %14, align 1, !dbg !15503
  %16 = or i8 %15, -128, !dbg !15503
  store i8 %16, i8* %14, align 1, !dbg !15503
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13901, metadata !DIExpression()) #23, !dbg !15504
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13908, metadata !DIExpression()) #23, !dbg !15506
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13914, metadata !DIExpression()) #23, !dbg !15506
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !15508
  br i1 %17, label %18, label %19, !dbg !15509

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !15510
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #24, !dbg !15510
  unreachable, !dbg !15510

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15511
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13915, metadata !DIExpression()) #23, !dbg !15506
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15512
  br i1 %21, label %32, label %22, !dbg !15511

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !13915, metadata !DIExpression()) #23, !dbg !15506
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15513
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13915, metadata !DIExpression()) #23, !dbg !15506
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !15514
  %26 = icmp sgt i32 %25, 0, !dbg !15515
  br i1 %26, label %27, label %29, !dbg !15516

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15517
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !15518
  br label %34, !dbg !15519

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !15512
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !13915, metadata !DIExpression()) #23, !dbg !15506
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15512
  br i1 %31, label %32, label %22, !dbg !15511, !llvm.loop !15520

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15522
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !15523
  br label %34, !dbg !15524

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15525
  call void @llvm.dbg.value(metadata i32 undef, metadata !14363, metadata !DIExpression()) #23, !dbg !15526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14368, metadata !DIExpression()) #23, !dbg !15526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14372, metadata !DIExpression()) #23, !dbg !15528
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15530
  br i1 %35, label %37, label %36, !dbg !15531

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !15532
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15532
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !15532
  unreachable, !dbg !15532

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %38, metadata !13697, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %38, metadata !13691, metadata !DIExpression()) #23, !dbg !15479
  call void @llvm.dbg.value(metadata i32 %38, metadata !15468, metadata !DIExpression()), !dbg !15488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14363, metadata !DIExpression()) #23, !dbg !15526
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !15533
  ret void, !dbg !15534
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15535 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15539, metadata !DIExpression()), !dbg !15542
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15543, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %3, metadata !14415, metadata !DIExpression()) #23, !dbg !15548
  %4 = icmp eq i32 %3, 0, !dbg !15549
  br i1 %4, label %6, label %5, !dbg !15550

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15551
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15551
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15551
  unreachable, !dbg !15551

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15553
  br i1 %7, label %8, label %10, !dbg !15555

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15556
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !15558
  br label %15, !dbg !15559

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15540, metadata !DIExpression()), !dbg !15542
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !15560
  %12 = sext i32 %11 to i64, !dbg !15560
  call void @llvm.dbg.value(metadata i64 %12, metadata !15540, metadata !DIExpression()), !dbg !15542
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !15561
  %14 = trunc i64 %13 to i32, !dbg !15561
  call void @llvm.dbg.value(metadata i32 %14, metadata !15541, metadata !DIExpression()), !dbg !15542
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15542
  ret i32 %16, !dbg !15562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15567, metadata !DIExpression()), !dbg !15568
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15569, !srcloc !15571
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !15572
  ret void, !dbg !15573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15574 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15578, metadata !DIExpression()), !dbg !15582
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15583, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %2, metadata !14415, metadata !DIExpression()) #23, !dbg !15588
  %3 = icmp eq i32 %2, 0, !dbg !15589
  br i1 %3, label %5, label %4, !dbg !15590

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15591
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15591
  unreachable, !dbg !15591

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15593
  br i1 %6, label %7, label %8, !dbg !15595

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #25, !dbg !15596
  br label %43, !dbg !15598

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15580, metadata !DIExpression()), !dbg !15582
  %9 = icmp sgt i64 %0, -3, !dbg !15599
  br i1 %9, label %10, label %14, !dbg !15601

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15602
  %12 = trunc i64 %0 to i32, !dbg !15604
  %13 = add i32 %11, %12, !dbg !15604
  call void @llvm.dbg.value(metadata i32 %13, metadata !15579, metadata !DIExpression()), !dbg !15582
  br label %17, !dbg !15605

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15606
  %16 = sub i32 -2, %15, !dbg !15606
  call void @llvm.dbg.value(metadata i32 %16, metadata !15579, metadata !DIExpression()), !dbg !15582
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15608
  call void @llvm.dbg.value(metadata i32 %18, metadata !15579, metadata !DIExpression()), !dbg !15582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !15609
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15611, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15609
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15614
  br i1 %20, label %22, label %21, !dbg !15615

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15616
  unreachable, !dbg !15616

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15609
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15617
  call void @llvm.dbg.value(metadata i32 undef, metadata !15581, metadata !DIExpression()), !dbg !15582
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15618
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15619
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !15620
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15621
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15622
  tail call fastcc void @z_add_thread_timeout.264(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !15622
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15623
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !15624
  call void @llvm.dbg.value(metadata i32 undef, metadata !14363, metadata !DIExpression()) #23, !dbg !15625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14368, metadata !DIExpression()) #23, !dbg !15625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14372, metadata !DIExpression()) #23, !dbg !15627
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15629
  br i1 %27, label %29, label %28, !dbg !15630

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !15631
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15631
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !15631
  unreachable, !dbg !15631

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15611
  call void @llvm.dbg.value(metadata i32 %30, metadata !13697, metadata !DIExpression()) #23, !dbg !15613
  call void @llvm.dbg.value(metadata i32 %30, metadata !13691, metadata !DIExpression()) #23, !dbg !15609
  call void @llvm.dbg.value(metadata i32 %30, metadata !15581, metadata !DIExpression()), !dbg !15582
  call void @llvm.dbg.value(metadata i32 undef, metadata !14363, metadata !DIExpression()) #23, !dbg !15625
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !15632
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15633
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !15633
  br i1 %33, label %34, label %35, !dbg !15636

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.256, i32 0, i32 0)) #24, !dbg !15637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15637
  unreachable, !dbg !15637

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15639
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15640
  %38 = zext i32 %37 to i64, !dbg !15640
  %39 = sub nsw i64 %36, %38, !dbg !15641
  call void @llvm.dbg.value(metadata i64 %39, metadata !15578, metadata !DIExpression()), !dbg !15582
  %40 = icmp sgt i64 %39, 0, !dbg !15642
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15642
  %42 = trunc i64 %41 to i32, !dbg !15642
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15582
  ret i32 %44, !dbg !15643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15644 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15646, metadata !DIExpression()), !dbg !15647
  call void @llvm.dbg.value(metadata i64 %0, metadata !13745, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i32 10000, metadata !13748, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i32 1000, metadata !13749, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i8 1, metadata !13750, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i1 false, metadata !13751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15648
  call void @llvm.dbg.value(metadata i1 false, metadata !13752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15648
  call void @llvm.dbg.value(metadata i8 0, metadata !13753, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i1 false, metadata !13754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15648
  call void @llvm.dbg.value(metadata i1 true, metadata !13755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15648
  call void @llvm.dbg.value(metadata i64 0, metadata !13756, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i64 0, metadata !13756, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i64 %0, metadata !13745, metadata !DIExpression()), !dbg !15648
  %2 = udiv i64 %0, 10, !dbg !15650
  ret i64 %2, !dbg !15654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15655 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15656, !srcloc !15658
  tail call void @z_impl_k_yield() #25, !dbg !15659
  ret void, !dbg !15660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15665, metadata !DIExpression()), !dbg !15667
  %2 = sext i32 %0 to i64, !dbg !15668
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !15669
  call void @llvm.dbg.value(metadata i64 %3, metadata !15666, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15667
  %4 = shl i64 %3, 32, !dbg !15670
  %5 = ashr exact i64 %4, 32, !dbg !15670
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !15671
  call void @llvm.dbg.value(metadata i32 %6, metadata !15666, metadata !DIExpression()), !dbg !15667
  %7 = sext i32 %6 to i64, !dbg !15672
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !15673
  %9 = trunc i64 %8 to i32, !dbg !15673
  ret i32 %9, !dbg !15674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !15675 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15677, metadata !DIExpression()), !dbg !15678
  call void @llvm.dbg.value(metadata i64 %0, metadata !13745, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13748, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata i32 10000, metadata !13749, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata i8 1, metadata !13750, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata i1 false, metadata !13751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15679
  call void @llvm.dbg.value(metadata i1 true, metadata !13752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15679
  call void @llvm.dbg.value(metadata i8 0, metadata !13753, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata i1 false, metadata !13754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15679
  call void @llvm.dbg.value(metadata i1 true, metadata !13755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15679
  call void @llvm.dbg.value(metadata i64 0, metadata !13756, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata i64 0, metadata !13756, metadata !DIExpression()), !dbg !15679
  %2 = add i64 %0, 99, !dbg !15681
  call void @llvm.dbg.value(metadata i64 %2, metadata !13745, metadata !DIExpression()), !dbg !15679
  %3 = udiv i64 %2, 100, !dbg !15682
  ret i64 %3, !dbg !15683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15684 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15686, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.value(metadata i64 %0, metadata !13745, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i32 10000, metadata !13748, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13749, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i8 1, metadata !13750, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i1 false, metadata !13751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15688
  call void @llvm.dbg.value(metadata i1 false, metadata !13752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15688
  call void @llvm.dbg.value(metadata i8 0, metadata !13753, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i1 true, metadata !13754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15688
  call void @llvm.dbg.value(metadata i1 false, metadata !13755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15688
  call void @llvm.dbg.value(metadata i64 0, metadata !13756, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i64 0, metadata !13756, metadata !DIExpression()), !dbg !15688
  %2 = mul i64 %0, 100, !dbg !15690
  ret i64 %2, !dbg !15692
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15693 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15695, metadata !DIExpression()), !dbg !15696
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !15697
  br i1 %2, label %14, label %3, !dbg !15699

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15700
  %5 = icmp slt i32 %4, 0, !dbg !15702
  br i1 %5, label %6, label %10, !dbg !15703

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15704
  %8 = load i8, i8* %7, align 1, !dbg !15704
  %9 = icmp eq i8 %8, 16, !dbg !15707
  br i1 %9, label %10, label %14, !dbg !15708

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15709
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15710
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15711, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %11, metadata !14415, metadata !DIExpression()) #23, !dbg !15715
  %12 = icmp eq i32 %11, 0, !dbg !15716
  br i1 %12, label %13, label %14, !dbg !15717

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15718
  br label %14, !dbg !15720

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15722 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15724, metadata !DIExpression()), !dbg !15725
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15726
  %3 = load i8, i8* %2, align 1, !dbg !15726
  %4 = and i8 %3, 2, !dbg !15727
  %5 = icmp ne i8 %4, 0, !dbg !15728
  ret i1 %5, !dbg !15729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !15730 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15735
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15734, metadata !DIExpression()), !dbg !15736
  ret %struct.k_thread* %1, !dbg !15737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15738 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15739, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %1, metadata !14415, metadata !DIExpression()) #23, !dbg !15742
  %2 = icmp eq i32 %1, 0, !dbg !15743
  br i1 %2, label %3, label %8, !dbg !15744

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15745
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !15746
  %6 = icmp ne i32 %5, 0, !dbg !15744
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15750, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !15753
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15755, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15757
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !15757
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15753
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15758
  br i1 %3, label %5, label %4, !dbg !15759

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15760
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15760
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15760
  unreachable, !dbg !15760

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15755
  call void @llvm.dbg.value(metadata i32 %6, metadata !13697, metadata !DIExpression()) #23, !dbg !15757
  call void @llvm.dbg.value(metadata i32 %6, metadata !13691, metadata !DIExpression()) #23, !dbg !15753
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15761
  call void @llvm.dbg.value(metadata i32 %6, metadata !15751, metadata !DIExpression()), !dbg !15752
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15762
  %8 = load i8, i8* %7, align 4, !dbg !15762
  %9 = and i8 %8, 1, !dbg !15764
  %10 = icmp eq i8 %9, 0, !dbg !15765
  br i1 %10, label %15, label %11, !dbg !15766

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !15767
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15770
  br i1 %12, label %14, label %13, !dbg !15771

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15772
  unreachable, !dbg !15772

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13719, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata i32 %6, metadata !13733, metadata !DIExpression()) #23, !dbg !15773
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15775, !srcloc !13739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.290, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !15776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15776
  unreachable, !dbg !15776

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15780
  %17 = load i8, i8* %16, align 1, !dbg !15780
  %18 = and i8 %17, 8, !dbg !15782
  %19 = icmp eq i8 %18, 0, !dbg !15783
  br i1 %19, label %24, label %20, !dbg !15784

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !15785
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15788
  br i1 %21, label %23, label %22, !dbg !15789

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15790
  unreachable, !dbg !15790

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13719, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata i32 %6, metadata !13733, metadata !DIExpression()) #23, !dbg !15791
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15793, !srcloc !13739
  br label %39, !dbg !15794

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !15795
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15796
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15798
  br i1 %26, label %27, label %35, !dbg !15799

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15800, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %28, metadata !14415, metadata !DIExpression()) #23, !dbg !15803
  %29 = icmp eq i32 %28, 0, !dbg !15804
  br i1 %29, label %30, label %35, !dbg !15805

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14363, metadata !DIExpression()) #23, !dbg !15806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14368, metadata !DIExpression()) #23, !dbg !15806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14372, metadata !DIExpression()) #23, !dbg !15809
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15811
  br i1 %31, label %33, label %32, !dbg !15812

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !15813
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15813
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !15813
  unreachable, !dbg !15813

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14363, metadata !DIExpression()) #23, !dbg !15806
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !15814
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.291, i32 0, i32 0)) #24, !dbg !15815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15815
  unreachable, !dbg !15815

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !15819
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15821
  br i1 %36, label %38, label %37, !dbg !15822

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15823
  unreachable, !dbg !15823

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13719, metadata !DIExpression()) #23, !dbg !15819
  call void @llvm.dbg.value(metadata i32 %6, metadata !13733, metadata !DIExpression()) #23, !dbg !15824
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15826, !srcloc !13739
  br label %39, !dbg !15827

39:                                               ; preds = %38, %23
  ret void, !dbg !15827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15828 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15830, metadata !DIExpression()), !dbg !15831
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15832
  %3 = load i8, i8* %2, align 1, !dbg !15832
  %4 = and i8 %3, 8, !dbg !15834
  %5 = icmp eq i8 %4, 0, !dbg !15835
  br i1 %5, label %6, label %20, !dbg !15836

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15837
  %8 = or i8 %7, 8, !dbg !15837
  store i8 %8, i8* %2, align 1, !dbg !15837
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !15839
  br i1 %9, label %10, label %12, !dbg !15841

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13877, metadata !DIExpression()) #23, !dbg !15842
  %11 = and i8 %8, 95, !dbg !15845
  store i8 %11, i8* %2, align 1, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13885, metadata !DIExpression()) #23, !dbg !15846
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !15848
  br label %12, !dbg !15849

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15850
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !15850
  %15 = icmp eq %union.anon* %14, null, !dbg !15852
  br i1 %15, label %17, label %16, !dbg !15853

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15854
  br label %17, !dbg !15856

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15857
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15858
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !15859
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15860
  br label %20, !dbg !15861

20:                                               ; preds = %17, %1
  ret void, !dbg !15862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !15863 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15867, metadata !DIExpression()), !dbg !15869
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15870
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15868, metadata !DIExpression()), !dbg !15869
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15871
  br i1 %3, label %10, label %4, !dbg !15872

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15873
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15875
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15876, metadata !DIExpression()), !dbg !15882
  call void @llvm.dbg.value(metadata i32 0, metadata !15881, metadata !DIExpression()), !dbg !15882
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !15884
  store i32 0, i32* %7, align 4, !dbg !15885
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15886
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15870
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15868, metadata !DIExpression()), !dbg !15869
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15871
  br i1 %9, label %10, label %4, !dbg !15872, !llvm.loop !15887

10:                                               ; preds = %4, %1
  ret void, !dbg !15889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15890 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15895, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15894, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !15899
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15901, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15899
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15904
  br i1 %4, label %6, label %5, !dbg !15905

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15906
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15906
  unreachable, !dbg !15906

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %7, metadata !13697, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata i32 %7, metadata !13691, metadata !DIExpression()) #23, !dbg !15899
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15907
  call void @llvm.dbg.value(metadata i32 %7, metadata !15896, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i32 0, metadata !15897, metadata !DIExpression()), !dbg !15898
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15908
  %9 = load i8, i8* %8, align 1, !dbg !15908
  %10 = and i8 %9, 8, !dbg !15910
  %11 = icmp eq i8 %10, 0, !dbg !15911
  br i1 %11, label %12, label %35, !dbg !15912

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !15895, metadata !DIExpression()), !dbg !15898
  %14 = icmp eq i64 %13, 0, !dbg !15913
  br i1 %14, label %35, label %15, !dbg !15915

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15916
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15918
  br i1 %17, label %35, label %18, !dbg !15919

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15920
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !15920
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !15921
  %22 = icmp eq %union.anon* %20, %21, !dbg !15922
  br i1 %22, label %35, label %23, !dbg !15923

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15924, !srcloc !14419
  call void @llvm.dbg.value(metadata i32 %24, metadata !14415, metadata !DIExpression()) #23, !dbg !15930
  %25 = icmp eq i32 %24, 0, !dbg !15931
  br i1 %25, label %27, label %26, !dbg !15932

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1809) #24, !dbg !15933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.292, i32 0, i32 0)) #24, !dbg !15933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1809) #24, !dbg !15933
  unreachable, !dbg !15933

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15935
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15936
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #25, !dbg !15937
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15938
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !14363, metadata !DIExpression()) #23, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14368, metadata !DIExpression()) #23, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14372, metadata !DIExpression()) #23, !dbg !15942
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15944
  br i1 %31, label %33, label %32, !dbg !15945

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !15946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #24, !dbg !15946
  unreachable, !dbg !15946

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14363, metadata !DIExpression()) #23, !dbg !15940
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !15947
  call void @llvm.dbg.value(metadata i32 %34, metadata !15897, metadata !DIExpression()), !dbg !15898
  br label %40, !dbg !15948

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !15949
  call void @llvm.dbg.value(metadata i32 %36, metadata !15897, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15950
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !15950
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15952
  br i1 %37, label %39, label %38, !dbg !15953

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !15954
  unreachable, !dbg !15954

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13719, metadata !DIExpression()) #23, !dbg !15950
  call void @llvm.dbg.value(metadata i32 %7, metadata !13733, metadata !DIExpression()) #23, !dbg !15955
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15957, !srcloc !13739
  br label %40, !dbg !15958

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !15898
  ret i32 %41, !dbg !15959
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15960 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15964, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 %1, metadata !15965, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i8* %2, metadata !15966, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i8 0, metadata !15968, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 0, metadata !15969, metadata !DIExpression()), !dbg !15973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13685, metadata !DIExpression()) #23, !dbg !15974
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15976, !srcloc !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15974
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15979
  br i1 %5, label %7, label %6, !dbg !15980

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #24, !dbg !15981
  unreachable, !dbg !15981

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13691, metadata !DIExpression()) #23, !dbg !15974
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15971, metadata !DIExpression()), !dbg !15973
  call void @llvm.dbg.value(metadata i8 poison, metadata !15968, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()), !dbg !15973
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !15983
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15967, metadata !DIExpression()), !dbg !15972
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15986
  br i1 %10, label %15, label %11, !dbg !15988

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15989, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 %1, metadata !15995, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i8* %2, metadata !15996, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15876, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i32 %1, metadata !15881, metadata !DIExpression()), !dbg !16000
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16002
  store i32 %1, i32* %12, align 4, !dbg !16003
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16004
  store i8* %2, i8** %13, align 4, !dbg !16005
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16006
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16007
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !16008
  call void @llvm.dbg.value(metadata i8 1, metadata !15968, metadata !DIExpression()), !dbg !15972
  br label %15, !dbg !16009

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !15968, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !16010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13724, metadata !DIExpression()) #23, !dbg !16010
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16012
  br i1 %16, label %18, label %17, !dbg !16013

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !16014
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16014
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #24, !dbg !16014
  unreachable, !dbg !16014

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !15972
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !15976
  call void @llvm.dbg.value(metadata i32 %20, metadata !13697, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata i32 %20, metadata !13691, metadata !DIExpression()) #23, !dbg !15974
  call void @llvm.dbg.value(metadata i32 %20, metadata !15971, metadata !DIExpression()), !dbg !15973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !16010
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !16015
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16017, !srcloc !13739
  call void @llvm.dbg.value(metadata i8 poison, metadata !15968, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()), !dbg !15973
  ret i1 %19, !dbg !16018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16019 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16025, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i64 undef, metadata !16027, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16024, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16026, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i8** %4, metadata !16028, metadata !DIExpression()), !dbg !16030
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !16031
  call void @llvm.dbg.value(metadata i32 %6, metadata !16029, metadata !DIExpression()), !dbg !16030
  %7 = icmp eq i8** %4, null, !dbg !16032
  br i1 %7, label %12, label %8, !dbg !16034

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16035
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16037
  %11 = load i8*, i8** %10, align 4, !dbg !16037
  store i8* %11, i8** %4, align 4, !dbg !16038
  br label %12, !dbg !16039

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16041 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !16043
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !16044
  ret void, !dbg !16045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16046 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16056, metadata !DIExpression()), !dbg !16073
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16054, metadata !DIExpression()), !dbg !16073
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16055, metadata !DIExpression()), !dbg !16073
  %5 = icmp eq i64 %4, -1, !dbg !16074
  br i1 %5, label %63, label %6, !dbg !16076

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16077
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.297(%struct._dnode* noundef %7) #25, !dbg !16077
  br i1 %8, label %9, label %10, !dbg !16080

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 99) #24, !dbg !16081
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.301, i32 0, i32 0)) #24, !dbg !16081
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 99) #24, !dbg !16081
  unreachable, !dbg !16081

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16083
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16084
  call void @llvm.dbg.value(metadata i32 0, metadata !16057, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16093
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16095, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16102
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16102
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16093
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16103
  br i1 %13, label %15, label %14, !dbg !16106

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16107
  unreachable, !dbg !16107

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16095
  call void @llvm.dbg.value(metadata i32 %16, metadata !16098, metadata !DIExpression()) #23, !dbg !16102
  call void @llvm.dbg.value(metadata i32 %16, metadata !16092, metadata !DIExpression()) #23, !dbg !16093
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16109
  call void @llvm.dbg.value(metadata i32 %16, metadata !16063, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16085
  %17 = icmp slt i64 %4, -1, !dbg !16110
  br i1 %17, label %18, label %24, !dbg !16111

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16112
  %20 = add i64 %4, %19, !dbg !16113
  %21 = sub i64 -2, %20, !dbg !16113
  call void @llvm.dbg.value(metadata i64 %21, metadata !16067, metadata !DIExpression()), !dbg !16114
  %22 = icmp sgt i64 %21, 1, !dbg !16115
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16115
  br label %29, !dbg !16116

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16117
  %26 = tail call fastcc i32 @elapsed.305() #25, !dbg !16119
  %27 = sext i32 %26 to i64, !dbg !16119
  %28 = add nsw i64 %25, %27, !dbg !16120
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16121
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16122
  store i64 %30, i64* %31, align 8, !dbg !16123
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !16124
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16064, metadata !DIExpression()), !dbg !16126
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16127
  br i1 %33, label %48, label %34, !dbg !16127

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16128
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16064, metadata !DIExpression()), !dbg !16126
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16132
  %38 = load i64, i64* %37, align 8, !dbg !16132
  %39 = icmp slt i64 %35, %38, !dbg !16133
  br i1 %39, label %40, label %44, !dbg !16134

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16132
  %42 = sub nsw i64 %38, %35, !dbg !16135
  store i64 %42, i64* %41, align 8, !dbg !16135
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16137
  tail call fastcc void @sys_dlist_insert.306(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !16138
  br label %49, !dbg !16139

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16140
  store i64 %45, i64* %31, align 8, !dbg !16140
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !16141
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16064, metadata !DIExpression()), !dbg !16126
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16127
  br i1 %47, label %48, label %34, !dbg !16127, !llvm.loop !16142

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.307(%struct._dnode* noundef nonnull %7) #25, !dbg !16144
  br label %49, !dbg !16147

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !16148
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16149
  br i1 %51, label %52, label %59, !dbg !16150

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !16151
  call void @llvm.dbg.value(metadata i32 %53, metadata !16070, metadata !DIExpression()), !dbg !16152
  %54 = icmp ne i32 %53, 0, !dbg !16153
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16155
  br i1 %57, label %59, label %58, !dbg !16155

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !16156
  br label %59, !dbg !16158

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16165
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16167
  br i1 %60, label %62, label %61, !dbg !16170

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16171
  unreachable, !dbg !16171

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16159, metadata !DIExpression()) #23, !dbg !16165
  call void @llvm.dbg.value(metadata i32 %16, metadata !16173, metadata !DIExpression()) #23, !dbg !16176
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16178, !srcloc !16179
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16085
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.297(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16181 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16187, metadata !DIExpression()), !dbg !16188
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16189
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16189
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16190
  ret i1 %4, !dbg !16191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.305() unnamed_addr #1 !dbg !16192 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16195
  %2 = icmp eq i32 %1, 0, !dbg !16196
  br i1 %2, label %3, label %5, !dbg !16195

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !16197
  br label %5, !dbg !16195

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16195
  ret i32 %6, !dbg !16198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16199 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312() #25, !dbg !16205
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16203, metadata !DIExpression()), !dbg !16206
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16207
  ret %struct._timeout* %2, !dbg !16208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.306(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16209 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16213, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16214, metadata !DIExpression()), !dbg !16217
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16218
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16218
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16215, metadata !DIExpression()), !dbg !16217
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16219
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16220
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16221
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16222
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16223
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16224
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16225
  ret void, !dbg !16226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16227 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16231, metadata !DIExpression()), !dbg !16233
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16234
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.310(%struct._dnode* noundef %2) #25, !dbg !16235
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16232, metadata !DIExpression()), !dbg !16233
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16236
  ret %struct._timeout* %4, !dbg !16237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.307(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16238 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16243, metadata !DIExpression()), !dbg !16246
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16244, metadata !DIExpression()), !dbg !16246
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16247
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16245, metadata !DIExpression()), !dbg !16246
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16248
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16249
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16250
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16251
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16252
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16253
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16254
  ret void, !dbg !16255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16256 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16261
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16258, metadata !DIExpression()), !dbg !16262
  %2 = tail call fastcc i32 @elapsed.305() #25, !dbg !16263
  call void @llvm.dbg.value(metadata i32 %2, metadata !16259, metadata !DIExpression()), !dbg !16262
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16264
  br i1 %3, label %14, label %4, !dbg !16266

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16267
  %6 = load i64, i64* %5, align 8, !dbg !16267
  %7 = sext i32 %2 to i64, !dbg !16268
  %8 = sub nsw i64 %6, %7, !dbg !16269
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16270
  br i1 %9, label %14, label %10, !dbg !16271

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16272
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16272
  %13 = trunc i64 %12 to i32, !dbg !16272
  call void @llvm.dbg.value(metadata i32 %13, metadata !16260, metadata !DIExpression()), !dbg !16262
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16274
  call void @llvm.dbg.value(metadata i32 %15, metadata !16260, metadata !DIExpression()), !dbg !16262
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16275
  %17 = icmp ne i32 %16, 0, !dbg !16277
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16278
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16278
  call void @llvm.dbg.value(metadata i32 %20, metadata !16260, metadata !DIExpression()), !dbg !16262
  ret i32 %20, !dbg !16279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.310(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16280 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16284, metadata !DIExpression()), !dbg !16286
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16285, metadata !DIExpression()), !dbg !16286
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16287
  br i1 %2, label %5, label %3, !dbg !16288

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.311(%struct._dnode* noundef nonnull %0) #25, !dbg !16289
  br label %5, !dbg !16288

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16288
  ret %struct._dnode* %6, !dbg !16290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.311(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16291 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16293, metadata !DIExpression()), !dbg !16295
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16294, metadata !DIExpression()), !dbg !16295
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16296
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16297
  br i1 %3, label %7, label %4, !dbg !16298

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16299
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16299
  br label %7, !dbg !16298

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16298
  ret %struct._dnode* %8, !dbg !16300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.312() unnamed_addr #10 !dbg !16301 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16305, metadata !DIExpression()), !dbg !16306
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.313() #25, !dbg !16307
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16307
  ret %struct._dnode* %3, !dbg !16308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.313() unnamed_addr #10 !dbg !16309 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16313, metadata !DIExpression()), !dbg !16314
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16315
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16316
  ret i1 %2, !dbg !16317
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16318 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16322, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 -22, metadata !16323, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 0, metadata !16324, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16329
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16331, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16329
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16334
  br i1 %3, label %5, label %4, !dbg !16335

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16336
  unreachable, !dbg !16336

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16329
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16337
  call void @llvm.dbg.value(metadata i32 undef, metadata !16326, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata i32 -22, metadata !16323, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()), !dbg !16328
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16323, metadata !DIExpression()), !dbg !16327
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.297(%struct._dnode* noundef %6) #25, !dbg !16338
  br i1 %7, label %8, label %9, !dbg !16342

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !16343
  call void @llvm.dbg.value(metadata i32 0, metadata !16323, metadata !DIExpression()), !dbg !16327
  br label %9, !dbg !16345

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16327
  call void @llvm.dbg.value(metadata i32 %10, metadata !16323, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16346
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16348
  br i1 %11, label %13, label %12, !dbg !16349

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16350
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16350
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16350
  unreachable, !dbg !16350

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16331
  call void @llvm.dbg.value(metadata i32 %14, metadata !16098, metadata !DIExpression()) #23, !dbg !16333
  call void @llvm.dbg.value(metadata i32 %14, metadata !16092, metadata !DIExpression()) #23, !dbg !16329
  call void @llvm.dbg.value(metadata i32 %14, metadata !16326, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16346
  call void @llvm.dbg.value(metadata i32 undef, metadata !16173, metadata !DIExpression()) #23, !dbg !16351
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16353, !srcloc !16179
  call void @llvm.dbg.value(metadata i32 %10, metadata !16323, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()), !dbg !16328
  ret i32 %10, !dbg !16354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !16355 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16357, metadata !DIExpression()), !dbg !16358
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !16359
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16361
  br i1 %3, label %10, label %4, !dbg !16362

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16363
  %6 = load i64, i64* %5, align 8, !dbg !16363
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16365
  %8 = load i64, i64* %7, align 8, !dbg !16366
  %9 = add nsw i64 %8, %6, !dbg !16366
  store i64 %9, i64* %7, align 8, !dbg !16366
  br label %10, !dbg !16367

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16368
  tail call fastcc void @sys_dlist_remove.316(%struct._dnode* noundef %11) #25, !dbg !16369
  ret void, !dbg !16370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.316(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16371 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16375, metadata !DIExpression()), !dbg !16378
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16379
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16379
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16376, metadata !DIExpression()), !dbg !16378
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16380
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16380
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16377, metadata !DIExpression()), !dbg !16378
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16381
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16382
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16383
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16384
  tail call fastcc void @sys_dnode_init.317(%struct._dnode* noundef %0) #25, !dbg !16385
  ret void, !dbg !16386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.317(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16387 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16389, metadata !DIExpression()), !dbg !16390
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16391
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16392
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16393
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16394
  ret void, !dbg !16395
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16396 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16402, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i64 0, metadata !16403, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 0, metadata !16404, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16409
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16411, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16409
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16414
  br i1 %3, label %5, label %4, !dbg !16415

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16416
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16416
  unreachable, !dbg !16416

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16409
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16406, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata i64 0, metadata !16403, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16404, metadata !DIExpression()), !dbg !16408
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16418
  call void @llvm.dbg.value(metadata i64 %6, metadata !16403, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16421
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16423
  br i1 %7, label %9, label %8, !dbg !16424

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16425
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16425
  unreachable, !dbg !16425

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16411
  call void @llvm.dbg.value(metadata i32 %10, metadata !16098, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 %10, metadata !16092, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata i32 %10, metadata !16406, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16173, metadata !DIExpression()) #23, !dbg !16426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16428, !srcloc !16179
  call void @llvm.dbg.value(metadata i64 %6, metadata !16403, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16404, metadata !DIExpression()), !dbg !16408
  ret i64 %6, !dbg !16429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16430 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16432, metadata !DIExpression()), !dbg !16436
  call void @llvm.dbg.value(metadata i64 0, metadata !16433, metadata !DIExpression()), !dbg !16436
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.318(%struct._timeout* noundef %0) #25, !dbg !16437
  br i1 %2, label %21, label %3, !dbg !16439

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !16440
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16434, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i64 0, metadata !16433, metadata !DIExpression()), !dbg !16436
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16442
  br i1 %5, label %16, label %6, !dbg !16444

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16434, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i64 %8, metadata !16433, metadata !DIExpression()), !dbg !16436
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16445
  %10 = load i64, i64* %9, align 8, !dbg !16445
  %11 = add nsw i64 %10, %8, !dbg !16447
  call void @llvm.dbg.value(metadata i64 %11, metadata !16433, metadata !DIExpression()), !dbg !16436
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16448
  br i1 %12, label %16, label %13, !dbg !16450

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !16451
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16434, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i64 %11, metadata !16433, metadata !DIExpression()), !dbg !16436
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16442
  br i1 %15, label %16, label %6, !dbg !16444, !llvm.loop !16452

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16436
  call void @llvm.dbg.value(metadata i64 %17, metadata !16433, metadata !DIExpression()), !dbg !16436
  %18 = tail call fastcc i32 @elapsed.305() #25, !dbg !16454
  %19 = sext i32 %18 to i64, !dbg !16454
  %20 = sub nsw i64 %17, %19, !dbg !16455
  br label %21, !dbg !16456

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16436
  ret i64 %22, !dbg !16457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.318(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16458 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16462, metadata !DIExpression()), !dbg !16463
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16464
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.297(%struct._dnode* noundef %2) #25, !dbg !16465
  %4 = xor i1 %3, true, !dbg !16466
  ret i1 %4, !dbg !16467
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16468 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16470, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata i64 0, metadata !16471, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata i32 0, metadata !16472, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16477
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16479, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16481
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16481
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16477
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16482
  br i1 %3, label %5, label %4, !dbg !16483

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16484
  unreachable, !dbg !16484

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16481
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16477
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16485
  call void @llvm.dbg.value(metadata i32 undef, metadata !16474, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata i64 0, metadata !16471, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !16472, metadata !DIExpression()), !dbg !16476
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16486
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16489
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16490
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16492
  br i1 %8, label %10, label %9, !dbg !16493

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16494
  unreachable, !dbg !16494

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16479
  call void @llvm.dbg.value(metadata i32 %11, metadata !16098, metadata !DIExpression()) #23, !dbg !16481
  call void @llvm.dbg.value(metadata i32 %11, metadata !16092, metadata !DIExpression()) #23, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %11, metadata !16474, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16173, metadata !DIExpression()) #23, !dbg !16495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16497, !srcloc !16179
  call void @llvm.dbg.value(metadata i32 undef, metadata !16472, metadata !DIExpression()), !dbg !16476
  %12 = add i64 %7, %6, !dbg !16498
  ret i64 %12, !dbg !16499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16500 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16502, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.value(metadata i32 0, metadata !16503, metadata !DIExpression()), !dbg !16507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16508
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16510, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16508
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16513
  br i1 %2, label %4, label %3, !dbg !16514

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16515
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16515
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16515
  unreachable, !dbg !16515

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16508
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16516
  call void @llvm.dbg.value(metadata i32 undef, metadata !16505, metadata !DIExpression()), !dbg !16507
  call void @llvm.dbg.value(metadata i32 -1, metadata !16502, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()), !dbg !16507
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !16517
  call void @llvm.dbg.value(metadata i32 %5, metadata !16502, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16520
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16522
  br i1 %6, label %8, label %7, !dbg !16523

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16524
  unreachable, !dbg !16524

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16510
  call void @llvm.dbg.value(metadata i32 %9, metadata !16098, metadata !DIExpression()) #23, !dbg !16512
  call void @llvm.dbg.value(metadata i32 %9, metadata !16092, metadata !DIExpression()) #23, !dbg !16508
  call void @llvm.dbg.value(metadata i32 %9, metadata !16505, metadata !DIExpression()), !dbg !16507
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16520
  call void @llvm.dbg.value(metadata i32 undef, metadata !16173, metadata !DIExpression()) #23, !dbg !16525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16527, !srcloc !16179
  call void @llvm.dbg.value(metadata i32 %5, metadata !16502, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()), !dbg !16507
  ret i32 %5, !dbg !16528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16531, metadata !DIExpression()), !dbg !16541
  call void @llvm.dbg.value(metadata i1 %1, metadata !16532, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16541
  call void @llvm.dbg.value(metadata i32 0, metadata !16533, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16543
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16545, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16547
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16547
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16543
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16548
  br i1 %4, label %6, label %5, !dbg !16549

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16550
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16550
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16550
  unreachable, !dbg !16550

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16547
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16543
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16551
  call void @llvm.dbg.value(metadata i32 undef, metadata !16535, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()), !dbg !16542
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !16552
  call void @llvm.dbg.value(metadata i32 %7, metadata !16536, metadata !DIExpression()), !dbg !16553
  call void @llvm.dbg.value(metadata i1 undef, metadata !16539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16553
  %8 = icmp slt i32 %7, 2, !dbg !16554
  call void @llvm.dbg.value(metadata i1 %8, metadata !16540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16553
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16555
  call void @llvm.dbg.value(metadata i1 %9, metadata !16539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16553
  br i1 %10, label %14, label %11, !dbg !16555

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16557
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16557
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !16559
  br label %14, !dbg !16560

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16561
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16563
  br i1 %15, label %17, label %16, !dbg !16564

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16565
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16565
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16565
  unreachable, !dbg !16565

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16545
  call void @llvm.dbg.value(metadata i32 %18, metadata !16098, metadata !DIExpression()) #23, !dbg !16547
  call void @llvm.dbg.value(metadata i32 %18, metadata !16092, metadata !DIExpression()) #23, !dbg !16543
  call void @llvm.dbg.value(metadata i32 %18, metadata !16535, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16561
  call void @llvm.dbg.value(metadata i32 undef, metadata !16173, metadata !DIExpression()) #23, !dbg !16566
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16568, !srcloc !16179
  call void @llvm.dbg.value(metadata i32 1, metadata !16533, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()), !dbg !16542
  ret void, !dbg !16569
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16574, metadata !DIExpression()), !dbg !16579
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !16580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16581
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16583, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16585
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16585
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16581
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16586
  br i1 %3, label %5, label %4, !dbg !16587

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16588
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16588
  unreachable, !dbg !16588

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16585
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16581
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16589
  call void @llvm.dbg.value(metadata i32 undef, metadata !16575, metadata !DIExpression()), !dbg !16579
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !16575, metadata !DIExpression()), !dbg !16579
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !16590
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16591
  br i1 %7, label %37, label %8, !dbg !16592

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16579
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16593
  %14 = load i64, i64* %13, align 8, !dbg !16593
  %15 = sext i32 %11 to i64, !dbg !16594
  %16 = icmp sgt i64 %14, %15, !dbg !16595
  br i1 %16, label %35, label %17, !dbg !16596

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16576, metadata !DIExpression()), !dbg !16597
  %18 = trunc i64 %14 to i32, !dbg !16598
  call void @llvm.dbg.value(metadata i32 %18, metadata !16578, metadata !DIExpression()), !dbg !16597
  %19 = sext i32 %18 to i64, !dbg !16599
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16600
  %21 = add i64 %20, %19, !dbg !16600
  store i64 %21, i64* @curr_tick, align 8, !dbg !16600
  store i64 0, i64* %13, align 8, !dbg !16601
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16603
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16605
  br i1 %22, label %24, label %23, !dbg !16606

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16607
  unreachable, !dbg !16607

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16159, metadata !DIExpression()) #23, !dbg !16603
  call void @llvm.dbg.value(metadata i32 %12, metadata !16173, metadata !DIExpression()) #23, !dbg !16608
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16610, !srcloc !16179
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16611
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16611
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !16612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16613
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16615, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16617
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16617
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16613
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16618
  br i1 %28, label %30, label %29, !dbg !16619

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16620
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16620
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16620
  unreachable, !dbg !16620

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16617
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16613
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !16575, metadata !DIExpression()), !dbg !16579
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16622
  %32 = sub nsw i32 %31, %18, !dbg !16622
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !16575, metadata !DIExpression()), !dbg !16579
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !16590
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16591
  br i1 %34, label %37, label %8, !dbg !16592, !llvm.loop !16623

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16625
  store i64 %36, i64* %13, align 8, !dbg !16625
  br label %41, !dbg !16628

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16579
  %40 = sext i32 %39 to i64, !dbg !16629
  br label %41, !dbg !16629

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16629
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16630
  %45 = add i64 %44, %42, !dbg !16630
  store i64 %45, i64* @curr_tick, align 8, !dbg !16630
  store i32 0, i32* @announce_remaining, align 4, !dbg !16631
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !16632
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16634
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16636
  br i1 %47, label %49, label %48, !dbg !16637

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16638
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16638
  unreachable, !dbg !16638

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16579
  call void @llvm.dbg.value(metadata i32 %50, metadata !16159, metadata !DIExpression()) #23, !dbg !16634
  call void @llvm.dbg.value(metadata i32 %50, metadata !16173, metadata !DIExpression()) #23, !dbg !16639
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !16641, !srcloc !16179
  ret void, !dbg !16642
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16643 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16647, metadata !DIExpression()), !dbg !16651
  call void @llvm.dbg.value(metadata i32 0, metadata !16648, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16086, metadata !DIExpression()) #23, !dbg !16653
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16655, !srcloc !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16657
  call void @llvm.dbg.value(metadata i32 undef, metadata !16099, metadata !DIExpression()) #23, !dbg !16657
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16653
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16658
  br i1 %2, label %4, label %3, !dbg !16659

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #24, !dbg !16660
  unreachable, !dbg !16660

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()) #23, !dbg !16657
  call void @llvm.dbg.value(metadata i32 undef, metadata !16092, metadata !DIExpression()) #23, !dbg !16653
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16661
  call void @llvm.dbg.value(metadata i32 undef, metadata !16650, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i64 0, metadata !16647, metadata !DIExpression()), !dbg !16651
  call void @llvm.dbg.value(metadata i32 undef, metadata !16648, metadata !DIExpression()), !dbg !16652
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16662
  %6 = tail call fastcc i32 @elapsed.305() #25, !dbg !16665
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16647, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16651
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16164, metadata !DIExpression()) #23, !dbg !16666
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16668
  br i1 %7, label %9, label %8, !dbg !16669

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16670
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16670
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #24, !dbg !16670
  unreachable, !dbg !16670

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16655
  call void @llvm.dbg.value(metadata i32 %10, metadata !16098, metadata !DIExpression()) #23, !dbg !16657
  call void @llvm.dbg.value(metadata i32 %10, metadata !16092, metadata !DIExpression()) #23, !dbg !16653
  call void @llvm.dbg.value(metadata i32 %10, metadata !16650, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16647, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16651
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16647, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16651
  call void @llvm.dbg.value(metadata i32 undef, metadata !16159, metadata !DIExpression()) #23, !dbg !16666
  call void @llvm.dbg.value(metadata i32 undef, metadata !16173, metadata !DIExpression()) #23, !dbg !16671
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16673, !srcloc !16179
  call void @llvm.dbg.value(metadata i32 undef, metadata !16648, metadata !DIExpression()), !dbg !16652
  %11 = sext i32 %6 to i64, !dbg !16665
  %12 = add i64 %5, %11, !dbg !16674
  ret i64 %12, !dbg !16675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16676 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16677
  %2 = trunc i64 %1 to i32, !dbg !16678
  ret i32 %2, !dbg !16679
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16680 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16681
  ret i64 %1, !dbg !16682
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16685, metadata !DIExpression()), !dbg !16692
  %2 = icmp eq i32 %0, 0, !dbg !16693
  br i1 %2, label %10, label %3, !dbg !16695

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.325() #25, !dbg !16696
  call void @llvm.dbg.value(metadata i32 %4, metadata !16686, metadata !DIExpression()), !dbg !16692
  %5 = mul i32 %0, 84, !dbg !16697
  call void @llvm.dbg.value(metadata i32 %5, metadata !16687, metadata !DIExpression()), !dbg !16692
  br label %6, !dbg !16698

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.325() #25, !dbg !16699
  call void @llvm.dbg.value(metadata i32 %7, metadata !16688, metadata !DIExpression()), !dbg !16700
  %8 = sub i32 %7, %4, !dbg !16701
  %9 = icmp ult i32 %8, %5, !dbg !16703
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.325() unnamed_addr #1 !dbg !16705 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.326() #25, !dbg !16706
  ret i32 %1, !dbg !16707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.326() unnamed_addr #1 !dbg !16708 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !16709
  ret i32 %1, !dbg !16710
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16711 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16715, metadata !DIExpression()), !dbg !16717
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16718

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !16719
  br label %14, !dbg !16723

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16716, metadata !DIExpression()), !dbg !16717
  %6 = icmp slt i64 %2, -1, !dbg !16724
  br i1 %6, label %7, label %9, !dbg !16727

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16728
  br label %14, !dbg !16729

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !16731
  %11 = icmp ugt i64 %2, 1, !dbg !16732
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16732
  %13 = add nsw i64 %10, %12, !dbg !16733
  br label %14, !dbg !16734

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16735
  ret i64 %15, !dbg !16736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16737 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.329, i32 0, i32 0)) #24, !dbg !16739
  ret void, !dbg !16740
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!792, !2, !2368, !27, !270, !295, !2370, !2372, !2406, !2408, !305, !356, !2410, !2413, !2424, !2470, !2472, !2500, !2528, !2571, !2643, !2688, !385, !528, !2716, !564, !2721, !574, !599, !824, !2724, !960, !1026, !1334, !1558, !2762, !1671, !1761, !2764, !2849, !2913, !1810, !2916, !1817, !2191, !2934, !2211, !2936, !2329, !2939}
!llvm.ident = !{!2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941, !2941}
!llvm.module.flags = !{!2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "tthread", scope: !27, file: !125, line: 29, type: !141, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !122, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !108, !113, !114, !118, !119, !120}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !104, line: 22, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !109, line: 46, baseType: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!111 = !DISubroutineType(types: !112)
!112 = !{null, !113, !113, !113}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !115, line: 46, baseType: !116)
!115 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !117)
!117 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !121)
!121 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!122 = !{!123, !25, !134, !139}
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "tstack", scope: !27, file: !125, line: 28, type: !126, isLocal: true, isDefinition: true, align: 512)
!125 = !DIFile(filename: "zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 573440, elements: !131)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !127, file: !128, line: 48, baseType: !107, size: 8)
!131 = !{!132, !133}
!132 = !DISubrange(count: 16)
!133 = !DISubrange(count: 4480)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "buffer", scope: !27, file: !125, line: 30, type: !136, isLocal: true, isDefinition: true)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 30848, elements: !137)
!137 = !{!132, !138}
!138 = !DISubrange(count: 241)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "counter", scope: !27, file: !125, line: 31, type: !103, isLocal: true, isDefinition: true)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 20480, elements: !267)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !214, !227, !228, !229, !233, !234, !242, !262}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !142, file: !143, line: 247, baseType: !146, size: 384)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !147)
!147 = !{!148, !176, !184, !187, !188, !201, !202, !203}
!148 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 60, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 60, size: 64, elements: !150)
!150 = !{!151, !167}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !149, file: !143, line: 61, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !155)
!155 = !{!156, !162}
!156 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 38, baseType: !157, size: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 38, size: 32, elements: !158)
!158 = !{!159, !161}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !157, file: !153, line: 39, baseType: !160, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !157, file: !153, line: 40, baseType: !160, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 42, baseType: !163, size: 32, offset: 32)
!163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 42, size: 32, elements: !164)
!164 = !{!165, !166}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !163, file: !153, line: 43, baseType: !160, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !163, file: !153, line: 44, baseType: !160, size: 32)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !149, file: !143, line: 62, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !170)
!169 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!170 = !{!171}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !168, file: !169, line: 50, baseType: !172, size: 64)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 64, elements: !174)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!174 = !{!175}
!175 = !DISubrange(count: 2)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !146, file: !143, line: 68, baseType: !177, size: 32, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !180)
!179 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !181)
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !180, file: !179, line: 232, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !154)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !146, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !146, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !143, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !143, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !143, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !143, line: 100, baseType: !199, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !200)
!200 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !146, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !146, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !146, file: !143, line: 131, baseType: !204, size: 192, offset: 192)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !205)
!205 = !{!206, !207, !213}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !204, file: !179, line: 245, baseType: !152, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !204, file: !179, line: 246, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DISubroutineType(types: !211)
!211 = !{null, !212}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !204, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !142, file: !143, line: 250, baseType: !215, size: 288, offset: 384)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225, !226}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !215, file: !216, line: 26, baseType: !118, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !215, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !215, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !215, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !215, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !215, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !215, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !215, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !215, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !142, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !142, file: !143, line: 256, baseType: !178, size: 64, offset: 704)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !142, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !142, file: !143, line: 300, baseType: !235, size: 96, offset: 1056)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !236)
!236 = !{!237, !238, !241}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !235, file: !143, line: 153, baseType: !22, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !235, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !240, line: 214, baseType: !32)
!240 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !235, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !142, file: !143, line: 325, baseType: !243, size: 32, offset: 1152)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !256, !257}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 5074, baseType: !248, size: 96)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251, !254, !255}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !248, file: !249, line: 57, baseType: !252, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !249, line: 57, flags: DIFlagFwdDecl)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !248, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !248, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !244, file: !245, line: 5075, baseType: !178, size: 64, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !244, file: !245, line: 5076, baseType: !258, size: 32, offset: 160)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !260)
!259 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !258, file: !259, line: 52, baseType: !22, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !142, file: !143, line: 343, baseType: !263, size: 64, offset: 1184)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !264)
!264 = !{!265, !266}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !263, file: !216, line: 63, baseType: !118, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !263, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!267 = !{!132}
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !270, file: !286, line: 18, type: !287, isLocal: false, isDefinition: true)
!270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !272, globals: !285, splitDebugInlining: false, nameTableKind: None)
!271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!272 = !{!22, !113, !24, !273, !275, !277, !239, !119, !280, !281, !282, !283, !106, !284, !199, !278}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!285 = !{!268}
!286 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291, !292}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !289, line: 17, baseType: !278, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !288, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "_char_out", scope: !295, file: !299, line: 54, type: !300, isLocal: false, isDefinition: true)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !298, splitDebugInlining: false, nameTableKind: None)
!296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!297 = !{!113, !119}
!298 = !{!293}
!299 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DISubroutineType(types: !302)
!302 = !{!119, !119}
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !305, file: !322, line: 56, type: !323, isLocal: true, isDefinition: true, align: 32)
!305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !307, globals: !321, splitDebugInlining: false, nameTableKind: None)
!306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 379, baseType: !311)
!310 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 370, size: 224, elements: !312)
!312 = !{!313, !315, !316, !317, !318, !319, !320}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !311, file: !310, line: 372, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !118)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !311, file: !310, line: 373, baseType: !314, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !311, file: !310, line: 374, baseType: !314, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !311, file: !310, line: 375, baseType: !314, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !311, file: !310, line: 376, baseType: !314, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !311, file: !310, line: 377, baseType: !314, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !311, file: !310, line: 378, baseType: !314, size: 32, offset: 192)
!321 = !{!303}
!322 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = !{!327, !353}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !324, file: !325, line: 60, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!329 = !DISubroutineType(types: !330)
!330 = !{!119, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !346, !347}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !334, line: 380, baseType: !278, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !333, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !333, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !333, file: !334, line: 386, baseType: !340, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !341, file: !334, line: 359, baseType: !185, size: 8)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !341, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!345 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !333, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !333, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !334, line: 43, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !352)
!352 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !324, file: !325, line: 65, baseType: !331, size: 32, offset: 32)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !356, file: !359, line: 71, type: !360, isLocal: true, isDefinition: true, align: 32)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !358, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!358 = !{!354}
!359 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !362)
!362 = !{!363, !382}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !361, file: !325, line: 60, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{!119, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !370)
!370 = !{!371, !372, !373, !374, !380, !381}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !369, file: !334, line: 380, baseType: !278, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !369, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !369, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !369, file: !334, line: 386, baseType: !375, size: 32, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !377)
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !376, file: !334, line: 359, baseType: !185, size: 8)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !376, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !369, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !369, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !361, file: !325, line: 65, baseType: !367, size: 32, offset: 32)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !385, file: !392, line: 17, type: !521, isLocal: false, isDefinition: true)
!385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !387, globals: !388, splitDebugInlining: false, nameTableKind: None)
!386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!387 = !{!239, !119, !118, !113}
!388 = !{!383, !389, !517}
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !391, file: !392, line: 198, type: !503, isLocal: true, isDefinition: true)
!391 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !392, file: !392, line: 175, type: !393, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !498)
!392 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !DISubroutineType(types: !394)
!394 = !{null, !395}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !397)
!397 = !{!398, !456, !468, !469, !470, !471, !472, !478, !493}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !396, file: !143, line: 247, baseType: !399, size: 384)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !400)
!400 = !{!401, !425, !432, !433, !434, !443, !444, !445}
!401 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 60, baseType: !402, size: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 60, size: 64, elements: !403)
!403 = !{!404, !419}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !402, file: !143, line: 61, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !407)
!407 = !{!408, !414}
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 38, baseType: !409, size: 32)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 38, size: 32, elements: !410)
!410 = !{!411, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !409, file: !153, line: 39, baseType: !412, size: 32)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !409, file: !153, line: 40, baseType: !412, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 42, baseType: !415, size: 32, offset: 32)
!415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 42, size: 32, elements: !416)
!416 = !{!417, !418}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !415, file: !153, line: 43, baseType: !412, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !415, file: !153, line: 44, baseType: !412, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !402, file: !143, line: 62, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !420, file: !169, line: 50, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 64, elements: !174)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !399, file: !143, line: 68, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !428, file: !179, line: 232, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !406)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !399, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !399, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!434 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 90, baseType: !435, size: 16, offset: 112)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 90, size: 16, elements: !436)
!436 = !{!437, !442}
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !143, line: 91, baseType: !438, size: 16)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !143, line: 91, size: 16, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !438, file: !143, line: 96, baseType: !195, size: 8)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !438, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !435, file: !143, line: 100, baseType: !199, size: 16)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !399, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !399, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !399, file: !143, line: 131, baseType: !446, size: 192, offset: 192)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !447)
!447 = !{!448, !449, !455}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !446, file: !179, line: 245, baseType: !405, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !446, file: !179, line: 246, baseType: !450, size: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !454}
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !446, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !396, file: !143, line: 250, baseType: !457, size: 288, offset: 384)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !458)
!458 = !{!459, !460, !461, !462, !463, !464, !465, !466, !467}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !457, file: !216, line: 26, baseType: !118, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !457, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !457, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !457, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !457, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !457, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !457, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !457, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !457, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !396, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !396, file: !143, line: 256, baseType: !427, size: 64, offset: 704)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !396, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !396, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !396, file: !143, line: 300, baseType: !473, size: 96, offset: 1056)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !474)
!474 = !{!475, !476, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !143, line: 153, baseType: !22, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !473, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !396, file: !143, line: 325, baseType: !479, size: 32, offset: 1152)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !481)
!481 = !{!482, !488, !489}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !480, file: !245, line: 5074, baseType: !483, size: 96)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !483, file: !249, line: 57, baseType: !252, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !483, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !483, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !245, line: 5075, baseType: !427, size: 64, offset: 96)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !245, line: 5076, baseType: !490, size: 32, offset: 160)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !491)
!491 = !{!492}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !490, file: !259, line: 52, baseType: !22, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !396, file: !143, line: 343, baseType: !494, size: 64, offset: 1184)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !495)
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !494, file: !216, line: 63, baseType: !118, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !494, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!498 = !{!499, !500, !501, !502}
!499 = !DILocalVariable(name: "thread", arg: 1, scope: !391, file: !392, line: 175, type: !395)
!500 = !DILocalVariable(name: "region_num", scope: !391, file: !392, line: 200, type: !185)
!501 = !DILocalVariable(name: "guard_start", scope: !391, file: !392, line: 265, type: !22)
!502 = !DILocalVariable(name: "guard_size", scope: !391, file: !392, line: 266, type: !239)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 96, elements: !515)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !506)
!505 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = !{!507, !508, !509}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !504, file: !505, line: 53, baseType: !22, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !504, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !504, file: !505, line: 55, baseType: !510, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !512)
!511 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !512, file: !511, line: 150, baseType: !118, size: 32)
!515 = !{!516}
!516 = !DISubrange(count: 1)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "static_regions", scope: !385, file: !392, line: 62, type: !519, isLocal: true, isDefinition: true)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 96, elements: !515)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !289, line: 17, baseType: !278, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !522, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !528, file: !561, line: 39, type: !185, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !560, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!530 = !{!531, !113, !119, !548, !185}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !533, line: 1226, baseType: !534)
!533 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 1213, size: 352, elements: !535)
!535 = !{!536, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !534, file: !533, line: 1215, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !534, file: !533, line: 1216, baseType: !314, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !534, file: !533, line: 1217, baseType: !314, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !534, file: !533, line: 1218, baseType: !314, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !534, file: !533, line: 1219, baseType: !314, size: 32, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !534, file: !533, line: 1220, baseType: !314, size: 32, offset: 160)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !534, file: !533, line: 1221, baseType: !314, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !534, file: !533, line: 1222, baseType: !314, size: 32, offset: 224)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !534, file: !533, line: 1223, baseType: !314, size: 32, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !534, file: !533, line: 1224, baseType: !314, size: 32, offset: 288)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !534, file: !533, line: 1225, baseType: !314, size: 32, offset: 320)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !552)
!551 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !550, file: !551, line: 29, baseType: !118, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !550, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !550, file: !551, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !511, line: 143, baseType: !118, size: 32)
!560 = !{!526}
!561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !564, file: !571, line: 21, type: !300, isLocal: true, isDefinition: true)
!564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !566, globals: !570, splitDebugInlining: false, nameTableKind: None)
!565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!566 = !{!567, !119, !113}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !569, line: 22, baseType: !119)
!569 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !{!562}
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !574, file: !579, line: 13, type: !596, isLocal: true, isDefinition: true)
!574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !576, splitDebugInlining: false, nameTableKind: None)
!575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!576 = !{!577, !572}
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "mpu_config", scope: !574, file: !579, line: 37, type: !580, isLocal: false, isDefinition: true)
!579 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !551, line: 41, size: 64, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !581, file: !551, line: 43, baseType: !118, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !581, file: !551, line: 45, baseType: !585, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !588)
!588 = !{!589, !590, !591}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !587, file: !551, line: 29, baseType: !118, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !587, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !587, file: !551, line: 37, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !594)
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !593, file: !511, line: 143, baseType: !118, size: 32)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 192, elements: !174)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !599, file: !703, line: 72, type: !787, isLocal: true, isDefinition: true)
!599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !601, retainedTypes: !689, globals: !700, splitDebugInlining: false, nameTableKind: None)
!600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!601 = !{!30, !602}
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !310, line: 65, baseType: !119, size: 32, elements: !603)
!603 = !{!604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688}
!604 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!605 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!606 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!607 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!608 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!609 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!610 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!611 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!612 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!613 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!614 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!615 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!616 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!617 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!618 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!619 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!620 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!621 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!622 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!623 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!624 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!625 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!626 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!627 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!628 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!629 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!630 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!631 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!632 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!633 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!634 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!635 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!636 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!637 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!638 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!639 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!640 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!641 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!642 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!643 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!644 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!645 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!646 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!647 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!648 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!649 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!650 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!651 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!652 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!653 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!654 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!655 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!656 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!657 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!658 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!659 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!660 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!661 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!662 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!663 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!664 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!665 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!666 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!667 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!668 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!669 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!670 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!671 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!672 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!673 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!674 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!675 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!676 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!677 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!678 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!679 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!680 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!681 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!682 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!683 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!684 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!685 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!686 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!687 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!688 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!689 = !{!239, !119, !113, !690}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !310, line: 364, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 356, size: 192, elements: !693)
!693 = !{!694, !695, !696, !697, !698, !699}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !692, file: !310, line: 358, baseType: !314, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !692, file: !310, line: 359, baseType: !314, size: 32, offset: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !692, file: !310, line: 360, baseType: !314, size: 32, offset: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !692, file: !310, line: 361, baseType: !314, size: 32, offset: 96)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !692, file: !310, line: 362, baseType: !314, size: 32, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !692, file: !310, line: 363, baseType: !314, size: 32, offset: 160)
!700 = !{!701, !707, !723, !734, !751, !597, !753, !767, !769, !771, !773, !775, !777, !779, !781, !783, !785}
!701 = !DIGlobalVariableExpression(var: !702, expr: !DIExpression())
!702 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !599, file: !703, line: 424, type: !704, isLocal: false, isDefinition: true, align: 16)
!703 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 64, elements: !705)
!705 = !{!706}
!706 = !DISubrange(count: 4)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !599, file: !703, line: 424, type: !709, isLocal: false, isDefinition: true, align: 32)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !711)
!711 = !{!712, !713, !714, !715, !721, !722}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !710, file: !334, line: 380, baseType: !278, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !710, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !710, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !710, file: !334, line: 386, baseType: !716, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !718)
!718 = !{!719, !720}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !717, file: !334, line: 359, baseType: !185, size: 8)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !717, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !710, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !710, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !599, file: !703, line: 424, type: !725, isLocal: true, isDefinition: true, align: 32)
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !726)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !727)
!727 = !{!728, !733}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !726, file: !325, line: 60, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 32)
!730 = !DISubroutineType(types: !731)
!731 = !{!119, !732}
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !726, file: !325, line: 65, baseType: !732, size: 32, offset: 32)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "exti_data", scope: !599, file: !703, line: 423, type: !736, isLocal: true, isDefinition: true)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !703, line: 107, size: 1472, elements: !737)
!737 = !{!738}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !736, file: !703, line: 109, baseType: !739, size: 1472)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 1472, elements: !749)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !703, line: 101, size: 64, elements: !741)
!741 = !{!742, !748}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !740, file: !703, line: 102, baseType: !743, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !744, line: 63, baseType: !745)
!744 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !119, !113}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !740, file: !703, line: 103, baseType: !113, size: 32, offset: 32)
!749 = !{!750}
!750 = !DISubrange(count: 23)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !599, file: !703, line: 424, type: !717, isLocal: true, isDefinition: true, align: 8)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !755, file: !703, line: 493, type: !760, isLocal: true, isDefinition: true, align: 32)
!755 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !703, file: !703, line: 460, type: !756, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !758)
!756 = !DISubroutineType(types: !757)
!757 = !{null, !732}
!758 = !{!759}
!759 = !DILocalVariable(name: "dev", arg: 1, scope: !755, file: !703, line: 460, type: !732)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !761)
!761 = !{!762, !764, !765, !766}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !760, file: !10, line: 55, baseType: !763, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !119)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !760, file: !10, line: 57, baseType: !763, size: 32, offset: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !760, file: !10, line: 59, baseType: !113, size: 32, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !760, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !755, file: !703, line: 497, type: !760, isLocal: true, isDefinition: true, align: 32)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !755, file: !703, line: 507, type: !760, isLocal: true, isDefinition: true, align: 32)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !755, file: !703, line: 512, type: !760, isLocal: true, isDefinition: true, align: 32)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !755, file: !703, line: 516, type: !760, isLocal: true, isDefinition: true, align: 32)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !755, file: !703, line: 523, type: !760, isLocal: true, isDefinition: true, align: 32)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !755, file: !703, line: 527, type: !760, isLocal: true, isDefinition: true, align: 32)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !755, file: !703, line: 581, type: !760, isLocal: true, isDefinition: true, align: 32)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !755, file: !703, line: 586, type: !760, isLocal: true, isDefinition: true, align: 32)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !755, file: !703, line: 591, type: !760, isLocal: true, isDefinition: true, align: 32)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !755, file: !703, line: 595, type: !760, isLocal: true, isDefinition: true, align: 32)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 736, elements: !749)
!788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !789)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !310, line: 154, baseType: !602)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !792, file: !797, line: 22, type: !819, isLocal: false, isDefinition: true, align: 16)
!792 = distinct !DICompileUnit(language: DW_LANG_C99, file: !793, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !794, splitDebugInlining: false, nameTableKind: None)
!793 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!794 = !{!795, !790, !801, !803, !805, !807, !809, !811, !813, !815, !817}
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !792, file: !797, line: 17, type: !798, isLocal: false, isDefinition: true, align: 16)
!797 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 192, elements: !799)
!799 = !{!800}
!800 = !DISubrange(count: 12)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !792, file: !797, line: 29, type: !704, isLocal: false, isDefinition: true, align: 16)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !792, file: !797, line: 36, type: !704, isLocal: false, isDefinition: true, align: 16)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !792, file: !797, line: 43, type: !704, isLocal: false, isDefinition: true, align: 16)
!807 = !DIGlobalVariableExpression(var: !808, expr: !DIExpression())
!808 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !792, file: !797, line: 50, type: !704, isLocal: false, isDefinition: true, align: 16)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !792, file: !797, line: 57, type: !704, isLocal: false, isDefinition: true, align: 16)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !792, file: !797, line: 64, type: !704, isLocal: false, isDefinition: true, align: 16)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !792, file: !797, line: 71, type: !704, isLocal: false, isDefinition: true, align: 16)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !792, file: !797, line: 78, type: !704, isLocal: false, isDefinition: true, align: 16)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !792, file: !797, line: 85, type: !704, isLocal: false, isDefinition: true, align: 16)
!819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 48, elements: !820)
!820 = !{!821}
!821 = !DISubrange(count: 3)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !824, file: !886, line: 398, type: !919, isLocal: true, isDefinition: true)
!824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !826, retainedTypes: !839, globals: !883, splitDebugInlining: false, nameTableKind: None)
!825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!826 = !{!827, !30, !832}
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !828, line: 197, baseType: !32, size: 32, elements: !829)
!828 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !{!830, !831}
!830 = !DIEnumerator(name: "SUCCESS", value: 0)
!831 = !DIEnumerator(name: "ERROR", value: 1)
!832 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !833, line: 44, baseType: !32, size: 32, elements: !834)
!833 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!834 = !{!835, !836, !837, !838}
!835 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!836 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!837 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!838 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!839 = !{!113, !119, !118, !840, !876, !882}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 510, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 477, size: 1216, elements: !843)
!843 = !{!844, !845, !846, !847, !848, !849, !850, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !842, file: !310, line: 479, baseType: !314, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !842, file: !310, line: 480, baseType: !314, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !842, file: !310, line: 481, baseType: !314, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !842, file: !310, line: 482, baseType: !314, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !842, file: !310, line: 483, baseType: !314, size: 32, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !842, file: !310, line: 484, baseType: !314, size: 32, offset: 160)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !842, file: !310, line: 485, baseType: !851, size: 64, offset: 192)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 64, elements: !174)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !842, file: !310, line: 486, baseType: !314, size: 32, offset: 256)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !842, file: !310, line: 487, baseType: !314, size: 32, offset: 288)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !842, file: !310, line: 488, baseType: !851, size: 64, offset: 320)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !842, file: !310, line: 489, baseType: !314, size: 32, offset: 384)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !842, file: !310, line: 490, baseType: !314, size: 32, offset: 416)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !842, file: !310, line: 491, baseType: !851, size: 64, offset: 448)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !842, file: !310, line: 492, baseType: !314, size: 32, offset: 512)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !842, file: !310, line: 493, baseType: !314, size: 32, offset: 544)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !842, file: !310, line: 494, baseType: !851, size: 64, offset: 576)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !842, file: !310, line: 495, baseType: !314, size: 32, offset: 640)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !842, file: !310, line: 496, baseType: !314, size: 32, offset: 672)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !842, file: !310, line: 497, baseType: !851, size: 64, offset: 704)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !842, file: !310, line: 498, baseType: !314, size: 32, offset: 768)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !842, file: !310, line: 499, baseType: !314, size: 32, offset: 800)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !842, file: !310, line: 500, baseType: !851, size: 64, offset: 832)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !842, file: !310, line: 501, baseType: !314, size: 32, offset: 896)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !842, file: !310, line: 502, baseType: !314, size: 32, offset: 928)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !842, file: !310, line: 503, baseType: !851, size: 64, offset: 960)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !842, file: !310, line: 504, baseType: !314, size: 32, offset: 1024)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !842, file: !310, line: 505, baseType: !314, size: 32, offset: 1056)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !842, file: !310, line: 506, baseType: !118, size: 32, offset: 1088)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !842, file: !310, line: 507, baseType: !314, size: 32, offset: 1120)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !842, file: !310, line: 508, baseType: !314, size: 32, offset: 1152)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !842, file: !310, line: 509, baseType: !314, size: 32, offset: 1184)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !879)
!878 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!879 = !{!880, !881}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !877, file: !878, line: 344, baseType: !118, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !877, file: !878, line: 345, baseType: !118, size: 32, offset: 32)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!883 = !{!884, !890, !906, !917, !822}
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !824, file: !886, line: 752, type: !887, isLocal: false, isDefinition: true, align: 16)
!886 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 848, elements: !888)
!888 = !{!889}
!889 = !DISubrange(count: 53)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !824, file: !886, line: 752, type: !892, isLocal: false, isDefinition: true, align: 32)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !894)
!894 = !{!895, !896, !897, !898, !904, !905}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !893, file: !334, line: 380, baseType: !278, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !893, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !893, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !893, file: !334, line: 386, baseType: !899, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !900, file: !334, line: 359, baseType: !185, size: 8)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !900, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !893, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !893, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !824, file: !886, line: 752, type: !908, isLocal: true, isDefinition: true, align: 32)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !910)
!910 = !{!911, !916}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !909, file: !325, line: 60, baseType: !912, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!119, !915}
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !909, file: !325, line: 65, baseType: !915, size: 32, offset: 32)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !824, file: !886, line: 752, type: !900, isLocal: true, isDefinition: true, align: 8)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !833, line: 100, size: 224, elements: !920)
!920 = !{!921, !927, !928, !937, !942, !947, !953}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !919, file: !833, line: 101, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !833, line: 76, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!119, !915, !926}
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !833, line: 56, baseType: !113)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !919, file: !833, line: 102, baseType: !922, size: 32, offset: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !919, file: !833, line: 103, baseType: !929, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !833, line: 83, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!119, !915, !926, !933, !113}
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !833, line: 72, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{null, !915, !926, !113}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !919, file: !833, line: 104, baseType: !938, size: 32, offset: 96)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !833, line: 79, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{!119, !915, !926, !882}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !919, file: !833, line: 105, baseType: !943, size: 32, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !833, line: 88, baseType: !944)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!832, !915, !926}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !919, file: !833, line: 106, baseType: !948, size: 32, offset: 160)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !833, line: 92, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DISubroutineType(types: !951)
!951 = !{!119, !915, !926, !952}
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !833, line: 64, baseType: !113)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !919, file: !833, line: 107, baseType: !954, size: 32, offset: 192)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !833, line: 96, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!119, !915, !926, !113}
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !960, file: !1017, line: 603, type: !1019, isLocal: true, isDefinition: true, align: 32)
!960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !962, globals: !1014, splitDebugInlining: false, nameTableKind: None)
!961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!962 = !{!113, !119, !963}
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !966, line: 336, size: 160, elements: !967)
!966 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!967 = !{!968, !988, !992, !996, !1009}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !965, file: !966, line: 365, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{!119, !972, !987}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !975)
!975 = !{!976, !977, !978, !979, !985, !986}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !974, file: !334, line: 380, baseType: !278, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !974, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !974, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !974, file: !334, line: 386, baseType: !980, size: 32, offset: 96)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !981, file: !334, line: 359, baseType: !185, size: 8)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !981, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !974, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !974, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !965, file: !966, line: 366, baseType: !989, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{null, !972, !186}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !965, file: !966, line: 374, baseType: !993, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DISubroutineType(types: !995)
!995 = !{!119, !972}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !965, file: !966, line: 377, baseType: !997, size: 32, offset: 96)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{!119, !972, !1000}
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !966, line: 122, size: 64, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1002, file: !966, line: 123, baseType: !118, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1002, file: !966, line: 124, baseType: !185, size: 8, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1002, file: !966, line: 125, baseType: !185, size: 8, offset: 40)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1002, file: !966, line: 126, baseType: !185, size: 8, offset: 48)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1002, file: !966, line: 127, baseType: !185, size: 8, offset: 56)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !965, file: !966, line: 379, baseType: !1010, size: 32, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!119, !972, !1013}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1014 = !{!958, !1015}
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !960, file: !1017, line: 38, type: !1018, isLocal: true, isDefinition: true)
!1017 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!1019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1020, file: !325, line: 60, baseType: !993, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1020, file: !325, line: 65, baseType: !972, size: 32, offset: 32)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1026, file: !1197, line: 762, type: !1309, isLocal: true, isDefinition: true)
!1026 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1027, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1028, retainedTypes: !1046, globals: !1194, splitDebugInlining: false, nameTableKind: None)
!1027 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!1028 = !{!30, !1029, !1035, !1040, !832}
!1029 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1030, line: 506, baseType: !32, size: 32, elements: !1031)
!1030 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1031 = !{!1032, !1033, !1034}
!1032 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1033 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1034 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1035 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1030, line: 512, baseType: !32, size: 32, elements: !1036)
!1036 = !{!1037, !1038, !1039}
!1037 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1038 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1039 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1040 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !744, line: 43, baseType: !32, size: 32, elements: !1041)
!1041 = !{!1042, !1043, !1044, !1045}
!1042 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1043 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1044 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1045 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1046 = !{!113, !119, !1047, !1117, !1122, !1082, !1035, !1029, !1127, !1128, !118, !1142, !1097, !106, !1154, !1155}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1030, line: 523, size: 288, elements: !1050)
!1050 = !{!1051, !1072, !1078, !1083, !1087, !1088, !1089, !1093, !1113}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1049, file: !1030, line: 524, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!119, !1055, !1070, !1071}
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1058)
!1058 = !{!1059, !1060, !1061, !1062, !1068, !1069}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1057, file: !334, line: 380, baseType: !278, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1057, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1057, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1057, file: !334, line: 386, baseType: !1063, size: 32, offset: 96)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1065)
!1065 = !{!1066, !1067}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1064, file: !334, line: 359, baseType: !185, size: 8)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1064, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1057, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1057, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1030, line: 237, baseType: !185)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1030, line: 257, baseType: !118)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1049, file: !1030, line: 530, baseType: !1073, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!119, !1055, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1030, line: 229, baseType: !118)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1049, file: !1030, line: 532, baseType: !1079, size: 32, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!119, !1055, !1082, !1077}
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1030, line: 216, baseType: !118)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1049, file: !1030, line: 535, baseType: !1084, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!119, !1055, !1082}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1049, file: !1030, line: 537, baseType: !1084, size: 32, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1049, file: !1030, line: 539, baseType: !1084, size: 32, offset: 160)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1049, file: !1030, line: 541, baseType: !1090, size: 32, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!119, !1055, !1070, !1029, !1035}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1049, file: !1030, line: 544, baseType: !1094, size: 32, offset: 224)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!119, !1055, !1097, !345}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1030, line: 478, size: 96, elements: !1099)
!1099 = !{!1100, !1107, !1112}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1098, file: !1030, line: 482, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1102, line: 33, baseType: !1103)
!1102 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1102, line: 29, size: 32, elements: !1104)
!1104 = !{!1105}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1103, file: !1102, line: 30, baseType: !1106, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1098, file: !1030, line: 485, baseType: !1108, size: 32, offset: 32)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1030, line: 464, baseType: !1109)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1055, !1097, !1082}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1098, file: !1030, line: 493, baseType: !1082, size: 32, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1049, file: !1030, line: 547, baseType: !1114, size: 32, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!118, !1055}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1030, line: 428, size: 32, elements: !1120)
!1120 = !{!1121}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1119, file: !1030, line: 434, baseType: !1082, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1030, line: 441, size: 32, elements: !1125)
!1125 = !{!1126}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1124, file: !1030, line: 447, baseType: !1082, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 396, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 385, size: 320, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1130, file: !310, line: 387, baseType: !314, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1130, file: !310, line: 388, baseType: !314, size: 32, offset: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1130, file: !310, line: 389, baseType: !314, size: 32, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1130, file: !310, line: 390, baseType: !314, size: 32, offset: 96)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1130, file: !310, line: 391, baseType: !314, size: 32, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1130, file: !310, line: 392, baseType: !314, size: 32, offset: 160)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1130, file: !310, line: 393, baseType: !314, size: 32, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1130, file: !310, line: 394, baseType: !314, size: 32, offset: 224)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1130, file: !310, line: 395, baseType: !1141, size: 64, offset: 256)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 64, elements: !174)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !310, line: 411, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 402, size: 320, elements: !1145)
!1145 = !{!1146, !1147, !1148, !1150, !1151, !1152, !1153}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1144, file: !310, line: 404, baseType: !314, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1144, file: !310, line: 405, baseType: !314, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1144, file: !310, line: 406, baseType: !1149, size: 128, offset: 64)
!1149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 128, elements: !705)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1144, file: !310, line: 407, baseType: !118, size: 32, offset: 192)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1144, file: !310, line: 408, baseType: !314, size: 32, offset: 224)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1144, file: !310, line: 409, baseType: !314, size: 32, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1144, file: !310, line: 410, baseType: !314, size: 32, offset: 288)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !833, line: 100, size: 224, elements: !1158)
!1158 = !{!1159, !1164, !1165, !1174, !1179, !1184, !1189}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1157, file: !833, line: 101, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !833, line: 76, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!119, !1055, !926}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1157, file: !833, line: 102, baseType: !1160, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1157, file: !833, line: 103, baseType: !1166, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !833, line: 83, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!119, !1055, !926, !1170, !113}
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !833, line: 72, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !1055, !926, !113}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1157, file: !833, line: 104, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !833, line: 79, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!119, !1055, !926, !882}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1157, file: !833, line: 105, baseType: !1180, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !833, line: 88, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!832, !1055, !926}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1157, file: !833, line: 106, baseType: !1185, size: 32, offset: 160)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !833, line: 92, baseType: !1186)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!119, !1055, !926, !952}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1157, file: !833, line: 107, baseType: !1190, size: 32, offset: 192)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !833, line: 96, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!119, !1055, !926, !113}
!1194 = !{!1195, !1201, !1203, !1213, !1215, !1217, !1219, !1224, !1226, !1228, !1233, !1235, !1237, !1239, !1241, !1243, !1245, !1247, !1249, !1251, !1253, !1255, !1257, !1259, !1261, !1275, !1277, !1279, !1281, !1283, !1285, !1287, !1289, !1291, !1293, !1295, !1297, !1299, !1301, !1303, !1024, !1305, !1307, !1320, !1322, !1324, !1326, !1328, !1330}
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1026, file: !1197, line: 762, type: !1198, isLocal: false, isDefinition: true, align: 16)
!1197 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 112, elements: !1199)
!1199 = !{!1200}
!1200 = !DISubrange(count: 7)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1026, file: !1197, line: 762, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1026, file: !1197, line: 762, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1207)
!1207 = !{!1208, !1212}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1206, file: !325, line: 60, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!119, !1055}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1206, file: !325, line: 65, baseType: !1055, size: 32, offset: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1026, file: !1197, line: 766, type: !1198, isLocal: false, isDefinition: true, align: 16)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1026, file: !1197, line: 766, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1026, file: !1197, line: 766, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1026, file: !1197, line: 770, type: !1221, isLocal: false, isDefinition: true, align: 16)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 96, elements: !1222)
!1222 = !{!1223}
!1223 = !DISubrange(count: 6)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1026, file: !1197, line: 770, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1026, file: !1197, line: 770, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1026, file: !1197, line: 774, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 80, elements: !1231)
!1231 = !{!1232}
!1232 = !DISubrange(count: 5)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1026, file: !1197, line: 774, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1026, file: !1197, line: 774, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1026, file: !1197, line: 778, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1026, file: !1197, line: 778, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1026, file: !1197, line: 778, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1026, file: !1197, line: 782, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1026, file: !1197, line: 782, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1026, file: !1197, line: 782, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1026, file: !1197, line: 786, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1026, file: !1197, line: 786, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1026, file: !1197, line: 786, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1026, file: !1197, line: 790, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1026, file: !1197, line: 790, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1026, file: !1197, line: 790, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1026, file: !1197, line: 762, type: !1263, isLocal: true, isDefinition: true)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1264, line: 237, size: 128, elements: !1265)
!1264 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1265 = !{!1266, !1267, !1268}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1263, file: !1264, line: 239, baseType: !1124, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1263, file: !1264, line: 241, baseType: !1055, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1263, file: !1264, line: 243, baseType: !1269, size: 64, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1102, line: 40, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1102, line: 35, size: 64, elements: !1271)
!1271 = !{!1272, !1274}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1270, file: !1102, line: 36, baseType: !1273, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1270, file: !1102, line: 37, baseType: !1273, size: 32, offset: 32)
!1275 = !DIGlobalVariableExpression(var: !1276, expr: !DIExpression())
!1276 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1026, file: !1197, line: 762, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1026, file: !1197, line: 766, type: !1263, isLocal: true, isDefinition: true)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1026, file: !1197, line: 766, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1026, file: !1197, line: 770, type: !1263, isLocal: true, isDefinition: true)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1026, file: !1197, line: 770, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1026, file: !1197, line: 774, type: !1263, isLocal: true, isDefinition: true)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1026, file: !1197, line: 774, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1026, file: !1197, line: 778, type: !1263, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1026, file: !1197, line: 778, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1026, file: !1197, line: 782, type: !1263, isLocal: true, isDefinition: true)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1026, file: !1197, line: 782, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1026, file: !1197, line: 786, type: !1263, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1026, file: !1197, line: 786, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1026, file: !1197, line: 790, type: !1263, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1026, file: !1197, line: 790, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1026, file: !1197, line: 656, type: !1048, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1026, file: !1197, line: 766, type: !1309, isLocal: true, isDefinition: true)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1264, line: 224, size: 160, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1310, file: !1264, line: 226, baseType: !1119, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1310, file: !1264, line: 228, baseType: !882, size: 32, offset: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1310, file: !1264, line: 230, baseType: !119, size: 32, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1310, file: !1264, line: 231, baseType: !1316, size: 64, offset: 96)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !1317)
!1317 = !{!1318, !1319}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1316, file: !878, line: 344, baseType: !118, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1316, file: !878, line: 345, baseType: !118, size: 32, offset: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1026, file: !1197, line: 770, type: !1309, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1026, file: !1197, line: 774, type: !1309, isLocal: true, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1026, file: !1197, line: 778, type: !1309, isLocal: true, isDefinition: true)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1026, file: !1197, line: 782, type: !1309, isLocal: true, isDefinition: true)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1026, file: !1197, line: 786, type: !1309, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1026, file: !1197, line: 790, type: !1309, isLocal: true, isDefinition: true)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1334, file: !1473, line: 44, type: !1551, isLocal: false, isDefinition: true)
!1334 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1335, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1336, retainedTypes: !1369, globals: !1470, splitDebugInlining: false, nameTableKind: None)
!1335 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!1336 = !{!30, !1337, !1344, !1351, !1358, !1364, !832}
!1337 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !966, line: 47, baseType: !32, size: 32, elements: !1338)
!1338 = !{!1339, !1340, !1341, !1342, !1343}
!1339 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1340 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1341 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1342 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1343 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !966, line: 75, baseType: !32, size: 32, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1350}
!1346 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1347 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1348 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1349 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1350 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !966, line: 92, baseType: !32, size: 32, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357}
!1353 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1354 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1355 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1356 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1357 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !966, line: 84, baseType: !32, size: 32, elements: !1359)
!1359 = !{!1360, !1361, !1362, !1363}
!1360 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1361 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1362 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1363 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1364 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !966, line: 107, baseType: !32, size: 32, elements: !1365)
!1365 = !{!1366, !1367, !1368}
!1366 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1367 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1368 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1369 = !{!113, !119, !1370, !186, !185, !1419, !118, !926, !1430, !199, !120, !1469}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !966, line: 336, size: 160, elements: !1373)
!1373 = !{!1374, !1393, !1397, !1401, !1414}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1372, file: !966, line: 365, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!119, !1378, !987}
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1380)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1381)
!1381 = !{!1382, !1383, !1384, !1385, !1391, !1392}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1380, file: !334, line: 380, baseType: !278, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1380, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1380, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1380, file: !334, line: 386, baseType: !1386, size: 32, offset: 96)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1388)
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1387, file: !334, line: 359, baseType: !185, size: 8)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1387, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1380, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1380, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1372, file: !966, line: 366, baseType: !1394, size: 32, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{null, !1378, !186}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1372, file: !966, line: 374, baseType: !1398, size: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!119, !1378}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1372, file: !966, line: 377, baseType: !1402, size: 32, offset: 96)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!119, !1378, !1405}
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !966, line: 122, size: 64, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412, !1413}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1407, file: !966, line: 123, baseType: !118, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1407, file: !966, line: 124, baseType: !185, size: 8, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1407, file: !966, line: 125, baseType: !185, size: 8, offset: 40)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1407, file: !966, line: 126, baseType: !185, size: 8, offset: 48)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1407, file: !966, line: 127, baseType: !185, size: 8, offset: 56)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1372, file: !966, line: 379, baseType: !1415, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!119, !1378, !1418}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !310, line: 648, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 639, size: 224, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1421, file: !310, line: 641, baseType: !314, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1421, file: !310, line: 642, baseType: !314, size: 32, offset: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1421, file: !310, line: 643, baseType: !314, size: 32, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1421, file: !310, line: 644, baseType: !314, size: 32, offset: 96)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1421, file: !310, line: 645, baseType: !314, size: 32, offset: 128)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1421, file: !310, line: 646, baseType: !314, size: 32, offset: 160)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1421, file: !310, line: 647, baseType: !314, size: 32, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !833, line: 100, size: 224, elements: !1433)
!1433 = !{!1434, !1439, !1440, !1449, !1454, !1459, !1464}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1432, file: !833, line: 101, baseType: !1435, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !833, line: 76, baseType: !1436)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{!119, !1378, !926}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1432, file: !833, line: 102, baseType: !1435, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1432, file: !833, line: 103, baseType: !1441, size: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !833, line: 83, baseType: !1442)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 32)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!119, !1378, !926, !1445, !113}
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !833, line: 72, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{null, !1378, !926, !113}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1432, file: !833, line: 104, baseType: !1450, size: 32, offset: 96)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !833, line: 79, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!119, !1378, !926, !882}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1432, file: !833, line: 105, baseType: !1455, size: 32, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !833, line: 88, baseType: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!832, !1378, !926}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1432, file: !833, line: 106, baseType: !1460, size: 32, offset: 160)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !833, line: 92, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!119, !1378, !926, !952}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1432, file: !833, line: 107, baseType: !1465, size: 32, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !833, line: 96, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!119, !1378, !926, !113}
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!1470 = !{!1332, !1471, !1477, !1479, !1486, !1488, !1532, !1535, !1537, !1540, !1543, !1545}
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1474, isLocal: false, isDefinition: true, align: 16)
!1473 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 128, elements: !1475)
!1475 = !{!1476}
!1476 = !DISubrange(count: 8)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1379, isLocal: false, isDefinition: true, align: 32)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1481, isLocal: true, isDefinition: true, align: 32)
!1481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1482, file: !325, line: 60, baseType: !1398, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1482, file: !325, line: 65, baseType: !1378, size: 32, offset: 32)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1387, isLocal: true, isDefinition: true, align: 8)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1334, file: !1473, line: 1914, type: !1490, isLocal: true, isDefinition: true)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1492, line: 22, size: 224, elements: !1493)
!1492 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1493 = !{!1494, !1495, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1491, file: !1492, line: 24, baseType: !1419, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1491, file: !1492, line: 26, baseType: !1496, size: 32, offset: 32)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1498, file: !878, line: 344, baseType: !118, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1498, file: !878, line: 345, baseType: !118, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1491, file: !1492, line: 28, baseType: !239, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1491, file: !1492, line: 30, baseType: !345, size: 8, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1491, file: !1492, line: 32, baseType: !119, size: 32, offset: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1491, file: !1492, line: 34, baseType: !345, size: 8, offset: 160)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1491, file: !1492, line: 36, baseType: !345, size: 8, offset: 168)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1491, file: !1492, line: 38, baseType: !345, size: 8, offset: 176)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1491, file: !1492, line: 40, baseType: !345, size: 8, offset: 184)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1491, file: !1492, line: 41, baseType: !1510, size: 32, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1513, line: 60, size: 64, elements: !1514)
!1513 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1514 = !{!1515, !1531}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1512, file: !1513, line: 69, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1513, line: 50, size: 64, elements: !1519)
!1519 = !{!1520, !1529, !1530}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1518, file: !1513, line: 52, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1524, line: 37, baseType: !1525)
!1524 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1524, line: 32, size: 64, elements: !1526)
!1526 = !{!1527, !1528}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1525, file: !1524, line: 34, baseType: !118, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1525, file: !1524, line: 36, baseType: !118, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1518, file: !1513, line: 54, baseType: !185, size: 8, offset: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1518, file: !1513, line: 56, baseType: !185, size: 8, offset: 40)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1512, file: !1513, line: 71, baseType: !185, size: 8, offset: 32)
!1532 = !DIGlobalVariableExpression(var: !1533, expr: !DIExpression())
!1533 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1334, file: !1473, line: 1914, type: !1534, isLocal: true, isDefinition: true)
!1534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1497, size: 64, elements: !515)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1511, isLocal: true, isDefinition: true)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1539, isLocal: true, isDefinition: true)
!1539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1517, size: 64, elements: !515)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1542, isLocal: true, isDefinition: true)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1522, size: 128, elements: !174)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1334, file: !1473, line: 1539, type: !1371, isLocal: true, isDefinition: true)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1334, file: !1473, line: 1914, type: !1547, isLocal: true, isDefinition: true)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1492, line: 74, size: 64, elements: !1548)
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1547, file: !1492, line: 76, baseType: !118, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1547, file: !1492, line: 78, baseType: !1378, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !1553)
!1553 = !{!1554, !1555}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1552, file: !289, line: 17, baseType: !278, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1552, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1558, file: !1634, line: 65, type: !314, isLocal: true, isDefinition: true)
!1558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1559, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1560, retainedTypes: !1561, globals: !1631, splitDebugInlining: false, nameTableKind: None)
!1559 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!1560 = !{!602}
!1561 = !{!114, !1562, !763, !185, !118, !1570, !1601}
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1564, file: !533, line: 766, baseType: !314, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1564, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1564, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1564, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1573)
!1573 = !{!1574, !1576, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1591, !1596, !1600}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1572, file: !533, line: 413, baseType: !1575, size: 256)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 256, elements: !1475)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1572, file: !533, line: 414, baseType: !1577, size: 768, offset: 256)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 768, elements: !1578)
!1578 = !{!1579}
!1579 = !DISubrange(count: 24)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1572, file: !533, line: 415, baseType: !1575, size: 256, offset: 1024)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1572, file: !533, line: 416, baseType: !1577, size: 768, offset: 1280)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1572, file: !533, line: 417, baseType: !1575, size: 256, offset: 2048)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1572, file: !533, line: 418, baseType: !1577, size: 768, offset: 2304)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1572, file: !533, line: 419, baseType: !1575, size: 256, offset: 3072)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1572, file: !533, line: 420, baseType: !1577, size: 768, offset: 3328)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1572, file: !533, line: 421, baseType: !1575, size: 256, offset: 4096)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1572, file: !533, line: 422, baseType: !1588, size: 1792, offset: 4352)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 1792, elements: !1589)
!1589 = !{!1590}
!1590 = !DISubrange(count: 56)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1572, file: !533, line: 423, baseType: !1592, size: 1920, offset: 6144)
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1593, size: 1920, elements: !1594)
!1593 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1594 = !{!1595}
!1595 = !DISubrange(count: 240)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1572, file: !533, line: 424, baseType: !1597, size: 20608, offset: 8064)
!1597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 20608, elements: !1598)
!1598 = !{!1599}
!1599 = !DISubrange(count: 644)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1572, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1622, !1623, !1624, !1626, !1628, !1630}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1603, file: !533, line: 447, baseType: !537, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1603, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1603, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1603, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1603, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1603, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1603, file: !533, line: 453, baseType: !1612, size: 96, offset: 192)
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1593, size: 96, elements: !799)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1603, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1603, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1603, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1603, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1603, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1603, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1603, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1603, file: !533, line: 461, baseType: !1621, size: 64, offset: 512)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 64, elements: !174)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1603, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1603, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1603, file: !533, line: 464, baseType: !1625, size: 128, offset: 640)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 128, elements: !705)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1603, file: !533, line: 465, baseType: !1627, size: 160, offset: 768)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 160, elements: !1231)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1603, file: !533, line: 466, baseType: !1629, size: 160, offset: 928)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 160, elements: !1231)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1603, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1631 = !{!1632, !1658, !1663, !1665, !1667, !1556}
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1558, file: !1634, line: 285, type: !1635, isLocal: true, isDefinition: true, align: 32)
!1634 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1637)
!1637 = !{!1638, !1657}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1636, file: !325, line: 60, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!119, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649, !1655, !1656}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1644, file: !334, line: 380, baseType: !278, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1644, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1644, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1644, file: !334, line: 386, baseType: !1650, size: 32, offset: 96)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1652)
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1651, file: !334, line: 359, baseType: !185, size: 8)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1651, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1644, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1644, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1636, file: !325, line: 65, baseType: !1642, size: 32, offset: 32)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "lock", scope: !1558, file: !1634, line: 34, type: !1660, isLocal: true, isDefinition: true)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !1661)
!1661 = !{!1662}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1660, file: !259, line: 52, baseType: !22, size: 32)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "last_load", scope: !1558, file: !1634, line: 36, type: !118, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1558, file: !1634, line: 48, type: !118, isLocal: true, isDefinition: true)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1558, file: !1634, line: 54, type: !118, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1671, file: !1753, line: 22, type: !1755, isLocal: true, isDefinition: true)
!1671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1673, retainedTypes: !1674, globals: !1750, splitDebugInlining: false, nameTableKind: None)
!1672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!1673 = !{!1029, !1035}
!1674 = !{!1675, !1739, !1744, !1082, !1035, !1029, !1749, !113}
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1030, line: 523, size: 288, elements: !1678)
!1678 = !{!1679, !1698, !1702, !1706, !1710, !1711, !1712, !1716, !1735}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1677, file: !1030, line: 524, baseType: !1680, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!119, !1683, !1070, !1071}
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1696, !1697}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1685, file: !334, line: 380, baseType: !278, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1685, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1685, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1685, file: !334, line: 386, baseType: !1691, size: 32, offset: 96)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1693)
!1693 = !{!1694, !1695}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1692, file: !334, line: 359, baseType: !185, size: 8)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1692, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1685, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1685, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1677, file: !1030, line: 530, baseType: !1699, size: 32, offset: 32)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!119, !1683, !1076}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1677, file: !1030, line: 532, baseType: !1703, size: 32, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{!119, !1683, !1082, !1077}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1677, file: !1030, line: 535, baseType: !1707, size: 32, offset: 96)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!119, !1683, !1082}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1677, file: !1030, line: 537, baseType: !1707, size: 32, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1677, file: !1030, line: 539, baseType: !1707, size: 32, offset: 160)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1677, file: !1030, line: 541, baseType: !1713, size: 32, offset: 192)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!119, !1683, !1070, !1029, !1035}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1677, file: !1030, line: 544, baseType: !1717, size: 32, offset: 224)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!119, !1683, !1720, !345}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1030, line: 478, size: 96, elements: !1722)
!1722 = !{!1723, !1729, !1734}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1721, file: !1030, line: 482, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1102, line: 33, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1102, line: 29, size: 32, elements: !1726)
!1726 = !{!1727}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1725, file: !1102, line: 30, baseType: !1728, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1721, file: !1030, line: 485, baseType: !1730, size: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1030, line: 464, baseType: !1731)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{null, !1683, !1720, !1082}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1721, file: !1030, line: 493, baseType: !1082, size: 32, offset: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1677, file: !1030, line: 547, baseType: !1736, size: 32, offset: 256)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!118, !1683}
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1030, line: 428, size: 32, elements: !1742)
!1742 = !{!1743}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1741, file: !1030, line: 434, baseType: !1082, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1030, line: 441, size: 32, elements: !1747)
!1747 = !{!1748}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1746, file: !1030, line: 447, baseType: !1082, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1750 = !{!1751, !1669}
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1752 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1671, file: !1753, line: 37, type: !1754, isLocal: true, isDefinition: true)
!1753 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1756, size: 352, elements: !1757)
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1757 = !{!1758}
!1758 = !DISubrange(count: 11)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1761, file: !1802, line: 139, type: !1807, isLocal: false, isDefinition: true)
!1761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1762, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1763, globals: !1799, splitDebugInlining: false, nameTableKind: None)
!1762 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!1763 = !{!1764}
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 510, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 477, size: 1216, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1766, file: !310, line: 479, baseType: !314, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1766, file: !310, line: 480, baseType: !314, size: 32, offset: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1766, file: !310, line: 481, baseType: !314, size: 32, offset: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1766, file: !310, line: 482, baseType: !314, size: 32, offset: 96)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1766, file: !310, line: 483, baseType: !314, size: 32, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1766, file: !310, line: 484, baseType: !314, size: 32, offset: 160)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1766, file: !310, line: 485, baseType: !851, size: 64, offset: 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1766, file: !310, line: 486, baseType: !314, size: 32, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1766, file: !310, line: 487, baseType: !314, size: 32, offset: 288)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1766, file: !310, line: 488, baseType: !851, size: 64, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1766, file: !310, line: 489, baseType: !314, size: 32, offset: 384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1766, file: !310, line: 490, baseType: !314, size: 32, offset: 416)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1766, file: !310, line: 491, baseType: !851, size: 64, offset: 448)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1766, file: !310, line: 492, baseType: !314, size: 32, offset: 512)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1766, file: !310, line: 493, baseType: !314, size: 32, offset: 544)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1766, file: !310, line: 494, baseType: !851, size: 64, offset: 576)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1766, file: !310, line: 495, baseType: !314, size: 32, offset: 640)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1766, file: !310, line: 496, baseType: !314, size: 32, offset: 672)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1766, file: !310, line: 497, baseType: !851, size: 64, offset: 704)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1766, file: !310, line: 498, baseType: !314, size: 32, offset: 768)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1766, file: !310, line: 499, baseType: !314, size: 32, offset: 800)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1766, file: !310, line: 500, baseType: !851, size: 64, offset: 832)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1766, file: !310, line: 501, baseType: !314, size: 32, offset: 896)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1766, file: !310, line: 502, baseType: !314, size: 32, offset: 928)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1766, file: !310, line: 503, baseType: !851, size: 64, offset: 960)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1766, file: !310, line: 504, baseType: !314, size: 32, offset: 1024)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1766, file: !310, line: 505, baseType: !314, size: 32, offset: 1056)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1766, file: !310, line: 506, baseType: !118, size: 32, offset: 1088)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1766, file: !310, line: 507, baseType: !314, size: 32, offset: 1120)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1766, file: !310, line: 508, baseType: !314, size: 32, offset: 1152)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1766, file: !310, line: 509, baseType: !314, size: 32, offset: 1184)
!1799 = !{!1800, !1803, !1759}
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1761, file: !1802, line: 137, type: !118, isLocal: false, isDefinition: true)
!1802 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1761, file: !1802, line: 138, type: !1805, isLocal: false, isDefinition: true)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 128, elements: !267)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 64, elements: !1475)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1810, file: !1813, line: 23, type: !1814, isLocal: false, isDefinition: true)
!1810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !1812, splitDebugInlining: false, nameTableKind: None)
!1811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!1812 = !{!1808}
!1813 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1817, file: !1821, line: 37, type: !2076, isLocal: false, isDefinition: true)
!1817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1818, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1819, retainedTypes: !1828, globals: !1901, splitDebugInlining: false, nameTableKind: None)
!1818 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!1819 = !{!1820, !30, !602}
!1820 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1821, line: 63, baseType: !32, size: 32, elements: !1822)
!1821 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1822 = !{!1823, !1824, !1825, !1826, !1827}
!1823 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1824 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1825 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1826 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1827 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1828 = !{!239, !113, !119, !1829, !106, !118, !1859, !763, !185, !1884}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1832, line: 51, size: 64, elements: !1833)
!1832 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1833 = !{!1834, !1854}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1831, file: !1832, line: 52, baseType: !1835, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1832, line: 38, baseType: !1836)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!119, !1839, !284, !199}
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1841)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1852, !1853}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1841, file: !334, line: 380, baseType: !278, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1841, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1841, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1841, file: !334, line: 386, baseType: !1847, size: 32, offset: 96)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1849)
!1849 = !{!1850, !1851}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1848, file: !334, line: 359, baseType: !185, size: 8)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1848, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1841, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1841, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1831, file: !1832, line: 53, baseType: !1855, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1832, line: 47, baseType: !1856)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!119, !1839, !284, !199, !118}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1861, file: !533, line: 447, baseType: !537, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1861, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1861, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1861, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1861, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1861, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1861, file: !533, line: 453, baseType: !1612, size: 96, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1861, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1861, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1861, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1861, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1861, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1861, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1861, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1861, file: !533, line: 461, baseType: !1621, size: 64, offset: 512)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1861, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1861, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1861, file: !533, line: 464, baseType: !1625, size: 128, offset: 640)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1861, file: !533, line: 465, baseType: !1627, size: 160, offset: 768)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1861, file: !533, line: 466, baseType: !1629, size: 160, offset: 928)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1861, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1886, file: !533, line: 413, baseType: !1575, size: 256)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1886, file: !533, line: 414, baseType: !1577, size: 768, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1886, file: !533, line: 415, baseType: !1575, size: 256, offset: 1024)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1886, file: !533, line: 416, baseType: !1577, size: 768, offset: 1280)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1886, file: !533, line: 417, baseType: !1575, size: 256, offset: 2048)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1886, file: !533, line: 418, baseType: !1577, size: 768, offset: 2304)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1886, file: !533, line: 419, baseType: !1575, size: 256, offset: 3072)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1886, file: !533, line: 420, baseType: !1577, size: 768, offset: 3328)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1886, file: !533, line: 421, baseType: !1575, size: 256, offset: 4096)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1886, file: !533, line: 422, baseType: !1588, size: 1792, offset: 4352)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1886, file: !533, line: 423, baseType: !1592, size: 1920, offset: 6144)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1886, file: !533, line: 424, baseType: !1597, size: 20608, offset: 8064)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1886, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1901 = !{!1815, !1902, !2028, !2036, !2038, !2041, !2046, !2048, !2053}
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "_kernel", scope: !1817, file: !1821, line: 40, type: !1904, isLocal: false, isDefinition: true)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !179, line: 158, size: 288, elements: !1905)
!1905 = !{!1906, !2023}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1904, file: !179, line: 159, baseType: !1907, size: 192)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1908, size: 192, elements: !515)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !179, line: 100, size: 192, elements: !1909)
!1909 = !{!1910, !1911, !1912, !2016, !2017, !2018, !2019}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1908, file: !179, line: 102, baseType: !118, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1908, file: !179, line: 105, baseType: !106, size: 32, offset: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1908, file: !179, line: 108, baseType: !1913, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !1915)
!1915 = !{!1916, !1974, !1986, !1987, !1988, !1989, !1990, !1996, !2011}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1914, file: !143, line: 247, baseType: !1917, size: 384)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !1918)
!1918 = !{!1919, !1943, !1950, !1951, !1952, !1961, !1962, !1963}
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !143, line: 60, baseType: !1920, size: 64)
!1920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1917, file: !143, line: 60, size: 64, elements: !1921)
!1921 = !{!1922, !1937}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1920, file: !143, line: 61, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !1925)
!1925 = !{!1926, !1932}
!1926 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !153, line: 38, baseType: !1927, size: 32)
!1927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1924, file: !153, line: 38, size: 32, elements: !1928)
!1928 = !{!1929, !1931}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1927, file: !153, line: 39, baseType: !1930, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1927, file: !153, line: 40, baseType: !1930, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !153, line: 42, baseType: !1933, size: 32, offset: 32)
!1933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1924, file: !153, line: 42, size: 32, elements: !1934)
!1934 = !{!1935, !1936}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1933, file: !153, line: 43, baseType: !1930, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1933, file: !153, line: 44, baseType: !1930, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1920, file: !143, line: 62, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !1939)
!1939 = !{!1940}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1938, file: !169, line: 50, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 64, elements: !174)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1917, file: !143, line: 68, baseType: !1944, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1946, file: !179, line: 232, baseType: !1949, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !1924)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1917, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1917, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!1952 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !143, line: 90, baseType: !1953, size: 16, offset: 112)
!1953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1917, file: !143, line: 90, size: 16, elements: !1954)
!1954 = !{!1955, !1960}
!1955 = !DIDerivedType(tag: DW_TAG_member, scope: !1953, file: !143, line: 91, baseType: !1956, size: 16)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1953, file: !143, line: 91, size: 16, elements: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1956, file: !143, line: 96, baseType: !195, size: 8)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1956, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1953, file: !143, line: 100, baseType: !199, size: 16)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1917, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1917, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1917, file: !143, line: 131, baseType: !1964, size: 192, offset: 192)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !1965)
!1965 = !{!1966, !1967, !1973}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1964, file: !179, line: 245, baseType: !1923, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1964, file: !179, line: 246, baseType: !1968, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !1969)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{null, !1972}
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1964, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1914, file: !143, line: 250, baseType: !1975, size: 288, offset: 384)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1975, file: !216, line: 26, baseType: !118, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1975, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1975, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1975, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1975, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1975, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1975, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1975, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1975, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1914, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1914, file: !143, line: 256, baseType: !1945, size: 64, offset: 704)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1914, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1914, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1914, file: !143, line: 300, baseType: !1991, size: 96, offset: 1056)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !1992)
!1992 = !{!1993, !1994, !1995}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1991, file: !143, line: 153, baseType: !22, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1991, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1991, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1914, file: !143, line: 325, baseType: !1997, size: 32, offset: 1152)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !1999)
!1999 = !{!2000, !2006, !2007}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1998, file: !245, line: 5074, baseType: !2001, size: 96)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2002)
!2002 = !{!2003, !2004, !2005}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2001, file: !249, line: 57, baseType: !252, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2001, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2001, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1998, file: !245, line: 5075, baseType: !1945, size: 64, offset: 96)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1998, file: !245, line: 5076, baseType: !2008, size: 32, offset: 160)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2009)
!2009 = !{!2010}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2008, file: !259, line: 52, baseType: !22, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1914, file: !143, line: 343, baseType: !2012, size: 64, offset: 1184)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2012, file: !216, line: 63, baseType: !118, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2012, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1908, file: !179, line: 111, baseType: !1913, size: 32, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1908, file: !179, line: 124, baseType: !119, size: 32, offset: 128)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1908, file: !179, line: 127, baseType: !185, size: 8, offset: 160)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1908, file: !179, line: 153, baseType: !2020, offset: 168)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2021, line: 33, elements: !2022)
!2021 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2022 = !{}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1904, file: !179, line: 170, baseType: !2024, size: 96, offset: 192)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !2025)
!2025 = !{!2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2024, file: !179, line: 86, baseType: !1913, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2024, file: !179, line: 90, baseType: !1949, size: 64, offset: 32)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1817, file: !1821, line: 43, type: !2030, isLocal: false, isDefinition: true, align: 512)
!2030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2031, size: 8704, elements: !2034)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !2032)
!2032 = !{!2033}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2031, file: !128, line: 48, baseType: !107, size: 8)
!2034 = !{!2035}
!2035 = !DISubrange(count: 1088)
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1817, file: !1821, line: 44, type: !1914, isLocal: false, isDefinition: true)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1817, file: !1821, line: 48, type: !2040, isLocal: false, isDefinition: true)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1914, size: 1280, elements: !515)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1817, file: !1821, line: 86, type: !2043, isLocal: false, isDefinition: true, align: 512)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2031, size: 16896, elements: !2044)
!2044 = !{!516, !2045}
!2045 = !DISubrange(count: 2112)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1817, file: !1821, line: 217, type: !345, isLocal: false, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1817, file: !1821, line: 50, type: !2050, isLocal: true, isDefinition: true, align: 512)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2031, size: 3072, elements: !2051)
!2051 = !{!516, !2052}
!2052 = !DISubrange(count: 384)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "levels", scope: !2055, file: !1821, line: 232, type: !2075, isLocal: true, isDefinition: true)
!2055 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1821, file: !1821, line: 230, type: !2056, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !2058)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{null, !1820}
!2058 = !{!2059, !2060, !2070, !2074}
!2059 = !DILocalVariable(name: "level", arg: 1, scope: !2055, file: !1821, line: 230, type: !1820)
!2060 = !DILocalVariable(name: "entry", scope: !2055, file: !1821, line: 244, type: !2061)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !2064)
!2064 = !{!2065, !2069}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2063, file: !325, line: 60, baseType: !2066, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!119, !1839}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2063, file: !325, line: 65, baseType: !1839, size: 32, offset: 32)
!2070 = !DILocalVariable(name: "dev", scope: !2071, file: !1821, line: 247, type: !1839)
!2071 = distinct !DILexicalBlock(scope: !2072, file: !1821, line: 246, column: 64)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !1821, line: 246, column: 2)
!2073 = distinct !DILexicalBlock(scope: !2055, file: !1821, line: 246, column: 2)
!2074 = !DILocalVariable(name: "rc", scope: !2071, file: !1821, line: 248, type: !119)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 192, elements: !1222)
!2076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2077, file: !289, line: 17, baseType: !278, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2077, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "states_str", scope: !2083, file: !2084, line: 276, type: !2208, isLocal: true, isDefinition: true)
!2083 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2084, file: !2084, line: 271, type: !2085, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2199)
!2084 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!278, !2087, !106, !239}
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2088)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2090)
!2090 = !{!2091, !2149, !2161, !2162, !2163, !2164, !2165, !2171, !2186}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2089, file: !143, line: 247, baseType: !2092, size: 384)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2093)
!2093 = !{!2094, !2118, !2125, !2126, !2127, !2136, !2137, !2138}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !143, line: 60, baseType: !2095, size: 64)
!2095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2092, file: !143, line: 60, size: 64, elements: !2096)
!2096 = !{!2097, !2112}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2095, file: !143, line: 61, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2100)
!2100 = !{!2101, !2107}
!2101 = !DIDerivedType(tag: DW_TAG_member, scope: !2099, file: !153, line: 38, baseType: !2102, size: 32)
!2102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2099, file: !153, line: 38, size: 32, elements: !2103)
!2103 = !{!2104, !2106}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2102, file: !153, line: 39, baseType: !2105, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2102, file: !153, line: 40, baseType: !2105, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, scope: !2099, file: !153, line: 42, baseType: !2108, size: 32, offset: 32)
!2108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2099, file: !153, line: 42, size: 32, elements: !2109)
!2109 = !{!2110, !2111}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2108, file: !153, line: 43, baseType: !2105, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2108, file: !153, line: 44, baseType: !2105, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2095, file: !143, line: 62, baseType: !2113, size: 64)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2113, file: !169, line: 50, baseType: !2116, size: 64)
!2116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2117, size: 64, elements: !174)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2092, file: !143, line: 68, baseType: !2119, size: 32, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2122)
!2122 = !{!2123}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2121, file: !179, line: 232, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2099)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2092, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2092, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2127 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !143, line: 90, baseType: !2128, size: 16, offset: 112)
!2128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2092, file: !143, line: 90, size: 16, elements: !2129)
!2129 = !{!2130, !2135}
!2130 = !DIDerivedType(tag: DW_TAG_member, scope: !2128, file: !143, line: 91, baseType: !2131, size: 16)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2128, file: !143, line: 91, size: 16, elements: !2132)
!2132 = !{!2133, !2134}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2131, file: !143, line: 96, baseType: !195, size: 8)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2131, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2128, file: !143, line: 100, baseType: !199, size: 16)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2092, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2092, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2092, file: !143, line: 131, baseType: !2139, size: 192, offset: 192)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2140)
!2140 = !{!2141, !2142, !2148}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2139, file: !179, line: 245, baseType: !2098, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2139, file: !179, line: 246, baseType: !2143, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2144)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{null, !2147}
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2139, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2089, file: !143, line: 250, baseType: !2150, size: 288, offset: 384)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2150, file: !216, line: 26, baseType: !118, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2150, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2150, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2150, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2150, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2150, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2150, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2150, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2150, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2089, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2089, file: !143, line: 256, baseType: !2120, size: 64, offset: 704)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2089, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2089, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2089, file: !143, line: 300, baseType: !2166, size: 96, offset: 1056)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2167)
!2167 = !{!2168, !2169, !2170}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2166, file: !143, line: 153, baseType: !22, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2166, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2166, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2089, file: !143, line: 325, baseType: !2172, size: 32, offset: 1152)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 32)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2174)
!2174 = !{!2175, !2181, !2182}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2173, file: !245, line: 5074, baseType: !2176, size: 96)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2177)
!2177 = !{!2178, !2179, !2180}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2176, file: !249, line: 57, baseType: !252, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2176, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2176, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2173, file: !245, line: 5075, baseType: !2120, size: 64, offset: 96)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2173, file: !245, line: 5076, baseType: !2183, size: 32, offset: 160)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2184)
!2184 = !{!2185}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2183, file: !259, line: 52, baseType: !22, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2089, file: !143, line: 343, baseType: !2187, size: 64, offset: 1184)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2188)
!2188 = !{!2189, !2190}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2187, file: !216, line: 63, baseType: !118, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2187, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2192, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2193, globals: !2195, splitDebugInlining: false, nameTableKind: None)
!2192 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2193 = !{!113, !278, !114, !185, !22, !119, !2194, !24, !239, !106, !118, !120}
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2195 = !{!2081, !2196}
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "states_sz", scope: !2083, file: !2084, line: 279, type: !2198, isLocal: true, isDefinition: true)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1754, size: 256, elements: !1475)
!2199 = !{!2200, !2201, !2202, !2203, !2204, !2205, !2206}
!2200 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2083, file: !2084, line: 271, type: !2087)
!2201 = !DILocalVariable(name: "buf", arg: 2, scope: !2083, file: !2084, line: 271, type: !106)
!2202 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2083, file: !2084, line: 271, type: !239)
!2203 = !DILocalVariable(name: "off", scope: !2083, file: !2084, line: 273, type: !239)
!2204 = !DILocalVariable(name: "bit", scope: !2083, file: !2084, line: 274, type: !185)
!2205 = !DILocalVariable(name: "thread_state", scope: !2083, file: !2084, line: 275, type: !185)
!2206 = !DILocalVariable(name: "index", scope: !2207, file: !2084, line: 293, type: !185)
!2207 = distinct !DILexicalBlock(scope: !2083, file: !2084, line: 293, column: 2)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 256, elements: !1475)
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2211, file: !2322, line: 56, type: !2309, isLocal: false, isDefinition: true)
!2211 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2212, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2213, globals: !2319, splitDebugInlining: false, nameTableKind: None)
!2212 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2213 = !{!2214, !106, !113, !2317, !284, !114, !763, !119, !118, !120, !2318}
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 32)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2216)
!2216 = !{!2217, !2275, !2287, !2288, !2289, !2290, !2291, !2297, !2312}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2215, file: !143, line: 247, baseType: !2218, size: 384)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2219)
!2219 = !{!2220, !2244, !2251, !2252, !2253, !2262, !2263, !2264}
!2220 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !143, line: 60, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2218, file: !143, line: 60, size: 64, elements: !2222)
!2222 = !{!2223, !2238}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2221, file: !143, line: 61, baseType: !2224, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2226)
!2226 = !{!2227, !2233}
!2227 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !153, line: 38, baseType: !2228, size: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !153, line: 38, size: 32, elements: !2229)
!2229 = !{!2230, !2232}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2228, file: !153, line: 39, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2228, file: !153, line: 40, baseType: !2231, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !153, line: 42, baseType: !2234, size: 32, offset: 32)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !153, line: 42, size: 32, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2234, file: !153, line: 43, baseType: !2231, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2234, file: !153, line: 44, baseType: !2231, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2221, file: !143, line: 62, baseType: !2239, size: 64)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2240)
!2240 = !{!2241}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2239, file: !169, line: 50, baseType: !2242, size: 64)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2243, size: 64, elements: !174)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2218, file: !143, line: 68, baseType: !2245, size: 32, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2248)
!2248 = !{!2249}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2247, file: !179, line: 232, baseType: !2250, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2225)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2218, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2218, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2253 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !143, line: 90, baseType: !2254, size: 16, offset: 112)
!2254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2218, file: !143, line: 90, size: 16, elements: !2255)
!2255 = !{!2256, !2261}
!2256 = !DIDerivedType(tag: DW_TAG_member, scope: !2254, file: !143, line: 91, baseType: !2257, size: 16)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2254, file: !143, line: 91, size: 16, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2257, file: !143, line: 96, baseType: !195, size: 8)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2257, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2254, file: !143, line: 100, baseType: !199, size: 16)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2218, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2218, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2218, file: !143, line: 131, baseType: !2265, size: 192, offset: 192)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2266)
!2266 = !{!2267, !2268, !2274}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2265, file: !179, line: 245, baseType: !2224, size: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2265, file: !179, line: 246, baseType: !2269, size: 32, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2270)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{null, !2273}
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2265, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2215, file: !143, line: 250, baseType: !2276, size: 288, offset: 384)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2276, file: !216, line: 26, baseType: !118, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2276, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2276, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2276, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2276, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2276, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2276, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2276, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2276, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2215, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2215, file: !143, line: 256, baseType: !2246, size: 64, offset: 704)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2215, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2215, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2215, file: !143, line: 300, baseType: !2292, size: 96, offset: 1056)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2293)
!2293 = !{!2294, !2295, !2296}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2292, file: !143, line: 153, baseType: !22, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2292, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2292, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2215, file: !143, line: 325, baseType: !2298, size: 32, offset: 1152)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2300)
!2300 = !{!2301, !2307, !2308}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2299, file: !245, line: 5074, baseType: !2302, size: 96)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2303)
!2303 = !{!2304, !2305, !2306}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2302, file: !249, line: 57, baseType: !252, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2302, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2302, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2299, file: !245, line: 5075, baseType: !2246, size: 64, offset: 96)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2299, file: !245, line: 5076, baseType: !2309, size: 32, offset: 160)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2310)
!2310 = !{!2311}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2309, file: !259, line: 52, baseType: !22, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2215, file: !143, line: 343, baseType: !2313, size: 64, offset: 1184)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2314)
!2314 = !{!2315, !2316}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2313, file: !216, line: 63, baseType: !118, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2313, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2319 = !{!2209, !2320, !2323, !2325}
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2211, file: !2322, line: 404, type: !119, isLocal: true, isDefinition: true)
!2322 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2323 = !DIGlobalVariableExpression(var: !2324, expr: !DIExpression())
!2324 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2211, file: !2322, line: 405, type: !119, isLocal: true, isDefinition: true)
!2325 = !DIGlobalVariableExpression(var: !2326, expr: !DIExpression())
!2326 = distinct !DIGlobalVariable(name: "pending_current", scope: !2211, file: !2322, line: 425, type: !2214, isLocal: true, isDefinition: true)
!2327 = !DIGlobalVariableExpression(var: !2328, expr: !DIExpression())
!2328 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2329, file: !2359, line: 19, type: !2365, isLocal: true, isDefinition: true)
!2329 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2330, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2331, globals: !2356, splitDebugInlining: false, nameTableKind: None)
!2330 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2331 = !{!114, !113, !763, !118, !120, !119, !2332, !106, !116}
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2334)
!2334 = !{!2335, !2350, !2355}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2333, file: !179, line: 245, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2338)
!2338 = !{!2339, !2345}
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !153, line: 38, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !153, line: 38, size: 32, elements: !2341)
!2341 = !{!2342, !2344}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2340, file: !153, line: 39, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2340, file: !153, line: 40, baseType: !2343, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !153, line: 42, baseType: !2346, size: 32, offset: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !153, line: 42, size: 32, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2346, file: !153, line: 43, baseType: !2343, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2346, file: !153, line: 44, baseType: !2343, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2333, file: !179, line: 246, baseType: !2351, size: 32, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2352)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null, !2332}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2333, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2356 = !{!2357, !2327, !2360, !2362}
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2329, file: !2359, line: 15, type: !120, isLocal: true, isDefinition: true)
!2359 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2329, file: !2359, line: 25, type: !119, isLocal: true, isDefinition: true)
!2362 = !DIGlobalVariableExpression(var: !2363, expr: !DIExpression())
!2363 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2329, file: !2359, line: 17, type: !2364, isLocal: true, isDefinition: true)
!2364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2337)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2366)
!2366 = !{!2367}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2365, file: !259, line: 52, baseType: !22, size: 32)
!2368 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2369, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2369 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2371, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2371 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2373, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2374, retainedTypes: !2394, splitDebugInlining: false, nameTableKind: None)
!2373 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2374 = !{!2375, !2383}
!2375 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2376, line: 69, baseType: !32, size: 32, elements: !2377)
!2376 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2377 = !{!2378, !2379, !2380, !2381, !2382}
!2378 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2379 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2380 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2381 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2382 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2376, line: 56, baseType: !32, size: 32, elements: !2384)
!2384 = !{!2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393}
!2385 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2386 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2387 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2388 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2389 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2390 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2391 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2392 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2393 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2394 = !{!119, !2375, !2383, !2395, !196, !352, !2397, !2398, !186, !200, !278, !239, !113, !22, !32, !280, !2400, !2401, !105, !281, !117, !282, !2396, !2402, !2403, !2404, !2405}
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2376, line: 31, baseType: !2396)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !117)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !240, line: 329, baseType: !32)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2376, line: 32, baseType: !2399)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !121)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !240, line: 145, baseType: !119)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2407, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2407 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2408 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2409, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2409 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2412, splitDebugInlining: false, nameTableKind: None)
!2411 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2412 = !{!278, !186, !119, !32}
!2413 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2414, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2415, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2414 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2415 = !{!2416, !30}
!2416 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2417, line: 27, baseType: !32, size: 32, elements: !2418)
!2417 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2418 = !{!2419, !2420, !2421, !2422, !2423}
!2419 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2420 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2421 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2422 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2423 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2424 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2425, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2426, retainedTypes: !2427, splitDebugInlining: false, nameTableKind: None)
!2425 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2426 = !{!602, !2416, !30}
!2427 = !{!789, !2428, !113, !119, !763, !118, !185, !2445}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2430)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2431)
!2431 = !{!2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2430, file: !533, line: 413, baseType: !1575, size: 256)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2430, file: !533, line: 414, baseType: !1577, size: 768, offset: 256)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2430, file: !533, line: 415, baseType: !1575, size: 256, offset: 1024)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2430, file: !533, line: 416, baseType: !1577, size: 768, offset: 1280)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2430, file: !533, line: 417, baseType: !1575, size: 256, offset: 2048)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2430, file: !533, line: 418, baseType: !1577, size: 768, offset: 2304)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2430, file: !533, line: 419, baseType: !1575, size: 256, offset: 3072)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2430, file: !533, line: 420, baseType: !1577, size: 768, offset: 3328)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2430, file: !533, line: 421, baseType: !1575, size: 256, offset: 4096)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2430, file: !533, line: 422, baseType: !1588, size: 1792, offset: 4352)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2430, file: !533, line: 423, baseType: !1592, size: 1920, offset: 6144)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2430, file: !533, line: 424, baseType: !1597, size: 20608, offset: 8064)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2430, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2447)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2448)
!2448 = !{!2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2447, file: !533, line: 447, baseType: !537, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2447, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2447, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2447, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2447, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2447, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2447, file: !533, line: 453, baseType: !1612, size: 96, offset: 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2447, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2447, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2447, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2447, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2447, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2447, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2447, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2447, file: !533, line: 461, baseType: !1621, size: 64, offset: 512)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2447, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2447, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2447, file: !533, line: 464, baseType: !1625, size: 128, offset: 640)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2447, file: !533, line: 465, baseType: !1627, size: 160, offset: 768)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2447, file: !533, line: 466, baseType: !1629, size: 160, offset: 928)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2447, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2470 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2471, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2471 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2472 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2473, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2474, splitDebugInlining: false, nameTableKind: None)
!2473 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2474 = !{!113, !119, !22, !2475}
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2477)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2478)
!2478 = !{!2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2477, file: !533, line: 447, baseType: !537, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2477, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2477, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2477, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2477, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2477, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2477, file: !533, line: 453, baseType: !1612, size: 96, offset: 192)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2477, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2477, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2477, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2477, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2477, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2477, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2477, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2477, file: !533, line: 461, baseType: !1621, size: 64, offset: 512)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2477, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2477, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2477, file: !533, line: 464, baseType: !1625, size: 128, offset: 640)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2477, file: !533, line: 465, baseType: !1627, size: 160, offset: 768)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2477, file: !533, line: 466, baseType: !1629, size: 160, offset: 928)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2477, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2501, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2502, splitDebugInlining: false, nameTableKind: None)
!2501 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2502 = !{!2503, !113, !119}
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2505)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2506)
!2506 = !{!2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2505, file: !533, line: 447, baseType: !537, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2505, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2505, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2505, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2505, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2505, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2505, file: !533, line: 453, baseType: !1612, size: 96, offset: 192)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2505, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2505, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2505, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2505, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2505, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2505, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2505, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2505, file: !533, line: 461, baseType: !1621, size: 64, offset: 512)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2505, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2505, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2505, file: !533, line: 464, baseType: !1625, size: 128, offset: 640)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2505, file: !533, line: 465, baseType: !1627, size: 160, offset: 768)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2505, file: !533, line: 466, baseType: !1629, size: 160, offset: 928)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2505, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2530, splitDebugInlining: false, nameTableKind: None)
!2529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2530 = !{!2531, !118, !113, !119}
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 32)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2533, line: 98, size: 256, elements: !2534)
!2533 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2534 = !{!2535, !2540, !2545, !2550, !2555, !2560, !2565, !2570}
!2535 = !DIDerivedType(tag: DW_TAG_member, scope: !2532, file: !2533, line: 99, baseType: !2536, size: 32)
!2536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2532, file: !2533, line: 99, size: 32, elements: !2537)
!2537 = !{!2538, !2539}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2536, file: !2533, line: 99, baseType: !118, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2536, file: !2533, line: 99, baseType: !118, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, scope: !2532, file: !2533, line: 100, baseType: !2541, size: 32, offset: 32)
!2541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2532, file: !2533, line: 100, size: 32, elements: !2542)
!2542 = !{!2543, !2544}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2541, file: !2533, line: 100, baseType: !118, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2541, file: !2533, line: 100, baseType: !118, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, scope: !2532, file: !2533, line: 101, baseType: !2546, size: 32, offset: 64)
!2546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2532, file: !2533, line: 101, size: 32, elements: !2547)
!2547 = !{!2548, !2549}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2546, file: !2533, line: 101, baseType: !118, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2546, file: !2533, line: 101, baseType: !118, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, scope: !2532, file: !2533, line: 102, baseType: !2551, size: 32, offset: 96)
!2551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2532, file: !2533, line: 102, size: 32, elements: !2552)
!2552 = !{!2553, !2554}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2551, file: !2533, line: 102, baseType: !118, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2551, file: !2533, line: 102, baseType: !118, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, scope: !2532, file: !2533, line: 103, baseType: !2556, size: 32, offset: 128)
!2556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2532, file: !2533, line: 103, size: 32, elements: !2557)
!2557 = !{!2558, !2559}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2556, file: !2533, line: 103, baseType: !118, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2556, file: !2533, line: 103, baseType: !118, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, scope: !2532, file: !2533, line: 104, baseType: !2561, size: 32, offset: 160)
!2561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2532, file: !2533, line: 104, size: 32, elements: !2562)
!2562 = !{!2563, !2564}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2561, file: !2533, line: 104, baseType: !118, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2561, file: !2533, line: 104, baseType: !118, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2532, file: !2533, line: 105, baseType: !2566, size: 32, offset: 192)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2532, file: !2533, line: 105, size: 32, elements: !2567)
!2567 = !{!2568, !2569}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2566, file: !2533, line: 105, baseType: !118, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2566, file: !2533, line: 105, baseType: !118, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2532, file: !2533, line: 106, baseType: !118, size: 32, offset: 224)
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2415, retainedTypes: !2573, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2573 = !{!2574, !113, !119, !2599, !2642, !118}
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2576)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2577)
!2577 = !{!2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2576, file: !533, line: 447, baseType: !537, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2576, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2576, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2576, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2576, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2576, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2576, file: !533, line: 453, baseType: !1612, size: 96, offset: 192)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2576, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2576, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2576, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2576, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2576, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2576, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2576, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2576, file: !533, line: 461, baseType: !1621, size: 64, offset: 512)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2576, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2576, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2576, file: !533, line: 464, baseType: !1625, size: 128, offset: 640)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2576, file: !533, line: 465, baseType: !1627, size: 160, offset: 768)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2576, file: !533, line: 466, baseType: !1629, size: 160, offset: 928)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2576, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2533, line: 141, baseType: !2601)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2533, line: 97, size: 256, elements: !2602)
!2602 = !{!2603}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2601, file: !2533, line: 107, baseType: !2604, size: 256)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2533, line: 98, size: 256, elements: !2605)
!2605 = !{!2606, !2611, !2616, !2621, !2626, !2631, !2636, !2641}
!2606 = !DIDerivedType(tag: DW_TAG_member, scope: !2604, file: !2533, line: 99, baseType: !2607, size: 32)
!2607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2604, file: !2533, line: 99, size: 32, elements: !2608)
!2608 = !{!2609, !2610}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2607, file: !2533, line: 99, baseType: !118, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2607, file: !2533, line: 99, baseType: !118, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, scope: !2604, file: !2533, line: 100, baseType: !2612, size: 32, offset: 32)
!2612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2604, file: !2533, line: 100, size: 32, elements: !2613)
!2613 = !{!2614, !2615}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2612, file: !2533, line: 100, baseType: !118, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2612, file: !2533, line: 100, baseType: !118, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, scope: !2604, file: !2533, line: 101, baseType: !2617, size: 32, offset: 64)
!2617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2604, file: !2533, line: 101, size: 32, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2617, file: !2533, line: 101, baseType: !118, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2617, file: !2533, line: 101, baseType: !118, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, scope: !2604, file: !2533, line: 102, baseType: !2622, size: 32, offset: 96)
!2622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2604, file: !2533, line: 102, size: 32, elements: !2623)
!2623 = !{!2624, !2625}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2622, file: !2533, line: 102, baseType: !118, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2622, file: !2533, line: 102, baseType: !118, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, scope: !2604, file: !2533, line: 103, baseType: !2627, size: 32, offset: 128)
!2627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2604, file: !2533, line: 103, size: 32, elements: !2628)
!2628 = !{!2629, !2630}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2627, file: !2533, line: 103, baseType: !118, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2627, file: !2533, line: 103, baseType: !118, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, scope: !2604, file: !2533, line: 104, baseType: !2632, size: 32, offset: 160)
!2632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2604, file: !2533, line: 104, size: 32, elements: !2633)
!2633 = !{!2634, !2635}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2632, file: !2533, line: 104, baseType: !118, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2632, file: !2533, line: 104, baseType: !118, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, scope: !2604, file: !2533, line: 105, baseType: !2637, size: 32, offset: 192)
!2637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2604, file: !2533, line: 105, size: 32, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2637, file: !2533, line: 105, baseType: !118, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2637, file: !2533, line: 105, baseType: !118, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2604, file: !2533, line: 106, baseType: !118, size: 32, offset: 224)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!2643 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2644, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1560, retainedTypes: !2645, splitDebugInlining: false, nameTableKind: None)
!2644 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2645 = !{!789, !763, !185, !118, !2646, !2663}
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2648)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2649)
!2649 = !{!2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2648, file: !533, line: 413, baseType: !1575, size: 256)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2648, file: !533, line: 414, baseType: !1577, size: 768, offset: 256)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2648, file: !533, line: 415, baseType: !1575, size: 256, offset: 1024)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2648, file: !533, line: 416, baseType: !1577, size: 768, offset: 1280)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2648, file: !533, line: 417, baseType: !1575, size: 256, offset: 2048)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2648, file: !533, line: 418, baseType: !1577, size: 768, offset: 2304)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2648, file: !533, line: 419, baseType: !1575, size: 256, offset: 3072)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2648, file: !533, line: 420, baseType: !1577, size: 768, offset: 3328)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2648, file: !533, line: 421, baseType: !1575, size: 256, offset: 4096)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2648, file: !533, line: 422, baseType: !1588, size: 1792, offset: 4352)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2648, file: !533, line: 423, baseType: !1592, size: 1920, offset: 6144)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2648, file: !533, line: 424, baseType: !1597, size: 20608, offset: 8064)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2648, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2665)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2666)
!2666 = !{!2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2665, file: !533, line: 447, baseType: !537, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2665, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2665, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2665, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2665, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2665, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2665, file: !533, line: 453, baseType: !1612, size: 96, offset: 192)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2665, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2665, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2665, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2665, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2665, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2665, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2665, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2665, file: !533, line: 461, baseType: !1621, size: 64, offset: 512)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2665, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2665, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2665, file: !533, line: 464, baseType: !1625, size: 128, offset: 640)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2665, file: !533, line: 465, baseType: !1627, size: 160, offset: 768)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2665, file: !533, line: 466, baseType: !1629, size: 160, offset: 928)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2665, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2689, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2690, splitDebugInlining: false, nameTableKind: None)
!2689 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2690 = !{!2691, !113, !119}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2693)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2694)
!2694 = !{!2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2693, file: !533, line: 447, baseType: !537, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2693, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2693, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2693, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2693, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2693, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2693, file: !533, line: 453, baseType: !1612, size: 96, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2693, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2693, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2693, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2693, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2693, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2693, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2693, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2693, file: !533, line: 461, baseType: !1621, size: 64, offset: 512)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2693, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2693, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2693, file: !533, line: 464, baseType: !1625, size: 128, offset: 640)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2693, file: !533, line: 465, baseType: !1627, size: 160, offset: 768)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2693, file: !533, line: 466, baseType: !1629, size: 160, offset: 928)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2693, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2717, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2718, splitDebugInlining: false, nameTableKind: None)
!2717 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2718 = !{!107, !106, !239, !987, !2719, !186, !113}
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!2721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2723, splitDebugInlining: false, nameTableKind: None)
!2722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2723 = !{!119, !113}
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2726, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2726 = !{!2727}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 510, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 477, size: 1216, elements: !2730)
!2730 = !{!2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2729, file: !310, line: 479, baseType: !314, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2729, file: !310, line: 480, baseType: !314, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2729, file: !310, line: 481, baseType: !314, size: 32, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2729, file: !310, line: 482, baseType: !314, size: 32, offset: 96)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2729, file: !310, line: 483, baseType: !314, size: 32, offset: 128)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2729, file: !310, line: 484, baseType: !314, size: 32, offset: 160)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2729, file: !310, line: 485, baseType: !851, size: 64, offset: 192)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2729, file: !310, line: 486, baseType: !314, size: 32, offset: 256)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2729, file: !310, line: 487, baseType: !314, size: 32, offset: 288)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2729, file: !310, line: 488, baseType: !851, size: 64, offset: 320)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2729, file: !310, line: 489, baseType: !314, size: 32, offset: 384)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2729, file: !310, line: 490, baseType: !314, size: 32, offset: 416)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2729, file: !310, line: 491, baseType: !851, size: 64, offset: 448)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2729, file: !310, line: 492, baseType: !314, size: 32, offset: 512)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2729, file: !310, line: 493, baseType: !314, size: 32, offset: 544)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2729, file: !310, line: 494, baseType: !851, size: 64, offset: 576)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2729, file: !310, line: 495, baseType: !314, size: 32, offset: 640)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2729, file: !310, line: 496, baseType: !314, size: 32, offset: 672)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2729, file: !310, line: 497, baseType: !851, size: 64, offset: 704)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2729, file: !310, line: 498, baseType: !314, size: 32, offset: 768)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2729, file: !310, line: 499, baseType: !314, size: 32, offset: 800)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2729, file: !310, line: 500, baseType: !851, size: 64, offset: 832)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2729, file: !310, line: 501, baseType: !314, size: 32, offset: 896)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2729, file: !310, line: 502, baseType: !314, size: 32, offset: 928)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2729, file: !310, line: 503, baseType: !851, size: 64, offset: 960)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2729, file: !310, line: 504, baseType: !314, size: 32, offset: 1024)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2729, file: !310, line: 505, baseType: !314, size: 32, offset: 1056)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2729, file: !310, line: 506, baseType: !118, size: 32, offset: 1088)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2729, file: !310, line: 507, baseType: !314, size: 32, offset: 1120)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2729, file: !310, line: 508, baseType: !314, size: 32, offset: 1152)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2729, file: !310, line: 509, baseType: !314, size: 32, offset: 1184)
!2762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2763 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2764 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2765, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2766, retainedTypes: !2782, splitDebugInlining: false, nameTableKind: None)
!2765 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2766 = !{!2767, !2774, !2778}
!2767 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2768, line: 38, baseType: !32, size: 32, elements: !2769)
!2768 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2769 = !{!2770, !2771, !2772, !2773}
!2770 = !DIEnumerator(name: "HAL_OK", value: 0)
!2771 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2772 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2773 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2774 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !828, line: 184, baseType: !32, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIEnumerator(name: "RESET", value: 0)
!2777 = !DIEnumerator(name: "SET", value: 1)
!2778 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !828, line: 190, baseType: !32, size: 32, elements: !2779)
!2779 = !{!2780, !2781}
!2780 = !DIEnumerator(name: "DISABLE", value: 0)
!2781 = !DIEnumerator(name: "ENABLE", value: 1)
!2782 = !{!113, !2783, !185, !118, !1469, !2818, !2824, !2835, !199, !2836, !120}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 510, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 477, size: 1216, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2785, file: !310, line: 479, baseType: !314, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2785, file: !310, line: 480, baseType: !314, size: 32, offset: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2785, file: !310, line: 481, baseType: !314, size: 32, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2785, file: !310, line: 482, baseType: !314, size: 32, offset: 96)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2785, file: !310, line: 483, baseType: !314, size: 32, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2785, file: !310, line: 484, baseType: !314, size: 32, offset: 160)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2785, file: !310, line: 485, baseType: !851, size: 64, offset: 192)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2785, file: !310, line: 486, baseType: !314, size: 32, offset: 256)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2785, file: !310, line: 487, baseType: !314, size: 32, offset: 288)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2785, file: !310, line: 488, baseType: !851, size: 64, offset: 320)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2785, file: !310, line: 489, baseType: !314, size: 32, offset: 384)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2785, file: !310, line: 490, baseType: !314, size: 32, offset: 416)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2785, file: !310, line: 491, baseType: !851, size: 64, offset: 448)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2785, file: !310, line: 492, baseType: !314, size: 32, offset: 512)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2785, file: !310, line: 493, baseType: !314, size: 32, offset: 544)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2785, file: !310, line: 494, baseType: !851, size: 64, offset: 576)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2785, file: !310, line: 495, baseType: !314, size: 32, offset: 640)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2785, file: !310, line: 496, baseType: !314, size: 32, offset: 672)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2785, file: !310, line: 497, baseType: !851, size: 64, offset: 704)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2785, file: !310, line: 498, baseType: !314, size: 32, offset: 768)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2785, file: !310, line: 499, baseType: !314, size: 32, offset: 800)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2785, file: !310, line: 500, baseType: !851, size: 64, offset: 832)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2785, file: !310, line: 501, baseType: !314, size: 32, offset: 896)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2785, file: !310, line: 502, baseType: !314, size: 32, offset: 928)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2785, file: !310, line: 503, baseType: !851, size: 64, offset: 960)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2785, file: !310, line: 504, baseType: !314, size: 32, offset: 1024)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2785, file: !310, line: 505, baseType: !314, size: 32, offset: 1056)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2785, file: !310, line: 506, baseType: !118, size: 32, offset: 1088)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2785, file: !310, line: 507, baseType: !314, size: 32, offset: 1120)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2785, file: !310, line: 508, baseType: !314, size: 32, offset: 1152)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2785, file: !310, line: 509, baseType: !314, size: 32, offset: 1184)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 471, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 467, size: 64, elements: !2821)
!2821 = !{!2822, !2823}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2820, file: !310, line: 469, baseType: !314, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2820, file: !310, line: 470, baseType: !314, size: 32, offset: 32)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 379, baseType: !2826)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 370, size: 224, elements: !2827)
!2827 = !{!2828, !2829, !2830, !2831, !2832, !2833, !2834}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2826, file: !310, line: 372, baseType: !314, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2826, file: !310, line: 373, baseType: !314, size: 32, offset: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2826, file: !310, line: 374, baseType: !314, size: 32, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2826, file: !310, line: 375, baseType: !314, size: 32, offset: 96)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2826, file: !310, line: 376, baseType: !314, size: 32, offset: 128)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2826, file: !310, line: 377, baseType: !314, size: 32, offset: 160)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2826, file: !310, line: 378, baseType: !314, size: 32, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 396, baseType: !2838)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 385, size: 320, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2838, file: !310, line: 387, baseType: !314, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2838, file: !310, line: 388, baseType: !314, size: 32, offset: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2838, file: !310, line: 389, baseType: !314, size: 32, offset: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2838, file: !310, line: 390, baseType: !314, size: 32, offset: 96)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2838, file: !310, line: 391, baseType: !314, size: 32, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2838, file: !310, line: 392, baseType: !314, size: 32, offset: 160)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2838, file: !310, line: 393, baseType: !314, size: 32, offset: 192)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2838, file: !310, line: 394, baseType: !314, size: 32, offset: 224)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2838, file: !310, line: 395, baseType: !1141, size: 64, offset: 256)
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2851, retainedTypes: !2852, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2851 = !{!827}
!2852 = !{!2853, !118, !2861, !2867, !2878}
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !2855)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !2856)
!2856 = !{!2857, !2858, !2859, !2860}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2855, file: !533, line: 766, baseType: !314, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2855, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2855, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2855, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 471, baseType: !2863)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 467, size: 64, elements: !2864)
!2864 = !{!2865, !2866}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2863, file: !310, line: 469, baseType: !314, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2863, file: !310, line: 470, baseType: !314, size: 32, offset: 32)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 379, baseType: !2869)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 370, size: 224, elements: !2870)
!2870 = !{!2871, !2872, !2873, !2874, !2875, !2876, !2877}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2869, file: !310, line: 372, baseType: !314, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2869, file: !310, line: 373, baseType: !314, size: 32, offset: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2869, file: !310, line: 374, baseType: !314, size: 32, offset: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2869, file: !310, line: 375, baseType: !314, size: 32, offset: 96)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2869, file: !310, line: 376, baseType: !314, size: 32, offset: 128)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2869, file: !310, line: 377, baseType: !314, size: 32, offset: 160)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2869, file: !310, line: 378, baseType: !314, size: 32, offset: 192)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 510, baseType: !2880)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 477, size: 1216, elements: !2881)
!2881 = !{!2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2880, file: !310, line: 479, baseType: !314, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2880, file: !310, line: 480, baseType: !314, size: 32, offset: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2880, file: !310, line: 481, baseType: !314, size: 32, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2880, file: !310, line: 482, baseType: !314, size: 32, offset: 96)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2880, file: !310, line: 483, baseType: !314, size: 32, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2880, file: !310, line: 484, baseType: !314, size: 32, offset: 160)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2880, file: !310, line: 485, baseType: !851, size: 64, offset: 192)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2880, file: !310, line: 486, baseType: !314, size: 32, offset: 256)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2880, file: !310, line: 487, baseType: !314, size: 32, offset: 288)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2880, file: !310, line: 488, baseType: !851, size: 64, offset: 320)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2880, file: !310, line: 489, baseType: !314, size: 32, offset: 384)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2880, file: !310, line: 490, baseType: !314, size: 32, offset: 416)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2880, file: !310, line: 491, baseType: !851, size: 64, offset: 448)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2880, file: !310, line: 492, baseType: !314, size: 32, offset: 512)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2880, file: !310, line: 493, baseType: !314, size: 32, offset: 544)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2880, file: !310, line: 494, baseType: !851, size: 64, offset: 576)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2880, file: !310, line: 495, baseType: !314, size: 32, offset: 640)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2880, file: !310, line: 496, baseType: !314, size: 32, offset: 672)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2880, file: !310, line: 497, baseType: !851, size: 64, offset: 704)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2880, file: !310, line: 498, baseType: !314, size: 32, offset: 768)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2880, file: !310, line: 499, baseType: !314, size: 32, offset: 800)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2880, file: !310, line: 500, baseType: !851, size: 64, offset: 832)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2880, file: !310, line: 501, baseType: !314, size: 32, offset: 896)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2880, file: !310, line: 502, baseType: !314, size: 32, offset: 928)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2880, file: !310, line: 503, baseType: !851, size: 64, offset: 960)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2880, file: !310, line: 504, baseType: !314, size: 32, offset: 1024)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2880, file: !310, line: 505, baseType: !314, size: 32, offset: 1056)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2880, file: !310, line: 506, baseType: !118, size: 32, offset: 1088)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2880, file: !310, line: 507, baseType: !314, size: 32, offset: 1120)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2880, file: !310, line: 508, baseType: !314, size: 32, offset: 1152)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2880, file: !310, line: 509, baseType: !314, size: 32, offset: 1184)
!2913 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2914, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2915, splitDebugInlining: false, nameTableKind: None)
!2914 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2915 = !{!113, !239}
!2916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2917, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2918, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2917 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2918 = !{!2919, !2926, !2416, !30}
!2919 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2920, line: 14, baseType: !32, size: 32, elements: !2921)
!2920 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2921 = !{!2922, !2923, !2924, !2925}
!2922 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2923 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2924 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2925 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2926 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2920, line: 42, baseType: !32, size: 32, elements: !2927)
!2927 = !{!2928, !2929, !2930, !2931, !2932, !2933}
!2928 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2929 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2930 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2931 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2932 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2933 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2934 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2935, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2935 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2938, splitDebugInlining: false, nameTableKind: None)
!2937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2938 = !{!22, !113, !119}
!2939 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2940, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2940 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!2941 = !{!"Ubuntu clang version 14.0.6"}
!2942 = !{i32 7, !"Dwarf Version", i32 4}
!2943 = !{i32 2, !"Debug Info Version", i32 3}
!2944 = !{i32 1, !"wchar_size", i32 4}
!2945 = !{i32 1, !"min_enum_size", i32 4}
!2946 = !{i32 1, !"branch-target-enforcement", i32 0}
!2947 = !{i32 1, !"sign-return-address", i32 0}
!2948 = !{i32 1, !"sign-return-address-all", i32 0}
!2949 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2950 = !{i32 7, !"frame-pointer", i32 2}
!2951 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2952, file: !2952, line: 26, type: !2953, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !2022)
!2952 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2953 = !DISubroutineType(types: !2954)
!2954 = !{null}
!2955 = !DILocation(line: 28, column: 1, scope: !2951)
!2956 = !{i64 2155037089, i64 2155037109, i64 2155037172}
!2957 = !DILocation(line: 29, column: 1, scope: !2951)
!2958 = !{i64 2155037504, i64 2155037524, i64 2155037587}
!2959 = !DILocation(line: 30, column: 1, scope: !2951)
!2960 = !{i64 2155037923, i64 2155037943, i64 2155038006}
!2961 = !DILocation(line: 31, column: 1, scope: !2951)
!2962 = !{i64 2155038342, i64 2155038362, i64 2155038425}
!2963 = !DILocation(line: 33, column: 1, scope: !2951)
!2964 = !{i64 2155038634, i64 2155038654, i64 2155038717}
!2965 = !DILocation(line: 35, column: 1, scope: !2951)
!2966 = !{i64 2155038959, i64 2155038979, i64 2155039042}
!2967 = !DILocation(line: 50, column: 1, scope: !2951)
!2968 = !{i64 2155039386, i64 2155039406, i64 2155039469}
!2969 = !DILocation(line: 54, column: 1, scope: !2951)
!2970 = !{i64 2155039825, i64 2155039845, i64 2155039908}
!2971 = !DILocation(line: 61, column: 1, scope: !2951)
!2972 = !{i64 2155040142, i64 2155040162, i64 2155040225}
!2973 = !DILocation(line: 63, column: 1, scope: !2951)
!2974 = !{i64 2155040522, i64 2155040542, i64 2155040605}
!2975 = !DILocation(line: 64, column: 1, scope: !2951)
!2976 = !{i64 2155041044, i64 2155041064, i64 2155041127}
!2977 = !DILocation(line: 65, column: 1, scope: !2951)
!2978 = !{i64 2155045603, i64 2155045623, i64 2155045686}
!2979 = !DILocation(line: 66, column: 1, scope: !2951)
!2980 = !{i64 2155046085, i64 2155046105, i64 2155046168}
!2981 = !DILocation(line: 67, column: 1, scope: !2951)
!2982 = !{i64 2155046592, i64 2155046612, i64 2155046675}
!2983 = !DILocation(line: 68, column: 1, scope: !2951)
!2984 = !{i64 2155047080, i64 2155047100, i64 2155047163}
!2985 = !DILocation(line: 70, column: 1, scope: !2951)
!2986 = !{i64 2155047548, i64 2155047568, i64 2155047631}
!2987 = !DILocation(line: 71, column: 1, scope: !2951)
!2988 = !{i64 2155047990, i64 2155048010, i64 2155048073}
!2989 = !DILocation(line: 72, column: 1, scope: !2951)
!2990 = !{i64 2155048448, i64 2155048468, i64 2155048531}
!2991 = !DILocation(line: 79, column: 1, scope: !2951)
!2992 = !{i64 2155048902, i64 2155048922, i64 2155048985}
!2993 = !DILocation(line: 80, column: 1, scope: !2951)
!2994 = !{i64 2155049413, i64 2155049433, i64 2155049496}
!2995 = !DILocation(line: 82, column: 1, scope: !2951)
!2996 = !{i64 2155049904, i64 2155049924, i64 2155049987}
!2997 = !DILocation(line: 97, column: 1, scope: !2951)
!2998 = !{i64 2155050241, i64 2155050261, i64 2155050324}
!2999 = !DILocation(line: 99, column: 1, scope: !2951)
!3000 = !{i64 2155050459, i64 2155050479, i64 2155050542}
!3001 = !DILocation(line: 102, column: 1, scope: !2951)
!3002 = !{i64 2155050716, i64 2155050736, i64 2155050799}
!3003 = !DILocation(line: 105, column: 1, scope: !2951)
!3004 = !{i64 2155050956, i64 2155050976, i64 2155051039}
!3005 = !DILocation(line: 115, column: 1, scope: !2951)
!3006 = !{i64 2155051295, i64 2155051315, i64 2155051378}
!3007 = !DILocation(line: 118, column: 1, scope: !2951)
!3008 = !{i64 2155051639, i64 2155051659, i64 2155051722}
!3009 = !DILocation(line: 32, column: 1, scope: !3010)
!3010 = !DILexicalBlockFile(scope: !2951, file: !3011, discriminator: 0)
!3011 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3012 = !{i64 2155051995, i64 2155052015, i64 2155052078}
!3013 = !DILocation(line: 33, column: 1, scope: !3010)
!3014 = !{i64 2155052507, i64 2155052527, i64 2155052590}
!3015 = !DILocation(line: 53, column: 1, scope: !3010)
!3016 = !{i64 2155053015, i64 2155053035, i64 2155053098}
!3017 = !DILocation(line: 54, column: 1, scope: !3010)
!3018 = !{i64 2155053433, i64 2155053453, i64 2155053516}
!3019 = !DILocation(line: 55, column: 1, scope: !3010)
!3020 = !{i64 2155053851, i64 2155053871, i64 2155053934}
!3021 = !DILocation(line: 56, column: 1, scope: !3010)
!3022 = !{i64 2155054269, i64 2155054289, i64 2155054352}
!3023 = !DILocation(line: 57, column: 1, scope: !3010)
!3024 = !{i64 2155054687, i64 2155054707, i64 2155054770}
!3025 = !DILocation(line: 58, column: 1, scope: !3010)
!3026 = !{i64 2155059166, i64 2155059186, i64 2155059249}
!3027 = !DILocation(line: 59, column: 1, scope: !3010)
!3028 = !{i64 2155059584, i64 2155059604, i64 2155059667}
!3029 = !DILocation(line: 60, column: 1, scope: !3010)
!3030 = !{i64 2155060008, i64 2155060028, i64 2155060091}
!3031 = !DILocation(line: 61, column: 1, scope: !3010)
!3032 = !{i64 2155060325, i64 2155060345, i64 2155060408}
!3033 = !DILocation(line: 70, column: 1, scope: !3010)
!3034 = !{i64 2155060554, i64 2155060574, i64 2155060637}
!3035 = !DILocation(line: 72, column: 1, scope: !3010)
!3036 = !{i64 2155060886, i64 2155060906, i64 2155060969}
!3037 = !DILocation(line: 73, column: 1, scope: !3010)
!3038 = !{i64 2155061336, i64 2155061356, i64 2155061419}
!3039 = !DILocation(line: 74, column: 1, scope: !3010)
!3040 = !{i64 2155061786, i64 2155061806, i64 2155061869}
!3041 = !DILocation(line: 75, column: 1, scope: !3010)
!3042 = !{i64 2155062236, i64 2155062256, i64 2155062319}
!3043 = !DILocation(line: 76, column: 1, scope: !3010)
!3044 = !{i64 2155062686, i64 2155062706, i64 2155062769}
!3045 = !DILocation(line: 77, column: 1, scope: !3010)
!3046 = !{i64 2155063136, i64 2155063156, i64 2155063219}
!3047 = !DILocation(line: 78, column: 1, scope: !3010)
!3048 = !{i64 2155063586, i64 2155063606, i64 2155063669}
!3049 = !DILocation(line: 79, column: 1, scope: !3010)
!3050 = !{i64 2155064036, i64 2155064056, i64 2155064119}
!3051 = !DILocation(line: 80, column: 1, scope: !3010)
!3052 = !{i64 2155064489, i64 2155064509, i64 2155064572}
!3053 = !DILocation(line: 84, column: 1, scope: !3010)
!3054 = !{i64 2155064821, i64 2155064841, i64 2155064904}
!3055 = !DILocation(line: 91, column: 1, scope: !3010)
!3056 = !{i64 2155065218, i64 2155065238, i64 2155065301}
!3057 = !DILocation(line: 93, column: 1, scope: !3010)
!3058 = !{i64 2155065585, i64 2155065605, i64 2155065668}
!3059 = !DILocation(line: 106, column: 1, scope: !3010)
!3060 = !{i64 2155065855, i64 2155065875, i64 2155065938}
!3061 = !DILocation(line: 11, column: 1, scope: !3062)
!3062 = !DILexicalBlockFile(scope: !2951, file: !3063, discriminator: 0)
!3063 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3064 = distinct !DISubprogram(name: "test_thread", scope: !125, file: !125, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3065)
!3065 = !{!3066, !3067, !3068, !3069, !3070, !3071, !3075, !3076, !3077, !3078, !3082}
!3066 = !DILocalVariable(name: "arg1", arg: 1, scope: !3064, file: !125, line: 33, type: !113)
!3067 = !DILocalVariable(name: "arg2", arg: 2, scope: !3064, file: !125, line: 33, type: !113)
!3068 = !DILocalVariable(name: "arg3", arg: 3, scope: !3064, file: !125, line: 33, type: !113)
!3069 = !DILocalVariable(name: "counter", scope: !3064, file: !125, line: 35, type: !102)
!3070 = !DILocalVariable(name: "buffer", scope: !3064, file: !125, line: 36, type: !106)
!3071 = !DILocalVariable(name: "array", scope: !3064, file: !125, line: 52, type: !3072)
!3072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 26912, elements: !3073)
!3073 = !{!3074}
!3074 = !DISubrange(count: 841)
!3075 = !DILocalVariable(name: "carry", scope: !3064, file: !125, line: 53, type: !119)
!3076 = !DILocalVariable(name: "i", scope: !3064, file: !125, line: 54, type: !119)
!3077 = !DILocalVariable(name: "j", scope: !3064, file: !125, line: 54, type: !119)
!3078 = !DILocalVariable(name: "sum", scope: !3079, file: !125, line: 61, type: !119)
!3079 = distinct !DILexicalBlock(scope: !3080, file: !125, line: 60, column: 35)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !125, line: 60, column: 2)
!3081 = distinct !DILexicalBlock(scope: !3064, file: !125, line: 60, column: 2)
!3082 = !DILocalVariable(name: "value", scope: !3079, file: !125, line: 61, type: !119)
!3083 = !DILocation(line: 0, scope: !3064)
!3084 = !DILocation(line: 52, column: 2, scope: !3064)
!3085 = !DILocation(line: 52, column: 6, scope: !3064)
!3086 = !DILocation(line: 56, column: 2, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3064, file: !125, line: 56, column: 2)
!3088 = !DILocation(line: 57, column: 3, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3090, file: !125, line: 56, column: 31)
!3090 = distinct !DILexicalBlock(scope: !3087, file: !125, line: 56, column: 2)
!3091 = !DILocation(line: 57, column: 12, scope: !3089)
!3092 = !DILocation(line: 56, column: 27, scope: !3090)
!3093 = !DILocation(line: 56, column: 16, scope: !3090)
!3094 = distinct !{!3094, !3086, !3095}
!3095 = !DILocation(line: 58, column: 2, scope: !3087)
!3096 = !DILocation(line: 0, scope: !3079)
!3097 = !DILocation(line: 63, column: 3, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3079, file: !125, line: 63, column: 3)
!3099 = !DILocation(line: 64, column: 14, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3101, file: !125, line: 63, column: 27)
!3101 = distinct !DILexicalBlock(scope: !3098, file: !125, line: 63, column: 3)
!3102 = !DILocation(line: 64, column: 31, scope: !3100)
!3103 = !DILocation(line: 64, column: 29, scope: !3100)
!3104 = !DILocation(line: 64, column: 18, scope: !3100)
!3105 = !DILocation(line: 65, column: 24, scope: !3100)
!3106 = !DILocation(line: 65, column: 28, scope: !3100)
!3107 = !DILocation(line: 66, column: 8, scope: !3100)
!3108 = !DILocation(line: 65, column: 13, scope: !3100)
!3109 = !DILocation(line: 63, column: 22, scope: !3101)
!3110 = !DILocation(line: 63, column: 17, scope: !3101)
!3111 = distinct !{!3111, !3097, !3112}
!3112 = !DILocation(line: 67, column: 3, scope: !3098)
!3113 = !DILocation(line: 69, column: 23, scope: !3079)
!3114 = !DILocation(line: 69, column: 17, scope: !3079)
!3115 = !DILocation(line: 73, column: 3, scope: !3079)
!3116 = !DILocation(line: 74, column: 10, scope: !3079)
!3117 = !DILocation(line: 60, column: 28, scope: !3080)
!3118 = !DILocation(line: 60, column: 21, scope: !3080)
!3119 = !DILocation(line: 60, column: 2, scope: !3081)
!3120 = distinct !{!3120, !3119, !3121}
!3121 = !DILocation(line: 75, column: 2, scope: !3081)
!3122 = !DILocation(line: 35, column: 22, scope: !3064)
!3123 = !DILocation(line: 77, column: 2, scope: !3064)
!3124 = !DILocation(line: 78, column: 1, scope: !3064)
!3125 = distinct !DISubprogram(name: "atomic_dec", scope: !3126, file: !3126, line: 141, type: !3127, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3130)
!3126 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!3129, !102}
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !104, line: 23, baseType: !103)
!3130 = !{!3131}
!3131 = !DILocalVariable(name: "target", arg: 1, scope: !3125, file: !3126, line: 141, type: !102)
!3132 = !DILocation(line: 0, scope: !3125)
!3133 = !DILocation(line: 143, column: 9, scope: !3125)
!3134 = !DILocation(line: 143, column: 2, scope: !3125)
!3135 = distinct !DISubprogram(name: "atomic_sub", scope: !3126, file: !3126, line: 105, type: !3136, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3138)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!3129, !102, !3129}
!3138 = !{!3139, !3140}
!3139 = !DILocalVariable(name: "target", arg: 1, scope: !3135, file: !3126, line: 105, type: !102)
!3140 = !DILocalVariable(name: "value", arg: 2, scope: !3135, file: !3126, line: 105, type: !3129)
!3141 = !DILocation(line: 0, scope: !3135)
!3142 = !DILocation(line: 107, column: 9, scope: !3135)
!3143 = !DILocation(line: 107, column: 2, scope: !3135)
!3144 = distinct !DISubprogram(name: "main", scope: !125, file: !125, line: 80, type: !2953, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3145)
!3145 = !{!3146, !3147, !3148, !3149, !3150}
!3146 = !DILocalVariable(name: "start_time", scope: !3144, file: !125, line: 82, type: !118)
!3147 = !DILocalVariable(name: "stop_time", scope: !3144, file: !125, line: 82, type: !118)
!3148 = !DILocalVariable(name: "cycles_spent", scope: !3144, file: !125, line: 82, type: !118)
!3149 = !DILocalVariable(name: "nanoseconds_spent", scope: !3144, file: !125, line: 82, type: !118)
!3150 = !DILocalVariable(name: "i", scope: !3144, file: !125, line: 83, type: !119)
!3151 = !DILocation(line: 85, column: 2, scope: !3144)
!3152 = !DILocation(line: 89, column: 15, scope: !3144)
!3153 = !DILocation(line: 0, scope: !3144)
!3154 = !DILocation(line: 91, column: 2, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3144, file: !125, line: 91, column: 2)
!3156 = !DILocation(line: 99, column: 9, scope: !3144)
!3157 = !DILocation(line: 99, column: 2, scope: !3144)
!3158 = !DILocation(line: 92, column: 20, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !125, line: 91, column: 36)
!3160 = distinct !DILexicalBlock(scope: !3155, file: !125, line: 91, column: 2)
!3161 = !DILocation(line: 92, column: 32, scope: !3159)
!3162 = !DILocation(line: 94, column: 37, scope: !3159)
!3163 = !DILocation(line: 92, column: 3, scope: !3159)
!3164 = !DILocation(line: 91, column: 32, scope: !3160)
!3165 = !DILocation(line: 91, column: 16, scope: !3160)
!3166 = distinct !{!3166, !3154, !3167}
!3167 = !DILocation(line: 96, column: 2, scope: !3155)
!3168 = !DILocation(line: 100, column: 3, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3144, file: !125, line: 99, column: 18)
!3170 = distinct !{!3170, !3157, !3171}
!3171 = !DILocation(line: 101, column: 2, scope: !3144)
!3172 = !DILocation(line: 104, column: 14, scope: !3144)
!3173 = !DILocation(line: 109, column: 2, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3144, file: !125, line: 109, column: 2)
!3175 = !DILocation(line: 110, column: 56, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3177, file: !125, line: 109, column: 36)
!3177 = distinct !DILexicalBlock(scope: !3174, file: !125, line: 109, column: 2)
!3178 = !DILocation(line: 110, column: 3, scope: !3176)
!3179 = !DILocation(line: 109, column: 32, scope: !3177)
!3180 = !DILocation(line: 109, column: 16, scope: !3177)
!3181 = distinct !{!3181, !3173, !3182}
!3182 = !DILocation(line: 111, column: 2, scope: !3174)
!3183 = !DILocation(line: 106, column: 27, scope: !3144)
!3184 = !DILocation(line: 107, column: 52, scope: !3144)
!3185 = !DILocation(line: 107, column: 32, scope: !3144)
!3186 = !DILocation(line: 107, column: 22, scope: !3144)
!3187 = !DILocation(line: 114, column: 45, scope: !3144)
!3188 = !DILocation(line: 113, column: 2, scope: !3144)
!3189 = !DILocation(line: 115, column: 1, scope: !3144)
!3190 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3191, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2022)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!118}
!3193 = !DILocation(line: 1677, column: 9, scope: !3190)
!3194 = !DILocation(line: 1677, column: 2, scope: !3190)
!3195 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3196, file: !3196, line: 403, type: !3197, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3199)
!3196 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3197 = !DISubroutineType(types: !3198)
!3198 = !{!120, !120}
!3199 = !{!3200}
!3200 = !DILocalVariable(name: "t", arg: 1, scope: !3195, file: !3196, line: 403, type: !120)
!3201 = !DILocation(line: 0, scope: !3195)
!3202 = !DILocation(line: 406, column: 2, scope: !3195)
!3203 = distinct !DISubprogram(name: "k_thread_create", scope: !3204, file: !3204, line: 24, type: !3205, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3215)
!3204 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!3205 = !DISubroutineType(types: !3206)
!3206 = !{!3207, !3208, !3209, !239, !108, !113, !113, !113, !119, !118, !3211}
!3207 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !3208)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3210 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !127)
!3211 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !3212)
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !3213)
!3213 = !{!3214}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3212, file: !115, line: 66, baseType: !114, size: 64)
!3215 = !{!3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225}
!3216 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3203, file: !3204, line: 24, type: !3208)
!3217 = !DILocalVariable(name: "stack", arg: 2, scope: !3203, file: !3204, line: 24, type: !3209)
!3218 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3203, file: !3204, line: 24, type: !239)
!3219 = !DILocalVariable(name: "entry", arg: 4, scope: !3203, file: !3204, line: 24, type: !108)
!3220 = !DILocalVariable(name: "p1", arg: 5, scope: !3203, file: !3204, line: 24, type: !113)
!3221 = !DILocalVariable(name: "p2", arg: 6, scope: !3203, file: !3204, line: 24, type: !113)
!3222 = !DILocalVariable(name: "p3", arg: 7, scope: !3203, file: !3204, line: 24, type: !113)
!3223 = !DILocalVariable(name: "prio", arg: 8, scope: !3203, file: !3204, line: 24, type: !119)
!3224 = !DILocalVariable(name: "options", arg: 9, scope: !3203, file: !3204, line: 24, type: !118)
!3225 = !DILocalVariable(name: "delay", arg: 10, scope: !3203, file: !3204, line: 24, type: !3211)
!3226 = !DILocation(line: 0, scope: !3203)
!3227 = !DILocation(line: 49, column: 2, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3203, file: !3204, line: 49, column: 2)
!3229 = !{i64 2154747523}
!3230 = !DILocation(line: 50, column: 9, scope: !3203)
!3231 = !DILocation(line: 50, column: 2, scope: !3203)
!3232 = distinct !DISubprogram(name: "k_sleep", scope: !3204, file: !3204, line: 91, type: !3233, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3235)
!3233 = !DISubroutineType(types: !3234)
!3234 = !{!763, !3211}
!3235 = !{!3236}
!3236 = !DILocalVariable(name: "timeout", arg: 1, scope: !3232, file: !3204, line: 91, type: !3211)
!3237 = !DILocation(line: 0, scope: !3232)
!3238 = !DILocation(line: 99, column: 2, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3232, file: !3204, line: 99, column: 2)
!3240 = !{i64 2154747727}
!3241 = !DILocation(line: 100, column: 9, scope: !3232)
!3242 = !DILocation(line: 100, column: 2, scope: !3232)
!3243 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !3196, file: !3196, line: 935, type: !3197, scopeLine: 936, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3244)
!3244 = !{!3245}
!3245 = !DILocalVariable(name: "t", arg: 1, scope: !3243, file: !3196, line: 935, type: !120)
!3246 = !DILocation(line: 0, scope: !3243)
!3247 = !DILocalVariable(name: "t", arg: 1, scope: !3248, file: !3196, line: 102, type: !120)
!3248 = distinct !DISubprogram(name: "z_tmcvt", scope: !3196, file: !3196, line: 102, type: !3249, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3251)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{!120, !120, !118, !118, !345, !345, !345, !345}
!3251 = !{!3247, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261}
!3252 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3248, file: !3196, line: 102, type: !118)
!3253 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3248, file: !3196, line: 103, type: !118)
!3254 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3248, file: !3196, line: 103, type: !345)
!3255 = !DILocalVariable(name: "result32", arg: 5, scope: !3248, file: !3196, line: 104, type: !345)
!3256 = !DILocalVariable(name: "round_up", arg: 6, scope: !3248, file: !3196, line: 104, type: !345)
!3257 = !DILocalVariable(name: "round_off", arg: 7, scope: !3248, file: !3196, line: 105, type: !345)
!3258 = !DILocalVariable(name: "mul_ratio", scope: !3248, file: !3196, line: 107, type: !345)
!3259 = !DILocalVariable(name: "div_ratio", scope: !3248, file: !3196, line: 109, type: !345)
!3260 = !DILocalVariable(name: "off", scope: !3248, file: !3196, line: 116, type: !120)
!3261 = !DILocalVariable(name: "rdivisor", scope: !3262, file: !3196, line: 119, type: !118)
!3262 = distinct !DILexicalBlock(scope: !3263, file: !3196, line: 118, column: 18)
!3263 = distinct !DILexicalBlock(scope: !3248, file: !3196, line: 118, column: 6)
!3264 = !DILocation(line: 0, scope: !3248, inlinedAt: !3265)
!3265 = distinct !DILocation(line: 938, column: 9, scope: !3243)
!3266 = !DILocation(line: 161, column: 14, scope: !3267, inlinedAt: !3265)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !3196, line: 157, column: 10)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !3196, line: 150, column: 14)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !3196, line: 148, column: 7)
!3270 = distinct !DILexicalBlock(scope: !3271, file: !3196, line: 147, column: 9)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !3196, line: 141, column: 13)
!3272 = distinct !DILexicalBlock(scope: !3248, file: !3196, line: 134, column: 6)
!3273 = !DILocation(line: 161, column: 25, scope: !3267, inlinedAt: !3265)
!3274 = !DILocation(line: 161, column: 50, scope: !3267, inlinedAt: !3265)
!3275 = !DILocation(line: 161, column: 65, scope: !3267, inlinedAt: !3265)
!3276 = !DILocation(line: 161, column: 33, scope: !3267, inlinedAt: !3265)
!3277 = !DILocation(line: 938, column: 2, scope: !3243)
!3278 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3279, file: !3279, line: 24, type: !3191, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2022)
!3279 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3280 = !DILocation(line: 26, column: 9, scope: !3278)
!3281 = !DILocation(line: 26, column: 2, scope: !3278)
!3282 = distinct !DISubprogram(name: "cbvprintf_package", scope: !286, file: !286, line: 233, type: !3283, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3292)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!119, !113, !239, !118, !278, !3285}
!3285 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3286, line: 99, baseType: !3287)
!3286 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3286, line: 40, baseType: !3288)
!3288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3289)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3290)
!3290 = !{!3291}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3289, file: !286, line: 18, baseType: !113, size: 32)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3328, !3337, !3340, !3341, !3344, !3347, !3350, !3353, !3359}
!3293 = !DILocalVariable(name: "packaged", arg: 1, scope: !3282, file: !286, line: 233, type: !113)
!3294 = !DILocalVariable(name: "len", arg: 2, scope: !3282, file: !286, line: 233, type: !239)
!3295 = !DILocalVariable(name: "flags", arg: 3, scope: !3282, file: !286, line: 233, type: !118)
!3296 = !DILocalVariable(name: "fmt", arg: 4, scope: !3282, file: !286, line: 234, type: !278)
!3297 = !DILocalVariable(name: "ap", arg: 5, scope: !3282, file: !286, line: 234, type: !3285)
!3298 = !DILocalVariable(name: "buf0", scope: !3282, file: !286, line: 247, type: !284)
!3299 = !DILocalVariable(name: "buf", scope: !3282, file: !286, line: 248, type: !284)
!3300 = !DILocalVariable(name: "size", scope: !3282, file: !286, line: 249, type: !32)
!3301 = !DILocalVariable(name: "align", scope: !3282, file: !286, line: 250, type: !32)
!3302 = !DILocalVariable(name: "str_ptr_pos", scope: !3282, file: !286, line: 251, type: !3303)
!3303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !267)
!3304 = !DILocalVariable(name: "str_ptr_arg", scope: !3282, file: !286, line: 252, type: !3303)
!3305 = !DILocalVariable(name: "s_idx", scope: !3282, file: !286, line: 253, type: !32)
!3306 = !DILocalVariable(name: "s_rw_cnt", scope: !3282, file: !286, line: 254, type: !32)
!3307 = !DILocalVariable(name: "s_ro_cnt", scope: !3282, file: !286, line: 255, type: !32)
!3308 = !DILocalVariable(name: "arg_idx", scope: !3282, file: !286, line: 256, type: !119)
!3309 = !DILocalVariable(name: "i", scope: !3282, file: !286, line: 257, type: !32)
!3310 = !DILocalVariable(name: "s", scope: !3282, file: !286, line: 258, type: !278)
!3311 = !DILocalVariable(name: "parsing", scope: !3282, file: !286, line: 259, type: !345)
!3312 = !DILocalVariable(name: "rws_pos_en", scope: !3282, file: !286, line: 263, type: !345)
!3313 = !DILocalVariable(name: "fros_cnt", scope: !3282, file: !286, line: 268, type: !119)
!3314 = !DILocalVariable(name: "is_str_arg", scope: !3282, file: !286, line: 269, type: !345)
!3315 = !DILocalVariable(name: "pkg_hdr", scope: !3282, file: !286, line: 270, type: !3316)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 32)
!3317 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3318, line: 78, size: 32, elements: !3319)
!3318 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3319 = !{!3320, !3327}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3317, file: !3318, line: 80, baseType: !3321, size: 32)
!3321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3318, line: 45, size: 32, elements: !3322)
!3322 = !{!3323, !3324, !3325, !3326}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3321, file: !3318, line: 47, baseType: !185, size: 8)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3321, file: !3318, line: 50, baseType: !185, size: 8, offset: 8)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3321, file: !3318, line: 53, baseType: !185, size: 8, offset: 16)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3321, file: !3318, line: 56, baseType: !185, size: 8, offset: 24)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3317, file: !3318, line: 82, baseType: !113, size: 32)
!3328 = !DILocalVariable(name: "v", scope: !3329, file: !286, line: 567, type: !3333)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !286, line: 562, column: 14)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !286, line: 481, column: 18)
!3331 = distinct !DILexicalBlock(scope: !3332, file: !286, line: 466, column: 3)
!3332 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 343, column: 15)
!3333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3282, file: !286, line: 567, size: 64, elements: !3334)
!3334 = !{!3335, !3336}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3333, file: !286, line: 567, baseType: !276, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3333, file: !286, line: 567, baseType: !274, size: 64)
!3337 = !DILocalVariable(name: "is_ro", scope: !3338, file: !286, line: 620, type: !345)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !286, line: 613, column: 19)
!3339 = distinct !DILexicalBlock(scope: !3332, file: !286, line: 613, column: 7)
!3340 = !DILocalVariable(name: "do_ro", scope: !3338, file: !286, line: 621, type: !345)
!3341 = !DILocalVariable(name: "s_ptr_idx", scope: !3342, file: !286, line: 626, type: !118)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !286, line: 625, column: 11)
!3343 = distinct !DILexicalBlock(scope: !3338, file: !286, line: 623, column: 8)
!3344 = !DILocalVariable(name: "v", scope: !3345, file: !286, line: 684, type: !119)
!3345 = distinct !DILexicalBlock(scope: !3346, file: !286, line: 683, column: 35)
!3346 = distinct !DILexicalBlock(scope: !3339, file: !286, line: 683, column: 14)
!3347 = !DILocalVariable(name: "v", scope: !3348, file: !286, line: 691, type: !105)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !286, line: 690, column: 36)
!3349 = distinct !DILexicalBlock(scope: !3346, file: !286, line: 690, column: 14)
!3350 = !DILocalVariable(name: "v", scope: !3351, file: !286, line: 698, type: !117)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !286, line: 697, column: 41)
!3352 = distinct !DILexicalBlock(scope: !3349, file: !286, line: 697, column: 14)
!3353 = !DILocalVariable(name: "pos", scope: !3354, file: !286, line: 762, type: !185)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !286, line: 757, column: 31)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !286, line: 757, column: 3)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !286, line: 757, column: 3)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !286, line: 756, column: 16)
!3358 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 756, column: 6)
!3359 = !DILabel(scope: !3338, name: "process_string", file: !286, line: 615)
!3360 = !DILocation(line: 0, scope: !3282)
!3361 = !DILocation(line: 251, column: 2, scope: !3282)
!3362 = !DILocation(line: 251, column: 10, scope: !3282)
!3363 = !DILocation(line: 252, column: 2, scope: !3282)
!3364 = !DILocation(line: 252, column: 10, scope: !3282)
!3365 = !DILocation(line: 263, column: 29, scope: !3282)
!3366 = !DILocation(line: 263, column: 21, scope: !3282)
!3367 = !DILocation(line: 268, column: 21, scope: !3282)
!3368 = !DILocation(line: 268, column: 19, scope: !3282)
!3369 = !DILocation(line: 273, column: 6, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 273, column: 6)
!3371 = !DILocation(line: 273, column: 26, scope: !3370)
!3372 = !DILocation(line: 273, column: 6, scope: !3282)
!3373 = !DILocation(line: 297, column: 6, scope: !3282)
!3374 = !DILocation(line: 305, column: 11, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 305, column: 6)
!3376 = !DILocation(line: 305, column: 6, scope: !3282)
!3377 = !DILocation(line: 327, column: 19, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 327, column: 6)
!3379 = !DILocation(line: 327, column: 22, scope: !3378)
!3380 = !DILocation(line: 327, column: 33, scope: !3378)
!3381 = !DILocation(line: 327, column: 50, scope: !3378)
!3382 = !DILocation(line: 327, column: 6, scope: !3282)
!3383 = !DILocation(line: 338, column: 9, scope: !3282)
!3384 = !DILocation(line: 341, column: 2, scope: !3282)
!3385 = !DILocation(line: 472, column: 8, scope: !3331)
!3386 = !DILocation(line: 473, column: 14, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !286, line: 473, column: 9)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !286, line: 472, column: 18)
!3389 = distinct !DILexicalBlock(scope: !3331, file: !286, line: 472, column: 8)
!3390 = !DILocation(line: 473, column: 9, scope: !3388)
!3391 = !DILocation(line: 479, column: 5, scope: !3388)
!3392 = !DILocation(line: 468, column: 9, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3331, file: !286, line: 468, column: 8)
!3394 = !DILocation(line: 468, column: 8, scope: !3393)
!3395 = !DILocation(line: 468, column: 15, scope: !3393)
!3396 = !DILocation(line: 468, column: 8, scope: !3331)
!3397 = distinct !{!3397, !3398, !3399}
!3398 = !DILocation(line: 343, column: 2, scope: !3282)
!3399 = !DILocation(line: 712, column: 2, scope: !3282)
!3400 = !DILocation(line: 481, column: 4, scope: !3331)
!3401 = !DILocation(line: 484, column: 12, scope: !3330)
!3402 = !DILocation(line: 485, column: 5, scope: !3330)
!3403 = !DILocation(line: 505, column: 5, scope: !3330)
!3404 = !DILocation(line: 518, column: 5, scope: !3330)
!3405 = !DILocation(line: 523, column: 5, scope: !3330)
!3406 = !DILocation(line: 532, column: 9, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3330, file: !286, line: 532, column: 9)
!3408 = !DILocation(line: 532, column: 17, scope: !3407)
!3409 = !DILocation(line: 532, column: 9, scope: !3330)
!3410 = !DILocation(line: 533, column: 10, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !286, line: 533, column: 10)
!3412 = distinct !DILexicalBlock(scope: !3407, file: !286, line: 532, column: 25)
!3413 = !DILocation(line: 533, column: 18, scope: !3411)
!3414 = !DILocation(line: 0, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3329, file: !286, line: 569, column: 9)
!3416 = !DILocation(line: 0, scope: !3329)
!3417 = !DILocation(line: 579, column: 20, scope: !3329)
!3418 = !DILocation(line: 579, column: 11, scope: !3329)
!3419 = !DILocation(line: 580, column: 9, scope: !3329)
!3420 = !DILocation(line: 582, column: 21, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !286, line: 582, column: 10)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !286, line: 580, column: 23)
!3423 = distinct !DILexicalBlock(scope: !3329, file: !286, line: 580, column: 9)
!3424 = !DILocation(line: 582, column: 28, scope: !3421)
!3425 = !DILocation(line: 582, column: 10, scope: !3422)
!3426 = !DILocation(line: 0, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !286, line: 587, column: 17)
!3428 = distinct !DILexicalBlock(scope: !3422, file: !286, line: 585, column: 10)
!3429 = !DILocation(line: 593, column: 9, scope: !3329)
!3430 = !DILocation(line: 600, column: 5, scope: !3330)
!3431 = !DILocation(line: 605, column: 18, scope: !3332)
!3432 = !DILocation(line: 605, column: 9, scope: !3332)
!3433 = !DILocation(line: 608, column: 20, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3332, file: !286, line: 608, column: 7)
!3435 = !DILocation(line: 608, column: 23, scope: !3434)
!3436 = !DILocation(line: 608, column: 34, scope: !3434)
!3437 = !DILocation(line: 608, column: 41, scope: !3434)
!3438 = !DILocation(line: 608, column: 7, scope: !3332)
!3439 = !DILocation(line: 613, column: 7, scope: !3332)
!3440 = !DILocation(line: 614, column: 8, scope: !3338)
!3441 = !DILocation(line: 614, column: 4, scope: !3338)
!3442 = !DILocation(line: 256, column: 6, scope: !3282)
!3443 = !DILocation(line: 254, column: 15, scope: !3282)
!3444 = !DILocation(line: 320, column: 7, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3375, file: !286, line: 305, column: 20)
!3446 = !DILocation(line: 615, column: 1, scope: !3338)
!3447 = !DILocation(line: 616, column: 8, scope: !3338)
!3448 = !DILocation(line: 617, column: 5, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !286, line: 616, column: 22)
!3450 = distinct !DILexicalBlock(scope: !3338, file: !286, line: 616, column: 8)
!3451 = !DILocation(line: 617, column: 25, scope: !3449)
!3452 = !DILocation(line: 618, column: 4, scope: !3449)
!3453 = !DILocation(line: 620, column: 26, scope: !3338)
!3454 = !DILocation(line: 620, column: 29, scope: !3338)
!3455 = !DILocation(line: 620, column: 17, scope: !3338)
!3456 = !DILocation(line: 620, column: 43, scope: !3338)
!3457 = !DILocation(line: 0, scope: !3338)
!3458 = !DILocation(line: 623, column: 14, scope: !3343)
!3459 = !DILocation(line: 626, column: 26, scope: !3342)
!3460 = !DILocation(line: 626, column: 37, scope: !3342)
!3461 = !DILocation(line: 0, scope: !3342)
!3462 = !DILocation(line: 634, column: 15, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3342, file: !286, line: 634, column: 9)
!3464 = !DILocation(line: 635, column: 6, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !286, line: 635, column: 6)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !286, line: 635, column: 6)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !286, line: 635, column: 6)
!3468 = distinct !DILexicalBlock(scope: !3463, file: !286, line: 634, column: 44)
!3469 = !DILocation(line: 639, column: 15, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3342, file: !286, line: 639, column: 9)
!3471 = !DILocation(line: 639, column: 9, scope: !3342)
!3472 = !DILocation(line: 640, column: 6, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !286, line: 640, column: 6)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !286, line: 640, column: 6)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !286, line: 640, column: 6)
!3476 = distinct !DILexicalBlock(scope: !3470, file: !286, line: 639, column: 43)
!3477 = !DILocation(line: 644, column: 9, scope: !3342)
!3478 = !DILocation(line: 649, column: 27, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !286, line: 644, column: 23)
!3480 = distinct !DILexicalBlock(scope: !3342, file: !286, line: 644, column: 9)
!3481 = !DILocation(line: 649, column: 6, scope: !3479)
!3482 = !DILocation(line: 649, column: 25, scope: !3479)
!3483 = !DILocation(line: 650, column: 27, scope: !3479)
!3484 = !DILocation(line: 650, column: 6, scope: !3479)
!3485 = !DILocation(line: 650, column: 25, scope: !3479)
!3486 = !DILocation(line: 651, column: 10, scope: !3479)
!3487 = !DILocation(line: 653, column: 26, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !286, line: 651, column: 17)
!3489 = distinct !DILexicalBlock(scope: !3479, file: !286, line: 651, column: 10)
!3490 = !DILocation(line: 654, column: 15, scope: !3488)
!3491 = !DILocation(line: 655, column: 6, scope: !3488)
!3492 = !DILocation(line: 656, column: 15, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3489, file: !286, line: 655, column: 13)
!3494 = !DILocation(line: 658, column: 16, scope: !3480)
!3495 = !DILocation(line: 663, column: 10, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !286, line: 658, column: 23)
!3497 = distinct !DILexicalBlock(scope: !3480, file: !286, line: 658, column: 16)
!3498 = !DILocation(line: 664, column: 5, scope: !3496)
!3499 = !DILocation(line: 664, column: 16, scope: !3497)
!3500 = !DILocation(line: 669, column: 10, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !286, line: 664, column: 28)
!3502 = distinct !DILexicalBlock(scope: !3497, file: !286, line: 664, column: 16)
!3503 = !DILocation(line: 670, column: 5, scope: !3501)
!3504 = !DILocation(line: 675, column: 13, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3502, file: !286, line: 670, column: 12)
!3506 = !DILocation(line: 675, column: 27, scope: !3505)
!3507 = !DILocation(line: 675, column: 10, scope: !3505)
!3508 = !DILocation(line: 678, column: 10, scope: !3342)
!3509 = !DILocation(line: 680, column: 8, scope: !3338)
!3510 = !DILocation(line: 683, column: 14, scope: !3339)
!3511 = !DILocation(line: 684, column: 12, scope: !3345)
!3512 = !DILocation(line: 0, scope: !3345)
!3513 = !DILocation(line: 686, column: 8, scope: !3345)
!3514 = !DILocation(line: 687, column: 5, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !286, line: 686, column: 22)
!3516 = distinct !DILexicalBlock(scope: !3345, file: !286, line: 686, column: 8)
!3517 = !DILocation(line: 687, column: 17, scope: !3515)
!3518 = !DILocation(line: 688, column: 4, scope: !3515)
!3519 = !DILocation(line: 698, column: 18, scope: !3351)
!3520 = !DILocation(line: 0, scope: !3351)
!3521 = !DILocation(line: 700, column: 8, scope: !3351)
!3522 = !DILocation(line: 704, column: 6, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !286, line: 703, column: 12)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !286, line: 701, column: 9)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !286, line: 700, column: 22)
!3526 = distinct !DILexicalBlock(scope: !3351, file: !286, line: 700, column: 8)
!3527 = !DILocation(line: 704, column: 24, scope: !3523)
!3528 = !DILocation(line: 706, column: 4, scope: !3525)
!3529 = !DILocation(line: 709, column: 4, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !286, line: 709, column: 4)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !286, line: 709, column: 4)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !286, line: 709, column: 4)
!3533 = distinct !DILexicalBlock(scope: !3352, file: !286, line: 708, column: 10)
!3534 = !DILocation(line: 0, scope: !3346)
!3535 = !DILocation(line: 0, scope: !3332)
!3536 = !DILocation(line: 720, column: 6, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 720, column: 6)
!3538 = !DILocation(line: 720, column: 17, scope: !3537)
!3539 = !DILocation(line: 720, column: 31, scope: !3537)
!3540 = !DILocation(line: 720, column: 6, scope: !3282)
!3541 = !DILocation(line: 721, column: 3, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !286, line: 721, column: 3)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !286, line: 721, column: 3)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !286, line: 721, column: 3)
!3545 = distinct !DILexicalBlock(scope: !3537, file: !286, line: 720, column: 38)
!3546 = !DILocation(line: 729, column: 6, scope: !3282)
!3547 = !DILocation(line: 730, column: 21, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !286, line: 729, column: 20)
!3549 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 729, column: 6)
!3550 = !DILocation(line: 730, column: 27, scope: !3548)
!3551 = !DILocation(line: 730, column: 3, scope: !3548)
!3552 = !DILocation(line: 737, column: 22, scope: !3282)
!3553 = !DILocation(line: 737, column: 20, scope: !3282)
!3554 = !DILocation(line: 0, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 739, column: 6)
!3556 = !DILocation(line: 745, column: 17, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3555, file: !286, line: 743, column: 9)
!3558 = !DILocation(line: 745, column: 25, scope: !3557)
!3559 = !DILocation(line: 746, column: 17, scope: !3557)
!3560 = !DILocation(line: 746, column: 28, scope: !3557)
!3561 = !DILocation(line: 749, column: 29, scope: !3282)
!3562 = !DILocation(line: 749, column: 16, scope: !3282)
!3563 = !DILocation(line: 749, column: 27, scope: !3282)
!3564 = !DILocation(line: 756, column: 6, scope: !3358)
!3565 = !DILocation(line: 756, column: 6, scope: !3282)
!3566 = !DILocation(line: 757, column: 3, scope: !3356)
!3567 = !DILocation(line: 758, column: 10, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3354, file: !286, line: 758, column: 8)
!3569 = !DILocation(line: 758, column: 25, scope: !3568)
!3570 = !DILocation(line: 758, column: 8, scope: !3354)
!3571 = !DILocation(line: 0, scope: !3354)
!3572 = !DILocation(line: 765, column: 8, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3354, file: !286, line: 765, column: 8)
!3574 = !DILocation(line: 765, column: 19, scope: !3573)
!3575 = !DILocation(line: 765, column: 23, scope: !3573)
!3576 = !DILocation(line: 765, column: 8, scope: !3354)
!3577 = !DILocation(line: 762, column: 33, scope: !3354)
!3578 = !DILocation(line: 769, column: 8, scope: !3354)
!3579 = !DILocation(line: 769, column: 11, scope: !3354)
!3580 = !DILocation(line: 757, column: 27, scope: !3355)
!3581 = !DILocation(line: 757, column: 17, scope: !3355)
!3582 = distinct !{!3582, !3566, !3583}
!3583 = !DILocation(line: 770, column: 3, scope: !3356)
!3584 = !DILocation(line: 774, column: 16, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !286, line: 774, column: 2)
!3586 = distinct !DILexicalBlock(scope: !3282, file: !286, line: 774, column: 2)
!3587 = !DILocation(line: 774, column: 2, scope: !3586)
!3588 = !DILocation(line: 776, column: 16, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !286, line: 776, column: 7)
!3590 = distinct !DILexicalBlock(scope: !3585, file: !286, line: 774, column: 30)
!3591 = !DILocation(line: 776, column: 19, scope: !3589)
!3592 = !DILocation(line: 776, column: 34, scope: !3589)
!3593 = !DILocation(line: 776, column: 7, scope: !3590)
!3594 = !DILocation(line: 780, column: 7, scope: !3590)
!3595 = !DILocation(line: 782, column: 13, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !286, line: 780, column: 19)
!3597 = distinct !DILexicalBlock(scope: !3590, file: !286, line: 780, column: 7)
!3598 = !DILocation(line: 782, column: 8, scope: !3596)
!3599 = !DILocation(line: 782, column: 11, scope: !3596)
!3600 = !DILocation(line: 783, column: 3, scope: !3596)
!3601 = !DILocation(line: 785, column: 26, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3597, file: !286, line: 783, column: 10)
!3603 = !DILocation(line: 785, column: 41, scope: !3602)
!3604 = !DILocation(line: 785, column: 24, scope: !3602)
!3605 = !DILocation(line: 785, column: 8, scope: !3602)
!3606 = !DILocation(line: 787, column: 52, scope: !3602)
!3607 = !DILocation(line: 789, column: 11, scope: !3602)
!3608 = !DILocation(line: 789, column: 21, scope: !3602)
!3609 = !DILocation(line: 0, scope: !3597)
!3610 = !DILocation(line: 793, column: 7, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3590, file: !286, line: 793, column: 7)
!3612 = !DILocation(line: 793, column: 18, scope: !3611)
!3613 = !DILocation(line: 793, column: 22, scope: !3611)
!3614 = !DILocation(line: 793, column: 29, scope: !3611)
!3615 = !DILocation(line: 793, column: 7, scope: !3590)
!3616 = !DILocation(line: 797, column: 12, scope: !3590)
!3617 = !DILocation(line: 797, column: 7, scope: !3590)
!3618 = !DILocation(line: 797, column: 10, scope: !3590)
!3619 = !DILocation(line: 799, column: 3, scope: !3590)
!3620 = !DILocation(line: 800, column: 7, scope: !3590)
!3621 = !DILocation(line: 801, column: 2, scope: !3590)
!3622 = !DILocation(line: 338, column: 4, scope: !3282)
!3623 = !DILocation(line: 774, column: 26, scope: !3585)
!3624 = distinct !{!3624, !3587, !3625}
!3625 = !DILocation(line: 801, column: 2, scope: !3586)
!3626 = !DILocation(line: 808, column: 9, scope: !3282)
!3627 = !DILocation(line: 808, column: 2, scope: !3282)
!3628 = !DILocation(line: 813, column: 1, scope: !3282)
!3629 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !286, file: !286, line: 33, type: !3630, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3632)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!345, !278}
!3632 = !{!3633}
!3633 = !DILocalVariable(name: "addr", arg: 1, scope: !3629, file: !286, line: 33, type: !278)
!3634 = !DILocation(line: 0, scope: !3629)
!3635 = !DILocation(line: 41, column: 9, scope: !3629)
!3636 = !DILocation(line: 41, column: 2, scope: !3629)
!3637 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3638, file: !3638, line: 24, type: !3639, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3641)
!3638 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3639 = !DISubroutineType(types: !3640)
!3640 = !{!345, !13}
!3641 = !{!3642}
!3642 = !DILocalVariable(name: "addr", arg: 1, scope: !3637, file: !3638, line: 24, type: !13)
!3643 = !DILocation(line: 0, scope: !3637)
!3644 = !DILocation(line: 49, column: 30, scope: !3637)
!3645 = !DILocation(line: 49, column: 57, scope: !3637)
!3646 = !DILocation(line: 49, column: 2, scope: !3637)
!3647 = distinct !DISubprogram(name: "cbprintf_package", scope: !286, file: !286, line: 815, type: !3648, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3650)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!119, !113, !239, !118, !278, null}
!3650 = !{!3651, !3652, !3653, !3654, !3655, !3656}
!3651 = !DILocalVariable(name: "packaged", arg: 1, scope: !3647, file: !286, line: 815, type: !113)
!3652 = !DILocalVariable(name: "len", arg: 2, scope: !3647, file: !286, line: 815, type: !239)
!3653 = !DILocalVariable(name: "flags", arg: 3, scope: !3647, file: !286, line: 815, type: !118)
!3654 = !DILocalVariable(name: "format", arg: 4, scope: !3647, file: !286, line: 816, type: !278)
!3655 = !DILocalVariable(name: "ap", scope: !3647, file: !286, line: 818, type: !3285)
!3656 = !DILocalVariable(name: "ret", scope: !3647, file: !286, line: 819, type: !119)
!3657 = !DILocation(line: 0, scope: !3647)
!3658 = !DILocation(line: 818, column: 2, scope: !3647)
!3659 = !DILocation(line: 818, column: 10, scope: !3647)
!3660 = !DILocation(line: 821, column: 2, scope: !3647)
!3661 = !DILocation(line: 822, column: 8, scope: !3647)
!3662 = !DILocation(line: 823, column: 2, scope: !3647)
!3663 = !DILocation(line: 825, column: 1, scope: !3647)
!3664 = !DILocation(line: 824, column: 2, scope: !3647)
!3665 = distinct !DISubprogram(name: "cbpprintf_external", scope: !286, file: !286, line: 827, type: !3666, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3676)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!119, !3668, !3672, !113, !113}
!3668 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3318, line: 297, baseType: !3669)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 32)
!3670 = !DISubroutineType(types: !3671)
!3671 = !{!119, null}
!3672 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3318, line: 328, baseType: !3673)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 32)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!119, !3668, !113, !278, !3285}
!3676 = !{!3677, !3678, !3679, !3680, !3681, !3682, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695}
!3677 = !DILocalVariable(name: "out", arg: 1, scope: !3665, file: !286, line: 827, type: !3668)
!3678 = !DILocalVariable(name: "formatter", arg: 2, scope: !3665, file: !286, line: 828, type: !3672)
!3679 = !DILocalVariable(name: "ctx", arg: 3, scope: !3665, file: !286, line: 829, type: !113)
!3680 = !DILocalVariable(name: "packaged", arg: 4, scope: !3665, file: !286, line: 829, type: !113)
!3681 = !DILocalVariable(name: "buf", scope: !3665, file: !286, line: 831, type: !284)
!3682 = !DILocalVariable(name: "hdr", scope: !3665, file: !286, line: 832, type: !3683)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 32)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3318, line: 96, size: 64, elements: !3685)
!3685 = !{!3686, !3687}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3684, file: !3318, line: 98, baseType: !3317, size: 32)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3684, file: !3318, line: 101, baseType: !106, size: 32, offset: 32)
!3688 = !DILocalVariable(name: "s", scope: !3665, file: !286, line: 833, type: !106)
!3689 = !DILocalVariable(name: "ps", scope: !3665, file: !286, line: 833, type: !283)
!3690 = !DILocalVariable(name: "i", scope: !3665, file: !286, line: 834, type: !32)
!3691 = !DILocalVariable(name: "args_size", scope: !3665, file: !286, line: 834, type: !32)
!3692 = !DILocalVariable(name: "s_nbr", scope: !3665, file: !286, line: 834, type: !32)
!3693 = !DILocalVariable(name: "ros_nbr", scope: !3665, file: !286, line: 834, type: !32)
!3694 = !DILocalVariable(name: "rws_nbr", scope: !3665, file: !286, line: 834, type: !32)
!3695 = !DILocalVariable(name: "s_idx", scope: !3665, file: !286, line: 834, type: !32)
!3696 = !DILocation(line: 0, scope: !3665)
!3697 = !DILocation(line: 836, column: 10, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3665, file: !286, line: 836, column: 6)
!3699 = !DILocation(line: 836, column: 6, scope: !3665)
!3700 = !DILocation(line: 842, column: 28, scope: !3665)
!3701 = !DILocation(line: 842, column: 14, scope: !3665)
!3702 = !DILocation(line: 852, column: 16, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !286, line: 852, column: 2)
!3704 = distinct !DILexicalBlock(scope: !3665, file: !286, line: 852, column: 2)
!3705 = !DILocation(line: 852, column: 2, scope: !3704)
!3706 = !DILocation(line: 841, column: 28, scope: !3665)
!3707 = !DILocation(line: 841, column: 14, scope: !3665)
!3708 = !DILocation(line: 841, column: 32, scope: !3665)
!3709 = !DILocation(line: 847, column: 19, scope: !3665)
!3710 = !DILocation(line: 843, column: 28, scope: !3665)
!3711 = !DILocation(line: 843, column: 14, scope: !3665)
!3712 = !DILocation(line: 847, column: 31, scope: !3665)
!3713 = !DILocation(line: 844, column: 28, scope: !3665)
!3714 = !DILocation(line: 844, column: 14, scope: !3665)
!3715 = !DILocation(line: 847, column: 45, scope: !3665)
!3716 = !DILocation(line: 847, column: 41, scope: !3665)
!3717 = !DILocation(line: 854, column: 24, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3703, file: !286, line: 852, column: 30)
!3719 = !DILocation(line: 854, column: 11, scope: !3718)
!3720 = !DILocation(line: 855, column: 30, scope: !3718)
!3721 = !DILocation(line: 855, column: 22, scope: !3718)
!3722 = !DILocation(line: 855, column: 8, scope: !3718)
!3723 = !DILocation(line: 857, column: 7, scope: !3718)
!3724 = !DILocation(line: 859, column: 8, scope: !3718)
!3725 = !DILocation(line: 859, column: 18, scope: !3718)
!3726 = !DILocation(line: 859, column: 5, scope: !3718)
!3727 = !DILocation(line: 852, column: 26, scope: !3703)
!3728 = distinct !{!3728, !3705, !3729}
!3729 = !DILocation(line: 860, column: 2, scope: !3704)
!3730 = !DILocation(line: 863, column: 6, scope: !3665)
!3731 = !DILocation(line: 866, column: 56, scope: !3665)
!3732 = !DILocation(line: 866, column: 9, scope: !3665)
!3733 = !DILocation(line: 866, column: 2, scope: !3665)
!3734 = !DILocation(line: 867, column: 1, scope: !3665)
!3735 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !286, file: !286, line: 179, type: !3736, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3738)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!119, !3668, !3672, !113, !278, !113}
!3738 = !{!3739, !3740, !3741, !3742, !3743, !3744}
!3739 = !DILocalVariable(name: "out", arg: 1, scope: !3735, file: !286, line: 179, type: !3668)
!3740 = !DILocalVariable(name: "formatter", arg: 2, scope: !3735, file: !286, line: 180, type: !3672)
!3741 = !DILocalVariable(name: "ctx", arg: 3, scope: !3735, file: !286, line: 181, type: !113)
!3742 = !DILocalVariable(name: "fmt", arg: 4, scope: !3735, file: !286, line: 182, type: !278)
!3743 = !DILocalVariable(name: "buf", arg: 5, scope: !3735, file: !286, line: 182, type: !113)
!3744 = !DILocalVariable(name: "u", scope: !3735, file: !286, line: 187, type: !3745)
!3745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3735, file: !286, line: 184, size: 32, elements: !3746)
!3746 = !{!3747, !3748}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3745, file: !286, line: 185, baseType: !3285, size: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3745, file: !286, line: 186, baseType: !113, size: 32)
!3749 = !DILocation(line: 0, scope: !3735)
!3750 = !DILocation(line: 191, column: 9, scope: !3735)
!3751 = !DILocation(line: 191, column: 2, scope: !3735)
!3752 = distinct !DISubprogram(name: "is_ptr", scope: !286, file: !286, line: 881, type: !3753, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3755)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!345, !278, !119}
!3755 = !{!3756, !3757, !3758, !3759, !3760}
!3756 = !DILocalVariable(name: "fmt", arg: 1, scope: !3752, file: !286, line: 881, type: !278)
!3757 = !DILocalVariable(name: "n", arg: 2, scope: !3752, file: !286, line: 881, type: !119)
!3758 = !DILocalVariable(name: "c", scope: !3752, file: !286, line: 883, type: !107)
!3759 = !DILocalVariable(name: "mod", scope: !3752, file: !286, line: 884, type: !345)
!3760 = !DILocalVariable(name: "cnt", scope: !3752, file: !286, line: 885, type: !119)
!3761 = !DILocation(line: 0, scope: !3752)
!3762 = !DILocation(line: 887, column: 14, scope: !3752)
!3763 = !DILocation(line: 887, column: 22, scope: !3752)
!3764 = !DILocation(line: 887, column: 2, scope: !3752)
!3765 = !DILocation(line: 887, column: 18, scope: !3752)
!3766 = !DILocation(line: 888, column: 7, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3752, file: !286, line: 887, column: 31)
!3768 = !DILocation(line: 889, column: 12, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !286, line: 889, column: 8)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !286, line: 888, column: 12)
!3771 = distinct !DILexicalBlock(scope: !3767, file: !286, line: 888, column: 7)
!3772 = !DILocation(line: 889, column: 8, scope: !3770)
!3773 = !DILocation(line: 890, column: 11, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !286, line: 890, column: 9)
!3775 = distinct !DILexicalBlock(scope: !3769, file: !286, line: 889, column: 18)
!3776 = !DILocation(line: 890, column: 9, scope: !3775)
!3777 = !DILocation(line: 892, column: 16, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !286, line: 892, column: 16)
!3779 = !DILocation(line: 892, column: 16, scope: !3774)
!3780 = !DILocation(line: 895, column: 15, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3769, file: !286, line: 895, column: 15)
!3782 = !DILocation(line: 895, column: 15, scope: !3769)
!3783 = !DILocation(line: 900, column: 9, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3767, file: !286, line: 900, column: 7)
!3785 = !DILocation(line: 900, column: 7, scope: !3767)
!3786 = distinct !{!3786, !3764, !3787}
!3787 = !DILocation(line: 903, column: 2, scope: !3752)
!3788 = !DILocation(line: 906, column: 1, scope: !3752)
!3789 = distinct !DISubprogram(name: "is_fmt_spec", scope: !286, file: !286, line: 873, type: !3790, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3792)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!345, !107}
!3792 = !{!3793}
!3793 = !DILocalVariable(name: "c", arg: 1, scope: !3789, file: !286, line: 873, type: !107)
!3794 = !DILocation(line: 0, scope: !3789)
!3795 = !DILocation(line: 875, column: 19, scope: !3789)
!3796 = !DILocation(line: 875, column: 2, scope: !3789)
!3797 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !286, file: !286, line: 908, type: !3798, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3804)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!119, !113, !239, !3800, !113, !118, !2642, !239}
!3800 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3318, line: 308, baseType: !3801)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 32)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!119, !13, !239, !113}
!3804 = !{!3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3822, !3823, !3824, !3825, !3826, !3832, !3835, !3836, !3837, !3839, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3855, !3858, !3859, !3860, !3861, !3862, !3863, !3865, !3868, !3869, !3870}
!3805 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3797, file: !286, line: 908, type: !113)
!3806 = !DILocalVariable(name: "in_len", arg: 2, scope: !3797, file: !286, line: 909, type: !239)
!3807 = !DILocalVariable(name: "cb", arg: 3, scope: !3797, file: !286, line: 910, type: !3800)
!3808 = !DILocalVariable(name: "ctx", arg: 4, scope: !3797, file: !286, line: 911, type: !113)
!3809 = !DILocalVariable(name: "flags", arg: 5, scope: !3797, file: !286, line: 912, type: !118)
!3810 = !DILocalVariable(name: "strl", arg: 6, scope: !3797, file: !286, line: 913, type: !2642)
!3811 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3797, file: !286, line: 914, type: !239)
!3812 = !DILocalVariable(name: "buf", scope: !3797, file: !286, line: 918, type: !284)
!3813 = !DILocalVariable(name: "buf32", scope: !3797, file: !286, line: 919, type: !882)
!3814 = !DILocalVariable(name: "args_size", scope: !3797, file: !286, line: 920, type: !32)
!3815 = !DILocalVariable(name: "ros_nbr", scope: !3797, file: !286, line: 920, type: !32)
!3816 = !DILocalVariable(name: "rws_nbr", scope: !3797, file: !286, line: 920, type: !32)
!3817 = !DILocalVariable(name: "fmt_present", scope: !3797, file: !286, line: 921, type: !345)
!3818 = !DILocalVariable(name: "rw_cpy", scope: !3797, file: !286, line: 922, type: !345)
!3819 = !DILocalVariable(name: "ro_cpy", scope: !3797, file: !286, line: 923, type: !345)
!3820 = !DILocalVariable(name: "in_desc", scope: !3797, file: !286, line: 924, type: !3821)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 32)
!3822 = !DILocalVariable(name: "out_len", scope: !3797, file: !286, line: 960, type: !119)
!3823 = !DILocalVariable(name: "fmt", scope: !3797, file: !286, line: 965, type: !278)
!3824 = !DILocalVariable(name: "str_pos", scope: !3797, file: !286, line: 966, type: !284)
!3825 = !DILocalVariable(name: "strl_cnt", scope: !3797, file: !286, line: 967, type: !239)
!3826 = !DILocalVariable(name: "i", scope: !3827, file: !286, line: 973, type: !119)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !286, line: 973, column: 4)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !286, line: 972, column: 15)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !286, line: 972, column: 7)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !286, line: 970, column: 18)
!3831 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 970, column: 6)
!3832 = !DILocalVariable(name: "str", scope: !3833, file: !286, line: 974, type: !278)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !286, line: 973, column: 38)
!3834 = distinct !DILexicalBlock(scope: !3827, file: !286, line: 973, column: 4)
!3835 = !DILocalVariable(name: "len", scope: !3833, file: !286, line: 975, type: !119)
!3836 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3830, file: !286, line: 990, type: !345)
!3837 = !DILocalVariable(name: "i", scope: !3838, file: !286, line: 995, type: !119)
!3838 = distinct !DILexicalBlock(scope: !3830, file: !286, line: 995, column: 3)
!3839 = !DILocalVariable(name: "arg_idx", scope: !3840, file: !286, line: 996, type: !185)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !286, line: 995, column: 37)
!3841 = distinct !DILexicalBlock(scope: !3838, file: !286, line: 995, column: 3)
!3842 = !DILocalVariable(name: "arg_pos", scope: !3840, file: !286, line: 997, type: !185)
!3843 = !DILocalVariable(name: "str", scope: !3840, file: !286, line: 998, type: !278)
!3844 = !DILocalVariable(name: "is_ro", scope: !3840, file: !286, line: 999, type: !345)
!3845 = !DILocalVariable(name: "len", scope: !3840, file: !286, line: 1000, type: !119)
!3846 = !DILocalVariable(name: "out_desc", scope: !3797, file: !286, line: 1038, type: !3321)
!3847 = !DILocalVariable(name: "cpy_str_pos", scope: !3797, file: !286, line: 1040, type: !3303)
!3848 = !DILocalVariable(name: "keep_str_pos", scope: !3797, file: !286, line: 1042, type: !3303)
!3849 = !DILocalVariable(name: "scpy_cnt", scope: !3797, file: !286, line: 1043, type: !185)
!3850 = !DILocalVariable(name: "keep_cnt", scope: !3797, file: !286, line: 1044, type: !185)
!3851 = !DILocalVariable(name: "dst", scope: !3797, file: !286, line: 1045, type: !284)
!3852 = !DILocalVariable(name: "rv", scope: !3797, file: !286, line: 1046, type: !119)
!3853 = !DILocalVariable(name: "i", scope: !3854, file: !286, line: 1074, type: !119)
!3854 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 1074, column: 2)
!3855 = !DILocalVariable(name: "arg_idx", scope: !3856, file: !286, line: 1075, type: !185)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !286, line: 1074, column: 36)
!3857 = distinct !DILexicalBlock(scope: !3854, file: !286, line: 1074, column: 2)
!3858 = !DILocalVariable(name: "arg_pos", scope: !3856, file: !286, line: 1076, type: !185)
!3859 = !DILocalVariable(name: "str", scope: !3856, file: !286, line: 1077, type: !278)
!3860 = !DILocalVariable(name: "is_ro", scope: !3856, file: !286, line: 1078, type: !345)
!3861 = !DILocalVariable(name: "in_desc_backup", scope: !3797, file: !286, line: 1114, type: !3321)
!3862 = !DILocalVariable(name: "strs_len", scope: !3797, file: !286, line: 1134, type: !239)
!3863 = !DILocalVariable(name: "i", scope: !3864, file: !286, line: 1143, type: !119)
!3864 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 1143, column: 2)
!3865 = !DILocalVariable(name: "loc", scope: !3866, file: !286, line: 1144, type: !185)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !286, line: 1143, column: 37)
!3867 = distinct !DILexicalBlock(scope: !3864, file: !286, line: 1143, column: 2)
!3868 = !DILocalVariable(name: "str", scope: !3866, file: !286, line: 1145, type: !278)
!3869 = !DILocalVariable(name: "str_len", scope: !3866, file: !286, line: 1146, type: !199)
!3870 = !DILabel(scope: !3871, name: "calculate_string_length", file: !286, line: 1021)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !286, line: 1020, column: 56)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !286, line: 1020, column: 15)
!3873 = distinct !DILexicalBlock(scope: !3840, file: !286, line: 1014, column: 8)
!3874 = !DILocation(line: 0, scope: !3797)
!3875 = !DILocation(line: 916, column: 2, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !286, line: 916, column: 2)
!3877 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 916, column: 2)
!3878 = !DILocation(line: 916, column: 2, scope: !3877)
!3879 = !DILocation(line: 916, column: 2, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3876, file: !286, line: 916, column: 2)
!3881 = !DILocation(line: 919, column: 20, scope: !3797)
!3882 = !DILocation(line: 921, column: 27, scope: !3797)
!3883 = !DILocation(line: 921, column: 21, scope: !3797)
!3884 = !DILocation(line: 926, column: 18, scope: !3797)
!3885 = !DILocation(line: 926, column: 11, scope: !3797)
!3886 = !DILocation(line: 926, column: 34, scope: !3797)
!3887 = !DILocation(line: 931, column: 21, scope: !3797)
!3888 = !DILocation(line: 931, column: 12, scope: !3797)
!3889 = !DILocation(line: 932, column: 11, scope: !3797)
!3890 = !DILocation(line: 932, column: 19, scope: !3797)
!3891 = !DILocation(line: 938, column: 21, scope: !3797)
!3892 = !DILocation(line: 938, column: 12, scope: !3797)
!3893 = !DILocation(line: 939, column: 19, scope: !3797)
!3894 = !DILocation(line: 939, column: 23, scope: !3797)
!3895 = !DILocation(line: 946, column: 14, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 946, column: 6)
!3897 = !DILocation(line: 947, column: 7, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !286, line: 947, column: 7)
!3899 = distinct !DILexicalBlock(scope: !3896, file: !286, line: 946, column: 26)
!3900 = !DILocation(line: 947, column: 7, scope: !3899)
!3901 = !DILocation(line: 948, column: 4, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3898, file: !286, line: 947, column: 11)
!3903 = !DILocation(line: 949, column: 3, scope: !3902)
!3904 = !DILocation(line: 958, column: 23, scope: !3797)
!3905 = !DILocation(line: 958, column: 14, scope: !3797)
!3906 = !DILocation(line: 958, column: 27, scope: !3797)
!3907 = !DILocation(line: 965, column: 41, scope: !3797)
!3908 = !DILocation(line: 965, column: 20, scope: !3797)
!3909 = !DILocation(line: 966, column: 22, scope: !3797)
!3910 = !DILocation(line: 970, column: 9, scope: !3831)
!3911 = !DILocation(line: 970, column: 6, scope: !3797)
!3912 = !DILocation(line: 972, column: 7, scope: !3830)
!3913 = !DILocation(line: 0, scope: !3827)
!3914 = !DILocation(line: 973, column: 4, scope: !3827)
!3915 = !DILocation(line: 974, column: 46, scope: !3833)
!3916 = !DILocation(line: 974, column: 40, scope: !3833)
!3917 = !DILocation(line: 974, column: 23, scope: !3833)
!3918 = !DILocation(line: 0, scope: !3833)
!3919 = !DILocation(line: 975, column: 15, scope: !3833)
!3920 = !DILocation(line: 978, column: 14, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3833, file: !286, line: 978, column: 9)
!3922 = !DILocation(line: 979, column: 25, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3921, file: !286, line: 978, column: 38)
!3924 = !DILocation(line: 979, column: 19, scope: !3923)
!3925 = !DILocation(line: 979, column: 6, scope: !3923)
!3926 = !DILocation(line: 979, column: 23, scope: !3923)
!3927 = !DILocation(line: 980, column: 5, scope: !3923)
!3928 = !DILocation(line: 981, column: 13, scope: !3833)
!3929 = !DILocation(line: 982, column: 12, scope: !3833)
!3930 = !DILocation(line: 973, column: 34, scope: !3834)
!3931 = !DILocation(line: 973, column: 22, scope: !3834)
!3932 = distinct !{!3932, !3914, !3933}
!3933 = !DILocation(line: 983, column: 4, scope: !3827)
!3934 = !DILocation(line: 985, column: 16, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !286, line: 985, column: 8)
!3936 = distinct !DILexicalBlock(scope: !3829, file: !286, line: 984, column: 10)
!3937 = !DILocation(line: 967, column: 9, scope: !3797)
!3938 = !DILocation(line: 971, column: 11, scope: !3830)
!3939 = !DILocation(line: 0, scope: !3830)
!3940 = !DILocation(line: 0, scope: !3838)
!3941 = !DILocation(line: 995, column: 21, scope: !3841)
!3942 = !DILocation(line: 995, column: 3, scope: !3838)
!3943 = !DILocation(line: 990, column: 34, scope: !3830)
!3944 = !DILocation(line: 990, column: 26, scope: !3830)
!3945 = !DILocation(line: 996, column: 30, scope: !3840)
!3946 = !DILocation(line: 0, scope: !3840)
!3947 = !DILocation(line: 997, column: 30, scope: !3840)
!3948 = !DILocation(line: 997, column: 22, scope: !3840)
!3949 = !DILocation(line: 998, column: 39, scope: !3840)
!3950 = !DILocation(line: 998, column: 22, scope: !3840)
!3951 = !DILocation(line: 999, column: 17, scope: !3840)
!3952 = !DILocation(line: 1002, column: 20, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3840, file: !286, line: 1002, column: 8)
!3954 = !DILocation(line: 996, column: 22, scope: !3840)
!3955 = !DILocation(line: 1002, column: 35, scope: !3953)
!3956 = !DILocation(line: 1002, column: 23, scope: !3953)
!3957 = !DILocation(line: 1002, column: 8, scope: !3840)
!3958 = !DILocation(line: 1003, column: 5, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !286, line: 1003, column: 5)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !286, line: 1003, column: 5)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !286, line: 1003, column: 5)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !286, line: 1003, column: 5)
!3963 = distinct !DILexicalBlock(scope: !3953, file: !286, line: 1002, column: 45)
!3964 = !DILocation(line: 1010, column: 13, scope: !3963)
!3965 = !DILocation(line: 1011, column: 5, scope: !3963)
!3966 = !DILocation(line: 1014, column: 8, scope: !3840)
!3967 = !DILocation(line: 1015, column: 9, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3873, file: !286, line: 1014, column: 15)
!3969 = !DILocation(line: 1018, column: 14, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !286, line: 1017, column: 12)
!3971 = distinct !DILexicalBlock(scope: !3968, file: !286, line: 1015, column: 9)
!3972 = !DILocation(line: 1020, column: 4, scope: !3968)
!3973 = !DILocation(line: 1020, column: 15, scope: !3873)
!3974 = !DILocation(line: 1021, column: 1, scope: !3871)
!3975 = !DILocation(line: 1022, column: 11, scope: !3871)
!3976 = !DILocation(line: 1025, column: 14, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3871, file: !286, line: 1025, column: 9)
!3978 = !DILocation(line: 1026, column: 25, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3977, file: !286, line: 1025, column: 38)
!3980 = !DILocation(line: 1026, column: 19, scope: !3979)
!3981 = !DILocation(line: 1026, column: 6, scope: !3979)
!3982 = !DILocation(line: 1026, column: 23, scope: !3979)
!3983 = !DILocation(line: 1027, column: 5, scope: !3979)
!3984 = !DILocation(line: 1031, column: 21, scope: !3871)
!3985 = !DILocation(line: 1031, column: 13, scope: !3871)
!3986 = !DILocation(line: 1032, column: 4, scope: !3871)
!3987 = !DILocation(line: 995, column: 33, scope: !3841)
!3988 = distinct !{!3988, !3942, !3989}
!3989 = !DILocation(line: 1033, column: 3, scope: !3838)
!3990 = !DILocation(line: 1040, column: 10, scope: !3797)
!3991 = !DILocation(line: 1042, column: 10, scope: !3797)
!3992 = !DILocation(line: 1052, column: 6, scope: !3797)
!3993 = !DILocation(line: 1055, column: 9, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !286, line: 1052, column: 14)
!3995 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 1052, column: 6)
!3996 = !DILocation(line: 1056, column: 2, scope: !3994)
!3997 = !DILocation(line: 1056, column: 21, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3995, file: !286, line: 1056, column: 13)
!3999 = !DILocation(line: 1066, column: 3, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !286, line: 1065, column: 11)
!4001 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 1065, column: 6)
!4002 = !DILocation(line: 1067, column: 2, scope: !4000)
!4003 = !DILocation(line: 1068, column: 10, scope: !3797)
!4004 = !DILocation(line: 0, scope: !3854)
!4005 = !DILocation(line: 1074, column: 20, scope: !3857)
!4006 = !DILocation(line: 1074, column: 2, scope: !3854)
!4007 = !DILocation(line: 1110, column: 24, scope: !3797)
!4008 = !DILocation(line: 1053, column: 12, scope: !3994)
!4009 = !DILocation(line: 1054, column: 12, scope: !3994)
!4010 = !DILocation(line: 1108, column: 30, scope: !3797)
!4011 = !DILocation(line: 1108, column: 40, scope: !3797)
!4012 = !DILocation(line: 1108, column: 38, scope: !3797)
!4013 = !DILocation(line: 1109, column: 31, scope: !3797)
!4014 = !DILocation(line: 1109, column: 24, scope: !3797)
!4015 = !DILocation(line: 1110, column: 31, scope: !3797)
!4016 = !DILocation(line: 1114, column: 31, scope: !3797)
!4017 = !DILocation(line: 1114, column: 48, scope: !3797)
!4018 = !DILocation(line: 1115, column: 13, scope: !3797)
!4019 = !DILocation(line: 1118, column: 7, scope: !3797)
!4020 = !DILocation(line: 1119, column: 9, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 1119, column: 6)
!4022 = !DILocation(line: 1119, column: 6, scope: !3797)
!4023 = !DILocation(line: 1075, column: 29, scope: !3856)
!4024 = !DILocation(line: 1075, column: 21, scope: !3856)
!4025 = !DILocation(line: 0, scope: !3856)
!4026 = !DILocation(line: 1076, column: 29, scope: !3856)
!4027 = !DILocation(line: 1076, column: 21, scope: !3856)
!4028 = !DILocation(line: 1077, column: 38, scope: !3856)
!4029 = !DILocation(line: 1077, column: 21, scope: !3856)
!4030 = !DILocation(line: 1078, column: 16, scope: !3856)
!4031 = !DILocation(line: 1080, column: 19, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3856, file: !286, line: 1080, column: 7)
!4033 = !DILocation(line: 1080, column: 34, scope: !4032)
!4034 = !DILocation(line: 1080, column: 22, scope: !4032)
!4035 = !DILocation(line: 1080, column: 7, scope: !3856)
!4036 = !DILocation(line: 1084, column: 7, scope: !3856)
!4037 = !DILocation(line: 1085, column: 8, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !286, line: 1084, column: 14)
!4039 = distinct !DILexicalBlock(scope: !3856, file: !286, line: 1084, column: 7)
!4040 = !DILocation(line: 1086, column: 5, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !286, line: 1086, column: 5)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !286, line: 1086, column: 5)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !286, line: 1085, column: 49)
!4044 = distinct !DILexicalBlock(scope: !4038, file: !286, line: 1085, column: 8)
!4045 = !DILocation(line: 1086, column: 5, scope: !4042)
!4046 = !DILocation(line: 1086, column: 5, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4041, file: !286, line: 1086, column: 5)
!4048 = !DILocation(line: 1087, column: 25, scope: !4043)
!4049 = !DILocation(line: 1087, column: 5, scope: !4043)
!4050 = !DILocation(line: 1088, column: 4, scope: !4043)
!4051 = !DILocation(line: 1088, column: 15, scope: !4044)
!4052 = !DILocation(line: 1089, column: 5, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !286, line: 1089, column: 5)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !286, line: 1089, column: 5)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !286, line: 1088, column: 61)
!4056 = distinct !DILexicalBlock(scope: !4044, file: !286, line: 1088, column: 15)
!4057 = !DILocation(line: 1089, column: 5, scope: !4054)
!4058 = !DILocation(line: 1089, column: 5, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4053, file: !286, line: 1089, column: 5)
!4060 = !DILocation(line: 1090, column: 26, scope: !4055)
!4061 = !DILocation(line: 1090, column: 5, scope: !4055)
!4062 = !DILocation(line: 1091, column: 4, scope: !4055)
!4063 = !DILocation(line: 1095, column: 8, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4039, file: !286, line: 1094, column: 10)
!4065 = !DILocation(line: 1096, column: 5, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !286, line: 1096, column: 5)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !286, line: 1096, column: 5)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !286, line: 1095, column: 49)
!4069 = distinct !DILexicalBlock(scope: !4064, file: !286, line: 1095, column: 8)
!4070 = !DILocation(line: 1096, column: 5, scope: !4067)
!4071 = !DILocation(line: 1096, column: 5, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4066, file: !286, line: 1096, column: 5)
!4073 = !DILocation(line: 1097, column: 25, scope: !4068)
!4074 = !DILocation(line: 1097, column: 5, scope: !4068)
!4075 = !DILocation(line: 1098, column: 4, scope: !4068)
!4076 = !DILocation(line: 1099, column: 5, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !286, line: 1099, column: 5)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !286, line: 1099, column: 5)
!4079 = distinct !DILexicalBlock(scope: !4069, file: !286, line: 1098, column: 11)
!4080 = !DILocation(line: 1099, column: 5, scope: !4078)
!4081 = !DILocation(line: 1099, column: 5, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4077, file: !286, line: 1099, column: 5)
!4083 = !DILocation(line: 1100, column: 26, scope: !4079)
!4084 = !DILocation(line: 1100, column: 5, scope: !4079)
!4085 = !DILocation(line: 1100, column: 30, scope: !4079)
!4086 = !DILocation(line: 1101, column: 26, scope: !4079)
!4087 = !DILocation(line: 1101, column: 5, scope: !4079)
!4088 = !DILocation(line: 0, scope: !4039)
!4089 = !DILocation(line: 1074, column: 32, scope: !3857)
!4090 = distinct !{!4090, !4006, !4091}
!4091 = !DILocation(line: 1104, column: 2, scope: !3854)
!4092 = !DILocation(line: 1124, column: 13, scope: !3797)
!4093 = !DILocation(line: 1127, column: 10, scope: !3797)
!4094 = !DILocation(line: 1127, column: 7, scope: !3797)
!4095 = !DILocation(line: 1128, column: 9, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 1128, column: 6)
!4097 = !DILocation(line: 1128, column: 6, scope: !3797)
!4098 = !DILocation(line: 1134, column: 27, scope: !3797)
!4099 = !DILocation(line: 1136, column: 7, scope: !3797)
!4100 = !DILocation(line: 1137, column: 9, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !3797, file: !286, line: 1137, column: 6)
!4102 = !DILocation(line: 1137, column: 6, scope: !3797)
!4103 = !DILocation(line: 1131, column: 10, scope: !3797)
!4104 = !DILocation(line: 1140, column: 10, scope: !3797)
!4105 = !DILocation(line: 0, scope: !3864)
!4106 = !DILocation(line: 1143, column: 20, scope: !3867)
!4107 = !DILocation(line: 1143, column: 2, scope: !3864)
!4108 = !DILocation(line: 1144, column: 3, scope: !3866)
!4109 = !DILocation(line: 1144, column: 17, scope: !3866)
!4110 = !DILocation(line: 0, scope: !3866)
!4111 = !DILocation(line: 1144, column: 11, scope: !3866)
!4112 = !DILocation(line: 1145, column: 38, scope: !3866)
!4113 = !DILocation(line: 1145, column: 21, scope: !3866)
!4114 = !DILocation(line: 1146, column: 22, scope: !3866)
!4115 = !DILocation(line: 1146, column: 29, scope: !3866)
!4116 = !DILocation(line: 1148, column: 8, scope: !3866)
!4117 = !DILocation(line: 1149, column: 10, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !3866, file: !286, line: 1149, column: 7)
!4119 = !DILocation(line: 1149, column: 7, scope: !3866)
!4120 = !DILocation(line: 1154, column: 8, scope: !3866)
!4121 = !DILocation(line: 1155, column: 10, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !3866, file: !286, line: 1155, column: 7)
!4123 = !DILocation(line: 1155, column: 7, scope: !3866)
!4124 = !DILocation(line: 1159, column: 2, scope: !3867)
!4125 = !DILocation(line: 1152, column: 11, scope: !3866)
!4126 = !DILocation(line: 1158, column: 11, scope: !3866)
!4127 = !DILocation(line: 1143, column: 33, scope: !3867)
!4128 = distinct !{!4128, !4107, !4129}
!4129 = !DILocation(line: 1159, column: 2, scope: !3864)
!4130 = !DILocation(line: 1162, column: 8, scope: !3797)
!4131 = !DILocation(line: 1164, column: 2, scope: !3797)
!4132 = !DILocation(line: 1165, column: 1, scope: !3797)
!4133 = distinct !DISubprogram(name: "get_package_len", scope: !286, file: !286, line: 196, type: !4134, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4136)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!239, !113}
!4136 = !{!4137, !4138, !4139, !4140, !4141, !4142, !4143}
!4137 = !DILocalVariable(name: "packaged", arg: 1, scope: !4133, file: !286, line: 196, type: !113)
!4138 = !DILocalVariable(name: "buf", scope: !4133, file: !286, line: 200, type: !284)
!4139 = !DILocalVariable(name: "start", scope: !4133, file: !286, line: 201, type: !284)
!4140 = !DILocalVariable(name: "args_size", scope: !4133, file: !286, line: 202, type: !32)
!4141 = !DILocalVariable(name: "s_nbr", scope: !4133, file: !286, line: 202, type: !32)
!4142 = !DILocalVariable(name: "ros_nbr", scope: !4133, file: !286, line: 202, type: !32)
!4143 = !DILocalVariable(name: "i", scope: !4144, file: !286, line: 215, type: !119)
!4144 = distinct !DILexicalBlock(scope: !4133, file: !286, line: 215, column: 2)
!4145 = !DILocation(line: 0, scope: !4133)
!4146 = !DILocation(line: 198, column: 2, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !286, line: 198, column: 2)
!4148 = distinct !DILexicalBlock(scope: !4133, file: !286, line: 198, column: 2)
!4149 = !DILocation(line: 198, column: 2, scope: !4148)
!4150 = !DILocation(line: 198, column: 2, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4147, file: !286, line: 198, column: 2)
!4152 = !DILocation(line: 204, column: 14, scope: !4133)
!4153 = !DILocation(line: 204, column: 21, scope: !4133)
!4154 = !DILocation(line: 205, column: 14, scope: !4133)
!4155 = !DILocation(line: 206, column: 14, scope: !4133)
!4156 = !DILocation(line: 209, column: 6, scope: !4133)
!4157 = !DILocation(line: 212, column: 6, scope: !4133)
!4158 = !DILocation(line: 0, scope: !4144)
!4159 = !DILocation(line: 215, column: 20, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4144, file: !286, line: 215, column: 2)
!4161 = !DILocation(line: 215, column: 2, scope: !4144)
!4162 = !DILocation(line: 220, column: 33, scope: !4133)
!4163 = !DILocation(line: 220, column: 2, scope: !4133)
!4164 = !DILocation(line: 216, column: 6, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4160, file: !286, line: 215, column: 34)
!4166 = !DILocation(line: 217, column: 10, scope: !4165)
!4167 = !DILocation(line: 217, column: 36, scope: !4165)
!4168 = !DILocation(line: 217, column: 7, scope: !4165)
!4169 = !DILocation(line: 215, column: 30, scope: !4160)
!4170 = distinct !{!4170, !4161, !4171}
!4171 = !DILocation(line: 218, column: 2, scope: !4144)
!4172 = distinct !DISubprogram(name: "append_string", scope: !286, file: !286, line: 223, type: !4173, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4175)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!119, !3800, !113, !278, !199}
!4175 = !{!4176, !4177, !4178, !4179}
!4176 = !DILocalVariable(name: "cb", arg: 1, scope: !4172, file: !286, line: 223, type: !3800)
!4177 = !DILocalVariable(name: "ctx", arg: 2, scope: !4172, file: !286, line: 223, type: !113)
!4178 = !DILocalVariable(name: "str", arg: 3, scope: !4172, file: !286, line: 223, type: !278)
!4179 = !DILocalVariable(name: "strl", arg: 4, scope: !4172, file: !286, line: 223, type: !199)
!4180 = !DILocation(line: 0, scope: !4172)
!4181 = !DILocation(line: 225, column: 9, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4172, file: !286, line: 225, column: 6)
!4183 = !DILocation(line: 225, column: 6, scope: !4172)
!4184 = !DILocation(line: 226, column: 14, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4182, file: !286, line: 225, column: 18)
!4186 = !DILocation(line: 226, column: 12, scope: !4185)
!4187 = !DILocation(line: 226, column: 3, scope: !4185)
!4188 = !DILocation(line: 229, column: 14, scope: !4172)
!4189 = !DILocation(line: 229, column: 9, scope: !4172)
!4190 = !DILocation(line: 229, column: 27, scope: !4172)
!4191 = !DILocation(line: 229, column: 39, scope: !4172)
!4192 = !DILocation(line: 230, column: 17, scope: !4172)
!4193 = !DILocation(line: 230, column: 9, scope: !4172)
!4194 = !DILocation(line: 230, column: 2, scope: !4172)
!4195 = !DILocation(line: 231, column: 1, scope: !4172)
!4196 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !299, file: !299, line: 45, type: !301, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4197)
!4197 = !{!4198}
!4198 = !DILocalVariable(name: "c", arg: 1, scope: !4196, file: !299, line: 45, type: !119)
!4199 = !DILocation(line: 0, scope: !4196)
!4200 = !DILocation(line: 50, column: 2, scope: !4196)
!4201 = distinct !DISubprogram(name: "__printk_hook_install", scope: !299, file: !299, line: 63, type: !4202, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4204)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{null, !300}
!4204 = !{!4205}
!4205 = !DILocalVariable(name: "fn", arg: 1, scope: !4201, file: !299, line: 63, type: !300)
!4206 = !DILocation(line: 0, scope: !4201)
!4207 = !DILocation(line: 65, column: 12, scope: !4201)
!4208 = !DILocation(line: 66, column: 1, scope: !4201)
!4209 = distinct !DISubprogram(name: "__printk_get_hook", scope: !299, file: !299, line: 76, type: !4210, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !2022)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{!113}
!4212 = !DILocation(line: 78, column: 9, scope: !4209)
!4213 = !DILocation(line: 78, column: 2, scope: !4209)
!4214 = distinct !DISubprogram(name: "vprintk", scope: !299, file: !299, line: 113, type: !4215, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4223)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{null, !278, !4217}
!4217 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3286, line: 99, baseType: !4218)
!4218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3286, line: 40, baseType: !4219)
!4219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !299, baseType: !4220)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4221)
!4221 = !{!4222}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4220, file: !299, line: 79, baseType: !113, size: 32)
!4223 = !{!4224, !4225, !4226}
!4224 = !DILocalVariable(name: "fmt", arg: 1, scope: !4214, file: !299, line: 113, type: !278)
!4225 = !DILocalVariable(name: "ap", arg: 2, scope: !4214, file: !299, line: 113, type: !4217)
!4226 = !DILocalVariable(name: "ctx", scope: !4227, file: !299, line: 121, type: !4229)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !299, line: 120, column: 27)
!4228 = distinct !DILexicalBlock(scope: !4214, file: !299, line: 120, column: 6)
!4229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !299, line: 81, size: 32, elements: !4230)
!4230 = !{!4231, !4232}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4229, file: !299, line: 85, baseType: !32, size: 32)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4229, file: !299, line: 86, baseType: !4233, offset: 32)
!4233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !4234)
!4234 = !{!4235}
!4235 = !DISubrange(count: 0)
!4236 = !DILocation(line: 0, scope: !4214)
!4237 = !DILocation(line: 148, column: 3, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4228, file: !299, line: 138, column: 9)
!4239 = !DILocation(line: 155, column: 1, scope: !4214)
!4240 = distinct !DISubprogram(name: "char_out", scope: !299, file: !299, line: 107, type: !4241, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4243)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{!119, !119, !113}
!4243 = !{!4244, !4245}
!4244 = !DILocalVariable(name: "c", arg: 1, scope: !4240, file: !299, line: 107, type: !119)
!4245 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4240, file: !299, line: 107, type: !113)
!4246 = !DILocation(line: 0, scope: !4240)
!4247 = !DILocation(line: 110, column: 9, scope: !4240)
!4248 = !DILocation(line: 110, column: 2, scope: !4240)
!4249 = distinct !DISubprogram(name: "cbvprintf", scope: !3318, file: !3318, line: 739, type: !4250, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4252)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!119, !3668, !113, !278, !4217}
!4252 = !{!4253, !4254, !4255, !4256}
!4253 = !DILocalVariable(name: "out", arg: 1, scope: !4249, file: !3318, line: 739, type: !3668)
!4254 = !DILocalVariable(name: "ctx", arg: 2, scope: !4249, file: !3318, line: 739, type: !113)
!4255 = !DILocalVariable(name: "format", arg: 3, scope: !4249, file: !3318, line: 739, type: !278)
!4256 = !DILocalVariable(name: "ap", arg: 4, scope: !4249, file: !3318, line: 739, type: !4217)
!4257 = !DILocation(line: 0, scope: !4249)
!4258 = !DILocation(line: 741, column: 9, scope: !4249)
!4259 = !DILocation(line: 741, column: 2, scope: !4249)
!4260 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !299, file: !299, line: 157, type: !4261, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4263)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{null, !106, !239}
!4263 = !{!4264, !4265, !4266}
!4264 = !DILocalVariable(name: "c", arg: 1, scope: !4260, file: !299, line: 157, type: !106)
!4265 = !DILocalVariable(name: "n", arg: 2, scope: !4260, file: !299, line: 157, type: !239)
!4266 = !DILocalVariable(name: "i", scope: !4260, file: !299, line: 159, type: !239)
!4267 = !DILocation(line: 0, scope: !4260)
!4268 = !DILocation(line: 164, column: 16, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !299, line: 164, column: 2)
!4270 = distinct !DILexicalBlock(scope: !4260, file: !299, line: 164, column: 2)
!4271 = !DILocation(line: 164, column: 2, scope: !4270)
!4272 = !DILocation(line: 165, column: 3, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4269, file: !299, line: 164, column: 26)
!4274 = !DILocation(line: 165, column: 13, scope: !4273)
!4275 = !DILocation(line: 164, column: 22, scope: !4269)
!4276 = distinct !{!4276, !4271, !4277}
!4277 = !DILocation(line: 166, column: 2, scope: !4270)
!4278 = !DILocation(line: 171, column: 1, scope: !4260)
!4279 = distinct !DISubprogram(name: "printk", scope: !299, file: !299, line: 203, type: !4280, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4282)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{null, !278, null}
!4282 = !{!4283, !4284}
!4283 = !DILocalVariable(name: "fmt", arg: 1, scope: !4279, file: !299, line: 203, type: !278)
!4284 = !DILocalVariable(name: "ap", scope: !4279, file: !299, line: 205, type: !4217)
!4285 = !DILocation(line: 0, scope: !4279)
!4286 = !DILocation(line: 205, column: 2, scope: !4279)
!4287 = !DILocation(line: 205, column: 10, scope: !4279)
!4288 = !DILocation(line: 207, column: 2, scope: !4279)
!4289 = !DILocation(line: 209, column: 2, scope: !4279)
!4290 = !DILocation(line: 211, column: 2, scope: !4279)
!4291 = !DILocation(line: 212, column: 1, scope: !4279)
!4292 = distinct !DISubprogram(name: "snprintk", scope: !299, file: !299, line: 239, type: !4293, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4295)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!119, !106, !239, !278, null}
!4295 = !{!4296, !4297, !4298, !4299, !4300}
!4296 = !DILocalVariable(name: "str", arg: 1, scope: !4292, file: !299, line: 239, type: !106)
!4297 = !DILocalVariable(name: "size", arg: 2, scope: !4292, file: !299, line: 239, type: !239)
!4298 = !DILocalVariable(name: "fmt", arg: 3, scope: !4292, file: !299, line: 239, type: !278)
!4299 = !DILocalVariable(name: "ap", scope: !4292, file: !299, line: 241, type: !4217)
!4300 = !DILocalVariable(name: "ret", scope: !4292, file: !299, line: 242, type: !119)
!4301 = !DILocation(line: 0, scope: !4292)
!4302 = !DILocation(line: 241, column: 2, scope: !4292)
!4303 = !DILocation(line: 241, column: 10, scope: !4292)
!4304 = !DILocation(line: 244, column: 2, scope: !4292)
!4305 = !DILocation(line: 245, column: 8, scope: !4292)
!4306 = !DILocation(line: 246, column: 2, scope: !4292)
!4307 = !DILocation(line: 249, column: 1, scope: !4292)
!4308 = !DILocation(line: 248, column: 2, scope: !4292)
!4309 = distinct !DISubprogram(name: "vsnprintk", scope: !299, file: !299, line: 251, type: !4310, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4312)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!119, !106, !239, !278, !4217}
!4312 = !{!4313, !4314, !4315, !4316, !4317}
!4313 = !DILocalVariable(name: "str", arg: 1, scope: !4309, file: !299, line: 251, type: !106)
!4314 = !DILocalVariable(name: "size", arg: 2, scope: !4309, file: !299, line: 251, type: !239)
!4315 = !DILocalVariable(name: "fmt", arg: 3, scope: !4309, file: !299, line: 251, type: !278)
!4316 = !DILocalVariable(name: "ap", arg: 4, scope: !4309, file: !299, line: 251, type: !4217)
!4317 = !DILocalVariable(name: "ctx", scope: !4309, file: !299, line: 253, type: !4318)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !299, line: 217, size: 96, elements: !4319)
!4319 = !{!4320, !4321, !4322}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4318, file: !299, line: 218, baseType: !106, size: 32)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4318, file: !299, line: 219, baseType: !119, size: 32, offset: 32)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4318, file: !299, line: 220, baseType: !119, size: 32, offset: 64)
!4323 = !DILocation(line: 0, scope: !4309)
!4324 = !DILocation(line: 253, column: 2, scope: !4309)
!4325 = !DILocation(line: 253, column: 21, scope: !4309)
!4326 = !DILocation(line: 253, column: 27, scope: !4309)
!4327 = !DILocation(line: 255, column: 2, scope: !4309)
!4328 = !DILocation(line: 257, column: 10, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4309, file: !299, line: 257, column: 6)
!4330 = !DILocation(line: 257, column: 22, scope: !4329)
!4331 = !DILocation(line: 257, column: 16, scope: !4329)
!4332 = !DILocation(line: 257, column: 6, scope: !4309)
!4333 = !DILocation(line: 258, column: 3, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4329, file: !299, line: 257, column: 27)
!4335 = !DILocation(line: 258, column: 18, scope: !4334)
!4336 = !DILocation(line: 259, column: 2, scope: !4334)
!4337 = !DILocation(line: 262, column: 1, scope: !4309)
!4338 = !DILocation(line: 261, column: 2, scope: !4309)
!4339 = distinct !DISubprogram(name: "str_out", scope: !299, file: !299, line: 223, type: !4340, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4343)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!119, !119, !4342}
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 32)
!4343 = !{!4344, !4345}
!4344 = !DILocalVariable(name: "c", arg: 1, scope: !4339, file: !299, line: 223, type: !119)
!4345 = !DILocalVariable(name: "ctx", arg: 2, scope: !4339, file: !299, line: 223, type: !4342)
!4346 = !DILocation(line: 0, scope: !4339)
!4347 = !DILocation(line: 225, column: 11, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4339, file: !299, line: 225, column: 6)
!4349 = !DILocation(line: 225, column: 15, scope: !4348)
!4350 = !DILocation(line: 0, scope: !4348)
!4351 = !DILocation(line: 225, column: 23, scope: !4348)
!4352 = !DILocation(line: 225, column: 45, scope: !4348)
!4353 = !DILocation(line: 225, column: 37, scope: !4348)
!4354 = !DILocation(line: 225, column: 6, scope: !4339)
!4355 = !DILocation(line: 226, column: 8, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4348, file: !299, line: 225, column: 50)
!4357 = !DILocation(line: 226, column: 13, scope: !4356)
!4358 = !DILocation(line: 227, column: 3, scope: !4356)
!4359 = !DILocation(line: 230, column: 29, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4339, file: !299, line: 230, column: 6)
!4361 = !DILocation(line: 230, column: 17, scope: !4360)
!4362 = !DILocation(line: 230, column: 6, scope: !4339)
!4363 = !DILocation(line: 231, column: 22, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4360, file: !299, line: 230, column: 34)
!4365 = !DILocation(line: 231, column: 3, scope: !4364)
!4366 = !DILocation(line: 231, column: 26, scope: !4364)
!4367 = !DILocation(line: 232, column: 2, scope: !4364)
!4368 = !DILocation(line: 233, column: 28, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4360, file: !299, line: 232, column: 9)
!4370 = !DILocation(line: 233, column: 22, scope: !4369)
!4371 = !DILocation(line: 233, column: 3, scope: !4369)
!4372 = !DILocation(line: 233, column: 26, scope: !4369)
!4373 = !DILocation(line: 237, column: 1, scope: !4339)
!4374 = distinct !DISubprogram(name: "z_thread_entry", scope: !4375, file: !4375, line: 30, type: !4376, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !4378)
!4375 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4376 = !DISubroutineType(types: !4377)
!4377 = !{null, !108, !113, !113, !113}
!4378 = !{!4379, !4380, !4381, !4382}
!4379 = !DILocalVariable(name: "entry", arg: 1, scope: !4374, file: !4375, line: 30, type: !108)
!4380 = !DILocalVariable(name: "p1", arg: 2, scope: !4374, file: !4375, line: 31, type: !113)
!4381 = !DILocalVariable(name: "p2", arg: 3, scope: !4374, file: !4375, line: 31, type: !113)
!4382 = !DILocalVariable(name: "p3", arg: 4, scope: !4374, file: !4375, line: 31, type: !113)
!4383 = !DILocation(line: 0, scope: !4374)
!4384 = !DILocation(line: 36, column: 2, scope: !4374)
!4385 = !DILocation(line: 38, column: 17, scope: !4374)
!4386 = !DILocation(line: 38, column: 2, scope: !4374)
!4387 = !DILocation(line: 45, column: 2, scope: !4374)
!4388 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !4389, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !2022)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{!4391}
!4391 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !4392)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 32)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !4394)
!4394 = !{!4395, !4453, !4465, !4466, !4467, !4468, !4469, !4475, !4490}
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4393, file: !143, line: 247, baseType: !4396, size: 384)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !4397)
!4397 = !{!4398, !4422, !4429, !4430, !4431, !4440, !4441, !4442}
!4398 = !DIDerivedType(tag: DW_TAG_member, scope: !4396, file: !143, line: 60, baseType: !4399, size: 64)
!4399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4396, file: !143, line: 60, size: 64, elements: !4400)
!4400 = !{!4401, !4416}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4399, file: !143, line: 61, baseType: !4402, size: 64)
!4402 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !4403)
!4403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !4404)
!4404 = !{!4405, !4411}
!4405 = !DIDerivedType(tag: DW_TAG_member, scope: !4403, file: !153, line: 38, baseType: !4406, size: 32)
!4406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4403, file: !153, line: 38, size: 32, elements: !4407)
!4407 = !{!4408, !4410}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4406, file: !153, line: 39, baseType: !4409, size: 32)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4403, size: 32)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4406, file: !153, line: 40, baseType: !4409, size: 32)
!4411 = !DIDerivedType(tag: DW_TAG_member, scope: !4403, file: !153, line: 42, baseType: !4412, size: 32, offset: 32)
!4412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4403, file: !153, line: 42, size: 32, elements: !4413)
!4413 = !{!4414, !4415}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4412, file: !153, line: 43, baseType: !4409, size: 32)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4412, file: !153, line: 44, baseType: !4409, size: 32)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4399, file: !143, line: 62, baseType: !4417, size: 64)
!4417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !4418)
!4418 = !{!4419}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4417, file: !169, line: 50, baseType: !4420, size: 64)
!4420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4421, size: 64, elements: !174)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 32)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4396, file: !143, line: 68, baseType: !4423, size: 32, offset: 64)
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4424, size: 32)
!4424 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !4425)
!4425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !4426)
!4426 = !{!4427}
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4425, file: !179, line: 232, baseType: !4428, size: 64)
!4428 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !4403)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4396, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4396, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!4431 = !DIDerivedType(tag: DW_TAG_member, scope: !4396, file: !143, line: 90, baseType: !4432, size: 16, offset: 112)
!4432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4396, file: !143, line: 90, size: 16, elements: !4433)
!4433 = !{!4434, !4439}
!4434 = !DIDerivedType(tag: DW_TAG_member, scope: !4432, file: !143, line: 91, baseType: !4435, size: 16)
!4435 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4432, file: !143, line: 91, size: 16, elements: !4436)
!4436 = !{!4437, !4438}
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4435, file: !143, line: 96, baseType: !195, size: 8)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4435, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4432, file: !143, line: 100, baseType: !199, size: 16)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4396, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4396, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4396, file: !143, line: 131, baseType: !4443, size: 192, offset: 192)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !4444)
!4444 = !{!4445, !4446, !4452}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4443, file: !179, line: 245, baseType: !4402, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4443, file: !179, line: 246, baseType: !4447, size: 32, offset: 64)
!4447 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !4448)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 32)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{null, !4451}
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 32)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4443, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4393, file: !143, line: 250, baseType: !4454, size: 288, offset: 384)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !4455)
!4455 = !{!4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4454, file: !216, line: 26, baseType: !118, size: 32)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4454, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4454, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4454, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4454, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4454, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4454, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4454, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4454, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4393, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4393, file: !143, line: 256, baseType: !4424, size: 64, offset: 704)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4393, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4393, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4393, file: !143, line: 300, baseType: !4470, size: 96, offset: 1056)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !4471)
!4471 = !{!4472, !4473, !4474}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4470, file: !143, line: 153, baseType: !22, size: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4470, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4470, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4393, file: !143, line: 325, baseType: !4476, size: 32, offset: 1152)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 32)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !4478)
!4478 = !{!4479, !4485, !4486}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4477, file: !245, line: 5074, baseType: !4480, size: 96)
!4480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !4481)
!4481 = !{!4482, !4483, !4484}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4480, file: !249, line: 57, baseType: !252, size: 32)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4480, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4480, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4477, file: !245, line: 5075, baseType: !4424, size: 64, offset: 96)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4477, file: !245, line: 5076, baseType: !4487, size: 32, offset: 160)
!4487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !4488)
!4488 = !{!4489}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4487, file: !259, line: 52, baseType: !22, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4393, file: !143, line: 343, baseType: !4491, size: 64, offset: 1184)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !4492)
!4492 = !{!4493, !4494}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4491, file: !216, line: 63, baseType: !118, size: 32)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4491, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!4495 = !DILocation(line: 535, column: 9, scope: !4388)
!4496 = !DILocation(line: 535, column: 2, scope: !4388)
!4497 = distinct !DISubprogram(name: "k_thread_abort", scope: !3204, file: !3204, line: 188, type: !4498, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !4500)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{null, !4391}
!4500 = !{!4501}
!4501 = !DILocalVariable(name: "thread", arg: 1, scope: !4497, file: !3204, line: 188, type: !4391)
!4502 = !DILocation(line: 0, scope: !4497)
!4503 = !DILocation(line: 197, column: 2, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4497, file: !3204, line: 197, column: 2)
!4505 = !{i64 2154746379}
!4506 = !DILocation(line: 198, column: 2, scope: !4497)
!4507 = !DILocation(line: 199, column: 1, scope: !4497)
!4508 = distinct !DISubprogram(name: "z_current_get", scope: !3204, file: !3204, line: 173, type: !4389, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !2022)
!4509 = !DILocation(line: 180, column: 2, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4508, file: !3204, line: 180, column: 2)
!4511 = !{i64 2154746311}
!4512 = !DILocation(line: 181, column: 9, scope: !4508)
!4513 = !DILocation(line: 181, column: 2, scope: !4508)
!4514 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2376, file: !2376, line: 1338, type: !4515, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !4523)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{!119, !3668, !113, !278, !4517, !118}
!4517 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3286, line: 99, baseType: !4518)
!4518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3286, line: 40, baseType: !4519)
!4519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2376, baseType: !4520)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4521)
!4521 = !{!4522}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4520, file: !2376, baseType: !113, size: 32)
!4523 = !{!4524, !4525, !4526, !4527, !4528, !4529, !4533, !4534, !4535, !4537, !4542, !4585, !4588, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4600, !4601, !4602, !4606, !4609, !4611, !4614, !4615, !4616, !4621, !4627, !4630, !4634, !4640, !4644, !4647, !4649, !4652}
!4524 = !DILocalVariable(name: "out", arg: 1, scope: !4514, file: !2376, line: 1338, type: !3668)
!4525 = !DILocalVariable(name: "ctx", arg: 2, scope: !4514, file: !2376, line: 1338, type: !113)
!4526 = !DILocalVariable(name: "fp", arg: 3, scope: !4514, file: !2376, line: 1338, type: !278)
!4527 = !DILocalVariable(name: "ap", arg: 4, scope: !4514, file: !2376, line: 1339, type: !4517)
!4528 = !DILocalVariable(name: "flags", arg: 5, scope: !4514, file: !2376, line: 1339, type: !118)
!4529 = !DILocalVariable(name: "buf", scope: !4514, file: !2376, line: 1341, type: !4530)
!4530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !4531)
!4531 = !{!4532}
!4532 = !DISubrange(count: 22)
!4533 = !DILocalVariable(name: "count", scope: !4514, file: !2376, line: 1342, type: !239)
!4534 = !DILocalVariable(name: "sint", scope: !4514, file: !2376, line: 1343, type: !2395)
!4535 = !DILocalVariable(name: "tagged_ap", scope: !4514, file: !2376, line: 1345, type: !4536)
!4536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!4537 = !DILocalVariable(name: "rc", scope: !4538, file: !2376, line: 1377, type: !119)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2376, line: 1377, column: 4)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2376, line: 1376, column: 19)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1376, column: 7)
!4541 = distinct !DILexicalBlock(scope: !4514, file: !2376, line: 1375, column: 19)
!4542 = !DILocalVariable(name: "state", scope: !4541, file: !2376, line: 1395, type: !4543)
!4543 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4514, file: !2376, line: 1392, size: 192, elements: !4544)
!4544 = !{!4545, !4553}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4543, file: !2376, line: 1393, baseType: !4546, size: 64)
!4546 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2376, line: 166, size: 64, elements: !4547)
!4547 = !{!4548, !4549, !4550, !4551, !4552}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4546, file: !2376, line: 168, baseType: !2395, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4546, file: !2376, line: 171, baseType: !2398, size: 64)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4546, file: !2376, line: 174, baseType: !276, size: 64)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4546, file: !2376, line: 177, baseType: !274, size: 64)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4546, file: !2376, line: 180, baseType: !113, size: 32)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4543, file: !2376, line: 1394, baseType: !4554, size: 96, offset: 64)
!4554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2376, line: 189, size: 96, elements: !4555)
!4555 = !{!4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4580}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4554, file: !2376, line: 191, baseType: !345, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4554, file: !2376, line: 194, baseType: !345, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4554, file: !2376, line: 197, baseType: !345, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4554, file: !2376, line: 200, baseType: !345, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4554, file: !2376, line: 203, baseType: !345, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4554, file: !2376, line: 206, baseType: !345, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4554, file: !2376, line: 209, baseType: !345, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4554, file: !2376, line: 212, baseType: !345, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4554, file: !2376, line: 219, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4554, file: !2376, line: 222, baseType: !345, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4554, file: !2376, line: 229, baseType: !345, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4554, file: !2376, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4554, file: !2376, line: 238, baseType: !345, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4554, file: !2376, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4554, file: !2376, line: 244, baseType: !345, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4554, file: !2376, line: 247, baseType: !345, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4554, file: !2376, line: 252, baseType: !345, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4554, file: !2376, line: 257, baseType: !345, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4554, file: !2376, line: 260, baseType: !186, size: 8, offset: 24)
!4575 = !DIDerivedType(tag: DW_TAG_member, scope: !4554, file: !2376, line: 262, baseType: !4576, size: 32, offset: 32)
!4576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4554, file: !2376, line: 262, size: 32, elements: !4577)
!4577 = !{!4578, !4579}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4576, file: !2376, line: 267, baseType: !119, size: 32)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4576, file: !2376, line: 289, baseType: !119, size: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, scope: !4554, file: !2376, line: 292, baseType: !4581, size: 32, offset: 64)
!4581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4554, file: !2376, line: 292, size: 32, elements: !4582)
!4582 = !{!4583, !4584}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4581, file: !2376, line: 297, baseType: !119, size: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4581, file: !2376, line: 306, baseType: !119, size: 32)
!4585 = !DILocalVariable(name: "conv", scope: !4541, file: !2376, line: 1400, type: !4586)
!4586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4587)
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 32)
!4588 = !DILocalVariable(name: "value", scope: !4541, file: !2376, line: 1401, type: !4589)
!4589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4590)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 32)
!4591 = !DILocalVariable(name: "sp", scope: !4541, file: !2376, line: 1402, type: !278)
!4592 = !DILocalVariable(name: "width", scope: !4541, file: !2376, line: 1403, type: !119)
!4593 = !DILocalVariable(name: "precision", scope: !4541, file: !2376, line: 1404, type: !119)
!4594 = !DILocalVariable(name: "bps", scope: !4541, file: !2376, line: 1405, type: !278)
!4595 = !DILocalVariable(name: "bpe", scope: !4541, file: !2376, line: 1406, type: !278)
!4596 = !DILocalVariable(name: "sign", scope: !4541, file: !2376, line: 1407, type: !107)
!4597 = !DILocalVariable(name: "arg", scope: !4598, file: !2376, line: 1432, type: !119)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !2376, line: 1431, column: 24)
!4599 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1431, column: 7)
!4600 = !DILocalVariable(name: "specifier_cat", scope: !4541, file: !2376, line: 1468, type: !2375)
!4601 = !DILocalVariable(name: "length_mod", scope: !4541, file: !2376, line: 1470, type: !2383)
!4602 = !DILocalVariable(name: "rc", scope: !4603, file: !2376, line: 1575, type: !119)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !2376, line: 1575, column: 4)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !2376, line: 1574, column: 43)
!4605 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1574, column: 7)
!4606 = !DILocalVariable(name: "rc", scope: !4607, file: !2376, line: 1584, type: !119)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !2376, line: 1584, column: 4)
!4608 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1582, column: 28)
!4609 = !DILocalVariable(name: "len", scope: !4610, file: !2376, line: 1589, type: !239)
!4610 = distinct !DILexicalBlock(scope: !4608, file: !2376, line: 1586, column: 13)
!4611 = !DILocalVariable(name: "len", scope: !4612, file: !2376, line: 1641, type: !239)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !2376, line: 1640, column: 24)
!4613 = distinct !DILexicalBlock(scope: !4608, file: !2376, line: 1640, column: 8)
!4614 = !DILocalVariable(name: "nj_len", scope: !4541, file: !2376, line: 1722, type: !239)
!4615 = !DILocalVariable(name: "pad_len", scope: !4541, file: !2376, line: 1723, type: !119)
!4616 = !DILocalVariable(name: "pad", scope: !4617, file: !2376, line: 1751, type: !107)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !2376, line: 1750, column: 26)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !2376, line: 1750, column: 8)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2376, line: 1747, column: 18)
!4620 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1747, column: 7)
!4621 = !DILocalVariable(name: "rc", scope: !4622, file: !2376, line: 1758, type: !119)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !2376, line: 1758, column: 7)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2376, line: 1757, column: 21)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2376, line: 1757, column: 10)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2376, line: 1756, column: 26)
!4626 = distinct !DILexicalBlock(scope: !4617, file: !2376, line: 1756, column: 9)
!4627 = !DILocalVariable(name: "rc", scope: !4628, file: !2376, line: 1765, type: !119)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2376, line: 1765, column: 6)
!4629 = distinct !DILexicalBlock(scope: !4617, file: !2376, line: 1764, column: 25)
!4630 = !DILocalVariable(name: "rc", scope: !4631, file: !2376, line: 1774, type: !119)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !2376, line: 1774, column: 4)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !2376, line: 1773, column: 18)
!4633 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1773, column: 7)
!4634 = !DILocalVariable(name: "rc", scope: !4635, file: !2376, line: 1819, type: !119)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !2376, line: 1819, column: 5)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !2376, line: 1818, column: 44)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !2376, line: 1818, column: 8)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !2376, line: 1817, column: 10)
!4639 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1777, column: 7)
!4640 = !DILocalVariable(name: "rc", scope: !4641, file: !2376, line: 1823, type: !119)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !2376, line: 1823, column: 5)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !2376, line: 1822, column: 26)
!4643 = distinct !DILexicalBlock(scope: !4638, file: !2376, line: 1822, column: 8)
!4644 = !DILocalVariable(name: "rc", scope: !4645, file: !2376, line: 1828, type: !119)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2376, line: 1828, column: 5)
!4646 = distinct !DILexicalBlock(scope: !4638, file: !2376, line: 1827, column: 26)
!4647 = !DILocalVariable(name: "rc", scope: !4648, file: !2376, line: 1831, type: !119)
!4648 = distinct !DILexicalBlock(scope: !4638, file: !2376, line: 1831, column: 4)
!4649 = !DILocalVariable(name: "rc", scope: !4650, file: !2376, line: 1836, type: !119)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !2376, line: 1836, column: 4)
!4651 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1835, column: 21)
!4652 = !DILabel(scope: !4608, name: "prec_int_pad0", file: !2376, line: 1634)
!4653 = !DILocation(line: 0, scope: !4514)
!4654 = !DILocation(line: 1341, column: 2, scope: !4514)
!4655 = !DILocation(line: 1341, column: 7, scope: !4514)
!4656 = !DILocation(line: 1375, column: 2, scope: !4514)
!4657 = !DILocation(line: 1342, column: 9, scope: !4514)
!4658 = !DILocation(line: 1375, column: 9, scope: !4514)
!4659 = !DILocation(line: 1377, column: 4, scope: !4538)
!4660 = !DILocation(line: 0, scope: !4538)
!4661 = !DILocation(line: 1377, column: 4, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4538, file: !2376, line: 1377, column: 4)
!4663 = distinct !{!4663, !4656, !4664}
!4664 = !DILocation(line: 1839, column: 2, scope: !4514)
!4665 = !DILocation(line: 1392, column: 3, scope: !4541)
!4666 = !DILocation(line: 1395, column: 5, scope: !4541)
!4667 = !DILocation(line: 0, scope: !4541)
!4668 = !DILocation(line: 1409, column: 8, scope: !4541)
!4669 = !DILocation(line: 1414, column: 13, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1414, column: 7)
!4671 = !DILocation(line: 1414, column: 7, scope: !4541)
!4672 = !DILocation(line: 1415, column: 12, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4670, file: !2376, line: 1414, column: 25)
!4674 = !DILocation(line: 1417, column: 14, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4673, file: !2376, line: 1417, column: 8)
!4676 = !DILocation(line: 1417, column: 8, scope: !4673)
!4677 = !DILocation(line: 1418, column: 21, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4675, file: !2376, line: 1417, column: 19)
!4679 = !DILocation(line: 1419, column: 13, scope: !4678)
!4680 = !DILocation(line: 1420, column: 4, scope: !4678)
!4681 = !DILocation(line: 1421, column: 20, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4670, file: !2376, line: 1421, column: 14)
!4683 = !DILocation(line: 1421, column: 14, scope: !4670)
!4684 = !DILocation(line: 1431, column: 13, scope: !4599)
!4685 = !DILocation(line: 1431, column: 7, scope: !4541)
!4686 = !DILocation(line: 1432, column: 14, scope: !4598)
!4687 = !DILocation(line: 0, scope: !4598)
!4688 = !DILocation(line: 1434, column: 12, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4598, file: !2376, line: 1434, column: 8)
!4690 = !DILocation(line: 1434, column: 8, scope: !4598)
!4691 = !DILocation(line: 1435, column: 24, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4689, file: !2376, line: 1434, column: 17)
!4693 = !DILocation(line: 1436, column: 4, scope: !4692)
!4694 = !DILocation(line: 1439, column: 20, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4599, file: !2376, line: 1439, column: 14)
!4696 = !DILocation(line: 1439, column: 14, scope: !4599)
!4697 = !DILocation(line: 1469, column: 37, scope: !4541)
!4698 = !DILocation(line: 1448, column: 20, scope: !4541)
!4699 = !DILocation(line: 1449, column: 22, scope: !4541)
!4700 = !DILocation(line: 1471, column: 34, scope: !4541)
!4701 = !DILocation(line: 1478, column: 7, scope: !4541)
!4702 = !DILocation(line: 1479, column: 4, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !2376, line: 1478, column: 40)
!4704 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1478, column: 7)
!4705 = !DILocation(line: 1484, column: 19, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !2376, line: 1479, column: 24)
!4707 = !DILocation(line: 1484, column: 17, scope: !4706)
!4708 = !DILocation(line: 1485, column: 5, scope: !4706)
!4709 = !DILocation(line: 1492, column: 20, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2376, line: 1491, column: 12)
!4711 = distinct !DILexicalBlock(scope: !4706, file: !2376, line: 1487, column: 9)
!4712 = !DILocation(line: 1492, column: 18, scope: !4710)
!4713 = !DILocation(line: 1494, column: 5, scope: !4706)
!4714 = !DILocation(line: 1497, column: 23, scope: !4706)
!4715 = !DILocation(line: 1496, column: 17, scope: !4706)
!4716 = !DILocation(line: 1498, column: 5, scope: !4706)
!4717 = !DILocation(line: 1501, column: 23, scope: !4706)
!4718 = !DILocation(line: 1500, column: 17, scope: !4706)
!4719 = !DILocation(line: 1502, column: 5, scope: !4706)
!4720 = !DILocation(line: 1513, column: 23, scope: !4706)
!4721 = !DILocation(line: 1513, column: 6, scope: !4706)
!4722 = !DILocation(line: 1512, column: 17, scope: !4706)
!4723 = !DILocation(line: 1514, column: 5, scope: !4706)
!4724 = !DILocation(line: 0, scope: !4706)
!4725 = !DILocation(line: 1516, column: 8, scope: !4703)
!4726 = !DILocation(line: 1517, column: 19, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2376, line: 1516, column: 33)
!4728 = distinct !DILexicalBlock(scope: !4703, file: !2376, line: 1516, column: 8)
!4729 = !DILocation(line: 1517, column: 17, scope: !4727)
!4730 = !DILocation(line: 1518, column: 4, scope: !4727)
!4731 = !DILocation(line: 1519, column: 19, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2376, line: 1518, column: 39)
!4733 = distinct !DILexicalBlock(scope: !4728, file: !2376, line: 1518, column: 15)
!4734 = !DILocation(line: 1519, column: 17, scope: !4732)
!4735 = !DILocation(line: 1520, column: 4, scope: !4732)
!4736 = !DILocation(line: 1522, column: 4, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !2376, line: 1521, column: 47)
!4738 = distinct !DILexicalBlock(scope: !4704, file: !2376, line: 1521, column: 14)
!4739 = !DILocation(line: 1527, column: 19, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4737, file: !2376, line: 1522, column: 24)
!4741 = !DILocation(line: 1527, column: 17, scope: !4740)
!4742 = !DILocation(line: 1528, column: 5, scope: !4740)
!4743 = !DILocation(line: 0, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4740, file: !2376, line: 1530, column: 9)
!4745 = !DILocation(line: 1540, column: 23, scope: !4740)
!4746 = !DILocation(line: 1539, column: 17, scope: !4740)
!4747 = !DILocation(line: 1542, column: 5, scope: !4740)
!4748 = !DILocation(line: 1545, column: 23, scope: !4740)
!4749 = !DILocation(line: 1544, column: 17, scope: !4740)
!4750 = !DILocation(line: 1547, column: 5, scope: !4740)
!4751 = !DILocation(line: 1551, column: 23, scope: !4740)
!4752 = !DILocation(line: 1551, column: 6, scope: !4740)
!4753 = !DILocation(line: 1550, column: 17, scope: !4740)
!4754 = !DILocation(line: 1552, column: 5, scope: !4740)
!4755 = !DILocation(line: 0, scope: !4740)
!4756 = !DILocation(line: 1554, column: 8, scope: !4737)
!4757 = !DILocation(line: 1555, column: 19, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !2376, line: 1554, column: 33)
!4759 = distinct !DILexicalBlock(scope: !4737, file: !2376, line: 1554, column: 8)
!4760 = !DILocation(line: 1555, column: 17, scope: !4758)
!4761 = !DILocation(line: 1556, column: 4, scope: !4758)
!4762 = !DILocation(line: 1557, column: 19, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !2376, line: 1556, column: 39)
!4764 = distinct !DILexicalBlock(scope: !4759, file: !2376, line: 1556, column: 15)
!4765 = !DILocation(line: 1557, column: 17, scope: !4763)
!4766 = !DILocation(line: 1558, column: 4, scope: !4763)
!4767 = !DILocation(line: 0, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !2376, line: 1560, column: 8)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !2376, line: 1559, column: 45)
!4770 = distinct !DILexicalBlock(scope: !4738, file: !2376, line: 1559, column: 14)
!4771 = !DILocation(line: 1566, column: 17, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !2376, line: 1565, column: 46)
!4773 = distinct !DILexicalBlock(scope: !4770, file: !2376, line: 1565, column: 14)
!4774 = !DILocation(line: 1566, column: 15, scope: !4772)
!4775 = !DILocation(line: 1567, column: 3, scope: !4772)
!4776 = !DILocation(line: 1574, column: 21, scope: !4605)
!4777 = !DILocation(line: 1575, column: 4, scope: !4603)
!4778 = !DILocation(line: 0, scope: !4603)
!4779 = !DILocation(line: 1575, column: 4, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4603, file: !2376, line: 1575, column: 4)
!4781 = !DILocation(line: 1582, column: 17, scope: !4541)
!4782 = !DILocation(line: 1582, column: 3, scope: !4541)
!4783 = !DILocation(line: 1584, column: 4, scope: !4607)
!4784 = !DILocation(line: 0, scope: !4607)
!4785 = !DILocation(line: 1584, column: 4, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4607, file: !2376, line: 1584, column: 4)
!4787 = !DILocation(line: 1587, column: 31, scope: !4610)
!4788 = !DILocation(line: 1591, column: 18, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4610, file: !2376, line: 1591, column: 8)
!4790 = !DILocation(line: 1591, column: 8, scope: !4610)
!4791 = !DILocation(line: 1592, column: 11, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4789, file: !2376, line: 1591, column: 24)
!4793 = !DILocation(line: 0, scope: !4610)
!4794 = !DILocation(line: 1593, column: 4, scope: !4792)
!4795 = !DILocation(line: 1594, column: 11, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4789, file: !2376, line: 1593, column: 11)
!4797 = !DILocation(line: 1604, column: 51, scope: !4608)
!4798 = !DILocation(line: 1604, column: 13, scope: !4608)
!4799 = !DILocation(line: 1604, column: 11, scope: !4608)
!4800 = !DILocation(line: 1606, column: 4, scope: !4608)
!4801 = !DILocation(line: 1609, column: 14, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4608, file: !2376, line: 1609, column: 8)
!4803 = !DILocation(line: 1609, column: 8, scope: !4608)
!4804 = !DILocation(line: 1619, column: 18, scope: !4608)
!4805 = !DILocation(line: 1620, column: 13, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4608, file: !2376, line: 1620, column: 8)
!4807 = !DILocation(line: 1620, column: 8, scope: !4608)
!4808 = !DILocation(line: 1622, column: 36, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !2376, line: 1620, column: 18)
!4810 = !DILocation(line: 1622, column: 17, scope: !4809)
!4811 = !DILocation(line: 1623, column: 4, scope: !4809)
!4812 = !DILocation(line: 1632, column: 29, scope: !4608)
!4813 = !DILocation(line: 1632, column: 10, scope: !4608)
!4814 = !DILocation(line: 1632, column: 4, scope: !4608)
!4815 = !DILocation(line: 1407, column: 8, scope: !4541)
!4816 = !DILocation(line: 0, scope: !4608)
!4817 = !DILocation(line: 1634, column: 3, scope: !4608)
!4818 = !DILocation(line: 1640, column: 18, scope: !4613)
!4819 = !DILocation(line: 1640, column: 8, scope: !4608)
!4820 = !DILocation(line: 1729, column: 13, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1729, column: 7)
!4822 = !DILocation(line: 1641, column: 22, scope: !4612)
!4823 = !DILocation(line: 0, scope: !4612)
!4824 = !DILocation(line: 1646, column: 21, scope: !4612)
!4825 = !DILocation(line: 1649, column: 13, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4612, file: !2376, line: 1649, column: 9)
!4827 = !DILocation(line: 1649, column: 9, scope: !4612)
!4828 = !DILocation(line: 1650, column: 35, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4826, file: !2376, line: 1649, column: 34)
!4830 = !DILocation(line: 1650, column: 23, scope: !4829)
!4831 = !DILocation(line: 1651, column: 5, scope: !4829)
!4832 = !DILocation(line: 1660, column: 15, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4608, file: !2376, line: 1660, column: 8)
!4834 = !DILocation(line: 1660, column: 19, scope: !4833)
!4835 = !DILocation(line: 1660, column: 8, scope: !4608)
!4836 = !DILocation(line: 1661, column: 23, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4833, file: !2376, line: 1660, column: 28)
!4838 = !DILocation(line: 1661, column: 11, scope: !4837)
!4839 = !DILocation(line: 1665, column: 22, scope: !4837)
!4840 = !DILocation(line: 1666, column: 21, scope: !4837)
!4841 = !DILocation(line: 1668, column: 5, scope: !4837)
!4842 = !DILocation(line: 1677, column: 30, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !2376, line: 1676, column: 49)
!4844 = distinct !DILexicalBlock(scope: !4608, file: !2376, line: 1676, column: 8)
!4845 = !DILocation(line: 1677, column: 5, scope: !4843)
!4846 = !DILocation(line: 1680, column: 4, scope: !4608)
!4847 = !DILocation(line: 0, scope: !4789)
!4848 = !DILocation(line: 1597, column: 14, scope: !4610)
!4849 = !DILocation(line: 1699, column: 11, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1699, column: 7)
!4851 = !DILocation(line: 1699, column: 7, scope: !4541)
!4852 = !DILocation(line: 1725, column: 7, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1725, column: 7)
!4854 = !DILocation(line: 1725, column: 12, scope: !4853)
!4855 = !DILocation(line: 1747, column: 13, scope: !4620)
!4856 = !DILocation(line: 1747, column: 7, scope: !4541)
!4857 = !DILocation(line: 1722, column: 24, scope: !4541)
!4858 = !DILocation(line: 1725, column: 7, scope: !4541)
!4859 = !DILocation(line: 1729, column: 7, scope: !4541)
!4860 = !DILocation(line: 1736, column: 13, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4541, file: !2376, line: 1736, column: 7)
!4862 = !DILocation(line: 1735, column: 19, scope: !4541)
!4863 = !DILocation(line: 1736, column: 7, scope: !4541)
!4864 = !DILocation(line: 1748, column: 10, scope: !4619)
!4865 = !DILocation(line: 1750, column: 15, scope: !4618)
!4866 = !DILocation(line: 1750, column: 8, scope: !4619)
!4867 = !DILocation(line: 0, scope: !4617)
!4868 = !DILocation(line: 1756, column: 15, scope: !4626)
!4869 = !DILocation(line: 1756, column: 9, scope: !4617)
!4870 = !DILocation(line: 1758, column: 7, scope: !4622)
!4871 = !DILocation(line: 0, scope: !4622)
!4872 = !DILocation(line: 1758, column: 7, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4622, file: !2376, line: 1758, column: 7)
!4874 = !DILocation(line: 1764, column: 5, scope: !4617)
!4875 = !DILocation(line: 0, scope: !4619)
!4876 = !DILocation(line: 1764, column: 20, scope: !4617)
!4877 = !DILocation(line: 1764, column: 17, scope: !4617)
!4878 = !DILocation(line: 1765, column: 6, scope: !4628)
!4879 = !DILocation(line: 0, scope: !4628)
!4880 = !DILocation(line: 1765, column: 6, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4628, file: !2376, line: 1765, column: 6)
!4882 = distinct !{!4882, !4874, !4883}
!4883 = !DILocation(line: 1766, column: 5, scope: !4617)
!4884 = !DILocation(line: 1773, column: 12, scope: !4633)
!4885 = !DILocation(line: 1773, column: 7, scope: !4541)
!4886 = !DILocation(line: 1773, column: 7, scope: !4633)
!4887 = !DILocation(line: 1774, column: 4, scope: !4631)
!4888 = !DILocation(line: 0, scope: !4631)
!4889 = !DILocation(line: 1774, column: 4, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4631, file: !2376, line: 1774, column: 4)
!4891 = !DILocation(line: 1818, column: 8, scope: !4637)
!4892 = !DILocation(line: 1818, column: 27, scope: !4637)
!4893 = !DILocation(line: 1818, column: 25, scope: !4637)
!4894 = !DILocation(line: 1818, column: 8, scope: !4638)
!4895 = !DILocation(line: 1819, column: 5, scope: !4635)
!4896 = !DILocation(line: 0, scope: !4635)
!4897 = !DILocation(line: 1819, column: 5, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4635, file: !2376, line: 1819, column: 5)
!4899 = !DILocation(line: 1822, column: 14, scope: !4643)
!4900 = !DILocation(line: 1822, column: 8, scope: !4638)
!4901 = !DILocation(line: 1823, column: 5, scope: !4641)
!4902 = !DILocation(line: 0, scope: !4641)
!4903 = !DILocation(line: 1823, column: 5, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4641, file: !2376, line: 1823, column: 5)
!4905 = !DILocation(line: 1826, column: 20, scope: !4638)
!4906 = !DILocation(line: 1827, column: 4, scope: !4638)
!4907 = !DILocation(line: 0, scope: !4638)
!4908 = !DILocation(line: 1827, column: 21, scope: !4638)
!4909 = !DILocation(line: 1827, column: 18, scope: !4638)
!4910 = !DILocation(line: 1828, column: 5, scope: !4645)
!4911 = !DILocation(line: 0, scope: !4645)
!4912 = !DILocation(line: 1828, column: 5, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4645, file: !2376, line: 1828, column: 5)
!4914 = distinct !{!4914, !4906, !4915}
!4915 = !DILocation(line: 1829, column: 4, scope: !4638)
!4916 = !DILocation(line: 1831, column: 4, scope: !4648)
!4917 = !DILocation(line: 0, scope: !4648)
!4918 = !DILocation(line: 1831, column: 4, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4648, file: !2376, line: 1831, column: 4)
!4920 = !DILocation(line: 1835, column: 16, scope: !4541)
!4921 = !DILocation(line: 1835, column: 3, scope: !4541)
!4922 = !DILocation(line: 1836, column: 4, scope: !4650)
!4923 = !DILocation(line: 0, scope: !4650)
!4924 = !DILocation(line: 1836, column: 4, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4650, file: !2376, line: 1836, column: 4)
!4926 = !DILocation(line: 1837, column: 4, scope: !4651)
!4927 = distinct !{!4927, !4921, !4928}
!4928 = !DILocation(line: 1838, column: 3, scope: !4541)
!4929 = !DILocation(line: 1844, column: 1, scope: !4514)
!4930 = distinct !DISubprogram(name: "extract_conversion", scope: !2376, file: !2376, line: 642, type: !4931, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !4933)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{!278, !4587, !278}
!4933 = !{!4934, !4935}
!4934 = !DILocalVariable(name: "conv", arg: 1, scope: !4930, file: !2376, line: 642, type: !4587)
!4935 = !DILocalVariable(name: "sp", arg: 2, scope: !4930, file: !2376, line: 643, type: !278)
!4936 = !DILocation(line: 0, scope: !4930)
!4937 = !DILocation(line: 645, column: 10, scope: !4930)
!4938 = !DILocation(line: 653, column: 2, scope: !4930)
!4939 = !DILocation(line: 654, column: 6, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4930, file: !2376, line: 654, column: 6)
!4941 = !DILocation(line: 654, column: 10, scope: !4940)
!4942 = !DILocation(line: 654, column: 6, scope: !4930)
!4943 = !DILocation(line: 655, column: 24, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !2376, line: 654, column: 18)
!4945 = !DILocation(line: 655, column: 19, scope: !4944)
!4946 = !DILocation(line: 656, column: 3, scope: !4944)
!4947 = !DILocation(line: 659, column: 7, scope: !4930)
!4948 = !DILocation(line: 660, column: 7, scope: !4930)
!4949 = !DILocation(line: 661, column: 7, scope: !4930)
!4950 = !DILocation(line: 662, column: 7, scope: !4930)
!4951 = !DILocation(line: 663, column: 7, scope: !4930)
!4952 = !DILocation(line: 665, column: 2, scope: !4930)
!4953 = !DILocation(line: 666, column: 1, scope: !4930)
!4954 = distinct !DISubprogram(name: "outs", scope: !2376, file: !2376, line: 1319, type: !4955, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !4957)
!4955 = !DISubroutineType(types: !4956)
!4956 = !{!119, !3668, !113, !278, !278}
!4957 = !{!4958, !4959, !4960, !4961, !4962, !4963}
!4958 = !DILocalVariable(name: "out", arg: 1, scope: !4954, file: !2376, line: 1319, type: !3668)
!4959 = !DILocalVariable(name: "ctx", arg: 2, scope: !4954, file: !2376, line: 1320, type: !113)
!4960 = !DILocalVariable(name: "sp", arg: 3, scope: !4954, file: !2376, line: 1321, type: !278)
!4961 = !DILocalVariable(name: "ep", arg: 4, scope: !4954, file: !2376, line: 1322, type: !278)
!4962 = !DILocalVariable(name: "count", scope: !4954, file: !2376, line: 1324, type: !239)
!4963 = !DILocalVariable(name: "rc", scope: !4964, file: !2376, line: 1327, type: !119)
!4964 = distinct !DILexicalBlock(scope: !4954, file: !2376, line: 1326, column: 45)
!4965 = !DILocation(line: 0, scope: !4954)
!4966 = !DILocation(line: 1326, column: 2, scope: !4954)
!4967 = !DILocation(line: 1324, column: 9, scope: !4954)
!4968 = !DILocation(line: 1326, column: 13, scope: !4954)
!4969 = !DILocation(line: 1326, column: 19, scope: !4954)
!4970 = !DILocation(line: 1327, column: 21, scope: !4964)
!4971 = !DILocation(line: 1326, column: 36, scope: !4954)
!4972 = !DILocation(line: 1326, column: 39, scope: !4954)
!4973 = !DILocation(line: 1327, column: 24, scope: !4964)
!4974 = !DILocation(line: 1327, column: 16, scope: !4964)
!4975 = !DILocation(line: 1327, column: 12, scope: !4964)
!4976 = !DILocation(line: 0, scope: !4964)
!4977 = !DILocation(line: 1329, column: 10, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4964, file: !2376, line: 1329, column: 7)
!4979 = !DILocation(line: 1329, column: 7, scope: !4964)
!4980 = distinct !{!4980, !4966, !4981}
!4981 = !DILocation(line: 1333, column: 2, scope: !4954)
!4982 = !DILocation(line: 1336, column: 1, scope: !4954)
!4983 = distinct !DISubprogram(name: "encode_uint", scope: !2376, file: !2376, line: 788, type: !4984, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !4986)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!106, !2398, !4587, !106, !278}
!4986 = !{!4987, !4988, !4989, !4990, !4991, !4992, !4994, !4995}
!4987 = !DILocalVariable(name: "value", arg: 1, scope: !4983, file: !2376, line: 788, type: !2398)
!4988 = !DILocalVariable(name: "conv", arg: 2, scope: !4983, file: !2376, line: 789, type: !4587)
!4989 = !DILocalVariable(name: "bps", arg: 3, scope: !4983, file: !2376, line: 790, type: !106)
!4990 = !DILocalVariable(name: "bpe", arg: 4, scope: !4983, file: !2376, line: 791, type: !278)
!4991 = !DILocalVariable(name: "upcase", scope: !4983, file: !2376, line: 793, type: !345)
!4992 = !DILocalVariable(name: "radix", scope: !4983, file: !2376, line: 794, type: !4993)
!4993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4994 = !DILocalVariable(name: "bp", scope: !4983, file: !2376, line: 795, type: !106)
!4995 = !DILocalVariable(name: "lsv", scope: !4996, file: !2376, line: 798, type: !32)
!4996 = distinct !DILexicalBlock(scope: !4983, file: !2376, line: 797, column: 5)
!4997 = !DILocation(line: 0, scope: !4983)
!4998 = !DILocation(line: 793, column: 35, scope: !4983)
!4999 = !DILocation(line: 793, column: 24, scope: !4983)
!5000 = !DILocation(line: 793, column: 16, scope: !4983)
!5001 = !DILocation(line: 794, column: 29, scope: !4983)
!5002 = !DILocation(line: 795, column: 24, scope: !4983)
!5003 = !DILocation(line: 795, column: 17, scope: !4983)
!5004 = !DILocation(line: 797, column: 2, scope: !4983)
!5005 = !DILocation(line: 802, column: 9, scope: !4996)
!5006 = !DILocation(line: 798, column: 22, scope: !4996)
!5007 = !DILocation(line: 0, scope: !4996)
!5008 = !DILocation(line: 800, column: 16, scope: !4996)
!5009 = !DILocation(line: 800, column: 11, scope: !4996)
!5010 = !DILocation(line: 800, column: 4, scope: !4996)
!5011 = !DILocation(line: 800, column: 9, scope: !4996)
!5012 = !DILocation(line: 803, column: 18, scope: !4983)
!5013 = !DILocation(line: 803, column: 24, scope: !4983)
!5014 = !DILocation(line: 803, column: 2, scope: !4996)
!5015 = distinct !{!5015, !5004, !5016}
!5016 = !DILocation(line: 803, column: 37, scope: !4983)
!5017 = !DILocation(line: 808, column: 12, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4983, file: !2376, line: 808, column: 6)
!5019 = !DILocation(line: 808, column: 6, scope: !4983)
!5020 = !DILocation(line: 809, column: 7, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5018, file: !2376, line: 808, column: 23)
!5022 = !DILocation(line: 813, column: 3, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5024, file: !2376, line: 811, column: 27)
!5024 = distinct !DILexicalBlock(scope: !5025, file: !2376, line: 811, column: 14)
!5025 = distinct !DILexicalBlock(scope: !5021, file: !2376, line: 809, column: 7)
!5026 = !DILocation(line: 0, scope: !5025)
!5027 = !DILocation(line: 818, column: 2, scope: !4983)
!5028 = distinct !DISubprogram(name: "store_count", scope: !2376, file: !2376, line: 1280, type: !5029, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5033)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{null, !5031, !113, !119}
!5031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5032, size: 32)
!5032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4554)
!5033 = !{!5034, !5035, !5036}
!5034 = !DILocalVariable(name: "conv", arg: 1, scope: !5028, file: !2376, line: 1280, type: !5031)
!5035 = !DILocalVariable(name: "dp", arg: 2, scope: !5028, file: !2376, line: 1281, type: !113)
!5036 = !DILocalVariable(name: "count", arg: 3, scope: !5028, file: !2376, line: 1282, type: !119)
!5037 = !DILocation(line: 0, scope: !5028)
!5038 = !DILocation(line: 1284, column: 38, scope: !5028)
!5039 = !DILocation(line: 1284, column: 2, scope: !5028)
!5040 = !DILocation(line: 1286, column: 4, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5028, file: !2376, line: 1284, column: 50)
!5042 = !DILocation(line: 1286, column: 14, scope: !5041)
!5043 = !DILocation(line: 1287, column: 3, scope: !5041)
!5044 = !DILocation(line: 1289, column: 24, scope: !5041)
!5045 = !DILocation(line: 1289, column: 22, scope: !5041)
!5046 = !DILocation(line: 1290, column: 3, scope: !5041)
!5047 = !DILocation(line: 1292, column: 18, scope: !5041)
!5048 = !DILocation(line: 1292, column: 4, scope: !5041)
!5049 = !DILocation(line: 1292, column: 16, scope: !5041)
!5050 = !DILocation(line: 1293, column: 3, scope: !5041)
!5051 = !DILocation(line: 1295, column: 4, scope: !5041)
!5052 = !DILocation(line: 1295, column: 15, scope: !5041)
!5053 = !DILocation(line: 1296, column: 3, scope: !5041)
!5054 = !DILocation(line: 1298, column: 22, scope: !5041)
!5055 = !DILocation(line: 1298, column: 4, scope: !5041)
!5056 = !DILocation(line: 1298, column: 20, scope: !5041)
!5057 = !DILocation(line: 1299, column: 3, scope: !5041)
!5058 = !DILocation(line: 1301, column: 21, scope: !5041)
!5059 = !DILocation(line: 1301, column: 4, scope: !5041)
!5060 = !DILocation(line: 1301, column: 19, scope: !5041)
!5061 = !DILocation(line: 1302, column: 3, scope: !5041)
!5062 = !DILocation(line: 1304, column: 4, scope: !5041)
!5063 = !DILocation(line: 1304, column: 17, scope: !5041)
!5064 = !DILocation(line: 1305, column: 3, scope: !5041)
!5065 = !DILocation(line: 1307, column: 4, scope: !5041)
!5066 = !DILocation(line: 1307, column: 20, scope: !5041)
!5067 = !DILocation(line: 1308, column: 3, scope: !5041)
!5068 = !DILocation(line: 1316, column: 1, scope: !5028)
!5069 = distinct !DISubprogram(name: "isupper", scope: !5070, file: !5070, line: 16, type: !301, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5071)
!5070 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5071 = !{!5072}
!5072 = !DILocalVariable(name: "a", arg: 1, scope: !5069, file: !5070, line: 16, type: !119)
!5073 = !DILocation(line: 0, scope: !5069)
!5074 = !DILocation(line: 18, column: 29, scope: !5069)
!5075 = !DILocation(line: 18, column: 45, scope: !5069)
!5076 = !DILocation(line: 18, column: 2, scope: !5069)
!5077 = distinct !DISubprogram(name: "conversion_radix", scope: !2376, file: !2376, line: 761, type: !5078, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5080)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!239, !107}
!5080 = !{!5081}
!5081 = !DILocalVariable(name: "specifier", arg: 1, scope: !5077, file: !2376, line: 761, type: !107)
!5082 = !DILocation(line: 0, scope: !5077)
!5083 = !DILocation(line: 763, column: 2, scope: !5077)
!5084 = !DILocation(line: 770, column: 3, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5077, file: !2376, line: 763, column: 21)
!5086 = !DILocation(line: 774, column: 3, scope: !5085)
!5087 = !DILocation(line: 0, scope: !5085)
!5088 = !DILocation(line: 776, column: 1, scope: !5077)
!5089 = distinct !DISubprogram(name: "extract_flags", scope: !2376, file: !2376, line: 339, type: !4931, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5090)
!5090 = !{!5091, !5092, !5093}
!5091 = !DILocalVariable(name: "conv", arg: 1, scope: !5089, file: !2376, line: 339, type: !4587)
!5092 = !DILocalVariable(name: "sp", arg: 2, scope: !5089, file: !2376, line: 340, type: !278)
!5093 = !DILocalVariable(name: "loop", scope: !5089, file: !2376, line: 342, type: !345)
!5094 = !DILocation(line: 0, scope: !5089)
!5095 = !DILocation(line: 344, column: 2, scope: !5089)
!5096 = !DILocation(line: 345, column: 11, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5089, file: !2376, line: 344, column: 5)
!5098 = !DILocation(line: 345, column: 3, scope: !5097)
!5099 = !DILocation(line: 351, column: 4, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5097, file: !2376, line: 345, column: 16)
!5101 = !DILocation(line: 354, column: 4, scope: !5100)
!5102 = !DILocation(line: 357, column: 4, scope: !5100)
!5103 = !DILocation(line: 360, column: 4, scope: !5100)
!5104 = !DILocation(line: 0, scope: !5100)
!5105 = !DILocation(line: 370, column: 12, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5089, file: !2376, line: 370, column: 6)
!5107 = !DILocation(line: 370, column: 22, scope: !5106)
!5108 = !DILocation(line: 371, column: 19, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5106, file: !2376, line: 370, column: 42)
!5110 = !DILocation(line: 372, column: 2, scope: !5109)
!5111 = !DILocation(line: 376, column: 2, scope: !5089)
!5112 = distinct !DISubprogram(name: "extract_width", scope: !2376, file: !2376, line: 388, type: !4931, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5113)
!5113 = !{!5114, !5115, !5116, !5117}
!5114 = !DILocalVariable(name: "conv", arg: 1, scope: !5112, file: !2376, line: 388, type: !4587)
!5115 = !DILocalVariable(name: "sp", arg: 2, scope: !5112, file: !2376, line: 389, type: !278)
!5116 = !DILocalVariable(name: "wp", scope: !5112, file: !2376, line: 398, type: !278)
!5117 = !DILocalVariable(name: "width", scope: !5112, file: !2376, line: 399, type: !239)
!5118 = !DILocation(line: 0, scope: !5112)
!5119 = !DILocation(line: 391, column: 8, scope: !5112)
!5120 = !DILocation(line: 391, column: 22, scope: !5112)
!5121 = !DILocation(line: 393, column: 6, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5112, file: !2376, line: 393, column: 6)
!5123 = !DILocation(line: 393, column: 10, scope: !5122)
!5124 = !DILocation(line: 393, column: 6, scope: !5112)
!5125 = !DILocation(line: 394, column: 20, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5122, file: !2376, line: 393, column: 18)
!5127 = !DILocation(line: 395, column: 10, scope: !5126)
!5128 = !DILocation(line: 395, column: 3, scope: !5126)
!5129 = !DILocation(line: 399, column: 17, scope: !5112)
!5130 = !DILocation(line: 401, column: 6, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5112, file: !2376, line: 401, column: 6)
!5132 = !DILocation(line: 401, column: 9, scope: !5131)
!5133 = !DILocation(line: 401, column: 6, scope: !5112)
!5134 = !DILocation(line: 402, column: 23, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5131, file: !2376, line: 401, column: 16)
!5136 = !DILocation(line: 403, column: 9, scope: !5135)
!5137 = !DILocation(line: 403, column: 21, scope: !5135)
!5138 = !DILocation(line: 405, column: 11, scope: !5135)
!5139 = !DILocation(line: 404, column: 21, scope: !5135)
!5140 = !DILocation(line: 406, column: 2, scope: !5135)
!5141 = !DILocation(line: 409, column: 1, scope: !5112)
!5142 = distinct !DISubprogram(name: "extract_prec", scope: !2376, file: !2376, line: 420, type: !4931, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5143)
!5143 = !{!5144, !5145, !5146}
!5144 = !DILocalVariable(name: "conv", arg: 1, scope: !5142, file: !2376, line: 420, type: !4587)
!5145 = !DILocalVariable(name: "sp", arg: 2, scope: !5142, file: !2376, line: 421, type: !278)
!5146 = !DILocalVariable(name: "prec", scope: !5142, file: !2376, line: 435, type: !239)
!5147 = !DILocation(line: 0, scope: !5142)
!5148 = !DILocation(line: 423, column: 24, scope: !5142)
!5149 = !DILocation(line: 423, column: 28, scope: !5142)
!5150 = !DILocation(line: 423, column: 8, scope: !5142)
!5151 = !DILocation(line: 423, column: 21, scope: !5142)
!5152 = !DILocation(line: 425, column: 6, scope: !5142)
!5153 = !DILocation(line: 428, column: 2, scope: !5142)
!5154 = !DILocation(line: 430, column: 6, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5142, file: !2376, line: 430, column: 6)
!5156 = !DILocation(line: 430, column: 10, scope: !5155)
!5157 = !DILocation(line: 430, column: 6, scope: !5142)
!5158 = !DILocation(line: 431, column: 19, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5155, file: !2376, line: 430, column: 18)
!5160 = !DILocation(line: 432, column: 10, scope: !5159)
!5161 = !DILocation(line: 432, column: 3, scope: !5159)
!5162 = !DILocation(line: 435, column: 16, scope: !5142)
!5163 = !DILocation(line: 437, column: 8, scope: !5142)
!5164 = !DILocation(line: 437, column: 19, scope: !5142)
!5165 = !DILocation(line: 439, column: 10, scope: !5142)
!5166 = !DILocation(line: 438, column: 20, scope: !5142)
!5167 = !DILocation(line: 441, column: 9, scope: !5142)
!5168 = !DILocation(line: 442, column: 1, scope: !5142)
!5169 = distinct !DISubprogram(name: "extract_length", scope: !2376, file: !2376, line: 453, type: !4931, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5170)
!5170 = !{!5171, !5172}
!5171 = !DILocalVariable(name: "conv", arg: 1, scope: !5169, file: !2376, line: 453, type: !4587)
!5172 = !DILocalVariable(name: "sp", arg: 2, scope: !5169, file: !2376, line: 454, type: !278)
!5173 = !DILocation(line: 0, scope: !5169)
!5174 = !DILocation(line: 456, column: 10, scope: !5169)
!5175 = !DILocation(line: 456, column: 2, scope: !5169)
!5176 = !DILocation(line: 458, column: 8, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !2376, line: 458, column: 7)
!5178 = distinct !DILexicalBlock(scope: !5169, file: !2376, line: 456, column: 15)
!5179 = !DILocation(line: 458, column: 7, scope: !5177)
!5180 = !DILocation(line: 458, column: 13, scope: !5177)
!5181 = !DILocation(line: 0, scope: !5177)
!5182 = !DILocation(line: 458, column: 7, scope: !5178)
!5183 = !DILocation(line: 459, column: 21, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5177, file: !2376, line: 458, column: 21)
!5185 = !DILocation(line: 460, column: 4, scope: !5184)
!5186 = !DILocation(line: 461, column: 3, scope: !5184)
!5187 = !DILocation(line: 462, column: 21, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5177, file: !2376, line: 461, column: 10)
!5189 = !DILocation(line: 466, column: 8, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5178, file: !2376, line: 466, column: 7)
!5191 = !DILocation(line: 466, column: 7, scope: !5190)
!5192 = !DILocation(line: 466, column: 13, scope: !5190)
!5193 = !DILocation(line: 0, scope: !5190)
!5194 = !DILocation(line: 466, column: 7, scope: !5178)
!5195 = !DILocation(line: 467, column: 21, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5190, file: !2376, line: 466, column: 21)
!5197 = !DILocation(line: 468, column: 4, scope: !5196)
!5198 = !DILocation(line: 469, column: 3, scope: !5196)
!5199 = !DILocation(line: 470, column: 21, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5190, file: !2376, line: 469, column: 10)
!5201 = !DILocation(line: 474, column: 9, scope: !5178)
!5202 = !DILocation(line: 474, column: 20, scope: !5178)
!5203 = !DILocation(line: 475, column: 3, scope: !5178)
!5204 = !DILocation(line: 476, column: 3, scope: !5178)
!5205 = !DILocation(line: 478, column: 9, scope: !5178)
!5206 = !DILocation(line: 478, column: 20, scope: !5178)
!5207 = !DILocation(line: 479, column: 3, scope: !5178)
!5208 = !DILocation(line: 480, column: 3, scope: !5178)
!5209 = !DILocation(line: 482, column: 9, scope: !5178)
!5210 = !DILocation(line: 482, column: 20, scope: !5178)
!5211 = !DILocation(line: 483, column: 3, scope: !5178)
!5212 = !DILocation(line: 484, column: 3, scope: !5178)
!5213 = !DILocation(line: 486, column: 9, scope: !5178)
!5214 = !DILocation(line: 486, column: 20, scope: !5178)
!5215 = !DILocation(line: 487, column: 3, scope: !5178)
!5216 = !DILocation(line: 492, column: 21, scope: !5178)
!5217 = !DILocation(line: 493, column: 3, scope: !5178)
!5218 = !DILocation(line: 495, column: 9, scope: !5178)
!5219 = !DILocation(line: 495, column: 20, scope: !5178)
!5220 = !DILocation(line: 496, column: 3, scope: !5178)
!5221 = !DILocation(line: 498, column: 2, scope: !5169)
!5222 = distinct !DISubprogram(name: "extract_specifier", scope: !2376, file: !2376, line: 513, type: !4931, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5223)
!5223 = !{!5224, !5225, !5226, !5227}
!5224 = !DILocalVariable(name: "conv", arg: 1, scope: !5222, file: !2376, line: 513, type: !4587)
!5225 = !DILocalVariable(name: "sp", arg: 2, scope: !5222, file: !2376, line: 514, type: !278)
!5226 = !DILocalVariable(name: "unsupported", scope: !5222, file: !2376, line: 516, type: !345)
!5227 = !DILabel(scope: !5228, name: "int_conv", file: !2376, line: 526)
!5228 = distinct !DILexicalBlock(scope: !5222, file: !2376, line: 520, column: 27)
!5229 = !DILocation(line: 0, scope: !5222)
!5230 = !DILocation(line: 518, column: 20, scope: !5222)
!5231 = !DILocation(line: 518, column: 8, scope: !5222)
!5232 = !DILocation(line: 518, column: 18, scope: !5222)
!5233 = !DILocation(line: 520, column: 2, scope: !5222)
!5234 = !DILocation(line: 525, column: 3, scope: !5228)
!5235 = !DILocation(line: 0, scope: !5228)
!5236 = !DILocation(line: 526, column: 1, scope: !5228)
!5237 = !DILocation(line: 528, column: 24, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5228, file: !2376, line: 528, column: 7)
!5239 = !DILocation(line: 528, column: 7, scope: !5228)
!5240 = !DILocation(line: 535, column: 23, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5228, file: !2376, line: 535, column: 7)
!5242 = !DILocation(line: 535, column: 7, scope: !5228)
!5243 = !DILocation(line: 536, column: 36, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5241, file: !2376, line: 535, column: 31)
!5245 = !DILocation(line: 537, column: 3, scope: !5244)
!5246 = !DILocation(line: 570, column: 9, scope: !5228)
!5247 = !DILocation(line: 570, column: 23, scope: !5228)
!5248 = !DILocation(line: 575, column: 4, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5250, file: !2376, line: 573, column: 48)
!5250 = distinct !DILexicalBlock(scope: !5228, file: !2376, line: 573, column: 7)
!5251 = !DILocation(line: 603, column: 9, scope: !5228)
!5252 = !DILocation(line: 603, column: 23, scope: !5228)
!5253 = !DILocation(line: 605, column: 24, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5228, file: !2376, line: 605, column: 7)
!5255 = !DILocation(line: 605, column: 7, scope: !5228)
!5256 = !DILocation(line: 612, column: 9, scope: !5228)
!5257 = !DILocation(line: 612, column: 23, scope: !5228)
!5258 = !DILocation(line: 619, column: 24, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5228, file: !2376, line: 619, column: 7)
!5260 = !DILocation(line: 619, column: 7, scope: !5228)
!5261 = !DILocation(line: 625, column: 9, scope: !5228)
!5262 = !DILocation(line: 625, column: 17, scope: !5228)
!5263 = !DILocation(line: 626, column: 3, scope: !5228)
!5264 = !DILocation(line: 629, column: 20, scope: !5222)
!5265 = !DILocation(line: 629, column: 8, scope: !5222)
!5266 = !DILocation(line: 518, column: 23, scope: !5222)
!5267 = !DILocation(line: 631, column: 2, scope: !5222)
!5268 = distinct !DISubprogram(name: "extract_decimal", scope: !2376, file: !2376, line: 318, type: !5269, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5271)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!239, !277}
!5271 = !{!5272, !5273, !5274}
!5272 = !DILocalVariable(name: "str", arg: 1, scope: !5268, file: !2376, line: 318, type: !277)
!5273 = !DILocalVariable(name: "sp", scope: !5268, file: !2376, line: 320, type: !278)
!5274 = !DILocalVariable(name: "val", scope: !5268, file: !2376, line: 321, type: !239)
!5275 = !DILocation(line: 0, scope: !5268)
!5276 = !DILocation(line: 320, column: 19, scope: !5268)
!5277 = !DILocation(line: 323, column: 37, scope: !5268)
!5278 = !DILocation(line: 323, column: 17, scope: !5268)
!5279 = !DILocation(line: 323, column: 9, scope: !5268)
!5280 = !DILocation(line: 323, column: 2, scope: !5268)
!5281 = !DILocation(line: 324, column: 13, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5268, file: !2376, line: 323, column: 43)
!5283 = !DILocation(line: 324, column: 24, scope: !5282)
!5284 = !DILocation(line: 324, column: 19, scope: !5282)
!5285 = !DILocation(line: 324, column: 27, scope: !5282)
!5286 = distinct !{!5286, !5280, !5287}
!5287 = !DILocation(line: 325, column: 2, scope: !5268)
!5288 = !DILocation(line: 326, column: 7, scope: !5268)
!5289 = !DILocation(line: 327, column: 2, scope: !5268)
!5290 = distinct !DISubprogram(name: "isdigit", scope: !5070, file: !5070, line: 43, type: !301, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5291)
!5291 = !{!5292}
!5292 = !DILocalVariable(name: "a", arg: 1, scope: !5290, file: !5070, line: 43, type: !119)
!5293 = !DILocation(line: 0, scope: !5290)
!5294 = !DILocation(line: 45, column: 29, scope: !5290)
!5295 = !DILocation(line: 45, column: 45, scope: !5290)
!5296 = !DILocation(line: 45, column: 2, scope: !5290)
!5297 = distinct !DISubprogram(name: "assert_post_action", scope: !5298, file: !5298, line: 26, type: !5299, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !5301)
!5298 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5299 = !DISubroutineType(types: !5300)
!5300 = !{null, !278, !32}
!5301 = !{!5302, !5303}
!5302 = !DILocalVariable(name: "file", arg: 1, scope: !5297, file: !5298, line: 26, type: !278)
!5303 = !DILocalVariable(name: "line", arg: 2, scope: !5297, file: !5298, line: 26, type: !32)
!5304 = !DILocation(line: 0, scope: !5297)
!5305 = !DILocation(line: 43, column: 2, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5297, file: !5298, line: 43, column: 2)
!5307 = !{i64 2154751723, i64 2154751739, i64 2154751765, i64 2154751793, i64 2154751813}
!5308 = !DILocation(line: 44, column: 1, scope: !5297)
!5309 = distinct !DISubprogram(name: "assert_print", scope: !5298, file: !5298, line: 46, type: !4280, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !5310)
!5310 = !{!5311, !5312}
!5311 = !DILocalVariable(name: "fmt", arg: 1, scope: !5309, file: !5298, line: 46, type: !278)
!5312 = !DILocalVariable(name: "ap", scope: !5309, file: !5298, line: 48, type: !5313)
!5313 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3286, line: 99, baseType: !5314)
!5314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3286, line: 40, baseType: !5315)
!5315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5298, baseType: !5316)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5317)
!5317 = !{!5318}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5316, file: !5298, line: 48, baseType: !113, size: 32)
!5319 = !DILocation(line: 0, scope: !5309)
!5320 = !DILocation(line: 48, column: 2, scope: !5309)
!5321 = !DILocation(line: 48, column: 10, scope: !5309)
!5322 = !DILocation(line: 50, column: 2, scope: !5309)
!5323 = !DILocation(line: 52, column: 2, scope: !5309)
!5324 = !DILocation(line: 54, column: 2, scope: !5309)
!5325 = !DILocation(line: 55, column: 1, scope: !5309)
!5326 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5327, file: !5327, line: 9, type: !2953, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !2022)
!5327 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!5328 = !DILocation(line: 11, column: 1, scope: !5326)
!5329 = !{i64 2147565778, i64 2147565821, i64 2147565861}
!5330 = !DILocation(line: 12, column: 1, scope: !5326)
!5331 = !{i64 2147570005, i64 2147570048, i64 2147570088}
!5332 = !DILocation(line: 13, column: 1, scope: !5326)
!5333 = !{i64 2147570214, i64 2147570257, i64 2147570297}
!5334 = !DILocation(line: 14, column: 1, scope: !5326)
!5335 = !{i64 2147570383, i64 2147570426, i64 2147570466}
!5336 = !DILocation(line: 15, column: 1, scope: !5326)
!5337 = !{i64 2147570546, i64 2147570589, i64 2147570629}
!5338 = !DILocation(line: 16, column: 1, scope: !5326)
!5339 = !{i64 2147570730, i64 2147570773, i64 2147570813}
!5340 = !DILocation(line: 17, column: 1, scope: !5326)
!5341 = !{i64 2147570909, i64 2147570952, i64 2147570992}
!5342 = !DILocation(line: 18, column: 1, scope: !5326)
!5343 = !{i64 2147571151, i64 2147571194, i64 2147571234}
!5344 = !DILocation(line: 19, column: 1, scope: !5326)
!5345 = !{i64 2147571386, i64 2147571429, i64 2147571469}
!5346 = !DILocation(line: 20, column: 1, scope: !5326)
!5347 = !{i64 2147571573, i64 2147571616, i64 2147571656}
!5348 = !DILocation(line: 21, column: 1, scope: !5326)
!5349 = !{i64 2147571789, i64 2147571832, i64 2147571872}
!5350 = !DILocation(line: 22, column: 1, scope: !5326)
!5351 = !{i64 2147571992, i64 2147572035, i64 2147572075}
!5352 = !DILocation(line: 23, column: 1, scope: !5326)
!5353 = !{i64 2147572195, i64 2147572238, i64 2147572278}
!5354 = !DILocation(line: 24, column: 1, scope: !5326)
!5355 = !{i64 2147572370, i64 2147572413, i64 2147572453}
!5356 = !DILocation(line: 25, column: 1, scope: !5326)
!5357 = !{i64 2147572578, i64 2147572621, i64 2147572661}
!5358 = !DILocation(line: 26, column: 1, scope: !5326)
!5359 = !{i64 2147572782, i64 2147572825, i64 2147572865}
!5360 = !DILocation(line: 27, column: 1, scope: !5326)
!5361 = !{i64 2147572975, i64 2147573018, i64 2147573058}
!5362 = !DILocation(line: 28, column: 1, scope: !5326)
!5363 = !{i64 2147573177, i64 2147573220, i64 2147573260}
!5364 = !DILocation(line: 29, column: 1, scope: !5326)
!5365 = !{i64 2147573376, i64 2147573419, i64 2147573459}
!5366 = !DILocation(line: 30, column: 1, scope: !5326)
!5367 = !{i64 2147573603, i64 2147573646, i64 2147573686}
!5368 = !DILocation(line: 31, column: 1, scope: !5326)
!5369 = !{i64 2147573805, i64 2147573848, i64 2147573888}
!5370 = !DILocation(line: 32, column: 1, scope: !5326)
!5371 = !{i64 2147574020, i64 2147574063, i64 2147574103}
!5372 = !DILocation(line: 33, column: 1, scope: !5326)
!5373 = !{i64 2147574237, i64 2147574280, i64 2147574320}
!5374 = !DILocation(line: 34, column: 1, scope: !5326)
!5375 = !{i64 2147574409, i64 2147574452, i64 2147574492}
!5376 = !DILocation(line: 35, column: 1, scope: !5326)
!5377 = !{i64 2147574611, i64 2147574654, i64 2147574694}
!5378 = !DILocation(line: 36, column: 1, scope: !5326)
!5379 = !{i64 2147574837, i64 2147574880, i64 2147574920}
!5380 = !DILocation(line: 37, column: 1, scope: !5326)
!5381 = !{i64 2147575036, i64 2147575079, i64 2147575119}
!5382 = !DILocation(line: 38, column: 1, scope: !5326)
!5383 = !{i64 2147575211, i64 2147575254, i64 2147575294}
!5384 = !DILocation(line: 39, column: 1, scope: !5326)
!5385 = !{i64 2147575464, i64 2147575507, i64 2147575547}
!5386 = !DILocation(line: 40, column: 1, scope: !5326)
!5387 = !{i64 2147575705, i64 2147575748, i64 2147575788}
!5388 = !DILocation(line: 41, column: 1, scope: !5326)
!5389 = !{i64 2147575940, i64 2147575983, i64 2147576023}
!5390 = !DILocation(line: 42, column: 1, scope: !5326)
!5391 = !{i64 2147576172, i64 2147576215, i64 2147576255}
!5392 = !DILocation(line: 43, column: 1, scope: !5326)
!5393 = !{i64 2147576398, i64 2147576441, i64 2147576481}
!5394 = !DILocation(line: 44, column: 1, scope: !5326)
!5395 = !{i64 2147576624, i64 2147576667, i64 2147576707}
!5396 = !DILocation(line: 45, column: 1, scope: !5326)
!5397 = !{i64 2147576850, i64 2147576893, i64 2147576933}
!5398 = !DILocation(line: 46, column: 1, scope: !5326)
!5399 = !{i64 2147577085, i64 2147577128, i64 2147577168}
!5400 = !DILocation(line: 47, column: 1, scope: !5326)
!5401 = !{i64 2147577311, i64 2147577354, i64 2147577394}
!5402 = !DILocation(line: 48, column: 1, scope: !5326)
!5403 = !{i64 2147577558, i64 2147577601, i64 2147577641}
!5404 = !DILocation(line: 49, column: 1, scope: !5326)
!5405 = !{i64 2147577787, i64 2147577830, i64 2147577870}
!5406 = !DILocation(line: 50, column: 1, scope: !5326)
!5407 = !{i64 2147578019, i64 2147578062, i64 2147578102}
!5408 = !DILocation(line: 51, column: 1, scope: !5326)
!5409 = !{i64 2147578263, i64 2147578306, i64 2147578346}
!5410 = !DILocation(line: 52, column: 1, scope: !5326)
!5411 = !{i64 2147578501, i64 2147578544, i64 2147578584}
!5412 = !DILocation(line: 53, column: 1, scope: !5326)
!5413 = !{i64 2147582836, i64 2147582879, i64 2147582919}
!5414 = !DILocation(line: 54, column: 1, scope: !5326)
!5415 = !{i64 2147583074, i64 2147583117, i64 2147583157}
!5416 = !DILocation(line: 55, column: 1, scope: !5326)
!5417 = !{i64 2147583327, i64 2147583370, i64 2147583410}
!5418 = !DILocation(line: 56, column: 1, scope: !5326)
!5419 = !{i64 2147583571, i64 2147583614, i64 2147583654}
!5420 = !DILocation(line: 57, column: 1, scope: !5326)
!5421 = !{i64 2147583806, i64 2147583849, i64 2147583889}
!5422 = !DILocation(line: 58, column: 1, scope: !5326)
!5423 = !{i64 2147584056, i64 2147584099, i64 2147584139}
!5424 = !DILocation(line: 59, column: 1, scope: !5326)
!5425 = !{i64 2147584303, i64 2147584346, i64 2147584386}
!5426 = !DILocation(line: 60, column: 1, scope: !5326)
!5427 = !{i64 2147584538, i64 2147584581, i64 2147584621}
!5428 = !DILocation(line: 61, column: 1, scope: !5326)
!5429 = !{i64 2147584773, i64 2147584816, i64 2147584856}
!5430 = !DILocation(line: 62, column: 1, scope: !5326)
!5431 = !{i64 2147585008, i64 2147585051, i64 2147585091}
!5432 = !DILocation(line: 63, column: 1, scope: !5326)
!5433 = !{i64 2147585246, i64 2147585289, i64 2147585329}
!5434 = !DILocation(line: 64, column: 1, scope: !5326)
!5435 = !{i64 2147585487, i64 2147585530, i64 2147585570}
!5436 = !DILocation(line: 65, column: 1, scope: !5326)
!5437 = !{i64 2147585767, i64 2147585810, i64 2147585850}
!5438 = !DILocation(line: 66, column: 1, scope: !5326)
!5439 = !{i64 2147586026, i64 2147586069, i64 2147586109}
!5440 = !DILocation(line: 67, column: 1, scope: !5326)
!5441 = !{i64 2147586255, i64 2147586298, i64 2147586338}
!5442 = !DILocation(line: 68, column: 1, scope: !5326)
!5443 = !{i64 2147586481, i64 2147586524, i64 2147586564}
!5444 = !DILocation(line: 69, column: 1, scope: !5326)
!5445 = !{i64 2147586719, i64 2147586762, i64 2147586802}
!5446 = !DILocation(line: 70, column: 1, scope: !5326)
!5447 = !{i64 2147586948, i64 2147586991, i64 2147587031}
!5448 = !DILocation(line: 71, column: 1, scope: !5326)
!5449 = !{i64 2147587156, i64 2147587199, i64 2147587239}
!5450 = !DILocation(line: 72, column: 1, scope: !5326)
!5451 = !{i64 2147587367, i64 2147587410, i64 2147587450}
!5452 = !DILocation(line: 73, column: 1, scope: !5326)
!5453 = !{i64 2147587602, i64 2147587645, i64 2147587685}
!5454 = !DILocation(line: 74, column: 1, scope: !5326)
!5455 = !{i64 2147587831, i64 2147587874, i64 2147587914}
!5456 = !DILocation(line: 75, column: 1, scope: !5326)
!5457 = !{i64 2147588048, i64 2147588091, i64 2147588131}
!5458 = !DILocation(line: 76, column: 1, scope: !5326)
!5459 = !{i64 2147588277, i64 2147588320, i64 2147588360}
!5460 = !DILocation(line: 77, column: 1, scope: !5326)
!5461 = !{i64 2147588515, i64 2147588558, i64 2147588598}
!5462 = !DILocation(line: 78, column: 1, scope: !5326)
!5463 = !{i64 2147588747, i64 2147588790, i64 2147588830}
!5464 = !DILocation(line: 79, column: 1, scope: !5326)
!5465 = !{i64 2147588973, i64 2147589016, i64 2147589056}
!5466 = !DILocation(line: 80, column: 1, scope: !5326)
!5467 = !{i64 2147589190, i64 2147589233, i64 2147589273}
!5468 = !DILocation(line: 81, column: 1, scope: !5326)
!5469 = !{i64 2147589422, i64 2147589465, i64 2147589505}
!5470 = !DILocation(line: 82, column: 1, scope: !5326)
!5471 = !{i64 2147589648, i64 2147589691, i64 2147589731}
!5472 = !DILocation(line: 83, column: 1, scope: !5326)
!5473 = !{i64 2147589862, i64 2147589905, i64 2147589945}
!5474 = !DILocation(line: 84, column: 1, scope: !5326)
!5475 = !{i64 2147590082, i64 2147590125, i64 2147590165}
!5476 = !DILocation(line: 85, column: 1, scope: !5326)
!5477 = !{i64 2147590314, i64 2147590357, i64 2147590397}
!5478 = !DILocation(line: 86, column: 1, scope: !5326)
!5479 = !{i64 2147590522, i64 2147590565, i64 2147590605}
!5480 = !DILocation(line: 87, column: 1, scope: !5326)
!5481 = !{i64 2147590727, i64 2147590770, i64 2147590810}
!5482 = !DILocation(line: 88, column: 1, scope: !5326)
!5483 = !{i64 2147595005, i64 2147595048, i64 2147595088}
!5484 = !DILocation(line: 89, column: 1, scope: !5326)
!5485 = !{i64 2147595219, i64 2147595262, i64 2147595302}
!5486 = !DILocation(line: 90, column: 1, scope: !5326)
!5487 = !{i64 2147595445, i64 2147595488, i64 2147595528}
!5488 = !DILocation(line: 91, column: 1, scope: !5326)
!5489 = !{i64 2147595665, i64 2147595708, i64 2147595748}
!5490 = !DILocation(line: 92, column: 1, scope: !5326)
!5491 = !{i64 2147595870, i64 2147595913, i64 2147595953}
!5492 = !DILocation(line: 93, column: 1, scope: !5326)
!5493 = !{i64 2147596102, i64 2147596145, i64 2147596185}
!5494 = !DILocation(line: 94, column: 1, scope: !5326)
!5495 = !{i64 2147596337, i64 2147596380, i64 2147596420}
!5496 = !DILocation(line: 95, column: 1, scope: !5326)
!5497 = !{i64 2147596587, i64 2147596630, i64 2147596670}
!5498 = !DILocation(line: 96, column: 1, scope: !5326)
!5499 = !{i64 2147596837, i64 2147596880, i64 2147596920}
!5500 = !DILocation(line: 97, column: 1, scope: !5326)
!5501 = !{i64 2147597075, i64 2147597118, i64 2147597158}
!5502 = !DILocation(line: 98, column: 1, scope: !5326)
!5503 = !{i64 2147597286, i64 2147597329, i64 2147597369}
!5504 = !DILocation(line: 99, column: 1, scope: !5326)
!5505 = !{i64 2147597503, i64 2147597546, i64 2147597586}
!5506 = !DILocation(line: 100, column: 1, scope: !5326)
!5507 = !{i64 2147597699, i64 2147597742, i64 2147597782}
!5508 = !DILocation(line: 101, column: 1, scope: !5326)
!5509 = !{i64 2147597901, i64 2147597944, i64 2147597984}
!5510 = !DILocation(line: 102, column: 1, scope: !5326)
!5511 = !{i64 2147598094, i64 2147598137, i64 2147598177}
!5512 = !DILocation(line: 103, column: 1, scope: !5326)
!5513 = !{i64 2147598302, i64 2147598345, i64 2147598385}
!5514 = !DILocation(line: 104, column: 1, scope: !5326)
!5515 = !{i64 2147598498, i64 2147598541, i64 2147598581}
!5516 = !DILocation(line: 105, column: 1, scope: !5326)
!5517 = !{i64 2147598706, i64 2147598749, i64 2147598789}
!5518 = !DILocation(line: 106, column: 1, scope: !5326)
!5519 = !{i64 2147598917, i64 2147598960, i64 2147599000}
!5520 = !DILocation(line: 107, column: 1, scope: !5326)
!5521 = !{i64 2147599116, i64 2147599159, i64 2147599199}
!5522 = !DILocation(line: 108, column: 1, scope: !5326)
!5523 = !{i64 2147599291, i64 2147599334, i64 2147599374}
!5524 = !DILocation(line: 109, column: 1, scope: !5326)
!5525 = !{i64 2147599475, i64 2147599518, i64 2147599558}
!5526 = !DILocation(line: 110, column: 1, scope: !5326)
!5527 = !{i64 2147599677, i64 2147599720, i64 2147599760}
!5528 = !DILocation(line: 111, column: 1, scope: !5326)
!5529 = !{i64 2147599876, i64 2147599919, i64 2147599959}
!5530 = !DILocation(line: 112, column: 1, scope: !5326)
!5531 = !{i64 2147600081, i64 2147600124, i64 2147600164}
!5532 = !DILocation(line: 113, column: 1, scope: !5326)
!5533 = !{i64 2147600274, i64 2147600317, i64 2147600357}
!5534 = !DILocation(line: 114, column: 1, scope: !5326)
!5535 = !{i64 2147600440, i64 2147600483, i64 2147600523}
!5536 = !DILocation(line: 115, column: 1, scope: !5326)
!5537 = !{i64 2147600624, i64 2147600667, i64 2147600707}
!5538 = !DILocation(line: 116, column: 1, scope: !5326)
!5539 = !{i64 2147600814, i64 2147600857, i64 2147600897}
!5540 = !DILocation(line: 117, column: 1, scope: !5326)
!5541 = !{i64 2147600998, i64 2147601041, i64 2147601081}
!5542 = !DILocation(line: 118, column: 1, scope: !5326)
!5543 = !{i64 2147601212, i64 2147601255, i64 2147601295}
!5544 = !DILocation(line: 119, column: 1, scope: !5326)
!5545 = !{i64 2147601423, i64 2147601466, i64 2147601506}
!5546 = !DILocation(line: 120, column: 1, scope: !5326)
!5547 = !{i64 2147601646, i64 2147601689, i64 2147601729}
!5548 = !DILocation(line: 121, column: 1, scope: !5326)
!5549 = !{i64 2147601830, i64 2147601873, i64 2147601913}
!5550 = !DILocation(line: 122, column: 1, scope: !5326)
!5551 = !{i64 2147602044, i64 2147602087, i64 2147602127}
!5552 = !DILocation(line: 123, column: 1, scope: !5326)
!5553 = !{i64 2147602210, i64 2147602253, i64 2147602293}
!5554 = !DILocation(line: 124, column: 1, scope: !5326)
!5555 = !{i64 2147602391, i64 2147602434, i64 2147602474}
!5556 = !DILocation(line: 125, column: 1, scope: !5326)
!5557 = !{i64 2147602584, i64 2147602627, i64 2147602667}
!5558 = !DILocation(line: 126, column: 1, scope: !5326)
!5559 = !{i64 2147602810, i64 2147602853, i64 2147602893}
!5560 = !DILocation(line: 127, column: 1, scope: !5326)
!5561 = !{i64 2147603024, i64 2147603067, i64 2147603107}
!5562 = !DILocation(line: 128, column: 1, scope: !5326)
!5563 = !{i64 2147603250, i64 2147603293, i64 2147603333}
!5564 = !DILocation(line: 129, column: 1, scope: !5326)
!5565 = !{i64 2147603467, i64 2147603510, i64 2147603550}
!5566 = !DILocation(line: 130, column: 1, scope: !5326)
!5567 = !{i64 2147603744, i64 2147603787, i64 2147603827}
!5568 = !DILocation(line: 131, column: 1, scope: !5326)
!5569 = !{i64 2147603970, i64 2147604013, i64 2147604053}
!5570 = !DILocation(line: 132, column: 1, scope: !5326)
!5571 = !{i64 2147608239, i64 2147608282, i64 2147608322}
!5572 = !DILocation(line: 133, column: 1, scope: !5326)
!5573 = !{i64 2147608435, i64 2147608478, i64 2147608518}
!5574 = !DILocation(line: 134, column: 1, scope: !5326)
!5575 = !{i64 2147608700, i64 2147608743, i64 2147608783}
!5576 = !DILocation(line: 135, column: 1, scope: !5326)
!5577 = !{i64 2147608914, i64 2147608957, i64 2147608997}
!5578 = !DILocation(line: 136, column: 1, scope: !5326)
!5579 = !{i64 2147609089, i64 2147609132, i64 2147609172}
!5580 = !DILocation(line: 137, column: 1, scope: !5326)
!5581 = !{i64 2147609343, i64 2147609386, i64 2147609426}
!5582 = !DILocation(line: 138, column: 1, scope: !5326)
!5583 = !{i64 2147609542, i64 2147609585, i64 2147609625}
!5584 = !DILocation(line: 139, column: 1, scope: !5326)
!5585 = !{i64 2147609784, i64 2147609827, i64 2147609867}
!5586 = !DILocation(line: 140, column: 1, scope: !5326)
!5587 = !{i64 2147609947, i64 2147609990, i64 2147610030}
!5588 = !DILocation(line: 141, column: 1, scope: !5326)
!5589 = !{i64 2147610134, i64 2147610177, i64 2147610217}
!5590 = !DILocation(line: 142, column: 1, scope: !5326)
!5591 = !{i64 2147610342, i64 2147610385, i64 2147610425}
!5592 = !DILocation(line: 143, column: 1, scope: !5326)
!5593 = !{i64 2147610538, i64 2147610581, i64 2147610621}
!5594 = !DILocation(line: 144, column: 1, scope: !5326)
!5595 = !{i64 2147610731, i64 2147610774, i64 2147610814}
!5596 = !DILocation(line: 145, column: 1, scope: !5326)
!5597 = !{i64 2147610914, i64 2147610957, i64 2147610997}
!5598 = !DILocation(line: 146, column: 1, scope: !5326)
!5599 = !{i64 2147611128, i64 2147611171, i64 2147611211}
!5600 = !DILocation(line: 147, column: 1, scope: !5326)
!5601 = !{i64 2147611339, i64 2147611382, i64 2147611422}
!5602 = !DILocation(line: 148, column: 1, scope: !5326)
!5603 = !{i64 2147611559, i64 2147611602, i64 2147611642}
!5604 = !DILocation(line: 149, column: 1, scope: !5326)
!5605 = !{i64 2147611766, i64 2147611809, i64 2147611849}
!5606 = !DILocation(line: 150, column: 1, scope: !5326)
!5607 = !{i64 2147612039, i64 2147612082, i64 2147612122}
!5608 = !DILocation(line: 151, column: 1, scope: !5326)
!5609 = !{i64 2147612287, i64 2147612330, i64 2147612370}
!5610 = !DILocation(line: 152, column: 1, scope: !5326)
!5611 = !{i64 2147612486, i64 2147612529, i64 2147612569}
!5612 = !DILocation(line: 153, column: 1, scope: !5326)
!5613 = !{i64 2147612721, i64 2147612764, i64 2147612804}
!5614 = !DILocation(line: 154, column: 1, scope: !5326)
!5615 = !{i64 2147612971, i64 2147613014, i64 2147613054}
!5616 = !DILocation(line: 155, column: 1, scope: !5326)
!5617 = !{i64 2147613173, i64 2147613216, i64 2147613256}
!5618 = !DILocation(line: 156, column: 1, scope: !5326)
!5619 = !{i64 2147613396, i64 2147613439, i64 2147613479}
!5620 = !DILocation(line: 157, column: 1, scope: !5326)
!5621 = !{i64 2147613610, i64 2147613653, i64 2147613693}
!5622 = !DILocation(line: 158, column: 1, scope: !5326)
!5623 = !{i64 2147613854, i64 2147613897, i64 2147613937}
!5624 = !DILocation(line: 159, column: 1, scope: !5326)
!5625 = !{i64 2147614083, i64 2147614126, i64 2147614166}
!5626 = !DILocation(line: 160, column: 1, scope: !5326)
!5627 = !{i64 2147614312, i64 2147614355, i64 2147614395}
!5628 = !DILocation(line: 161, column: 1, scope: !5326)
!5629 = !{i64 2147614520, i64 2147614563, i64 2147614603}
!5630 = !DILocation(line: 162, column: 1, scope: !5326)
!5631 = !{i64 2147614758, i64 2147614801, i64 2147614841}
!5632 = !DILocation(line: 163, column: 1, scope: !5326)
!5633 = !{i64 2147614984, i64 2147615027, i64 2147615067}
!5634 = !DILocation(line: 164, column: 1, scope: !5326)
!5635 = !{i64 2147615243, i64 2147615286, i64 2147615326}
!5636 = !DILocation(line: 165, column: 1, scope: !5326)
!5637 = !{i64 2147615463, i64 2147615506, i64 2147615546}
!5638 = !DILocation(line: 166, column: 1, scope: !5326)
!5639 = !{i64 2147615695, i64 2147615738, i64 2147615778}
!5640 = !DILocation(line: 167, column: 1, scope: !5326)
!5641 = !{i64 2147615936, i64 2147615979, i64 2147616019}
!5642 = !DILocation(line: 168, column: 1, scope: !5326)
!5643 = !{i64 2147616177, i64 2147616220, i64 2147616260}
!5644 = !DILocation(line: 169, column: 1, scope: !5326)
!5645 = !{i64 2147616400, i64 2147616443, i64 2147616483}
!5646 = !DILocation(line: 170, column: 1, scope: !5326)
!5647 = !{i64 2147620678, i64 2147620721, i64 2147620761}
!5648 = !DILocation(line: 171, column: 1, scope: !5326)
!5649 = !{i64 2147620919, i64 2147620962, i64 2147621002}
!5650 = !DILocation(line: 172, column: 1, scope: !5326)
!5651 = !{i64 2147621106, i64 2147621149, i64 2147621189}
!5652 = !DILocation(line: 173, column: 1, scope: !5326)
!5653 = !{i64 2147621293, i64 2147621336, i64 2147621376}
!5654 = !DILocation(line: 174, column: 1, scope: !5326)
!5655 = !{i64 2147621456, i64 2147621499, i64 2147621539}
!5656 = !DILocation(line: 175, column: 1, scope: !5326)
!5657 = !{i64 2147621661, i64 2147621704, i64 2147621744}
!5658 = !DILocation(line: 176, column: 1, scope: !5326)
!5659 = !{i64 2147621854, i64 2147621897, i64 2147621937}
!5660 = !DILocation(line: 177, column: 1, scope: !5326)
!5661 = !{i64 2147622113, i64 2147622156, i64 2147622196}
!5662 = !DILocation(line: 178, column: 1, scope: !5326)
!5663 = !{i64 2147622336, i64 2147622379, i64 2147622419}
!5664 = !DILocation(line: 179, column: 1, scope: !5326)
!5665 = !{i64 2147622565, i64 2147622608, i64 2147622648}
!5666 = !DILocation(line: 180, column: 1, scope: !5326)
!5667 = !{i64 2147622779, i64 2147622822, i64 2147622862}
!5668 = !DILocation(line: 181, column: 1, scope: !5326)
!5669 = !{i64 2147622981, i64 2147623024, i64 2147623064}
!5670 = !DILocation(line: 182, column: 1, scope: !5326)
!5671 = !{i64 2147623177, i64 2147623220, i64 2147623260}
!5672 = !DILocation(line: 183, column: 1, scope: !5326)
!5673 = !{i64 2147623389, i64 2147623432, i64 2147623472}
!5674 = !DILocation(line: 184, column: 1, scope: !5326)
!5675 = !{i64 2147623610, i64 2147623653, i64 2147623693}
!5676 = !DILocation(line: 185, column: 1, scope: !5326)
!5677 = !{i64 2147623825, i64 2147623868, i64 2147623908}
!5678 = !DILocation(line: 186, column: 1, scope: !5326)
!5679 = !{i64 2147624015, i64 2147624058, i64 2147624098}
!5680 = !DILocation(line: 187, column: 1, scope: !5326)
!5681 = !{i64 2147624214, i64 2147624257, i64 2147624297}
!5682 = !DILocation(line: 188, column: 1, scope: !5326)
!5683 = !{i64 2147624419, i64 2147624462, i64 2147624502}
!5684 = !DILocation(line: 189, column: 1, scope: !5326)
!5685 = !{i64 2147624639, i64 2147624682, i64 2147624722}
!5686 = !DILocation(line: 190, column: 1, scope: !5326)
!5687 = !{i64 2147624840, i64 2147624883, i64 2147624923}
!5688 = !DILocation(line: 191, column: 1, scope: !5326)
!5689 = !{i64 2147625039, i64 2147625082, i64 2147625122}
!5690 = !DILocation(line: 192, column: 1, scope: !5326)
!5691 = !{i64 2147625244, i64 2147625287, i64 2147625327}
!5692 = !DILocation(line: 193, column: 1, scope: !5326)
!5693 = !{i64 2147625413, i64 2147625456, i64 2147625496}
!5694 = !DILocation(line: 194, column: 1, scope: !5326)
!5695 = !{i64 2147625597, i64 2147625640, i64 2147625680}
!5696 = !DILocation(line: 195, column: 1, scope: !5326)
!5697 = !{i64 2147625781, i64 2147625824, i64 2147625864}
!5698 = !DILocation(line: 196, column: 1, scope: !5326)
!5699 = !{i64 2147625968, i64 2147626011, i64 2147626051}
!5700 = !DILocation(line: 197, column: 1, scope: !5326)
!5701 = !{i64 2147626152, i64 2147626195, i64 2147626235}
!5702 = !DILocation(line: 198, column: 1, scope: !5326)
!5703 = !{i64 2147626339, i64 2147626382, i64 2147626422}
!5704 = !DILocation(line: 199, column: 1, scope: !5326)
!5705 = !{i64 2147626551, i64 2147626594, i64 2147626634}
!5706 = !DILocation(line: 200, column: 1, scope: !5326)
!5707 = !{i64 2147626789, i64 2147626832, i64 2147626872}
!5708 = !DILocation(line: 201, column: 1, scope: !5326)
!5709 = !{i64 2147627019, i64 2147627062, i64 2147627102}
!5710 = !DILocation(line: 202, column: 1, scope: !5326)
!5711 = !{i64 2147627248, i64 2147627291, i64 2147627331}
!5712 = !DILocation(line: 203, column: 1, scope: !5326)
!5713 = !{i64 2147627435, i64 2147627478, i64 2147627518}
!5714 = !DILocation(line: 204, column: 1, scope: !5326)
!5715 = !{i64 2147627631, i64 2147627674, i64 2147627714}
!5716 = !DILocation(line: 205, column: 1, scope: !5326)
!5717 = !{i64 2147627839, i64 2147627882, i64 2147627922}
!5718 = !DILocation(line: 206, column: 1, scope: !5326)
!5719 = !{i64 2147628051, i64 2147628094, i64 2147628134}
!5720 = !DILocation(line: 207, column: 1, scope: !5326)
!5721 = !{i64 2147628250, i64 2147628293, i64 2147628333}
!5722 = !DILocation(line: 208, column: 1, scope: !5326)
!5723 = !{i64 2147628488, i64 2147628531, i64 2147628571}
!5724 = !DILocation(line: 209, column: 1, scope: !5326)
!5725 = !{i64 2147628684, i64 2147628727, i64 2147628767}
!5726 = !DILocation(line: 210, column: 1, scope: !5326)
!5727 = !{i64 2147628886, i64 2147628929, i64 2147628969}
!5728 = !DILocation(line: 211, column: 1, scope: !5326)
!5729 = !{i64 2147629079, i64 2147629122, i64 2147629162}
!5730 = !DILocation(line: 212, column: 1, scope: !5326)
!5731 = !{i64 2147629313, i64 2147629356, i64 2147629396}
!5732 = !DILocation(line: 213, column: 1, scope: !5326)
!5733 = !{i64 2147629476, i64 2147629519, i64 2147629559}
!5734 = !DILocation(line: 214, column: 1, scope: !5326)
!5735 = !{i64 2147629715, i64 2147629758, i64 2147629798}
!5736 = !DILocation(line: 215, column: 1, scope: !5326)
!5737 = !{i64 2147634015, i64 2147634058, i64 2147634098}
!5738 = !DILocation(line: 216, column: 1, scope: !5326)
!5739 = !{i64 2147634251, i64 2147634294, i64 2147634334}
!5740 = !DILocation(line: 217, column: 1, scope: !5326)
!5741 = !{i64 2147634481, i64 2147634524, i64 2147634564}
!5742 = !DILocation(line: 218, column: 1, scope: !5326)
!5743 = !{i64 2147634668, i64 2147634711, i64 2147634751}
!5744 = !DILocation(line: 219, column: 1, scope: !5326)
!5745 = !{i64 2147634867, i64 2147634910, i64 2147634950}
!5746 = !DILocation(line: 220, column: 1, scope: !5326)
!5747 = !{i64 2147635138, i64 2147635181, i64 2147635221}
!5748 = !DILocation(line: 221, column: 1, scope: !5326)
!5749 = !{i64 2147635313, i64 2147635356, i64 2147635396}
!5750 = !DILocation(line: 222, column: 1, scope: !5326)
!5751 = !{i64 2147635547, i64 2147635590, i64 2147635630}
!5752 = !DILocation(line: 223, column: 1, scope: !5326)
!5753 = !{i64 2147635755, i64 2147635798, i64 2147635838}
!5754 = !DILocation(line: 224, column: 1, scope: !5326)
!5755 = !{i64 2147635973, i64 2147636016, i64 2147636056}
!5756 = !DILocation(line: 225, column: 1, scope: !5326)
!5757 = !{i64 2147636163, i64 2147636206, i64 2147636246}
!5758 = !DILocation(line: 226, column: 1, scope: !5326)
!5759 = !{i64 2147636395, i64 2147636438, i64 2147636478}
!5760 = !DILocation(line: 227, column: 1, scope: !5326)
!5761 = !{i64 2147636615, i64 2147636658, i64 2147636698}
!5762 = !DILocation(line: 228, column: 1, scope: !5326)
!5763 = !{i64 2147636811, i64 2147636854, i64 2147636894}
!5764 = !DILocation(line: 229, column: 1, scope: !5326)
!5765 = !{i64 2147637017, i64 2147637060, i64 2147637100}
!5766 = !DILocation(line: 230, column: 1, scope: !5326)
!5767 = !{i64 2147637222, i64 2147637265, i64 2147637305}
!5768 = !DILocation(line: 231, column: 1, scope: !5326)
!5769 = !{i64 2147637436, i64 2147637479, i64 2147637519}
!5770 = !DILocation(line: 232, column: 1, scope: !5326)
!5771 = !{i64 2147637662, i64 2147637705, i64 2147637745}
!5772 = !DILocation(line: 233, column: 1, scope: !5326)
!5773 = !{i64 2147637870, i64 2147637913, i64 2147637953}
!5774 = !DILocation(line: 234, column: 1, scope: !5326)
!5775 = !{i64 2147638066, i64 2147638109, i64 2147638149}
!5776 = !DILocation(line: 235, column: 1, scope: !5326)
!5777 = !{i64 2147638298, i64 2147638341, i64 2147638381}
!5778 = !DILocation(line: 236, column: 1, scope: !5326)
!5779 = !{i64 2147638482, i64 2147638525, i64 2147638565}
!5780 = !DILocation(line: 237, column: 1, scope: !5326)
!5781 = !{i64 2147638691, i64 2147638734, i64 2147638774}
!5782 = !DILocation(line: 238, column: 1, scope: !5326)
!5783 = !{i64 2147638899, i64 2147638942, i64 2147638982}
!5784 = !DILocation(line: 239, column: 1, scope: !5326)
!5785 = !{i64 2147639095, i64 2147639138, i64 2147639178}
!5786 = !DILocation(line: 240, column: 1, scope: !5326)
!5787 = !{i64 2147639279, i64 2147639322, i64 2147639362}
!5788 = !DILocation(line: 241, column: 1, scope: !5326)
!5789 = !{i64 2147639505, i64 2147639548, i64 2147639588}
!5790 = !DILocation(line: 242, column: 1, scope: !5326)
!5791 = !{i64 2147639731, i64 2147639774, i64 2147639814}
!5792 = !DILocation(line: 243, column: 1, scope: !5326)
!5793 = !{i64 2147639957, i64 2147640000, i64 2147640040}
!5794 = !DILocation(line: 244, column: 1, scope: !5326)
!5795 = !{i64 2147640183, i64 2147640226, i64 2147640266}
!5796 = !DILocation(line: 245, column: 1, scope: !5326)
!5797 = !{i64 2147640409, i64 2147640452, i64 2147640492}
!5798 = !DILocation(line: 246, column: 1, scope: !5326)
!5799 = !{i64 2147640641, i64 2147640684, i64 2147640724}
!5800 = !DILocation(line: 247, column: 1, scope: !5326)
!5801 = !{i64 2147640879, i64 2147640922, i64 2147640962}
!5802 = !DILocation(line: 248, column: 1, scope: !5326)
!5803 = !{i64 2147641099, i64 2147641142, i64 2147641182}
!5804 = !DILocation(line: 249, column: 1, scope: !5326)
!5805 = !{i64 2147641343, i64 2147641386, i64 2147641426}
!5806 = !DILocation(line: 250, column: 1, scope: !5326)
!5807 = !{i64 2147641584, i64 2147641627, i64 2147641667}
!5808 = !DILocation(line: 251, column: 1, scope: !5326)
!5809 = !{i64 2147641819, i64 2147641862, i64 2147641902}
!5810 = !DILocation(line: 252, column: 1, scope: !5326)
!5811 = !{i64 2147642051, i64 2147642094, i64 2147642134}
!5812 = !DILocation(line: 253, column: 1, scope: !5326)
!5813 = !{i64 2147642253, i64 2147642296, i64 2147642336}
!5814 = !DILocation(line: 254, column: 1, scope: !5326)
!5815 = !{i64 2147642503, i64 2147642546, i64 2147642586}
!5816 = !DILocation(line: 255, column: 1, scope: !5326)
!5817 = !{i64 2147646802, i64 2147646845, i64 2147646885}
!5818 = !DILocation(line: 256, column: 1, scope: !5326)
!5819 = !{i64 2147647010, i64 2147647053, i64 2147647093}
!5820 = !DILocation(line: 257, column: 1, scope: !5326)
!5821 = !{i64 2147647206, i64 2147647249, i64 2147647289}
!5822 = !DILocation(line: 258, column: 1, scope: !5326)
!5823 = !{i64 2147647390, i64 2147647433, i64 2147647473}
!5824 = !DILocation(line: 259, column: 1, scope: !5326)
!5825 = !{i64 2147647607, i64 2147647650, i64 2147647690}
!5826 = !DILocation(line: 260, column: 1, scope: !5326)
!5827 = !{i64 2147647812, i64 2147647855, i64 2147647895}
!5828 = !DILocation(line: 261, column: 1, scope: !5326)
!5829 = !{i64 2147648047, i64 2147648090, i64 2147648130}
!5830 = !DILocation(line: 262, column: 1, scope: !5326)
!5831 = !{i64 2147648270, i64 2147648313, i64 2147648353}
!5832 = !DILocation(line: 263, column: 1, scope: !5326)
!5833 = !{i64 2147648494, i64 2147648537, i64 2147648577}
!5834 = !DILocation(line: 264, column: 1, scope: !5326)
!5835 = !{i64 2147648732, i64 2147648775, i64 2147648815}
!5836 = !DILocation(line: 265, column: 1, scope: !5326)
!5837 = !{i64 2147648970, i64 2147649013, i64 2147649053}
!5838 = !DILocation(line: 266, column: 1, scope: !5326)
!5839 = !{i64 2147649187, i64 2147649230, i64 2147649270}
!5840 = !DILocation(line: 267, column: 1, scope: !5326)
!5841 = !{i64 2147649392, i64 2147649435, i64 2147649475}
!5842 = !DILocation(line: 268, column: 1, scope: !5326)
!5843 = !{i64 2147649585, i64 2147649628, i64 2147649668}
!5844 = !DILocation(line: 269, column: 1, scope: !5326)
!5845 = !{i64 2147649838, i64 2147649881, i64 2147649921}
!5846 = !DILocation(line: 270, column: 1, scope: !5326)
!5847 = !{i64 2147650046, i64 2147650089, i64 2147650129}
!5848 = !DILocation(line: 271, column: 1, scope: !5326)
!5849 = !{i64 2147650242, i64 2147650285, i64 2147650325}
!5850 = !DILocation(line: 272, column: 1, scope: !5326)
!5851 = !{i64 2147650456, i64 2147650499, i64 2147650539}
!5852 = !DILocation(line: 273, column: 1, scope: !5326)
!5853 = !{i64 2147650664, i64 2147650707, i64 2147650747}
!5854 = !DILocation(line: 274, column: 1, scope: !5326)
!5855 = !{i64 2147650854, i64 2147650897, i64 2147650937}
!5856 = !DILocation(line: 275, column: 1, scope: !5326)
!5857 = !{i64 2147651068, i64 2147651111, i64 2147651151}
!5858 = !DILocation(line: 276, column: 1, scope: !5326)
!5859 = !{i64 2147651330, i64 2147651373, i64 2147651413}
!5860 = !DILocation(line: 277, column: 1, scope: !5326)
!5861 = !{i64 2147651541, i64 2147651584, i64 2147651624}
!5862 = !DILocation(line: 278, column: 1, scope: !5326)
!5863 = !{i64 2147651785, i64 2147651828, i64 2147651868}
!5864 = !DILocation(line: 279, column: 1, scope: !5326)
!5865 = !{i64 2147651996, i64 2147652039, i64 2147652079}
!5866 = !DILocation(line: 280, column: 1, scope: !5326)
!5867 = !{i64 2147652225, i64 2147652268, i64 2147652308}
!5868 = !DILocation(line: 281, column: 1, scope: !5326)
!5869 = !{i64 2147652490, i64 2147652533, i64 2147652573}
!5870 = !DILocation(line: 282, column: 1, scope: !5326)
!5871 = !{i64 2147652695, i64 2147652738, i64 2147652778}
!5872 = !DILocation(line: 283, column: 1, scope: !5326)
!5873 = !{i64 2147652891, i64 2147652934, i64 2147652974}
!5874 = !DILocation(line: 284, column: 1, scope: !5326)
!5875 = !{i64 2147653114, i64 2147653157, i64 2147653197}
!5876 = !DILocation(line: 285, column: 1, scope: !5326)
!5877 = !{i64 2147653277, i64 2147653320, i64 2147653360}
!5878 = !DILocation(line: 286, column: 1, scope: !5326)
!5879 = !{i64 2147653482, i64 2147653525, i64 2147653565}
!5880 = !DILocation(line: 287, column: 1, scope: !5326)
!5881 = !{i64 2147653702, i64 2147653745, i64 2147653785}
!5882 = !DILocation(line: 288, column: 1, scope: !5326)
!5883 = !{i64 2147653916, i64 2147653959, i64 2147653999}
!5884 = !DILocation(line: 289, column: 1, scope: !5326)
!5885 = !{i64 2147654160, i64 2147654203, i64 2147654243}
!5886 = !DILocation(line: 290, column: 1, scope: !5326)
!5887 = !{i64 2147654392, i64 2147654435, i64 2147654475}
!5888 = !DILocation(line: 291, column: 1, scope: !5326)
!5889 = !{i64 2147654606, i64 2147654649, i64 2147654689}
!5890 = !DILocation(line: 292, column: 1, scope: !5326)
!5891 = !{i64 2147654817, i64 2147654860, i64 2147654900}
!5892 = !DILocation(line: 293, column: 1, scope: !5326)
!5893 = !{i64 2147655010, i64 2147655053, i64 2147655093}
!5894 = !DILocation(line: 294, column: 1, scope: !5326)
!5895 = !{i64 2147655209, i64 2147655252, i64 2147655292}
!5896 = !DILocation(line: 295, column: 1, scope: !5326)
!5897 = !{i64 2147655381, i64 2147655424, i64 2147655464}
!5898 = !DILocation(line: 296, column: 1, scope: !5326)
!5899 = !{i64 2147659635, i64 2147659678, i64 2147659718}
!5900 = !DILocation(line: 297, column: 1, scope: !5326)
!5901 = !{i64 2147659807, i64 2147659850, i64 2147659890}
!5902 = !DILocation(line: 298, column: 1, scope: !5326)
!5903 = !{i64 2147659997, i64 2147660040, i64 2147660080}
!5904 = !DILocation(line: 299, column: 1, scope: !5326)
!5905 = !{i64 2147660190, i64 2147660233, i64 2147660273}
!5906 = !DILocation(line: 300, column: 1, scope: !5326)
!5907 = !{i64 2147660386, i64 2147660429, i64 2147660469}
!5908 = !DILocation(line: 301, column: 1, scope: !5326)
!5909 = !{i64 2147660549, i64 2147660592, i64 2147660632}
!5910 = !DILocation(line: 302, column: 1, scope: !5326)
!5911 = !{i64 2147660751, i64 2147660794, i64 2147660834}
!5912 = !DILocation(line: 303, column: 1, scope: !5326)
!5913 = !{i64 2147660962, i64 2147661005, i64 2147661045}
!5914 = !DILocation(line: 304, column: 1, scope: !5326)
!5915 = !{i64 2147661167, i64 2147661210, i64 2147661250}
!5916 = !DILocation(line: 305, column: 1, scope: !5326)
!5917 = !{i64 2147661375, i64 2147661418, i64 2147661458}
!5918 = !DILocation(line: 306, column: 1, scope: !5326)
!5919 = !{i64 2147661568, i64 2147661611, i64 2147661651}
!5920 = !DILocation(line: 307, column: 1, scope: !5326)
!5921 = !{i64 2147661755, i64 2147661798, i64 2147661838}
!5922 = !DILocation(line: 308, column: 1, scope: !5326)
!5923 = !{i64 2147661921, i64 2147661964, i64 2147662004}
!5924 = !DILocation(line: 309, column: 1, scope: !5326)
!5925 = !{i64 2147662148, i64 2147662191, i64 2147662231}
!5926 = !DILocation(line: 310, column: 1, scope: !5326)
!5927 = !{i64 2147662365, i64 2147662408, i64 2147662448}
!5928 = !DILocation(line: 311, column: 1, scope: !5326)
!5929 = !{i64 2147662591, i64 2147662634, i64 2147662674}
!5930 = !DILocation(line: 312, column: 1, scope: !5326)
!5931 = !{i64 2147662796, i64 2147662839, i64 2147662879}
!5932 = !DILocation(line: 313, column: 1, scope: !5326)
!5933 = !{i64 2147663013, i64 2147663056, i64 2147663096}
!5934 = !DILocation(line: 314, column: 1, scope: !5326)
!5935 = !{i64 2147663305, i64 2147663348, i64 2147663388}
!5936 = !DILocation(line: 315, column: 1, scope: !5326)
!5937 = !{i64 2147663537, i64 2147663580, i64 2147663620}
!5938 = !DILocation(line: 316, column: 1, scope: !5326)
!5939 = !{i64 2147663754, i64 2147663797, i64 2147663837}
!5940 = !DILocation(line: 317, column: 1, scope: !5326)
!5941 = !{i64 2147663961, i64 2147664004, i64 2147664044}
!5942 = !DILocation(line: 318, column: 1, scope: !5326)
!5943 = !{i64 2147664162, i64 2147664205, i64 2147664245}
!5944 = !DILocation(line: 319, column: 1, scope: !5326)
!5945 = !{i64 2147664394, i64 2147664437, i64 2147664477}
!5946 = !DILocation(line: 320, column: 1, scope: !5326)
!5947 = !{i64 2147664602, i64 2147664645, i64 2147664685}
!5948 = !DILocation(line: 321, column: 1, scope: !5326)
!5949 = !{i64 2147664792, i64 2147664835, i64 2147664875}
!5950 = !DILocation(line: 322, column: 1, scope: !5326)
!5951 = !{i64 2147665018, i64 2147665061, i64 2147665101}
!5952 = !DILocation(line: 323, column: 1, scope: !5326)
!5953 = !{i64 2147665207, i64 2147665250, i64 2147665290}
!5954 = !DILocation(line: 324, column: 1, scope: !5326)
!5955 = !{i64 2147665478, i64 2147665521, i64 2147665561}
!5956 = !DILocation(line: 325, column: 1, scope: !5326)
!5957 = !{i64 2147665698, i64 2147665741, i64 2147665781}
!5958 = !DILocation(line: 326, column: 1, scope: !5326)
!5959 = !{i64 2147665951, i64 2147665994, i64 2147666034}
!5960 = !DILocation(line: 327, column: 1, scope: !5326)
!5961 = !{i64 2147666159, i64 2147666202, i64 2147666242}
!5962 = !DILocation(line: 328, column: 1, scope: !5326)
!5963 = !{i64 2147666391, i64 2147666434, i64 2147666474}
!5964 = !DILocation(line: 329, column: 1, scope: !5326)
!5965 = !{i64 2147666602, i64 2147666645, i64 2147666685}
!5966 = !DILocation(line: 330, column: 1, scope: !5326)
!5967 = !{i64 2147666792, i64 2147666835, i64 2147666875}
!5968 = !DILocation(line: 331, column: 1, scope: !5326)
!5969 = !{i64 2147667006, i64 2147667049, i64 2147667089}
!5970 = !DILocation(line: 332, column: 1, scope: !5326)
!5971 = !{i64 2147667205, i64 2147667248, i64 2147667288}
!5972 = !DILocation(line: 333, column: 1, scope: !5326)
!5973 = !{i64 2147667392, i64 2147667435, i64 2147667475}
!5974 = !DILocation(line: 334, column: 1, scope: !5326)
!5975 = !{i64 2147667600, i64 2147667643, i64 2147667683}
!5976 = !DILocation(line: 335, column: 1, scope: !5326)
!5977 = !{i64 2147667829, i64 2147667872, i64 2147667912}
!5978 = !DILocation(line: 336, column: 1, scope: !5326)
!5979 = !{i64 2147668031, i64 2147668074, i64 2147668114}
!5980 = !DILocation(line: 337, column: 1, scope: !5326)
!5981 = !{i64 2147668230, i64 2147668273, i64 2147668313}
!5982 = !DILocation(line: 338, column: 1, scope: !5326)
!5983 = !{i64 2147668447, i64 2147668490, i64 2147668530}
!5984 = !DILocation(line: 340, column: 1, scope: !5326)
!5985 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !322, file: !322, line: 30, type: !329, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !5986)
!5986 = !{!5987, !5988}
!5987 = !DILocalVariable(name: "arg", arg: 1, scope: !5985, file: !322, line: 30, type: !331)
!5988 = !DILocalVariable(name: "key", scope: !5985, file: !322, line: 32, type: !118)
!5989 = !DILocation(line: 0, scope: !5985)
!5990 = !DILocation(line: 37, column: 2, scope: !5985)
!5991 = !DILocation(line: 38, column: 2, scope: !5985)
!5992 = !DILocation(line: 55, column: 2, scope: !5993, inlinedAt: !6000)
!5993 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5994, file: !5994, line: 42, type: !5995, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !5997)
!5994 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5995 = !DISubroutineType(types: !5996)
!5996 = !{!32}
!5997 = !{!5998, !5999}
!5998 = !DILocalVariable(name: "key", scope: !5993, file: !5994, line: 44, type: !32)
!5999 = !DILocalVariable(name: "tmp", scope: !5993, file: !5994, line: 53, type: !32)
!6000 = distinct !DILocation(line: 40, column: 8, scope: !5985)
!6001 = !{i64 2135207}
!6002 = !DILocation(line: 0, scope: !5993, inlinedAt: !6000)
!6003 = !DILocalVariable(name: "key", arg: 1, scope: !6004, file: !5994, line: 84, type: !32)
!6004 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5994, file: !5994, line: 84, type: !6005, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6007)
!6005 = !DISubroutineType(types: !6006)
!6006 = !{null, !32}
!6007 = !{!6003}
!6008 = !DILocation(line: 0, scope: !6004, inlinedAt: !6009)
!6009 = distinct !DILocation(line: 47, column: 2, scope: !5985)
!6010 = !DILocation(line: 95, column: 2, scope: !6004, inlinedAt: !6009)
!6011 = !{i64 2136024}
!6012 = !DILocation(line: 51, column: 18, scope: !5985)
!6013 = !DILocation(line: 53, column: 2, scope: !5985)
!6014 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6015, file: !6015, line: 1609, type: !2953, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2022)
!6015 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6016 = !DILocation(line: 1611, column: 3, scope: !6014)
!6017 = !DILocation(line: 1612, column: 1, scope: !6014)
!6018 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6015, file: !6015, line: 1629, type: !2953, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2022)
!6019 = !DILocation(line: 1631, column: 3, scope: !6018)
!6020 = !DILocation(line: 1632, column: 1, scope: !6018)
!6021 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !359, file: !359, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !6022)
!6022 = !{!6023}
!6023 = !DILocalVariable(name: "dev", arg: 1, scope: !6021, file: !359, line: 26, type: !367)
!6024 = !DILocation(line: 0, scope: !6021)
!6025 = !DILocation(line: 68, column: 2, scope: !6021)
!6026 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6027, file: !6027, line: 14, type: !4280, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !6028)
!6027 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6028 = !{!6029, !6030}
!6029 = !DILocalVariable(name: "fmt", arg: 1, scope: !6026, file: !6027, line: 14, type: !278)
!6030 = !DILocalVariable(name: "ap", scope: !6026, file: !6027, line: 16, type: !6031)
!6031 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3286, line: 99, baseType: !6032)
!6032 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3286, line: 40, baseType: !6033)
!6033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6027, baseType: !6034)
!6034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6035)
!6035 = !{!6036}
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6034, file: !6027, line: 16, baseType: !113, size: 32)
!6037 = !DILocation(line: 0, scope: !6026)
!6038 = !DILocation(line: 16, column: 2, scope: !6026)
!6039 = !DILocation(line: 16, column: 10, scope: !6026)
!6040 = !DILocation(line: 18, column: 2, scope: !6026)
!6041 = !DILocation(line: 19, column: 2, scope: !6026)
!6042 = !DILocation(line: 20, column: 2, scope: !6026)
!6043 = !DILocation(line: 21, column: 1, scope: !6026)
!6044 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6027, file: !6027, line: 23, type: !6045, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !6047)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{null, !278, !6031}
!6047 = !{!6048, !6049}
!6048 = !DILocalVariable(name: "fmt", arg: 1, scope: !6044, file: !6027, line: 23, type: !278)
!6049 = !DILocalVariable(name: "ap", arg: 2, scope: !6044, file: !6027, line: 23, type: !6031)
!6050 = !DILocation(line: 0, scope: !6044)
!6051 = !DILocation(line: 25, column: 2, scope: !6044)
!6052 = !DILocation(line: 26, column: 1, scope: !6044)
!6053 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6027, file: !6027, line: 52, type: !6054, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !6056)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{null, !119, !13, !239}
!6056 = !{!6057, !6058, !6059, !6060}
!6057 = !DILocalVariable(name: "level", arg: 1, scope: !6053, file: !6027, line: 52, type: !119)
!6058 = !DILocalVariable(name: "data", arg: 2, scope: !6053, file: !6027, line: 52, type: !13)
!6059 = !DILocalVariable(name: "size", arg: 3, scope: !6053, file: !6027, line: 52, type: !239)
!6060 = !DILocalVariable(name: "data_buffer", scope: !6053, file: !6027, line: 54, type: !278)
!6061 = !DILocation(line: 0, scope: !6053)
!6062 = !DILocation(line: 55, column: 14, scope: !6053)
!6063 = !DILocation(line: 55, column: 2, scope: !6053)
!6064 = !DILocation(line: 56, column: 3, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6053, file: !6027, line: 55, column: 20)
!6066 = !DILocation(line: 57, column: 3, scope: !6065)
!6067 = !DILocation(line: 59, column: 7, scope: !6065)
!6068 = distinct !{!6068, !6063, !6069}
!6069 = !DILocation(line: 65, column: 2, scope: !6053)
!6070 = !DILocation(line: 66, column: 1, scope: !6053)
!6071 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6072, file: !6072, line: 175, type: !6073, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !6075)
!6072 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6073 = !DISubroutineType(types: !6074)
!6074 = !{!107, !119}
!6075 = !{!6076}
!6076 = !DILocalVariable(name: "level", arg: 1, scope: !6071, file: !6072, line: 175, type: !119)
!6077 = !DILocation(line: 0, scope: !6071)
!6078 = !DILocation(line: 177, column: 2, scope: !6071)
!6079 = !DILocation(line: 189, column: 1, scope: !6071)
!6080 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6027, file: !6027, line: 28, type: !6081, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !6083)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{null, !278, !239}
!6083 = !{!6084, !6085, !6086, !6088, !6090}
!6084 = !DILocalVariable(name: "data", arg: 1, scope: !6080, file: !6027, line: 28, type: !278)
!6085 = !DILocalVariable(name: "length", arg: 2, scope: !6080, file: !6027, line: 28, type: !239)
!6086 = !DILocalVariable(name: "i", scope: !6087, file: !6027, line: 30, type: !239)
!6087 = distinct !DILexicalBlock(scope: !6080, file: !6027, line: 30, column: 2)
!6088 = !DILocalVariable(name: "i", scope: !6089, file: !6027, line: 40, type: !239)
!6089 = distinct !DILexicalBlock(scope: !6080, file: !6027, line: 40, column: 2)
!6090 = !DILocalVariable(name: "c", scope: !6091, file: !6027, line: 42, type: !186)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !6027, line: 41, column: 19)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !6027, line: 41, column: 7)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !6027, line: 40, column: 54)
!6094 = distinct !DILexicalBlock(scope: !6089, file: !6027, line: 40, column: 2)
!6095 = !DILocation(line: 0, scope: !6080)
!6096 = !DILocation(line: 0, scope: !6087)
!6097 = !DILocation(line: 30, column: 2, scope: !6087)
!6098 = !DILocation(line: 38, column: 2, scope: !6080)
!6099 = !DILocation(line: 0, scope: !6089)
!6100 = !DILocation(line: 40, column: 2, scope: !6089)
!6101 = !DILocation(line: 31, column: 9, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !6027, line: 31, column: 7)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !6027, line: 30, column: 54)
!6104 = distinct !DILexicalBlock(scope: !6087, file: !6027, line: 30, column: 2)
!6105 = !DILocation(line: 31, column: 7, scope: !6103)
!6106 = !DILocation(line: 32, column: 35, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6102, file: !6027, line: 31, column: 19)
!6108 = !DILocation(line: 32, column: 20, scope: !6107)
!6109 = !DILocation(line: 32, column: 4, scope: !6107)
!6110 = !DILocation(line: 33, column: 3, scope: !6107)
!6111 = !DILocation(line: 34, column: 4, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6102, file: !6027, line: 33, column: 10)
!6113 = !DILocation(line: 30, column: 50, scope: !6104)
!6114 = !DILocation(line: 30, column: 24, scope: !6104)
!6115 = distinct !{!6115, !6097, !6116}
!6116 = !DILocation(line: 36, column: 2, scope: !6087)
!6117 = !DILocation(line: 49, column: 2, scope: !6080)
!6118 = !DILocation(line: 50, column: 1, scope: !6080)
!6119 = !DILocation(line: 41, column: 9, scope: !6092)
!6120 = !DILocation(line: 41, column: 7, scope: !6093)
!6121 = !DILocation(line: 42, column: 22, scope: !6091)
!6122 = !DILocation(line: 0, scope: !6091)
!6123 = !DILocation(line: 44, column: 25, scope: !6091)
!6124 = !DILocation(line: 44, column: 17, scope: !6091)
!6125 = !DILocation(line: 44, column: 33, scope: !6091)
!6126 = !DILocation(line: 44, column: 4, scope: !6091)
!6127 = !DILocation(line: 45, column: 3, scope: !6091)
!6128 = !DILocation(line: 46, column: 4, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6092, file: !6027, line: 45, column: 10)
!6130 = !DILocation(line: 40, column: 50, scope: !6094)
!6131 = !DILocation(line: 40, column: 24, scope: !6094)
!6132 = distinct !{!6132, !6100, !6133}
!6133 = !DILocation(line: 48, column: 2, scope: !6089)
!6134 = distinct !DISubprogram(name: "isprint", scope: !5070, file: !5070, line: 37, type: !301, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !6135)
!6135 = !{!6136}
!6136 = !DILocalVariable(name: "c", arg: 1, scope: !6134, file: !5070, line: 37, type: !119)
!6137 = !DILocation(line: 0, scope: !6134)
!6138 = !DILocation(line: 39, column: 38, scope: !6134)
!6139 = !DILocation(line: 39, column: 2, scope: !6134)
!6140 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6141, file: !6141, line: 57, type: !6142, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !6188)
!6141 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6142 = !DISubroutineType(types: !6143)
!6143 = !{null, !32, !6144}
!6144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 32)
!6145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6146)
!6146 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2533, line: 141, baseType: !6147)
!6147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2533, line: 97, size: 256, elements: !6148)
!6148 = !{!6149}
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6147, file: !2533, line: 107, baseType: !6150, size: 256)
!6150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2533, line: 98, size: 256, elements: !6151)
!6151 = !{!6152, !6157, !6162, !6167, !6172, !6177, !6182, !6187}
!6152 = !DIDerivedType(tag: DW_TAG_member, scope: !6150, file: !2533, line: 99, baseType: !6153, size: 32)
!6153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6150, file: !2533, line: 99, size: 32, elements: !6154)
!6154 = !{!6155, !6156}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6153, file: !2533, line: 99, baseType: !118, size: 32)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6153, file: !2533, line: 99, baseType: !118, size: 32)
!6157 = !DIDerivedType(tag: DW_TAG_member, scope: !6150, file: !2533, line: 100, baseType: !6158, size: 32, offset: 32)
!6158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6150, file: !2533, line: 100, size: 32, elements: !6159)
!6159 = !{!6160, !6161}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6158, file: !2533, line: 100, baseType: !118, size: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6158, file: !2533, line: 100, baseType: !118, size: 32)
!6162 = !DIDerivedType(tag: DW_TAG_member, scope: !6150, file: !2533, line: 101, baseType: !6163, size: 32, offset: 64)
!6163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6150, file: !2533, line: 101, size: 32, elements: !6164)
!6164 = !{!6165, !6166}
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6163, file: !2533, line: 101, baseType: !118, size: 32)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6163, file: !2533, line: 101, baseType: !118, size: 32)
!6167 = !DIDerivedType(tag: DW_TAG_member, scope: !6150, file: !2533, line: 102, baseType: !6168, size: 32, offset: 96)
!6168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6150, file: !2533, line: 102, size: 32, elements: !6169)
!6169 = !{!6170, !6171}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6168, file: !2533, line: 102, baseType: !118, size: 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6168, file: !2533, line: 102, baseType: !118, size: 32)
!6172 = !DIDerivedType(tag: DW_TAG_member, scope: !6150, file: !2533, line: 103, baseType: !6173, size: 32, offset: 128)
!6173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6150, file: !2533, line: 103, size: 32, elements: !6174)
!6174 = !{!6175, !6176}
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6173, file: !2533, line: 103, baseType: !118, size: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6173, file: !2533, line: 103, baseType: !118, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_member, scope: !6150, file: !2533, line: 104, baseType: !6178, size: 32, offset: 160)
!6178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6150, file: !2533, line: 104, size: 32, elements: !6179)
!6179 = !{!6180, !6181}
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6178, file: !2533, line: 104, baseType: !118, size: 32)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6178, file: !2533, line: 104, baseType: !118, size: 32)
!6182 = !DIDerivedType(tag: DW_TAG_member, scope: !6150, file: !2533, line: 105, baseType: !6183, size: 32, offset: 192)
!6183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6150, file: !2533, line: 105, size: 32, elements: !6184)
!6184 = !{!6185, !6186}
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6183, file: !2533, line: 105, baseType: !118, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6183, file: !2533, line: 105, baseType: !118, size: 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6150, file: !2533, line: 106, baseType: !118, size: 32, offset: 224)
!6188 = !{!6189, !6190}
!6189 = !DILocalVariable(name: "reason", arg: 1, scope: !6140, file: !6141, line: 57, type: !32)
!6190 = !DILocalVariable(name: "esf", arg: 2, scope: !6140, file: !6141, line: 57, type: !6144)
!6191 = !DILocation(line: 0, scope: !6140)
!6192 = !DILocation(line: 60, column: 10, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6140, file: !6141, line: 60, column: 6)
!6194 = !DILocation(line: 60, column: 6, scope: !6140)
!6195 = !DILocation(line: 61, column: 3, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6193, file: !6141, line: 60, column: 19)
!6197 = !DILocation(line: 62, column: 2, scope: !6196)
!6198 = !DILocation(line: 63, column: 2, scope: !6140)
!6199 = !DILocation(line: 64, column: 1, scope: !6140)
!6200 = distinct !DISubprogram(name: "esf_dump", scope: !6141, file: !6141, line: 20, type: !6201, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !6203)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{null, !6144}
!6203 = !{!6204}
!6204 = !DILocalVariable(name: "esf", arg: 1, scope: !6200, file: !6141, line: 20, type: !6144)
!6205 = !DILocation(line: 0, scope: !6200)
!6206 = !DILocation(line: 22, column: 2, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !6141, line: 22, column: 2)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !6141, line: 22, column: 2)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !6141, line: 22, column: 2)
!6210 = distinct !DILexicalBlock(scope: !6200, file: !6141, line: 22, column: 2)
!6211 = !DILocation(line: 24, column: 2, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6213, file: !6141, line: 24, column: 2)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !6141, line: 24, column: 2)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !6141, line: 24, column: 2)
!6215 = distinct !DILexicalBlock(scope: !6200, file: !6141, line: 24, column: 2)
!6216 = !DILocation(line: 26, column: 2, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !6141, line: 26, column: 2)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !6141, line: 26, column: 2)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !6141, line: 26, column: 2)
!6220 = distinct !DILexicalBlock(scope: !6200, file: !6141, line: 26, column: 2)
!6221 = !DILocation(line: 53, column: 2, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !6141, line: 53, column: 2)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !6141, line: 53, column: 2)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !6141, line: 53, column: 2)
!6225 = distinct !DILexicalBlock(scope: !6200, file: !6141, line: 53, column: 2)
!6226 = !DILocation(line: 55, column: 1, scope: !6200)
!6227 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6141, file: !6141, line: 82, type: !6228, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !6243)
!6228 = !DISubroutineType(types: !6229)
!6229 = !{null, !6144, !6230}
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6232)
!6232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6233)
!6233 = !{!6234, !6235, !6236, !6237, !6238, !6239, !6240, !6241, !6242}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6232, file: !216, line: 26, baseType: !118, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6232, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6232, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6232, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6232, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6232, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6232, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6232, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6232, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6243 = !{!6244, !6245, !6246}
!6244 = !DILocalVariable(name: "esf", arg: 1, scope: !6227, file: !6141, line: 82, type: !6144)
!6245 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6227, file: !6141, line: 82, type: !6230)
!6246 = !DILocalVariable(name: "reason", scope: !6227, file: !6141, line: 88, type: !32)
!6247 = !DILocation(line: 0, scope: !6227)
!6248 = !DILocation(line: 88, column: 35, scope: !6227)
!6249 = !DILocation(line: 108, column: 2, scope: !6227)
!6250 = !DILocation(line: 131, column: 1, scope: !6227)
!6251 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6141, file: !6141, line: 133, type: !6252, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !6254)
!6252 = !DISubroutineType(types: !6253)
!6253 = !{null, !113}
!6254 = !{!6255, !6256, !6257}
!6255 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6251, file: !6141, line: 133, type: !113)
!6256 = !DILocalVariable(name: "ssf_contents", scope: !6251, file: !6141, line: 135, type: !882)
!6257 = !DILocalVariable(name: "oops_esf", scope: !6251, file: !6141, line: 136, type: !6146)
!6258 = !DILocation(line: 0, scope: !6251)
!6259 = !DILocation(line: 136, column: 2, scope: !6251)
!6260 = !DILocation(line: 136, column: 15, scope: !6251)
!6261 = !DILocation(line: 139, column: 22, scope: !6251)
!6262 = !DILocation(line: 139, column: 17, scope: !6251)
!6263 = !DILocation(line: 139, column: 20, scope: !6251)
!6264 = !DILocation(line: 141, column: 2, scope: !6251)
!6265 = !DILocation(line: 142, column: 2, scope: !6251)
!6266 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6267, file: !6267, line: 40, type: !6005, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6268)
!6267 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6268 = !{!6269}
!6269 = !DILocalVariable(name: "irq", arg: 1, scope: !6266, file: !6267, line: 40, type: !32)
!6270 = !DILocation(line: 0, scope: !6266)
!6271 = !DILocation(line: 42, column: 2, scope: !6266)
!6272 = !DILocation(line: 43, column: 1, scope: !6266)
!6273 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !533, file: !533, line: 1684, type: !6274, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6276)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{null, !789}
!6276 = !{!6277}
!6277 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6273, file: !533, line: 1684, type: !789)
!6278 = !DILocation(line: 0, scope: !6273)
!6279 = !DILocation(line: 1686, column: 23, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6273, file: !533, line: 1686, column: 7)
!6281 = !DILocation(line: 1686, column: 7, scope: !6273)
!6282 = !DILocation(line: 1688, column: 5, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6280, file: !533, line: 1687, column: 3)
!6284 = !{i64 2151027433}
!6285 = !DILocation(line: 1689, column: 81, scope: !6283)
!6286 = !DILocation(line: 1689, column: 60, scope: !6283)
!6287 = !DILocation(line: 1689, column: 34, scope: !6283)
!6288 = !DILocation(line: 1689, column: 5, scope: !6283)
!6289 = !DILocation(line: 1689, column: 43, scope: !6283)
!6290 = !DILocation(line: 1690, column: 5, scope: !6283)
!6291 = !{i64 2151027547}
!6292 = !DILocation(line: 1691, column: 3, scope: !6283)
!6293 = !DILocation(line: 1692, column: 1, scope: !6273)
!6294 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6267, file: !6267, line: 45, type: !6005, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6295)
!6295 = !{!6296}
!6296 = !DILocalVariable(name: "irq", arg: 1, scope: !6294, file: !6267, line: 45, type: !32)
!6297 = !DILocation(line: 0, scope: !6294)
!6298 = !DILocation(line: 47, column: 2, scope: !6294)
!6299 = !DILocation(line: 48, column: 1, scope: !6294)
!6300 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !533, file: !533, line: 1722, type: !6274, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6301)
!6301 = !{!6302}
!6302 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6300, file: !533, line: 1722, type: !789)
!6303 = !DILocation(line: 0, scope: !6300)
!6304 = !DILocation(line: 1724, column: 23, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6300, file: !533, line: 1724, column: 7)
!6306 = !DILocation(line: 1724, column: 7, scope: !6300)
!6307 = !DILocation(line: 1726, column: 81, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6305, file: !533, line: 1725, column: 3)
!6309 = !DILocation(line: 1726, column: 60, scope: !6308)
!6310 = !DILocation(line: 1726, column: 34, scope: !6308)
!6311 = !DILocation(line: 1726, column: 5, scope: !6308)
!6312 = !DILocation(line: 1726, column: 43, scope: !6308)
!6313 = !DILocation(line: 271, column: 3, scope: !6314, inlinedAt: !6316)
!6314 = distinct !DISubprogram(name: "__DSB", scope: !6315, file: !6315, line: 269, type: !2953, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !2022)
!6315 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6316 = distinct !DILocation(line: 1727, column: 5, scope: !6308)
!6317 = !{i64 3481816}
!6318 = !DILocation(line: 260, column: 3, scope: !6319, inlinedAt: !6320)
!6319 = distinct !DISubprogram(name: "__ISB", scope: !6315, file: !6315, line: 258, type: !2953, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !2022)
!6320 = distinct !DILocation(line: 1728, column: 5, scope: !6308)
!6321 = !{i64 3481533}
!6322 = !DILocation(line: 1729, column: 3, scope: !6308)
!6323 = !DILocation(line: 1730, column: 1, scope: !6300)
!6324 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6267, file: !6267, line: 50, type: !6325, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6327)
!6325 = !DISubroutineType(types: !6326)
!6326 = !{!119, !32}
!6327 = !{!6328}
!6328 = !DILocalVariable(name: "irq", arg: 1, scope: !6324, file: !6267, line: 50, type: !32)
!6329 = !DILocation(line: 0, scope: !6324)
!6330 = !DILocation(line: 52, column: 20, scope: !6324)
!6331 = !DILocation(line: 52, column: 9, scope: !6324)
!6332 = !DILocation(line: 52, column: 41, scope: !6324)
!6333 = !DILocation(line: 52, column: 39, scope: !6324)
!6334 = !DILocation(line: 52, column: 2, scope: !6324)
!6335 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6267, file: !6267, line: 64, type: !6336, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6338)
!6336 = !DISubroutineType(types: !6337)
!6337 = !{null, !32, !32, !118}
!6338 = !{!6339, !6340, !6341}
!6339 = !DILocalVariable(name: "irq", arg: 1, scope: !6335, file: !6267, line: 64, type: !32)
!6340 = !DILocalVariable(name: "prio", arg: 2, scope: !6335, file: !6267, line: 64, type: !32)
!6341 = !DILocalVariable(name: "flags", arg: 3, scope: !6335, file: !6267, line: 64, type: !118)
!6342 = !DILocation(line: 0, scope: !6335)
!6343 = !DILocation(line: 83, column: 8, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !6267, line: 82, column: 9)
!6345 = distinct !DILexicalBlock(scope: !6335, file: !6267, line: 76, column: 6)
!6346 = !DILocation(line: 91, column: 2, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6348, file: !6267, line: 91, column: 2)
!6348 = distinct !DILexicalBlock(scope: !6335, file: !6267, line: 91, column: 2)
!6349 = !DILocation(line: 91, column: 2, scope: !6348)
!6350 = !DILocation(line: 91, column: 2, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6347, file: !6267, line: 91, column: 2)
!6352 = !DILocation(line: 95, column: 2, scope: !6335)
!6353 = !DILocation(line: 96, column: 1, scope: !6335)
!6354 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6355, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{null, !789, !118}
!6357 = !{!6358, !6359}
!6358 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6354, file: !533, line: 1814, type: !789)
!6359 = !DILocalVariable(name: "priority", arg: 2, scope: !6354, file: !533, line: 1814, type: !118)
!6360 = !DILocation(line: 0, scope: !6354)
!6361 = !DILocation(line: 0, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6354, file: !533, line: 1816, column: 7)
!6363 = !DILocation(line: 1816, column: 7, scope: !6354)
!6364 = !DILocation(line: 1824, column: 1, scope: !6354)
!6365 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6267, file: !6267, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6366)
!6366 = !{!6367}
!6367 = !DILocalVariable(name: "unused", arg: 1, scope: !6365, file: !6267, line: 155, type: !13)
!6368 = !DILocation(line: 0, scope: !6365)
!6369 = !DILocation(line: 159, column: 2, scope: !6365)
!6370 = !DILocation(line: 160, column: 1, scope: !6365)
!6371 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6372, file: !6372, line: 87, type: !2953, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !2022)
!6372 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6373 = !DILocation(line: 89, column: 2, scope: !6371)
!6374 = !DILocation(line: 90, column: 2, scope: !6371)
!6375 = !DILocation(line: 91, column: 1, scope: !6371)
!6376 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6372, file: !6372, line: 23, type: !2953, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!6377 = !DISubprogram(name: "z_arm_int_exit", scope: !6378, file: !6378, line: 153, type: !2953, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!6378 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6379 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6380, file: !6380, line: 256, type: !2953, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2472, retainedNodes: !2022)
!6380 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6381 = !DILocation(line: 258, column: 2, scope: !6379)
!6382 = !DILocation(line: 260, column: 2, scope: !6379)
!6383 = !DILocation(line: 262, column: 2, scope: !6379)
!6384 = !DILocation(line: 263, column: 2, scope: !6379)
!6385 = !DILocation(line: 267, column: 2, scope: !6379)
!6386 = !DILocation(line: 268, column: 2, scope: !6379)
!6387 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6380, file: !6380, line: 53, type: !2953, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2472, retainedNodes: !2022)
!6388 = !DILocation(line: 55, column: 12, scope: !6387)
!6389 = !DILocation(line: 271, column: 3, scope: !6390, inlinedAt: !6391)
!6390 = distinct !DISubprogram(name: "__DSB", scope: !6315, file: !6315, line: 269, type: !2953, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2472, retainedNodes: !2022)
!6391 = distinct !DILocation(line: 56, column: 2, scope: !6387)
!6392 = !{i64 3480487}
!6393 = !DILocation(line: 260, column: 3, scope: !6394, inlinedAt: !6395)
!6394 = distinct !DISubprogram(name: "__ISB", scope: !6315, file: !6315, line: 258, type: !2953, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2472, retainedNodes: !2022)
!6395 = distinct !DILocation(line: 57, column: 2, scope: !6387)
!6396 = !{i64 3480204}
!6397 = !DILocation(line: 58, column: 1, scope: !6387)
!6398 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6380, file: !6380, line: 96, type: !2953, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2472, retainedNodes: !2022)
!6399 = !DILocation(line: 103, column: 13, scope: !6398)
!6400 = !DILocation(line: 975, column: 3, scope: !6401, inlinedAt: !6404)
!6401 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6315, file: !6315, line: 971, type: !3191, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2472, retainedNodes: !6402)
!6402 = !{!6403}
!6403 = !DILocalVariable(name: "result", scope: !6401, file: !6315, line: 973, type: !118)
!6404 = distinct !DILocation(line: 189, column: 16, scope: !6398)
!6405 = !{i64 3501317}
!6406 = !DILocation(line: 0, scope: !6401, inlinedAt: !6404)
!6407 = !DILocation(line: 189, column: 32, scope: !6398)
!6408 = !DILocalVariable(name: "control", arg: 1, scope: !6409, file: !6315, line: 1001, type: !118)
!6409 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6315, file: !6315, line: 1001, type: !6410, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2472, retainedNodes: !6412)
!6410 = !DISubroutineType(types: !6411)
!6411 = !{null, !118}
!6412 = !{!6408}
!6413 = !DILocation(line: 0, scope: !6409, inlinedAt: !6414)
!6414 = distinct !DILocation(line: 189, column: 2, scope: !6398)
!6415 = !DILocation(line: 1003, column: 3, scope: !6409, inlinedAt: !6414)
!6416 = !{i64 3502037}
!6417 = !DILocation(line: 260, column: 3, scope: !6394, inlinedAt: !6418)
!6418 = distinct !DILocation(line: 1004, column: 3, scope: !6409, inlinedAt: !6414)
!6419 = !DILocation(line: 191, column: 1, scope: !6398)
!6420 = distinct !DISubprogram(name: "arch_swap", scope: !6421, file: !6421, line: 33, type: !6325, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2500, retainedNodes: !6422)
!6421 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6422 = !{!6423}
!6423 = !DILocalVariable(name: "key", arg: 1, scope: !6420, file: !6421, line: 33, type: !32)
!6424 = !DILocation(line: 0, scope: !6420)
!6425 = !DILocation(line: 36, column: 2, scope: !6420)
!6426 = !DILocation(line: 36, column: 17, scope: !6420)
!6427 = !DILocation(line: 36, column: 25, scope: !6420)
!6428 = !DILocation(line: 37, column: 37, scope: !6420)
!6429 = !DILocation(line: 37, column: 17, scope: !6420)
!6430 = !DILocation(line: 37, column: 35, scope: !6420)
!6431 = !DILocation(line: 41, column: 12, scope: !6420)
!6432 = !DILocalVariable(name: "key", arg: 1, scope: !6433, file: !5994, line: 84, type: !32)
!6433 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5994, file: !5994, line: 84, type: !6005, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2500, retainedNodes: !6434)
!6434 = !{!6432}
!6435 = !DILocation(line: 0, scope: !6433, inlinedAt: !6436)
!6436 = distinct !DILocation(line: 44, column: 2, scope: !6420)
!6437 = !DILocation(line: 95, column: 2, scope: !6433, inlinedAt: !6436)
!6438 = !{i64 2242551}
!6439 = !DILocation(line: 53, column: 9, scope: !6420)
!6440 = !DILocation(line: 53, column: 24, scope: !6420)
!6441 = !DILocation(line: 53, column: 2, scope: !6420)
!6442 = distinct !DISubprogram(name: "arch_new_thread", scope: !6443, file: !6443, line: 56, type: !6444, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !6554)
!6443 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6444 = !DISubroutineType(types: !6445)
!6445 = !{null, !6446, !6549, !106, !108, !113, !113, !113}
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 32)
!6447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !6448)
!6448 = !{!6449, !6507, !6519, !6520, !6521, !6522, !6523, !6529, !6544}
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6447, file: !143, line: 247, baseType: !6450, size: 384)
!6450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !6451)
!6451 = !{!6452, !6476, !6483, !6484, !6485, !6494, !6495, !6496}
!6452 = !DIDerivedType(tag: DW_TAG_member, scope: !6450, file: !143, line: 60, baseType: !6453, size: 64)
!6453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6450, file: !143, line: 60, size: 64, elements: !6454)
!6454 = !{!6455, !6470}
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6453, file: !143, line: 61, baseType: !6456, size: 64)
!6456 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !6457)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !6458)
!6458 = !{!6459, !6465}
!6459 = !DIDerivedType(tag: DW_TAG_member, scope: !6457, file: !153, line: 38, baseType: !6460, size: 32)
!6460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6457, file: !153, line: 38, size: 32, elements: !6461)
!6461 = !{!6462, !6464}
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6460, file: !153, line: 39, baseType: !6463, size: 32)
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6457, size: 32)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6460, file: !153, line: 40, baseType: !6463, size: 32)
!6465 = !DIDerivedType(tag: DW_TAG_member, scope: !6457, file: !153, line: 42, baseType: !6466, size: 32, offset: 32)
!6466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6457, file: !153, line: 42, size: 32, elements: !6467)
!6467 = !{!6468, !6469}
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6466, file: !153, line: 43, baseType: !6463, size: 32)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6466, file: !153, line: 44, baseType: !6463, size: 32)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6453, file: !143, line: 62, baseType: !6471, size: 64)
!6471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !6472)
!6472 = !{!6473}
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6471, file: !169, line: 50, baseType: !6474, size: 64)
!6474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6475, size: 64, elements: !174)
!6475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6471, size: 32)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6450, file: !143, line: 68, baseType: !6477, size: 32, offset: 64)
!6477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6478, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !6479)
!6479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !6480)
!6480 = !{!6481}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6479, file: !179, line: 232, baseType: !6482, size: 64)
!6482 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !6457)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6450, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6450, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!6485 = !DIDerivedType(tag: DW_TAG_member, scope: !6450, file: !143, line: 90, baseType: !6486, size: 16, offset: 112)
!6486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6450, file: !143, line: 90, size: 16, elements: !6487)
!6487 = !{!6488, !6493}
!6488 = !DIDerivedType(tag: DW_TAG_member, scope: !6486, file: !143, line: 91, baseType: !6489, size: 16)
!6489 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6486, file: !143, line: 91, size: 16, elements: !6490)
!6490 = !{!6491, !6492}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6489, file: !143, line: 96, baseType: !195, size: 8)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6489, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6486, file: !143, line: 100, baseType: !199, size: 16)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6450, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6450, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6450, file: !143, line: 131, baseType: !6497, size: 192, offset: 192)
!6497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !6498)
!6498 = !{!6499, !6500, !6506}
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6497, file: !179, line: 245, baseType: !6456, size: 64)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6497, file: !179, line: 246, baseType: !6501, size: 32, offset: 64)
!6501 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !6502)
!6502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6503, size: 32)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{null, !6505}
!6505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6497, size: 32)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6497, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6447, file: !143, line: 250, baseType: !6508, size: 288, offset: 384)
!6508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6509)
!6509 = !{!6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6518}
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6508, file: !216, line: 26, baseType: !118, size: 32)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6508, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6508, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6508, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6508, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6508, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6508, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6508, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6508, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6447, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6447, file: !143, line: 256, baseType: !6478, size: 64, offset: 704)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6447, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6447, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6447, file: !143, line: 300, baseType: !6524, size: 96, offset: 1056)
!6524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !6525)
!6525 = !{!6526, !6527, !6528}
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6524, file: !143, line: 153, baseType: !22, size: 32)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6524, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6524, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6447, file: !143, line: 325, baseType: !6530, size: 32, offset: 1152)
!6530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6531, size: 32)
!6531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !6532)
!6532 = !{!6533, !6539, !6540}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6531, file: !245, line: 5074, baseType: !6534, size: 96)
!6534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !6535)
!6535 = !{!6536, !6537, !6538}
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6534, file: !249, line: 57, baseType: !252, size: 32)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6534, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6534, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6531, file: !245, line: 5075, baseType: !6478, size: 64, offset: 96)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6531, file: !245, line: 5076, baseType: !6541, size: 32, offset: 160)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !6542)
!6542 = !{!6543}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6541, file: !259, line: 52, baseType: !22, size: 32)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6447, file: !143, line: 343, baseType: !6545, size: 64, offset: 1184)
!6545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !6546)
!6546 = !{!6547, !6548}
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6545, file: !216, line: 63, baseType: !118, size: 32)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6545, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!6549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6550, size: 32)
!6550 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !6551)
!6551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !6552)
!6552 = !{!6553}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6551, file: !128, line: 48, baseType: !107, size: 8)
!6554 = !{!6555, !6556, !6557, !6558, !6559, !6560, !6561, !6562}
!6555 = !DILocalVariable(name: "thread", arg: 1, scope: !6442, file: !6443, line: 56, type: !6446)
!6556 = !DILocalVariable(name: "stack", arg: 2, scope: !6442, file: !6443, line: 56, type: !6549)
!6557 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6442, file: !6443, line: 57, type: !106)
!6558 = !DILocalVariable(name: "entry", arg: 4, scope: !6442, file: !6443, line: 57, type: !108)
!6559 = !DILocalVariable(name: "p1", arg: 5, scope: !6442, file: !6443, line: 58, type: !113)
!6560 = !DILocalVariable(name: "p2", arg: 6, scope: !6442, file: !6443, line: 58, type: !113)
!6561 = !DILocalVariable(name: "p3", arg: 7, scope: !6442, file: !6443, line: 58, type: !113)
!6562 = !DILocalVariable(name: "iframe", scope: !6442, file: !6443, line: 60, type: !2531)
!6563 = !DILocation(line: 0, scope: !6442)
!6564 = !DILocation(line: 85, column: 11, scope: !6442)
!6565 = !DILocation(line: 93, column: 10, scope: !6442)
!6566 = !DILocation(line: 98, column: 13, scope: !6442)
!6567 = !DILocation(line: 100, column: 15, scope: !6442)
!6568 = !DILocation(line: 100, column: 10, scope: !6442)
!6569 = !DILocation(line: 100, column: 13, scope: !6442)
!6570 = !DILocation(line: 101, column: 15, scope: !6442)
!6571 = !DILocation(line: 101, column: 10, scope: !6442)
!6572 = !DILocation(line: 101, column: 13, scope: !6442)
!6573 = !DILocation(line: 102, column: 15, scope: !6442)
!6574 = !DILocation(line: 102, column: 10, scope: !6442)
!6575 = !DILocation(line: 102, column: 13, scope: !6442)
!6576 = !DILocation(line: 103, column: 15, scope: !6442)
!6577 = !DILocation(line: 103, column: 10, scope: !6442)
!6578 = !DILocation(line: 103, column: 13, scope: !6442)
!6579 = !DILocation(line: 106, column: 10, scope: !6442)
!6580 = !DILocation(line: 106, column: 15, scope: !6442)
!6581 = !DILocation(line: 122, column: 29, scope: !6442)
!6582 = !DILocation(line: 122, column: 23, scope: !6442)
!6583 = !DILocation(line: 122, column: 27, scope: !6442)
!6584 = !DILocation(line: 123, column: 15, scope: !6442)
!6585 = !DILocation(line: 123, column: 23, scope: !6442)
!6586 = !DILocation(line: 143, column: 1, scope: !6442)
!6587 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6443, file: !6443, line: 385, type: !6588, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !6591)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{!118, !6590, !6590}
!6590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!6591 = !{!6592, !6593, !6594, !6597}
!6592 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6587, file: !6443, line: 385, type: !6590)
!6593 = !DILocalVariable(name: "psp", arg: 2, scope: !6587, file: !6443, line: 385, type: !6590)
!6594 = !DILocalVariable(name: "thread", scope: !6587, file: !6443, line: 388, type: !6595)
!6595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6596, size: 32)
!6596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6447)
!6597 = !DILocalVariable(name: "guard_len", scope: !6587, file: !6443, line: 405, type: !118)
!6598 = !DILocation(line: 0, scope: !6587)
!6599 = !DILocation(line: 388, column: 34, scope: !6587)
!6600 = !DILocation(line: 390, column: 13, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6587, file: !6443, line: 390, column: 6)
!6602 = !DILocation(line: 390, column: 6, scope: !6587)
!6603 = !DILocation(line: 438, column: 6, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6587, file: !6443, line: 438, column: 6)
!6605 = !DILocation(line: 438, column: 6, scope: !6587)
!6606 = !DILocation(line: 442, column: 3, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6604, file: !6443, line: 440, column: 22)
!6608 = !DILocation(line: 455, column: 1, scope: !6587)
!6609 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6443, file: !6443, line: 530, type: !6610, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !6612)
!6610 = !DISubroutineType(types: !6611)
!6611 = !{null, !6446, !106, !108}
!6612 = !{!6613, !6614, !6615}
!6613 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6609, file: !6443, line: 530, type: !6446)
!6614 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6609, file: !6443, line: 530, type: !106)
!6615 = !DILocalVariable(name: "_main", arg: 3, scope: !6609, file: !6443, line: 531, type: !108)
!6616 = !DILocation(line: 0, scope: !6609)
!6617 = !DILocation(line: 535, column: 11, scope: !6609)
!6618 = !DILocation(line: 560, column: 2, scope: !6609)
!6619 = !DILocation(line: 576, column: 2, scope: !6609)
!6620 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6621 = !DILocation(line: 603, column: 2, scope: !6609)
!6622 = distinct !DISubprogram(name: "z_arm_fault", scope: !6623, file: !6623, line: 1036, type: !6624, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6639)
!6623 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6624 = !DISubroutineType(types: !6625)
!6625 = !{null, !118, !118, !118, !6626}
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6627, size: 32)
!6627 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6628)
!6628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6629)
!6629 = !{!6630, !6631, !6632, !6633, !6634, !6635, !6636, !6637, !6638}
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6628, file: !216, line: 26, baseType: !118, size: 32)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6628, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6628, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6628, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6628, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6628, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6628, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6628, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6628, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6639 = !{!6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649}
!6640 = !DILocalVariable(name: "msp", arg: 1, scope: !6622, file: !6623, line: 1036, type: !118)
!6641 = !DILocalVariable(name: "psp", arg: 2, scope: !6622, file: !6623, line: 1036, type: !118)
!6642 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6622, file: !6623, line: 1036, type: !118)
!6643 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6622, file: !6623, line: 1037, type: !6626)
!6644 = !DILocalVariable(name: "reason", scope: !6622, file: !6623, line: 1039, type: !118)
!6645 = !DILocalVariable(name: "fault", scope: !6622, file: !6623, line: 1040, type: !119)
!6646 = !DILocalVariable(name: "recoverable", scope: !6622, file: !6623, line: 1041, type: !345)
!6647 = !DILocalVariable(name: "nested_exc", scope: !6622, file: !6623, line: 1041, type: !345)
!6648 = !DILocalVariable(name: "esf", scope: !6622, file: !6623, line: 1042, type: !2599)
!6649 = !DILocalVariable(name: "esf_copy", scope: !6622, file: !6623, line: 1047, type: !2600)
!6650 = !DILocation(line: 0, scope: !6622)
!6651 = !DILocation(line: 1040, column: 19, scope: !6622)
!6652 = !DILocation(line: 1041, column: 2, scope: !6622)
!6653 = !DILocation(line: 1047, column: 2, scope: !6622)
!6654 = !DILocation(line: 1047, column: 15, scope: !6622)
!6655 = !DILocalVariable(name: "key", arg: 1, scope: !6656, file: !5994, line: 84, type: !32)
!6656 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5994, file: !5994, line: 84, type: !6005, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6657)
!6657 = !{!6655}
!6658 = !DILocation(line: 0, scope: !6656, inlinedAt: !6659)
!6659 = distinct !DILocation(line: 1050, column: 2, scope: !6622)
!6660 = !DILocation(line: 95, column: 2, scope: !6656, inlinedAt: !6659)
!6661 = !{i64 2275795}
!6662 = !DILocation(line: 1055, column: 9, scope: !6622)
!6663 = !DILocation(line: 1056, column: 2, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !6623, line: 1056, column: 2)
!6665 = distinct !DILexicalBlock(scope: !6622, file: !6623, line: 1056, column: 2)
!6666 = !DILocation(line: 1056, column: 2, scope: !6665)
!6667 = !DILocation(line: 1056, column: 2, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6664, file: !6623, line: 1056, column: 2)
!6669 = !DILocation(line: 1040, column: 24, scope: !6622)
!6670 = !DILocation(line: 1063, column: 11, scope: !6622)
!6671 = !DILocation(line: 1064, column: 6, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6622, file: !6623, line: 1064, column: 6)
!6673 = !{i8 0, i8 2}
!6674 = !DILocation(line: 1064, column: 6, scope: !6622)
!6675 = !DILocation(line: 1070, column: 20, scope: !6622)
!6676 = !DILocation(line: 1070, column: 2, scope: !6622)
!6677 = !DILocation(line: 1089, column: 6, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6622, file: !6623, line: 1089, column: 6)
!6679 = !DILocation(line: 0, scope: !6678)
!6680 = !DILocation(line: 1089, column: 6, scope: !6622)
!6681 = !DILocation(line: 1090, column: 28, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6683, file: !6623, line: 1090, column: 7)
!6683 = distinct !DILexicalBlock(scope: !6678, file: !6623, line: 1089, column: 18)
!6684 = !DILocation(line: 1090, column: 44, scope: !6682)
!6685 = !DILocation(line: 1090, column: 7, scope: !6683)
!6686 = !DILocation(line: 1091, column: 24, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6682, file: !6623, line: 1090, column: 50)
!6688 = !DILocation(line: 1092, column: 3, scope: !6687)
!6689 = !DILocation(line: 1094, column: 23, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6678, file: !6623, line: 1093, column: 9)
!6691 = !DILocation(line: 1097, column: 2, scope: !6622)
!6692 = !DILocation(line: 1098, column: 1, scope: !6622)
!6693 = distinct !DISubprogram(name: "get_esf", scope: !6623, file: !6623, line: 894, type: !6694, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6697)
!6694 = !DISubroutineType(types: !6695)
!6695 = !{!2599, !118, !118, !118, !6696}
!6696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!6697 = !{!6698, !6699, !6700, !6701, !6702, !6703}
!6698 = !DILocalVariable(name: "msp", arg: 1, scope: !6693, file: !6623, line: 894, type: !118)
!6699 = !DILocalVariable(name: "psp", arg: 2, scope: !6693, file: !6623, line: 894, type: !118)
!6700 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6693, file: !6623, line: 894, type: !118)
!6701 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6693, file: !6623, line: 895, type: !6696)
!6702 = !DILocalVariable(name: "alternative_state_exc", scope: !6693, file: !6623, line: 897, type: !345)
!6703 = !DILocalVariable(name: "ptr_esf", scope: !6693, file: !6623, line: 898, type: !2599)
!6704 = !DILocation(line: 0, scope: !6693)
!6705 = !DILocation(line: 900, column: 14, scope: !6693)
!6706 = !DILocation(line: 902, column: 49, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6693, file: !6623, line: 902, column: 6)
!6708 = !DILocation(line: 902, column: 6, scope: !6693)
!6709 = !DILocation(line: 983, column: 44, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6693, file: !6623, line: 983, column: 6)
!6711 = !DILocation(line: 985, column: 3, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !6623, line: 985, column: 3)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !6623, line: 985, column: 3)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !6623, line: 985, column: 3)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !6623, line: 985, column: 3)
!6716 = distinct !DILexicalBlock(scope: !6710, file: !6623, line: 984, column: 47)
!6717 = !DILocation(line: 986, column: 3, scope: !6716)
!6718 = !DILocation(line: 983, column: 18, scope: !6710)
!6719 = !DILocation(line: 991, column: 7, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !6623, line: 990, column: 30)
!6721 = distinct !DILexicalBlock(scope: !6693, file: !6623, line: 990, column: 6)
!6722 = !DILocation(line: 998, column: 16, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !6623, line: 995, column: 10)
!6724 = distinct !DILexicalBlock(scope: !6720, file: !6623, line: 991, column: 7)
!6725 = !DILocation(line: 1002, column: 2, scope: !6693)
!6726 = !DILocation(line: 1003, column: 1, scope: !6693)
!6727 = distinct !DISubprogram(name: "fault_handle", scope: !6623, file: !6623, line: 786, type: !6728, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6730)
!6728 = !DISubroutineType(types: !6729)
!6729 = !{!118, !2599, !119, !6696}
!6730 = !{!6731, !6732, !6733, !6734}
!6731 = !DILocalVariable(name: "esf", arg: 1, scope: !6727, file: !6623, line: 786, type: !2599)
!6732 = !DILocalVariable(name: "fault", arg: 2, scope: !6727, file: !6623, line: 786, type: !119)
!6733 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6727, file: !6623, line: 786, type: !6696)
!6734 = !DILocalVariable(name: "reason", scope: !6727, file: !6623, line: 788, type: !118)
!6735 = !DILocation(line: 0, scope: !6727)
!6736 = !DILocation(line: 790, column: 15, scope: !6727)
!6737 = !DILocation(line: 792, column: 2, scope: !6727)
!6738 = !DILocation(line: 794, column: 12, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6727, file: !6623, line: 792, column: 17)
!6740 = !DILocation(line: 795, column: 3, scope: !6739)
!6741 = !DILocation(line: 800, column: 12, scope: !6739)
!6742 = !DILocation(line: 801, column: 3, scope: !6739)
!6743 = !DILocation(line: 803, column: 12, scope: !6739)
!6744 = !DILocation(line: 804, column: 3, scope: !6739)
!6745 = !DILocation(line: 806, column: 12, scope: !6739)
!6746 = !DILocation(line: 807, column: 3, scope: !6739)
!6747 = !DILocation(line: 814, column: 3, scope: !6739)
!6748 = !DILocation(line: 815, column: 3, scope: !6739)
!6749 = !DILocation(line: 820, column: 3, scope: !6739)
!6750 = !DILocation(line: 821, column: 3, scope: !6739)
!6751 = !DILocation(line: 829, column: 2, scope: !6727)
!6752 = distinct !DISubprogram(name: "hard_fault", scope: !6623, file: !6623, line: 709, type: !6753, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6755)
!6753 = !DISubroutineType(types: !6754)
!6754 = !{!118, !2599, !6696}
!6755 = !{!6756, !6757, !6758}
!6756 = !DILocalVariable(name: "esf", arg: 1, scope: !6752, file: !6623, line: 709, type: !2599)
!6757 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6752, file: !6623, line: 709, type: !6696)
!6758 = !DILocalVariable(name: "reason", scope: !6752, file: !6623, line: 711, type: !118)
!6759 = !DILocation(line: 0, scope: !6752)
!6760 = !DILocation(line: 713, column: 2, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !6623, line: 713, column: 2)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !6623, line: 713, column: 2)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !6623, line: 713, column: 2)
!6764 = distinct !DILexicalBlock(scope: !6752, file: !6623, line: 713, column: 2)
!6765 = !DILocation(line: 732, column: 15, scope: !6752)
!6766 = !DILocation(line: 734, column: 12, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6752, file: !6623, line: 734, column: 6)
!6768 = !DILocation(line: 734, column: 17, scope: !6767)
!6769 = !DILocation(line: 734, column: 41, scope: !6767)
!6770 = !DILocation(line: 734, column: 6, scope: !6752)
!6771 = !DILocation(line: 735, column: 3, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !6623, line: 735, column: 3)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !6623, line: 735, column: 3)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !6623, line: 735, column: 3)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !6623, line: 735, column: 3)
!6776 = distinct !DILexicalBlock(scope: !6767, file: !6623, line: 734, column: 47)
!6777 = !DILocation(line: 736, column: 2, scope: !6776)
!6778 = !DILocation(line: 736, column: 19, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6767, file: !6623, line: 736, column: 13)
!6780 = !DILocation(line: 736, column: 49, scope: !6779)
!6781 = !DILocation(line: 736, column: 13, scope: !6767)
!6782 = !DILocation(line: 737, column: 3, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6623, line: 737, column: 3)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !6623, line: 737, column: 3)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !6623, line: 737, column: 3)
!6786 = distinct !DILexicalBlock(scope: !6787, file: !6623, line: 737, column: 3)
!6787 = distinct !DILexicalBlock(scope: !6779, file: !6623, line: 736, column: 55)
!6788 = !DILocation(line: 738, column: 2, scope: !6787)
!6789 = !DILocation(line: 738, column: 19, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6779, file: !6623, line: 738, column: 13)
!6791 = !DILocation(line: 738, column: 24, scope: !6790)
!6792 = !DILocation(line: 738, column: 47, scope: !6790)
!6793 = !DILocation(line: 738, column: 13, scope: !6779)
!6794 = !DILocation(line: 739, column: 3, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6623, line: 739, column: 3)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6623, line: 739, column: 3)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !6623, line: 739, column: 3)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !6623, line: 739, column: 3)
!6799 = distinct !DILexicalBlock(scope: !6790, file: !6623, line: 738, column: 53)
!6800 = !DILocation(line: 740, column: 7, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6799, file: !6623, line: 740, column: 7)
!6802 = !DILocation(line: 740, column: 7, scope: !6799)
!6803 = !DILocation(line: 741, column: 4, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6623, line: 741, column: 4)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6623, line: 741, column: 4)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6623, line: 741, column: 4)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6623, line: 741, column: 4)
!6808 = distinct !DILexicalBlock(scope: !6801, file: !6623, line: 740, column: 38)
!6809 = !DILocation(line: 742, column: 24, scope: !6808)
!6810 = !DILocation(line: 743, column: 3, scope: !6808)
!6811 = !DILocation(line: 743, column: 20, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6801, file: !6623, line: 743, column: 14)
!6813 = !DILocation(line: 743, column: 25, scope: !6812)
!6814 = !DILocation(line: 743, column: 52, scope: !6812)
!6815 = !DILocation(line: 743, column: 14, scope: !6801)
!6816 = !DILocation(line: 744, column: 13, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6812, file: !6623, line: 743, column: 58)
!6818 = !DILocation(line: 745, column: 3, scope: !6817)
!6819 = !DILocation(line: 745, column: 20, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6812, file: !6623, line: 745, column: 14)
!6821 = !DILocation(line: 745, column: 25, scope: !6820)
!6822 = !DILocation(line: 745, column: 52, scope: !6820)
!6823 = !DILocation(line: 745, column: 14, scope: !6812)
!6824 = !DILocation(line: 746, column: 13, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6820, file: !6623, line: 745, column: 58)
!6826 = !DILocation(line: 747, column: 3, scope: !6825)
!6827 = !DILocation(line: 747, column: 20, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6820, file: !6623, line: 747, column: 14)
!6829 = !DILocation(line: 747, column: 52, scope: !6828)
!6830 = !DILocation(line: 747, column: 14, scope: !6820)
!6831 = !DILocation(line: 748, column: 13, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !6623, line: 747, column: 58)
!6833 = !DILocation(line: 754, column: 4, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6623, line: 754, column: 4)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6623, line: 754, column: 4)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6623, line: 754, column: 4)
!6837 = distinct !DILexicalBlock(scope: !6828, file: !6623, line: 753, column: 10)
!6838 = !DILocation(line: 758, column: 3, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6623, line: 758, column: 3)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6623, line: 758, column: 3)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !6623, line: 758, column: 3)
!6842 = distinct !DILexicalBlock(scope: !6790, file: !6623, line: 757, column: 9)
!6843 = !DILocation(line: 766, column: 2, scope: !6752)
!6844 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6623, file: !6623, line: 229, type: !6728, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6845)
!6845 = !{!6846, !6847, !6848, !6849, !6850, !6851, !6854}
!6846 = !DILocalVariable(name: "esf", arg: 1, scope: !6844, file: !6623, line: 229, type: !2599)
!6847 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6844, file: !6623, line: 229, type: !119)
!6848 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6844, file: !6623, line: 230, type: !6696)
!6849 = !DILocalVariable(name: "reason", scope: !6844, file: !6623, line: 232, type: !118)
!6850 = !DILocalVariable(name: "mmfar", scope: !6844, file: !6623, line: 233, type: !118)
!6851 = !DILocalVariable(name: "temp", scope: !6852, file: !6623, line: 254, type: !118)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6623, line: 244, column: 48)
!6853 = distinct !DILexicalBlock(scope: !6844, file: !6623, line: 244, column: 6)
!6854 = !DILocalVariable(name: "min_stack_ptr", scope: !6855, file: !6623, line: 309, type: !118)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6623, line: 308, column: 43)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !6623, line: 308, column: 7)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !6623, line: 289, column: 40)
!6858 = distinct !DILexicalBlock(scope: !6844, file: !6623, line: 288, column: 6)
!6859 = !DILocation(line: 0, scope: !6844)
!6860 = !DILocation(line: 235, column: 2, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !6623, line: 235, column: 2)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !6623, line: 235, column: 2)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !6623, line: 235, column: 2)
!6864 = distinct !DILexicalBlock(scope: !6844, file: !6623, line: 235, column: 2)
!6865 = !DILocation(line: 237, column: 12, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6844, file: !6623, line: 237, column: 6)
!6867 = !DILocation(line: 237, column: 17, scope: !6866)
!6868 = !DILocation(line: 237, column: 41, scope: !6866)
!6869 = !DILocation(line: 237, column: 6, scope: !6844)
!6870 = !DILocation(line: 238, column: 3, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6623, line: 238, column: 3)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6623, line: 238, column: 3)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !6623, line: 238, column: 3)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !6623, line: 238, column: 3)
!6875 = distinct !DILexicalBlock(scope: !6866, file: !6623, line: 237, column: 47)
!6876 = !DILocation(line: 240, column: 2, scope: !6875)
!6877 = !DILocation(line: 241, column: 12, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6844, file: !6623, line: 241, column: 6)
!6879 = !DILocation(line: 241, column: 17, scope: !6878)
!6880 = !DILocation(line: 241, column: 43, scope: !6878)
!6881 = !DILocation(line: 241, column: 6, scope: !6844)
!6882 = !DILocation(line: 242, column: 3, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !6623, line: 242, column: 3)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !6623, line: 242, column: 3)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6623, line: 242, column: 3)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6623, line: 242, column: 3)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !6623, line: 241, column: 49)
!6888 = !DILocation(line: 243, column: 2, scope: !6887)
!6889 = !DILocation(line: 244, column: 12, scope: !6853)
!6890 = !DILocation(line: 244, column: 17, scope: !6853)
!6891 = !DILocation(line: 244, column: 42, scope: !6853)
!6892 = !DILocation(line: 244, column: 6, scope: !6844)
!6893 = !DILocation(line: 245, column: 3, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !6623, line: 245, column: 3)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !6623, line: 245, column: 3)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !6623, line: 245, column: 3)
!6897 = distinct !DILexicalBlock(scope: !6852, file: !6623, line: 245, column: 3)
!6898 = !DILocation(line: 254, column: 24, scope: !6852)
!6899 = !DILocation(line: 0, scope: !6852)
!6900 = !DILocation(line: 256, column: 13, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6852, file: !6623, line: 256, column: 7)
!6902 = !DILocation(line: 256, column: 18, scope: !6901)
!6903 = !DILocation(line: 256, column: 44, scope: !6901)
!6904 = !DILocation(line: 256, column: 7, scope: !6852)
!6905 = !DILocation(line: 258, column: 4, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6623, line: 258, column: 4)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6623, line: 258, column: 4)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !6623, line: 258, column: 4)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6623, line: 258, column: 4)
!6910 = distinct !DILexicalBlock(scope: !6901, file: !6623, line: 256, column: 50)
!6911 = !DILocation(line: 259, column: 24, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6910, file: !6623, line: 259, column: 8)
!6913 = !DILocation(line: 259, column: 8, scope: !6910)
!6914 = !DILocation(line: 261, column: 15, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6912, file: !6623, line: 259, column: 30)
!6916 = !DILocation(line: 262, column: 4, scope: !6915)
!6917 = !DILocation(line: 265, column: 12, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6844, file: !6623, line: 265, column: 6)
!6919 = !DILocation(line: 265, column: 17, scope: !6918)
!6920 = !DILocation(line: 265, column: 42, scope: !6918)
!6921 = !DILocation(line: 265, column: 6, scope: !6844)
!6922 = !DILocation(line: 266, column: 3, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !6623, line: 266, column: 3)
!6924 = distinct !DILexicalBlock(scope: !6925, file: !6623, line: 266, column: 3)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !6623, line: 266, column: 3)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6623, line: 266, column: 3)
!6927 = distinct !DILexicalBlock(scope: !6918, file: !6623, line: 265, column: 48)
!6928 = !DILocation(line: 267, column: 2, scope: !6927)
!6929 = !DILocation(line: 269, column: 12, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6844, file: !6623, line: 269, column: 6)
!6931 = !DILocation(line: 269, column: 17, scope: !6930)
!6932 = !DILocation(line: 269, column: 41, scope: !6930)
!6933 = !DILocation(line: 269, column: 6, scope: !6844)
!6934 = !DILocation(line: 270, column: 3, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6623, line: 270, column: 3)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6623, line: 270, column: 3)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6623, line: 270, column: 3)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6623, line: 270, column: 3)
!6939 = distinct !DILexicalBlock(scope: !6930, file: !6623, line: 269, column: 47)
!6940 = !DILocation(line: 272, column: 2, scope: !6939)
!6941 = !DILocation(line: 288, column: 12, scope: !6858)
!6942 = !DILocation(line: 288, column: 17, scope: !6858)
!6943 = !DILocation(line: 288, column: 41, scope: !6858)
!6944 = !DILocation(line: 289, column: 9, scope: !6858)
!6945 = !DILocation(line: 289, column: 14, scope: !6858)
!6946 = !DILocation(line: 288, column: 6, scope: !6844)
!6947 = !DILocation(line: 308, column: 12, scope: !6856)
!6948 = !DILocation(line: 308, column: 17, scope: !6856)
!6949 = !DILocation(line: 308, column: 7, scope: !6857)
!6950 = !DILocation(line: 310, column: 6, scope: !6855)
!6951 = !DILocation(line: 309, column: 29, scope: !6855)
!6952 = !DILocation(line: 0, scope: !6855)
!6953 = !DILocation(line: 312, column: 8, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6855, file: !6623, line: 312, column: 8)
!6955 = !DILocation(line: 312, column: 8, scope: !6855)
!6956 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6957, file: !6315, line: 1099, type: !118)
!6957 = distinct !DISubprogram(name: "__set_PSP", scope: !6315, file: !6315, line: 1099, type: !6410, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6958)
!6958 = !{!6956}
!6959 = !DILocation(line: 0, scope: !6957, inlinedAt: !6960)
!6960 = distinct !DILocation(line: 338, column: 5, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6954, file: !6623, line: 312, column: 23)
!6962 = !DILocation(line: 1101, column: 3, scope: !6957, inlinedAt: !6960)
!6963 = !{i64 3531456}
!6964 = !DILocation(line: 341, column: 4, scope: !6961)
!6965 = !DILocation(line: 342, column: 5, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6623, line: 342, column: 5)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6623, line: 342, column: 5)
!6968 = distinct !DILexicalBlock(scope: !6954, file: !6623, line: 341, column: 11)
!6969 = !DILocation(line: 342, column: 5, scope: !6967)
!6970 = !DILocation(line: 342, column: 5, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !6623, line: 342, column: 5)
!6972 = !DILocation(line: 360, column: 12, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6844, file: !6623, line: 360, column: 6)
!6974 = !DILocation(line: 360, column: 17, scope: !6973)
!6975 = !DILocation(line: 360, column: 41, scope: !6973)
!6976 = !DILocation(line: 360, column: 6, scope: !6844)
!6977 = !DILocation(line: 361, column: 14, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6973, file: !6623, line: 360, column: 47)
!6979 = !DILocation(line: 362, column: 2, scope: !6978)
!6980 = !DILocation(line: 366, column: 12, scope: !6844)
!6981 = !DILocation(line: 369, column: 15, scope: !6844)
!6982 = !DILocation(line: 371, column: 2, scope: !6844)
!6983 = distinct !DISubprogram(name: "bus_fault", scope: !6623, file: !6623, line: 383, type: !6984, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6986)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!119, !2599, !119, !6696}
!6986 = !{!6987, !6988, !6989, !6990, !6991}
!6987 = !DILocalVariable(name: "esf", arg: 1, scope: !6983, file: !6623, line: 383, type: !2599)
!6988 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6983, file: !6623, line: 383, type: !119)
!6989 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6983, file: !6623, line: 383, type: !6696)
!6990 = !DILocalVariable(name: "reason", scope: !6983, file: !6623, line: 385, type: !118)
!6991 = !DILocalVariable(name: "bfar", scope: !6992, file: !6623, line: 405, type: !118)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !6623, line: 395, column: 42)
!6993 = distinct !DILexicalBlock(scope: !6983, file: !6623, line: 395, column: 6)
!6994 = !DILocation(line: 0, scope: !6983)
!6995 = !DILocation(line: 387, column: 2, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6623, line: 387, column: 2)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6623, line: 387, column: 2)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6623, line: 387, column: 2)
!6999 = distinct !DILexicalBlock(scope: !6983, file: !6623, line: 387, column: 2)
!7000 = !DILocation(line: 389, column: 11, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6983, file: !6623, line: 389, column: 6)
!7002 = !DILocation(line: 389, column: 16, scope: !7001)
!7003 = !DILocation(line: 389, column: 6, scope: !6983)
!7004 = !DILocation(line: 390, column: 3, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6623, line: 390, column: 3)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6623, line: 390, column: 3)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !6623, line: 390, column: 3)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !6623, line: 390, column: 3)
!7009 = distinct !DILexicalBlock(scope: !7001, file: !6623, line: 389, column: 39)
!7010 = !DILocation(line: 391, column: 2, scope: !7009)
!7011 = !DILocation(line: 392, column: 11, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6983, file: !6623, line: 392, column: 6)
!7013 = !DILocation(line: 392, column: 16, scope: !7012)
!7014 = !DILocation(line: 392, column: 6, scope: !6983)
!7015 = !DILocation(line: 393, column: 3, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6623, line: 393, column: 3)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6623, line: 393, column: 3)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !6623, line: 393, column: 3)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !6623, line: 393, column: 3)
!7020 = distinct !DILexicalBlock(scope: !7012, file: !6623, line: 392, column: 41)
!7021 = !DILocation(line: 394, column: 2, scope: !7020)
!7022 = !DILocation(line: 395, column: 11, scope: !6993)
!7023 = !DILocation(line: 395, column: 16, scope: !6993)
!7024 = !DILocation(line: 395, column: 6, scope: !6983)
!7025 = !DILocation(line: 396, column: 3, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6623, line: 396, column: 3)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6623, line: 396, column: 3)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6623, line: 396, column: 3)
!7029 = distinct !DILexicalBlock(scope: !6992, file: !6623, line: 396, column: 3)
!7030 = !DILocation(line: 405, column: 3, scope: !6992)
!7031 = !DILocation(line: 0, scope: !6992)
!7032 = !DILocation(line: 407, column: 13, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !6992, file: !6623, line: 407, column: 7)
!7034 = !DILocation(line: 407, column: 18, scope: !7033)
!7035 = !DILocation(line: 407, column: 44, scope: !7033)
!7036 = !DILocation(line: 407, column: 7, scope: !6992)
!7037 = !DILocation(line: 408, column: 4, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6623, line: 408, column: 4)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !6623, line: 408, column: 4)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6623, line: 408, column: 4)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !6623, line: 408, column: 4)
!7042 = distinct !DILexicalBlock(scope: !7033, file: !6623, line: 407, column: 50)
!7043 = !DILocation(line: 409, column: 24, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7042, file: !6623, line: 409, column: 8)
!7045 = !DILocation(line: 409, column: 8, scope: !7042)
!7046 = !DILocation(line: 411, column: 15, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7044, file: !6623, line: 409, column: 30)
!7048 = !DILocation(line: 412, column: 4, scope: !7047)
!7049 = !DILocation(line: 415, column: 11, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !6983, file: !6623, line: 415, column: 6)
!7051 = !DILocation(line: 415, column: 16, scope: !7050)
!7052 = !DILocation(line: 415, column: 6, scope: !6983)
!7053 = !DILocation(line: 416, column: 3, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !6623, line: 416, column: 3)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !6623, line: 416, column: 3)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !6623, line: 416, column: 3)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !6623, line: 416, column: 3)
!7058 = distinct !DILexicalBlock(scope: !7050, file: !6623, line: 415, column: 44)
!7059 = !DILocation(line: 417, column: 2, scope: !7058)
!7060 = !DILocation(line: 418, column: 12, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !6983, file: !6623, line: 418, column: 6)
!7062 = !DILocation(line: 418, column: 17, scope: !7061)
!7063 = !DILocation(line: 418, column: 41, scope: !7061)
!7064 = !DILocation(line: 418, column: 6, scope: !6983)
!7065 = !DILocation(line: 423, column: 18, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7061, file: !6623, line: 423, column: 13)
!7067 = !DILocation(line: 423, column: 23, scope: !7066)
!7068 = !DILocation(line: 423, column: 13, scope: !7061)
!7069 = !DILocation(line: 0, scope: !7061)
!7070 = !DILocation(line: 524, column: 12, scope: !6983)
!7071 = !DILocation(line: 526, column: 15, scope: !6983)
!7072 = !DILocation(line: 528, column: 2, scope: !6983)
!7073 = distinct !DISubprogram(name: "usage_fault", scope: !6623, file: !6623, line: 539, type: !7074, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !7078)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{!118, !7076}
!7076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7077, size: 32)
!7077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2600)
!7078 = !{!7079, !7080}
!7079 = !DILocalVariable(name: "esf", arg: 1, scope: !7073, file: !6623, line: 539, type: !7076)
!7080 = !DILocalVariable(name: "reason", scope: !7073, file: !6623, line: 541, type: !118)
!7081 = !DILocation(line: 0, scope: !7073)
!7082 = !DILocation(line: 543, column: 2, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6623, line: 543, column: 2)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !6623, line: 543, column: 2)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !6623, line: 543, column: 2)
!7086 = distinct !DILexicalBlock(scope: !7073, file: !6623, line: 543, column: 2)
!7087 = !DILocation(line: 546, column: 12, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7073, file: !6623, line: 546, column: 6)
!7089 = !DILocation(line: 546, column: 17, scope: !7088)
!7090 = !DILocation(line: 546, column: 43, scope: !7088)
!7091 = !DILocation(line: 546, column: 6, scope: !7073)
!7092 = !DILocation(line: 547, column: 3, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6623, line: 547, column: 3)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6623, line: 547, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6623, line: 547, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6623, line: 547, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7088, file: !6623, line: 546, column: 49)
!7098 = !DILocation(line: 548, column: 2, scope: !7097)
!7099 = !DILocation(line: 549, column: 12, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7073, file: !6623, line: 549, column: 6)
!7101 = !DILocation(line: 549, column: 17, scope: !7100)
!7102 = !DILocation(line: 549, column: 43, scope: !7100)
!7103 = !DILocation(line: 549, column: 6, scope: !7073)
!7104 = !DILocation(line: 550, column: 3, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !6623, line: 550, column: 3)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !6623, line: 550, column: 3)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !6623, line: 550, column: 3)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !6623, line: 550, column: 3)
!7109 = distinct !DILexicalBlock(scope: !7100, file: !6623, line: 549, column: 49)
!7110 = !DILocation(line: 551, column: 2, scope: !7109)
!7111 = !DILocation(line: 567, column: 12, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7073, file: !6623, line: 567, column: 6)
!7113 = !DILocation(line: 567, column: 17, scope: !7112)
!7114 = !DILocation(line: 567, column: 38, scope: !7112)
!7115 = !DILocation(line: 567, column: 6, scope: !7073)
!7116 = !DILocation(line: 568, column: 3, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !6623, line: 568, column: 3)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !6623, line: 568, column: 3)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !6623, line: 568, column: 3)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !6623, line: 568, column: 3)
!7121 = distinct !DILexicalBlock(scope: !7112, file: !6623, line: 567, column: 44)
!7122 = !DILocation(line: 569, column: 2, scope: !7121)
!7123 = !DILocation(line: 570, column: 12, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7073, file: !6623, line: 570, column: 6)
!7125 = !DILocation(line: 570, column: 17, scope: !7124)
!7126 = !DILocation(line: 570, column: 39, scope: !7124)
!7127 = !DILocation(line: 570, column: 6, scope: !7073)
!7128 = !DILocation(line: 571, column: 3, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !6623, line: 571, column: 3)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !6623, line: 571, column: 3)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !6623, line: 571, column: 3)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !6623, line: 571, column: 3)
!7133 = distinct !DILexicalBlock(scope: !7124, file: !6623, line: 570, column: 45)
!7134 = !DILocation(line: 572, column: 2, scope: !7133)
!7135 = !DILocation(line: 573, column: 12, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7073, file: !6623, line: 573, column: 6)
!7137 = !DILocation(line: 573, column: 17, scope: !7136)
!7138 = !DILocation(line: 573, column: 42, scope: !7136)
!7139 = !DILocation(line: 573, column: 6, scope: !7073)
!7140 = !DILocation(line: 574, column: 3, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !6623, line: 574, column: 3)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !6623, line: 574, column: 3)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !6623, line: 574, column: 3)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !6623, line: 574, column: 3)
!7145 = distinct !DILexicalBlock(scope: !7136, file: !6623, line: 573, column: 48)
!7146 = !DILocation(line: 575, column: 2, scope: !7145)
!7147 = !DILocation(line: 576, column: 12, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7073, file: !6623, line: 576, column: 6)
!7149 = !DILocation(line: 576, column: 17, scope: !7148)
!7150 = !DILocation(line: 576, column: 44, scope: !7148)
!7151 = !DILocation(line: 576, column: 6, scope: !7073)
!7152 = !DILocation(line: 577, column: 3, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !6623, line: 577, column: 3)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !6623, line: 577, column: 3)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !6623, line: 577, column: 3)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !6623, line: 577, column: 3)
!7157 = distinct !DILexicalBlock(scope: !7148, file: !6623, line: 576, column: 50)
!7158 = !DILocation(line: 578, column: 2, scope: !7157)
!7159 = !DILocation(line: 581, column: 12, scope: !7073)
!7160 = !DILocation(line: 583, column: 2, scope: !7073)
!7161 = distinct !DISubprogram(name: "debug_monitor", scope: !6623, file: !6623, line: 632, type: !7162, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !7164)
!7162 = !DISubroutineType(types: !7163)
!7163 = !{null, !2599, !6696}
!7164 = !{!7165, !7166}
!7165 = !DILocalVariable(name: "esf", arg: 1, scope: !7161, file: !6623, line: 632, type: !2599)
!7166 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7161, file: !6623, line: 632, type: !6696)
!7167 = !DILocation(line: 0, scope: !7161)
!7168 = !DILocation(line: 634, column: 15, scope: !7161)
!7169 = !DILocation(line: 636, column: 2, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !6623, line: 636, column: 2)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !6623, line: 636, column: 2)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !6623, line: 636, column: 2)
!7173 = distinct !DILexicalBlock(scope: !7161, file: !6623, line: 636, column: 2)
!7174 = !DILocation(line: 652, column: 1, scope: !7161)
!7175 = distinct !DISubprogram(name: "reserved_exception", scope: !6623, file: !6623, line: 776, type: !7176, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !7178)
!7176 = !DISubroutineType(types: !7177)
!7177 = !{null, !7076, !119}
!7178 = !{!7179, !7180}
!7179 = !DILocalVariable(name: "esf", arg: 1, scope: !7175, file: !6623, line: 776, type: !7076)
!7180 = !DILocalVariable(name: "fault", arg: 2, scope: !7175, file: !6623, line: 776, type: !119)
!7181 = !DILocation(line: 0, scope: !7175)
!7182 = !DILocation(line: 780, column: 2, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !6623, line: 780, column: 2)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !6623, line: 780, column: 2)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !6623, line: 780, column: 2)
!7186 = distinct !DILexicalBlock(scope: !7175, file: !6623, line: 780, column: 2)
!7187 = !DILocation(line: 783, column: 1, scope: !7175)
!7188 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6623, file: !6623, line: 658, type: !7189, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !7191)
!7189 = !DISubroutineType(types: !7190)
!7190 = !{!345, !2599}
!7191 = !{!7192, !7193, !7194}
!7192 = !DILocalVariable(name: "esf", arg: 1, scope: !7188, file: !6623, line: 658, type: !2599)
!7193 = !DILocalVariable(name: "ret_addr", scope: !7188, file: !6623, line: 660, type: !2642)
!7194 = !DILocalVariable(name: "fault_insn", scope: !7188, file: !6623, line: 686, type: !199)
!7195 = !DILocation(line: 0, scope: !7188)
!7196 = !DILocation(line: 660, column: 46, scope: !7188)
!7197 = !DILocation(line: 660, column: 23, scope: !7188)
!7198 = !DILocation(line: 682, column: 11, scope: !7188)
!7199 = !DILocation(line: 271, column: 3, scope: !7200, inlinedAt: !7201)
!7200 = distinct !DISubprogram(name: "__DSB", scope: !6315, file: !6315, line: 269, type: !2953, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !2022)
!7201 = distinct !DILocation(line: 683, column: 2, scope: !7188)
!7202 = !{i64 3507591}
!7203 = !DILocation(line: 260, column: 3, scope: !7204, inlinedAt: !7205)
!7204 = distinct !DISubprogram(name: "__ISB", scope: !6315, file: !6315, line: 258, type: !2953, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !2022)
!7205 = distinct !DILocation(line: 684, column: 2, scope: !7188)
!7206 = !{i64 3507308}
!7207 = !DILocation(line: 686, column: 35, scope: !7188)
!7208 = !DILocation(line: 686, column: 24, scope: !7188)
!7209 = !DILocation(line: 688, column: 11, scope: !7188)
!7210 = !DILocation(line: 271, column: 3, scope: !7200, inlinedAt: !7211)
!7211 = distinct !DILocation(line: 689, column: 2, scope: !7188)
!7212 = !DILocation(line: 260, column: 3, scope: !7204, inlinedAt: !7213)
!7213 = distinct !DILocation(line: 690, column: 2, scope: !7188)
!7214 = !DILocation(line: 693, column: 45, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7188, file: !6623, line: 693, column: 6)
!7216 = !DILocation(line: 699, column: 1, scope: !7188)
!7217 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6623, file: !6623, line: 1107, type: !2953, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !2022)
!7218 = !DILocation(line: 1111, column: 11, scope: !7217)
!7219 = !DILocation(line: 1136, column: 1, scope: !7217)
!7220 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7221, file: !7221, line: 26, type: !2953, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !7222)
!7221 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7222 = !{!7223}
!7223 = !DILocalVariable(name: "irq", scope: !7220, file: !7221, line: 28, type: !119)
!7224 = !DILocation(line: 0, scope: !7220)
!7225 = !DILocation(line: 30, column: 2, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7220, file: !7221, line: 30, column: 2)
!7227 = !DILocation(line: 31, column: 3, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !7221, line: 30, column: 39)
!7229 = distinct !DILexicalBlock(scope: !7226, file: !7221, line: 30, column: 2)
!7230 = !DILocation(line: 30, column: 35, scope: !7229)
!7231 = !DILocation(line: 30, column: 13, scope: !7229)
!7232 = distinct !{!7232, !7225, !7233}
!7233 = !DILocation(line: 32, column: 2, scope: !7226)
!7234 = !DILocation(line: 33, column: 1, scope: !7220)
!7235 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6355, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !7236)
!7236 = !{!7237, !7238}
!7237 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7235, file: !533, line: 1814, type: !789)
!7238 = !DILocalVariable(name: "priority", arg: 2, scope: !7235, file: !533, line: 1814, type: !118)
!7239 = !DILocation(line: 0, scope: !7235)
!7240 = !DILocation(line: 1816, column: 7, scope: !7235)
!7241 = !DILocation(line: 0, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7235, file: !533, line: 1816, column: 7)
!7243 = !DILocation(line: 1824, column: 1, scope: !7235)
!7244 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7245, file: !7245, line: 27, type: !7246, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7352)
!7245 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7246 = !DISubroutineType(types: !7247)
!7247 = !{null, !7248}
!7248 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !7249)
!7249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7250, size: 32)
!7250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !7251)
!7251 = !{!7252, !7310, !7322, !7323, !7324, !7325, !7326, !7332, !7347}
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7250, file: !143, line: 247, baseType: !7253, size: 384)
!7253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !7254)
!7254 = !{!7255, !7279, !7286, !7287, !7288, !7297, !7298, !7299}
!7255 = !DIDerivedType(tag: DW_TAG_member, scope: !7253, file: !143, line: 60, baseType: !7256, size: 64)
!7256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7253, file: !143, line: 60, size: 64, elements: !7257)
!7257 = !{!7258, !7273}
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7256, file: !143, line: 61, baseType: !7259, size: 64)
!7259 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !7260)
!7260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !7261)
!7261 = !{!7262, !7268}
!7262 = !DIDerivedType(tag: DW_TAG_member, scope: !7260, file: !153, line: 38, baseType: !7263, size: 32)
!7263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7260, file: !153, line: 38, size: 32, elements: !7264)
!7264 = !{!7265, !7267}
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7263, file: !153, line: 39, baseType: !7266, size: 32)
!7266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7260, size: 32)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7263, file: !153, line: 40, baseType: !7266, size: 32)
!7268 = !DIDerivedType(tag: DW_TAG_member, scope: !7260, file: !153, line: 42, baseType: !7269, size: 32, offset: 32)
!7269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7260, file: !153, line: 42, size: 32, elements: !7270)
!7270 = !{!7271, !7272}
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7269, file: !153, line: 43, baseType: !7266, size: 32)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7269, file: !153, line: 44, baseType: !7266, size: 32)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7256, file: !143, line: 62, baseType: !7274, size: 64)
!7274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !7275)
!7275 = !{!7276}
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7274, file: !169, line: 50, baseType: !7277, size: 64)
!7277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7278, size: 64, elements: !174)
!7278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7274, size: 32)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7253, file: !143, line: 68, baseType: !7280, size: 32, offset: 64)
!7280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7281, size: 32)
!7281 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !7282)
!7282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !7283)
!7283 = !{!7284}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7282, file: !179, line: 232, baseType: !7285, size: 64)
!7285 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !7260)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7253, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7253, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!7288 = !DIDerivedType(tag: DW_TAG_member, scope: !7253, file: !143, line: 90, baseType: !7289, size: 16, offset: 112)
!7289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7253, file: !143, line: 90, size: 16, elements: !7290)
!7290 = !{!7291, !7296}
!7291 = !DIDerivedType(tag: DW_TAG_member, scope: !7289, file: !143, line: 91, baseType: !7292, size: 16)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7289, file: !143, line: 91, size: 16, elements: !7293)
!7293 = !{!7294, !7295}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7292, file: !143, line: 96, baseType: !195, size: 8)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7292, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7289, file: !143, line: 100, baseType: !199, size: 16)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7253, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7253, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7253, file: !143, line: 131, baseType: !7300, size: 192, offset: 192)
!7300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !7301)
!7301 = !{!7302, !7303, !7309}
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7300, file: !179, line: 245, baseType: !7259, size: 64)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7300, file: !179, line: 246, baseType: !7304, size: 32, offset: 64)
!7304 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !7305)
!7305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7306, size: 32)
!7306 = !DISubroutineType(types: !7307)
!7307 = !{null, !7308}
!7308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7300, size: 32)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7300, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7250, file: !143, line: 250, baseType: !7311, size: 288, offset: 384)
!7311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !7312)
!7312 = !{!7313, !7314, !7315, !7316, !7317, !7318, !7319, !7320, !7321}
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7311, file: !216, line: 26, baseType: !118, size: 32)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7311, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7311, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7311, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7311, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7311, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7311, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7311, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7311, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7250, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7250, file: !143, line: 256, baseType: !7281, size: 64, offset: 704)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7250, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7250, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7250, file: !143, line: 300, baseType: !7327, size: 96, offset: 1056)
!7327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !7328)
!7328 = !{!7329, !7330, !7331}
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7327, file: !143, line: 153, baseType: !22, size: 32)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7327, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7327, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7250, file: !143, line: 325, baseType: !7333, size: 32, offset: 1152)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 32)
!7334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !7335)
!7335 = !{!7336, !7342, !7343}
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7334, file: !245, line: 5074, baseType: !7337, size: 96)
!7337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !7338)
!7338 = !{!7339, !7340, !7341}
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7337, file: !249, line: 57, baseType: !252, size: 32)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7337, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7337, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7334, file: !245, line: 5075, baseType: !7281, size: 64, offset: 96)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7334, file: !245, line: 5076, baseType: !7344, size: 32, offset: 160)
!7344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !7345)
!7345 = !{!7346}
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7344, file: !259, line: 52, baseType: !22, size: 32)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7250, file: !143, line: 343, baseType: !7348, size: 64, offset: 1184)
!7348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !7349)
!7349 = !{!7350, !7351}
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7348, file: !216, line: 63, baseType: !118, size: 32)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7348, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!7352 = !{!7353}
!7353 = !DILocalVariable(name: "thread", arg: 1, scope: !7244, file: !7245, line: 27, type: !7248)
!7354 = !DILocation(line: 0, scope: !7244)
!7355 = !DILocation(line: 29, column: 6, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7244, file: !7245, line: 29, column: 6)
!7357 = !DILocation(line: 29, column: 15, scope: !7356)
!7358 = !DILocation(line: 29, column: 6, scope: !7244)
!7359 = !DILocation(line: 1031, column: 3, scope: !7360, inlinedAt: !7363)
!7360 = distinct !DISubprogram(name: "__get_IPSR", scope: !6315, file: !6315, line: 1027, type: !3191, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7361)
!7361 = !{!7362}
!7362 = !DILocalVariable(name: "result", scope: !7360, file: !6315, line: 1029, type: !118)
!7363 = distinct !DILocation(line: 48, column: 10, scope: !7364, inlinedAt: !7368)
!7364 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7365, file: !7365, line: 46, type: !7366, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !2022)
!7365 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7366 = !DISubroutineType(types: !7367)
!7367 = !{!345}
!7368 = distinct !DILocation(line: 30, column: 7, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7370, file: !7245, line: 30, column: 7)
!7370 = distinct !DILexicalBlock(scope: !7356, file: !7245, line: 29, column: 26)
!7371 = !{i64 3496439}
!7372 = !DILocation(line: 0, scope: !7360, inlinedAt: !7363)
!7373 = !DILocation(line: 48, column: 9, scope: !7364, inlinedAt: !7368)
!7374 = !DILocation(line: 30, column: 7, scope: !7370)
!7375 = !DILocation(line: 42, column: 14, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7369, file: !7245, line: 30, column: 25)
!7377 = !DILocation(line: 48, column: 15, scope: !7376)
!7378 = !DILocation(line: 49, column: 3, scope: !7376)
!7379 = !DILocation(line: 52, column: 2, scope: !7244)
!7380 = !DILocation(line: 53, column: 1, scope: !7244)
!7381 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !392, file: !392, line: 127, type: !2953, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !2022)
!7382 = !DILocation(line: 134, column: 2, scope: !7381)
!7383 = !DILocation(line: 156, column: 1, scope: !7381)
!7384 = !DILocation(line: 0, scope: !391)
!7385 = !DILocation(line: 289, column: 36, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !391, file: !392, line: 285, column: 2)
!7387 = !DILocation(line: 289, column: 42, scope: !7386)
!7388 = !DILocation(line: 300, column: 36, scope: !391)
!7389 = !DILocation(line: 301, column: 35, scope: !391)
!7390 = !DILocation(line: 302, column: 37, scope: !391)
!7391 = !DILocation(line: 311, column: 2, scope: !391)
!7392 = !DILocation(line: 316, column: 1, scope: !391)
!7393 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !561, file: !561, line: 180, type: !2953, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2022)
!7394 = !DILocation(line: 188, column: 12, scope: !7393)
!7395 = !DILocation(line: 271, column: 3, scope: !7396, inlinedAt: !7397)
!7396 = distinct !DISubprogram(name: "__DSB", scope: !6315, file: !6315, line: 269, type: !2953, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2022)
!7397 = distinct !DILocation(line: 192, column: 2, scope: !7393)
!7398 = !{i64 3668255}
!7399 = !DILocation(line: 260, column: 3, scope: !7400, inlinedAt: !7401)
!7400 = distinct !DISubprogram(name: "__ISB", scope: !6315, file: !6315, line: 258, type: !2953, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2022)
!7401 = distinct !DILocation(line: 193, column: 2, scope: !7393)
!7402 = !{i64 3667972}
!7403 = !DILocation(line: 194, column: 1, scope: !7393)
!7404 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !561, file: !561, line: 199, type: !2953, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2022)
!7405 = !DILocation(line: 282, column: 3, scope: !7406, inlinedAt: !7407)
!7406 = distinct !DISubprogram(name: "__DMB", scope: !6315, file: !6315, line: 280, type: !2953, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2022)
!7407 = distinct !DILocation(line: 202, column: 2, scope: !7404)
!7408 = !{i64 3668531}
!7409 = !DILocation(line: 205, column: 12, scope: !7404)
!7410 = !DILocation(line: 206, column: 1, scope: !7404)
!7411 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !561, file: !561, line: 275, type: !7412, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7425)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{null, !7414, !1806, !6590, !6590}
!7414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7415, size: 32)
!7415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7416)
!7416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !7417)
!7417 = !{!7418, !7419, !7420}
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7416, file: !505, line: 53, baseType: !22, size: 32)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7416, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7416, file: !505, line: 55, baseType: !7421, size: 32, offset: 64)
!7421 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !7422)
!7422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !7423)
!7423 = !{!7424}
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7422, file: !511, line: 150, baseType: !118, size: 32)
!7425 = !{!7426, !7427, !7428, !7429}
!7426 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7411, file: !561, line: 276, type: !7414)
!7427 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7411, file: !561, line: 276, type: !1806)
!7428 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7411, file: !561, line: 277, type: !6590)
!7429 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7411, file: !561, line: 277, type: !6590)
!7430 = !DILocation(line: 0, scope: !7411)
!7431 = !DILocation(line: 279, column: 6, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7411, file: !561, line: 279, column: 6)
!7433 = !DILocation(line: 280, column: 57, scope: !7432)
!7434 = !DILocation(line: 279, column: 6, scope: !7411)
!7435 = !DILocation(line: 282, column: 3, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !561, line: 282, column: 3)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !561, line: 282, column: 3)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !561, line: 282, column: 3)
!7439 = distinct !DILexicalBlock(scope: !7432, file: !561, line: 280, column: 69)
!7440 = !DILocation(line: 285, column: 1, scope: !7411)
!7441 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7442, file: !7442, line: 220, type: !7443, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7445)
!7442 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7443 = !DISubroutineType(types: !7444)
!7444 = !{!119, !7414, !1806, !6590, !6590}
!7445 = !{!7446, !7447, !7448, !7449, !7450}
!7446 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7441, file: !7442, line: 221, type: !7414)
!7447 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7441, file: !7442, line: 221, type: !1806)
!7448 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7441, file: !7442, line: 222, type: !6590)
!7449 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7441, file: !7442, line: 223, type: !6590)
!7450 = !DILocalVariable(name: "mpu_reg_index", scope: !7441, file: !7442, line: 225, type: !119)
!7451 = !DILocation(line: 0, scope: !7441)
!7452 = !DILocation(line: 225, column: 22, scope: !7441)
!7453 = !DILocation(line: 233, column: 18, scope: !7441)
!7454 = !DILocation(line: 236, column: 23, scope: !7441)
!7455 = !DILocation(line: 236, column: 21, scope: !7441)
!7456 = !DILocation(line: 238, column: 2, scope: !7441)
!7457 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !561, file: !561, line: 105, type: !7458, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7460)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!119, !7414, !185, !185, !345}
!7460 = !{!7461, !7462, !7463, !7464, !7465, !7466}
!7461 = !DILocalVariable(name: "regions", arg: 1, scope: !7457, file: !561, line: 106, type: !7414)
!7462 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7457, file: !561, line: 106, type: !185)
!7463 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7457, file: !561, line: 106, type: !185)
!7464 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7457, file: !561, line: 107, type: !345)
!7465 = !DILocalVariable(name: "i", scope: !7457, file: !561, line: 109, type: !119)
!7466 = !DILocalVariable(name: "reg_index", scope: !7457, file: !561, line: 110, type: !119)
!7467 = !DILocation(line: 0, scope: !7457)
!7468 = !DILocation(line: 110, column: 18, scope: !7457)
!7469 = !DILocation(line: 112, column: 16, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !561, line: 112, column: 2)
!7471 = distinct !DILexicalBlock(scope: !7457, file: !561, line: 112, column: 2)
!7472 = !DILocation(line: 112, column: 2, scope: !7471)
!7473 = !DILocation(line: 113, column: 7, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !561, line: 113, column: 7)
!7475 = distinct !DILexicalBlock(scope: !7470, file: !561, line: 112, column: 36)
!7476 = !DILocation(line: 113, column: 18, scope: !7474)
!7477 = !DILocation(line: 113, column: 23, scope: !7474)
!7478 = !DILocation(line: 113, column: 7, scope: !7475)
!7479 = !DILocation(line: 118, column: 23, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7475, file: !561, line: 118, column: 7)
!7481 = !DILocation(line: 119, column: 7, scope: !7480)
!7482 = !DILocation(line: 118, column: 7, scope: !7475)
!7483 = !DILocation(line: 120, column: 4, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !561, line: 120, column: 4)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !561, line: 120, column: 4)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !561, line: 120, column: 4)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !561, line: 120, column: 4)
!7488 = distinct !DILexicalBlock(scope: !7480, file: !561, line: 119, column: 45)
!7489 = !DILocation(line: 121, column: 4, scope: !7488)
!7490 = !DILocation(line: 124, column: 36, scope: !7475)
!7491 = !DILocation(line: 124, column: 15, scope: !7475)
!7492 = !DILocation(line: 126, column: 17, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7475, file: !561, line: 126, column: 7)
!7494 = !DILocation(line: 126, column: 7, scope: !7475)
!7495 = !DILocation(line: 131, column: 12, scope: !7475)
!7496 = !DILocation(line: 132, column: 2, scope: !7475)
!7497 = !DILocation(line: 112, column: 32, scope: !7470)
!7498 = distinct !{!7498, !7472, !7499}
!7499 = !DILocation(line: 132, column: 2, scope: !7471)
!7500 = !DILocation(line: 135, column: 1, scope: !7457)
!7501 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7442, file: !7442, line: 63, type: !7502, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7504)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{!119, !7414}
!7504 = !{!7505, !7506}
!7505 = !DILocalVariable(name: "part", arg: 1, scope: !7501, file: !7442, line: 63, type: !7414)
!7506 = !DILocalVariable(name: "partition_is_valid", scope: !7501, file: !7442, line: 70, type: !119)
!7507 = !DILocation(line: 0, scope: !7501)
!7508 = !DILocation(line: 71, column: 11, scope: !7501)
!7509 = !DILocation(line: 71, column: 37, scope: !7501)
!7510 = !{i32 0, i32 33}
!7511 = !DILocation(line: 72, column: 3, scope: !7501)
!7512 = !DILocation(line: 71, column: 30, scope: !7501)
!7513 = !DILocation(line: 75, column: 11, scope: !7501)
!7514 = !DILocation(line: 75, column: 17, scope: !7501)
!7515 = !DILocation(line: 75, column: 38, scope: !7501)
!7516 = !DILocation(line: 77, column: 2, scope: !7501)
!7517 = distinct !DISubprogram(name: "mpu_configure_region", scope: !561, file: !561, line: 79, type: !7518, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7520)
!7518 = !DISubroutineType(types: !7519)
!7519 = !{!119, !1806, !7414}
!7520 = !{!7521, !7522, !7523}
!7521 = !DILocalVariable(name: "index", arg: 1, scope: !7517, file: !561, line: 79, type: !1806)
!7522 = !DILocalVariable(name: "new_region", arg: 2, scope: !7517, file: !561, line: 80, type: !7414)
!7523 = !DILocalVariable(name: "region_conf", scope: !7517, file: !561, line: 82, type: !550)
!7524 = !DILocation(line: 0, scope: !7517)
!7525 = !DILocation(line: 82, column: 2, scope: !7517)
!7526 = !DILocation(line: 82, column: 24, scope: !7517)
!7527 = !DILocation(line: 87, column: 33, scope: !7517)
!7528 = !DILocation(line: 87, column: 14, scope: !7517)
!7529 = !DILocation(line: 87, column: 19, scope: !7517)
!7530 = !DILocation(line: 91, column: 55, scope: !7517)
!7531 = !DILocation(line: 92, column: 16, scope: !7517)
!7532 = !DILocation(line: 92, column: 53, scope: !7517)
!7533 = !DILocation(line: 91, column: 2, scope: !7517)
!7534 = !DILocation(line: 95, column: 9, scope: !7517)
!7535 = !DILocation(line: 97, column: 1, scope: !7517)
!7536 = !DILocation(line: 95, column: 2, scope: !7517)
!7537 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7442, file: !7442, line: 113, type: !7538, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7543)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{null, !7540, !7541, !118, !118}
!7540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!7541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7542, size: 32)
!7542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7421)
!7543 = !{!7544, !7545, !7546, !7547}
!7544 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7537, file: !7442, line: 114, type: !7540)
!7545 = !DILocalVariable(name: "attr", arg: 2, scope: !7537, file: !7442, line: 115, type: !7541)
!7546 = !DILocalVariable(name: "base", arg: 3, scope: !7537, file: !7442, line: 115, type: !118)
!7547 = !DILocalVariable(name: "size", arg: 4, scope: !7537, file: !7442, line: 115, type: !118)
!7548 = !DILocation(line: 0, scope: !7537)
!7549 = !DILocation(line: 127, column: 23, scope: !7537)
!7550 = !DILocation(line: 127, column: 35, scope: !7537)
!7551 = !DILocation(line: 127, column: 33, scope: !7537)
!7552 = !DILocation(line: 127, column: 10, scope: !7537)
!7553 = !DILocation(line: 127, column: 15, scope: !7537)
!7554 = !DILocation(line: 129, column: 1, scope: !7537)
!7555 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !561, file: !561, line: 57, type: !7556, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7558)
!7556 = !DISubroutineType(types: !7557)
!7557 = !{!119, !1806, !548}
!7558 = !{!7559, !7560}
!7559 = !DILocalVariable(name: "index", arg: 1, scope: !7555, file: !561, line: 57, type: !1806)
!7560 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7555, file: !561, line: 58, type: !548)
!7561 = !DILocation(line: 0, scope: !7555)
!7562 = !DILocation(line: 61, column: 6, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7555, file: !561, line: 61, column: 6)
!7564 = !DILocation(line: 61, column: 12, scope: !7563)
!7565 = !DILocation(line: 61, column: 6, scope: !7555)
!7566 = !DILocation(line: 64, column: 3, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !561, line: 64, column: 3)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !561, line: 64, column: 3)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !561, line: 64, column: 3)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !561, line: 64, column: 3)
!7571 = distinct !DILexicalBlock(scope: !7563, file: !561, line: 61, column: 40)
!7572 = !DILocation(line: 65, column: 3, scope: !7571)
!7573 = !DILocation(line: 71, column: 2, scope: !7555)
!7574 = !DILocation(line: 73, column: 2, scope: !7555)
!7575 = !DILocation(line: 74, column: 1, scope: !7555)
!7576 = distinct !DISubprogram(name: "region_init", scope: !7442, file: !7442, line: 29, type: !7577, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7579)
!7577 = !DISubroutineType(types: !7578)
!7578 = !{null, !6590, !548}
!7579 = !{!7580, !7581}
!7580 = !DILocalVariable(name: "index", arg: 1, scope: !7576, file: !7442, line: 29, type: !6590)
!7581 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7576, file: !7442, line: 30, type: !548)
!7582 = !DILocation(line: 0, scope: !7576)
!7583 = !DILocation(line: 33, column: 2, scope: !7576)
!7584 = !DILocation(line: 47, column: 28, scope: !7576)
!7585 = !DILocation(line: 47, column: 33, scope: !7576)
!7586 = !DILocation(line: 48, column: 26, scope: !7576)
!7587 = !DILocation(line: 47, column: 12, scope: !7576)
!7588 = !DILocation(line: 49, column: 32, scope: !7576)
!7589 = !DILocation(line: 49, column: 37, scope: !7576)
!7590 = !DILocation(line: 49, column: 12, scope: !7576)
!7591 = !DILocation(line: 53, column: 1, scope: !7576)
!7592 = distinct !DISubprogram(name: "set_region_number", scope: !7593, file: !7593, line: 32, type: !6410, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7594)
!7593 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7594 = !{!7595}
!7595 = !DILocalVariable(name: "index", arg: 1, scope: !7592, file: !7593, line: 32, type: !118)
!7596 = !DILocation(line: 0, scope: !7592)
!7597 = !DILocation(line: 34, column: 11, scope: !7592)
!7598 = !DILocation(line: 35, column: 1, scope: !7592)
!7599 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7442, file: !7442, line: 88, type: !7600, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7602)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{!118, !118}
!7602 = !{!7603}
!7603 = !DILocalVariable(name: "size", arg: 1, scope: !7599, file: !7442, line: 88, type: !118)
!7604 = !DILocation(line: 0, scope: !7599)
!7605 = !DILocation(line: 91, column: 11, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7599, file: !7442, line: 91, column: 6)
!7607 = !DILocation(line: 91, column: 6, scope: !7599)
!7608 = !DILocation(line: 100, column: 11, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7599, file: !7442, line: 100, column: 6)
!7610 = !DILocation(line: 100, column: 6, scope: !7599)
!7611 = !DILocation(line: 104, column: 35, scope: !7599)
!7612 = !DILocation(line: 104, column: 16, scope: !7599)
!7613 = !DILocation(line: 104, column: 50, scope: !7599)
!7614 = !DILocation(line: 104, column: 72, scope: !7599)
!7615 = !DILocation(line: 104, column: 2, scope: !7599)
!7616 = !DILocation(line: 106, column: 1, scope: !7599)
!7617 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !561, file: !561, line: 307, type: !7618, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7620)
!7618 = !DISubroutineType(types: !7619)
!7619 = !{null, !7414, !185}
!7620 = !{!7621, !7622}
!7621 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7617, file: !561, line: 308, type: !7414)
!7622 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7617, file: !561, line: 308, type: !185)
!7623 = !DILocation(line: 0, scope: !7617)
!7624 = !DILocation(line: 310, column: 6, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7617, file: !561, line: 310, column: 6)
!7626 = !DILocation(line: 311, column: 3, scope: !7625)
!7627 = !DILocation(line: 310, column: 6, scope: !7617)
!7628 = !DILocation(line: 313, column: 3, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !561, line: 313, column: 3)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !561, line: 313, column: 3)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !561, line: 313, column: 3)
!7632 = distinct !DILexicalBlock(scope: !7625, file: !561, line: 311, column: 15)
!7633 = !DILocation(line: 316, column: 1, scope: !7617)
!7634 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7442, file: !7442, line: 249, type: !7635, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7637)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{!119, !7414, !185}
!7637 = !{!7638, !7639, !7640, !7641}
!7638 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7634, file: !7442, line: 250, type: !7414)
!7639 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7634, file: !7442, line: 250, type: !185)
!7640 = !DILocalVariable(name: "mpu_reg_index", scope: !7634, file: !7442, line: 252, type: !119)
!7641 = !DILocalVariable(name: "i", scope: !7642, file: !7442, line: 264, type: !119)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !7442, line: 264, column: 3)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !7442, line: 261, column: 32)
!7644 = distinct !DILexicalBlock(scope: !7634, file: !7442, line: 261, column: 6)
!7645 = !DILocation(line: 0, scope: !7634)
!7646 = !DILocation(line: 252, column: 22, scope: !7634)
!7647 = !DILocation(line: 258, column: 18, scope: !7634)
!7648 = !DILocation(line: 261, column: 20, scope: !7644)
!7649 = !DILocation(line: 261, column: 6, scope: !7634)
!7650 = !DILocation(line: 0, scope: !7642)
!7651 = !DILocation(line: 265, column: 4, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7442, line: 264, column: 59)
!7653 = distinct !DILexicalBlock(scope: !7642, file: !7442, line: 264, column: 3)
!7654 = !DILocation(line: 264, column: 55, scope: !7653)
!7655 = !DILocation(line: 264, column: 33, scope: !7653)
!7656 = !DILocation(line: 264, column: 3, scope: !7642)
!7657 = distinct !{!7657, !7656, !7658}
!7658 = !DILocation(line: 266, column: 3, scope: !7642)
!7659 = !DILocation(line: 269, column: 2, scope: !7634)
!7660 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7661, file: !7661, line: 218, type: !6410, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7662)
!7661 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7662 = !{!7663}
!7663 = !DILocalVariable(name: "rnr", arg: 1, scope: !7660, file: !7661, line: 218, type: !118)
!7664 = !DILocation(line: 0, scope: !7660)
!7665 = !DILocation(line: 220, column: 12, scope: !7660)
!7666 = !DILocation(line: 221, column: 13, scope: !7660)
!7667 = !DILocation(line: 222, column: 1, scope: !7660)
!7668 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !561, file: !561, line: 326, type: !7669, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7671)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!119}
!7671 = !{!7672}
!7672 = !DILocalVariable(name: "r_index", scope: !7668, file: !561, line: 328, type: !118)
!7673 = !DILocation(line: 330, column: 17, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7668, file: !561, line: 330, column: 6)
!7675 = !DILocation(line: 330, column: 29, scope: !7674)
!7676 = !DILocation(line: 330, column: 6, scope: !7668)
!7677 = !DILocation(line: 337, column: 3, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !561, line: 337, column: 3)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !561, line: 337, column: 3)
!7680 = distinct !DILexicalBlock(scope: !7681, file: !561, line: 337, column: 3)
!7681 = distinct !DILexicalBlock(scope: !7674, file: !561, line: 330, column: 50)
!7682 = !DILocation(line: 347, column: 2, scope: !7668)
!7683 = !DILocation(line: 0, scope: !7668)
!7684 = !DILocation(line: 364, column: 29, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !561, line: 364, column: 2)
!7686 = distinct !DILexicalBlock(scope: !7668, file: !561, line: 364, column: 2)
!7687 = !DILocation(line: 364, column: 2, scope: !7686)
!7688 = !DILocation(line: 365, column: 25, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7685, file: !561, line: 364, column: 66)
!7690 = !DILocation(line: 365, column: 3, scope: !7689)
!7691 = !DILocation(line: 364, column: 62, scope: !7685)
!7692 = distinct !{!7692, !7687, !7693}
!7693 = !DILocation(line: 366, column: 2, scope: !7686)
!7694 = !DILocation(line: 369, column: 23, scope: !7668)
!7695 = !DILocation(line: 369, column: 21, scope: !7668)
!7696 = !DILocation(line: 372, column: 2, scope: !7668)
!7697 = !DILocation(line: 433, column: 2, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !561, line: 433, column: 2)
!7699 = distinct !DILexicalBlock(scope: !7668, file: !561, line: 433, column: 2)
!7700 = !DILocation(line: 433, column: 2, scope: !7699)
!7701 = !DILocation(line: 433, column: 2, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !561, line: 433, column: 2)
!7703 = !DILocation(line: 444, column: 1, scope: !7668)
!7704 = distinct !DISubprogram(name: "strcpy", scope: !7705, file: !7705, line: 20, type: !7706, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7710)
!7705 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!106, !7708, !7709}
!7708 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7709 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !278)
!7710 = !{!7711, !7712, !7713}
!7711 = !DILocalVariable(name: "d", arg: 1, scope: !7704, file: !7705, line: 20, type: !7708)
!7712 = !DILocalVariable(name: "s", arg: 2, scope: !7704, file: !7705, line: 20, type: !7709)
!7713 = !DILocalVariable(name: "dest", scope: !7704, file: !7705, line: 22, type: !106)
!7714 = !DILocation(line: 0, scope: !7704)
!7715 = !DILocation(line: 24, column: 9, scope: !7704)
!7716 = !DILocation(line: 24, column: 12, scope: !7704)
!7717 = !DILocation(line: 24, column: 2, scope: !7704)
!7718 = !DILocation(line: 25, column: 6, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7704, file: !7705, line: 24, column: 21)
!7720 = !DILocation(line: 26, column: 4, scope: !7719)
!7721 = !DILocation(line: 27, column: 4, scope: !7719)
!7722 = distinct !{!7722, !7717, !7723}
!7723 = !DILocation(line: 28, column: 2, scope: !7704)
!7724 = !DILocation(line: 30, column: 5, scope: !7704)
!7725 = !DILocation(line: 32, column: 2, scope: !7704)
!7726 = distinct !DISubprogram(name: "strncpy", scope: !7705, file: !7705, line: 42, type: !7727, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7729)
!7727 = !DISubroutineType(types: !7728)
!7728 = !{!106, !7708, !7709, !239}
!7729 = !{!7730, !7731, !7732, !7733}
!7730 = !DILocalVariable(name: "d", arg: 1, scope: !7726, file: !7705, line: 42, type: !7708)
!7731 = !DILocalVariable(name: "s", arg: 2, scope: !7726, file: !7705, line: 42, type: !7709)
!7732 = !DILocalVariable(name: "n", arg: 3, scope: !7726, file: !7705, line: 42, type: !239)
!7733 = !DILocalVariable(name: "dest", scope: !7726, file: !7705, line: 44, type: !106)
!7734 = !DILocation(line: 0, scope: !7726)
!7735 = !DILocation(line: 46, column: 12, scope: !7726)
!7736 = !DILocation(line: 46, column: 17, scope: !7726)
!7737 = !DILocation(line: 46, column: 20, scope: !7726)
!7738 = !DILocation(line: 46, column: 23, scope: !7726)
!7739 = !DILocation(line: 46, column: 2, scope: !7726)
!7740 = !DILocation(line: 47, column: 6, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7726, file: !7705, line: 46, column: 32)
!7742 = !DILocation(line: 48, column: 4, scope: !7741)
!7743 = !DILocation(line: 49, column: 4, scope: !7741)
!7744 = !DILocation(line: 50, column: 4, scope: !7741)
!7745 = distinct !{!7745, !7739, !7746}
!7746 = !DILocation(line: 51, column: 2, scope: !7726)
!7747 = !DILocation(line: 54, column: 6, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7726, file: !7705, line: 53, column: 16)
!7749 = !DILocation(line: 55, column: 4, scope: !7748)
!7750 = !DILocation(line: 56, column: 4, scope: !7748)
!7751 = !DILocation(line: 53, column: 11, scope: !7726)
!7752 = !DILocation(line: 53, column: 2, scope: !7726)
!7753 = distinct !{!7753, !7752, !7754}
!7754 = !DILocation(line: 57, column: 2, scope: !7726)
!7755 = !DILocation(line: 59, column: 2, scope: !7726)
!7756 = distinct !DISubprogram(name: "strchr", scope: !7705, file: !7705, line: 69, type: !7757, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7759)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{!106, !278, !119}
!7759 = !{!7760, !7761, !7762}
!7760 = !DILocalVariable(name: "s", arg: 1, scope: !7756, file: !7705, line: 69, type: !278)
!7761 = !DILocalVariable(name: "c", arg: 2, scope: !7756, file: !7705, line: 69, type: !119)
!7762 = !DILocalVariable(name: "tmp", scope: !7756, file: !7705, line: 71, type: !107)
!7763 = !DILocation(line: 0, scope: !7756)
!7764 = !DILocation(line: 73, column: 2, scope: !7756)
!7765 = !DILocation(line: 73, column: 10, scope: !7756)
!7766 = !DILocation(line: 73, column: 13, scope: !7756)
!7767 = !DILocation(line: 73, column: 21, scope: !7756)
!7768 = !DILocation(line: 74, column: 4, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7756, file: !7705, line: 73, column: 38)
!7770 = distinct !{!7770, !7764, !7771}
!7771 = !DILocation(line: 75, column: 2, scope: !7756)
!7772 = !DILocation(line: 77, column: 9, scope: !7756)
!7773 = !DILocation(line: 77, column: 2, scope: !7756)
!7774 = distinct !DISubprogram(name: "strrchr", scope: !7705, file: !7705, line: 87, type: !7757, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7775)
!7775 = !{!7776, !7777, !7778}
!7776 = !DILocalVariable(name: "s", arg: 1, scope: !7774, file: !7705, line: 87, type: !278)
!7777 = !DILocalVariable(name: "c", arg: 2, scope: !7774, file: !7705, line: 87, type: !119)
!7778 = !DILocalVariable(name: "match", scope: !7774, file: !7705, line: 89, type: !106)
!7779 = !DILocation(line: 0, scope: !7774)
!7780 = !DILocation(line: 91, column: 2, scope: !7774)
!7781 = !DILocation(line: 92, column: 7, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !7705, line: 92, column: 7)
!7783 = distinct !DILexicalBlock(scope: !7774, file: !7705, line: 91, column: 5)
!7784 = !DILocation(line: 92, column: 10, scope: !7782)
!7785 = !DILocation(line: 92, column: 7, scope: !7783)
!7786 = !DILocation(line: 95, column: 13, scope: !7774)
!7787 = !DILocation(line: 95, column: 2, scope: !7783)
!7788 = distinct !{!7788, !7780, !7789}
!7789 = !DILocation(line: 95, column: 15, scope: !7774)
!7790 = !DILocation(line: 97, column: 2, scope: !7774)
!7791 = distinct !DISubprogram(name: "strlen", scope: !7705, file: !7705, line: 107, type: !7792, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7794)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!239, !278}
!7794 = !{!7795, !7796}
!7795 = !DILocalVariable(name: "s", arg: 1, scope: !7791, file: !7705, line: 107, type: !278)
!7796 = !DILocalVariable(name: "n", scope: !7791, file: !7705, line: 109, type: !239)
!7797 = !DILocation(line: 0, scope: !7791)
!7798 = !DILocation(line: 111, column: 9, scope: !7791)
!7799 = !DILocation(line: 111, column: 12, scope: !7791)
!7800 = !DILocation(line: 111, column: 2, scope: !7791)
!7801 = !DILocation(line: 112, column: 4, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7791, file: !7705, line: 111, column: 21)
!7803 = !DILocation(line: 113, column: 4, scope: !7802)
!7804 = distinct !{!7804, !7800, !7805}
!7805 = !DILocation(line: 114, column: 2, scope: !7791)
!7806 = !DILocation(line: 116, column: 2, scope: !7791)
!7807 = distinct !DISubprogram(name: "strnlen", scope: !7705, file: !7705, line: 126, type: !7808, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7810)
!7808 = !DISubroutineType(types: !7809)
!7809 = !{!239, !278, !239}
!7810 = !{!7811, !7812, !7813}
!7811 = !DILocalVariable(name: "s", arg: 1, scope: !7807, file: !7705, line: 126, type: !278)
!7812 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7807, file: !7705, line: 126, type: !239)
!7813 = !DILocalVariable(name: "n", scope: !7807, file: !7705, line: 128, type: !239)
!7814 = !DILocation(line: 0, scope: !7807)
!7815 = !DILocation(line: 130, column: 9, scope: !7807)
!7816 = !DILocation(line: 130, column: 12, scope: !7807)
!7817 = !DILocation(line: 130, column: 20, scope: !7807)
!7818 = !DILocation(line: 130, column: 2, scope: !7807)
!7819 = !DILocation(line: 131, column: 4, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7807, file: !7705, line: 130, column: 35)
!7821 = !DILocation(line: 132, column: 4, scope: !7820)
!7822 = distinct !{!7822, !7818, !7823}
!7823 = !DILocation(line: 133, column: 2, scope: !7807)
!7824 = !DILocation(line: 135, column: 2, scope: !7807)
!7825 = distinct !DISubprogram(name: "strcmp", scope: !7705, file: !7705, line: 145, type: !7826, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7828)
!7826 = !DISubroutineType(types: !7827)
!7827 = !{!119, !278, !278}
!7828 = !{!7829, !7830}
!7829 = !DILocalVariable(name: "s1", arg: 1, scope: !7825, file: !7705, line: 145, type: !278)
!7830 = !DILocalVariable(name: "s2", arg: 2, scope: !7825, file: !7705, line: 145, type: !278)
!7831 = !DILocation(line: 0, scope: !7825)
!7832 = !DILocation(line: 147, column: 10, scope: !7825)
!7833 = !DILocation(line: 147, column: 17, scope: !7825)
!7834 = !DILocation(line: 147, column: 14, scope: !7825)
!7835 = !DILocation(line: 147, column: 22, scope: !7825)
!7836 = !DILocation(line: 148, column: 5, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7825, file: !7705, line: 147, column: 40)
!7838 = !DILocation(line: 149, column: 5, scope: !7837)
!7839 = distinct !{!7839, !7840, !7841}
!7840 = !DILocation(line: 147, column: 2, scope: !7825)
!7841 = !DILocation(line: 150, column: 2, scope: !7825)
!7842 = !DILocation(line: 152, column: 9, scope: !7825)
!7843 = !DILocation(line: 152, column: 15, scope: !7825)
!7844 = !DILocation(line: 152, column: 13, scope: !7825)
!7845 = !DILocation(line: 152, column: 2, scope: !7825)
!7846 = distinct !DISubprogram(name: "strncmp", scope: !7705, file: !7705, line: 162, type: !7847, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7849)
!7847 = !DISubroutineType(types: !7848)
!7848 = !{!119, !278, !278, !239}
!7849 = !{!7850, !7851, !7852}
!7850 = !DILocalVariable(name: "s1", arg: 1, scope: !7846, file: !7705, line: 162, type: !278)
!7851 = !DILocalVariable(name: "s2", arg: 2, scope: !7846, file: !7705, line: 162, type: !278)
!7852 = !DILocalVariable(name: "n", arg: 3, scope: !7846, file: !7705, line: 162, type: !239)
!7853 = !DILocation(line: 0, scope: !7846)
!7854 = !DILocation(line: 164, column: 17, scope: !7846)
!7855 = !DILocation(line: 164, column: 21, scope: !7846)
!7856 = !DILocation(line: 164, column: 28, scope: !7846)
!7857 = !DILocation(line: 164, column: 25, scope: !7846)
!7858 = !DILocation(line: 164, column: 33, scope: !7846)
!7859 = !DILocation(line: 165, column: 5, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7846, file: !7705, line: 164, column: 51)
!7861 = !DILocation(line: 166, column: 5, scope: !7860)
!7862 = !DILocation(line: 167, column: 4, scope: !7860)
!7863 = distinct !{!7863, !7864, !7865}
!7864 = !DILocation(line: 164, column: 2, scope: !7846)
!7865 = !DILocation(line: 168, column: 2, scope: !7846)
!7866 = !DILocation(line: 170, column: 25, scope: !7846)
!7867 = !DILocation(line: 170, column: 31, scope: !7846)
!7868 = !DILocation(line: 170, column: 29, scope: !7846)
!7869 = !DILocation(line: 170, column: 9, scope: !7846)
!7870 = !DILocation(line: 170, column: 2, scope: !7846)
!7871 = distinct !DISubprogram(name: "strtok_r", scope: !7705, file: !7705, line: 180, type: !7872, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7874)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{!106, !106, !278, !283}
!7874 = !{!7875, !7876, !7877, !7878, !7879}
!7875 = !DILocalVariable(name: "str", arg: 1, scope: !7871, file: !7705, line: 180, type: !106)
!7876 = !DILocalVariable(name: "sep", arg: 2, scope: !7871, file: !7705, line: 180, type: !278)
!7877 = !DILocalVariable(name: "state", arg: 3, scope: !7871, file: !7705, line: 180, type: !283)
!7878 = !DILocalVariable(name: "start", scope: !7871, file: !7705, line: 182, type: !106)
!7879 = !DILocalVariable(name: "end", scope: !7871, file: !7705, line: 182, type: !106)
!7880 = !DILocation(line: 0, scope: !7871)
!7881 = !DILocation(line: 184, column: 10, scope: !7871)
!7882 = !DILocation(line: 184, column: 22, scope: !7871)
!7883 = !DILocation(line: 187, column: 9, scope: !7871)
!7884 = !DILocation(line: 187, column: 16, scope: !7871)
!7885 = !DILocation(line: 187, column: 19, scope: !7871)
!7886 = !DILocation(line: 187, column: 2, scope: !7871)
!7887 = !DILocation(line: 188, column: 8, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7871, file: !7705, line: 187, column: 40)
!7889 = distinct !{!7889, !7886, !7890}
!7890 = !DILocation(line: 189, column: 2, scope: !7871)
!7891 = !DILocation(line: 198, column: 9, scope: !7871)
!7892 = !DILocation(line: 198, column: 18, scope: !7871)
!7893 = !DILocation(line: 198, column: 17, scope: !7871)
!7894 = !DILocation(line: 198, column: 2, scope: !7871)
!7895 = !DILocation(line: 199, column: 6, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7871, file: !7705, line: 198, column: 37)
!7897 = !DILocation(line: 198, column: 14, scope: !7871)
!7898 = distinct !{!7898, !7894, !7899}
!7899 = !DILocation(line: 200, column: 2, scope: !7871)
!7900 = !DILocation(line: 203, column: 8, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7705, line: 202, column: 20)
!7902 = distinct !DILexicalBlock(scope: !7871, file: !7705, line: 202, column: 6)
!7903 = !DILocation(line: 204, column: 16, scope: !7901)
!7904 = !DILocation(line: 205, column: 2, scope: !7901)
!7905 = !DILocation(line: 210, column: 1, scope: !7871)
!7906 = distinct !DISubprogram(name: "strcat", scope: !7705, file: !7705, line: 212, type: !7706, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7907)
!7907 = !{!7908, !7909}
!7908 = !DILocalVariable(name: "dest", arg: 1, scope: !7906, file: !7705, line: 212, type: !7708)
!7909 = !DILocalVariable(name: "src", arg: 2, scope: !7906, file: !7705, line: 212, type: !7709)
!7910 = !DILocation(line: 0, scope: !7906)
!7911 = !DILocation(line: 214, column: 16, scope: !7906)
!7912 = !DILocation(line: 214, column: 14, scope: !7906)
!7913 = !DILocation(line: 214, column: 2, scope: !7906)
!7914 = !DILocation(line: 215, column: 2, scope: !7906)
!7915 = distinct !DISubprogram(name: "strncat", scope: !7705, file: !7705, line: 218, type: !7727, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7916)
!7916 = !{!7917, !7918, !7919, !7920, !7921}
!7917 = !DILocalVariable(name: "dest", arg: 1, scope: !7915, file: !7705, line: 218, type: !7708)
!7918 = !DILocalVariable(name: "src", arg: 2, scope: !7915, file: !7705, line: 218, type: !7709)
!7919 = !DILocalVariable(name: "n", arg: 3, scope: !7915, file: !7705, line: 219, type: !239)
!7920 = !DILocalVariable(name: "orig_dest", scope: !7915, file: !7705, line: 221, type: !106)
!7921 = !DILocalVariable(name: "len", scope: !7915, file: !7705, line: 222, type: !239)
!7922 = !DILocation(line: 0, scope: !7915)
!7923 = !DILocation(line: 222, column: 15, scope: !7915)
!7924 = !DILocation(line: 224, column: 7, scope: !7915)
!7925 = !DILocation(line: 225, column: 14, scope: !7915)
!7926 = !DILocation(line: 225, column: 19, scope: !7915)
!7927 = !DILocation(line: 225, column: 11, scope: !7915)
!7928 = !DILocation(line: 225, column: 23, scope: !7915)
!7929 = !DILocation(line: 225, column: 28, scope: !7915)
!7930 = !DILocation(line: 225, column: 2, scope: !7915)
!7931 = !DILocation(line: 226, column: 17, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7915, file: !7705, line: 225, column: 38)
!7933 = !DILocation(line: 226, column: 8, scope: !7932)
!7934 = !DILocation(line: 226, column: 11, scope: !7932)
!7935 = distinct !{!7935, !7930, !7936}
!7936 = !DILocation(line: 227, column: 2, scope: !7915)
!7937 = !DILocation(line: 228, column: 8, scope: !7915)
!7938 = !DILocation(line: 230, column: 2, scope: !7915)
!7939 = distinct !DISubprogram(name: "memcmp", scope: !7705, file: !7705, line: 239, type: !7940, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!119, !13, !13, !239}
!7942 = !{!7943, !7944, !7945, !7946, !7947}
!7943 = !DILocalVariable(name: "m1", arg: 1, scope: !7939, file: !7705, line: 239, type: !13)
!7944 = !DILocalVariable(name: "m2", arg: 2, scope: !7939, file: !7705, line: 239, type: !13)
!7945 = !DILocalVariable(name: "n", arg: 3, scope: !7939, file: !7705, line: 239, type: !239)
!7946 = !DILocalVariable(name: "c1", scope: !7939, file: !7705, line: 241, type: !278)
!7947 = !DILocalVariable(name: "c2", scope: !7939, file: !7705, line: 242, type: !278)
!7948 = !DILocation(line: 0, scope: !7939)
!7949 = !DILocation(line: 244, column: 7, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7939, file: !7705, line: 244, column: 6)
!7951 = !DILocation(line: 244, column: 6, scope: !7939)
!7952 = !DILocation(line: 248, column: 10, scope: !7939)
!7953 = !DILocation(line: 248, column: 14, scope: !7939)
!7954 = !DILocation(line: 248, column: 19, scope: !7939)
!7955 = !DILocation(line: 248, column: 2, scope: !7939)
!7956 = !DILocation(line: 248, column: 23, scope: !7939)
!7957 = !DILocation(line: 248, column: 30, scope: !7939)
!7958 = !DILocation(line: 248, column: 27, scope: !7939)
!7959 = !DILocation(line: 249, column: 5, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7939, file: !7705, line: 248, column: 36)
!7961 = !DILocation(line: 250, column: 5, scope: !7960)
!7962 = distinct !{!7962, !7955, !7963}
!7963 = !DILocation(line: 251, column: 2, scope: !7939)
!7964 = !DILocation(line: 253, column: 9, scope: !7939)
!7965 = !DILocation(line: 253, column: 15, scope: !7939)
!7966 = !DILocation(line: 253, column: 13, scope: !7939)
!7967 = !DILocation(line: 253, column: 2, scope: !7939)
!7968 = !DILocation(line: 254, column: 1, scope: !7939)
!7969 = distinct !DISubprogram(name: "memmove", scope: !7705, file: !7705, line: 263, type: !7970, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!113, !113, !13, !239}
!7972 = !{!7973, !7974, !7975, !7976, !7977}
!7973 = !DILocalVariable(name: "d", arg: 1, scope: !7969, file: !7705, line: 263, type: !113)
!7974 = !DILocalVariable(name: "s", arg: 2, scope: !7969, file: !7705, line: 263, type: !13)
!7975 = !DILocalVariable(name: "n", arg: 3, scope: !7969, file: !7705, line: 263, type: !239)
!7976 = !DILocalVariable(name: "dest", scope: !7969, file: !7705, line: 265, type: !106)
!7977 = !DILocalVariable(name: "src", scope: !7969, file: !7705, line: 266, type: !278)
!7978 = !DILocation(line: 0, scope: !7969)
!7979 = !DILocation(line: 268, column: 21, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7969, file: !7705, line: 268, column: 6)
!7981 = !DILocation(line: 268, column: 28, scope: !7980)
!7982 = !DILocation(line: 268, column: 6, scope: !7969)
!7983 = !DILocation(line: 280, column: 12, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !7705, line: 278, column: 9)
!7985 = !DILocation(line: 280, column: 3, scope: !7984)
!7986 = !DILocation(line: 275, column: 5, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7705, line: 274, column: 17)
!7988 = distinct !DILexicalBlock(scope: !7980, file: !7705, line: 268, column: 33)
!7989 = !DILocation(line: 276, column: 14, scope: !7987)
!7990 = !DILocation(line: 276, column: 4, scope: !7987)
!7991 = !DILocation(line: 276, column: 12, scope: !7987)
!7992 = !DILocation(line: 274, column: 12, scope: !7988)
!7993 = !DILocation(line: 274, column: 3, scope: !7988)
!7994 = distinct !{!7994, !7993, !7995}
!7995 = !DILocation(line: 277, column: 3, scope: !7988)
!7996 = !DILocation(line: 281, column: 12, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7984, file: !7705, line: 280, column: 17)
!7998 = !DILocation(line: 281, column: 10, scope: !7997)
!7999 = !DILocation(line: 282, column: 8, scope: !7997)
!8000 = !DILocation(line: 283, column: 7, scope: !7997)
!8001 = !DILocation(line: 284, column: 5, scope: !7997)
!8002 = distinct !{!8002, !7985, !8003}
!8003 = !DILocation(line: 285, column: 3, scope: !7984)
!8004 = !DILocation(line: 288, column: 2, scope: !7969)
!8005 = distinct !DISubprogram(name: "memcpy", scope: !7705, file: !7705, line: 298, type: !8006, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !8010)
!8006 = !DISubroutineType(types: !8007)
!8007 = !{!113, !8008, !8009, !239}
!8008 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !113)
!8009 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8010 = !{!8011, !8012, !8013, !8014, !8015}
!8011 = !DILocalVariable(name: "d", arg: 1, scope: !8005, file: !7705, line: 298, type: !8008)
!8012 = !DILocalVariable(name: "s", arg: 2, scope: !8005, file: !7705, line: 298, type: !8009)
!8013 = !DILocalVariable(name: "n", arg: 3, scope: !8005, file: !7705, line: 298, type: !239)
!8014 = !DILocalVariable(name: "d_byte", scope: !8005, file: !7705, line: 302, type: !987)
!8015 = !DILocalVariable(name: "s_byte", scope: !8005, file: !7705, line: 303, type: !2719)
!8016 = !DILocation(line: 0, scope: !8005)
!8017 = !DILocation(line: 337, column: 11, scope: !8005)
!8018 = !DILocation(line: 337, column: 2, scope: !8005)
!8019 = !DILocation(line: 338, column: 25, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8005, file: !7705, line: 337, column: 16)
!8021 = !DILocation(line: 338, column: 17, scope: !8020)
!8022 = !DILocation(line: 338, column: 11, scope: !8020)
!8023 = !DILocation(line: 338, column: 15, scope: !8020)
!8024 = !DILocation(line: 339, column: 4, scope: !8020)
!8025 = distinct !{!8025, !8018, !8026}
!8026 = !DILocation(line: 340, column: 2, scope: !8005)
!8027 = !DILocation(line: 342, column: 2, scope: !8005)
!8028 = distinct !DISubprogram(name: "memset", scope: !7705, file: !7705, line: 352, type: !8029, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !8031)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{!113, !113, !119, !239}
!8031 = !{!8032, !8033, !8034, !8035, !8036}
!8032 = !DILocalVariable(name: "buf", arg: 1, scope: !8028, file: !7705, line: 352, type: !113)
!8033 = !DILocalVariable(name: "c", arg: 2, scope: !8028, file: !7705, line: 352, type: !119)
!8034 = !DILocalVariable(name: "n", arg: 3, scope: !8028, file: !7705, line: 352, type: !239)
!8035 = !DILocalVariable(name: "d_byte", scope: !8028, file: !7705, line: 356, type: !987)
!8036 = !DILocalVariable(name: "c_byte", scope: !8028, file: !7705, line: 357, type: !186)
!8037 = !DILocation(line: 0, scope: !8028)
!8038 = !DILocation(line: 357, column: 25, scope: !8028)
!8039 = !DILocation(line: 389, column: 11, scope: !8028)
!8040 = !DILocation(line: 389, column: 2, scope: !8028)
!8041 = !DILocation(line: 390, column: 11, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8028, file: !7705, line: 389, column: 16)
!8043 = !DILocation(line: 390, column: 15, scope: !8042)
!8044 = !DILocation(line: 391, column: 4, scope: !8042)
!8045 = distinct !{!8045, !8040, !8046}
!8046 = !DILocation(line: 392, column: 2, scope: !8028)
!8047 = !DILocation(line: 394, column: 2, scope: !8028)
!8048 = distinct !DISubprogram(name: "memchr", scope: !7705, file: !7705, line: 404, type: !8049, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !8051)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!113, !13, !119, !239}
!8051 = !{!8052, !8053, !8054, !8055}
!8052 = !DILocalVariable(name: "s", arg: 1, scope: !8048, file: !7705, line: 404, type: !13)
!8053 = !DILocalVariable(name: "c", arg: 2, scope: !8048, file: !7705, line: 404, type: !119)
!8054 = !DILocalVariable(name: "n", arg: 3, scope: !8048, file: !7705, line: 404, type: !239)
!8055 = !DILocalVariable(name: "p", scope: !8056, file: !7705, line: 407, type: !2719)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !7705, line: 406, column: 14)
!8057 = distinct !DILexicalBlock(scope: !8048, file: !7705, line: 406, column: 6)
!8058 = !DILocation(line: 0, scope: !8048)
!8059 = !DILocation(line: 406, column: 8, scope: !8057)
!8060 = !DILocation(line: 406, column: 6, scope: !8048)
!8061 = !DILocation(line: 409, column: 3, scope: !8056)
!8062 = !DILocation(line: 0, scope: !8056)
!8063 = !DILocation(line: 410, column: 8, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !7705, line: 410, column: 8)
!8065 = distinct !DILexicalBlock(scope: !8056, file: !7705, line: 409, column: 6)
!8066 = !DILocation(line: 410, column: 13, scope: !8064)
!8067 = !DILocation(line: 410, column: 8, scope: !8065)
!8068 = distinct !{!8068, !8061, !8069}
!8069 = !DILocation(line: 414, column: 20, scope: !8056)
!8070 = !DILocation(line: 417, column: 2, scope: !8048)
!8071 = !DILocation(line: 418, column: 1, scope: !8048)
!8072 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !571, file: !571, line: 23, type: !4202, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8073)
!8073 = !{!8074}
!8074 = !DILocalVariable(name: "hook", arg: 1, scope: !8072, file: !571, line: 23, type: !300)
!8075 = !DILocation(line: 0, scope: !8072)
!8076 = !DILocation(line: 25, column: 15, scope: !8072)
!8077 = !DILocation(line: 26, column: 1, scope: !8072)
!8078 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !571, file: !571, line: 14, type: !301, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8079)
!8079 = !{!8080}
!8080 = !DILocalVariable(name: "c", arg: 1, scope: !8078, file: !571, line: 14, type: !119)
!8081 = !DILocation(line: 0, scope: !8078)
!8082 = !DILocation(line: 18, column: 2, scope: !8078)
!8083 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !571, file: !571, line: 28, type: !8084, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8086)
!8084 = !DISubroutineType(types: !8085)
!8085 = !{!119, !119, !567}
!8086 = !{!8087, !8088}
!8087 = !DILocalVariable(name: "c", arg: 1, scope: !8083, file: !571, line: 28, type: !119)
!8088 = !DILocalVariable(name: "stream", arg: 2, scope: !8083, file: !571, line: 28, type: !567)
!8089 = !DILocation(line: 0, scope: !8083)
!8090 = !DILocation(line: 30, column: 27, scope: !8083)
!8091 = !DILocation(line: 30, column: 50, scope: !8083)
!8092 = !DILocation(line: 30, column: 9, scope: !8083)
!8093 = !DILocation(line: 30, column: 2, scope: !8083)
!8094 = distinct !DISubprogram(name: "fputc", scope: !571, file: !571, line: 41, type: !8084, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8095)
!8095 = !{!8096, !8097}
!8096 = !DILocalVariable(name: "c", arg: 1, scope: !8094, file: !571, line: 41, type: !119)
!8097 = !DILocalVariable(name: "stream", arg: 2, scope: !8094, file: !571, line: 41, type: !567)
!8098 = !DILocation(line: 0, scope: !8094)
!8099 = !DILocation(line: 43, column: 9, scope: !8094)
!8100 = !DILocation(line: 43, column: 2, scope: !8094)
!8101 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8102, file: !8102, line: 72, type: !8084, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8103)
!8102 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!8103 = !{!8104, !8105}
!8104 = !DILocalVariable(name: "c", arg: 1, scope: !8101, file: !8102, line: 72, type: !119)
!8105 = !DILocalVariable(name: "stream", arg: 2, scope: !8101, file: !8102, line: 72, type: !567)
!8106 = !DILocation(line: 0, scope: !8101)
!8107 = !DILocation(line: 81, column: 2, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8101, file: !8102, line: 81, column: 2)
!8109 = !{i64 2154811928}
!8110 = !DILocation(line: 82, column: 9, scope: !8101)
!8111 = !DILocation(line: 82, column: 2, scope: !8101)
!8112 = distinct !DISubprogram(name: "fputs", scope: !571, file: !571, line: 46, type: !8113, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8116)
!8113 = !DISubroutineType(types: !8114)
!8114 = !{!119, !7709, !8115}
!8115 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !567)
!8116 = !{!8117, !8118, !8119, !8120}
!8117 = !DILocalVariable(name: "s", arg: 1, scope: !8112, file: !571, line: 46, type: !7709)
!8118 = !DILocalVariable(name: "stream", arg: 2, scope: !8112, file: !571, line: 46, type: !8115)
!8119 = !DILocalVariable(name: "len", scope: !8112, file: !571, line: 48, type: !119)
!8120 = !DILocalVariable(name: "ret", scope: !8112, file: !571, line: 49, type: !119)
!8121 = !DILocation(line: 0, scope: !8112)
!8122 = !DILocation(line: 48, column: 12, scope: !8112)
!8123 = !DILocation(line: 51, column: 8, scope: !8112)
!8124 = !DILocation(line: 53, column: 13, scope: !8112)
!8125 = !DILocation(line: 53, column: 9, scope: !8112)
!8126 = !DILocation(line: 53, column: 2, scope: !8112)
!8127 = distinct !DISubprogram(name: "fwrite", scope: !571, file: !571, line: 99, type: !8128, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8130)
!8128 = !DISubroutineType(types: !8129)
!8129 = !{!239, !8009, !239, !239, !8115}
!8130 = !{!8131, !8132, !8133, !8134}
!8131 = !DILocalVariable(name: "ptr", arg: 1, scope: !8127, file: !571, line: 99, type: !8009)
!8132 = !DILocalVariable(name: "size", arg: 2, scope: !8127, file: !571, line: 99, type: !239)
!8133 = !DILocalVariable(name: "nitems", arg: 3, scope: !8127, file: !571, line: 99, type: !239)
!8134 = !DILocalVariable(name: "stream", arg: 4, scope: !8127, file: !571, line: 100, type: !8115)
!8135 = !DILocation(line: 0, scope: !8127)
!8136 = !DILocation(line: 102, column: 9, scope: !8127)
!8137 = !DILocation(line: 102, column: 2, scope: !8127)
!8138 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8102, file: !8102, line: 96, type: !8128, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8139)
!8139 = !{!8140, !8141, !8142, !8143}
!8140 = !DILocalVariable(name: "ptr", arg: 1, scope: !8138, file: !8102, line: 96, type: !8009)
!8141 = !DILocalVariable(name: "size", arg: 2, scope: !8138, file: !8102, line: 96, type: !239)
!8142 = !DILocalVariable(name: "nitems", arg: 3, scope: !8138, file: !8102, line: 96, type: !239)
!8143 = !DILocalVariable(name: "stream", arg: 4, scope: !8138, file: !8102, line: 96, type: !8115)
!8144 = !DILocation(line: 0, scope: !8138)
!8145 = !DILocation(line: 107, column: 2, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8138, file: !8102, line: 107, column: 2)
!8147 = !{i64 2154812032}
!8148 = !DILocation(line: 108, column: 9, scope: !8138)
!8149 = !DILocation(line: 108, column: 2, scope: !8138)
!8150 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !571, file: !571, line: 56, type: !8128, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8151)
!8151 = !{!8152, !8153, !8154, !8155, !8156, !8157, !8158, !8159}
!8152 = !DILocalVariable(name: "ptr", arg: 1, scope: !8150, file: !571, line: 56, type: !8009)
!8153 = !DILocalVariable(name: "size", arg: 2, scope: !8150, file: !571, line: 56, type: !239)
!8154 = !DILocalVariable(name: "nitems", arg: 3, scope: !8150, file: !571, line: 57, type: !239)
!8155 = !DILocalVariable(name: "stream", arg: 4, scope: !8150, file: !571, line: 57, type: !8115)
!8156 = !DILocalVariable(name: "i", scope: !8150, file: !571, line: 59, type: !239)
!8157 = !DILocalVariable(name: "j", scope: !8150, file: !571, line: 60, type: !239)
!8158 = !DILocalVariable(name: "p", scope: !8150, file: !571, line: 61, type: !2719)
!8159 = !DILabel(scope: !8150, name: "done", file: !571, line: 82)
!8160 = !DILocation(line: 0, scope: !8150)
!8161 = !DILocation(line: 63, column: 14, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8150, file: !571, line: 63, column: 6)
!8163 = !DILocation(line: 63, column: 24, scope: !8162)
!8164 = !DILocation(line: 72, column: 3, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8150, file: !571, line: 70, column: 5)
!8166 = !DILocation(line: 0, scope: !8165)
!8167 = !DILocation(line: 73, column: 8, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !571, line: 73, column: 8)
!8169 = distinct !DILexicalBlock(scope: !8165, file: !571, line: 72, column: 6)
!8170 = !DILocation(line: 73, column: 29, scope: !8168)
!8171 = !DILocation(line: 73, column: 27, scope: !8168)
!8172 = !DILocation(line: 73, column: 21, scope: !8168)
!8173 = !DILocation(line: 73, column: 33, scope: !8168)
!8174 = !DILocation(line: 73, column: 8, scope: !8169)
!8175 = !DILocation(line: 76, column: 5, scope: !8169)
!8176 = !DILocation(line: 77, column: 14, scope: !8165)
!8177 = !DILocation(line: 77, column: 3, scope: !8169)
!8178 = distinct !{!8178, !8164, !8179}
!8179 = !DILocation(line: 77, column: 17, scope: !8165)
!8180 = !DILocation(line: 79, column: 4, scope: !8165)
!8181 = !DILocation(line: 80, column: 13, scope: !8150)
!8182 = !DILocation(line: 80, column: 2, scope: !8165)
!8183 = distinct !{!8183, !8184, !8185}
!8184 = !DILocation(line: 70, column: 2, scope: !8150)
!8185 = !DILocation(line: 80, column: 16, scope: !8150)
!8186 = !DILocation(line: 82, column: 1, scope: !8150)
!8187 = !DILocation(line: 83, column: 17, scope: !8150)
!8188 = !DILocation(line: 83, column: 2, scope: !8150)
!8189 = !DILocation(line: 84, column: 1, scope: !8150)
!8190 = distinct !DISubprogram(name: "puts", scope: !571, file: !571, line: 106, type: !8191, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8193)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{!119, !278}
!8193 = !{!8194}
!8194 = !DILocalVariable(name: "s", arg: 1, scope: !8190, file: !571, line: 106, type: !278)
!8195 = !DILocation(line: 0, scope: !8190)
!8196 = !DILocation(line: 108, column: 6, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8190, file: !571, line: 108, column: 6)
!8198 = !DILocation(line: 108, column: 23, scope: !8197)
!8199 = !DILocation(line: 108, column: 6, scope: !8190)
!8200 = !DILocation(line: 112, column: 9, scope: !8190)
!8201 = !DILocation(line: 112, column: 29, scope: !8190)
!8202 = !DILocation(line: 112, column: 2, scope: !8190)
!8203 = !DILocation(line: 113, column: 1, scope: !8190)
!8204 = distinct !DISubprogram(name: "snprintf", scope: !8205, file: !8205, line: 28, type: !8206, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !8208)
!8205 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8206 = !DISubroutineType(types: !8207)
!8207 = !{!119, !7708, !239, !7709, null}
!8208 = !{!8209, !8210, !8211, !8212, !8219, !8224, !8225}
!8209 = !DILocalVariable(name: "str", arg: 1, scope: !8204, file: !8205, line: 28, type: !7708)
!8210 = !DILocalVariable(name: "len", arg: 2, scope: !8204, file: !8205, line: 28, type: !239)
!8211 = !DILocalVariable(name: "format", arg: 3, scope: !8204, file: !8205, line: 29, type: !7709)
!8212 = !DILocalVariable(name: "vargs", scope: !8204, file: !8205, line: 31, type: !8213)
!8213 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3286, line: 99, baseType: !8214)
!8214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3286, line: 40, baseType: !8215)
!8215 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !8205, baseType: !8216)
!8216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !8217)
!8217 = !{!8218}
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !8216, file: !8205, line: 31, baseType: !113, size: 32)
!8219 = !DILocalVariable(name: "p", scope: !8204, file: !8205, line: 33, type: !8220)
!8220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emitter", file: !8205, line: 13, size: 64, elements: !8221)
!8221 = !{!8222, !8223}
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8220, file: !8205, line: 14, baseType: !106, size: 32)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8220, file: !8205, line: 15, baseType: !119, size: 32, offset: 32)
!8224 = !DILocalVariable(name: "r", scope: !8204, file: !8205, line: 34, type: !119)
!8225 = !DILocalVariable(name: "dummy", scope: !8204, file: !8205, line: 35, type: !107)
!8226 = !DILocation(line: 0, scope: !8204)
!8227 = !DILocation(line: 31, column: 2, scope: !8204)
!8228 = !DILocation(line: 31, column: 10, scope: !8204)
!8229 = !DILocation(line: 33, column: 2, scope: !8204)
!8230 = !DILocation(line: 33, column: 17, scope: !8204)
!8231 = !DILocation(line: 35, column: 2, scope: !8204)
!8232 = !DILocation(line: 37, column: 10, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8204, file: !8205, line: 37, column: 6)
!8234 = !DILocation(line: 37, column: 6, scope: !8204)
!8235 = !DILocation(line: 41, column: 4, scope: !8204)
!8236 = !DILocation(line: 41, column: 8, scope: !8204)
!8237 = !DILocation(line: 42, column: 4, scope: !8204)
!8238 = !DILocation(line: 42, column: 8, scope: !8204)
!8239 = !DILocation(line: 44, column: 2, scope: !8204)
!8240 = !DILocation(line: 45, column: 6, scope: !8204)
!8241 = !DILocation(line: 46, column: 2, scope: !8204)
!8242 = !DILocation(line: 48, column: 6, scope: !8204)
!8243 = !DILocation(line: 48, column: 11, scope: !8204)
!8244 = !DILocation(line: 50, column: 1, scope: !8204)
!8245 = !DILocation(line: 49, column: 2, scope: !8204)
!8246 = distinct !DISubprogram(name: "cbvprintf", scope: !3318, file: !3318, line: 739, type: !8247, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !8249)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{!119, !3668, !113, !278, !8213}
!8249 = !{!8250, !8251, !8252, !8253}
!8250 = !DILocalVariable(name: "out", arg: 1, scope: !8246, file: !3318, line: 739, type: !3668)
!8251 = !DILocalVariable(name: "ctx", arg: 2, scope: !8246, file: !3318, line: 739, type: !113)
!8252 = !DILocalVariable(name: "format", arg: 3, scope: !8246, file: !3318, line: 739, type: !278)
!8253 = !DILocalVariable(name: "ap", arg: 4, scope: !8246, file: !3318, line: 739, type: !8213)
!8254 = !DILocation(line: 0, scope: !8246)
!8255 = !DILocation(line: 741, column: 9, scope: !8246)
!8256 = !DILocation(line: 741, column: 2, scope: !8246)
!8257 = distinct !DISubprogram(name: "sprintf_out", scope: !8205, file: !8205, line: 18, type: !8258, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !8261)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{!119, !119, !8260}
!8260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8220, size: 32)
!8261 = !{!8262, !8263}
!8262 = !DILocalVariable(name: "c", arg: 1, scope: !8257, file: !8205, line: 18, type: !119)
!8263 = !DILocalVariable(name: "p", arg: 2, scope: !8257, file: !8205, line: 18, type: !8260)
!8264 = !DILocation(line: 0, scope: !8257)
!8265 = !DILocation(line: 20, column: 9, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8257, file: !8205, line: 20, column: 6)
!8267 = !DILocation(line: 20, column: 13, scope: !8266)
!8268 = !DILocation(line: 20, column: 6, scope: !8257)
!8269 = !DILocation(line: 21, column: 15, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8266, file: !8205, line: 20, column: 18)
!8271 = !DILocation(line: 21, column: 8, scope: !8270)
!8272 = !DILocation(line: 21, column: 13, scope: !8270)
!8273 = !DILocation(line: 22, column: 10, scope: !8270)
!8274 = !DILocation(line: 23, column: 10, scope: !8270)
!8275 = !DILocation(line: 24, column: 2, scope: !8270)
!8276 = !DILocation(line: 25, column: 2, scope: !8257)
!8277 = distinct !DISubprogram(name: "sprintf", scope: !8205, file: !8205, line: 52, type: !8278, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !8280)
!8278 = !DISubroutineType(types: !8279)
!8279 = !{!119, !7708, !7709, null}
!8280 = !{!8281, !8282, !8283, !8284, !8285}
!8281 = !DILocalVariable(name: "str", arg: 1, scope: !8277, file: !8205, line: 52, type: !7708)
!8282 = !DILocalVariable(name: "format", arg: 2, scope: !8277, file: !8205, line: 52, type: !7709)
!8283 = !DILocalVariable(name: "vargs", scope: !8277, file: !8205, line: 54, type: !8213)
!8284 = !DILocalVariable(name: "p", scope: !8277, file: !8205, line: 56, type: !8220)
!8285 = !DILocalVariable(name: "r", scope: !8277, file: !8205, line: 57, type: !119)
!8286 = !DILocation(line: 0, scope: !8277)
!8287 = !DILocation(line: 54, column: 2, scope: !8277)
!8288 = !DILocation(line: 54, column: 10, scope: !8277)
!8289 = !DILocation(line: 56, column: 2, scope: !8277)
!8290 = !DILocation(line: 56, column: 17, scope: !8277)
!8291 = !DILocation(line: 59, column: 4, scope: !8277)
!8292 = !DILocation(line: 59, column: 8, scope: !8277)
!8293 = !DILocation(line: 60, column: 4, scope: !8277)
!8294 = !DILocation(line: 60, column: 8, scope: !8277)
!8295 = !DILocation(line: 62, column: 2, scope: !8277)
!8296 = !DILocation(line: 63, column: 6, scope: !8277)
!8297 = !DILocation(line: 64, column: 2, scope: !8277)
!8298 = !DILocation(line: 66, column: 6, scope: !8277)
!8299 = !DILocation(line: 66, column: 11, scope: !8277)
!8300 = !DILocation(line: 68, column: 1, scope: !8277)
!8301 = !DILocation(line: 67, column: 2, scope: !8277)
!8302 = distinct !DISubprogram(name: "vsnprintf", scope: !8205, file: !8205, line: 70, type: !8303, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !8305)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!119, !7708, !239, !7709, !8213}
!8305 = !{!8306, !8307, !8308, !8309, !8310, !8311, !8312}
!8306 = !DILocalVariable(name: "str", arg: 1, scope: !8302, file: !8205, line: 70, type: !7708)
!8307 = !DILocalVariable(name: "len", arg: 2, scope: !8302, file: !8205, line: 70, type: !239)
!8308 = !DILocalVariable(name: "format", arg: 3, scope: !8302, file: !8205, line: 71, type: !7709)
!8309 = !DILocalVariable(name: "vargs", arg: 4, scope: !8302, file: !8205, line: 71, type: !8213)
!8310 = !DILocalVariable(name: "p", scope: !8302, file: !8205, line: 73, type: !8220)
!8311 = !DILocalVariable(name: "r", scope: !8302, file: !8205, line: 74, type: !119)
!8312 = !DILocalVariable(name: "dummy", scope: !8302, file: !8205, line: 75, type: !107)
!8313 = !DILocation(line: 0, scope: !8302)
!8314 = !DILocation(line: 73, column: 2, scope: !8302)
!8315 = !DILocation(line: 73, column: 17, scope: !8302)
!8316 = !DILocation(line: 75, column: 2, scope: !8302)
!8317 = !DILocation(line: 77, column: 10, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8302, file: !8205, line: 77, column: 6)
!8319 = !DILocation(line: 77, column: 6, scope: !8302)
!8320 = !DILocation(line: 81, column: 4, scope: !8302)
!8321 = !DILocation(line: 81, column: 8, scope: !8302)
!8322 = !DILocation(line: 82, column: 4, scope: !8302)
!8323 = !DILocation(line: 82, column: 8, scope: !8302)
!8324 = !DILocation(line: 84, column: 6, scope: !8302)
!8325 = !DILocation(line: 86, column: 6, scope: !8302)
!8326 = !DILocation(line: 86, column: 11, scope: !8302)
!8327 = !DILocation(line: 88, column: 1, scope: !8302)
!8328 = !DILocation(line: 87, column: 2, scope: !8302)
!8329 = distinct !DISubprogram(name: "vsprintf", scope: !8205, file: !8205, line: 90, type: !8330, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !8332)
!8330 = !DISubroutineType(types: !8331)
!8331 = !{!119, !7708, !7709, !8213}
!8332 = !{!8333, !8334, !8335, !8336, !8337}
!8333 = !DILocalVariable(name: "str", arg: 1, scope: !8329, file: !8205, line: 90, type: !7708)
!8334 = !DILocalVariable(name: "format", arg: 2, scope: !8329, file: !8205, line: 90, type: !7709)
!8335 = !DILocalVariable(name: "vargs", arg: 3, scope: !8329, file: !8205, line: 91, type: !8213)
!8336 = !DILocalVariable(name: "p", scope: !8329, file: !8205, line: 93, type: !8220)
!8337 = !DILocalVariable(name: "r", scope: !8329, file: !8205, line: 94, type: !119)
!8338 = !DILocation(line: 0, scope: !8329)
!8339 = !DILocation(line: 93, column: 2, scope: !8329)
!8340 = !DILocation(line: 93, column: 17, scope: !8329)
!8341 = !DILocation(line: 96, column: 4, scope: !8329)
!8342 = !DILocation(line: 96, column: 8, scope: !8329)
!8343 = !DILocation(line: 97, column: 4, scope: !8329)
!8344 = !DILocation(line: 97, column: 8, scope: !8329)
!8345 = !DILocation(line: 99, column: 6, scope: !8329)
!8346 = !DILocation(line: 101, column: 6, scope: !8329)
!8347 = !DILocation(line: 101, column: 11, scope: !8329)
!8348 = !DILocation(line: 103, column: 1, scope: !8329)
!8349 = !DILocation(line: 102, column: 2, scope: !8329)
!8350 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !703, file: !703, line: 368, type: !756, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8351)
!8351 = !{!8352}
!8352 = !DILocalVariable(name: "dev", arg: 1, scope: !8350, file: !703, line: 368, type: !732)
!8353 = !DILocation(line: 0, scope: !8350)
!8354 = !DILocation(line: 370, column: 2, scope: !8350)
!8355 = !DILocation(line: 371, column: 1, scope: !8350)
!8356 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !703, file: !703, line: 243, type: !8357, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8359)
!8357 = !DISubroutineType(types: !8358)
!8358 = !{null, !119, !119, !732}
!8359 = !{!8360, !8361, !8362, !8363, !8365}
!8360 = !DILocalVariable(name: "min", arg: 1, scope: !8356, file: !703, line: 243, type: !119)
!8361 = !DILocalVariable(name: "max", arg: 2, scope: !8356, file: !703, line: 243, type: !119)
!8362 = !DILocalVariable(name: "dev", arg: 3, scope: !8356, file: !703, line: 243, type: !732)
!8363 = !DILocalVariable(name: "data", scope: !8356, file: !703, line: 245, type: !8364)
!8364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 32)
!8365 = !DILocalVariable(name: "line", scope: !8356, file: !703, line: 246, type: !119)
!8366 = !DILocation(line: 0, scope: !8356)
!8367 = !DILocation(line: 245, column: 38, scope: !8356)
!8368 = !DILocation(line: 249, column: 24, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !703, line: 249, column: 2)
!8370 = distinct !DILexicalBlock(scope: !8356, file: !703, line: 249, column: 2)
!8371 = !DILocation(line: 249, column: 2, scope: !8370)
!8372 = !DILocation(line: 251, column: 7, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !703, line: 251, column: 7)
!8374 = distinct !DILexicalBlock(scope: !8369, file: !703, line: 249, column: 39)
!8375 = !DILocation(line: 251, column: 7, scope: !8374)
!8376 = !DILocation(line: 253, column: 4, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8373, file: !703, line: 251, column: 36)
!8378 = !DILocation(line: 256, column: 24, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8377, file: !703, line: 256, column: 8)
!8380 = !DILocation(line: 256, column: 9, scope: !8379)
!8381 = !DILocation(line: 256, column: 8, scope: !8377)
!8382 = !DILocation(line: 260, column: 43, scope: !8377)
!8383 = !DILocation(line: 260, column: 4, scope: !8377)
!8384 = !DILocation(line: 261, column: 3, scope: !8377)
!8385 = !DILocation(line: 249, column: 35, scope: !8369)
!8386 = distinct !{!8386, !8371, !8387}
!8387 = !DILocation(line: 262, column: 2, scope: !8370)
!8388 = !DILocation(line: 263, column: 1, scope: !8356)
!8389 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !703, file: !703, line: 158, type: !301, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8390)
!8390 = !{!8391}
!8391 = !DILocalVariable(name: "line", arg: 1, scope: !8389, file: !703, line: 158, type: !119)
!8392 = !DILocation(line: 0, scope: !8389)
!8393 = !DILocation(line: 170, column: 38, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !703, line: 160, column: 17)
!8395 = distinct !DILexicalBlock(scope: !8389, file: !703, line: 160, column: 6)
!8396 = !DILocation(line: 170, column: 10, scope: !8394)
!8397 = !DILocation(line: 176, column: 1, scope: !8389)
!8398 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !703, file: !703, line: 183, type: !8399, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8401)
!8399 = !DISubroutineType(types: !8400)
!8400 = !{null, !119}
!8401 = !{!8402}
!8402 = !DILocalVariable(name: "line", arg: 1, scope: !8398, file: !703, line: 183, type: !119)
!8403 = !DILocation(line: 0, scope: !8398)
!8404 = !DILocation(line: 195, column: 28, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !703, line: 185, column: 17)
!8406 = distinct !DILexicalBlock(scope: !8398, file: !703, line: 185, column: 6)
!8407 = !DILocation(line: 195, column: 3, scope: !8405)
!8408 = !DILocation(line: 200, column: 1, scope: !8398)
!8409 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8410, file: !8410, line: 910, type: !6410, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8411)
!8410 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8411 = !{!8412}
!8412 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8409, file: !8410, line: 910, type: !118)
!8413 = !DILocation(line: 0, scope: !8409)
!8414 = !DILocation(line: 912, column: 3, scope: !8409)
!8415 = !DILocation(line: 913, column: 1, scope: !8409)
!8416 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8410, file: !8410, line: 834, type: !7600, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8417)
!8417 = !{!8418}
!8418 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8416, file: !8410, line: 834, type: !118)
!8419 = !DILocation(line: 0, scope: !8416)
!8420 = !DILocation(line: 836, column: 11, scope: !8416)
!8421 = !DILocation(line: 836, column: 40, scope: !8416)
!8422 = !DILocation(line: 836, column: 3, scope: !8416)
!8423 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !703, file: !703, line: 304, type: !756, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8424)
!8424 = !{!8425}
!8425 = !DILocalVariable(name: "dev", arg: 1, scope: !8423, file: !703, line: 304, type: !732)
!8426 = !DILocation(line: 0, scope: !8423)
!8427 = !DILocation(line: 306, column: 2, scope: !8423)
!8428 = !DILocation(line: 307, column: 1, scope: !8423)
!8429 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !703, file: !703, line: 299, type: !756, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8430)
!8430 = !{!8431}
!8431 = !DILocalVariable(name: "dev", arg: 1, scope: !8429, file: !703, line: 299, type: !732)
!8432 = !DILocation(line: 0, scope: !8429)
!8433 = !DILocation(line: 301, column: 2, scope: !8429)
!8434 = !DILocation(line: 302, column: 1, scope: !8429)
!8435 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !703, file: !703, line: 294, type: !756, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8436)
!8436 = !{!8437}
!8437 = !DILocalVariable(name: "dev", arg: 1, scope: !8435, file: !703, line: 294, type: !732)
!8438 = !DILocation(line: 0, scope: !8435)
!8439 = !DILocation(line: 296, column: 2, scope: !8435)
!8440 = !DILocation(line: 297, column: 1, scope: !8435)
!8441 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !703, file: !703, line: 397, type: !756, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8442)
!8442 = !{!8443}
!8443 = !DILocalVariable(name: "dev", arg: 1, scope: !8441, file: !703, line: 397, type: !732)
!8444 = !DILocation(line: 0, scope: !8441)
!8445 = !DILocation(line: 399, column: 2, scope: !8441)
!8446 = !DILocation(line: 400, column: 1, scope: !8441)
!8447 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !703, file: !703, line: 392, type: !756, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8448)
!8448 = !{!8449}
!8449 = !DILocalVariable(name: "dev", arg: 1, scope: !8447, file: !703, line: 392, type: !732)
!8450 = !DILocation(line: 0, scope: !8447)
!8451 = !DILocation(line: 394, column: 2, scope: !8447)
!8452 = !DILocation(line: 395, column: 1, scope: !8447)
!8453 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !703, file: !703, line: 289, type: !756, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8454)
!8454 = !{!8455}
!8455 = !DILocalVariable(name: "dev", arg: 1, scope: !8453, file: !703, line: 289, type: !732)
!8456 = !DILocation(line: 0, scope: !8453)
!8457 = !DILocation(line: 291, column: 2, scope: !8453)
!8458 = !DILocation(line: 292, column: 1, scope: !8453)
!8459 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !703, file: !703, line: 387, type: !756, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8460)
!8460 = !{!8461}
!8461 = !DILocalVariable(name: "dev", arg: 1, scope: !8459, file: !703, line: 387, type: !732)
!8462 = !DILocation(line: 0, scope: !8459)
!8463 = !DILocation(line: 389, column: 2, scope: !8459)
!8464 = !DILocation(line: 390, column: 1, scope: !8459)
!8465 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !703, file: !703, line: 382, type: !756, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8466)
!8466 = !{!8467}
!8467 = !DILocalVariable(name: "dev", arg: 1, scope: !8465, file: !703, line: 382, type: !732)
!8468 = !DILocation(line: 0, scope: !8465)
!8469 = !DILocation(line: 384, column: 2, scope: !8465)
!8470 = !DILocation(line: 385, column: 1, scope: !8465)
!8471 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !703, file: !703, line: 373, type: !756, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8472)
!8472 = !{!8473}
!8473 = !DILocalVariable(name: "dev", arg: 1, scope: !8471, file: !703, line: 373, type: !732)
!8474 = !DILocation(line: 0, scope: !8471)
!8475 = !DILocation(line: 375, column: 2, scope: !8471)
!8476 = !DILocation(line: 376, column: 1, scope: !8471)
!8477 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !703, file: !703, line: 284, type: !756, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8478)
!8478 = !{!8479}
!8479 = !DILocalVariable(name: "dev", arg: 1, scope: !8477, file: !703, line: 284, type: !732)
!8480 = !DILocation(line: 0, scope: !8477)
!8481 = !DILocation(line: 286, column: 2, scope: !8477)
!8482 = !DILocation(line: 287, column: 1, scope: !8477)
!8483 = distinct !DISubprogram(name: "stm32_exti_init", scope: !703, file: !703, line: 416, type: !730, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8484)
!8484 = !{!8485}
!8485 = !DILocalVariable(name: "dev", arg: 1, scope: !8483, file: !703, line: 416, type: !732)
!8486 = !DILocation(line: 0, scope: !8483)
!8487 = !DILocation(line: 418, column: 2, scope: !8483)
!8488 = !DILocation(line: 420, column: 2, scope: !8483)
!8489 = !DILocation(line: 0, scope: !755)
!8490 = !DILocation(line: 493, column: 2, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !755, file: !703, line: 493, column: 2)
!8492 = !DILocation(line: 497, column: 2, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !755, file: !703, line: 497, column: 2)
!8494 = !DILocation(line: 507, column: 2, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !755, file: !703, line: 507, column: 2)
!8496 = !DILocation(line: 512, column: 2, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !755, file: !703, line: 512, column: 2)
!8498 = !DILocation(line: 516, column: 2, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !755, file: !703, line: 516, column: 2)
!8500 = !DILocation(line: 523, column: 2, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !755, file: !703, line: 523, column: 2)
!8502 = !DILocation(line: 527, column: 2, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !755, file: !703, line: 527, column: 2)
!8504 = !DILocation(line: 581, column: 2, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !755, file: !703, line: 581, column: 2)
!8506 = !DILocation(line: 586, column: 2, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !755, file: !703, line: 586, column: 2)
!8508 = !DILocation(line: 591, column: 2, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !755, file: !703, line: 591, column: 2)
!8510 = !DILocation(line: 595, column: 2, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !755, file: !703, line: 595, column: 2)
!8512 = !DILocation(line: 607, column: 1, scope: !755)
!8513 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !703, file: !703, line: 112, type: !8399, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8514)
!8514 = !{!8515, !8516}
!8515 = !DILocalVariable(name: "line", arg: 1, scope: !8513, file: !703, line: 112, type: !119)
!8516 = !DILocalVariable(name: "irqnum", scope: !8513, file: !703, line: 114, type: !119)
!8517 = !DILocation(line: 0, scope: !8513)
!8518 = !DILocation(line: 122, column: 13, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8513, file: !703, line: 122, column: 6)
!8520 = !DILocation(line: 122, column: 6, scope: !8513)
!8521 = !DILocation(line: 123, column: 3, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !703, line: 123, column: 3)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !703, line: 123, column: 3)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !703, line: 123, column: 3)
!8525 = distinct !DILexicalBlock(scope: !8519, file: !703, line: 122, column: 22)
!8526 = !DILocation(line: 121, column: 11, scope: !8513)
!8527 = !DILocation(line: 130, column: 26, scope: !8513)
!8528 = !DILocation(line: 130, column: 2, scope: !8513)
!8529 = !DILocation(line: 134, column: 2, scope: !8513)
!8530 = !DILocation(line: 135, column: 1, scope: !8513)
!8531 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8410, file: !8410, line: 268, type: !6410, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8532)
!8532 = !{!8533}
!8533 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8531, file: !8410, line: 268, type: !118)
!8534 = !DILocation(line: 0, scope: !8531)
!8535 = !DILocation(line: 270, column: 3, scope: !8531)
!8536 = !DILocation(line: 271, column: 1, scope: !8531)
!8537 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !703, file: !703, line: 137, type: !8399, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8538)
!8538 = !{!8539}
!8539 = !DILocalVariable(name: "line", arg: 1, scope: !8537, file: !703, line: 137, type: !119)
!8540 = !DILocation(line: 0, scope: !8537)
!8541 = !DILocation(line: 141, column: 11, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8537, file: !703, line: 141, column: 6)
!8543 = !DILocation(line: 141, column: 6, scope: !8537)
!8544 = !DILocation(line: 145, column: 28, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8542, file: !703, line: 141, column: 17)
!8546 = !DILocation(line: 145, column: 3, scope: !8545)
!8547 = !DILocation(line: 147, column: 2, scope: !8545)
!8548 = !DILocation(line: 151, column: 1, scope: !8537)
!8549 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8410, file: !8410, line: 309, type: !6410, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8550)
!8550 = !{!8551}
!8551 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8549, file: !8410, line: 309, type: !118)
!8552 = !DILocation(line: 0, scope: !8549)
!8553 = !DILocation(line: 311, column: 3, scope: !8549)
!8554 = !DILocation(line: 312, column: 1, scope: !8549)
!8555 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !703, file: !703, line: 202, type: !8556, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8558)
!8556 = !DISubroutineType(types: !8557)
!8557 = !{null, !119, !119}
!8558 = !{!8559, !8560}
!8559 = !DILocalVariable(name: "line", arg: 1, scope: !8555, file: !703, line: 202, type: !119)
!8560 = !DILocalVariable(name: "trigger", arg: 2, scope: !8555, file: !703, line: 202, type: !119)
!8561 = !DILocation(line: 0, scope: !8555)
!8562 = !DILocation(line: 211, column: 2, scope: !8555)
!8563 = !DILocation(line: 213, column: 36, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8555, file: !703, line: 211, column: 19)
!8565 = !DILocation(line: 213, column: 3, scope: !8564)
!8566 = !DILocation(line: 214, column: 3, scope: !8564)
!8567 = !DILocation(line: 215, column: 3, scope: !8564)
!8568 = !DILocation(line: 217, column: 35, scope: !8564)
!8569 = !DILocation(line: 217, column: 3, scope: !8564)
!8570 = !DILocation(line: 218, column: 3, scope: !8564)
!8571 = !DILocation(line: 219, column: 3, scope: !8564)
!8572 = !DILocation(line: 221, column: 36, scope: !8564)
!8573 = !DILocation(line: 221, column: 3, scope: !8564)
!8574 = !DILocation(line: 222, column: 3, scope: !8564)
!8575 = !DILocation(line: 223, column: 3, scope: !8564)
!8576 = !DILocation(line: 225, column: 35, scope: !8564)
!8577 = !DILocation(line: 225, column: 3, scope: !8564)
!8578 = !DILocation(line: 226, column: 3, scope: !8564)
!8579 = !DILocation(line: 227, column: 3, scope: !8564)
!8580 = !DILocation(line: 232, column: 1, scope: !8555)
!8581 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8410, file: !8410, line: 573, type: !6410, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8582)
!8582 = !{!8583}
!8583 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8581, file: !8410, line: 573, type: !118)
!8584 = !DILocation(line: 0, scope: !8581)
!8585 = !DILocation(line: 575, column: 3, scope: !8581)
!8586 = !DILocation(line: 577, column: 1, scope: !8581)
!8587 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8410, file: !8410, line: 703, type: !6410, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8588)
!8588 = !{!8589}
!8589 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8587, file: !8410, line: 703, type: !118)
!8590 = !DILocation(line: 0, scope: !8587)
!8591 = !DILocation(line: 705, column: 3, scope: !8587)
!8592 = !DILocation(line: 706, column: 1, scope: !8587)
!8593 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8410, file: !8410, line: 529, type: !6410, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8594)
!8594 = !{!8595}
!8595 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8593, file: !8410, line: 529, type: !118)
!8596 = !DILocation(line: 0, scope: !8593)
!8597 = !DILocation(line: 531, column: 3, scope: !8593)
!8598 = !DILocation(line: 533, column: 1, scope: !8593)
!8599 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8410, file: !8410, line: 661, type: !6410, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8600)
!8600 = !{!8601}
!8601 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8599, file: !8410, line: 661, type: !118)
!8602 = !DILocation(line: 0, scope: !8599)
!8603 = !DILocation(line: 663, column: 3, scope: !8599)
!8604 = !DILocation(line: 664, column: 1, scope: !8599)
!8605 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !703, file: !703, line: 433, type: !8606, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8608)
!8606 = !DISubroutineType(types: !8607)
!8607 = !{!119, !119, !743, !113}
!8608 = !{!8609, !8610, !8611, !8612, !8614}
!8609 = !DILocalVariable(name: "line", arg: 1, scope: !8605, file: !703, line: 433, type: !119)
!8610 = !DILocalVariable(name: "cb", arg: 2, scope: !8605, file: !703, line: 433, type: !743)
!8611 = !DILocalVariable(name: "arg", arg: 3, scope: !8605, file: !703, line: 433, type: !113)
!8612 = !DILocalVariable(name: "dev", scope: !8605, file: !703, line: 435, type: !8613)
!8613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !732)
!8614 = !DILocalVariable(name: "data", scope: !8605, file: !703, line: 436, type: !8364)
!8615 = !DILocation(line: 0, scope: !8605)
!8616 = !DILocation(line: 438, column: 21, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8605, file: !703, line: 438, column: 6)
!8618 = !DILocation(line: 438, column: 6, scope: !8617)
!8619 = !DILocation(line: 438, column: 6, scope: !8605)
!8620 = !DILocation(line: 442, column: 20, scope: !8605)
!8621 = !DILocation(line: 443, column: 17, scope: !8605)
!8622 = !DILocation(line: 443, column: 22, scope: !8605)
!8623 = !DILocation(line: 445, column: 2, scope: !8605)
!8624 = !DILocation(line: 446, column: 1, scope: !8605)
!8625 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !703, file: !703, line: 448, type: !8399, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8626)
!8626 = !{!8627, !8628, !8629}
!8627 = !DILocalVariable(name: "line", arg: 1, scope: !8625, file: !703, line: 448, type: !119)
!8628 = !DILocalVariable(name: "dev", scope: !8625, file: !703, line: 450, type: !8613)
!8629 = !DILocalVariable(name: "data", scope: !8625, file: !703, line: 451, type: !8364)
!8630 = !DILocation(line: 0, scope: !8625)
!8631 = !DILocation(line: 453, column: 17, scope: !8625)
!8632 = !DILocation(line: 453, column: 20, scope: !8625)
!8633 = !DILocation(line: 454, column: 17, scope: !8625)
!8634 = !DILocation(line: 454, column: 22, scope: !8625)
!8635 = !DILocation(line: 455, column: 1, scope: !8625)
!8636 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !886, file: !886, line: 183, type: !924, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8637)
!8637 = !{!8638, !8639, !8640, !8641, !8642}
!8638 = !DILocalVariable(name: "dev", arg: 1, scope: !8636, file: !886, line: 183, type: !915)
!8639 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8636, file: !886, line: 184, type: !926)
!8640 = !DILocalVariable(name: "pclken", scope: !8636, file: !886, line: 186, type: !876)
!8641 = !DILocalVariable(name: "reg", scope: !8636, file: !886, line: 187, type: !1469)
!8642 = !DILocalVariable(name: "reg_val", scope: !8636, file: !886, line: 188, type: !118)
!8643 = !DILocation(line: 0, scope: !8636)
!8644 = !DILocation(line: 192, column: 6, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8636, file: !886, line: 192, column: 6)
!8646 = !DILocation(line: 192, column: 6, scope: !8636)
!8647 = !DILocation(line: 197, column: 52, scope: !8636)
!8648 = !DILocation(line: 197, column: 8, scope: !8636)
!8649 = !DILocation(line: 198, column: 12, scope: !8636)
!8650 = !DILocation(line: 199, column: 21, scope: !8636)
!8651 = !DILocation(line: 199, column: 10, scope: !8636)
!8652 = !DILocation(line: 200, column: 7, scope: !8636)
!8653 = !DILocation(line: 202, column: 2, scope: !8636)
!8654 = !DILocation(line: 203, column: 1, scope: !8636)
!8655 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !886, file: !886, line: 205, type: !924, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8656)
!8656 = !{!8657, !8658, !8659, !8660, !8661}
!8657 = !DILocalVariable(name: "dev", arg: 1, scope: !8655, file: !886, line: 205, type: !915)
!8658 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8655, file: !886, line: 206, type: !926)
!8659 = !DILocalVariable(name: "pclken", scope: !8655, file: !886, line: 208, type: !876)
!8660 = !DILocalVariable(name: "reg", scope: !8655, file: !886, line: 209, type: !1469)
!8661 = !DILocalVariable(name: "reg_val", scope: !8655, file: !886, line: 210, type: !118)
!8662 = !DILocation(line: 0, scope: !8655)
!8663 = !DILocation(line: 214, column: 6, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8655, file: !886, line: 214, column: 6)
!8665 = !DILocation(line: 214, column: 6, scope: !8655)
!8666 = !DILocation(line: 219, column: 52, scope: !8655)
!8667 = !DILocation(line: 219, column: 8, scope: !8655)
!8668 = !DILocation(line: 220, column: 12, scope: !8655)
!8669 = !DILocation(line: 221, column: 22, scope: !8655)
!8670 = !DILocation(line: 221, column: 13, scope: !8655)
!8671 = !DILocation(line: 221, column: 10, scope: !8655)
!8672 = !DILocation(line: 222, column: 7, scope: !8655)
!8673 = !DILocation(line: 224, column: 2, scope: !8655)
!8674 = !DILocation(line: 225, column: 1, scope: !8655)
!8675 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !886, file: !886, line: 262, type: !940, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8676)
!8676 = !{!8677, !8678, !8679, !8680, !8681, !8682, !8683, !8684}
!8677 = !DILocalVariable(name: "clock", arg: 1, scope: !8675, file: !886, line: 262, type: !915)
!8678 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8675, file: !886, line: 263, type: !926)
!8679 = !DILocalVariable(name: "rate", arg: 3, scope: !8675, file: !886, line: 264, type: !882)
!8680 = !DILocalVariable(name: "pclken", scope: !8675, file: !886, line: 266, type: !876)
!8681 = !DILocalVariable(name: "ahb_clock", scope: !8675, file: !886, line: 273, type: !118)
!8682 = !DILocalVariable(name: "apb1_clock", scope: !8675, file: !886, line: 274, type: !118)
!8683 = !DILocalVariable(name: "apb2_clock", scope: !8675, file: !886, line: 276, type: !118)
!8684 = !DILocalVariable(name: "ahb3_clock", scope: !8675, file: !886, line: 286, type: !118)
!8685 = !DILocation(line: 0, scope: !8675)
!8686 = !DILocation(line: 273, column: 23, scope: !8675)
!8687 = !DILocation(line: 274, column: 24, scope: !8675)
!8688 = !DILocation(line: 299, column: 18, scope: !8675)
!8689 = !DILocation(line: 299, column: 2, scope: !8675)
!8690 = !DILocation(line: 319, column: 3, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8675, file: !886, line: 299, column: 23)
!8692 = !DILocation(line: 323, column: 3, scope: !8691)
!8693 = !DILocation(line: 346, column: 33, scope: !8691)
!8694 = !DILocation(line: 346, column: 11, scope: !8691)
!8695 = !DILocation(line: 350, column: 3, scope: !8691)
!8696 = !DILocation(line: 354, column: 33, scope: !8691)
!8697 = !DILocation(line: 354, column: 11, scope: !8691)
!8698 = !DILocation(line: 358, column: 3, scope: !8691)
!8699 = !DILocation(line: 374, column: 3, scope: !8691)
!8700 = !DILocation(line: 379, column: 3, scope: !8691)
!8701 = !DILocation(line: 0, scope: !8691)
!8702 = !DILocation(line: 396, column: 1, scope: !8675)
!8703 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !886, file: !886, line: 227, type: !956, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8704)
!8704 = !{!8705, !8706, !8707, !8708, !8709, !8710, !8711, !8712}
!8705 = !DILocalVariable(name: "dev", arg: 1, scope: !8703, file: !886, line: 227, type: !915)
!8706 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8703, file: !886, line: 228, type: !926)
!8707 = !DILocalVariable(name: "data", arg: 3, scope: !8703, file: !886, line: 229, type: !113)
!8708 = !DILocalVariable(name: "pclken", scope: !8703, file: !886, line: 233, type: !876)
!8709 = !DILocalVariable(name: "reg", scope: !8703, file: !886, line: 234, type: !1469)
!8710 = !DILocalVariable(name: "reg_val", scope: !8703, file: !886, line: 235, type: !118)
!8711 = !DILocalVariable(name: "dt_val", scope: !8703, file: !886, line: 235, type: !118)
!8712 = !DILocalVariable(name: "err", scope: !8703, file: !886, line: 236, type: !119)
!8713 = !DILocation(line: 0, scope: !8703)
!8714 = !DILocation(line: 241, column: 30, scope: !8703)
!8715 = !DILocation(line: 241, column: 8, scope: !8703)
!8716 = !DILocation(line: 242, column: 10, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8703, file: !886, line: 242, column: 6)
!8718 = !DILocation(line: 242, column: 6, scope: !8703)
!8719 = !DILocation(line: 247, column: 11, scope: !8703)
!8720 = !DILocation(line: 248, column: 6, scope: !8703)
!8721 = !DILocation(line: 247, column: 44, scope: !8703)
!8722 = !DILocation(line: 250, column: 6, scope: !8703)
!8723 = !DILocation(line: 249, column: 52, scope: !8703)
!8724 = !DILocation(line: 249, column: 8, scope: !8703)
!8725 = !DILocation(line: 251, column: 12, scope: !8703)
!8726 = !DILocation(line: 252, column: 10, scope: !8703)
!8727 = !DILocation(line: 253, column: 7, scope: !8703)
!8728 = !DILocation(line: 255, column: 2, scope: !8703)
!8729 = !DILocation(line: 260, column: 1, scope: !8703)
!8730 = distinct !DISubprogram(name: "enabled_clock", scope: !886, file: !886, line: 100, type: !8731, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8733)
!8731 = !DISubroutineType(types: !8732)
!8732 = !{!119, !118}
!8733 = !{!8734, !8735}
!8734 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8730, file: !886, line: 100, type: !118)
!8735 = !DILocalVariable(name: "r", scope: !8730, file: !886, line: 102, type: !119)
!8736 = !DILocation(line: 0, scope: !8730)
!8737 = !DILocation(line: 104, column: 2, scope: !8730)
!8738 = !DILocation(line: 180, column: 2, scope: !8730)
!8739 = !DILocation(line: 181, column: 1, scope: !8730)
!8740 = distinct !DISubprogram(name: "get_bus_clock", scope: !886, file: !886, line: 79, type: !8741, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8743)
!8741 = !DISubroutineType(types: !8742)
!8742 = !{!118, !118, !118}
!8743 = !{!8744, !8745}
!8744 = !DILocalVariable(name: "clock", arg: 1, scope: !8740, file: !886, line: 79, type: !118)
!8745 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8740, file: !886, line: 79, type: !118)
!8746 = !DILocation(line: 0, scope: !8740)
!8747 = !DILocation(line: 81, column: 15, scope: !8740)
!8748 = !DILocation(line: 81, column: 2, scope: !8740)
!8749 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !886, file: !886, line: 68, type: !8750, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8752)
!8750 = !DISubroutineType(types: !8751)
!8751 = !{!118, !118, !119, !119, !119}
!8752 = !{!8753, !8754, !8755, !8756}
!8753 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8749, file: !886, line: 68, type: !118)
!8754 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8749, file: !886, line: 69, type: !119)
!8755 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8749, file: !886, line: 70, type: !119)
!8756 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8749, file: !886, line: 71, type: !119)
!8757 = !DILocation(line: 0, scope: !8749)
!8758 = !DILocation(line: 75, column: 22, scope: !8749)
!8759 = !DILocation(line: 76, column: 13, scope: !8749)
!8760 = !DILocation(line: 75, column: 34, scope: !8749)
!8761 = !DILocation(line: 75, column: 2, scope: !8749)
!8762 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !886, file: !886, line: 641, type: !913, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8763)
!8763 = !{!8764, !8765, !8766}
!8764 = !DILocalVariable(name: "dev", arg: 1, scope: !8762, file: !886, line: 641, type: !915)
!8765 = !DILocalVariable(name: "old_flash_freq", scope: !8762, file: !886, line: 664, type: !118)
!8766 = !DILocalVariable(name: "new_flash_freq", scope: !8762, file: !886, line: 665, type: !118)
!8767 = !DILocation(line: 0, scope: !8762)
!8768 = !DILocation(line: 646, column: 2, scope: !8762)
!8769 = !DILocation(line: 667, column: 19, scope: !8762)
!8770 = !DILocation(line: 674, column: 21, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8762, file: !886, line: 674, column: 6)
!8772 = !DILocation(line: 674, column: 6, scope: !8762)
!8773 = !DILocation(line: 675, column: 3, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8771, file: !886, line: 674, column: 59)
!8775 = !DILocation(line: 676, column: 2, scope: !8774)
!8776 = !DILocation(line: 680, column: 2, scope: !8762)
!8777 = !DILocation(line: 683, column: 2, scope: !8762)
!8778 = !DILocation(line: 690, column: 3, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !886, line: 689, column: 9)
!8780 = distinct !DILexicalBlock(scope: !8762, file: !886, line: 685, column: 6)
!8781 = !DILocation(line: 695, column: 2, scope: !8762)
!8782 = !DILocation(line: 696, column: 2, scope: !8762)
!8783 = !DILocation(line: 696, column: 9, scope: !8762)
!8784 = !DILocation(line: 696, column: 34, scope: !8762)
!8785 = distinct !{!8785, !8782, !8786}
!8786 = !DILocation(line: 697, column: 2, scope: !8762)
!8787 = !DILocation(line: 720, column: 21, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8762, file: !886, line: 720, column: 6)
!8789 = !DILocation(line: 720, column: 6, scope: !8762)
!8790 = !DILocation(line: 721, column: 3, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8788, file: !886, line: 720, column: 60)
!8792 = !DILocation(line: 722, column: 2, scope: !8791)
!8793 = !DILocation(line: 725, column: 18, scope: !8762)
!8794 = !DILocation(line: 728, column: 2, scope: !8762)
!8795 = !DILocation(line: 730, column: 2, scope: !8762)
!8796 = !DILocation(line: 745, column: 2, scope: !8762)
!8797 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8798, file: !8798, line: 3275, type: !3191, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8798 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8799 = !DILocation(line: 3277, column: 21, scope: !8797)
!8800 = !DILocation(line: 3277, column: 3, scope: !8797)
!8801 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !886, file: !886, line: 507, type: !2953, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8802 = !DILocation(line: 516, column: 4, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !886, line: 515, column: 10)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !886, line: 513, column: 7)
!8805 = distinct !DILexicalBlock(scope: !8806, file: !886, line: 510, column: 37)
!8806 = distinct !DILexicalBlock(scope: !8801, file: !886, line: 510, column: 6)
!8807 = !DILocation(line: 526, column: 3, scope: !8805)
!8808 = !DILocation(line: 527, column: 3, scope: !8805)
!8809 = !DILocation(line: 527, column: 10, scope: !8805)
!8810 = !DILocation(line: 527, column: 31, scope: !8805)
!8811 = distinct !{!8811, !8808, !8812}
!8812 = !DILocation(line: 529, column: 3, scope: !8805)
!8813 = !DILocation(line: 583, column: 3, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !886, line: 577, column: 37)
!8815 = distinct !DILexicalBlock(scope: !8801, file: !886, line: 577, column: 6)
!8816 = !DILocation(line: 584, column: 3, scope: !8814)
!8817 = !DILocation(line: 584, column: 10, scope: !8814)
!8818 = !DILocation(line: 584, column: 31, scope: !8814)
!8819 = distinct !{!8819, !8816, !8820}
!8820 = !DILocation(line: 585, column: 3, scope: !8814)
!8821 = !DILocation(line: 627, column: 1, scope: !8801)
!8822 = distinct !DISubprogram(name: "set_up_plls", scope: !886, file: !886, line: 448, type: !2953, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8823 = !DILocation(line: 460, column: 6, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8822, file: !886, line: 460, column: 6)
!8825 = !DILocation(line: 460, column: 31, scope: !8824)
!8826 = !DILocation(line: 460, column: 6, scope: !8822)
!8827 = !DILocation(line: 461, column: 3, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8824, file: !886, line: 460, column: 67)
!8829 = !DILocation(line: 462, column: 3, scope: !8828)
!8830 = !DILocation(line: 463, column: 2, scope: !8828)
!8831 = !DILocation(line: 464, column: 2, scope: !8822)
!8832 = !DILocation(line: 488, column: 2, scope: !8822)
!8833 = !DILocation(line: 492, column: 2, scope: !8822)
!8834 = !DILocation(line: 496, column: 2, scope: !8822)
!8835 = !DILocation(line: 499, column: 2, scope: !8822)
!8836 = !DILocation(line: 500, column: 2, scope: !8822)
!8837 = !DILocation(line: 500, column: 9, scope: !8822)
!8838 = !DILocation(line: 500, column: 30, scope: !8822)
!8839 = distinct !{!8839, !8836, !8840}
!8840 = !DILocation(line: 502, column: 2, scope: !8822)
!8841 = !DILocation(line: 505, column: 1, scope: !8822)
!8842 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8798, file: !8798, line: 3224, type: !6410, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8843)
!8843 = !{!8844}
!8844 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8842, file: !8798, line: 3224, type: !118)
!8845 = !DILocation(line: 0, scope: !8842)
!8846 = !DILocation(line: 3226, column: 3, scope: !8842)
!8847 = !DILocation(line: 3227, column: 1, scope: !8842)
!8848 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8798, file: !8798, line: 3188, type: !6410, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8849)
!8849 = !{!8850}
!8850 = !DILocalVariable(name: "Source", arg: 1, scope: !8848, file: !8798, line: 3188, type: !118)
!8851 = !DILocation(line: 0, scope: !8848)
!8852 = !DILocation(line: 3190, column: 3, scope: !8848)
!8853 = !DILocation(line: 3191, column: 1, scope: !8848)
!8854 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8798, file: !8798, line: 3204, type: !3191, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8855 = !DILocation(line: 3206, column: 21, scope: !8854)
!8856 = !DILocation(line: 3206, column: 3, scope: !8854)
!8857 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8798, file: !8798, line: 3240, type: !6410, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8858)
!8858 = !{!8859}
!8859 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8857, file: !8798, line: 3240, type: !118)
!8860 = !DILocation(line: 0, scope: !8857)
!8861 = !DILocation(line: 3242, column: 3, scope: !8857)
!8862 = !DILocation(line: 3243, column: 1, scope: !8857)
!8863 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8798, file: !8798, line: 3256, type: !6410, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8864)
!8864 = !{!8865}
!8865 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8863, file: !8798, line: 3256, type: !118)
!8866 = !DILocation(line: 0, scope: !8863)
!8867 = !DILocation(line: 3258, column: 3, scope: !8863)
!8868 = !DILocation(line: 3259, column: 1, scope: !8863)
!8869 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !886, file: !886, line: 409, type: !2953, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8870 = !DILocation(line: 412, column: 6, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8869, file: !886, line: 412, column: 6)
!8872 = !DILocation(line: 412, column: 27, scope: !8871)
!8873 = !DILocation(line: 412, column: 6, scope: !8869)
!8874 = !DILocation(line: 414, column: 3, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !886, line: 412, column: 33)
!8876 = !DILocation(line: 415, column: 3, scope: !8875)
!8877 = !DILocation(line: 415, column: 10, scope: !8875)
!8878 = !DILocation(line: 415, column: 31, scope: !8875)
!8879 = distinct !{!8879, !8876, !8880}
!8880 = !DILocation(line: 417, column: 3, scope: !8875)
!8881 = !DILocation(line: 421, column: 2, scope: !8869)
!8882 = !DILocation(line: 422, column: 2, scope: !8869)
!8883 = !DILocation(line: 422, column: 9, scope: !8869)
!8884 = !DILocation(line: 422, column: 34, scope: !8869)
!8885 = distinct !{!8885, !8882, !8886}
!8886 = !DILocation(line: 423, column: 2, scope: !8869)
!8887 = !DILocation(line: 424, column: 1, scope: !8869)
!8888 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8798, file: !8798, line: 4195, type: !2953, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8889 = !DILocation(line: 4197, column: 3, scope: !8888)
!8890 = !DILocation(line: 4198, column: 1, scope: !8888)
!8891 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8798, file: !8798, line: 4184, type: !2953, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8892 = !DILocation(line: 4186, column: 3, scope: !8891)
!8893 = !DILocation(line: 4187, column: 1, scope: !8891)
!8894 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8798, file: !8798, line: 4205, type: !3191, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8895 = !DILocation(line: 4207, column: 11, scope: !8894)
!8896 = !DILocation(line: 4207, column: 44, scope: !8894)
!8897 = !DILocation(line: 4207, column: 3, scope: !8894)
!8898 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8798, file: !8798, line: 3007, type: !3191, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8899 = !DILocation(line: 3009, column: 11, scope: !8898)
!8900 = !DILocation(line: 3009, column: 44, scope: !8898)
!8901 = !DILocation(line: 3009, column: 3, scope: !8898)
!8902 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8798, file: !8798, line: 2987, type: !2953, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8903 = !DILocation(line: 2989, column: 3, scope: !8902)
!8904 = !DILocation(line: 2990, column: 1, scope: !8902)
!8905 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8798, file: !8798, line: 2939, type: !2953, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8906 = !DILocation(line: 2941, column: 3, scope: !8905)
!8907 = !DILocation(line: 2942, column: 1, scope: !8905)
!8908 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8798, file: !8798, line: 2949, type: !2953, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8909 = !DILocation(line: 2951, column: 3, scope: !8908)
!8910 = !DILocation(line: 2952, column: 1, scope: !8908)
!8911 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8798, file: !8798, line: 2969, type: !3191, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8912 = !DILocation(line: 2971, column: 11, scope: !8911)
!8913 = !DILocation(line: 2971, column: 44, scope: !8911)
!8914 = !DILocation(line: 2971, column: 3, scope: !8911)
!8915 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8798, file: !8798, line: 3143, type: !2953, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8916 = !DILocation(line: 3145, column: 3, scope: !8915)
!8917 = !DILocation(line: 3146, column: 1, scope: !8915)
!8918 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8798, file: !8798, line: 3163, type: !3191, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2022)
!8919 = !DILocation(line: 3165, column: 11, scope: !8918)
!8920 = !DILocation(line: 3165, column: 46, scope: !8918)
!8921 = !DILocation(line: 3165, column: 3, scope: !8918)
!8922 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8923, file: !8923, line: 40, type: !3191, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !2022)
!8923 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8924 = !DILocation(line: 45, column: 3, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !8923, line: 44, column: 44)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !8923, line: 44, column: 13)
!8927 = distinct !DILexicalBlock(scope: !8922, file: !8923, line: 42, column: 6)
!8928 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8923, file: !8923, line: 56, type: !2953, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !2022)
!8929 = !DILocation(line: 58, column: 2, scope: !8928)
!8930 = !DILocation(line: 62, column: 1, scope: !8928)
!8931 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8798, file: !8798, line: 4304, type: !8932, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !8934)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{null, !118, !118, !118, !118}
!8934 = !{!8935, !8936, !8937, !8938}
!8935 = !DILocalVariable(name: "Source", arg: 1, scope: !8931, file: !8798, line: 4304, type: !118)
!8936 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8931, file: !8798, line: 4304, type: !118)
!8937 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8931, file: !8798, line: 4304, type: !118)
!8938 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8931, file: !8798, line: 4304, type: !118)
!8939 = !DILocation(line: 0, scope: !8931)
!8940 = !DILocation(line: 4306, column: 3, scope: !8931)
!8941 = !DILocation(line: 4308, column: 3, scope: !8931)
!8942 = !DILocation(line: 4312, column: 1, scope: !8931)
!8943 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8923, file: !8923, line: 69, type: !2953, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !2022)
!8944 = !DILocation(line: 72, column: 2, scope: !8943)
!8945 = !DILocation(line: 73, column: 1, scope: !8943)
!8946 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8947, file: !8947, line: 1185, type: !6410, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !8948)
!8947 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8948 = !{!8949, !8950}
!8949 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8946, file: !8947, line: 1185, type: !118)
!8950 = !DILocalVariable(name: "tmpreg", scope: !8946, file: !8947, line: 1187, type: !314)
!8951 = !DILocation(line: 0, scope: !8946)
!8952 = !DILocation(line: 1187, column: 3, scope: !8946)
!8953 = !DILocation(line: 1187, column: 17, scope: !8946)
!8954 = !DILocation(line: 1188, column: 3, scope: !8946)
!8955 = !DILocation(line: 1190, column: 12, scope: !8946)
!8956 = !DILocation(line: 1190, column: 10, scope: !8946)
!8957 = !DILocation(line: 1191, column: 9, scope: !8946)
!8958 = !DILocation(line: 1192, column: 1, scope: !8946)
!8959 = distinct !DISubprogram(name: "uart_console_init", scope: !1017, file: !1017, line: 588, type: !994, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8960)
!8960 = !{!8961}
!8961 = !DILocalVariable(name: "arg", arg: 1, scope: !8959, file: !1017, line: 588, type: !972)
!8962 = !DILocation(line: 0, scope: !8959)
!8963 = !DILocation(line: 593, column: 7, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8959, file: !1017, line: 593, column: 6)
!8965 = !DILocation(line: 593, column: 6, scope: !8959)
!8966 = !DILocation(line: 597, column: 2, scope: !8959)
!8967 = !DILocation(line: 599, column: 2, scope: !8959)
!8968 = !DILocation(line: 600, column: 1, scope: !8959)
!8969 = distinct !DISubprogram(name: "device_is_ready", scope: !8970, file: !8970, line: 47, type: !8971, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8973)
!8970 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!8971 = !DISubroutineType(types: !8972)
!8972 = !{!345, !972}
!8973 = !{!8974}
!8974 = !DILocalVariable(name: "dev", arg: 1, scope: !8969, file: !8970, line: 47, type: !972)
!8975 = !DILocation(line: 0, scope: !8969)
!8976 = !DILocation(line: 55, column: 2, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8969, file: !8970, line: 55, column: 2)
!8978 = !{i64 2154962996}
!8979 = !DILocation(line: 56, column: 9, scope: !8969)
!8980 = !DILocation(line: 56, column: 2, scope: !8969)
!8981 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1017, file: !1017, line: 573, type: !2953, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !2022)
!8982 = !DILocation(line: 576, column: 2, scope: !8981)
!8983 = !DILocation(line: 579, column: 2, scope: !8981)
!8984 = !DILocation(line: 581, column: 1, scope: !8981)
!8985 = distinct !DISubprogram(name: "console_out", scope: !1017, file: !1017, line: 77, type: !301, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8986)
!8986 = !{!8987}
!8987 = !DILocalVariable(name: "c", arg: 1, scope: !8985, file: !1017, line: 77, type: !119)
!8988 = !DILocation(line: 0, scope: !8985)
!8989 = !DILocation(line: 89, column: 11, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8985, file: !1017, line: 89, column: 6)
!8991 = !DILocation(line: 89, column: 6, scope: !8985)
!8992 = !DILocation(line: 90, column: 3, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8990, file: !1017, line: 89, column: 17)
!8994 = !DILocation(line: 91, column: 2, scope: !8993)
!8995 = !DILocation(line: 92, column: 34, scope: !8985)
!8996 = !DILocation(line: 92, column: 2, scope: !8985)
!8997 = !DILocation(line: 94, column: 2, scope: !8985)
!8998 = distinct !DISubprogram(name: "uart_poll_out", scope: !8999, file: !8999, line: 95, type: !990, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !9000)
!8999 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pi")
!9000 = !{!9001, !9002}
!9001 = !DILocalVariable(name: "dev", arg: 1, scope: !8998, file: !8999, line: 95, type: !972)
!9002 = !DILocalVariable(name: "out_char", arg: 2, scope: !8998, file: !8999, line: 95, type: !186)
!9003 = !DILocation(line: 0, scope: !8998)
!9004 = !DILocation(line: 105, column: 2, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8998, file: !8999, line: 105, column: 2)
!9006 = !{i64 2155046387}
!9007 = !DILocation(line: 106, column: 2, scope: !8998)
!9008 = !DILocation(line: 107, column: 1, scope: !8998)
!9009 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !966, file: !966, line: 574, type: !990, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !9010)
!9010 = !{!9011, !9012, !9013}
!9011 = !DILocalVariable(name: "dev", arg: 1, scope: !9009, file: !966, line: 574, type: !972)
!9012 = !DILocalVariable(name: "out_char", arg: 2, scope: !9009, file: !966, line: 575, type: !186)
!9013 = !DILocalVariable(name: "api", scope: !9009, file: !966, line: 577, type: !963)
!9014 = !DILocation(line: 0, scope: !9009)
!9015 = !DILocation(line: 578, column: 40, scope: !9009)
!9016 = !DILocation(line: 580, column: 7, scope: !9009)
!9017 = !DILocation(line: 580, column: 2, scope: !9009)
!9018 = !DILocation(line: 581, column: 1, scope: !9009)
!9019 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !8971, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !9020)
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "dev", arg: 1, scope: !9019, file: !334, line: 730, type: !972)
!9022 = !DILocation(line: 0, scope: !9019)
!9023 = !DILocation(line: 732, column: 9, scope: !9019)
!9024 = !DILocation(line: 732, column: 2, scope: !9019)
!9025 = distinct !DISubprogram(name: "uart_register_input", scope: !1017, file: !1017, line: 560, type: !9026, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !9073)
!9026 = !DISubroutineType(types: !9027)
!9027 = !{null, !9028, !9028, !9070}
!9028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9029, size: 32)
!9029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !245, line: 2208, size: 160, elements: !9030)
!9030 = !{!9031}
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9029, file: !245, line: 2209, baseType: !9032, size: 160)
!9032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !245, line: 1709, size: 160, elements: !9033)
!9033 = !{!9034, !9047, !9051}
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9032, file: !245, line: 1710, baseType: !9035, size: 64)
!9035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9036, line: 46, baseType: !9037)
!9036 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9036, line: 41, size: 64, elements: !9038)
!9038 = !{!9039, !9046}
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9037, file: !9036, line: 42, baseType: !9040, size: 32)
!9040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9041, size: 32)
!9041 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9036, line: 39, baseType: !9042)
!9042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9036, line: 35, size: 32, elements: !9043)
!9043 = !{!9044}
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9042, file: !9036, line: 36, baseType: !9045, size: 32)
!9045 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9036, line: 32, baseType: !118)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9037, file: !9036, line: 43, baseType: !9040, size: 32, offset: 32)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9032, file: !245, line: 1711, baseType: !9048, size: 32, offset: 64)
!9048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !9049)
!9049 = !{!9050}
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9048, file: !259, line: 52, baseType: !22, size: 32)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9032, file: !245, line: 1712, baseType: !9052, size: 64, offset: 96)
!9052 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !9053)
!9053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !9054)
!9054 = !{!9055}
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9053, file: !179, line: 232, baseType: !9056, size: 64)
!9056 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !9057)
!9057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !9058)
!9058 = !{!9059, !9065}
!9059 = !DIDerivedType(tag: DW_TAG_member, scope: !9057, file: !153, line: 38, baseType: !9060, size: 32)
!9060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9057, file: !153, line: 38, size: 32, elements: !9061)
!9061 = !{!9062, !9064}
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9060, file: !153, line: 39, baseType: !9063, size: 32)
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 32)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9060, file: !153, line: 40, baseType: !9063, size: 32)
!9065 = !DIDerivedType(tag: DW_TAG_member, scope: !9057, file: !153, line: 42, baseType: !9066, size: 32, offset: 32)
!9066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9057, file: !153, line: 42, size: 32, elements: !9067)
!9067 = !{!9068, !9069}
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9066, file: !153, line: 43, baseType: !9063, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9066, file: !153, line: 44, baseType: !9063, size: 32)
!9070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9071, size: 32)
!9071 = !DISubroutineType(types: !9072)
!9072 = !{!185, !106, !185}
!9073 = !{!9074, !9075, !9076}
!9074 = !DILocalVariable(name: "avail", arg: 1, scope: !9025, file: !1017, line: 560, type: !9028)
!9075 = !DILocalVariable(name: "lines", arg: 2, scope: !9025, file: !1017, line: 560, type: !9028)
!9076 = !DILocalVariable(name: "completion", arg: 3, scope: !9025, file: !1017, line: 561, type: !9070)
!9077 = !DILocation(line: 0, scope: !9025)
!9078 = !DILocation(line: 566, column: 1, scope: !9025)
!9079 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1197, file: !1197, line: 523, type: !1053, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9080)
!9080 = !{!9081, !9082, !9083, !9084, !9085}
!9081 = !DILocalVariable(name: "dev", arg: 1, scope: !9079, file: !1197, line: 523, type: !1055)
!9082 = !DILocalVariable(name: "pin", arg: 2, scope: !9079, file: !1197, line: 524, type: !1070)
!9083 = !DILocalVariable(name: "flags", arg: 3, scope: !9079, file: !1197, line: 524, type: !1071)
!9084 = !DILocalVariable(name: "err", scope: !9079, file: !1197, line: 526, type: !119)
!9085 = !DILocalVariable(name: "pincfg", scope: !9079, file: !1197, line: 527, type: !119)
!9086 = !DILocation(line: 0, scope: !9079)
!9087 = !DILocation(line: 527, column: 2, scope: !9079)
!9088 = !DILocation(line: 532, column: 8, scope: !9079)
!9089 = !DILocation(line: 533, column: 10, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9079, file: !1197, line: 533, column: 6)
!9091 = !DILocation(line: 533, column: 6, scope: !9079)
!9092 = !DILocation(line: 543, column: 13, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9079, file: !1197, line: 543, column: 6)
!9094 = !DILocation(line: 543, column: 28, scope: !9093)
!9095 = !DILocation(line: 543, column: 6, scope: !9079)
!9096 = !DILocation(line: 544, column: 14, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !1197, line: 544, column: 7)
!9098 = distinct !DILexicalBlock(scope: !9093, file: !1197, line: 543, column: 34)
!9099 = !DILocation(line: 544, column: 39, scope: !9097)
!9100 = !DILocation(line: 544, column: 7, scope: !9098)
!9101 = !DILocation(line: 545, column: 38, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9097, file: !1197, line: 544, column: 45)
!9103 = !DILocation(line: 545, column: 4, scope: !9102)
!9104 = !DILocation(line: 546, column: 3, scope: !9102)
!9105 = !DILocation(line: 546, column: 21, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9097, file: !1197, line: 546, column: 14)
!9107 = !DILocation(line: 546, column: 45, scope: !9106)
!9108 = !DILocation(line: 546, column: 14, scope: !9097)
!9109 = !DILocation(line: 547, column: 40, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9106, file: !1197, line: 546, column: 51)
!9111 = !DILocation(line: 547, column: 4, scope: !9110)
!9112 = !DILocation(line: 548, column: 3, scope: !9110)
!9113 = !DILocation(line: 551, column: 32, scope: !9079)
!9114 = !DILocation(line: 551, column: 37, scope: !9079)
!9115 = !DILocation(line: 551, column: 2, scope: !9079)
!9116 = !DILocation(line: 554, column: 6, scope: !9079)
!9117 = !DILocation(line: 562, column: 1, scope: !9079)
!9118 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1197, file: !1197, line: 410, type: !9119, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9121)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!119, !1055, !882}
!9121 = !{!9122, !9123, !9124, !9126}
!9122 = !DILocalVariable(name: "dev", arg: 1, scope: !9118, file: !1197, line: 410, type: !1055)
!9123 = !DILocalVariable(name: "value", arg: 2, scope: !9118, file: !1197, line: 410, type: !882)
!9124 = !DILocalVariable(name: "cfg", scope: !9118, file: !1197, line: 412, type: !9125)
!9125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!9126 = !DILocalVariable(name: "gpio", scope: !9118, file: !1197, line: 413, type: !1128)
!9127 = !DILocation(line: 0, scope: !9118)
!9128 = !DILocation(line: 412, column: 45, scope: !9118)
!9129 = !DILocation(line: 413, column: 44, scope: !9118)
!9130 = !DILocation(line: 415, column: 11, scope: !9118)
!9131 = !DILocation(line: 415, column: 9, scope: !9118)
!9132 = !DILocation(line: 417, column: 2, scope: !9118)
!9133 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1197, file: !1197, line: 420, type: !1080, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9134)
!9134 = !{!9135, !9136, !9137, !9138, !9139, !9140}
!9135 = !DILocalVariable(name: "dev", arg: 1, scope: !9133, file: !1197, line: 420, type: !1055)
!9136 = !DILocalVariable(name: "mask", arg: 2, scope: !9133, file: !1197, line: 421, type: !1082)
!9137 = !DILocalVariable(name: "value", arg: 3, scope: !9133, file: !1197, line: 422, type: !1077)
!9138 = !DILocalVariable(name: "cfg", scope: !9133, file: !1197, line: 424, type: !9125)
!9139 = !DILocalVariable(name: "gpio", scope: !9133, file: !1197, line: 425, type: !1128)
!9140 = !DILocalVariable(name: "port_value", scope: !9133, file: !1197, line: 426, type: !118)
!9141 = !DILocation(line: 0, scope: !9133)
!9142 = !DILocation(line: 424, column: 45, scope: !9133)
!9143 = !DILocation(line: 425, column: 44, scope: !9133)
!9144 = !DILocation(line: 430, column: 15, scope: !9133)
!9145 = !DILocation(line: 431, column: 46, scope: !9133)
!9146 = !DILocation(line: 431, column: 44, scope: !9133)
!9147 = !DILocation(line: 431, column: 61, scope: !9133)
!9148 = !DILocation(line: 431, column: 53, scope: !9133)
!9149 = !DILocation(line: 431, column: 2, scope: !9133)
!9150 = !DILocation(line: 435, column: 2, scope: !9133)
!9151 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1197, file: !1197, line: 438, type: !1085, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9152)
!9152 = !{!9153, !9154, !9155, !9156}
!9153 = !DILocalVariable(name: "dev", arg: 1, scope: !9151, file: !1197, line: 438, type: !1055)
!9154 = !DILocalVariable(name: "pins", arg: 2, scope: !9151, file: !1197, line: 439, type: !1082)
!9155 = !DILocalVariable(name: "cfg", scope: !9151, file: !1197, line: 441, type: !9125)
!9156 = !DILocalVariable(name: "gpio", scope: !9151, file: !1197, line: 442, type: !1128)
!9157 = !DILocation(line: 0, scope: !9151)
!9158 = !DILocation(line: 441, column: 45, scope: !9151)
!9159 = !DILocation(line: 442, column: 44, scope: !9151)
!9160 = !DILocation(line: 448, column: 2, scope: !9151)
!9161 = !DILocation(line: 450, column: 2, scope: !9151)
!9162 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1197, file: !1197, line: 453, type: !1085, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9163)
!9163 = !{!9164, !9165, !9166, !9167}
!9164 = !DILocalVariable(name: "dev", arg: 1, scope: !9162, file: !1197, line: 453, type: !1055)
!9165 = !DILocalVariable(name: "pins", arg: 2, scope: !9162, file: !1197, line: 454, type: !1082)
!9166 = !DILocalVariable(name: "cfg", scope: !9162, file: !1197, line: 456, type: !9125)
!9167 = !DILocalVariable(name: "gpio", scope: !9162, file: !1197, line: 457, type: !1128)
!9168 = !DILocation(line: 0, scope: !9162)
!9169 = !DILocation(line: 456, column: 45, scope: !9162)
!9170 = !DILocation(line: 457, column: 44, scope: !9162)
!9171 = !DILocation(line: 467, column: 2, scope: !9162)
!9172 = !DILocation(line: 470, column: 2, scope: !9162)
!9173 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1197, file: !1197, line: 473, type: !1085, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9174)
!9174 = !{!9175, !9176, !9177, !9178}
!9175 = !DILocalVariable(name: "dev", arg: 1, scope: !9173, file: !1197, line: 473, type: !1055)
!9176 = !DILocalVariable(name: "pins", arg: 2, scope: !9173, file: !1197, line: 474, type: !1082)
!9177 = !DILocalVariable(name: "cfg", scope: !9173, file: !1197, line: 476, type: !9125)
!9178 = !DILocalVariable(name: "gpio", scope: !9173, file: !1197, line: 477, type: !1128)
!9179 = !DILocation(line: 0, scope: !9173)
!9180 = !DILocation(line: 476, column: 45, scope: !9173)
!9181 = !DILocation(line: 477, column: 44, scope: !9173)
!9182 = !DILocation(line: 484, column: 2, scope: !9173)
!9183 = !DILocation(line: 487, column: 2, scope: !9173)
!9184 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1197, file: !1197, line: 594, type: !1091, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9185)
!9185 = !{!9186, !9187, !9188, !9189, !9190, !9191, !9193, !9194, !9195}
!9186 = !DILocalVariable(name: "dev", arg: 1, scope: !9184, file: !1197, line: 594, type: !1055)
!9187 = !DILocalVariable(name: "pin", arg: 2, scope: !9184, file: !1197, line: 595, type: !1070)
!9188 = !DILocalVariable(name: "mode", arg: 3, scope: !9184, file: !1197, line: 596, type: !1029)
!9189 = !DILocalVariable(name: "trig", arg: 4, scope: !9184, file: !1197, line: 597, type: !1035)
!9190 = !DILocalVariable(name: "cfg", scope: !9184, file: !1197, line: 599, type: !9125)
!9191 = !DILocalVariable(name: "data", scope: !9184, file: !1197, line: 600, type: !9192)
!9192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!9193 = !DILocalVariable(name: "edge", scope: !9184, file: !1197, line: 601, type: !119)
!9194 = !DILocalVariable(name: "err", scope: !9184, file: !1197, line: 602, type: !119)
!9195 = !DILabel(scope: !9184, name: "exit", file: !1197, line: 643)
!9196 = !DILocation(line: 0, scope: !9184)
!9197 = !DILocation(line: 599, column: 45, scope: !9184)
!9198 = !DILocation(line: 604, column: 6, scope: !9184)
!9199 = !DILocation(line: 605, column: 34, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !1197, line: 605, column: 7)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !1197, line: 604, column: 38)
!9202 = distinct !DILexicalBlock(scope: !9184, file: !1197, line: 604, column: 6)
!9203 = !DILocation(line: 605, column: 7, scope: !9200)
!9204 = !DILocation(line: 605, column: 47, scope: !9200)
!9205 = !DILocation(line: 605, column: 39, scope: !9200)
!9206 = !DILocation(line: 605, column: 7, scope: !9201)
!9207 = !DILocation(line: 606, column: 4, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9200, file: !1197, line: 605, column: 53)
!9209 = !DILocation(line: 607, column: 4, scope: !9208)
!9210 = !DILocation(line: 608, column: 4, scope: !9208)
!9211 = !DILocation(line: 609, column: 3, scope: !9208)
!9212 = !DILocation(line: 600, column: 38, scope: !9184)
!9213 = !DILocation(line: 620, column: 30, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9184, file: !1197, line: 620, column: 6)
!9215 = !DILocation(line: 620, column: 6, scope: !9214)
!9216 = !DILocation(line: 620, column: 57, scope: !9214)
!9217 = !DILocation(line: 620, column: 6, scope: !9184)
!9218 = !DILocation(line: 625, column: 29, scope: !9184)
!9219 = !DILocation(line: 625, column: 2, scope: !9184)
!9220 = !DILocation(line: 627, column: 2, scope: !9184)
!9221 = !DILocation(line: 630, column: 3, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9184, file: !1197, line: 627, column: 16)
!9223 = !DILocation(line: 633, column: 3, scope: !9222)
!9224 = !DILocation(line: 636, column: 3, scope: !9222)
!9225 = !DILocation(line: 639, column: 2, scope: !9184)
!9226 = !DILocation(line: 641, column: 2, scope: !9184)
!9227 = !DILocation(line: 643, column: 1, scope: !9184)
!9228 = !DILocation(line: 644, column: 2, scope: !9184)
!9229 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1197, file: !1197, line: 647, type: !1095, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9230)
!9230 = !{!9231, !9232, !9233, !9234}
!9231 = !DILocalVariable(name: "dev", arg: 1, scope: !9229, file: !1197, line: 647, type: !1055)
!9232 = !DILocalVariable(name: "callback", arg: 2, scope: !9229, file: !1197, line: 648, type: !1097)
!9233 = !DILocalVariable(name: "set", arg: 3, scope: !9229, file: !1197, line: 649, type: !345)
!9234 = !DILocalVariable(name: "data", scope: !9229, file: !1197, line: 651, type: !9192)
!9235 = !DILocation(line: 0, scope: !9229)
!9236 = !DILocation(line: 651, column: 38, scope: !9229)
!9237 = !DILocation(line: 653, column: 37, scope: !9229)
!9238 = !DILocation(line: 653, column: 9, scope: !9229)
!9239 = !DILocation(line: 653, column: 2, scope: !9229)
!9240 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9241, file: !9241, line: 38, type: !9242, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9245)
!9241 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9242 = !DISubroutineType(types: !9243)
!9243 = !{!119, !9244, !1097, !345}
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!9245 = !{!9246, !9247, !9248}
!9246 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9240, file: !9241, line: 38, type: !9244)
!9247 = !DILocalVariable(name: "callback", arg: 2, scope: !9240, file: !9241, line: 39, type: !1097)
!9248 = !DILocalVariable(name: "set", arg: 3, scope: !9240, file: !9241, line: 40, type: !345)
!9249 = !DILocation(line: 0, scope: !9240)
!9250 = !DILocation(line: 42, column: 2, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !9241, line: 42, column: 2)
!9252 = distinct !DILexicalBlock(scope: !9240, file: !9241, line: 42, column: 2)
!9253 = !DILocation(line: 42, column: 2, scope: !9252)
!9254 = !DILocation(line: 42, column: 2, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9251, file: !9241, line: 42, column: 2)
!9256 = !DILocation(line: 43, column: 2, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !9241, line: 43, column: 2)
!9258 = distinct !DILexicalBlock(scope: !9240, file: !9241, line: 43, column: 2)
!9259 = !DILocation(line: 43, column: 2, scope: !9258)
!9260 = !DILocation(line: 43, column: 2, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9257, file: !9241, line: 43, column: 2)
!9262 = !DILocation(line: 45, column: 7, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9240, file: !9241, line: 45, column: 6)
!9264 = !DILocation(line: 45, column: 6, scope: !9240)
!9265 = !DILocation(line: 46, column: 56, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !9241, line: 46, column: 7)
!9267 = distinct !DILexicalBlock(scope: !9263, file: !9241, line: 45, column: 38)
!9268 = !DILocation(line: 46, column: 8, scope: !9266)
!9269 = !DILocation(line: 46, column: 7, scope: !9267)
!9270 = !DILocation(line: 51, column: 13, scope: !9263)
!9271 = !DILocation(line: 56, column: 43, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !9241, line: 55, column: 11)
!9273 = distinct !DILexicalBlock(scope: !9240, file: !9241, line: 55, column: 6)
!9274 = !DILocation(line: 56, column: 3, scope: !9272)
!9275 = !DILocation(line: 57, column: 2, scope: !9272)
!9276 = !DILocation(line: 60, column: 1, scope: !9240)
!9277 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1102, file: !1102, line: 261, type: !9278, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{!345, !9244}
!9280 = !{!9281}
!9281 = !DILocalVariable(name: "list", arg: 1, scope: !9277, file: !1102, line: 261, type: !9244)
!9282 = !DILocation(line: 0, scope: !9277)
!9283 = !DILocation(line: 261, column: 1, scope: !9277)
!9284 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1102, file: !1102, line: 417, type: !9285, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9287)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{!345, !9244, !1273}
!9287 = !{!9288, !9289, !9290, !9291}
!9288 = !DILocalVariable(name: "list", arg: 1, scope: !9284, file: !1102, line: 417, type: !9244)
!9289 = !DILocalVariable(name: "node", arg: 2, scope: !9284, file: !1102, line: 417, type: !1273)
!9290 = !DILocalVariable(name: "prev", scope: !9284, file: !1102, line: 417, type: !1273)
!9291 = !DILocalVariable(name: "test", scope: !9284, file: !1102, line: 417, type: !1273)
!9292 = !DILocation(line: 0, scope: !9284)
!9293 = !DILocation(line: 417, column: 1, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9284, file: !1102, line: 417, column: 1)
!9295 = !DILocation(line: 417, column: 1, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9294, file: !1102, line: 417, column: 1)
!9297 = !DILocation(line: 417, column: 1, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9299, file: !1102, line: 417, column: 1)
!9299 = distinct !DILexicalBlock(scope: !9296, file: !1102, line: 417, column: 1)
!9300 = !DILocation(line: 417, column: 1, scope: !9299)
!9301 = distinct !{!9301, !9293, !9293}
!9302 = !DILocation(line: 417, column: 1, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9298, file: !1102, line: 417, column: 1)
!9304 = !DILocation(line: 417, column: 1, scope: !9284)
!9305 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1102, file: !1102, line: 298, type: !9306, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9308)
!9306 = !DISubroutineType(types: !9307)
!9307 = !{null, !9244, !1273}
!9308 = !{!9309, !9310}
!9309 = !DILocalVariable(name: "list", arg: 1, scope: !9305, file: !1102, line: 298, type: !9244)
!9310 = !DILocalVariable(name: "node", arg: 2, scope: !9305, file: !1102, line: 298, type: !1273)
!9311 = !DILocation(line: 0, scope: !9305)
!9312 = !DILocation(line: 298, column: 1, scope: !9305)
!9313 = !DILocation(line: 298, column: 1, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9305, file: !1102, line: 298, column: 1)
!9315 = !DILocation(line: 298, column: 1, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9314, file: !1102, line: 298, column: 1)
!9317 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1102, file: !1102, line: 231, type: !9318, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9320)
!9318 = !DISubroutineType(types: !9319)
!9319 = !{!1273, !9244}
!9320 = !{!9321}
!9321 = !DILocalVariable(name: "list", arg: 1, scope: !9317, file: !1102, line: 231, type: !9244)
!9322 = !DILocation(line: 0, scope: !9317)
!9323 = !DILocation(line: 233, column: 15, scope: !9317)
!9324 = !DILocation(line: 233, column: 2, scope: !9317)
!9325 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1102, file: !1102, line: 209, type: !9326, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9328)
!9326 = !DISubroutineType(types: !9327)
!9327 = !{null, !1273, !1273}
!9328 = !{!9329, !9330}
!9329 = !DILocalVariable(name: "parent", arg: 1, scope: !9325, file: !1102, line: 209, type: !1273)
!9330 = !DILocalVariable(name: "child", arg: 2, scope: !9325, file: !1102, line: 209, type: !1273)
!9331 = !DILocation(line: 0, scope: !9325)
!9332 = !DILocation(line: 211, column: 10, scope: !9325)
!9333 = !DILocation(line: 211, column: 15, scope: !9325)
!9334 = !DILocation(line: 212, column: 1, scope: !9325)
!9335 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1102, file: !1102, line: 214, type: !9306, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9336)
!9336 = !{!9337, !9338}
!9337 = !DILocalVariable(name: "list", arg: 1, scope: !9335, file: !1102, line: 214, type: !9244)
!9338 = !DILocalVariable(name: "node", arg: 2, scope: !9335, file: !1102, line: 214, type: !1273)
!9339 = !DILocation(line: 0, scope: !9335)
!9340 = !DILocation(line: 216, column: 8, scope: !9335)
!9341 = !DILocation(line: 216, column: 13, scope: !9335)
!9342 = !DILocation(line: 217, column: 1, scope: !9335)
!9343 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1102, file: !1102, line: 243, type: !9318, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9344)
!9344 = !{!9345}
!9345 = !DILocalVariable(name: "list", arg: 1, scope: !9343, file: !1102, line: 243, type: !9244)
!9346 = !DILocation(line: 0, scope: !9343)
!9347 = !DILocation(line: 245, column: 15, scope: !9343)
!9348 = !DILocation(line: 245, column: 2, scope: !9343)
!9349 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1102, file: !1102, line: 219, type: !9306, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9350)
!9350 = !{!9351, !9352}
!9351 = !DILocalVariable(name: "list", arg: 1, scope: !9349, file: !1102, line: 219, type: !9244)
!9352 = !DILocalVariable(name: "node", arg: 2, scope: !9349, file: !1102, line: 219, type: !1273)
!9353 = !DILocation(line: 0, scope: !9349)
!9354 = !DILocation(line: 221, column: 8, scope: !9349)
!9355 = !DILocation(line: 221, column: 13, scope: !9349)
!9356 = !DILocation(line: 222, column: 1, scope: !9349)
!9357 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1102, file: !1102, line: 401, type: !9358, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9360)
!9358 = !DISubroutineType(types: !9359)
!9359 = !{null, !9244, !1273, !1273}
!9360 = !{!9361, !9362, !9363}
!9361 = !DILocalVariable(name: "list", arg: 1, scope: !9357, file: !1102, line: 401, type: !9244)
!9362 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9357, file: !1102, line: 401, type: !1273)
!9363 = !DILocalVariable(name: "node", arg: 3, scope: !9357, file: !1102, line: 401, type: !1273)
!9364 = !DILocation(line: 0, scope: !9357)
!9365 = !DILocation(line: 401, column: 1, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9357, file: !1102, line: 401, column: 1)
!9367 = !DILocation(line: 0, scope: !9366)
!9368 = !DILocation(line: 401, column: 1, scope: !9357)
!9369 = !DILocation(line: 401, column: 1, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9366, file: !1102, line: 401, column: 1)
!9371 = !DILocation(line: 401, column: 1, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9370, file: !1102, line: 401, column: 1)
!9373 = !DILocation(line: 401, column: 1, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9372, file: !1102, line: 401, column: 1)
!9375 = !DILocation(line: 401, column: 1, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9366, file: !1102, line: 401, column: 1)
!9377 = !DILocation(line: 401, column: 1, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9376, file: !1102, line: 401, column: 1)
!9379 = !DILocation(line: 401, column: 1, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9378, file: !1102, line: 401, column: 1)
!9381 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1102, file: !1102, line: 285, type: !9382, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9384)
!9382 = !DISubroutineType(types: !9383)
!9383 = !{!1273, !1273}
!9384 = !{!9385}
!9385 = !DILocalVariable(name: "node", arg: 1, scope: !9381, file: !1102, line: 285, type: !1273)
!9386 = !DILocation(line: 0, scope: !9381)
!9387 = !DILocation(line: 285, column: 1, scope: !9381)
!9388 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1102, file: !1102, line: 274, type: !9382, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9389)
!9389 = !{!9390}
!9390 = !DILocalVariable(name: "node", arg: 1, scope: !9388, file: !1102, line: 274, type: !1273)
!9391 = !DILocation(line: 0, scope: !9388)
!9392 = !DILocation(line: 274, column: 1, scope: !9388)
!9393 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1102, file: !1102, line: 204, type: !9382, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9394)
!9394 = !{!9395}
!9395 = !DILocalVariable(name: "node", arg: 1, scope: !9393, file: !1102, line: 204, type: !1273)
!9396 = !DILocation(line: 0, scope: !9393)
!9397 = !DILocation(line: 206, column: 15, scope: !9393)
!9398 = !DILocation(line: 206, column: 2, scope: !9393)
!9399 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1197, file: !1197, line: 342, type: !301, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9400)
!9400 = !{!9401, !9402, !9403}
!9401 = !DILocalVariable(name: "pin", arg: 1, scope: !9399, file: !1197, line: 342, type: !119)
!9402 = !DILocalVariable(name: "line", scope: !9399, file: !1197, line: 344, type: !118)
!9403 = !DILocalVariable(name: "port", scope: !9399, file: !1197, line: 345, type: !119)
!9404 = !DILocation(line: 0, scope: !9399)
!9405 = !DILocation(line: 344, column: 18, scope: !9399)
!9406 = !{i32 983040, i32 0}
!9407 = !DILocation(line: 356, column: 9, scope: !9399)
!9408 = !DILocation(line: 370, column: 2, scope: !9399)
!9409 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1197, file: !1197, line: 37, type: !746, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DILocalVariable(name: "line", arg: 1, scope: !9409, file: !1197, line: 37, type: !119)
!9412 = !DILocalVariable(name: "arg", arg: 2, scope: !9409, file: !1197, line: 37, type: !113)
!9413 = !DILocalVariable(name: "data", scope: !9409, file: !1197, line: 39, type: !9192)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 41, column: 29, scope: !9409)
!9416 = !DILocation(line: 41, column: 39, scope: !9409)
!9417 = !DILocation(line: 41, column: 44, scope: !9409)
!9418 = !DILocation(line: 41, column: 2, scope: !9409)
!9419 = !DILocation(line: 42, column: 1, scope: !9409)
!9420 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1197, file: !1197, line: 376, type: !9421, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9423)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!119, !119, !119}
!9423 = !{!9424, !9425, !9426, !9428, !9429}
!9424 = !DILocalVariable(name: "port", arg: 1, scope: !9420, file: !1197, line: 376, type: !119)
!9425 = !DILocalVariable(name: "pin", arg: 2, scope: !9420, file: !1197, line: 376, type: !119)
!9426 = !DILocalVariable(name: "clk", scope: !9420, file: !1197, line: 386, type: !9427)
!9427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!9428 = !DILocalVariable(name: "pclken", scope: !9420, file: !1197, line: 387, type: !1316)
!9429 = !DILocalVariable(name: "ret", scope: !9420, file: !1197, line: 396, type: !119)
!9430 = !DILocation(line: 0, scope: !9420)
!9431 = !DILocation(line: 387, column: 2, scope: !9420)
!9432 = !DILocation(line: 387, column: 22, scope: !9420)
!9433 = !DILocation(line: 399, column: 8, scope: !9420)
!9434 = !DILocation(line: 400, column: 10, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9420, file: !1197, line: 400, column: 6)
!9436 = !DILocation(line: 400, column: 6, scope: !9420)
!9437 = !DILocation(line: 405, column: 2, scope: !9420)
!9438 = !DILocation(line: 407, column: 2, scope: !9420)
!9439 = !DILocation(line: 408, column: 1, scope: !9420)
!9440 = distinct !DISubprogram(name: "clock_control_on", scope: !833, file: !833, line: 123, type: !1162, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9441)
!9441 = !{!9442, !9443, !9444}
!9442 = !DILocalVariable(name: "dev", arg: 1, scope: !9440, file: !833, line: 123, type: !1055)
!9443 = !DILocalVariable(name: "sys", arg: 2, scope: !9440, file: !833, line: 124, type: !926)
!9444 = !DILocalVariable(name: "api", scope: !9440, file: !833, line: 126, type: !1155)
!9445 = !DILocation(line: 0, scope: !9440)
!9446 = !DILocation(line: 127, column: 49, scope: !9440)
!9447 = !DILocation(line: 129, column: 14, scope: !9440)
!9448 = !DILocation(line: 129, column: 9, scope: !9440)
!9449 = !DILocation(line: 129, column: 2, scope: !9440)
!9450 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1197, file: !1197, line: 311, type: !8556, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9451)
!9451 = !{!9452, !9453, !9454}
!9452 = !DILocalVariable(name: "port", arg: 1, scope: !9450, file: !1197, line: 311, type: !119)
!9453 = !DILocalVariable(name: "pin", arg: 2, scope: !9450, file: !1197, line: 311, type: !119)
!9454 = !DILocalVariable(name: "line", scope: !9450, file: !1197, line: 313, type: !118)
!9455 = !DILocation(line: 0, scope: !9450)
!9456 = !DILocation(line: 313, column: 18, scope: !9450)
!9457 = !DILocation(line: 337, column: 2, scope: !9450)
!9458 = !DILocation(line: 340, column: 1, scope: !9450)
!9459 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1197, file: !1197, line: 295, type: !9460, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9462)
!9460 = !DISubroutineType(types: !9461)
!9461 = !{!118, !119}
!9462 = !{!9463}
!9463 = !DILocalVariable(name: "pin", arg: 1, scope: !9459, file: !1197, line: 295, type: !119)
!9464 = !DILocation(line: 0, scope: !9459)
!9465 = !DILocation(line: 307, column: 46, scope: !9459)
!9466 = !DILocation(line: 307, column: 27, scope: !9459)
!9467 = !DILocation(line: 307, column: 32, scope: !9459)
!9468 = !DILocation(line: 307, column: 14, scope: !9459)
!9469 = !DILocation(line: 307, column: 39, scope: !9459)
!9470 = !DILocation(line: 307, column: 2, scope: !9459)
!9471 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6015, file: !6015, line: 671, type: !9472, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9474)
!9472 = !DISubroutineType(types: !9473)
!9473 = !{null, !118, !118}
!9474 = !{!9475, !9476}
!9475 = !DILocalVariable(name: "Port", arg: 1, scope: !9471, file: !6015, line: 671, type: !118)
!9476 = !DILocalVariable(name: "Line", arg: 2, scope: !9471, file: !6015, line: 671, type: !118)
!9477 = !DILocation(line: 0, scope: !9471)
!9478 = !DILocation(line: 673, column: 3, scope: !9471)
!9479 = !DILocalVariable(name: "value", arg: 1, scope: !9480, file: !6315, line: 373, type: !118)
!9480 = distinct !DISubprogram(name: "__RBIT", scope: !6315, file: !6315, line: 373, type: !7600, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9481)
!9481 = !{!9479, !9482}
!9482 = !DILocalVariable(name: "result", scope: !9480, file: !6315, line: 375, type: !118)
!9483 = !DILocation(line: 0, scope: !9480, inlinedAt: !9484)
!9484 = distinct !DILocation(line: 673, column: 3, scope: !9471)
!9485 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9484)
!9486 = !{i64 3503739}
!9487 = !DILocalVariable(name: "value", arg: 1, scope: !9488, file: !6315, line: 403, type: !118)
!9488 = distinct !DISubprogram(name: "__CLZ", scope: !6315, file: !6315, line: 403, type: !9489, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9491)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!185, !118}
!9491 = !{!9487}
!9492 = !DILocation(line: 0, scope: !9488, inlinedAt: !9493)
!9493 = distinct !DILocation(line: 673, column: 3, scope: !9471)
!9494 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9493)
!9495 = !DILocation(line: 674, column: 1, scope: !9471)
!9496 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9241, file: !9241, line: 69, type: !9497, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9499)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{null, !9244, !1055, !118}
!9499 = !{!9500, !9501, !9502, !9503, !9504}
!9500 = !DILocalVariable(name: "list", arg: 1, scope: !9496, file: !9241, line: 69, type: !9244)
!9501 = !DILocalVariable(name: "port", arg: 2, scope: !9496, file: !9241, line: 70, type: !1055)
!9502 = !DILocalVariable(name: "pins", arg: 3, scope: !9496, file: !9241, line: 71, type: !118)
!9503 = !DILocalVariable(name: "cb", scope: !9496, file: !9241, line: 73, type: !1097)
!9504 = !DILocalVariable(name: "tmp", scope: !9496, file: !9241, line: 73, type: !1097)
!9505 = !DILocation(line: 0, scope: !9496)
!9506 = !DILocation(line: 75, column: 2, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9496, file: !9241, line: 75, column: 2)
!9508 = !DILocation(line: 0, scope: !9507)
!9509 = !DILocation(line: 76, column: 11, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !9241, line: 76, column: 7)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !9241, line: 75, column: 57)
!9512 = distinct !DILexicalBlock(scope: !9507, file: !9241, line: 75, column: 2)
!9513 = !DILocation(line: 76, column: 20, scope: !9510)
!9514 = !DILocation(line: 76, column: 7, scope: !9511)
!9515 = !DILocation(line: 77, column: 4, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9517, file: !9241, line: 77, column: 4)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !9241, line: 77, column: 4)
!9518 = distinct !DILexicalBlock(scope: !9510, file: !9241, line: 76, column: 28)
!9519 = !DILocation(line: 77, column: 4, scope: !9517)
!9520 = !DILocation(line: 77, column: 4, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9516, file: !9241, line: 77, column: 4)
!9522 = !DILocation(line: 78, column: 4, scope: !9518)
!9523 = !DILocation(line: 79, column: 3, scope: !9518)
!9524 = !DILocation(line: 75, column: 2, scope: !9512)
!9525 = !DILocation(line: 81, column: 1, scope: !9496)
!9526 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6015, file: !6015, line: 710, type: !7600, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9527)
!9527 = !{!9528}
!9528 = !DILocalVariable(name: "Line", arg: 1, scope: !9526, file: !6015, line: 710, type: !118)
!9529 = !DILocation(line: 0, scope: !9526)
!9530 = !DILocation(line: 712, column: 21, scope: !9526)
!9531 = !DILocation(line: 0, scope: !9480, inlinedAt: !9532)
!9532 = distinct !DILocation(line: 712, column: 76, scope: !9526)
!9533 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9532)
!9534 = !DILocation(line: 0, scope: !9488, inlinedAt: !9535)
!9535 = distinct !DILocation(line: 712, column: 76, scope: !9526)
!9536 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9535)
!9537 = !DILocation(line: 712, column: 73, scope: !9526)
!9538 = !DILocation(line: 712, column: 3, scope: !9526)
!9539 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9540, file: !9540, line: 910, type: !9541, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9543)
!9540 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9541 = !DISubroutineType(types: !9542)
!9542 = !{null, !1128, !118}
!9543 = !{!9544, !9545}
!9544 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9539, file: !9540, line: 910, type: !1128)
!9545 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9539, file: !9540, line: 910, type: !118)
!9546 = !DILocation(line: 0, scope: !9539)
!9547 = !DILocation(line: 912, column: 3, scope: !9539)
!9548 = !DILocation(line: 913, column: 1, scope: !9539)
!9549 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9540, file: !9540, line: 823, type: !9550, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9552)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!118, !1128}
!9552 = !{!9553}
!9553 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9549, file: !9540, line: 823, type: !1128)
!9554 = !DILocation(line: 0, scope: !9549)
!9555 = !DILocation(line: 825, column: 21, scope: !9549)
!9556 = !DILocation(line: 825, column: 3, scope: !9549)
!9557 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9540, file: !9540, line: 812, type: !9541, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9558)
!9558 = !{!9559, !9560}
!9559 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9557, file: !9540, line: 812, type: !1128)
!9560 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9557, file: !9540, line: 812, type: !118)
!9561 = !DILocation(line: 0, scope: !9557)
!9562 = !DILocation(line: 814, column: 3, scope: !9557)
!9563 = !DILocation(line: 815, column: 1, scope: !9557)
!9564 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9540, file: !9540, line: 771, type: !9550, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9565)
!9565 = !{!9566}
!9566 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9564, file: !9540, line: 771, type: !1128)
!9567 = !DILocation(line: 0, scope: !9564)
!9568 = !DILocation(line: 773, column: 21, scope: !9564)
!9569 = !DILocation(line: 773, column: 3, scope: !9564)
!9570 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1197, file: !1197, line: 47, type: !9571, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9573)
!9571 = !DISubroutineType(types: !9572)
!9572 = !{!119, !1071, !280}
!9573 = !{!9574, !9575}
!9574 = !DILocalVariable(name: "flags", arg: 1, scope: !9570, file: !1197, line: 47, type: !1071)
!9575 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9570, file: !1197, line: 47, type: !280)
!9576 = !DILocation(line: 0, scope: !9570)
!9577 = !DILocation(line: 50, column: 13, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9570, file: !1197, line: 50, column: 6)
!9579 = !DILocation(line: 50, column: 28, scope: !9578)
!9580 = !DILocation(line: 50, column: 6, scope: !9570)
!9581 = !DILocation(line: 53, column: 11, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9578, file: !1197, line: 50, column: 34)
!9583 = !DILocation(line: 55, column: 14, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9582, file: !1197, line: 55, column: 7)
!9585 = !DILocation(line: 55, column: 35, scope: !9584)
!9586 = !DILocation(line: 55, column: 7, scope: !9582)
!9587 = !DILocation(line: 56, column: 14, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !1197, line: 56, column: 8)
!9589 = distinct !DILexicalBlock(scope: !9584, file: !1197, line: 55, column: 41)
!9590 = !DILocation(line: 56, column: 8, scope: !9589)
!9591 = !DILocation(line: 0, scope: !9584)
!9592 = !DILocation(line: 66, column: 14, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9582, file: !1197, line: 66, column: 7)
!9594 = !DILocation(line: 66, column: 30, scope: !9593)
!9595 = !DILocation(line: 66, column: 7, scope: !9582)
!9596 = !DILocation(line: 67, column: 12, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9593, file: !1197, line: 66, column: 36)
!9598 = !DILocation(line: 68, column: 3, scope: !9597)
!9599 = !DILocation(line: 68, column: 21, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9593, file: !1197, line: 68, column: 14)
!9601 = !DILocation(line: 68, column: 39, scope: !9600)
!9602 = !DILocation(line: 68, column: 14, scope: !9593)
!9603 = !DILocation(line: 69, column: 12, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9600, file: !1197, line: 68, column: 45)
!9605 = !DILocation(line: 70, column: 3, scope: !9604)
!9606 = !DILocation(line: 72, column: 21, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9578, file: !1197, line: 72, column: 14)
!9608 = !DILocation(line: 72, column: 35, scope: !9607)
!9609 = !DILocation(line: 72, column: 14, scope: !9578)
!9610 = !DILocation(line: 77, column: 14, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !1197, line: 77, column: 7)
!9612 = distinct !DILexicalBlock(scope: !9607, file: !1197, line: 72, column: 41)
!9613 = !DILocation(line: 77, column: 30, scope: !9611)
!9614 = !DILocation(line: 77, column: 7, scope: !9612)
!9615 = !DILocation(line: 0, scope: !9578)
!9616 = !DILocation(line: 90, column: 1, scope: !9570)
!9617 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1197, file: !1197, line: 157, type: !9618, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9620)
!9618 = !DISubroutineType(types: !9619)
!9619 = !{null, !1055, !119, !119, !119}
!9620 = !{!9621, !9622, !9623, !9624, !9625, !9626, !9627, !9628, !9629, !9630, !9631}
!9621 = !DILocalVariable(name: "dev", arg: 1, scope: !9617, file: !1197, line: 157, type: !1055)
!9622 = !DILocalVariable(name: "pin", arg: 2, scope: !9617, file: !1197, line: 157, type: !119)
!9623 = !DILocalVariable(name: "conf", arg: 3, scope: !9617, file: !1197, line: 158, type: !119)
!9624 = !DILocalVariable(name: "func", arg: 4, scope: !9617, file: !1197, line: 158, type: !119)
!9625 = !DILocalVariable(name: "cfg", scope: !9617, file: !1197, line: 160, type: !9125)
!9626 = !DILocalVariable(name: "gpio", scope: !9617, file: !1197, line: 161, type: !1128)
!9627 = !DILocalVariable(name: "pin_ll", scope: !9617, file: !1197, line: 163, type: !119)
!9628 = !DILocalVariable(name: "mode", scope: !9617, file: !1197, line: 227, type: !32)
!9629 = !DILocalVariable(name: "otype", scope: !9617, file: !1197, line: 227, type: !32)
!9630 = !DILocalVariable(name: "ospeed", scope: !9617, file: !1197, line: 227, type: !32)
!9631 = !DILocalVariable(name: "pupd", scope: !9617, file: !1197, line: 227, type: !32)
!9632 = !DILocation(line: 0, scope: !9617)
!9633 = !DILocation(line: 160, column: 45, scope: !9617)
!9634 = !DILocation(line: 161, column: 44, scope: !9617)
!9635 = !DILocation(line: 163, column: 15, scope: !9617)
!9636 = !DILocation(line: 229, column: 14, scope: !9617)
!9637 = !DILocation(line: 246, column: 47, scope: !9617)
!9638 = !DILocation(line: 246, column: 2, scope: !9617)
!9639 = !DILocation(line: 248, column: 43, scope: !9617)
!9640 = !DILocation(line: 248, column: 2, scope: !9617)
!9641 = !DILocation(line: 250, column: 40, scope: !9617)
!9642 = !DILocation(line: 250, column: 2, scope: !9617)
!9643 = !DILocation(line: 252, column: 11, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9617, file: !1197, line: 252, column: 6)
!9645 = !DILocation(line: 252, column: 6, scope: !9617)
!9646 = !DILocation(line: 253, column: 11, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9648, file: !1197, line: 253, column: 7)
!9648 = distinct !DILexicalBlock(scope: !9644, file: !1197, line: 252, column: 36)
!9649 = !DILocation(line: 253, column: 7, scope: !9648)
!9650 = !DILocation(line: 254, column: 4, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9647, file: !1197, line: 253, column: 16)
!9652 = !DILocation(line: 255, column: 3, scope: !9651)
!9653 = !DILocation(line: 256, column: 4, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9647, file: !1197, line: 255, column: 10)
!9655 = !DILocation(line: 260, column: 40, scope: !9617)
!9656 = !DILocation(line: 260, column: 2, scope: !9617)
!9657 = !DILocation(line: 265, column: 1, scope: !9617)
!9658 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1197, file: !1197, line: 137, type: !9460, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9659)
!9659 = !{!9660, !9661}
!9660 = !DILocalVariable(name: "pin", arg: 1, scope: !9658, file: !1197, line: 137, type: !119)
!9661 = !DILocalVariable(name: "pinval", scope: !9658, file: !1197, line: 139, type: !118)
!9662 = !DILocation(line: 0, scope: !9658)
!9663 = !DILocation(line: 149, column: 13, scope: !9658)
!9664 = !DILocation(line: 151, column: 2, scope: !9658)
!9665 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9540, file: !9540, line: 342, type: !9666, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9668)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{null, !1128, !118, !118}
!9668 = !{!9669, !9670, !9671}
!9669 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9665, file: !9540, line: 342, type: !1128)
!9670 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9665, file: !9540, line: 342, type: !118)
!9671 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9665, file: !9540, line: 342, type: !118)
!9672 = !DILocation(line: 0, scope: !9665)
!9673 = !DILocation(line: 344, column: 3, scope: !9665)
!9674 = !DILocation(line: 345, column: 1, scope: !9665)
!9675 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9540, file: !9540, line: 413, type: !9666, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9676)
!9676 = !{!9677, !9678, !9679}
!9677 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9675, file: !9540, line: 413, type: !1128)
!9678 = !DILocalVariable(name: "Pin", arg: 2, scope: !9675, file: !9540, line: 413, type: !118)
!9679 = !DILocalVariable(name: "Speed", arg: 3, scope: !9675, file: !9540, line: 413, type: !118)
!9680 = !DILocation(line: 0, scope: !9675)
!9681 = !DILocation(line: 415, column: 3, scope: !9675)
!9682 = !DILocation(line: 0, scope: !9480, inlinedAt: !9683)
!9683 = distinct !DILocation(line: 415, column: 3, scope: !9675)
!9684 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9683)
!9685 = !DILocation(line: 0, scope: !9488, inlinedAt: !9686)
!9686 = distinct !DILocation(line: 415, column: 3, scope: !9675)
!9687 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9686)
!9688 = !DILocation(line: 0, scope: !9480, inlinedAt: !9689)
!9689 = distinct !DILocation(line: 415, column: 3, scope: !9675)
!9690 = !DILocation(line: 0, scope: !9488, inlinedAt: !9691)
!9691 = distinct !DILocation(line: 415, column: 3, scope: !9675)
!9692 = !DILocation(line: 417, column: 1, scope: !9675)
!9693 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9540, file: !9540, line: 484, type: !9666, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9694)
!9694 = !{!9695, !9696, !9697}
!9695 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9693, file: !9540, line: 484, type: !1128)
!9696 = !DILocalVariable(name: "Pin", arg: 2, scope: !9693, file: !9540, line: 484, type: !118)
!9697 = !DILocalVariable(name: "Pull", arg: 3, scope: !9693, file: !9540, line: 484, type: !118)
!9698 = !DILocation(line: 0, scope: !9693)
!9699 = !DILocation(line: 486, column: 3, scope: !9693)
!9700 = !DILocation(line: 0, scope: !9480, inlinedAt: !9701)
!9701 = distinct !DILocation(line: 486, column: 3, scope: !9693)
!9702 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9701)
!9703 = !DILocation(line: 0, scope: !9488, inlinedAt: !9704)
!9704 = distinct !DILocation(line: 486, column: 3, scope: !9693)
!9705 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9704)
!9706 = !DILocation(line: 0, scope: !9480, inlinedAt: !9707)
!9707 = distinct !DILocation(line: 486, column: 3, scope: !9693)
!9708 = !DILocation(line: 0, scope: !9488, inlinedAt: !9709)
!9709 = distinct !DILocation(line: 486, column: 3, scope: !9693)
!9710 = !DILocation(line: 487, column: 1, scope: !9693)
!9711 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9540, file: !9540, line: 556, type: !9666, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9712)
!9712 = !{!9713, !9714, !9715}
!9713 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9711, file: !9540, line: 556, type: !1128)
!9714 = !DILocalVariable(name: "Pin", arg: 2, scope: !9711, file: !9540, line: 556, type: !118)
!9715 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9711, file: !9540, line: 556, type: !118)
!9716 = !DILocation(line: 0, scope: !9711)
!9717 = !DILocation(line: 558, column: 3, scope: !9711)
!9718 = !DILocation(line: 0, scope: !9480, inlinedAt: !9719)
!9719 = distinct !DILocation(line: 558, column: 3, scope: !9711)
!9720 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9719)
!9721 = !DILocation(line: 0, scope: !9488, inlinedAt: !9722)
!9722 = distinct !DILocation(line: 558, column: 3, scope: !9711)
!9723 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9722)
!9724 = !DILocation(line: 0, scope: !9480, inlinedAt: !9725)
!9725 = distinct !DILocation(line: 558, column: 3, scope: !9711)
!9726 = !DILocation(line: 0, scope: !9488, inlinedAt: !9727)
!9727 = distinct !DILocation(line: 558, column: 3, scope: !9711)
!9728 = !DILocation(line: 560, column: 1, scope: !9711)
!9729 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9540, file: !9540, line: 633, type: !9666, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9730)
!9730 = !{!9731, !9732, !9733}
!9731 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9729, file: !9540, line: 633, type: !1128)
!9732 = !DILocalVariable(name: "Pin", arg: 2, scope: !9729, file: !9540, line: 633, type: !118)
!9733 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9729, file: !9540, line: 633, type: !118)
!9734 = !DILocation(line: 0, scope: !9729)
!9735 = !DILocation(line: 635, column: 3, scope: !9729)
!9736 = !DILocation(line: 0, scope: !9480, inlinedAt: !9737)
!9737 = distinct !DILocation(line: 635, column: 3, scope: !9729)
!9738 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9737)
!9739 = !DILocation(line: 0, scope: !9488, inlinedAt: !9740)
!9740 = distinct !DILocation(line: 635, column: 3, scope: !9729)
!9741 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9740)
!9742 = !DILocation(line: 0, scope: !9480, inlinedAt: !9743)
!9743 = distinct !DILocation(line: 635, column: 3, scope: !9729)
!9744 = !DILocation(line: 0, scope: !9488, inlinedAt: !9745)
!9745 = distinct !DILocation(line: 635, column: 3, scope: !9729)
!9746 = !DILocation(line: 637, column: 1, scope: !9729)
!9747 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9540, file: !9540, line: 273, type: !9666, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9748)
!9748 = !{!9749, !9750, !9751}
!9749 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9747, file: !9540, line: 273, type: !1128)
!9750 = !DILocalVariable(name: "Pin", arg: 2, scope: !9747, file: !9540, line: 273, type: !118)
!9751 = !DILocalVariable(name: "Mode", arg: 3, scope: !9747, file: !9540, line: 273, type: !118)
!9752 = !DILocation(line: 0, scope: !9747)
!9753 = !DILocation(line: 275, column: 3, scope: !9747)
!9754 = !DILocation(line: 0, scope: !9480, inlinedAt: !9755)
!9755 = distinct !DILocation(line: 275, column: 3, scope: !9747)
!9756 = !DILocation(line: 380, column: 4, scope: !9480, inlinedAt: !9755)
!9757 = !DILocation(line: 0, scope: !9488, inlinedAt: !9758)
!9758 = distinct !DILocation(line: 275, column: 3, scope: !9747)
!9759 = !DILocation(line: 414, column: 7, scope: !9488, inlinedAt: !9758)
!9760 = !DILocation(line: 0, scope: !9480, inlinedAt: !9761)
!9761 = distinct !DILocation(line: 275, column: 3, scope: !9747)
!9762 = !DILocation(line: 0, scope: !9488, inlinedAt: !9763)
!9763 = distinct !DILocation(line: 275, column: 3, scope: !9747)
!9764 = !DILocation(line: 276, column: 1, scope: !9747)
!9765 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1197, file: !1197, line: 698, type: !1210, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9766)
!9766 = !{!9767, !9768, !9769}
!9767 = !DILocalVariable(name: "dev", arg: 1, scope: !9765, file: !1197, line: 698, type: !1055)
!9768 = !DILocalVariable(name: "data", scope: !9765, file: !1197, line: 700, type: !9192)
!9769 = !DILocalVariable(name: "ret", scope: !9765, file: !1197, line: 701, type: !119)
!9770 = !DILocation(line: 0, scope: !9765)
!9771 = !DILocation(line: 700, column: 38, scope: !9765)
!9772 = !DILocation(line: 703, column: 8, scope: !9765)
!9773 = !DILocation(line: 703, column: 12, scope: !9765)
!9774 = !DILocation(line: 705, column: 7, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9765, file: !1197, line: 705, column: 6)
!9776 = !DILocation(line: 705, column: 6, scope: !9765)
!9777 = !DILocation(line: 722, column: 8, scope: !9765)
!9778 = !DILocation(line: 723, column: 10, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9765, file: !1197, line: 723, column: 6)
!9780 = !DILocation(line: 723, column: 6, scope: !9765)
!9781 = !DILocation(line: 731, column: 1, scope: !9765)
!9782 = distinct !DISubprogram(name: "device_is_ready", scope: !8970, file: !8970, line: 47, type: !9783, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9785)
!9783 = !DISubroutineType(types: !9784)
!9784 = !{!345, !1055}
!9785 = !{!9786}
!9786 = !DILocalVariable(name: "dev", arg: 1, scope: !9782, file: !8970, line: 47, type: !1055)
!9787 = !DILocation(line: 0, scope: !9782)
!9788 = !DILocation(line: 55, column: 2, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9782, file: !8970, line: 55, column: 2)
!9790 = !{i64 2154954203}
!9791 = !DILocation(line: 56, column: 9, scope: !9782)
!9792 = !DILocation(line: 56, column: 2, scope: !9782)
!9793 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1197, file: !1197, line: 270, type: !9794, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9796)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!119, !1055, !345}
!9796 = !{!9797, !9798, !9799, !9800, !9801}
!9797 = !DILocalVariable(name: "dev", arg: 1, scope: !9793, file: !1197, line: 270, type: !1055)
!9798 = !DILocalVariable(name: "on", arg: 2, scope: !9793, file: !1197, line: 270, type: !345)
!9799 = !DILocalVariable(name: "cfg", scope: !9793, file: !1197, line: 272, type: !9125)
!9800 = !DILocalVariable(name: "ret", scope: !9793, file: !1197, line: 273, type: !119)
!9801 = !DILocalVariable(name: "clk", scope: !9793, file: !1197, line: 278, type: !9427)
!9802 = !DILocation(line: 0, scope: !9793)
!9803 = !DILocation(line: 272, column: 45, scope: !9793)
!9804 = !DILocation(line: 282, column: 38, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !1197, line: 280, column: 10)
!9806 = distinct !DILexicalBlock(scope: !9793, file: !1197, line: 280, column: 6)
!9807 = !DILocation(line: 282, column: 6, scope: !9805)
!9808 = !DILocation(line: 281, column: 9, scope: !9805)
!9809 = !DILocation(line: 293, column: 1, scope: !9793)
!9810 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9783, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9811)
!9811 = !{!9812}
!9812 = !DILocalVariable(name: "dev", arg: 1, scope: !9810, file: !334, line: 730, type: !1055)
!9813 = !DILocation(line: 0, scope: !9810)
!9814 = !DILocation(line: 732, column: 9, scope: !9810)
!9815 = !DILocation(line: 732, column: 2, scope: !9810)
!9816 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1197, file: !1197, line: 496, type: !9817, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9819)
!9817 = !DISubroutineType(types: !9818)
!9818 = !{!119, !1055, !119, !119, !119}
!9819 = !{!9820, !9821, !9822, !9823, !9824, !9825}
!9820 = !DILocalVariable(name: "dev", arg: 1, scope: !9816, file: !1197, line: 496, type: !1055)
!9821 = !DILocalVariable(name: "pin", arg: 2, scope: !9816, file: !1197, line: 496, type: !119)
!9822 = !DILocalVariable(name: "conf", arg: 3, scope: !9816, file: !1197, line: 496, type: !119)
!9823 = !DILocalVariable(name: "func", arg: 4, scope: !9816, file: !1197, line: 496, type: !119)
!9824 = !DILocalVariable(name: "ret", scope: !9816, file: !1197, line: 498, type: !119)
!9825 = !DILocalVariable(name: "gpio_out", scope: !9826, file: !1197, line: 508, type: !118)
!9826 = distinct !DILexicalBlock(scope: !9827, file: !1197, line: 507, column: 27)
!9827 = distinct !DILexicalBlock(scope: !9816, file: !1197, line: 507, column: 6)
!9828 = !DILocation(line: 0, scope: !9816)
!9829 = !DILocation(line: 505, column: 2, scope: !9816)
!9830 = !DILocation(line: 507, column: 11, scope: !9827)
!9831 = !DILocation(line: 507, column: 6, scope: !9816)
!9832 = !DILocation(line: 508, column: 28, scope: !9826)
!9833 = !DILocation(line: 0, scope: !9826)
!9834 = !DILocation(line: 510, column: 16, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9826, file: !1197, line: 510, column: 7)
!9836 = !DILocation(line: 0, scope: !9835)
!9837 = !DILocation(line: 510, column: 7, scope: !9826)
!9838 = !DILocation(line: 511, column: 4, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9835, file: !1197, line: 510, column: 32)
!9840 = !DILocation(line: 512, column: 3, scope: !9839)
!9841 = !DILocation(line: 513, column: 4, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9843, file: !1197, line: 512, column: 39)
!9843 = distinct !DILexicalBlock(scope: !9835, file: !1197, line: 512, column: 14)
!9844 = !DILocation(line: 514, column: 3, scope: !9842)
!9845 = !DILocation(line: 518, column: 1, scope: !9816)
!9846 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1473, file: !1473, line: 526, type: !1376, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9847)
!9847 = !{!9848, !9849, !9850}
!9848 = !DILocalVariable(name: "dev", arg: 1, scope: !9846, file: !1473, line: 526, type: !1378)
!9849 = !DILocalVariable(name: "c", arg: 2, scope: !9846, file: !1473, line: 526, type: !987)
!9850 = !DILocalVariable(name: "config", scope: !9846, file: !1473, line: 528, type: !9851)
!9851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!9852 = !DILocation(line: 0, scope: !9846)
!9853 = !DILocation(line: 528, column: 48, scope: !9846)
!9854 = !DILocation(line: 531, column: 40, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9846, file: !1473, line: 531, column: 6)
!9856 = !DILocation(line: 531, column: 6, scope: !9855)
!9857 = !DILocation(line: 531, column: 6, scope: !9846)
!9858 = !DILocation(line: 532, column: 34, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9855, file: !1473, line: 531, column: 48)
!9860 = !DILocation(line: 532, column: 3, scope: !9859)
!9861 = !DILocation(line: 533, column: 2, scope: !9859)
!9862 = !DILocation(line: 539, column: 42, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9846, file: !1473, line: 539, column: 6)
!9864 = !DILocation(line: 539, column: 7, scope: !9863)
!9865 = !DILocation(line: 539, column: 6, scope: !9846)
!9866 = !DILocation(line: 543, column: 52, scope: !9846)
!9867 = !DILocation(line: 543, column: 22, scope: !9846)
!9868 = !DILocation(line: 543, column: 5, scope: !9846)
!9869 = !DILocation(line: 545, column: 2, scope: !9846)
!9870 = !DILocation(line: 546, column: 1, scope: !9846)
!9871 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1473, file: !1473, line: 548, type: !1395, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9872)
!9872 = !{!9873, !9874, !9875, !9876}
!9873 = !DILocalVariable(name: "dev", arg: 1, scope: !9871, file: !1473, line: 548, type: !1378)
!9874 = !DILocalVariable(name: "c", arg: 2, scope: !9871, file: !1473, line: 549, type: !186)
!9875 = !DILocalVariable(name: "config", scope: !9871, file: !1473, line: 551, type: !9851)
!9876 = !DILocalVariable(name: "key", scope: !9871, file: !1473, line: 555, type: !32)
!9877 = !DILocation(line: 0, scope: !9871)
!9878 = !DILocation(line: 551, column: 48, scope: !9871)
!9879 = !DILocation(line: 562, column: 2, scope: !9871)
!9880 = !DILocation(line: 563, column: 41, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9882, file: !1473, line: 563, column: 7)
!9882 = distinct !DILexicalBlock(scope: !9871, file: !1473, line: 562, column: 12)
!9883 = !DILocation(line: 563, column: 7, scope: !9881)
!9884 = !DILocation(line: 563, column: 7, scope: !9882)
!9885 = !DILocation(line: 55, column: 2, scope: !9886, inlinedAt: !9890)
!9886 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5994, file: !5994, line: 42, type: !5995, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9887)
!9887 = !{!9888, !9889}
!9888 = !DILocalVariable(name: "key", scope: !9886, file: !5994, line: 44, type: !32)
!9889 = !DILocalVariable(name: "tmp", scope: !9886, file: !5994, line: 53, type: !32)
!9890 = distinct !DILocation(line: 564, column: 10, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9881, file: !1473, line: 563, column: 49)
!9892 = !{i64 2292152}
!9893 = !DILocation(line: 0, scope: !9886, inlinedAt: !9890)
!9894 = !DILocation(line: 565, column: 42, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9891, file: !1473, line: 565, column: 8)
!9896 = !DILocation(line: 565, column: 8, scope: !9895)
!9897 = !DILocation(line: 565, column: 8, scope: !9891)
!9898 = !DILocalVariable(name: "key", arg: 1, scope: !9899, file: !5994, line: 84, type: !32)
!9899 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5994, file: !5994, line: 84, type: !6005, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9900)
!9900 = !{!9898}
!9901 = !DILocation(line: 0, scope: !9899, inlinedAt: !9902)
!9902 = distinct !DILocation(line: 568, column: 4, scope: !9891)
!9903 = !DILocation(line: 95, column: 2, scope: !9899, inlinedAt: !9902)
!9904 = !{i64 2292969}
!9905 = !DILocation(line: 569, column: 3, scope: !9891)
!9906 = distinct !{!9906, !9879, !9907}
!9907 = !DILocation(line: 570, column: 2, scope: !9871)
!9908 = !DILocation(line: 592, column: 33, scope: !9871)
!9909 = !DILocation(line: 592, column: 2, scope: !9871)
!9910 = !DILocation(line: 0, scope: !9899, inlinedAt: !9911)
!9911 = distinct !DILocation(line: 593, column: 2, scope: !9871)
!9912 = !DILocation(line: 95, column: 2, scope: !9899, inlinedAt: !9911)
!9913 = !DILocation(line: 594, column: 1, scope: !9871)
!9914 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1473, file: !1473, line: 596, type: !1399, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9915)
!9915 = !{!9916, !9917, !9918}
!9916 = !DILocalVariable(name: "dev", arg: 1, scope: !9914, file: !1473, line: 596, type: !1378)
!9917 = !DILocalVariable(name: "config", scope: !9914, file: !1473, line: 598, type: !9851)
!9918 = !DILocalVariable(name: "err", scope: !9914, file: !1473, line: 599, type: !118)
!9919 = !DILocation(line: 0, scope: !9914)
!9920 = !DILocation(line: 598, column: 48, scope: !9914)
!9921 = !DILocation(line: 606, column: 40, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9914, file: !1473, line: 606, column: 6)
!9923 = !DILocation(line: 606, column: 6, scope: !9922)
!9924 = !DILocation(line: 606, column: 6, scope: !9914)
!9925 = !DILocation(line: 610, column: 39, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9914, file: !1473, line: 610, column: 6)
!9927 = !DILocation(line: 610, column: 6, scope: !9926)
!9928 = !DILocation(line: 610, column: 6, scope: !9914)
!9929 = !DILocation(line: 614, column: 39, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9914, file: !1473, line: 614, column: 6)
!9931 = !DILocation(line: 614, column: 6, scope: !9930)
!9932 = !DILocation(line: 614, column: 6, scope: !9914)
!9933 = !DILocation(line: 619, column: 40, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9914, file: !1473, line: 619, column: 6)
!9935 = !DILocation(line: 619, column: 6, scope: !9934)
!9936 = !DILocation(line: 619, column: 6, scope: !9914)
!9937 = !DILocation(line: 623, column: 10, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9914, file: !1473, line: 623, column: 6)
!9939 = !DILocation(line: 623, column: 6, scope: !9914)
!9940 = !DILocation(line: 624, column: 34, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9938, file: !1473, line: 623, column: 24)
!9942 = !DILocation(line: 624, column: 3, scope: !9941)
!9943 = !DILocation(line: 625, column: 2, scope: !9941)
!9944 = !DILocation(line: 632, column: 10, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9914, file: !1473, line: 632, column: 6)
!9946 = !DILocation(line: 632, column: 6, scope: !9914)
!9947 = !DILocation(line: 633, column: 34, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9945, file: !1473, line: 632, column: 32)
!9949 = !DILocation(line: 633, column: 3, scope: !9948)
!9950 = !DILocation(line: 634, column: 2, scope: !9948)
!9951 = !DILocation(line: 636, column: 10, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9914, file: !1473, line: 636, column: 6)
!9953 = !DILocation(line: 636, column: 6, scope: !9914)
!9954 = !DILocation(line: 637, column: 33, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9952, file: !1473, line: 636, column: 31)
!9956 = !DILocation(line: 637, column: 3, scope: !9955)
!9957 = !DILocation(line: 638, column: 2, scope: !9955)
!9958 = !DILocation(line: 640, column: 10, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9914, file: !1473, line: 640, column: 6)
!9960 = !DILocation(line: 640, column: 6, scope: !9914)
!9961 = !DILocation(line: 641, column: 33, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9959, file: !1473, line: 640, column: 32)
!9963 = !DILocation(line: 641, column: 3, scope: !9962)
!9964 = !DILocation(line: 642, column: 2, scope: !9962)
!9965 = !DILocation(line: 646, column: 32, scope: !9914)
!9966 = !DILocation(line: 646, column: 2, scope: !9914)
!9967 = !DILocation(line: 648, column: 2, scope: !9914)
!9968 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1473, file: !1473, line: 419, type: !1403, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9969)
!9969 = !{!9970, !9971, !9972, !9973, !9975, !9976, !9977, !9978}
!9970 = !DILocalVariable(name: "dev", arg: 1, scope: !9968, file: !1473, line: 419, type: !1378)
!9971 = !DILocalVariable(name: "cfg", arg: 2, scope: !9968, file: !1473, line: 420, type: !1405)
!9972 = !DILocalVariable(name: "config", scope: !9968, file: !1473, line: 422, type: !9851)
!9973 = !DILocalVariable(name: "data", scope: !9968, file: !1473, line: 423, type: !9974)
!9974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!9975 = !DILocalVariable(name: "parity", scope: !9968, file: !1473, line: 424, type: !6590)
!9976 = !DILocalVariable(name: "stopbits", scope: !9968, file: !1473, line: 425, type: !6590)
!9977 = !DILocalVariable(name: "databits", scope: !9968, file: !1473, line: 426, type: !6590)
!9978 = !DILocalVariable(name: "flowctrl", scope: !9968, file: !1473, line: 428, type: !6590)
!9979 = !DILocation(line: 0, scope: !9968)
!9980 = !DILocation(line: 422, column: 48, scope: !9968)
!9981 = !DILocation(line: 423, column: 38, scope: !9968)
!9982 = !DILocation(line: 424, column: 56, scope: !9968)
!9983 = !DILocation(line: 424, column: 51, scope: !9968)
!9984 = !DILocation(line: 424, column: 26, scope: !9968)
!9985 = !DILocation(line: 425, column: 60, scope: !9968)
!9986 = !DILocation(line: 425, column: 55, scope: !9968)
!9987 = !DILocation(line: 425, column: 28, scope: !9968)
!9988 = !DILocation(line: 426, column: 60, scope: !9968)
!9989 = !DILocation(line: 426, column: 55, scope: !9968)
!9990 = !DILocation(line: 426, column: 28, scope: !9968)
!9991 = !DILocation(line: 428, column: 58, scope: !9968)
!9992 = !DILocation(line: 428, column: 53, scope: !9968)
!9993 = !DILocation(line: 428, column: 28, scope: !9968)
!9994 = !DILocation(line: 431, column: 44, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 431, column: 6)
!9996 = !DILocation(line: 438, column: 22, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 437, column: 6)
!9998 = !DILocation(line: 437, column: 6, scope: !9968)
!9999 = !DILocation(line: 448, column: 6, scope: !9968)
!10000 = !DILocation(line: 465, column: 47, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 465, column: 6)
!10002 = !DILocation(line: 475, column: 21, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 475, column: 6)
!10004 = !DILocation(line: 475, column: 6, scope: !9968)
!10005 = !DILocation(line: 476, column: 8, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10007, file: !1473, line: 476, column: 7)
!10007 = distinct !DILexicalBlock(scope: !10003, file: !1473, line: 475, column: 49)
!10008 = !DILocation(line: 477, column: 34, scope: !10006)
!10009 = !DILocation(line: 476, column: 7, scope: !10007)
!10010 = !DILocation(line: 482, column: 27, scope: !9968)
!10011 = !DILocation(line: 482, column: 2, scope: !9968)
!10012 = !DILocation(line: 484, column: 16, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 484, column: 6)
!10014 = !DILocation(line: 484, column: 13, scope: !10013)
!10015 = !DILocation(line: 484, column: 6, scope: !9968)
!10016 = !DILocation(line: 485, column: 3, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10013, file: !1473, line: 484, column: 44)
!10018 = !DILocation(line: 486, column: 2, scope: !10017)
!10019 = !DILocation(line: 488, column: 18, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 488, column: 6)
!10021 = !DILocation(line: 488, column: 15, scope: !10020)
!10022 = !DILocation(line: 488, column: 6, scope: !9968)
!10023 = !DILocation(line: 489, column: 3, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !1473, line: 488, column: 48)
!10025 = !DILocation(line: 490, column: 2, scope: !10024)
!10026 = !DILocation(line: 492, column: 18, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 492, column: 6)
!10028 = !DILocation(line: 492, column: 15, scope: !10027)
!10029 = !DILocation(line: 492, column: 6, scope: !9968)
!10030 = !DILocation(line: 493, column: 3, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10027, file: !1473, line: 492, column: 48)
!10032 = !DILocation(line: 494, column: 2, scope: !10031)
!10033 = !DILocation(line: 496, column: 18, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 496, column: 6)
!10035 = !DILocation(line: 496, column: 15, scope: !10034)
!10036 = !DILocation(line: 496, column: 6, scope: !9968)
!10037 = !DILocation(line: 497, column: 3, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10034, file: !1473, line: 496, column: 46)
!10039 = !DILocation(line: 498, column: 2, scope: !10038)
!10040 = !DILocation(line: 500, column: 11, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !9968, file: !1473, line: 500, column: 6)
!10042 = !DILocation(line: 500, column: 29, scope: !10041)
!10043 = !DILocation(line: 500, column: 20, scope: !10041)
!10044 = !DILocation(line: 500, column: 6, scope: !9968)
!10045 = !DILocation(line: 501, column: 3, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10041, file: !1473, line: 500, column: 40)
!10047 = !DILocation(line: 502, column: 26, scope: !10046)
!10048 = !DILocation(line: 502, column: 19, scope: !10046)
!10049 = !DILocation(line: 503, column: 2, scope: !10046)
!10050 = !DILocation(line: 505, column: 26, scope: !9968)
!10051 = !DILocation(line: 505, column: 2, scope: !9968)
!10052 = !DILocation(line: 506, column: 2, scope: !9968)
!10053 = !DILocation(line: 507, column: 1, scope: !9968)
!10054 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1473, file: !1473, line: 509, type: !1416, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10055)
!10055 = !{!10056, !10057, !10058}
!10056 = !DILocalVariable(name: "dev", arg: 1, scope: !10054, file: !1473, line: 509, type: !1378)
!10057 = !DILocalVariable(name: "cfg", arg: 2, scope: !10054, file: !1473, line: 510, type: !1418)
!10058 = !DILocalVariable(name: "data", scope: !10054, file: !1473, line: 512, type: !9974)
!10059 = !DILocation(line: 0, scope: !10054)
!10060 = !DILocation(line: 512, column: 38, scope: !10054)
!10061 = !DILocation(line: 514, column: 24, scope: !10054)
!10062 = !DILocation(line: 514, column: 7, scope: !10054)
!10063 = !DILocation(line: 514, column: 16, scope: !10054)
!10064 = !DILocation(line: 515, column: 41, scope: !10054)
!10065 = !{i32 0, i32 1537}
!10066 = !DILocation(line: 515, column: 16, scope: !10054)
!10067 = !DILocation(line: 515, column: 7, scope: !10054)
!10068 = !DILocation(line: 515, column: 14, scope: !10054)
!10069 = !DILocation(line: 517, column: 3, scope: !10054)
!10070 = !{i32 0, i32 12289}
!10071 = !DILocation(line: 516, column: 19, scope: !10054)
!10072 = !DILocation(line: 516, column: 7, scope: !10054)
!10073 = !DILocation(line: 516, column: 17, scope: !10054)
!10074 = !DILocation(line: 519, column: 3, scope: !10054)
!10075 = !DILocation(line: 519, column: 33, scope: !10054)
!10076 = !DILocation(line: 518, column: 19, scope: !10054)
!10077 = !DILocation(line: 518, column: 7, scope: !10054)
!10078 = !DILocation(line: 518, column: 17, scope: !10054)
!10079 = !DILocation(line: 521, column: 3, scope: !10054)
!10080 = !{i32 0, i32 769}
!10081 = !DILocation(line: 520, column: 19, scope: !10054)
!10082 = !DILocation(line: 520, column: 7, scope: !10054)
!10083 = !DILocation(line: 520, column: 17, scope: !10054)
!10084 = !DILocation(line: 522, column: 2, scope: !10054)
!10085 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1473, file: !1473, line: 205, type: !10086, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10088)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!118, !1378}
!10088 = !{!10089, !10090}
!10089 = !DILocalVariable(name: "dev", arg: 1, scope: !10085, file: !1473, line: 205, type: !1378)
!10090 = !DILocalVariable(name: "config", scope: !10085, file: !1473, line: 207, type: !9851)
!10091 = !DILocation(line: 0, scope: !10085)
!10092 = !DILocation(line: 207, column: 48, scope: !10085)
!10093 = !DILocation(line: 209, column: 36, scope: !10085)
!10094 = !DILocation(line: 209, column: 9, scope: !10085)
!10095 = !DILocation(line: 209, column: 2, scope: !10085)
!10096 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1473, file: !1473, line: 270, type: !10097, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10099)
!10097 = !DISubroutineType(types: !10098)
!10098 = !{!1344, !118}
!10099 = !{!10100}
!10100 = !DILocalVariable(name: "parity", arg: 1, scope: !10096, file: !1473, line: 270, type: !118)
!10101 = !DILocation(line: 0, scope: !10096)
!10102 = !DILocation(line: 272, column: 2, scope: !10096)
!10103 = !DILocation(line: 281, column: 1, scope: !10096)
!10104 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1473, file: !1473, line: 220, type: !10086, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10105)
!10105 = !{!10106, !10107}
!10106 = !DILocalVariable(name: "dev", arg: 1, scope: !10104, file: !1473, line: 220, type: !1378)
!10107 = !DILocalVariable(name: "config", scope: !10104, file: !1473, line: 222, type: !9851)
!10108 = !DILocation(line: 0, scope: !10104)
!10109 = !DILocation(line: 222, column: 48, scope: !10104)
!10110 = !DILocation(line: 224, column: 44, scope: !10104)
!10111 = !DILocation(line: 224, column: 9, scope: !10104)
!10112 = !DILocation(line: 224, column: 2, scope: !10104)
!10113 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1473, file: !1473, line: 304, type: !10114, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!1358, !118}
!10116 = !{!10117}
!10117 = !DILocalVariable(name: "sb", arg: 1, scope: !10113, file: !1473, line: 304, type: !118)
!10118 = !DILocation(line: 0, scope: !10113)
!10119 = !DILocation(line: 306, column: 2, scope: !10113)
!10120 = !DILocation(line: 0, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10113, file: !1473, line: 306, column: 14)
!10122 = !DILocation(line: 323, column: 1, scope: !10113)
!10123 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1473, file: !1473, line: 235, type: !10086, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10124)
!10124 = !{!10125, !10126}
!10125 = !DILocalVariable(name: "dev", arg: 1, scope: !10123, file: !1473, line: 235, type: !1378)
!10126 = !DILocalVariable(name: "config", scope: !10123, file: !1473, line: 237, type: !9851)
!10127 = !DILocation(line: 0, scope: !10123)
!10128 = !DILocation(line: 237, column: 48, scope: !10123)
!10129 = !DILocation(line: 239, column: 39, scope: !10123)
!10130 = !DILocation(line: 239, column: 9, scope: !10123)
!10131 = !DILocation(line: 239, column: 2, scope: !10123)
!10132 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1473, file: !1473, line: 355, type: !10133, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10135)
!10133 = !DISubroutineType(types: !10134)
!10134 = !{!1351, !118, !118}
!10135 = !{!10136, !10137}
!10136 = !DILocalVariable(name: "db", arg: 1, scope: !10132, file: !1473, line: 355, type: !118)
!10137 = !DILocalVariable(name: "p", arg: 2, scope: !10132, file: !1473, line: 356, type: !118)
!10138 = !DILocation(line: 0, scope: !10132)
!10139 = !DILocation(line: 358, column: 2, scope: !10132)
!10140 = !DILocation(line: 384, column: 1, scope: !10132)
!10141 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1473, file: !1473, line: 250, type: !10086, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10142)
!10142 = !{!10143, !10144}
!10143 = !DILocalVariable(name: "dev", arg: 1, scope: !10141, file: !1473, line: 250, type: !1378)
!10144 = !DILocalVariable(name: "config", scope: !10141, file: !1473, line: 252, type: !9851)
!10145 = !DILocation(line: 0, scope: !10141)
!10146 = !DILocation(line: 252, column: 48, scope: !10141)
!10147 = !DILocation(line: 254, column: 40, scope: !10141)
!10148 = !DILocation(line: 254, column: 9, scope: !10141)
!10149 = !DILocation(line: 254, column: 2, scope: !10141)
!10150 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1473, file: !1473, line: 409, type: !10151, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10153)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!1364, !118}
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "fc", arg: 1, scope: !10150, file: !1473, line: 409, type: !118)
!10155 = !DILocation(line: 0, scope: !10150)
!10156 = !DILocation(line: 411, column: 9, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10150, file: !1473, line: 411, column: 6)
!10158 = !DILocation(line: 416, column: 1, scope: !10150)
!10159 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10160, file: !10160, line: 967, type: !10161, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10163)
!10160 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10161 = !DISubroutineType(types: !10162)
!10162 = !{!118, !1419}
!10163 = !{!10164}
!10164 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10159, file: !10160, line: 967, type: !1419)
!10165 = !DILocation(line: 0, scope: !10159)
!10166 = !DILocation(line: 969, column: 21, scope: !10159)
!10167 = !DILocation(line: 969, column: 3, scope: !10159)
!10168 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10160, file: !10160, line: 601, type: !10161, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10169)
!10169 = !{!10170}
!10170 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10168, file: !10160, line: 601, type: !1419)
!10171 = !DILocation(line: 0, scope: !10168)
!10172 = !DILocation(line: 603, column: 21, scope: !10168)
!10173 = !DILocation(line: 603, column: 3, scope: !10168)
!10174 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10160, file: !10160, line: 820, type: !10161, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10175)
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10174, file: !10160, line: 820, type: !1419)
!10177 = !DILocation(line: 0, scope: !10174)
!10178 = !DILocation(line: 822, column: 21, scope: !10174)
!10179 = !DILocation(line: 822, column: 3, scope: !10174)
!10180 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10160, file: !10160, line: 547, type: !10161, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10181)
!10181 = !{!10182}
!10182 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10180, file: !10160, line: 547, type: !1419)
!10183 = !DILocation(line: 0, scope: !10180)
!10184 = !DILocation(line: 549, column: 21, scope: !10180)
!10185 = !DILocation(line: 549, column: 3, scope: !10180)
!10186 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1473, file: !1473, line: 257, type: !10187, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10189)
!10187 = !DISubroutineType(types: !10188)
!10188 = !{!118, !1344}
!10189 = !{!10190}
!10190 = !DILocalVariable(name: "parity", arg: 1, scope: !10186, file: !1473, line: 257, type: !1344)
!10191 = !DILocation(line: 0, scope: !10186)
!10192 = !DILocation(line: 259, column: 2, scope: !10186)
!10193 = !DILocation(line: 268, column: 1, scope: !10186)
!10194 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1473, file: !1473, line: 283, type: !10195, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10197)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!118, !1358}
!10197 = !{!10198}
!10198 = !DILocalVariable(name: "sb", arg: 1, scope: !10194, file: !1473, line: 283, type: !1358)
!10199 = !DILocation(line: 0, scope: !10194)
!10200 = !DILocation(line: 285, column: 2, scope: !10194)
!10201 = !DILocation(line: 0, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10194, file: !1473, line: 285, column: 14)
!10203 = !DILocation(line: 302, column: 1, scope: !10194)
!10204 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1473, file: !1473, line: 325, type: !10205, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10207)
!10205 = !DISubroutineType(types: !10206)
!10206 = !{!118, !1351, !1344}
!10207 = !{!10208, !10209}
!10208 = !DILocalVariable(name: "db", arg: 1, scope: !10204, file: !1473, line: 325, type: !1351)
!10209 = !DILocalVariable(name: "p", arg: 2, scope: !10204, file: !1473, line: 326, type: !1344)
!10210 = !DILocation(line: 0, scope: !10204)
!10211 = !DILocation(line: 328, column: 2, scope: !10204)
!10212 = !DILocation(line: 353, column: 1, scope: !10204)
!10213 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1473, file: !1473, line: 393, type: !10214, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10216)
!10214 = !DISubroutineType(types: !10215)
!10215 = !{!118, !1364}
!10216 = !{!10217}
!10217 = !DILocalVariable(name: "fc", arg: 1, scope: !10213, file: !1473, line: 393, type: !1364)
!10218 = !DILocation(line: 0, scope: !10213)
!10219 = !DILocation(line: 395, column: 9, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10213, file: !1473, line: 395, column: 6)
!10221 = !DILocation(line: 400, column: 1, scope: !10213)
!10222 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10160, file: !10160, line: 424, type: !10223, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10225)
!10223 = !DISubroutineType(types: !10224)
!10224 = !{null, !1419}
!10225 = !{!10226}
!10226 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10222, file: !10160, line: 424, type: !1419)
!10227 = !DILocation(line: 0, scope: !10222)
!10228 = !DILocation(line: 426, column: 3, scope: !10222)
!10229 = !DILocation(line: 427, column: 1, scope: !10222)
!10230 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1473, file: !1473, line: 197, type: !10231, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10233)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{null, !1378, !118}
!10233 = !{!10234, !10235, !10236}
!10234 = !DILocalVariable(name: "dev", arg: 1, scope: !10230, file: !1473, line: 197, type: !1378)
!10235 = !DILocalVariable(name: "parity", arg: 2, scope: !10230, file: !1473, line: 198, type: !118)
!10236 = !DILocalVariable(name: "config", scope: !10230, file: !1473, line: 200, type: !9851)
!10237 = !DILocation(line: 0, scope: !10230)
!10238 = !DILocation(line: 200, column: 48, scope: !10230)
!10239 = !DILocation(line: 202, column: 29, scope: !10230)
!10240 = !DILocation(line: 202, column: 2, scope: !10230)
!10241 = !DILocation(line: 203, column: 1, scope: !10230)
!10242 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1473, file: !1473, line: 212, type: !10231, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10243)
!10243 = !{!10244, !10245, !10246}
!10244 = !DILocalVariable(name: "dev", arg: 1, scope: !10242, file: !1473, line: 212, type: !1378)
!10245 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10242, file: !1473, line: 213, type: !118)
!10246 = !DILocalVariable(name: "config", scope: !10242, file: !1473, line: 215, type: !9851)
!10247 = !DILocation(line: 0, scope: !10242)
!10248 = !DILocation(line: 215, column: 48, scope: !10242)
!10249 = !DILocation(line: 217, column: 37, scope: !10242)
!10250 = !DILocation(line: 217, column: 2, scope: !10242)
!10251 = !DILocation(line: 218, column: 1, scope: !10242)
!10252 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1473, file: !1473, line: 227, type: !10231, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10253)
!10253 = !{!10254, !10255, !10256}
!10254 = !DILocalVariable(name: "dev", arg: 1, scope: !10252, file: !1473, line: 227, type: !1378)
!10255 = !DILocalVariable(name: "databits", arg: 2, scope: !10252, file: !1473, line: 228, type: !118)
!10256 = !DILocalVariable(name: "config", scope: !10252, file: !1473, line: 230, type: !9851)
!10257 = !DILocation(line: 0, scope: !10252)
!10258 = !DILocation(line: 230, column: 48, scope: !10252)
!10259 = !DILocation(line: 232, column: 32, scope: !10252)
!10260 = !DILocation(line: 232, column: 2, scope: !10252)
!10261 = !DILocation(line: 233, column: 1, scope: !10252)
!10262 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1473, file: !1473, line: 242, type: !10231, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10263)
!10263 = !{!10264, !10265, !10266}
!10264 = !DILocalVariable(name: "dev", arg: 1, scope: !10262, file: !1473, line: 242, type: !1378)
!10265 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10262, file: !1473, line: 243, type: !118)
!10266 = !DILocalVariable(name: "config", scope: !10262, file: !1473, line: 245, type: !9851)
!10267 = !DILocation(line: 0, scope: !10262)
!10268 = !DILocation(line: 245, column: 48, scope: !10262)
!10269 = !DILocation(line: 247, column: 33, scope: !10262)
!10270 = !DILocation(line: 247, column: 2, scope: !10262)
!10271 = !DILocation(line: 248, column: 1, scope: !10262)
!10272 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1473, file: !1473, line: 107, type: !10231, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10273)
!10273 = !{!10274, !10275, !10276, !10277, !10278}
!10274 = !DILocalVariable(name: "dev", arg: 1, scope: !10272, file: !1473, line: 107, type: !1378)
!10275 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10272, file: !1473, line: 107, type: !118)
!10276 = !DILocalVariable(name: "config", scope: !10272, file: !1473, line: 109, type: !9851)
!10277 = !DILocalVariable(name: "data", scope: !10272, file: !1473, line: 110, type: !9974)
!10278 = !DILocalVariable(name: "clock_rate", scope: !10272, file: !1473, line: 112, type: !118)
!10279 = !DILocation(line: 0, scope: !10272)
!10280 = !DILocation(line: 109, column: 48, scope: !10272)
!10281 = !DILocation(line: 110, column: 38, scope: !10272)
!10282 = !DILocation(line: 112, column: 2, scope: !10272)
!10283 = !DILocation(line: 123, column: 36, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !1473, line: 123, column: 7)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !1473, line: 122, column: 9)
!10286 = distinct !DILexicalBlock(scope: !10272, file: !1473, line: 115, column: 6)
!10287 = !DILocation(line: 124, column: 42, scope: !10284)
!10288 = !DILocation(line: 123, column: 7, scope: !10284)
!10289 = !DILocation(line: 125, column: 22, scope: !10284)
!10290 = !DILocation(line: 123, column: 7, scope: !10285)
!10291 = !DILocation(line: 126, column: 4, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !1473, line: 126, column: 4)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !1473, line: 126, column: 4)
!10294 = distinct !DILexicalBlock(scope: !10295, file: !1473, line: 126, column: 4)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !1473, line: 126, column: 4)
!10296 = distinct !DILexicalBlock(scope: !10284, file: !1473, line: 125, column: 27)
!10297 = !DILocation(line: 127, column: 4, scope: !10296)
!10298 = !DILocation(line: 176, column: 36, scope: !10272)
!10299 = !DILocation(line: 176, column: 3, scope: !10272)
!10300 = !DILocation(line: 179, column: 32, scope: !10272)
!10301 = !DILocation(line: 180, column: 10, scope: !10272)
!10302 = !DILocation(line: 179, column: 3, scope: !10272)
!10303 = !DILocation(line: 189, column: 3, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !1473, line: 189, column: 3)
!10305 = distinct !DILexicalBlock(scope: !10272, file: !1473, line: 189, column: 3)
!10306 = !DILocation(line: 189, column: 3, scope: !10305)
!10307 = !DILocation(line: 189, column: 3, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10304, file: !1473, line: 189, column: 3)
!10309 = !DILocation(line: 195, column: 1, scope: !10272)
!10310 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10160, file: !10160, line: 410, type: !10223, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10311)
!10311 = !{!10312}
!10312 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10310, file: !10160, line: 410, type: !1419)
!10313 = !DILocation(line: 0, scope: !10310)
!10314 = !DILocation(line: 412, column: 3, scope: !10310)
!10315 = !DILocation(line: 413, column: 1, scope: !10310)
!10316 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !833, file: !833, line: 216, type: !1452, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10317)
!10317 = !{!10318, !10319, !10320, !10321}
!10318 = !DILocalVariable(name: "dev", arg: 1, scope: !10316, file: !833, line: 216, type: !1378)
!10319 = !DILocalVariable(name: "sys", arg: 2, scope: !10316, file: !833, line: 217, type: !926)
!10320 = !DILocalVariable(name: "rate", arg: 3, scope: !10316, file: !833, line: 218, type: !882)
!10321 = !DILocalVariable(name: "api", scope: !10316, file: !833, line: 220, type: !1430)
!10322 = !DILocation(line: 0, scope: !10316)
!10323 = !DILocation(line: 221, column: 49, scope: !10316)
!10324 = !DILocation(line: 223, column: 11, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10316, file: !833, line: 223, column: 6)
!10326 = !DILocation(line: 223, column: 20, scope: !10325)
!10327 = !DILocation(line: 223, column: 6, scope: !10316)
!10328 = !DILocation(line: 227, column: 9, scope: !10316)
!10329 = !DILocation(line: 227, column: 2, scope: !10316)
!10330 = !DILocation(line: 228, column: 1, scope: !10316)
!10331 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6072, file: !6072, line: 175, type: !6073, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10332)
!10332 = !{!10333}
!10333 = !DILocalVariable(name: "level", arg: 1, scope: !10331, file: !6072, line: 175, type: !119)
!10334 = !DILocation(line: 0, scope: !10331)
!10335 = !DILocation(line: 177, column: 2, scope: !10331)
!10336 = !DILocation(line: 189, column: 1, scope: !10331)
!10337 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10160, file: !10160, line: 615, type: !10338, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10340)
!10338 = !DISubroutineType(types: !10339)
!10339 = !{null, !1419, !118}
!10340 = !{!10341, !10342}
!10341 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10337, file: !10160, line: 615, type: !1419)
!10342 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10337, file: !10160, line: 615, type: !118)
!10343 = !DILocation(line: 0, scope: !10337)
!10344 = !DILocation(line: 617, column: 3, scope: !10337)
!10345 = !DILocation(line: 618, column: 1, scope: !10337)
!10346 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10160, file: !10160, line: 1020, type: !10347, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10349)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{null, !1419, !118, !118, !118}
!10349 = !{!10350, !10351, !10352, !10353}
!10350 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10346, file: !10160, line: 1020, type: !1419)
!10351 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10346, file: !10160, line: 1020, type: !118)
!10352 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10346, file: !10160, line: 1020, type: !118)
!10353 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10346, file: !10160, line: 1021, type: !118)
!10354 = !DILocation(line: 0, scope: !10346)
!10355 = !DILocation(line: 1029, column: 30, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10357, file: !10160, line: 1028, column: 3)
!10357 = distinct !DILexicalBlock(scope: !10346, file: !10160, line: 1023, column: 7)
!10358 = !DILocation(line: 1029, column: 19, scope: !10356)
!10359 = !DILocation(line: 1029, column: 13, scope: !10356)
!10360 = !DILocation(line: 1029, column: 17, scope: !10356)
!10361 = !DILocation(line: 1031, column: 1, scope: !10346)
!10362 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10160, file: !10160, line: 949, type: !10338, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10363)
!10363 = !{!10364, !10365}
!10364 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !10160, line: 949, type: !1419)
!10365 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10362, file: !10160, line: 949, type: !118)
!10366 = !DILocation(line: 0, scope: !10362)
!10367 = !DILocation(line: 951, column: 3, scope: !10362)
!10368 = !DILocation(line: 952, column: 1, scope: !10362)
!10369 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10160, file: !10160, line: 588, type: !10338, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10370)
!10370 = !{!10371, !10372}
!10371 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10369, file: !10160, line: 588, type: !1419)
!10372 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10369, file: !10160, line: 588, type: !118)
!10373 = !DILocation(line: 0, scope: !10369)
!10374 = !DILocation(line: 590, column: 3, scope: !10369)
!10375 = !DILocation(line: 591, column: 1, scope: !10369)
!10376 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10160, file: !10160, line: 805, type: !10338, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10377)
!10377 = !{!10378, !10379}
!10378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10376, file: !10160, line: 805, type: !1419)
!10379 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10376, file: !10160, line: 805, type: !118)
!10380 = !DILocation(line: 0, scope: !10376)
!10381 = !DILocation(line: 807, column: 3, scope: !10376)
!10382 = !DILocation(line: 808, column: 1, scope: !10376)
!10383 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10160, file: !10160, line: 532, type: !10338, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10384)
!10384 = !{!10385, !10386}
!10385 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10383, file: !10160, line: 532, type: !1419)
!10386 = !DILocalVariable(name: "Parity", arg: 2, scope: !10383, file: !10160, line: 532, type: !118)
!10387 = !DILocation(line: 0, scope: !10383)
!10388 = !DILocation(line: 534, column: 3, scope: !10383)
!10389 = !DILocation(line: 535, column: 1, scope: !10383)
!10390 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10160, file: !10160, line: 1770, type: !10161, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10391)
!10391 = !{!10392}
!10392 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10390, file: !10160, line: 1770, type: !1419)
!10393 = !DILocation(line: 0, scope: !10390)
!10394 = !DILocation(line: 1772, column: 11, scope: !10390)
!10395 = !DILocation(line: 1772, column: 46, scope: !10390)
!10396 = !DILocation(line: 1772, column: 3, scope: !10390)
!10397 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10160, file: !10160, line: 1737, type: !10161, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10398)
!10398 = !{!10399}
!10399 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10397, file: !10160, line: 1737, type: !1419)
!10400 = !DILocation(line: 0, scope: !10397)
!10401 = !DILocation(line: 1739, column: 11, scope: !10397)
!10402 = !DILocation(line: 1739, column: 3, scope: !10397)
!10403 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10160, file: !10160, line: 1748, type: !10161, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10404)
!10404 = !{!10405}
!10405 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10403, file: !10160, line: 1748, type: !1419)
!10406 = !DILocation(line: 0, scope: !10403)
!10407 = !DILocation(line: 1750, column: 11, scope: !10403)
!10408 = !DILocation(line: 1750, column: 45, scope: !10403)
!10409 = !DILocation(line: 1750, column: 3, scope: !10403)
!10410 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10160, file: !10160, line: 1827, type: !10161, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10411)
!10411 = !{!10412}
!10412 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10410, file: !10160, line: 1827, type: !1419)
!10413 = !DILocation(line: 0, scope: !10410)
!10414 = !DILocation(line: 1829, column: 11, scope: !10410)
!10415 = !DILocation(line: 1829, column: 46, scope: !10410)
!10416 = !DILocation(line: 1829, column: 3, scope: !10410)
!10417 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10160, file: !10160, line: 1992, type: !10223, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10418)
!10418 = !{!10419}
!10419 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10417, file: !10160, line: 1992, type: !1419)
!10420 = !DILocation(line: 0, scope: !10417)
!10421 = !DILocation(line: 1994, column: 3, scope: !10417)
!10422 = !DILocation(line: 1995, column: 1, scope: !10417)
!10423 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10160, file: !10160, line: 1934, type: !10223, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10424)
!10424 = !{!10425, !10426}
!10425 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10423, file: !10160, line: 1934, type: !1419)
!10426 = !DILocalVariable(name: "tmpreg", scope: !10423, file: !10160, line: 1936, type: !314)
!10427 = !DILocation(line: 0, scope: !10423)
!10428 = !DILocation(line: 1936, column: 3, scope: !10423)
!10429 = !DILocation(line: 1936, column: 17, scope: !10423)
!10430 = !DILocation(line: 1937, column: 20, scope: !10423)
!10431 = !DILocation(line: 1937, column: 10, scope: !10423)
!10432 = !DILocation(line: 1938, column: 10, scope: !10423)
!10433 = !DILocation(line: 1939, column: 20, scope: !10423)
!10434 = !DILocation(line: 1939, column: 10, scope: !10423)
!10435 = !DILocation(line: 1940, column: 10, scope: !10423)
!10436 = !DILocation(line: 1941, column: 1, scope: !10423)
!10437 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10160, file: !10160, line: 1877, type: !10223, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10438)
!10438 = !{!10439, !10440}
!10439 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10437, file: !10160, line: 1877, type: !1419)
!10440 = !DILocalVariable(name: "tmpreg", scope: !10437, file: !10160, line: 1879, type: !314)
!10441 = !DILocation(line: 0, scope: !10437)
!10442 = !DILocation(line: 1879, column: 3, scope: !10437)
!10443 = !DILocation(line: 1879, column: 17, scope: !10437)
!10444 = !DILocation(line: 1880, column: 20, scope: !10437)
!10445 = !DILocation(line: 1880, column: 10, scope: !10437)
!10446 = !DILocation(line: 1881, column: 10, scope: !10437)
!10447 = !DILocation(line: 1882, column: 20, scope: !10437)
!10448 = !DILocation(line: 1882, column: 10, scope: !10437)
!10449 = !DILocation(line: 1883, column: 10, scope: !10437)
!10450 = !DILocation(line: 1884, column: 1, scope: !10437)
!10451 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10160, file: !10160, line: 1896, type: !10223, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10452)
!10452 = !{!10453, !10454}
!10453 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10451, file: !10160, line: 1896, type: !1419)
!10454 = !DILocalVariable(name: "tmpreg", scope: !10451, file: !10160, line: 1898, type: !314)
!10455 = !DILocation(line: 0, scope: !10451)
!10456 = !DILocation(line: 1898, column: 3, scope: !10451)
!10457 = !DILocation(line: 1898, column: 17, scope: !10451)
!10458 = !DILocation(line: 1899, column: 20, scope: !10451)
!10459 = !DILocation(line: 1899, column: 10, scope: !10451)
!10460 = !DILocation(line: 1900, column: 10, scope: !10451)
!10461 = !DILocation(line: 1901, column: 20, scope: !10451)
!10462 = !DILocation(line: 1901, column: 10, scope: !10451)
!10463 = !DILocation(line: 1902, column: 10, scope: !10451)
!10464 = !DILocation(line: 1903, column: 1, scope: !10451)
!10465 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10160, file: !10160, line: 1915, type: !10223, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10466)
!10466 = !{!10467, !10468}
!10467 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10465, file: !10160, line: 1915, type: !1419)
!10468 = !DILocalVariable(name: "tmpreg", scope: !10465, file: !10160, line: 1917, type: !314)
!10469 = !DILocation(line: 0, scope: !10465)
!10470 = !DILocation(line: 1917, column: 3, scope: !10465)
!10471 = !DILocation(line: 1917, column: 17, scope: !10465)
!10472 = !DILocation(line: 1918, column: 20, scope: !10465)
!10473 = !DILocation(line: 1918, column: 10, scope: !10465)
!10474 = !DILocation(line: 1919, column: 10, scope: !10465)
!10475 = !DILocation(line: 1920, column: 20, scope: !10465)
!10476 = !DILocation(line: 1920, column: 10, scope: !10465)
!10477 = !DILocation(line: 1921, column: 10, scope: !10465)
!10478 = !DILocation(line: 1922, column: 1, scope: !10465)
!10479 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10160, file: !10160, line: 1814, type: !10161, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10480)
!10480 = !{!10481}
!10481 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10479, file: !10160, line: 1814, type: !1419)
!10482 = !DILocation(line: 0, scope: !10479)
!10483 = !DILocation(line: 1816, column: 11, scope: !10479)
!10484 = !DILocation(line: 1816, column: 46, scope: !10479)
!10485 = !DILocation(line: 1816, column: 3, scope: !10479)
!10486 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10160, file: !10160, line: 2426, type: !10487, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10489)
!10487 = !DISubroutineType(types: !10488)
!10488 = !{null, !1419, !185}
!10489 = !{!10490, !10491}
!10490 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10486, file: !10160, line: 2426, type: !1419)
!10491 = !DILocalVariable(name: "Value", arg: 2, scope: !10486, file: !10160, line: 2426, type: !185)
!10492 = !DILocation(line: 0, scope: !10486)
!10493 = !DILocation(line: 2428, column: 16, scope: !10486)
!10494 = !DILocation(line: 2428, column: 11, scope: !10486)
!10495 = !DILocation(line: 2428, column: 14, scope: !10486)
!10496 = !DILocation(line: 2429, column: 1, scope: !10486)
!10497 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10160, file: !10160, line: 1792, type: !10161, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10498)
!10498 = !{!10499}
!10499 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10497, file: !10160, line: 1792, type: !1419)
!10500 = !DILocation(line: 0, scope: !10497)
!10501 = !DILocation(line: 1794, column: 11, scope: !10497)
!10502 = !DILocation(line: 1794, column: 47, scope: !10497)
!10503 = !DILocation(line: 1794, column: 3, scope: !10497)
!10504 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10160, file: !10160, line: 2403, type: !10505, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10507)
!10505 = !DISubroutineType(types: !10506)
!10506 = !{!185, !1419}
!10507 = !{!10508}
!10508 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10504, file: !10160, line: 2403, type: !1419)
!10509 = !DILocation(line: 0, scope: !10504)
!10510 = !DILocation(line: 2405, column: 20, scope: !10504)
!10511 = !DILocation(line: 2405, column: 10, scope: !10504)
!10512 = !DILocation(line: 2405, column: 3, scope: !10504)
!10513 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1473, file: !1473, line: 1583, type: !1399, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10514)
!10514 = !{!10515, !10516, !10517, !10518, !10519, !10520}
!10515 = !DILocalVariable(name: "dev", arg: 1, scope: !10513, file: !1473, line: 1583, type: !1378)
!10516 = !DILocalVariable(name: "config", scope: !10513, file: !1473, line: 1585, type: !9851)
!10517 = !DILocalVariable(name: "data", scope: !10513, file: !1473, line: 1586, type: !9974)
!10518 = !DILocalVariable(name: "ll_parity", scope: !10513, file: !1473, line: 1587, type: !118)
!10519 = !DILocalVariable(name: "ll_datawidth", scope: !10513, file: !1473, line: 1588, type: !118)
!10520 = !DILocalVariable(name: "err", scope: !10513, file: !1473, line: 1589, type: !119)
!10521 = !DILocation(line: 0, scope: !10513)
!10522 = !DILocation(line: 1585, column: 48, scope: !10513)
!10523 = !DILocation(line: 1586, column: 38, scope: !10513)
!10524 = !DILocation(line: 1591, column: 2, scope: !10513)
!10525 = !DILocation(line: 1593, column: 29, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10513, file: !1473, line: 1593, column: 6)
!10527 = !DILocation(line: 1593, column: 7, scope: !10526)
!10528 = !DILocation(line: 1593, column: 6, scope: !10513)
!10529 = !DILocation(line: 1594, column: 3, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !1473, line: 1594, column: 3)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1473, line: 1594, column: 3)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !1473, line: 1594, column: 3)
!10533 = distinct !DILexicalBlock(scope: !10534, file: !1473, line: 1594, column: 3)
!10534 = distinct !DILexicalBlock(scope: !10526, file: !1473, line: 1593, column: 37)
!10535 = !DILocation(line: 1595, column: 3, scope: !10534)
!10536 = !DILocation(line: 1599, column: 31, scope: !10513)
!10537 = !DILocation(line: 1599, column: 71, scope: !10513)
!10538 = !DILocation(line: 1599, column: 8, scope: !10513)
!10539 = !DILocation(line: 1600, column: 10, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10513, file: !1473, line: 1600, column: 6)
!10541 = !DILocation(line: 1600, column: 6, scope: !10513)
!10542 = !DILocation(line: 1601, column: 3, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10544, file: !1473, line: 1601, column: 3)
!10544 = distinct !DILexicalBlock(scope: !10545, file: !1473, line: 1601, column: 3)
!10545 = distinct !DILexicalBlock(scope: !10546, file: !1473, line: 1601, column: 3)
!10546 = distinct !DILexicalBlock(scope: !10547, file: !1473, line: 1601, column: 3)
!10547 = distinct !DILexicalBlock(scope: !10540, file: !1473, line: 1600, column: 16)
!10548 = !DILocation(line: 1602, column: 3, scope: !10547)
!10549 = !DILocation(line: 1616, column: 36, scope: !10513)
!10550 = !DILocation(line: 1616, column: 8, scope: !10513)
!10551 = !DILocation(line: 1617, column: 10, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10513, file: !1473, line: 1617, column: 6)
!10553 = !DILocation(line: 1617, column: 6, scope: !10513)
!10554 = !DILocation(line: 1621, column: 27, scope: !10513)
!10555 = !DILocation(line: 1621, column: 2, scope: !10513)
!10556 = !DILocation(line: 1624, column: 40, scope: !10513)
!10557 = !DILocation(line: 1624, column: 2, scope: !10513)
!10558 = !DILocation(line: 1630, column: 14, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10513, file: !1473, line: 1630, column: 6)
!10560 = !DILocation(line: 1630, column: 6, scope: !10513)
!10561 = !DILocation(line: 1640, column: 4, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !1473, line: 1640, column: 4)
!10563 = distinct !DILexicalBlock(scope: !10564, file: !1473, line: 1640, column: 4)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !1473, line: 1640, column: 4)
!10565 = distinct !DILexicalBlock(scope: !10566, file: !1473, line: 1640, column: 4)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !1473, line: 1639, column: 28)
!10567 = distinct !DILexicalBlock(scope: !10568, file: !1473, line: 1639, column: 7)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !1473, line: 1638, column: 9)
!10569 = distinct !DILexicalBlock(scope: !10559, file: !1473, line: 1634, column: 13)
!10570 = !DILocation(line: 0, scope: !10559)
!10571 = !DILocation(line: 1649, column: 35, scope: !10513)
!10572 = !DILocation(line: 1649, column: 2, scope: !10513)
!10573 = !DILocation(line: 1654, column: 14, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10513, file: !1473, line: 1654, column: 6)
!10575 = !DILocation(line: 1654, column: 6, scope: !10513)
!10576 = !DILocation(line: 1655, column: 3, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10574, file: !1473, line: 1654, column: 31)
!10578 = !DILocation(line: 1656, column: 2, scope: !10577)
!10579 = !DILocation(line: 1659, column: 37, scope: !10513)
!10580 = !DILocation(line: 1659, column: 2, scope: !10513)
!10581 = !DILocation(line: 1662, column: 14, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10513, file: !1473, line: 1662, column: 6)
!10583 = !DILocation(line: 1662, column: 6, scope: !10513)
!10584 = !DILocation(line: 1663, column: 37, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10582, file: !1473, line: 1662, column: 27)
!10586 = !DILocation(line: 1663, column: 3, scope: !10585)
!10587 = !DILocation(line: 1664, column: 2, scope: !10585)
!10588 = !DILocation(line: 1684, column: 26, scope: !10513)
!10589 = !DILocation(line: 1684, column: 2, scope: !10513)
!10590 = !DILocation(line: 1722, column: 2, scope: !10513)
!10591 = !DILocation(line: 1724, column: 1, scope: !10513)
!10592 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1473, file: !1473, line: 651, type: !10593, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10595)
!10593 = !DISubroutineType(types: !10594)
!10594 = !{null, !1378}
!10595 = !{!10596, !10597, !10598}
!10596 = !DILocalVariable(name: "dev", arg: 1, scope: !10592, file: !1473, line: 651, type: !1378)
!10597 = !DILocalVariable(name: "data", scope: !10592, file: !1473, line: 653, type: !9974)
!10598 = !DILocalVariable(name: "clk", scope: !10592, file: !1473, line: 654, type: !10599)
!10599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1378)
!10600 = !DILocation(line: 0, scope: !10592)
!10601 = !DILocation(line: 653, column: 38, scope: !10592)
!10602 = !DILocation(line: 656, column: 8, scope: !10592)
!10603 = !DILocation(line: 656, column: 14, scope: !10592)
!10604 = !DILocation(line: 657, column: 1, scope: !10592)
!10605 = distinct !DISubprogram(name: "device_is_ready", scope: !8970, file: !8970, line: 47, type: !10606, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!345, !1378}
!10608 = !{!10609}
!10609 = !DILocalVariable(name: "dev", arg: 1, scope: !10605, file: !8970, line: 47, type: !1378)
!10610 = !DILocation(line: 0, scope: !10605)
!10611 = !DILocation(line: 55, column: 2, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10605, file: !8970, line: 55, column: 2)
!10613 = !{i64 2155045366}
!10614 = !DILocation(line: 56, column: 9, scope: !10605)
!10615 = !DILocation(line: 56, column: 2, scope: !10605)
!10616 = distinct !DISubprogram(name: "clock_control_on", scope: !833, file: !833, line: 123, type: !1437, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10617)
!10617 = !{!10618, !10619, !10620}
!10618 = !DILocalVariable(name: "dev", arg: 1, scope: !10616, file: !833, line: 123, type: !1378)
!10619 = !DILocalVariable(name: "sys", arg: 2, scope: !10616, file: !833, line: 124, type: !926)
!10620 = !DILocalVariable(name: "api", scope: !10616, file: !833, line: 126, type: !1430)
!10621 = !DILocation(line: 0, scope: !10616)
!10622 = !DILocation(line: 127, column: 49, scope: !10616)
!10623 = !DILocation(line: 129, column: 14, scope: !10616)
!10624 = !DILocation(line: 129, column: 9, scope: !10616)
!10625 = !DILocation(line: 129, column: 2, scope: !10616)
!10626 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1513, file: !1513, line: 342, type: !10627, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10629)
!10627 = !DISubroutineType(types: !10628)
!10628 = !{!119, !1510, !185}
!10629 = !{!10630, !10631, !10632, !10633}
!10630 = !DILocalVariable(name: "config", arg: 1, scope: !10626, file: !1513, line: 342, type: !1510)
!10631 = !DILocalVariable(name: "id", arg: 2, scope: !10626, file: !1513, line: 343, type: !185)
!10632 = !DILocalVariable(name: "ret", scope: !10626, file: !1513, line: 345, type: !119)
!10633 = !DILocalVariable(name: "state", scope: !10626, file: !1513, line: 346, type: !1516)
!10634 = !DILocation(line: 0, scope: !10626)
!10635 = !DILocation(line: 346, column: 2, scope: !10626)
!10636 = !DILocation(line: 348, column: 8, scope: !10626)
!10637 = !DILocation(line: 349, column: 10, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10626, file: !1513, line: 349, column: 6)
!10639 = !DILocation(line: 349, column: 6, scope: !10626)
!10640 = !DILocation(line: 353, column: 44, scope: !10626)
!10641 = !DILocation(line: 353, column: 9, scope: !10626)
!10642 = !DILocation(line: 353, column: 2, scope: !10626)
!10643 = !DILocation(line: 354, column: 1, scope: !10626)
!10644 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10160, file: !10160, line: 497, type: !10338, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10645)
!10645 = !{!10646, !10647, !10648}
!10646 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10644, file: !10160, line: 497, type: !1419)
!10647 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10644, file: !10160, line: 497, type: !118)
!10648 = !DILocalVariable(name: "val", scope: !10649, file: !10160, line: 499, type: !118)
!10649 = distinct !DILexicalBlock(scope: !10644, file: !10160, line: 499, column: 3)
!10650 = !DILocation(line: 0, scope: !10644)
!10651 = !DILocation(line: 499, column: 3, scope: !10649)
!10652 = !DILocalVariable(name: "addr", arg: 1, scope: !10653, file: !6315, line: 476, type: !1469)
!10653 = distinct !DISubprogram(name: "__LDREXW", scope: !6315, file: !6315, line: 476, type: !10654, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10656)
!10654 = !DISubroutineType(types: !10655)
!10655 = !{!118, !1469}
!10656 = !{!10652, !10657}
!10657 = !DILocalVariable(name: "result", scope: !10653, file: !6315, line: 478, type: !118)
!10658 = !DILocation(line: 0, scope: !10653, inlinedAt: !10659)
!10659 = distinct !DILocation(line: 499, column: 3, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10649, file: !10160, line: 499, column: 3)
!10661 = !DILocation(line: 480, column: 4, scope: !10653, inlinedAt: !10659)
!10662 = !{i64 3531346}
!10663 = !DILocation(line: 499, column: 3, scope: !10660)
!10664 = !DILocation(line: 0, scope: !10649)
!10665 = !DILocalVariable(name: "value", arg: 1, scope: !10666, file: !6315, line: 527, type: !118)
!10666 = distinct !DISubprogram(name: "__STREXW", scope: !6315, file: !6315, line: 527, type: !10667, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10669)
!10667 = !DISubroutineType(types: !10668)
!10668 = !{!118, !118, !1469}
!10669 = !{!10665, !10670, !10671}
!10670 = !DILocalVariable(name: "addr", arg: 2, scope: !10666, file: !6315, line: 527, type: !1469)
!10671 = !DILocalVariable(name: "result", scope: !10666, file: !6315, line: 529, type: !118)
!10672 = !DILocation(line: 0, scope: !10666, inlinedAt: !10673)
!10673 = distinct !DILocation(line: 499, column: 3, scope: !10649)
!10674 = !DILocation(line: 531, column: 4, scope: !10666, inlinedAt: !10673)
!10675 = !{i64 3532782}
!10676 = distinct !{!10676, !10651, !10651}
!10677 = !DILocation(line: 500, column: 1, scope: !10644)
!10678 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10160, file: !10160, line: 850, type: !10347, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10679)
!10679 = !{!10680, !10681, !10682, !10683}
!10680 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10678, file: !10160, line: 850, type: !1419)
!10681 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10678, file: !10160, line: 850, type: !118)
!10682 = !DILocalVariable(name: "Parity", arg: 3, scope: !10678, file: !10160, line: 850, type: !118)
!10683 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10678, file: !10160, line: 851, type: !118)
!10684 = !DILocation(line: 0, scope: !10678)
!10685 = !DILocation(line: 853, column: 3, scope: !10678)
!10686 = !DILocation(line: 854, column: 3, scope: !10678)
!10687 = !DILocation(line: 855, column: 1, scope: !10678)
!10688 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10160, file: !10160, line: 1337, type: !10223, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10689)
!10689 = !{!10690}
!10690 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10688, file: !10160, line: 1337, type: !1419)
!10691 = !DILocation(line: 0, scope: !10688)
!10692 = !DILocation(line: 1339, column: 3, scope: !10688)
!10693 = !DILocation(line: 1340, column: 1, scope: !10688)
!10694 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1513, file: !1513, line: 316, type: !10695, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10697)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{!119, !1510, !1516}
!10697 = !{!10698, !10699, !10700}
!10698 = !DILocalVariable(name: "config", arg: 1, scope: !10694, file: !1513, line: 317, type: !1510)
!10699 = !DILocalVariable(name: "state", arg: 2, scope: !10694, file: !1513, line: 318, type: !1516)
!10700 = !DILocalVariable(name: "reg", scope: !10694, file: !1513, line: 320, type: !22)
!10701 = !DILocation(line: 0, scope: !10694)
!10702 = !DILocation(line: 329, column: 39, scope: !10694)
!10703 = !DILocation(line: 329, column: 52, scope: !10694)
!10704 = !DILocation(line: 329, column: 9, scope: !10694)
!10705 = !DILocation(line: 329, column: 2, scope: !10694)
!10706 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !10606, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10707)
!10707 = !{!10708}
!10708 = !DILocalVariable(name: "dev", arg: 1, scope: !10706, file: !334, line: 730, type: !1378)
!10709 = !DILocation(line: 0, scope: !10706)
!10710 = !DILocation(line: 732, column: 9, scope: !10706)
!10711 = !DILocation(line: 732, column: 2, scope: !10706)
!10712 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1634, file: !1634, line: 270, type: !1640, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10713)
!10713 = !{!10714}
!10714 = !DILocalVariable(name: "dev", arg: 1, scope: !10712, file: !1634, line: 270, type: !1642)
!10715 = !DILocation(line: 0, scope: !10712)
!10716 = !DILocation(line: 274, column: 2, scope: !10712)
!10717 = !DILocation(line: 275, column: 12, scope: !10712)
!10718 = !DILocation(line: 276, column: 15, scope: !10712)
!10719 = !DILocation(line: 277, column: 16, scope: !10712)
!10720 = !DILocation(line: 278, column: 15, scope: !10712)
!10721 = !DILocation(line: 279, column: 16, scope: !10712)
!10722 = !DILocation(line: 282, column: 2, scope: !10712)
!10723 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6355, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10724)
!10724 = !{!10725, !10726}
!10725 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10723, file: !533, line: 1814, type: !789)
!10726 = !DILocalVariable(name: "priority", arg: 2, scope: !10723, file: !533, line: 1814, type: !118)
!10727 = !DILocation(line: 0, scope: !10723)
!10728 = !DILocation(line: 1822, column: 46, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10730, file: !533, line: 1821, column: 3)
!10730 = distinct !DILexicalBlock(scope: !10723, file: !533, line: 1816, column: 7)
!10731 = !DILocation(line: 1824, column: 1, scope: !10723)
!10732 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1634, file: !1634, line: 118, type: !6252, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10733)
!10733 = !{!10734, !10735}
!10734 = !DILocalVariable(name: "arg", arg: 1, scope: !10732, file: !1634, line: 118, type: !113)
!10735 = !DILocalVariable(name: "dticks", scope: !10732, file: !1634, line: 121, type: !118)
!10736 = !DILocation(line: 0, scope: !10732)
!10737 = !DILocation(line: 124, column: 2, scope: !10732)
!10738 = !DILocation(line: 129, column: 17, scope: !10732)
!10739 = !DILocation(line: 129, column: 14, scope: !10732)
!10740 = !DILocation(line: 130, column: 15, scope: !10732)
!10741 = !DILocation(line: 145, column: 27, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !1634, line: 132, column: 16)
!10743 = distinct !DILexicalBlock(scope: !10732, file: !1634, line: 132, column: 6)
!10744 = !DILocation(line: 145, column: 25, scope: !10742)
!10745 = !DILocation(line: 145, column: 45, scope: !10742)
!10746 = !DILocation(line: 146, column: 30, scope: !10742)
!10747 = !DILocation(line: 146, column: 20, scope: !10742)
!10748 = !DILocation(line: 147, column: 3, scope: !10742)
!10749 = !DILocation(line: 151, column: 2, scope: !10732)
!10750 = !DILocation(line: 152, column: 1, scope: !10732)
!10751 = distinct !DISubprogram(name: "elapsed", scope: !1634, file: !1634, line: 85, type: !3191, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10752)
!10752 = !{!10753, !10754, !10755}
!10753 = !DILocalVariable(name: "val1", scope: !10751, file: !1634, line: 87, type: !118)
!10754 = !DILocalVariable(name: "ctrl", scope: !10751, file: !1634, line: 88, type: !118)
!10755 = !DILocalVariable(name: "val2", scope: !10751, file: !1634, line: 89, type: !118)
!10756 = !DILocation(line: 87, column: 27, scope: !10751)
!10757 = !DILocation(line: 0, scope: !10751)
!10758 = !DILocation(line: 88, column: 27, scope: !10751)
!10759 = !DILocation(line: 89, column: 27, scope: !10751)
!10760 = !DILocation(line: 105, column: 12, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10751, file: !1634, line: 105, column: 6)
!10762 = !DILocation(line: 106, column: 6, scope: !10761)
!10763 = !DILocation(line: 107, column: 16, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10761, file: !1634, line: 106, column: 24)
!10765 = !DILocation(line: 111, column: 18, scope: !10764)
!10766 = !DILocation(line: 112, column: 2, scope: !10764)
!10767 = !DILocation(line: 114, column: 20, scope: !10751)
!10768 = !DILocation(line: 114, column: 30, scope: !10751)
!10769 = !DILocation(line: 114, column: 28, scope: !10751)
!10770 = !DILocation(line: 114, column: 2, scope: !10751)
!10771 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1634, file: !1634, line: 154, type: !10772, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10774)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{null, !763, !345}
!10774 = !{!10775, !10776, !10777, !10778, !10779, !10780, !10781, !10786, !10787}
!10775 = !DILocalVariable(name: "ticks", arg: 1, scope: !10771, file: !1634, line: 154, type: !763)
!10776 = !DILocalVariable(name: "idle", arg: 2, scope: !10771, file: !1634, line: 154, type: !345)
!10777 = !DILocalVariable(name: "delay", scope: !10771, file: !1634, line: 169, type: !118)
!10778 = !DILocalVariable(name: "val1", scope: !10771, file: !1634, line: 170, type: !118)
!10779 = !DILocalVariable(name: "val2", scope: !10771, file: !1634, line: 170, type: !118)
!10780 = !DILocalVariable(name: "last_load_", scope: !10771, file: !1634, line: 171, type: !118)
!10781 = !DILocalVariable(name: "key", scope: !10771, file: !1634, line: 176, type: !10782)
!10782 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !10783)
!10783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !10784)
!10784 = !{!10785}
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10783, file: !259, line: 33, baseType: !119, size: 32)
!10786 = !DILocalVariable(name: "pending", scope: !10771, file: !1634, line: 178, type: !118)
!10787 = !DILocalVariable(name: "unannounced", scope: !10771, file: !1634, line: 185, type: !118)
!10788 = !DILocation(line: 0, scope: !10771)
!10789 = !DILocation(line: 162, column: 49, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10771, file: !1634, line: 162, column: 6)
!10791 = !DILocation(line: 163, column: 17, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10790, file: !1634, line: 162, column: 78)
!10793 = !DILocation(line: 164, column: 13, scope: !10792)
!10794 = !DILocation(line: 165, column: 3, scope: !10792)
!10795 = !DILocation(line: 171, column: 24, scope: !10771)
!10796 = !DILocation(line: 173, column: 10, scope: !10771)
!10797 = !DILocation(line: 174, column: 10, scope: !10771)
!10798 = !DILocalVariable(name: "l", arg: 1, scope: !10799, file: !259, line: 136, type: !10802)
!10799 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !10800, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10803)
!10800 = !DISubroutineType(types: !10801)
!10801 = !{!10782, !10802}
!10802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!10803 = !{!10798, !10804}
!10804 = !DILocalVariable(name: "k", scope: !10799, file: !259, line: 139, type: !10782)
!10805 = !DILocation(line: 0, scope: !10799, inlinedAt: !10806)
!10806 = distinct !DILocation(line: 176, column: 25, scope: !10771)
!10807 = !DILocation(line: 55, column: 2, scope: !10808, inlinedAt: !10812)
!10808 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5994, file: !5994, line: 42, type: !5995, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10809)
!10809 = !{!10810, !10811}
!10810 = !DILocalVariable(name: "key", scope: !10808, file: !5994, line: 44, type: !32)
!10811 = !DILocalVariable(name: "tmp", scope: !10808, file: !5994, line: 53, type: !32)
!10812 = distinct !DILocation(line: 145, column: 10, scope: !10799, inlinedAt: !10806)
!10813 = !{i64 2225433}
!10814 = !DILocation(line: 0, scope: !10808, inlinedAt: !10812)
!10815 = !DILocation(line: 148, column: 2, scope: !10816, inlinedAt: !10806)
!10816 = distinct !DILexicalBlock(scope: !10817, file: !259, line: 148, column: 2)
!10817 = distinct !DILexicalBlock(scope: !10799, file: !259, line: 148, column: 2)
!10818 = !DILocation(line: 148, column: 2, scope: !10817, inlinedAt: !10806)
!10819 = !DILocation(line: 148, column: 2, scope: !10820, inlinedAt: !10806)
!10820 = distinct !DILexicalBlock(scope: !10816, file: !259, line: 148, column: 2)
!10821 = !DILocation(line: 160, column: 2, scope: !10799, inlinedAt: !10806)
!10822 = !DILocation(line: 178, column: 21, scope: !10771)
!10823 = !DILocation(line: 180, column: 18, scope: !10771)
!10824 = !DILocation(line: 182, column: 14, scope: !10771)
!10825 = !DILocation(line: 183, column: 15, scope: !10771)
!10826 = !DILocation(line: 185, column: 39, scope: !10771)
!10827 = !DILocation(line: 185, column: 37, scope: !10771)
!10828 = !DILocation(line: 187, column: 27, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10771, file: !1634, line: 187, column: 6)
!10830 = !DILocation(line: 187, column: 6, scope: !10771)
!10831 = !DILocation(line: 202, column: 27, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10829, file: !1634, line: 195, column: 9)
!10833 = !DILocation(line: 202, column: 48, scope: !10832)
!10834 = !DILocation(line: 203, column: 9, scope: !10832)
!10835 = !DILocation(line: 204, column: 11, scope: !10832)
!10836 = !DILocation(line: 205, column: 13, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10832, file: !1634, line: 205, column: 7)
!10838 = !DILocation(line: 205, column: 7, scope: !10832)
!10839 = !DILocation(line: 0, scope: !10829)
!10840 = !DILocation(line: 212, column: 18, scope: !10771)
!10841 = !DILocation(line: 214, column: 28, scope: !10771)
!10842 = !DILocation(line: 214, column: 16, scope: !10771)
!10843 = !DILocation(line: 215, column: 15, scope: !10771)
!10844 = !DILocation(line: 227, column: 11, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10771, file: !1634, line: 227, column: 6)
!10846 = !DILocation(line: 227, column: 6, scope: !10771)
!10847 = !DILocation(line: 228, column: 15, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10845, file: !1634, line: 227, column: 19)
!10849 = !DILocation(line: 228, column: 38, scope: !10848)
!10850 = !DILocation(line: 228, column: 24, scope: !10848)
!10851 = !DILocation(line: 229, column: 2, scope: !10848)
!10852 = !DILocation(line: 230, column: 24, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10845, file: !1634, line: 229, column: 9)
!10854 = !DILocation(line: 230, column: 15, scope: !10853)
!10855 = !DILocation(line: 0, scope: !10845)
!10856 = !DILocalVariable(name: "key", arg: 2, scope: !10857, file: !259, line: 190, type: !10782)
!10857 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !10858, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{null, !10802, !10782}
!10860 = !{!10861, !10856}
!10861 = !DILocalVariable(name: "l", arg: 1, scope: !10857, file: !259, line: 189, type: !10802)
!10862 = !DILocation(line: 0, scope: !10857, inlinedAt: !10863)
!10863 = distinct !DILocation(line: 232, column: 2, scope: !10771)
!10864 = !DILocation(line: 194, column: 2, scope: !10865, inlinedAt: !10863)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !259, line: 194, column: 2)
!10866 = distinct !DILexicalBlock(scope: !10857, file: !259, line: 194, column: 2)
!10867 = !DILocation(line: 194, column: 2, scope: !10866, inlinedAt: !10863)
!10868 = !DILocation(line: 194, column: 2, scope: !10869, inlinedAt: !10863)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !259, line: 194, column: 2)
!10870 = !DILocalVariable(name: "key", arg: 1, scope: !10871, file: !5994, line: 84, type: !32)
!10871 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5994, file: !5994, line: 84, type: !6005, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10872)
!10872 = !{!10870}
!10873 = !DILocation(line: 0, scope: !10871, inlinedAt: !10874)
!10874 = distinct !DILocation(line: 215, column: 2, scope: !10857, inlinedAt: !10863)
!10875 = !DILocation(line: 95, column: 2, scope: !10871, inlinedAt: !10874)
!10876 = !{i64 2226250}
!10877 = !DILocation(line: 234, column: 1, scope: !10771)
!10878 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1634, file: !1634, line: 236, type: !3191, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10879)
!10879 = !{!10880, !10881}
!10880 = !DILocalVariable(name: "key", scope: !10878, file: !1634, line: 242, type: !10782)
!10881 = !DILocalVariable(name: "cyc", scope: !10878, file: !1634, line: 243, type: !118)
!10882 = !DILocation(line: 0, scope: !10799, inlinedAt: !10883)
!10883 = distinct !DILocation(line: 242, column: 25, scope: !10878)
!10884 = !DILocation(line: 55, column: 2, scope: !10808, inlinedAt: !10885)
!10885 = distinct !DILocation(line: 145, column: 10, scope: !10799, inlinedAt: !10883)
!10886 = !DILocation(line: 0, scope: !10808, inlinedAt: !10885)
!10887 = !DILocation(line: 148, column: 2, scope: !10816, inlinedAt: !10883)
!10888 = !DILocation(line: 148, column: 2, scope: !10817, inlinedAt: !10883)
!10889 = !DILocation(line: 148, column: 2, scope: !10820, inlinedAt: !10883)
!10890 = !DILocation(line: 160, column: 2, scope: !10799, inlinedAt: !10883)
!10891 = !DILocation(line: 0, scope: !10878)
!10892 = !DILocation(line: 243, column: 17, scope: !10878)
!10893 = !DILocation(line: 243, column: 29, scope: !10878)
!10894 = !DILocation(line: 243, column: 43, scope: !10878)
!10895 = !DILocation(line: 0, scope: !10857, inlinedAt: !10896)
!10896 = distinct !DILocation(line: 245, column: 2, scope: !10878)
!10897 = !DILocation(line: 194, column: 2, scope: !10865, inlinedAt: !10896)
!10898 = !DILocation(line: 194, column: 2, scope: !10866, inlinedAt: !10896)
!10899 = !DILocation(line: 194, column: 2, scope: !10869, inlinedAt: !10896)
!10900 = !DILocation(line: 243, column: 27, scope: !10878)
!10901 = !DILocation(line: 243, column: 41, scope: !10878)
!10902 = !DILocation(line: 0, scope: !10871, inlinedAt: !10903)
!10903 = distinct !DILocation(line: 215, column: 2, scope: !10857, inlinedAt: !10896)
!10904 = !DILocation(line: 95, column: 2, scope: !10871, inlinedAt: !10903)
!10905 = !DILocation(line: 246, column: 13, scope: !10878)
!10906 = !DILocation(line: 246, column: 2, scope: !10878)
!10907 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1634, file: !1634, line: 249, type: !3191, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10908)
!10908 = !{!10909, !10910}
!10909 = !DILocalVariable(name: "key", scope: !10907, file: !1634, line: 251, type: !10782)
!10910 = !DILocalVariable(name: "ret", scope: !10907, file: !1634, line: 252, type: !118)
!10911 = !DILocation(line: 0, scope: !10799, inlinedAt: !10912)
!10912 = distinct !DILocation(line: 251, column: 25, scope: !10907)
!10913 = !DILocation(line: 55, column: 2, scope: !10808, inlinedAt: !10914)
!10914 = distinct !DILocation(line: 145, column: 10, scope: !10799, inlinedAt: !10912)
!10915 = !DILocation(line: 0, scope: !10808, inlinedAt: !10914)
!10916 = !DILocation(line: 148, column: 2, scope: !10816, inlinedAt: !10912)
!10917 = !DILocation(line: 148, column: 2, scope: !10817, inlinedAt: !10912)
!10918 = !DILocation(line: 148, column: 2, scope: !10820, inlinedAt: !10912)
!10919 = !DILocation(line: 160, column: 2, scope: !10799, inlinedAt: !10912)
!10920 = !DILocation(line: 0, scope: !10907)
!10921 = !DILocation(line: 252, column: 17, scope: !10907)
!10922 = !DILocation(line: 252, column: 29, scope: !10907)
!10923 = !DILocation(line: 0, scope: !10857, inlinedAt: !10924)
!10924 = distinct !DILocation(line: 254, column: 2, scope: !10907)
!10925 = !DILocation(line: 194, column: 2, scope: !10865, inlinedAt: !10924)
!10926 = !DILocation(line: 194, column: 2, scope: !10866, inlinedAt: !10924)
!10927 = !DILocation(line: 194, column: 2, scope: !10869, inlinedAt: !10924)
!10928 = !DILocation(line: 252, column: 27, scope: !10907)
!10929 = !DILocation(line: 0, scope: !10871, inlinedAt: !10930)
!10930 = distinct !DILocation(line: 215, column: 2, scope: !10857, inlinedAt: !10924)
!10931 = !DILocation(line: 95, column: 2, scope: !10871, inlinedAt: !10930)
!10932 = !DILocation(line: 255, column: 2, scope: !10907)
!10933 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1634, file: !1634, line: 258, type: !2953, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !2022)
!10934 = !DILocation(line: 260, column: 6, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10933, file: !1634, line: 260, column: 6)
!10936 = !DILocation(line: 260, column: 16, scope: !10935)
!10937 = !DILocation(line: 260, column: 6, scope: !10933)
!10938 = !DILocation(line: 261, column: 17, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10935, file: !1634, line: 260, column: 34)
!10940 = !DILocation(line: 262, column: 2, scope: !10939)
!10941 = !DILocation(line: 263, column: 1, scope: !10933)
!10942 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1634, file: !1634, line: 265, type: !2953, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !2022)
!10943 = !DILocation(line: 267, column: 16, scope: !10942)
!10944 = !DILocation(line: 268, column: 1, scope: !10942)
!10945 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10946, file: !10946, line: 9, type: !10947, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !10970)
!10946 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10947 = !DISubroutineType(types: !10948)
!10948 = !{!119, !10949, !185, !10969}
!10949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10950, size: 32)
!10950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10951)
!10951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1513, line: 60, size: 64, elements: !10952)
!10952 = !{!10953, !10968}
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10951, file: !1513, line: 69, baseType: !10954, size: 32)
!10954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10955, size: 32)
!10955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10956)
!10956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1513, line: 50, size: 64, elements: !10957)
!10957 = !{!10958, !10966, !10967}
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10956, file: !1513, line: 52, baseType: !10959, size: 32)
!10959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10960, size: 32)
!10960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10961)
!10961 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1524, line: 37, baseType: !10962)
!10962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1524, line: 32, size: 64, elements: !10963)
!10963 = !{!10964, !10965}
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10962, file: !1524, line: 34, baseType: !118, size: 32)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10962, file: !1524, line: 36, baseType: !118, size: 32, offset: 32)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10956, file: !1513, line: 54, baseType: !185, size: 8, offset: 32)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10956, file: !1513, line: 56, baseType: !185, size: 8, offset: 40)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10951, file: !1513, line: 71, baseType: !185, size: 8, offset: 32)
!10969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10954, size: 32)
!10970 = !{!10971, !10972, !10973}
!10971 = !DILocalVariable(name: "config", arg: 1, scope: !10945, file: !10946, line: 9, type: !10949)
!10972 = !DILocalVariable(name: "id", arg: 2, scope: !10945, file: !10946, line: 9, type: !185)
!10973 = !DILocalVariable(name: "state", arg: 3, scope: !10945, file: !10946, line: 10, type: !10969)
!10974 = !DILocation(line: 0, scope: !10945)
!10975 = !DILocation(line: 12, column: 20, scope: !10945)
!10976 = !DILocation(line: 13, column: 27, scope: !10945)
!10977 = !DILocation(line: 13, column: 42, scope: !10945)
!10978 = !DILocation(line: 13, column: 19, scope: !10945)
!10979 = !DILocation(line: 13, column: 16, scope: !10945)
!10980 = !DILocation(line: 13, column: 2, scope: !10945)
!10981 = distinct !{!10981, !10980, !10982}
!10982 = !DILocation(line: 19, column: 2, scope: !10945)
!10983 = !DILocation(line: 14, column: 23, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !10946, line: 14, column: 7)
!10985 = distinct !DILexicalBlock(scope: !10945, file: !10946, line: 13, column: 54)
!10986 = !DILocation(line: 14, column: 10, scope: !10984)
!10987 = !DILocation(line: 18, column: 11, scope: !10985)
!10988 = !DILocation(line: 14, column: 7, scope: !10985)
!10989 = !DILocation(line: 22, column: 1, scope: !10945)
!10990 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1753, file: !1753, line: 193, type: !10991, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !11000)
!10991 = !DISubroutineType(types: !10992)
!10992 = !{!119, !10993, !185, !22}
!10993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10994, size: 32)
!10994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10995)
!10995 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1524, line: 37, baseType: !10996)
!10996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1524, line: 32, size: 64, elements: !10997)
!10997 = !{!10998, !10999}
!10998 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10996, file: !1524, line: 34, baseType: !118, size: 32)
!10999 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10996, file: !1524, line: 36, baseType: !118, size: 32, offset: 32)
!11000 = !{!11001, !11002, !11003, !11004, !11005, !11006, !11007, !11008, !11010}
!11001 = !DILocalVariable(name: "pins", arg: 1, scope: !10990, file: !1753, line: 193, type: !10993)
!11002 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10990, file: !1753, line: 193, type: !185)
!11003 = !DILocalVariable(name: "reg", arg: 3, scope: !10990, file: !1753, line: 194, type: !22)
!11004 = !DILocalVariable(name: "pin", scope: !10990, file: !1753, line: 196, type: !118)
!11005 = !DILocalVariable(name: "mux", scope: !10990, file: !1753, line: 196, type: !118)
!11006 = !DILocalVariable(name: "pin_cgf", scope: !10990, file: !1753, line: 197, type: !118)
!11007 = !DILocalVariable(name: "ret", scope: !10990, file: !1753, line: 198, type: !119)
!11008 = !DILocalVariable(name: "i", scope: !11009, file: !1753, line: 209, type: !185)
!11009 = distinct !DILexicalBlock(scope: !10990, file: !1753, line: 209, column: 2)
!11010 = !DILocalVariable(name: "gpio_out", scope: !11011, file: !1753, line: 239, type: !118)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !1753, line: 238, column: 55)
!11012 = distinct !DILexicalBlock(scope: !11013, file: !1753, line: 238, column: 14)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !1753, line: 236, column: 14)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !1753, line: 234, column: 7)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !1753, line: 209, column: 41)
!11016 = distinct !DILexicalBlock(scope: !11009, file: !1753, line: 209, column: 2)
!11017 = !DILocation(line: 0, scope: !10990)
!11018 = !DILocation(line: 0, scope: !11009)
!11019 = !DILocation(line: 209, column: 25, scope: !11016)
!11020 = !DILocation(line: 209, column: 2, scope: !11009)
!11021 = distinct !{!11021, !11020, !11022}
!11022 = !DILocation(line: 259, column: 2, scope: !11009)
!11023 = !DILocation(line: 210, column: 17, scope: !11015)
!11024 = !DILocation(line: 234, column: 7, scope: !11014)
!11025 = !DILocation(line: 234, column: 33, scope: !11014)
!11026 = !DILocation(line: 234, column: 7, scope: !11015)
!11027 = !DILocation(line: 235, column: 22, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11014, file: !1753, line: 234, column: 49)
!11029 = !DILocation(line: 235, column: 29, scope: !11028)
!11030 = !DILocation(line: 236, column: 3, scope: !11028)
!11031 = !DILocation(line: 236, column: 14, scope: !11014)
!11032 = !DILocation(line: 239, column: 32, scope: !11011)
!11033 = !DILocation(line: 0, scope: !11011)
!11034 = !DILocation(line: 241, column: 8, scope: !11011)
!11035 = !DILocation(line: 246, column: 3, scope: !11011)
!11036 = !DILocation(line: 252, column: 9, scope: !11015)
!11037 = !DILocation(line: 255, column: 9, scope: !11015)
!11038 = !DILocation(line: 256, column: 11, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11015, file: !1753, line: 256, column: 7)
!11040 = !DILocation(line: 209, column: 37, scope: !11016)
!11041 = !DILocation(line: 256, column: 7, scope: !11015)
!11042 = !DILocation(line: 262, column: 1, scope: !10990)
!11043 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1753, file: !1753, line: 176, type: !11044, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !11046)
!11044 = !DISubroutineType(types: !11045)
!11045 = !{!119, !118, !118, !118}
!11046 = !{!11047, !11048, !11049, !11050}
!11047 = !DILocalVariable(name: "pin", arg: 1, scope: !11043, file: !1753, line: 176, type: !118)
!11048 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11043, file: !1753, line: 176, type: !118)
!11049 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11043, file: !1753, line: 176, type: !118)
!11050 = !DILocalVariable(name: "port_device", scope: !11043, file: !1753, line: 178, type: !1683)
!11051 = !DILocation(line: 0, scope: !11043)
!11052 = !DILocation(line: 180, column: 22, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11043, file: !1753, line: 180, column: 6)
!11054 = !DILocation(line: 180, column: 6, scope: !11043)
!11055 = !DILocation(line: 180, column: 6, scope: !11053)
!11056 = !DILocation(line: 184, column: 16, scope: !11043)
!11057 = !DILocation(line: 186, column: 19, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11043, file: !1753, line: 186, column: 6)
!11059 = !DILocation(line: 186, column: 28, scope: !11058)
!11060 = !DILocation(line: 186, column: 33, scope: !11058)
!11061 = !DILocation(line: 186, column: 6, scope: !11043)
!11062 = !DILocation(line: 190, column: 43, scope: !11043)
!11063 = !DILocation(line: 190, column: 9, scope: !11043)
!11064 = !DILocation(line: 190, column: 2, scope: !11043)
!11065 = !DILocation(line: 191, column: 1, scope: !11043)
!11066 = distinct !DISubprogram(name: "device_is_ready", scope: !8970, file: !8970, line: 47, type: !11067, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !11069)
!11067 = !DISubroutineType(types: !11068)
!11068 = !{!345, !1683}
!11069 = !{!11070}
!11070 = !DILocalVariable(name: "dev", arg: 1, scope: !11066, file: !8970, line: 47, type: !1683)
!11071 = !DILocation(line: 0, scope: !11066)
!11072 = !DILocation(line: 55, column: 2, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11066, file: !8970, line: 55, column: 2)
!11074 = !{i64 2149463503}
!11075 = !DILocation(line: 56, column: 9, scope: !11066)
!11076 = !DILocation(line: 56, column: 2, scope: !11066)
!11077 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !11067, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !11078)
!11078 = !{!11079}
!11079 = !DILocalVariable(name: "dev", arg: 1, scope: !11077, file: !334, line: 730, type: !1683)
!11080 = !DILocation(line: 0, scope: !11077)
!11081 = !DILocation(line: 732, column: 9, scope: !11077)
!11082 = !DILocation(line: 732, column: 2, scope: !11077)
!11083 = distinct !DISubprogram(name: "SystemInit", scope: !1802, file: !1802, line: 167, type: !2953, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !2022)
!11084 = !DILocation(line: 182, column: 1, scope: !11083)
!11085 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1802, file: !1802, line: 220, type: !2953, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !11086)
!11086 = !{!11087, !11088, !11089, !11090, !11091}
!11087 = !DILocalVariable(name: "tmp", scope: !11085, file: !1802, line: 222, type: !118)
!11088 = !DILocalVariable(name: "pllvco", scope: !11085, file: !1802, line: 222, type: !118)
!11089 = !DILocalVariable(name: "pllp", scope: !11085, file: !1802, line: 222, type: !118)
!11090 = !DILocalVariable(name: "pllsource", scope: !11085, file: !1802, line: 222, type: !118)
!11091 = !DILocalVariable(name: "pllm", scope: !11085, file: !1802, line: 222, type: !118)
!11092 = !DILocation(line: 0, scope: !11085)
!11093 = !DILocation(line: 225, column: 14, scope: !11085)
!11094 = !DILocation(line: 225, column: 19, scope: !11085)
!11095 = !DILocation(line: 227, column: 3, scope: !11085)
!11096 = !DILocation(line: 240, column: 25, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11085, file: !1802, line: 228, column: 3)
!11098 = !DILocation(line: 241, column: 19, scope: !11097)
!11099 = !DILocation(line: 241, column: 27, scope: !11097)
!11100 = !DILocation(line: 0, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11097, file: !1802, line: 243, column: 11)
!11102 = !DILocation(line: 254, column: 22, scope: !11097)
!11103 = !DILocation(line: 254, column: 62, scope: !11097)
!11104 = !DILocation(line: 255, column: 31, scope: !11097)
!11105 = !DILocation(line: 256, column: 7, scope: !11097)
!11106 = !DILocation(line: 0, scope: !11097)
!11107 = !DILocation(line: 263, column: 30, scope: !11085)
!11108 = !DILocation(line: 263, column: 52, scope: !11085)
!11109 = !DILocation(line: 263, column: 9, scope: !11085)
!11110 = !DILocation(line: 265, column: 19, scope: !11085)
!11111 = !DILocation(line: 266, column: 1, scope: !11085)
!11112 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11113, file: !11113, line: 200, type: !11114, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !2022)
!11113 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11114 = !DISubroutineType(types: !11115)
!11115 = !{!11116}
!11116 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2768, line: 44, baseType: !2767)
!11117 = !DILocation(line: 202, column: 3, scope: !11112)
!11118 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11113, file: !11113, line: 219, type: !11119, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !11144)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{!11116, !11121}
!11121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11122, size: 32)
!11122 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11123, line: 70, baseType: !11124)
!11123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11123, line: 49, size: 416, elements: !11125)
!11125 = !{!11126, !11127, !11128, !11129, !11130, !11131, !11132}
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11124, file: !11123, line: 51, baseType: !118, size: 32)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11124, file: !11123, line: 54, baseType: !118, size: 32, offset: 32)
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11124, file: !11123, line: 57, baseType: !118, size: 32, offset: 64)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11124, file: !11123, line: 60, baseType: !118, size: 32, offset: 96)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11124, file: !11123, line: 63, baseType: !118, size: 32, offset: 128)
!11131 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11124, file: !11123, line: 66, baseType: !118, size: 32, offset: 160)
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11124, file: !11123, line: 69, baseType: !11133, size: 224, offset: 192)
!11133 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11134, line: 73, baseType: !11135)
!11134 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11134, line: 45, size: 224, elements: !11136)
!11136 = !{!11137, !11138, !11139, !11140, !11141, !11142, !11143}
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11135, file: !11134, line: 47, baseType: !118, size: 32)
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11135, file: !11134, line: 50, baseType: !118, size: 32, offset: 32)
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11135, file: !11134, line: 53, baseType: !118, size: 32, offset: 64)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11135, file: !11134, line: 56, baseType: !118, size: 32, offset: 96)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11135, file: !11134, line: 60, baseType: !118, size: 32, offset: 128)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11135, file: !11134, line: 63, baseType: !118, size: 32, offset: 160)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11135, file: !11134, line: 68, baseType: !118, size: 32, offset: 192)
!11144 = !{!11145, !11146, !11147, !11148, !11152}
!11145 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11118, file: !11113, line: 219, type: !11121)
!11146 = !DILocalVariable(name: "tickstart", scope: !11118, file: !11113, line: 221, type: !118)
!11147 = !DILocalVariable(name: "pll_config", scope: !11118, file: !11113, line: 221, type: !118)
!11148 = !DILocalVariable(name: "pwrclkchanged", scope: !11149, file: !11113, line: 391, type: !11151)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !11113, line: 390, column: 3)
!11150 = distinct !DILexicalBlock(scope: !11118, file: !11113, line: 389, column: 6)
!11151 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !828, line: 188, baseType: !2774)
!11152 = !DILocalVariable(name: "tmpreg", scope: !11153, file: !11113, line: 400, type: !314)
!11153 = distinct !DILexicalBlock(scope: !11154, file: !11113, line: 400, column: 7)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !11113, line: 399, column: 5)
!11155 = distinct !DILexicalBlock(scope: !11149, file: !11113, line: 398, column: 8)
!11156 = !DILocation(line: 0, scope: !11118)
!11157 = !DILocation(line: 224, column: 24, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11118, file: !11113, line: 224, column: 6)
!11159 = !DILocation(line: 224, column: 6, scope: !11118)
!11160 = !DILocation(line: 232, column: 27, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11118, file: !11113, line: 232, column: 6)
!11162 = !DILocation(line: 232, column: 43, scope: !11161)
!11163 = !DILocation(line: 232, column: 69, scope: !11161)
!11164 = !DILocation(line: 232, column: 6, scope: !11118)
!11165 = !DILocation(line: 237, column: 9, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !11113, line: 237, column: 8)
!11167 = distinct !DILexicalBlock(scope: !11161, file: !11113, line: 233, column: 3)
!11168 = !DILocation(line: 237, column: 39, scope: !11166)
!11169 = !DILocation(line: 237, column: 60, scope: !11166)
!11170 = !DILocation(line: 238, column: 9, scope: !11166)
!11171 = !DILocation(line: 238, column: 39, scope: !11166)
!11172 = !DILocation(line: 238, column: 60, scope: !11166)
!11173 = !DILocation(line: 238, column: 70, scope: !11166)
!11174 = !DILocation(line: 238, column: 78, scope: !11166)
!11175 = !DILocation(line: 238, column: 100, scope: !11166)
!11176 = !DILocation(line: 237, column: 8, scope: !11167)
!11177 = !DILocation(line: 240, column: 11, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !11113, line: 240, column: 10)
!11179 = distinct !DILexicalBlock(scope: !11166, file: !11113, line: 239, column: 5)
!11180 = !DILocation(line: 240, column: 57, scope: !11178)
!11181 = !DILocation(line: 240, column: 80, scope: !11178)
!11182 = !DILocation(line: 240, column: 89, scope: !11178)
!11183 = !DILocation(line: 240, column: 10, scope: !11179)
!11184 = !DILocation(line: 248, column: 7, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11186, file: !11113, line: 248, column: 7)
!11186 = distinct !DILexicalBlock(scope: !11187, file: !11113, line: 248, column: 7)
!11187 = distinct !DILexicalBlock(scope: !11166, file: !11113, line: 246, column: 5)
!11188 = !DILocation(line: 248, column: 7, scope: !11186)
!11189 = !DILocation(line: 248, column: 7, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11185, file: !11113, line: 248, column: 7)
!11191 = !DILocation(line: 248, column: 7, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11193, file: !11113, line: 248, column: 7)
!11193 = distinct !DILexicalBlock(scope: !11185, file: !11113, line: 248, column: 7)
!11194 = !DILocation(line: 248, column: 7, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11193, file: !11113, line: 248, column: 7)
!11196 = !DILocation(line: 0, scope: !11185)
!11197 = !DILocation(line: 251, column: 30, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11187, file: !11113, line: 251, column: 10)
!11199 = !DILocation(line: 251, column: 40, scope: !11198)
!11200 = !DILocation(line: 0, scope: !11198)
!11201 = !DILocation(line: 251, column: 10, scope: !11187)
!11202 = !DILocation(line: 257, column: 15, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11198, file: !11113, line: 252, column: 7)
!11204 = !DILocation(line: 257, column: 51, scope: !11203)
!11205 = !DILocation(line: 257, column: 9, scope: !11203)
!11206 = !DILocation(line: 259, column: 15, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11208, file: !11113, line: 259, column: 14)
!11208 = distinct !DILexicalBlock(scope: !11203, file: !11113, line: 258, column: 9)
!11209 = !DILocation(line: 259, column: 29, scope: !11207)
!11210 = !DILocation(line: 259, column: 43, scope: !11207)
!11211 = !DILocation(line: 259, column: 14, scope: !11208)
!11212 = distinct !{!11212, !11205, !11213}
!11213 = !DILocation(line: 263, column: 9, scope: !11203)
!11214 = !DILocation(line: 271, column: 15, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11198, file: !11113, line: 266, column: 7)
!11216 = !DILocation(line: 271, column: 9, scope: !11215)
!11217 = !DILocation(line: 273, column: 15, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11219, file: !11113, line: 273, column: 14)
!11219 = distinct !DILexicalBlock(scope: !11215, file: !11113, line: 272, column: 9)
!11220 = !DILocation(line: 273, column: 29, scope: !11218)
!11221 = !DILocation(line: 273, column: 43, scope: !11218)
!11222 = !DILocation(line: 273, column: 14, scope: !11219)
!11223 = distinct !{!11223, !11216, !11224}
!11224 = !DILocation(line: 277, column: 9, scope: !11215)
!11225 = !DILocation(line: 282, column: 27, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11118, file: !11113, line: 282, column: 6)
!11227 = !DILocation(line: 282, column: 43, scope: !11226)
!11228 = !DILocation(line: 282, column: 69, scope: !11226)
!11229 = !DILocation(line: 282, column: 6, scope: !11118)
!11230 = !DILocation(line: 289, column: 9, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11232, file: !11113, line: 289, column: 8)
!11232 = distinct !DILexicalBlock(scope: !11226, file: !11113, line: 283, column: 3)
!11233 = !DILocation(line: 289, column: 39, scope: !11231)
!11234 = !DILocation(line: 289, column: 60, scope: !11231)
!11235 = !DILocation(line: 290, column: 9, scope: !11231)
!11236 = !DILocation(line: 290, column: 39, scope: !11231)
!11237 = !DILocation(line: 290, column: 60, scope: !11231)
!11238 = !DILocation(line: 290, column: 70, scope: !11231)
!11239 = !DILocation(line: 290, column: 78, scope: !11231)
!11240 = !DILocation(line: 290, column: 100, scope: !11231)
!11241 = !DILocation(line: 289, column: 8, scope: !11232)
!11242 = !DILocation(line: 293, column: 11, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !11113, line: 293, column: 10)
!11244 = distinct !DILexicalBlock(scope: !11231, file: !11113, line: 291, column: 5)
!11245 = !DILocation(line: 293, column: 57, scope: !11243)
!11246 = !DILocation(line: 293, column: 80, scope: !11243)
!11247 = !DILocation(line: 293, column: 89, scope: !11243)
!11248 = !DILocation(line: 293, column: 10, scope: !11244)
!11249 = !DILocation(line: 307, column: 30, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !11113, line: 307, column: 10)
!11251 = distinct !DILexicalBlock(scope: !11231, file: !11113, line: 305, column: 5)
!11252 = !DILocation(line: 307, column: 39, scope: !11250)
!11253 = !DILocation(line: 307, column: 10, scope: !11251)
!11254 = !DILocation(line: 310, column: 9, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11250, file: !11113, line: 308, column: 7)
!11256 = !DILocation(line: 313, column: 21, scope: !11255)
!11257 = !DILocation(line: 316, column: 9, scope: !11255)
!11258 = !DILocation(line: 316, column: 15, scope: !11255)
!11259 = !DILocation(line: 316, column: 51, scope: !11255)
!11260 = !DILocation(line: 318, column: 15, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11262, file: !11113, line: 318, column: 14)
!11262 = distinct !DILexicalBlock(scope: !11255, file: !11113, line: 317, column: 9)
!11263 = !DILocation(line: 318, column: 29, scope: !11261)
!11264 = !DILocation(line: 318, column: 43, scope: !11261)
!11265 = !DILocation(line: 318, column: 14, scope: !11262)
!11266 = distinct !{!11266, !11257, !11267}
!11267 = !DILocation(line: 322, column: 9, scope: !11255)
!11268 = !DILocation(line: 330, column: 9, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11250, file: !11113, line: 328, column: 7)
!11270 = !DILocation(line: 333, column: 21, scope: !11269)
!11271 = !DILocation(line: 336, column: 9, scope: !11269)
!11272 = !DILocation(line: 336, column: 15, scope: !11269)
!11273 = !DILocation(line: 338, column: 15, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11275, file: !11113, line: 338, column: 14)
!11275 = distinct !DILexicalBlock(scope: !11269, file: !11113, line: 337, column: 9)
!11276 = !DILocation(line: 338, column: 29, scope: !11274)
!11277 = !DILocation(line: 338, column: 43, scope: !11274)
!11278 = !DILocation(line: 338, column: 14, scope: !11275)
!11279 = distinct !{!11279, !11271, !11280}
!11280 = !DILocation(line: 342, column: 9, scope: !11269)
!11281 = !DILocation(line: 0, scope: !11231)
!11282 = !DILocation(line: 347, column: 27, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11118, file: !11113, line: 347, column: 6)
!11284 = !DILocation(line: 347, column: 43, scope: !11283)
!11285 = !DILocation(line: 347, column: 69, scope: !11283)
!11286 = !DILocation(line: 347, column: 6, scope: !11118)
!11287 = !DILocation(line: 353, column: 28, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !11113, line: 353, column: 8)
!11289 = distinct !DILexicalBlock(scope: !11283, file: !11113, line: 348, column: 3)
!11290 = !DILocation(line: 353, column: 37, scope: !11288)
!11291 = !DILocation(line: 353, column: 8, scope: !11289)
!11292 = !DILocation(line: 356, column: 7, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11288, file: !11113, line: 354, column: 5)
!11294 = !DILocation(line: 359, column: 19, scope: !11293)
!11295 = !DILocation(line: 362, column: 7, scope: !11293)
!11296 = !DILocation(line: 362, column: 13, scope: !11293)
!11297 = !DILocation(line: 362, column: 49, scope: !11293)
!11298 = !DILocation(line: 364, column: 13, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !11113, line: 364, column: 12)
!11300 = distinct !DILexicalBlock(scope: !11293, file: !11113, line: 363, column: 7)
!11301 = !DILocation(line: 364, column: 27, scope: !11299)
!11302 = !DILocation(line: 364, column: 41, scope: !11299)
!11303 = !DILocation(line: 364, column: 12, scope: !11300)
!11304 = distinct !{!11304, !11295, !11305}
!11305 = !DILocation(line: 368, column: 7, scope: !11293)
!11306 = !DILocation(line: 373, column: 7, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11288, file: !11113, line: 371, column: 5)
!11308 = !DILocation(line: 376, column: 19, scope: !11307)
!11309 = !DILocation(line: 379, column: 7, scope: !11307)
!11310 = !DILocation(line: 379, column: 13, scope: !11307)
!11311 = !DILocation(line: 381, column: 13, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !11113, line: 381, column: 12)
!11313 = distinct !DILexicalBlock(scope: !11307, file: !11113, line: 380, column: 7)
!11314 = !DILocation(line: 381, column: 27, scope: !11312)
!11315 = !DILocation(line: 381, column: 41, scope: !11312)
!11316 = !DILocation(line: 381, column: 12, scope: !11313)
!11317 = distinct !{!11317, !11309, !11318}
!11318 = !DILocation(line: 385, column: 7, scope: !11307)
!11319 = !DILocation(line: 389, column: 27, scope: !11150)
!11320 = !DILocation(line: 389, column: 43, scope: !11150)
!11321 = !DILocation(line: 389, column: 69, scope: !11150)
!11322 = !DILocation(line: 389, column: 6, scope: !11118)
!11323 = !DILocation(line: 0, scope: !11149)
!11324 = !DILocation(line: 398, column: 8, scope: !11155)
!11325 = !DILocation(line: 398, column: 8, scope: !11149)
!11326 = !DILocation(line: 400, column: 7, scope: !11153)
!11327 = !DILocation(line: 400, column: 7, scope: !11154)
!11328 = !DILocation(line: 402, column: 5, scope: !11154)
!11329 = !DILocation(line: 404, column: 8, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11149, file: !11113, line: 404, column: 8)
!11331 = !DILocation(line: 404, column: 8, scope: !11149)
!11332 = !DILocation(line: 407, column: 7, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11330, file: !11113, line: 405, column: 5)
!11334 = !DILocation(line: 410, column: 19, scope: !11333)
!11335 = !DILocation(line: 412, column: 7, scope: !11333)
!11336 = !DILocation(line: 412, column: 13, scope: !11333)
!11337 = !DILocation(line: 414, column: 13, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !11113, line: 414, column: 12)
!11339 = distinct !DILexicalBlock(scope: !11333, file: !11113, line: 413, column: 7)
!11340 = !DILocation(line: 414, column: 27, scope: !11338)
!11341 = !DILocation(line: 414, column: 40, scope: !11338)
!11342 = !DILocation(line: 414, column: 12, scope: !11339)
!11343 = distinct !{!11343, !11335, !11344}
!11344 = !DILocation(line: 418, column: 7, scope: !11333)
!11345 = !DILocation(line: 422, column: 5, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11347, file: !11113, line: 422, column: 5)
!11347 = distinct !DILexicalBlock(scope: !11149, file: !11113, line: 422, column: 5)
!11348 = !DILocation(line: 422, column: 5, scope: !11347)
!11349 = !DILocation(line: 422, column: 5, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11346, file: !11113, line: 422, column: 5)
!11351 = !DILocation(line: 422, column: 5, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11353, file: !11113, line: 422, column: 5)
!11353 = distinct !DILexicalBlock(scope: !11346, file: !11113, line: 422, column: 5)
!11354 = !DILocation(line: 422, column: 5, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11353, file: !11113, line: 422, column: 5)
!11356 = !DILocation(line: 0, scope: !11346)
!11357 = !DILocation(line: 424, column: 28, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11149, file: !11113, line: 424, column: 8)
!11359 = !DILocation(line: 424, column: 38, scope: !11358)
!11360 = !DILocation(line: 0, scope: !11358)
!11361 = !DILocation(line: 424, column: 8, scope: !11149)
!11362 = !DILocation(line: 430, column: 13, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11358, file: !11113, line: 425, column: 5)
!11364 = !DILocation(line: 430, column: 49, scope: !11363)
!11365 = !DILocation(line: 430, column: 7, scope: !11363)
!11366 = !DILocation(line: 432, column: 13, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11368, file: !11113, line: 432, column: 12)
!11368 = distinct !DILexicalBlock(scope: !11363, file: !11113, line: 431, column: 7)
!11369 = !DILocation(line: 432, column: 27, scope: !11367)
!11370 = !DILocation(line: 432, column: 41, scope: !11367)
!11371 = !DILocation(line: 432, column: 12, scope: !11368)
!11372 = distinct !{!11372, !11365, !11373}
!11373 = !DILocation(line: 436, column: 7, scope: !11363)
!11374 = !DILocation(line: 444, column: 13, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11358, file: !11113, line: 439, column: 5)
!11376 = !DILocation(line: 444, column: 7, scope: !11375)
!11377 = !DILocation(line: 446, column: 13, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !11113, line: 446, column: 12)
!11379 = distinct !DILexicalBlock(scope: !11375, file: !11113, line: 445, column: 7)
!11380 = !DILocation(line: 446, column: 27, scope: !11378)
!11381 = !DILocation(line: 446, column: 41, scope: !11378)
!11382 = !DILocation(line: 446, column: 12, scope: !11379)
!11383 = distinct !{!11383, !11376, !11384}
!11384 = !DILocation(line: 450, column: 7, scope: !11375)
!11385 = !DILocation(line: 454, column: 8, scope: !11149)
!11386 = !DILocation(line: 456, column: 7, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !11113, line: 455, column: 5)
!11388 = distinct !DILexicalBlock(scope: !11149, file: !11113, line: 454, column: 8)
!11389 = !DILocation(line: 457, column: 5, scope: !11387)
!11390 = !DILocation(line: 462, column: 31, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11118, file: !11113, line: 462, column: 7)
!11392 = !DILocation(line: 462, column: 41, scope: !11391)
!11393 = !DILocation(line: 462, column: 7, scope: !11118)
!11394 = !DILocation(line: 465, column: 8, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11396, file: !11113, line: 465, column: 8)
!11396 = distinct !DILexicalBlock(scope: !11391, file: !11113, line: 463, column: 3)
!11397 = !DILocation(line: 465, column: 38, scope: !11395)
!11398 = !DILocation(line: 465, column: 8, scope: !11396)
!11399 = !DILocation(line: 467, column: 44, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !11113, line: 467, column: 10)
!11401 = distinct !DILexicalBlock(scope: !11395, file: !11113, line: 466, column: 5)
!11402 = !DILocation(line: 0, scope: !11400)
!11403 = !DILocation(line: 467, column: 10, scope: !11401)
!11404 = !DILocation(line: 483, column: 15, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11400, file: !11113, line: 468, column: 7)
!11406 = !DILocation(line: 483, column: 9, scope: !11405)
!11407 = !DILocation(line: 485, column: 15, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11409, file: !11113, line: 485, column: 14)
!11409 = distinct !DILexicalBlock(scope: !11405, file: !11113, line: 484, column: 9)
!11410 = !DILocation(line: 485, column: 29, scope: !11408)
!11411 = !DILocation(line: 485, column: 43, scope: !11408)
!11412 = !DILocation(line: 485, column: 14, scope: !11409)
!11413 = distinct !{!11413, !11406, !11414}
!11414 = !DILocation(line: 489, column: 9, scope: !11405)
!11415 = !DILocation(line: 492, column: 9, scope: !11405)
!11416 = !DILocation(line: 498, column: 9, scope: !11405)
!11417 = !DILocation(line: 501, column: 21, scope: !11405)
!11418 = !DILocation(line: 504, column: 9, scope: !11405)
!11419 = !DILocation(line: 504, column: 15, scope: !11405)
!11420 = !DILocation(line: 504, column: 51, scope: !11405)
!11421 = !DILocation(line: 506, column: 15, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11423, file: !11113, line: 506, column: 14)
!11423 = distinct !DILexicalBlock(scope: !11405, file: !11113, line: 505, column: 9)
!11424 = !DILocation(line: 506, column: 29, scope: !11422)
!11425 = !DILocation(line: 506, column: 43, scope: !11422)
!11426 = !DILocation(line: 506, column: 14, scope: !11423)
!11427 = distinct !{!11427, !11418, !11428}
!11428 = !DILocation(line: 510, column: 9, scope: !11405)
!11429 = !DILocation(line: 521, column: 15, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11400, file: !11113, line: 513, column: 7)
!11431 = !DILocation(line: 521, column: 9, scope: !11430)
!11432 = !DILocation(line: 523, column: 15, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11434, file: !11113, line: 523, column: 14)
!11434 = distinct !DILexicalBlock(scope: !11430, file: !11113, line: 522, column: 9)
!11435 = !DILocation(line: 523, column: 29, scope: !11433)
!11436 = !DILocation(line: 523, column: 43, scope: !11433)
!11437 = !DILocation(line: 523, column: 14, scope: !11434)
!11438 = distinct !{!11438, !11431, !11439}
!11439 = !DILocation(line: 527, column: 9, scope: !11430)
!11440 = !DILocation(line: 533, column: 44, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !11113, line: 533, column: 10)
!11442 = distinct !DILexicalBlock(scope: !11395, file: !11113, line: 531, column: 5)
!11443 = !DILocation(line: 533, column: 10, scope: !11442)
!11444 = !DILocation(line: 540, column: 27, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11441, file: !11113, line: 538, column: 7)
!11446 = !DILocation(line: 543, column: 14, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11445, file: !11113, line: 542, column: 13)
!11448 = !DILocation(line: 543, column: 81, scope: !11447)
!11449 = !DILocation(line: 543, column: 55, scope: !11447)
!11450 = !DILocation(line: 543, column: 92, scope: !11447)
!11451 = !DILocation(line: 544, column: 14, scope: !11447)
!11452 = !DILocation(line: 544, column: 80, scope: !11447)
!11453 = !DILocation(line: 544, column: 53, scope: !11447)
!11454 = !DILocation(line: 544, column: 111, scope: !11447)
!11455 = !DILocation(line: 545, column: 14, scope: !11447)
!11456 = !DILocation(line: 545, column: 80, scope: !11447)
!11457 = !DILocation(line: 545, column: 86, scope: !11447)
!11458 = !DILocation(line: 545, column: 53, scope: !11447)
!11459 = !DILocation(line: 545, column: 111, scope: !11447)
!11460 = !DILocation(line: 546, column: 14, scope: !11447)
!11461 = !DILocation(line: 546, column: 82, scope: !11447)
!11462 = !DILocation(line: 546, column: 101, scope: !11447)
!11463 = !DILocation(line: 546, column: 53, scope: !11447)
!11464 = !DILocation(line: 546, column: 126, scope: !11447)
!11465 = !DILocation(line: 547, column: 14, scope: !11447)
!11466 = !DILocation(line: 547, column: 80, scope: !11447)
!11467 = !DILocation(line: 547, column: 85, scope: !11447)
!11468 = !DILocation(line: 547, column: 53, scope: !11447)
!11469 = !DILocation(line: 547, column: 111, scope: !11447)
!11470 = !DILocation(line: 548, column: 14, scope: !11447)
!11471 = !DILocation(line: 548, column: 80, scope: !11447)
!11472 = !DILocation(line: 548, column: 85, scope: !11447)
!11473 = !DILocation(line: 548, column: 53, scope: !11447)
!11474 = !DILocation(line: 542, column: 13, scope: !11445)
!11475 = !DILocation(line: 563, column: 3, scope: !11118)
!11476 = !DILocation(line: 564, column: 1, scope: !11118)
!11477 = !DISubprogram(name: "HAL_GetTick", scope: !11478, file: !11478, line: 234, type: !3191, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!11478 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11479 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11113, file: !11113, line: 591, type: !11480, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !11491)
!11480 = !DISubroutineType(types: !11481)
!11481 = !{!11116, !11482, !118}
!11482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11483, size: 32)
!11483 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11123, line: 92, baseType: !11484)
!11484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11123, line: 75, size: 160, elements: !11485)
!11485 = !{!11486, !11487, !11488, !11489, !11490}
!11486 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11484, file: !11123, line: 77, baseType: !118, size: 32)
!11487 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11484, file: !11123, line: 80, baseType: !118, size: 32, offset: 32)
!11488 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11484, file: !11123, line: 83, baseType: !118, size: 32, offset: 64)
!11489 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11484, file: !11123, line: 86, baseType: !118, size: 32, offset: 96)
!11490 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11484, file: !11123, line: 89, baseType: !118, size: 32, offset: 128)
!11491 = !{!11492, !11493, !11494}
!11492 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11479, file: !11113, line: 591, type: !11482)
!11493 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11479, file: !11113, line: 591, type: !118)
!11494 = !DILocalVariable(name: "tickstart", scope: !11479, file: !11113, line: 593, type: !118)
!11495 = !DILocation(line: 0, scope: !11479)
!11496 = !DILocation(line: 596, column: 24, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11479, file: !11113, line: 596, column: 6)
!11498 = !DILocation(line: 596, column: 6, scope: !11479)
!11499 = !DILocation(line: 610, column: 17, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11479, file: !11113, line: 610, column: 6)
!11501 = !DILocation(line: 610, column: 15, scope: !11500)
!11502 = !DILocation(line: 610, column: 6, scope: !11479)
!11503 = !DILocation(line: 613, column: 5, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11500, file: !11113, line: 611, column: 3)
!11505 = !DILocation(line: 617, column: 8, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11504, file: !11113, line: 617, column: 8)
!11507 = !DILocation(line: 617, column: 34, scope: !11506)
!11508 = !DILocation(line: 617, column: 8, scope: !11504)
!11509 = !DILocation(line: 624, column: 27, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11479, file: !11113, line: 624, column: 6)
!11511 = !DILocation(line: 624, column: 38, scope: !11510)
!11512 = !DILocation(line: 624, column: 60, scope: !11510)
!11513 = !DILocation(line: 624, column: 6, scope: !11479)
!11514 = !DILocation(line: 628, column: 40, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11516, file: !11113, line: 628, column: 8)
!11516 = distinct !DILexicalBlock(scope: !11510, file: !11113, line: 625, column: 3)
!11517 = !DILocation(line: 628, column: 63, scope: !11515)
!11518 = !DILocation(line: 628, column: 8, scope: !11516)
!11519 = !DILocation(line: 630, column: 7, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11515, file: !11113, line: 629, column: 5)
!11521 = !DILocation(line: 633, column: 29, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11516, file: !11113, line: 633, column: 8)
!11523 = !DILocation(line: 631, column: 5, scope: !11520)
!11524 = !DILocation(line: 633, column: 40, scope: !11522)
!11525 = !DILocation(line: 633, column: 63, scope: !11522)
!11526 = !DILocation(line: 633, column: 8, scope: !11516)
!11527 = !DILocation(line: 635, column: 7, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11522, file: !11113, line: 634, column: 5)
!11529 = !DILocation(line: 636, column: 5, scope: !11528)
!11530 = !DILocation(line: 639, column: 5, scope: !11516)
!11531 = !DILocation(line: 643, column: 27, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11479, file: !11113, line: 643, column: 6)
!11533 = !DILocation(line: 640, column: 3, scope: !11516)
!11534 = !DILocation(line: 643, column: 38, scope: !11532)
!11535 = !DILocation(line: 643, column: 62, scope: !11532)
!11536 = !DILocation(line: 643, column: 6, scope: !11479)
!11537 = !DILocation(line: 648, column: 27, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !11113, line: 648, column: 8)
!11539 = distinct !DILexicalBlock(scope: !11532, file: !11113, line: 644, column: 3)
!11540 = !DILocation(line: 648, column: 8, scope: !11539)
!11541 = !DILocation(line: 651, column: 10, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11543, file: !11113, line: 651, column: 10)
!11543 = distinct !DILexicalBlock(scope: !11538, file: !11113, line: 649, column: 5)
!11544 = !DILocation(line: 651, column: 46, scope: !11542)
!11545 = !DILocation(line: 651, column: 10, scope: !11543)
!11546 = !DILocation(line: 661, column: 10, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11548, file: !11113, line: 661, column: 10)
!11548 = distinct !DILexicalBlock(scope: !11549, file: !11113, line: 659, column: 5)
!11549 = distinct !DILexicalBlock(scope: !11538, file: !11113, line: 657, column: 13)
!11550 = !DILocation(line: 661, column: 46, scope: !11547)
!11551 = !DILocation(line: 661, column: 10, scope: !11548)
!11552 = !DILocation(line: 670, column: 10, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11554, file: !11113, line: 670, column: 10)
!11554 = distinct !DILexicalBlock(scope: !11549, file: !11113, line: 668, column: 5)
!11555 = !DILocation(line: 670, column: 46, scope: !11553)
!11556 = !DILocation(line: 670, column: 10, scope: !11554)
!11557 = !DILocation(line: 676, column: 5, scope: !11539)
!11558 = !DILocation(line: 679, column: 17, scope: !11539)
!11559 = !DILocation(line: 681, column: 5, scope: !11539)
!11560 = !DILocation(line: 681, column: 12, scope: !11539)
!11561 = !DILocation(line: 681, column: 65, scope: !11539)
!11562 = !DILocation(line: 681, column: 78, scope: !11539)
!11563 = !DILocation(line: 681, column: 42, scope: !11539)
!11564 = !DILocation(line: 683, column: 12, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11566, file: !11113, line: 683, column: 11)
!11566 = distinct !DILexicalBlock(scope: !11539, file: !11113, line: 682, column: 5)
!11567 = !DILocation(line: 683, column: 26, scope: !11565)
!11568 = !DILocation(line: 683, column: 39, scope: !11565)
!11569 = !DILocation(line: 683, column: 11, scope: !11566)
!11570 = distinct !{!11570, !11559, !11571}
!11571 = !DILocation(line: 687, column: 5, scope: !11539)
!11572 = !DILocation(line: 691, column: 17, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11479, file: !11113, line: 691, column: 6)
!11574 = !DILocation(line: 691, column: 15, scope: !11573)
!11575 = !DILocation(line: 691, column: 6, scope: !11479)
!11576 = !DILocation(line: 694, column: 5, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11573, file: !11113, line: 692, column: 3)
!11578 = !DILocation(line: 698, column: 8, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11577, file: !11113, line: 698, column: 8)
!11580 = !DILocation(line: 698, column: 34, scope: !11579)
!11581 = !DILocation(line: 698, column: 8, scope: !11577)
!11582 = !DILocation(line: 705, column: 27, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11479, file: !11113, line: 705, column: 6)
!11584 = !DILocation(line: 705, column: 38, scope: !11583)
!11585 = !DILocation(line: 705, column: 61, scope: !11583)
!11586 = !DILocation(line: 705, column: 6, scope: !11479)
!11587 = !DILocation(line: 708, column: 5, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11583, file: !11113, line: 706, column: 3)
!11589 = !DILocation(line: 712, column: 27, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11479, file: !11113, line: 712, column: 6)
!11591 = !DILocation(line: 709, column: 3, scope: !11588)
!11592 = !DILocation(line: 712, column: 38, scope: !11590)
!11593 = !DILocation(line: 712, column: 61, scope: !11590)
!11594 = !DILocation(line: 712, column: 6, scope: !11479)
!11595 = !DILocation(line: 715, column: 5, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11590, file: !11113, line: 713, column: 3)
!11597 = !DILocation(line: 716, column: 3, scope: !11596)
!11598 = !DILocation(line: 719, column: 21, scope: !11479)
!11599 = !DILocation(line: 719, column: 70, scope: !11479)
!11600 = !DILocation(line: 719, column: 91, scope: !11479)
!11601 = !DILocation(line: 719, column: 50, scope: !11479)
!11602 = !DILocation(line: 719, column: 47, scope: !11479)
!11603 = !DILocation(line: 719, column: 19, scope: !11479)
!11604 = !DILocation(line: 722, column: 17, scope: !11479)
!11605 = !DILocation(line: 722, column: 3, scope: !11479)
!11606 = !DILocation(line: 724, column: 3, scope: !11479)
!11607 = !DILocation(line: 725, column: 1, scope: !11479)
!11608 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11113, file: !11113, line: 885, type: !3191, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !11609)
!11609 = !{!11610, !11611, !11612, !11613}
!11610 = !DILocalVariable(name: "pllm", scope: !11608, file: !11113, line: 887, type: !118)
!11611 = !DILocalVariable(name: "pllvco", scope: !11608, file: !11113, line: 887, type: !118)
!11612 = !DILocalVariable(name: "pllp", scope: !11608, file: !11113, line: 887, type: !118)
!11613 = !DILocalVariable(name: "sysclockfreq", scope: !11608, file: !11113, line: 888, type: !118)
!11614 = !DILocation(line: 0, scope: !11608)
!11615 = !DILocation(line: 891, column: 16, scope: !11608)
!11616 = !DILocation(line: 891, column: 21, scope: !11608)
!11617 = !DILocation(line: 891, column: 3, scope: !11608)
!11618 = !DILocation(line: 907, column: 19, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11620, file: !11113, line: 904, column: 5)
!11620 = distinct !DILexicalBlock(scope: !11608, file: !11113, line: 892, column: 3)
!11621 = !DILocation(line: 907, column: 27, scope: !11619)
!11622 = !DILocation(line: 908, column: 10, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11619, file: !11113, line: 908, column: 10)
!11624 = !DILocation(line: 0, scope: !11623)
!11625 = !DILocation(line: 918, column: 23, scope: !11619)
!11626 = !DILocation(line: 918, column: 82, scope: !11619)
!11627 = !DILocation(line: 920, column: 28, scope: !11619)
!11628 = !DILocation(line: 921, column: 7, scope: !11619)
!11629 = !DILocation(line: 0, scope: !11620)
!11630 = !DILocation(line: 929, column: 3, scope: !11608)
!11631 = !DISubprogram(name: "HAL_InitTick", scope: !11478, file: !11478, line: 223, type: !11632, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!11632 = !DISubroutineType(types: !11633)
!11633 = !{!11116, !118}
!11634 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11113, file: !11113, line: 775, type: !11635, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !11637)
!11635 = !DISubroutineType(types: !11636)
!11636 = !{null, !118, !118, !118}
!11637 = !{!11638, !11639, !11640, !11641, !11651}
!11638 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11634, file: !11113, line: 775, type: !118)
!11639 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11634, file: !11113, line: 775, type: !118)
!11640 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11634, file: !11113, line: 775, type: !118)
!11641 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11634, file: !11113, line: 777, type: !11642)
!11642 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11643, line: 62, baseType: !11644)
!11643 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11643, line: 46, size: 160, elements: !11645)
!11645 = !{!11646, !11647, !11648, !11649, !11650}
!11646 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11644, file: !11643, line: 48, baseType: !118, size: 32)
!11647 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11644, file: !11643, line: 51, baseType: !118, size: 32, offset: 32)
!11648 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11644, file: !11643, line: 54, baseType: !118, size: 32, offset: 64)
!11649 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11644, file: !11643, line: 57, baseType: !118, size: 32, offset: 96)
!11650 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11644, file: !11643, line: 60, baseType: !118, size: 32, offset: 128)
!11651 = !DILocalVariable(name: "tmpreg", scope: !11652, file: !11113, line: 787, type: !314)
!11652 = distinct !DILexicalBlock(scope: !11653, file: !11113, line: 787, column: 5)
!11653 = distinct !DILexicalBlock(scope: !11654, file: !11113, line: 783, column: 3)
!11654 = distinct !DILexicalBlock(scope: !11634, file: !11113, line: 782, column: 6)
!11655 = !DILocation(line: 0, scope: !11634)
!11656 = !DILocation(line: 777, column: 3, scope: !11634)
!11657 = !DILocation(line: 777, column: 20, scope: !11634)
!11658 = !DILocation(line: 782, column: 15, scope: !11654)
!11659 = !DILocation(line: 782, column: 6, scope: !11634)
!11660 = !DILocation(line: 787, column: 5, scope: !11652)
!11661 = !DILocation(line: 787, column: 5, scope: !11653)
!11662 = !DILocation(line: 790, column: 21, scope: !11653)
!11663 = !DILocation(line: 790, column: 25, scope: !11653)
!11664 = !DILocation(line: 791, column: 21, scope: !11653)
!11665 = !DILocation(line: 791, column: 26, scope: !11653)
!11666 = !DILocation(line: 792, column: 21, scope: !11653)
!11667 = !DILocation(line: 792, column: 27, scope: !11653)
!11668 = !DILocation(line: 793, column: 21, scope: !11653)
!11669 = !DILocation(line: 793, column: 26, scope: !11653)
!11670 = !DILocation(line: 794, column: 21, scope: !11653)
!11671 = !DILocation(line: 794, column: 31, scope: !11653)
!11672 = !DILocation(line: 795, column: 5, scope: !11653)
!11673 = !DILocation(line: 798, column: 5, scope: !11653)
!11674 = !DILocation(line: 804, column: 3, scope: !11653)
!11675 = !DILocation(line: 830, column: 1, scope: !11634)
!11676 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11643, file: !11643, line: 224, type: !11677, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!11677 = !DISubroutineType(types: !11678)
!11678 = !{null, !2836, !11679}
!11679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11642, size: 32)
!11680 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11113, file: !11113, line: 841, type: !2953, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !2022)
!11681 = !DILocation(line: 843, column: 38, scope: !11680)
!11682 = !DILocation(line: 844, column: 1, scope: !11680)
!11683 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11113, file: !11113, line: 850, type: !2953, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !2022)
!11684 = !DILocation(line: 852, column: 38, scope: !11683)
!11685 = !DILocation(line: 853, column: 1, scope: !11683)
!11686 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11113, file: !11113, line: 941, type: !3191, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !2022)
!11687 = !DILocation(line: 943, column: 10, scope: !11686)
!11688 = !DILocation(line: 943, column: 3, scope: !11686)
!11689 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11113, file: !11113, line: 952, type: !3191, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !2022)
!11690 = !DILocation(line: 955, column: 11, scope: !11689)
!11691 = !DILocation(line: 955, column: 56, scope: !11689)
!11692 = !DILocation(line: 955, column: 78, scope: !11689)
!11693 = !DILocation(line: 955, column: 36, scope: !11689)
!11694 = !DILocation(line: 955, column: 33, scope: !11689)
!11695 = !DILocation(line: 955, column: 3, scope: !11689)
!11696 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11113, file: !11113, line: 964, type: !3191, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !2022)
!11697 = !DILocation(line: 967, column: 11, scope: !11696)
!11698 = !DILocation(line: 967, column: 55, scope: !11696)
!11699 = !DILocation(line: 967, column: 77, scope: !11696)
!11700 = !DILocation(line: 967, column: 35, scope: !11696)
!11701 = !DILocation(line: 967, column: 32, scope: !11696)
!11702 = !DILocation(line: 967, column: 3, scope: !11696)
!11703 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11113, file: !11113, line: 977, type: !11704, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !11706)
!11704 = !DISubroutineType(types: !11705)
!11705 = !{null, !11121}
!11706 = !{!11707}
!11707 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11703, file: !11113, line: 977, type: !11121)
!11708 = !DILocation(line: 0, scope: !11703)
!11709 = !DILocation(line: 980, column: 22, scope: !11703)
!11710 = !DILocation(line: 980, column: 37, scope: !11703)
!11711 = !DILocation(line: 983, column: 12, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11703, file: !11113, line: 983, column: 6)
!11713 = !DILocation(line: 983, column: 15, scope: !11712)
!11714 = !DILocation(line: 983, column: 31, scope: !11712)
!11715 = !DILocation(line: 983, column: 6, scope: !11703)
!11716 = !DILocation(line: 985, column: 24, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11712, file: !11113, line: 984, column: 3)
!11718 = !DILocation(line: 985, column: 33, scope: !11717)
!11719 = !DILocation(line: 986, column: 3, scope: !11717)
!11720 = !DILocation(line: 987, column: 17, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11712, file: !11113, line: 987, column: 11)
!11722 = !DILocation(line: 987, column: 20, scope: !11721)
!11723 = !DILocation(line: 987, column: 35, scope: !11721)
!11724 = !DILocation(line: 0, scope: !11721)
!11725 = !DILocation(line: 987, column: 11, scope: !11712)
!11726 = !DILocation(line: 989, column: 33, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11721, file: !11113, line: 988, column: 3)
!11728 = !DILocation(line: 990, column: 3, scope: !11727)
!11729 = !DILocation(line: 993, column: 33, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11721, file: !11113, line: 992, column: 3)
!11731 = !DILocation(line: 997, column: 12, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11703, file: !11113, line: 997, column: 6)
!11733 = !DILocation(line: 997, column: 15, scope: !11732)
!11734 = !DILocation(line: 1003, column: 24, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11732, file: !11113, line: 1002, column: 3)
!11736 = !DILocation(line: 1003, column: 33, scope: !11735)
!11737 = !DILocation(line: 1006, column: 61, scope: !11703)
!11738 = !DILocation(line: 1006, column: 81, scope: !11703)
!11739 = !DILocation(line: 1006, column: 22, scope: !11703)
!11740 = !DILocation(line: 1006, column: 42, scope: !11703)
!11741 = !DILocation(line: 1009, column: 12, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11703, file: !11113, line: 1009, column: 6)
!11743 = !DILocation(line: 1009, column: 17, scope: !11742)
!11744 = !DILocation(line: 1009, column: 35, scope: !11742)
!11745 = !DILocation(line: 1009, column: 6, scope: !11703)
!11746 = !DILocation(line: 1011, column: 24, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11742, file: !11113, line: 1010, column: 3)
!11748 = !DILocation(line: 1011, column: 33, scope: !11747)
!11749 = !DILocation(line: 1012, column: 3, scope: !11747)
!11750 = !DILocation(line: 1013, column: 17, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11742, file: !11113, line: 1013, column: 11)
!11752 = !DILocation(line: 1013, column: 22, scope: !11751)
!11753 = !DILocation(line: 1013, column: 39, scope: !11751)
!11754 = !DILocation(line: 0, scope: !11751)
!11755 = !DILocation(line: 1013, column: 11, scope: !11742)
!11756 = !DILocation(line: 1015, column: 33, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11751, file: !11113, line: 1014, column: 3)
!11758 = !DILocation(line: 1016, column: 3, scope: !11757)
!11759 = !DILocation(line: 1019, column: 33, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11751, file: !11113, line: 1018, column: 3)
!11761 = !DILocation(line: 1023, column: 12, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11703, file: !11113, line: 1023, column: 6)
!11763 = !DILocation(line: 1023, column: 16, scope: !11762)
!11764 = !DILocation(line: 1029, column: 24, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11762, file: !11113, line: 1028, column: 3)
!11766 = !DILocation(line: 1029, column: 33, scope: !11765)
!11767 = !DILocation(line: 1033, column: 12, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11703, file: !11113, line: 1033, column: 6)
!11769 = !DILocation(line: 1033, column: 15, scope: !11768)
!11770 = !DILocation(line: 1033, column: 30, scope: !11768)
!11771 = !DILocation(line: 1033, column: 6, scope: !11703)
!11772 = !DILocation(line: 1039, column: 28, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11768, file: !11113, line: 1038, column: 3)
!11774 = !DILocation(line: 1039, column: 37, scope: !11773)
!11775 = !DILocation(line: 1041, column: 54, scope: !11703)
!11776 = !DILocation(line: 1041, column: 62, scope: !11703)
!11777 = !DILocation(line: 1041, column: 26, scope: !11703)
!11778 = !DILocation(line: 1041, column: 36, scope: !11703)
!11779 = !DILocation(line: 1042, column: 49, scope: !11703)
!11780 = !DILocation(line: 1042, column: 57, scope: !11703)
!11781 = !DILocation(line: 1042, column: 26, scope: !11703)
!11782 = !DILocation(line: 1042, column: 31, scope: !11703)
!11783 = !DILocation(line: 1043, column: 50, scope: !11703)
!11784 = !DILocation(line: 1043, column: 78, scope: !11703)
!11785 = !DILocation(line: 1043, column: 26, scope: !11703)
!11786 = !DILocation(line: 1043, column: 31, scope: !11703)
!11787 = !DILocation(line: 1044, column: 52, scope: !11703)
!11788 = !DILocation(line: 1044, column: 102, scope: !11703)
!11789 = !DILocation(line: 1044, column: 109, scope: !11703)
!11790 = !DILocation(line: 1044, column: 26, scope: !11703)
!11791 = !DILocation(line: 1044, column: 31, scope: !11703)
!11792 = !DILocation(line: 1045, column: 50, scope: !11703)
!11793 = !DILocation(line: 1045, column: 78, scope: !11703)
!11794 = !DILocation(line: 1045, column: 26, scope: !11703)
!11795 = !DILocation(line: 1045, column: 31, scope: !11703)
!11796 = !DILocation(line: 1046, column: 1, scope: !11703)
!11797 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11113, file: !11113, line: 1056, type: !11798, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !11800)
!11798 = !DISubroutineType(types: !11799)
!11799 = !{null, !11482, !882}
!11800 = !{!11801, !11802}
!11801 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11797, file: !11113, line: 1056, type: !11482)
!11802 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11797, file: !11113, line: 1056, type: !882)
!11803 = !DILocation(line: 0, scope: !11797)
!11804 = !DILocation(line: 1059, column: 22, scope: !11797)
!11805 = !DILocation(line: 1059, column: 32, scope: !11797)
!11806 = !DILocation(line: 1062, column: 53, scope: !11797)
!11807 = !DILocation(line: 1062, column: 58, scope: !11797)
!11808 = !DILocation(line: 1062, column: 22, scope: !11797)
!11809 = !DILocation(line: 1062, column: 35, scope: !11797)
!11810 = !DILocation(line: 1065, column: 54, scope: !11797)
!11811 = !DILocation(line: 1065, column: 59, scope: !11797)
!11812 = !DILocation(line: 1065, column: 22, scope: !11797)
!11813 = !DILocation(line: 1065, column: 36, scope: !11797)
!11814 = !DILocation(line: 1068, column: 55, scope: !11797)
!11815 = !DILocation(line: 1068, column: 60, scope: !11797)
!11816 = !DILocation(line: 1068, column: 22, scope: !11797)
!11817 = !DILocation(line: 1068, column: 37, scope: !11797)
!11818 = !DILocation(line: 1071, column: 56, scope: !11797)
!11819 = !DILocation(line: 1071, column: 79, scope: !11797)
!11820 = !DILocation(line: 1071, column: 22, scope: !11797)
!11821 = !DILocation(line: 1071, column: 37, scope: !11797)
!11822 = !DILocation(line: 1074, column: 34, scope: !11797)
!11823 = !DILocation(line: 1074, column: 38, scope: !11797)
!11824 = !DILocation(line: 1074, column: 14, scope: !11797)
!11825 = !DILocation(line: 1075, column: 1, scope: !11797)
!11826 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11113, file: !11113, line: 1082, type: !2953, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !2022)
!11827 = !DILocation(line: 1085, column: 6, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11826, file: !11113, line: 1085, column: 6)
!11829 = !DILocation(line: 1085, column: 6, scope: !11826)
!11830 = !DILocation(line: 1088, column: 5, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11828, file: !11113, line: 1086, column: 3)
!11832 = !DILocation(line: 1091, column: 5, scope: !11831)
!11833 = !DILocation(line: 1092, column: 3, scope: !11831)
!11834 = !DILocation(line: 1093, column: 1, scope: !11826)
!11835 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11113, file: !11113, line: 1099, type: !2953, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !2022)
!11836 = !DILocation(line: 1104, column: 1, scope: !11835)
!11837 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11838, file: !11838, line: 257, type: !6410, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11839)
!11838 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11839 = !{!11840}
!11840 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11837, file: !11838, line: 257, type: !118)
!11841 = !DILocation(line: 0, scope: !11837)
!11842 = !DILocation(line: 260, column: 3, scope: !11837)
!11843 = !DILocation(line: 261, column: 1, scope: !11837)
!11844 = distinct !DISubprogram(name: "LL_InitTick", scope: !11845, file: !11845, line: 260, type: !9472, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11846)
!11845 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11846 = !{!11847, !11848}
!11847 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11844, file: !11845, line: 260, type: !118)
!11848 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11844, file: !11845, line: 260, type: !118)
!11849 = !DILocation(line: 0, scope: !11844)
!11850 = !DILocation(line: 263, column: 46, scope: !11844)
!11851 = !DILocation(line: 263, column: 55, scope: !11844)
!11852 = !DILocation(line: 263, column: 18, scope: !11844)
!11853 = !DILocation(line: 264, column: 18, scope: !11844)
!11854 = !DILocation(line: 265, column: 18, scope: !11844)
!11855 = !DILocation(line: 267, column: 1, scope: !11844)
!11856 = distinct !DISubprogram(name: "LL_mDelay", scope: !11838, file: !11838, line: 273, type: !6410, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11857)
!11857 = !{!11858, !11859}
!11858 = !DILocalVariable(name: "Delay", arg: 1, scope: !11856, file: !11838, line: 273, type: !118)
!11859 = !DILocalVariable(name: "tmp", scope: !11856, file: !11838, line: 275, type: !314)
!11860 = !DILocation(line: 0, scope: !11856)
!11861 = !DILocation(line: 275, column: 3, scope: !11856)
!11862 = !DILocation(line: 275, column: 18, scope: !11856)
!11863 = !DILocation(line: 275, column: 33, scope: !11856)
!11864 = !DILocation(line: 277, column: 10, scope: !11856)
!11865 = !DILocation(line: 280, column: 12, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11856, file: !11838, line: 280, column: 6)
!11867 = !DILocation(line: 285, column: 3, scope: !11856)
!11868 = !DILocation(line: 287, column: 18, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11870, file: !11838, line: 287, column: 8)
!11870 = distinct !DILexicalBlock(scope: !11856, file: !11838, line: 286, column: 3)
!11871 = !DILocation(line: 292, column: 1, scope: !11856)
!11872 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11838, file: !11838, line: 323, type: !6410, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11873)
!11873 = !{!11874}
!11874 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11872, file: !11838, line: 323, type: !118)
!11875 = !DILocation(line: 0, scope: !11872)
!11876 = !DILocation(line: 326, column: 19, scope: !11872)
!11877 = !DILocation(line: 327, column: 1, scope: !11872)
!11878 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11838, file: !11838, line: 338, type: !11879, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11882)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{!11881, !118}
!11881 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !828, line: 201, baseType: !827)
!11882 = !{!11883, !11884, !11885, !11886, !11887}
!11883 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11878, file: !11838, line: 338, type: !118)
!11884 = !DILocalVariable(name: "timeout", scope: !11878, file: !11838, line: 340, type: !118)
!11885 = !DILocalVariable(name: "getlatency", scope: !11878, file: !11838, line: 341, type: !118)
!11886 = !DILocalVariable(name: "latency", scope: !11878, file: !11838, line: 342, type: !118)
!11887 = !DILocalVariable(name: "status", scope: !11878, file: !11838, line: 343, type: !11881)
!11888 = !DILocation(line: 0, scope: !11878)
!11889 = !DILocation(line: 347, column: 21, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11878, file: !11838, line: 347, column: 6)
!11891 = !DILocation(line: 347, column: 6, scope: !11878)
!11892 = !DILocation(line: 353, column: 8, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11894, file: !11838, line: 353, column: 8)
!11894 = distinct !DILexicalBlock(scope: !11890, file: !11838, line: 352, column: 3)
!11895 = !DILocation(line: 353, column: 40, scope: !11893)
!11896 = !DILocation(line: 353, column: 8, scope: !11894)
!11897 = !DILocation(line: 374, column: 55, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11899, file: !11838, line: 374, column: 10)
!11899 = distinct !DILexicalBlock(scope: !11893, file: !11838, line: 354, column: 5)
!11900 = !DILocation(line: 368, column: 26, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11899, file: !11838, line: 368, column: 10)
!11902 = !DILocation(line: 368, column: 55, scope: !11901)
!11903 = !DILocation(line: 380, column: 57, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11905, file: !11838, line: 380, column: 12)
!11905 = distinct !DILexicalBlock(scope: !11898, file: !11838, line: 379, column: 7)
!11906 = !DILocation(line: 387, column: 8, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11894, file: !11838, line: 387, column: 8)
!11908 = !DILocation(line: 387, column: 40, scope: !11907)
!11909 = !DILocation(line: 387, column: 8, scope: !11894)
!11910 = !DILocation(line: 407, column: 26, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11912, file: !11838, line: 407, column: 10)
!11912 = distinct !DILexicalBlock(scope: !11907, file: !11838, line: 388, column: 5)
!11913 = !DILocation(line: 407, column: 55, scope: !11911)
!11914 = !DILocation(line: 413, column: 28, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11916, file: !11838, line: 413, column: 12)
!11916 = distinct !DILexicalBlock(scope: !11911, file: !11838, line: 412, column: 7)
!11917 = !DILocation(line: 413, column: 57, scope: !11915)
!11918 = !DILocation(line: 0, scope: !11894)
!11919 = !DILocation(line: 420, column: 8, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11894, file: !11838, line: 420, column: 8)
!11921 = !DILocation(line: 420, column: 40, scope: !11920)
!11922 = !DILocation(line: 420, column: 8, scope: !11894)
!11923 = !DILocation(line: 429, column: 26, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11925, file: !11838, line: 429, column: 10)
!11925 = distinct !DILexicalBlock(scope: !11920, file: !11838, line: 421, column: 5)
!11926 = !DILocation(line: 429, column: 55, scope: !11924)
!11927 = !DILocation(line: 435, column: 28, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !11838, line: 435, column: 12)
!11929 = distinct !DILexicalBlock(scope: !11924, file: !11838, line: 434, column: 7)
!11930 = !DILocation(line: 435, column: 57, scope: !11928)
!11931 = !DILocation(line: 444, column: 5, scope: !11894)
!11932 = !DILocation(line: 448, column: 5, scope: !11894)
!11933 = !DILocation(line: 451, column: 18, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11894, file: !11838, line: 449, column: 5)
!11935 = !DILocation(line: 452, column: 12, scope: !11934)
!11936 = !DILocation(line: 453, column: 26, scope: !11894)
!11937 = !DILocation(line: 453, column: 38, scope: !11894)
!11938 = !DILocation(line: 453, column: 5, scope: !11934)
!11939 = distinct !{!11939, !11932, !11940}
!11940 = !DILocation(line: 453, column: 54, scope: !11894)
!11941 = !DILocation(line: 0, scope: !11890)
!11942 = !DILocation(line: 464, column: 3, scope: !11878)
!11943 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11944, file: !11944, line: 519, type: !3191, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!11944 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11945 = !DILocation(line: 521, column: 21, scope: !11943)
!11946 = !DILocation(line: 521, column: 3, scope: !11943)
!11947 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6015, file: !6015, line: 1543, type: !6410, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11948)
!11948 = !{!11949}
!11949 = !DILocalVariable(name: "Latency", arg: 1, scope: !11947, file: !6015, line: 1543, type: !118)
!11950 = !DILocation(line: 0, scope: !11947)
!11951 = !DILocation(line: 1545, column: 3, scope: !11947)
!11952 = !DILocation(line: 1546, column: 1, scope: !11947)
!11953 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6015, file: !6015, line: 1569, type: !3191, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!11954 = !DILocation(line: 1571, column: 21, scope: !11953)
!11955 = !DILocation(line: 1571, column: 3, scope: !11953)
!11956 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11838, file: !11838, line: 483, type: !11957, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11973)
!11957 = !DISubroutineType(types: !11958)
!11958 = !{!11881, !11959, !11966}
!11959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11960, size: 32)
!11960 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11845, line: 114, baseType: !11961)
!11961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11845, line: 94, size: 96, elements: !11962)
!11962 = !{!11963, !11964, !11965}
!11963 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11961, file: !11845, line: 96, baseType: !118, size: 32)
!11964 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11961, file: !11845, line: 102, baseType: !118, size: 32, offset: 32)
!11965 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11961, file: !11845, line: 109, baseType: !118, size: 32, offset: 64)
!11966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11967, size: 32)
!11967 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11845, line: 139, baseType: !11968)
!11968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11845, line: 119, size: 96, elements: !11969)
!11969 = !{!11970, !11971, !11972}
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11968, file: !11845, line: 121, baseType: !118, size: 32)
!11971 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11968, file: !11845, line: 127, baseType: !118, size: 32, offset: 32)
!11972 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11968, file: !11845, line: 133, baseType: !118, size: 32, offset: 64)
!11973 = !{!11974, !11975, !11976, !11977}
!11974 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11956, file: !11838, line: 483, type: !11959)
!11975 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11956, file: !11838, line: 484, type: !11966)
!11976 = !DILocalVariable(name: "status", scope: !11956, file: !11838, line: 486, type: !11881)
!11977 = !DILocalVariable(name: "pllfreq", scope: !11956, file: !11838, line: 487, type: !118)
!11978 = !DILocation(line: 0, scope: !11956)
!11979 = !DILocation(line: 490, column: 6, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11956, file: !11838, line: 490, column: 6)
!11981 = !DILocation(line: 490, column: 25, scope: !11980)
!11982 = !DILocation(line: 490, column: 6, scope: !11956)
!11983 = !DILocation(line: 493, column: 15, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11980, file: !11838, line: 491, column: 3)
!11985 = !DILocation(line: 496, column: 8, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11984, file: !11838, line: 496, column: 8)
!11987 = !DILocation(line: 496, column: 29, scope: !11986)
!11988 = !DILocation(line: 496, column: 8, scope: !11984)
!11989 = !DILocation(line: 498, column: 7, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11986, file: !11838, line: 497, column: 5)
!11991 = !DILocation(line: 499, column: 7, scope: !11990)
!11992 = !DILocation(line: 499, column: 14, scope: !11990)
!11993 = !DILocation(line: 499, column: 35, scope: !11990)
!11994 = distinct !{!11994, !11991, !11995}
!11995 = !DILocation(line: 502, column: 7, scope: !11990)
!11996 = !DILocation(line: 506, column: 76, scope: !11984)
!11997 = !DILocation(line: 506, column: 103, scope: !11984)
!11998 = !DILocation(line: 507, column: 54, scope: !11984)
!11999 = !DILocation(line: 506, column: 5, scope: !11984)
!12000 = !DILocation(line: 510, column: 14, scope: !11984)
!12001 = !DILocation(line: 511, column: 3, scope: !11984)
!12002 = !DILocation(line: 0, scope: !11980)
!12003 = !DILocation(line: 518, column: 3, scope: !11956)
!12004 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11838, file: !11838, line: 642, type: !12005, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12007)
!12005 = !DISubroutineType(types: !12006)
!12006 = !{!11881}
!12007 = !{!12008}
!12008 = !DILocalVariable(name: "status", scope: !12004, file: !11838, line: 644, type: !11881)
!12009 = !DILocation(line: 0, scope: !12004)
!12010 = !DILocation(line: 647, column: 6, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12004, file: !11838, line: 647, column: 6)
!12012 = !DILocation(line: 647, column: 27, scope: !12011)
!12013 = !DILocation(line: 663, column: 6, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12004, file: !11838, line: 663, column: 6)
!12015 = !DILocation(line: 663, column: 30, scope: !12014)
!12016 = !DILocation(line: 663, column: 6, scope: !12004)
!12017 = !DILocation(line: 669, column: 3, scope: !12004)
!12018 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11838, file: !11838, line: 611, type: !12019, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12021)
!12019 = !DISubroutineType(types: !12020)
!12020 = !{!118, !118, !11959}
!12021 = !{!12022, !12023, !12024}
!12022 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12018, file: !11838, line: 611, type: !118)
!12023 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12018, file: !11838, line: 611, type: !11959)
!12024 = !DILocalVariable(name: "pllfreq", scope: !12018, file: !11838, line: 613, type: !118)
!12025 = !DILocation(line: 0, scope: !12018)
!12026 = !DILocation(line: 622, column: 56, scope: !12018)
!12027 = !DILocation(line: 622, column: 61, scope: !12018)
!12028 = !DILocation(line: 622, column: 32, scope: !12018)
!12029 = !DILocation(line: 626, column: 45, scope: !12018)
!12030 = !DILocation(line: 626, column: 50, scope: !12018)
!12031 = !DILocation(line: 626, column: 21, scope: !12018)
!12032 = !DILocation(line: 630, column: 47, scope: !12018)
!12033 = !DILocation(line: 630, column: 82, scope: !12018)
!12034 = !DILocation(line: 630, column: 21, scope: !12018)
!12035 = !DILocation(line: 633, column: 3, scope: !12018)
!12036 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8798, file: !8798, line: 3007, type: !3191, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12037 = !DILocation(line: 3009, column: 11, scope: !12036)
!12038 = !DILocation(line: 3009, column: 44, scope: !12036)
!12039 = !DILocation(line: 3009, column: 3, scope: !12036)
!12040 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8798, file: !8798, line: 2987, type: !2953, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12041 = !DILocation(line: 2989, column: 3, scope: !12040)
!12042 = !DILocation(line: 2990, column: 1, scope: !12040)
!12043 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8798, file: !8798, line: 4304, type: !8932, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12044)
!12044 = !{!12045, !12046, !12047, !12048}
!12045 = !DILocalVariable(name: "Source", arg: 1, scope: !12043, file: !8798, line: 4304, type: !118)
!12046 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12043, file: !8798, line: 4304, type: !118)
!12047 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12043, file: !8798, line: 4304, type: !118)
!12048 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12043, file: !8798, line: 4304, type: !118)
!12049 = !DILocation(line: 0, scope: !12043)
!12050 = !DILocation(line: 4306, column: 3, scope: !12043)
!12051 = !DILocation(line: 4308, column: 3, scope: !12043)
!12052 = !DILocation(line: 4312, column: 1, scope: !12043)
!12053 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11838, file: !11838, line: 681, type: !12054, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12056)
!12054 = !DISubroutineType(types: !12055)
!12055 = !{!11881, !118, !11966}
!12056 = !{!12057, !12058, !12059, !12060}
!12057 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12053, file: !11838, line: 681, type: !118)
!12058 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12053, file: !11838, line: 681, type: !11966)
!12059 = !DILocalVariable(name: "status", scope: !12053, file: !11838, line: 683, type: !11881)
!12060 = !DILocalVariable(name: "hclk_frequency", scope: !12053, file: !11838, line: 684, type: !118)
!12061 = !DILocation(line: 0, scope: !12053)
!12062 = !DILocation(line: 691, column: 20, scope: !12053)
!12063 = !DILocation(line: 694, column: 6, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12053, file: !11838, line: 694, column: 6)
!12065 = !DILocation(line: 694, column: 22, scope: !12064)
!12066 = !DILocation(line: 694, column: 6, scope: !12053)
!12067 = !DILocation(line: 697, column: 14, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12064, file: !11838, line: 695, column: 3)
!12069 = !DILocation(line: 701, column: 13, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12053, file: !11838, line: 701, column: 6)
!12071 = !DILocation(line: 701, column: 6, scope: !12053)
!12072 = !DILocation(line: 704, column: 5, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12070, file: !11838, line: 702, column: 3)
!12074 = !DILocation(line: 705, column: 5, scope: !12073)
!12075 = !DILocation(line: 705, column: 12, scope: !12073)
!12076 = !DILocation(line: 705, column: 33, scope: !12073)
!12077 = distinct !{!12077, !12074, !12078}
!12078 = !DILocation(line: 708, column: 5, scope: !12073)
!12079 = !DILocation(line: 711, column: 49, scope: !12073)
!12080 = !DILocation(line: 711, column: 5, scope: !12073)
!12081 = !DILocation(line: 712, column: 5, scope: !12073)
!12082 = !DILocation(line: 713, column: 5, scope: !12073)
!12083 = !DILocation(line: 713, column: 12, scope: !12073)
!12084 = !DILocation(line: 713, column: 37, scope: !12073)
!12085 = distinct !{!12085, !12082, !12086}
!12086 = !DILocation(line: 716, column: 5, scope: !12073)
!12087 = !DILocation(line: 719, column: 50, scope: !12073)
!12088 = !DILocation(line: 719, column: 5, scope: !12073)
!12089 = !DILocation(line: 720, column: 50, scope: !12073)
!12090 = !DILocation(line: 720, column: 5, scope: !12073)
!12091 = !DILocation(line: 721, column: 3, scope: !12073)
!12092 = !DILocation(line: 724, column: 6, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12053, file: !11838, line: 724, column: 6)
!12094 = !DILocation(line: 724, column: 22, scope: !12093)
!12095 = !DILocation(line: 724, column: 6, scope: !12053)
!12096 = !DILocation(line: 727, column: 14, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12093, file: !11838, line: 725, column: 3)
!12098 = !DILocation(line: 728, column: 3, scope: !12097)
!12099 = !DILocation(line: 731, column: 13, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12053, file: !11838, line: 731, column: 6)
!12101 = !DILocation(line: 731, column: 6, scope: !12053)
!12102 = !DILocation(line: 733, column: 5, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12100, file: !11838, line: 732, column: 3)
!12104 = !DILocation(line: 734, column: 3, scope: !12103)
!12105 = !DILocation(line: 736, column: 3, scope: !12053)
!12106 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8798, file: !8798, line: 4184, type: !2953, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12107 = !DILocation(line: 4186, column: 3, scope: !12106)
!12108 = !DILocation(line: 4187, column: 1, scope: !12106)
!12109 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8798, file: !8798, line: 4205, type: !3191, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12110 = !DILocation(line: 4207, column: 11, scope: !12109)
!12111 = !DILocation(line: 4207, column: 44, scope: !12109)
!12112 = !DILocation(line: 4207, column: 3, scope: !12109)
!12113 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8798, file: !8798, line: 3224, type: !6410, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12114)
!12114 = !{!12115}
!12115 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12113, file: !8798, line: 3224, type: !118)
!12116 = !DILocation(line: 0, scope: !12113)
!12117 = !DILocation(line: 3226, column: 3, scope: !12113)
!12118 = !DILocation(line: 3227, column: 1, scope: !12113)
!12119 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8798, file: !8798, line: 3188, type: !6410, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12120)
!12120 = !{!12121}
!12121 = !DILocalVariable(name: "Source", arg: 1, scope: !12119, file: !8798, line: 3188, type: !118)
!12122 = !DILocation(line: 0, scope: !12119)
!12123 = !DILocation(line: 3190, column: 3, scope: !12119)
!12124 = !DILocation(line: 3191, column: 1, scope: !12119)
!12125 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8798, file: !8798, line: 3204, type: !3191, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12126 = !DILocation(line: 3206, column: 21, scope: !12125)
!12127 = !DILocation(line: 3206, column: 3, scope: !12125)
!12128 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8798, file: !8798, line: 3240, type: !6410, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12129)
!12129 = !{!12130}
!12130 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12128, file: !8798, line: 3240, type: !118)
!12131 = !DILocation(line: 0, scope: !12128)
!12132 = !DILocation(line: 3242, column: 3, scope: !12128)
!12133 = !DILocation(line: 3243, column: 1, scope: !12128)
!12134 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8798, file: !8798, line: 3256, type: !6410, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12135)
!12135 = !{!12136}
!12136 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12134, file: !8798, line: 3256, type: !118)
!12137 = !DILocation(line: 0, scope: !12134)
!12138 = !DILocation(line: 3258, column: 3, scope: !12134)
!12139 = !DILocation(line: 3259, column: 1, scope: !12134)
!12140 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8798, file: !8798, line: 5153, type: !3191, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12141 = !DILocation(line: 5155, column: 11, scope: !12140)
!12142 = !DILocation(line: 5155, column: 47, scope: !12140)
!12143 = !DILocation(line: 5155, column: 3, scope: !12140)
!12144 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11838, file: !11838, line: 540, type: !12145, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12147)
!12145 = !DISubroutineType(types: !12146)
!12146 = !{!11881, !118, !118, !11959, !11966}
!12147 = !{!12148, !12149, !12150, !12151, !12152, !12153}
!12148 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12144, file: !11838, line: 540, type: !118)
!12149 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12144, file: !11838, line: 540, type: !118)
!12150 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12144, file: !11838, line: 541, type: !11959)
!12151 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12144, file: !11838, line: 541, type: !11966)
!12152 = !DILocalVariable(name: "status", scope: !12144, file: !11838, line: 543, type: !11881)
!12153 = !DILocalVariable(name: "pllfreq", scope: !12144, file: !11838, line: 544, type: !118)
!12154 = !DILocation(line: 0, scope: !12144)
!12155 = !DILocation(line: 551, column: 6, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12144, file: !11838, line: 551, column: 6)
!12157 = !DILocation(line: 551, column: 25, scope: !12156)
!12158 = !DILocation(line: 551, column: 6, scope: !12144)
!12159 = !DILocation(line: 554, column: 15, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12156, file: !11838, line: 552, column: 3)
!12161 = !DILocation(line: 557, column: 8, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12160, file: !11838, line: 557, column: 8)
!12163 = !DILocation(line: 557, column: 29, scope: !12162)
!12164 = !DILocation(line: 557, column: 8, scope: !12160)
!12165 = !DILocation(line: 560, column: 20, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12167, file: !11838, line: 560, column: 10)
!12167 = distinct !DILexicalBlock(scope: !12162, file: !11838, line: 558, column: 5)
!12168 = !DILocation(line: 560, column: 10, scope: !12167)
!12169 = !DILocation(line: 562, column: 9, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12166, file: !11838, line: 561, column: 7)
!12171 = !DILocation(line: 563, column: 7, scope: !12170)
!12172 = !DILocation(line: 566, column: 9, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12166, file: !11838, line: 565, column: 7)
!12174 = !DILocation(line: 570, column: 7, scope: !12167)
!12175 = !DILocation(line: 571, column: 7, scope: !12167)
!12176 = !DILocation(line: 571, column: 14, scope: !12167)
!12177 = !DILocation(line: 571, column: 35, scope: !12167)
!12178 = distinct !{!12178, !12175, !12179}
!12179 = !DILocation(line: 574, column: 7, scope: !12167)
!12180 = !DILocation(line: 578, column: 76, scope: !12160)
!12181 = !DILocation(line: 578, column: 103, scope: !12160)
!12182 = !DILocation(line: 579, column: 54, scope: !12160)
!12183 = !DILocation(line: 578, column: 5, scope: !12160)
!12184 = !DILocation(line: 582, column: 14, scope: !12160)
!12185 = !DILocation(line: 583, column: 3, scope: !12160)
!12186 = !DILocation(line: 0, scope: !12156)
!12187 = !DILocation(line: 590, column: 3, scope: !12144)
!12188 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8798, file: !8798, line: 2969, type: !3191, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12189 = !DILocation(line: 2971, column: 11, scope: !12188)
!12190 = !DILocation(line: 2971, column: 44, scope: !12188)
!12191 = !DILocation(line: 2971, column: 3, scope: !12188)
!12192 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8798, file: !8798, line: 2929, type: !2953, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12193 = !DILocation(line: 2931, column: 3, scope: !12192)
!12194 = !DILocation(line: 2932, column: 1, scope: !12192)
!12195 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8798, file: !8798, line: 2939, type: !2953, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12196 = !DILocation(line: 2941, column: 3, scope: !12195)
!12197 = !DILocation(line: 2942, column: 1, scope: !12195)
!12198 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8798, file: !8798, line: 2949, type: !2953, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !2022)
!12199 = !DILocation(line: 2951, column: 3, scope: !12198)
!12200 = !DILocation(line: 2952, column: 1, scope: !12198)
!12201 = distinct !DISubprogram(name: "z_device_state_init", scope: !12202, file: !12202, line: 23, type: !2953, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12203)
!12202 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12203 = !{!12204}
!12204 = !DILocalVariable(name: "dev", scope: !12201, file: !12202, line: 25, type: !12205)
!12205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12206, size: 32)
!12206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12207)
!12207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !12208)
!12208 = !{!12209, !12210, !12211, !12212, !12218, !12219}
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12207, file: !334, line: 380, baseType: !278, size: 32)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12207, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12207, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!12212 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12207, file: !334, line: 386, baseType: !12213, size: 32, offset: 96)
!12213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12214, size: 32)
!12214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !12215)
!12215 = !{!12216, !12217}
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12214, file: !334, line: 359, baseType: !185, size: 8)
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12214, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12207, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12207, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!12220 = !DILocation(line: 0, scope: !12201)
!12221 = !DILocation(line: 31, column: 1, scope: !12201)
!12222 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12202, file: !12202, line: 33, type: !12223, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12225)
!12223 = !DISubroutineType(types: !12224)
!12224 = !{!12205, !278}
!12225 = !{!12226, !12227}
!12226 = !DILocalVariable(name: "name", arg: 1, scope: !12222, file: !12202, line: 33, type: !278)
!12227 = !DILocalVariable(name: "dev", scope: !12222, file: !12202, line: 35, type: !12205)
!12228 = !DILocation(line: 0, scope: !12222)
!12229 = !DILocation(line: 40, column: 12, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12222, file: !12202, line: 40, column: 6)
!12231 = !DILocation(line: 40, column: 21, scope: !12230)
!12232 = !DILocation(line: 40, column: 25, scope: !12230)
!12233 = !DILocation(line: 40, column: 33, scope: !12230)
!12234 = !DILocation(line: 40, column: 6, scope: !12222)
!12235 = !DILocation(line: 55, column: 2, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12222, file: !12202, line: 55, column: 2)
!12237 = !DILocation(line: 50, column: 7, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12239, file: !12202, line: 50, column: 7)
!12239 = distinct !DILexicalBlock(scope: !12240, file: !12202, line: 49, column: 57)
!12240 = distinct !DILexicalBlock(scope: !12241, file: !12202, line: 49, column: 2)
!12241 = distinct !DILexicalBlock(scope: !12222, file: !12202, line: 49, column: 2)
!12242 = !DILocation(line: 50, column: 30, scope: !12238)
!12243 = !DILocation(line: 50, column: 39, scope: !12238)
!12244 = !DILocation(line: 50, column: 44, scope: !12238)
!12245 = !DILocation(line: 50, column: 7, scope: !12239)
!12246 = !DILocation(line: 49, column: 53, scope: !12240)
!12247 = !DILocation(line: 49, column: 33, scope: !12240)
!12248 = !DILocation(line: 49, column: 2, scope: !12241)
!12249 = distinct !{!12249, !12248, !12250}
!12250 = !DILocation(line: 53, column: 2, scope: !12241)
!12251 = !DILocation(line: 56, column: 7, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12253, file: !12202, line: 56, column: 7)
!12253 = distinct !DILexicalBlock(scope: !12254, file: !12202, line: 55, column: 57)
!12254 = distinct !DILexicalBlock(scope: !12236, file: !12202, line: 55, column: 2)
!12255 = !DILocation(line: 56, column: 30, scope: !12252)
!12256 = !DILocation(line: 56, column: 52, scope: !12252)
!12257 = !DILocation(line: 56, column: 34, scope: !12252)
!12258 = !DILocation(line: 56, column: 58, scope: !12252)
!12259 = !DILocation(line: 56, column: 7, scope: !12253)
!12260 = !DILocation(line: 55, column: 53, scope: !12254)
!12261 = !DILocation(line: 55, column: 33, scope: !12254)
!12262 = distinct !{!12262, !12235, !12263}
!12263 = !DILocation(line: 59, column: 2, scope: !12236)
!12264 = !DILocation(line: 62, column: 1, scope: !12222)
!12265 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12202, file: !12202, line: 93, type: !12266, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12268)
!12266 = !DISubroutineType(types: !12267)
!12267 = !{!345, !12205}
!12268 = !{!12269}
!12269 = !DILocalVariable(name: "dev", arg: 1, scope: !12265, file: !12202, line: 93, type: !12205)
!12270 = !DILocation(line: 0, scope: !12265)
!12271 = !DILocation(line: 99, column: 10, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12265, file: !12202, line: 99, column: 6)
!12273 = !DILocation(line: 99, column: 6, scope: !12265)
!12274 = !DILocation(line: 103, column: 14, scope: !12265)
!12275 = !DILocation(line: 103, column: 21, scope: !12265)
!12276 = !DILocation(line: 103, column: 33, scope: !12265)
!12277 = !DILocation(line: 103, column: 49, scope: !12265)
!12278 = !DILocation(line: 103, column: 58, scope: !12265)
!12279 = !DILocation(line: 104, column: 1, scope: !12265)
!12280 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12202, file: !12202, line: 87, type: !12281, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12284)
!12281 = !DISubroutineType(types: !12282)
!12282 = !{!239, !12283}
!12283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12205, size: 32)
!12284 = !{!12285}
!12285 = !DILocalVariable(name: "devices", arg: 1, scope: !12280, file: !12202, line: 87, type: !12283)
!12286 = !DILocation(line: 0, scope: !12280)
!12287 = !DILocation(line: 89, column: 11, scope: !12280)
!12288 = !DILocation(line: 90, column: 2, scope: !12280)
!12289 = distinct !DISubprogram(name: "device_required_foreach", scope: !12202, file: !12202, line: 125, type: !12290, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12296)
!12290 = !DISubroutineType(types: !12291)
!12291 = !{!119, !12205, !12292, !113}
!12292 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !334, line: 471, baseType: !12293)
!12293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12294, size: 32)
!12294 = !DISubroutineType(types: !12295)
!12295 = !{!119, !12205, !113}
!12296 = !{!12297, !12298, !12299, !12300, !12301}
!12297 = !DILocalVariable(name: "dev", arg: 1, scope: !12289, file: !12202, line: 125, type: !12205)
!12298 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12289, file: !12202, line: 126, type: !12292)
!12299 = !DILocalVariable(name: "context", arg: 3, scope: !12289, file: !12202, line: 127, type: !113)
!12300 = !DILocalVariable(name: "handle_count", scope: !12289, file: !12202, line: 129, type: !239)
!12301 = !DILocalVariable(name: "handles", scope: !12289, file: !12202, line: 130, type: !348)
!12302 = !DILocation(line: 0, scope: !12289)
!12303 = !DILocation(line: 129, column: 2, scope: !12289)
!12304 = !DILocation(line: 129, column: 9, scope: !12289)
!12305 = !DILocation(line: 130, column: 35, scope: !12289)
!12306 = !DILocation(line: 132, column: 33, scope: !12289)
!12307 = !DILocation(line: 132, column: 9, scope: !12289)
!12308 = !DILocation(line: 133, column: 1, scope: !12289)
!12309 = !DILocation(line: 132, column: 2, scope: !12289)
!12310 = distinct !DISubprogram(name: "device_required_handles_get", scope: !334, file: !334, line: 493, type: !12311, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12313)
!12311 = !DISubroutineType(types: !12312)
!12312 = !{!348, !12205, !2403}
!12313 = !{!12314, !12315, !12316, !12317}
!12314 = !DILocalVariable(name: "dev", arg: 1, scope: !12310, file: !334, line: 493, type: !12205)
!12315 = !DILocalVariable(name: "count", arg: 2, scope: !12310, file: !334, line: 493, type: !2403)
!12316 = !DILocalVariable(name: "rv", scope: !12310, file: !334, line: 495, type: !348)
!12317 = !DILocalVariable(name: "i", scope: !12318, file: !334, line: 498, type: !239)
!12318 = distinct !DILexicalBlock(scope: !12319, file: !334, line: 497, column: 18)
!12319 = distinct !DILexicalBlock(scope: !12310, file: !334, line: 497, column: 6)
!12320 = !DILocation(line: 0, scope: !12310)
!12321 = !DILocation(line: 495, column: 35, scope: !12310)
!12322 = !DILocation(line: 497, column: 9, scope: !12319)
!12323 = !DILocation(line: 497, column: 6, scope: !12310)
!12324 = !DILocation(line: 0, scope: !12318)
!12325 = !DILocation(line: 500, column: 11, scope: !12318)
!12326 = !DILocation(line: 500, column: 40, scope: !12318)
!12327 = !DILocation(line: 502, column: 4, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12318, file: !334, line: 501, column: 40)
!12329 = distinct !{!12329, !12330, !12331}
!12330 = !DILocation(line: 500, column: 3, scope: !12318)
!12331 = !DILocation(line: 503, column: 3, scope: !12318)
!12332 = !DILocation(line: 504, column: 10, scope: !12318)
!12333 = !DILocation(line: 505, column: 2, scope: !12318)
!12334 = !DILocation(line: 507, column: 2, scope: !12310)
!12335 = distinct !DISubprogram(name: "device_visitor", scope: !12202, file: !12202, line: 106, type: !12336, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12338)
!12336 = !DISubroutineType(types: !12337)
!12337 = !{!119, !348, !239, !12292, !113}
!12338 = !{!12339, !12340, !12341, !12342, !12343, !12345, !12348, !12349}
!12339 = !DILocalVariable(name: "handles", arg: 1, scope: !12335, file: !12202, line: 106, type: !348)
!12340 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12335, file: !12202, line: 107, type: !239)
!12341 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12335, file: !12202, line: 108, type: !12292)
!12342 = !DILocalVariable(name: "context", arg: 4, scope: !12335, file: !12202, line: 109, type: !113)
!12343 = !DILocalVariable(name: "i", scope: !12344, file: !12202, line: 112, type: !239)
!12344 = distinct !DILexicalBlock(scope: !12335, file: !12202, line: 112, column: 2)
!12345 = !DILocalVariable(name: "dh", scope: !12346, file: !12202, line: 113, type: !350)
!12346 = distinct !DILexicalBlock(scope: !12347, file: !12202, line: 112, column: 44)
!12347 = distinct !DILexicalBlock(scope: !12344, file: !12202, line: 112, column: 2)
!12348 = !DILocalVariable(name: "rdev", scope: !12346, file: !12202, line: 114, type: !12205)
!12349 = !DILocalVariable(name: "rc", scope: !12346, file: !12202, line: 115, type: !119)
!12350 = !DILocation(line: 0, scope: !12335)
!12351 = !DILocation(line: 0, scope: !12344)
!12352 = !DILocation(line: 112, column: 23, scope: !12347)
!12353 = !DILocation(line: 112, column: 2, scope: !12344)
!12354 = distinct !{!12354, !12353, !12355}
!12355 = !DILocation(line: 120, column: 2, scope: !12344)
!12356 = !DILocation(line: 113, column: 24, scope: !12346)
!12357 = !DILocation(line: 0, scope: !12346)
!12358 = !DILocation(line: 114, column: 31, scope: !12346)
!12359 = !DILocation(line: 115, column: 12, scope: !12346)
!12360 = !DILocation(line: 117, column: 10, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12346, file: !12202, line: 117, column: 7)
!12362 = !DILocation(line: 112, column: 39, scope: !12347)
!12363 = !DILocation(line: 123, column: 1, scope: !12335)
!12364 = distinct !DISubprogram(name: "device_from_handle", scope: !334, file: !334, line: 439, type: !12365, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12367)
!12365 = !DISubroutineType(types: !12366)
!12366 = !{!12205, !350}
!12367 = !{!12368, !12369, !12370}
!12368 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12364, file: !334, line: 439, type: !350)
!12369 = !DILocalVariable(name: "dev", scope: !12364, file: !334, line: 443, type: !12205)
!12370 = !DILocalVariable(name: "numdev", scope: !12364, file: !334, line: 444, type: !239)
!12371 = !DILocation(line: 0, scope: !12364)
!12372 = !DILocation(line: 446, column: 7, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12364, file: !334, line: 446, column: 6)
!12374 = !DILocation(line: 446, column: 18, scope: !12373)
!12375 = !DILocation(line: 446, column: 23, scope: !12373)
!12376 = !DILocation(line: 450, column: 2, scope: !12364)
!12377 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12202, file: !12202, line: 135, type: !12290, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12378)
!12378 = !{!12379, !12380, !12381, !12382, !12383}
!12379 = !DILocalVariable(name: "dev", arg: 1, scope: !12377, file: !12202, line: 135, type: !12205)
!12380 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12377, file: !12202, line: 136, type: !12292)
!12381 = !DILocalVariable(name: "context", arg: 3, scope: !12377, file: !12202, line: 137, type: !113)
!12382 = !DILocalVariable(name: "handle_count", scope: !12377, file: !12202, line: 139, type: !239)
!12383 = !DILocalVariable(name: "handles", scope: !12377, file: !12202, line: 140, type: !348)
!12384 = !DILocation(line: 0, scope: !12377)
!12385 = !DILocation(line: 139, column: 2, scope: !12377)
!12386 = !DILocation(line: 139, column: 9, scope: !12377)
!12387 = !DILocation(line: 140, column: 35, scope: !12377)
!12388 = !DILocation(line: 142, column: 33, scope: !12377)
!12389 = !DILocation(line: 142, column: 9, scope: !12377)
!12390 = !DILocation(line: 143, column: 1, scope: !12377)
!12391 = !DILocation(line: 142, column: 2, scope: !12377)
!12392 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !334, file: !334, line: 573, type: !12311, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !12393)
!12393 = !{!12394, !12395, !12396, !12397, !12398}
!12394 = !DILocalVariable(name: "dev", arg: 1, scope: !12392, file: !334, line: 573, type: !12205)
!12395 = !DILocalVariable(name: "count", arg: 2, scope: !12392, file: !334, line: 573, type: !2403)
!12396 = !DILocalVariable(name: "rv", scope: !12392, file: !334, line: 575, type: !348)
!12397 = !DILocalVariable(name: "region", scope: !12392, file: !334, line: 576, type: !239)
!12398 = !DILocalVariable(name: "i", scope: !12392, file: !334, line: 577, type: !239)
!12399 = !DILocation(line: 0, scope: !12392)
!12400 = !DILocation(line: 575, column: 35, scope: !12392)
!12401 = !DILocation(line: 579, column: 9, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12392, file: !334, line: 579, column: 6)
!12403 = !DILocation(line: 579, column: 6, scope: !12392)
!12404 = !DILocation(line: 582, column: 8, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12406, file: !334, line: 582, column: 8)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !334, line: 581, column: 23)
!12407 = distinct !DILexicalBlock(scope: !12402, file: !334, line: 579, column: 18)
!12408 = !DILocation(line: 582, column: 12, scope: !12405)
!12409 = !DILocation(line: 585, column: 6, scope: !12406)
!12410 = !DILocation(line: 0, scope: !12407)
!12411 = !DILocation(line: 581, column: 17, scope: !12407)
!12412 = !DILocation(line: 581, column: 3, scope: !12407)
!12413 = !DILocation(line: 588, column: 10, scope: !12407)
!12414 = !DILocation(line: 588, column: 16, scope: !12407)
!12415 = !DILocation(line: 589, column: 4, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12407, file: !334, line: 588, column: 39)
!12417 = !DILocation(line: 588, column: 3, scope: !12407)
!12418 = distinct !{!12418, !12417, !12419}
!12419 = !DILocation(line: 590, column: 3, scope: !12407)
!12420 = !DILocation(line: 591, column: 10, scope: !12407)
!12421 = !DILocation(line: 592, column: 2, scope: !12407)
!12422 = !DILocation(line: 575, column: 25, scope: !12392)
!12423 = !DILocation(line: 594, column: 2, scope: !12392)
!12424 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1813, file: !1813, line: 49, type: !12425, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1810, retainedNodes: !2022)
!12425 = !DISubroutineType(types: !12426)
!12426 = !{!280}
!12427 = !DILocation(line: 51, column: 10, scope: !12424)
!12428 = !DILocation(line: 51, column: 20, scope: !12424)
!12429 = !DILocation(line: 51, column: 2, scope: !12424)
!12430 = distinct !DISubprogram(name: "coredump", scope: !2920, file: !2920, line: 209, type: !12431, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12580)
!12431 = !DISubroutineType(types: !12432)
!12432 = !{null, !32, !12433, !12477}
!12433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12434, size: 32)
!12434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12435)
!12435 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2533, line: 141, baseType: !12436)
!12436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2533, line: 97, size: 256, elements: !12437)
!12437 = !{!12438}
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12436, file: !2533, line: 107, baseType: !12439, size: 256)
!12439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2533, line: 98, size: 256, elements: !12440)
!12440 = !{!12441, !12446, !12451, !12456, !12461, !12466, !12471, !12476}
!12441 = !DIDerivedType(tag: DW_TAG_member, scope: !12439, file: !2533, line: 99, baseType: !12442, size: 32)
!12442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12439, file: !2533, line: 99, size: 32, elements: !12443)
!12443 = !{!12444, !12445}
!12444 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12442, file: !2533, line: 99, baseType: !118, size: 32)
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12442, file: !2533, line: 99, baseType: !118, size: 32)
!12446 = !DIDerivedType(tag: DW_TAG_member, scope: !12439, file: !2533, line: 100, baseType: !12447, size: 32, offset: 32)
!12447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12439, file: !2533, line: 100, size: 32, elements: !12448)
!12448 = !{!12449, !12450}
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12447, file: !2533, line: 100, baseType: !118, size: 32)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12447, file: !2533, line: 100, baseType: !118, size: 32)
!12451 = !DIDerivedType(tag: DW_TAG_member, scope: !12439, file: !2533, line: 101, baseType: !12452, size: 32, offset: 64)
!12452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12439, file: !2533, line: 101, size: 32, elements: !12453)
!12453 = !{!12454, !12455}
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12452, file: !2533, line: 101, baseType: !118, size: 32)
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12452, file: !2533, line: 101, baseType: !118, size: 32)
!12456 = !DIDerivedType(tag: DW_TAG_member, scope: !12439, file: !2533, line: 102, baseType: !12457, size: 32, offset: 96)
!12457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12439, file: !2533, line: 102, size: 32, elements: !12458)
!12458 = !{!12459, !12460}
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12457, file: !2533, line: 102, baseType: !118, size: 32)
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12457, file: !2533, line: 102, baseType: !118, size: 32)
!12461 = !DIDerivedType(tag: DW_TAG_member, scope: !12439, file: !2533, line: 103, baseType: !12462, size: 32, offset: 128)
!12462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12439, file: !2533, line: 103, size: 32, elements: !12463)
!12463 = !{!12464, !12465}
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12462, file: !2533, line: 103, baseType: !118, size: 32)
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12462, file: !2533, line: 103, baseType: !118, size: 32)
!12466 = !DIDerivedType(tag: DW_TAG_member, scope: !12439, file: !2533, line: 104, baseType: !12467, size: 32, offset: 160)
!12467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12439, file: !2533, line: 104, size: 32, elements: !12468)
!12468 = !{!12469, !12470}
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12467, file: !2533, line: 104, baseType: !118, size: 32)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12467, file: !2533, line: 104, baseType: !118, size: 32)
!12471 = !DIDerivedType(tag: DW_TAG_member, scope: !12439, file: !2533, line: 105, baseType: !12472, size: 32, offset: 192)
!12472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12439, file: !2533, line: 105, size: 32, elements: !12473)
!12473 = !{!12474, !12475}
!12474 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12472, file: !2533, line: 105, baseType: !118, size: 32)
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12472, file: !2533, line: 105, baseType: !118, size: 32)
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12439, file: !2533, line: 106, baseType: !118, size: 32, offset: 224)
!12477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12478, size: 32)
!12478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !12479)
!12479 = !{!12480, !12538, !12550, !12551, !12552, !12553, !12554, !12560, !12575}
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12478, file: !143, line: 247, baseType: !12481, size: 384)
!12481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !12482)
!12482 = !{!12483, !12507, !12514, !12515, !12516, !12525, !12526, !12527}
!12483 = !DIDerivedType(tag: DW_TAG_member, scope: !12481, file: !143, line: 60, baseType: !12484, size: 64)
!12484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12481, file: !143, line: 60, size: 64, elements: !12485)
!12485 = !{!12486, !12501}
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12484, file: !143, line: 61, baseType: !12487, size: 64)
!12487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !12488)
!12488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !12489)
!12489 = !{!12490, !12496}
!12490 = !DIDerivedType(tag: DW_TAG_member, scope: !12488, file: !153, line: 38, baseType: !12491, size: 32)
!12491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12488, file: !153, line: 38, size: 32, elements: !12492)
!12492 = !{!12493, !12495}
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12491, file: !153, line: 39, baseType: !12494, size: 32)
!12494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12488, size: 32)
!12495 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12491, file: !153, line: 40, baseType: !12494, size: 32)
!12496 = !DIDerivedType(tag: DW_TAG_member, scope: !12488, file: !153, line: 42, baseType: !12497, size: 32, offset: 32)
!12497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12488, file: !153, line: 42, size: 32, elements: !12498)
!12498 = !{!12499, !12500}
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12497, file: !153, line: 43, baseType: !12494, size: 32)
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12497, file: !153, line: 44, baseType: !12494, size: 32)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12484, file: !143, line: 62, baseType: !12502, size: 64)
!12502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !12503)
!12503 = !{!12504}
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12502, file: !169, line: 50, baseType: !12505, size: 64)
!12505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12506, size: 64, elements: !174)
!12506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12502, size: 32)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12481, file: !143, line: 68, baseType: !12508, size: 32, offset: 64)
!12508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12509, size: 32)
!12509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !12510)
!12510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !12511)
!12511 = !{!12512}
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12510, file: !179, line: 232, baseType: !12513, size: 64)
!12513 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !12488)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12481, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12481, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!12516 = !DIDerivedType(tag: DW_TAG_member, scope: !12481, file: !143, line: 90, baseType: !12517, size: 16, offset: 112)
!12517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12481, file: !143, line: 90, size: 16, elements: !12518)
!12518 = !{!12519, !12524}
!12519 = !DIDerivedType(tag: DW_TAG_member, scope: !12517, file: !143, line: 91, baseType: !12520, size: 16)
!12520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12517, file: !143, line: 91, size: 16, elements: !12521)
!12521 = !{!12522, !12523}
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12520, file: !143, line: 96, baseType: !195, size: 8)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12520, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12517, file: !143, line: 100, baseType: !199, size: 16)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12481, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12481, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12481, file: !143, line: 131, baseType: !12528, size: 192, offset: 192)
!12528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !12529)
!12529 = !{!12530, !12531, !12537}
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12528, file: !179, line: 245, baseType: !12487, size: 64)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12528, file: !179, line: 246, baseType: !12532, size: 32, offset: 64)
!12532 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !12533)
!12533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12534, size: 32)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{null, !12536}
!12536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12528, size: 32)
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12528, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12478, file: !143, line: 250, baseType: !12539, size: 288, offset: 384)
!12539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !12540)
!12540 = !{!12541, !12542, !12543, !12544, !12545, !12546, !12547, !12548, !12549}
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12539, file: !216, line: 26, baseType: !118, size: 32)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12539, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12539, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12539, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12539, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12539, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12539, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12539, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12539, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12478, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12478, file: !143, line: 256, baseType: !12509, size: 64, offset: 704)
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12478, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!12553 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12478, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12478, file: !143, line: 300, baseType: !12555, size: 96, offset: 1056)
!12555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !12556)
!12556 = !{!12557, !12558, !12559}
!12557 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12555, file: !143, line: 153, baseType: !22, size: 32)
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12555, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12555, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12478, file: !143, line: 325, baseType: !12561, size: 32, offset: 1152)
!12561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12562, size: 32)
!12562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !12563)
!12563 = !{!12564, !12570, !12571}
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12562, file: !245, line: 5074, baseType: !12565, size: 96)
!12565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !12566)
!12566 = !{!12567, !12568, !12569}
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12565, file: !249, line: 57, baseType: !252, size: 32)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12565, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12565, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12562, file: !245, line: 5075, baseType: !12509, size: 64, offset: 96)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12562, file: !245, line: 5076, baseType: !12572, size: 32, offset: 160)
!12572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !12573)
!12573 = !{!12574}
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12572, file: !259, line: 52, baseType: !22, size: 32)
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12478, file: !143, line: 343, baseType: !12576, size: 64, offset: 1184)
!12576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !12577)
!12577 = !{!12578, !12579}
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12576, file: !216, line: 63, baseType: !118, size: 32)
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12576, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!12580 = !{!12581, !12582, !12583}
!12581 = !DILocalVariable(name: "reason", arg: 1, scope: !12430, file: !2920, line: 209, type: !32)
!12582 = !DILocalVariable(name: "esf", arg: 2, scope: !12430, file: !2920, line: 209, type: !12433)
!12583 = !DILocalVariable(name: "thread", arg: 3, scope: !12430, file: !2920, line: 210, type: !12477)
!12584 = !DILocation(line: 0, scope: !12430)
!12585 = !DILocation(line: 212, column: 1, scope: !12430)
!12586 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2920, file: !2920, line: 214, type: !12587, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12589)
!12587 = !DISubroutineType(types: !12588)
!12588 = !{null, !22, !22}
!12589 = !{!12590, !12591}
!12590 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12586, file: !2920, line: 214, type: !22)
!12591 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12586, file: !2920, line: 214, type: !22)
!12592 = !DILocation(line: 0, scope: !12586)
!12593 = !DILocation(line: 216, column: 1, scope: !12586)
!12594 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2920, file: !2920, line: 218, type: !12595, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12597)
!12595 = !DISubroutineType(types: !12596)
!12596 = !{null, !284, !239}
!12597 = !{!12598, !12599}
!12598 = !DILocalVariable(name: "buf", arg: 1, scope: !12594, file: !2920, line: 218, type: !284)
!12599 = !DILocalVariable(name: "buflen", arg: 2, scope: !12594, file: !2920, line: 218, type: !239)
!12600 = !DILocation(line: 0, scope: !12594)
!12601 = !DILocation(line: 220, column: 1, scope: !12594)
!12602 = distinct !DISubprogram(name: "coredump_query", scope: !2920, file: !2920, line: 222, type: !12603, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12605)
!12603 = !DISubroutineType(types: !12604)
!12604 = !{!119, !2919, !113}
!12605 = !{!12606, !12607}
!12606 = !DILocalVariable(name: "query_id", arg: 1, scope: !12602, file: !2920, line: 222, type: !2919)
!12607 = !DILocalVariable(name: "arg", arg: 2, scope: !12602, file: !2920, line: 222, type: !113)
!12608 = !DILocation(line: 0, scope: !12602)
!12609 = !DILocation(line: 224, column: 2, scope: !12602)
!12610 = distinct !DISubprogram(name: "coredump_cmd", scope: !2920, file: !2920, line: 227, type: !12611, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12613)
!12611 = !DISubroutineType(types: !12612)
!12612 = !{!119, !2926, !113}
!12613 = !{!12614, !12615}
!12614 = !DILocalVariable(name: "query_id", arg: 1, scope: !12610, file: !2920, line: 227, type: !2926)
!12615 = !DILocalVariable(name: "arg", arg: 2, scope: !12610, file: !2920, line: 227, type: !113)
!12616 = !DILocation(line: 0, scope: !12610)
!12617 = !DILocation(line: 229, column: 2, scope: !12610)
!12618 = distinct !DISubprogram(name: "arch_system_halt", scope: !12619, file: !12619, line: 23, type: !6005, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12620)
!12619 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12620 = !{!12621}
!12621 = !DILocalVariable(name: "reason", arg: 1, scope: !12618, file: !12619, line: 23, type: !32)
!12622 = !DILocation(line: 0, scope: !12618)
!12623 = !DILocation(line: 55, column: 2, scope: !12624, inlinedAt: !12628)
!12624 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5994, file: !5994, line: 42, type: !5995, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12625)
!12625 = !{!12626, !12627}
!12626 = !DILocalVariable(name: "key", scope: !12624, file: !5994, line: 44, type: !32)
!12627 = !DILocalVariable(name: "tmp", scope: !12624, file: !5994, line: 53, type: !32)
!12628 = distinct !DILocation(line: 31, column: 8, scope: !12618)
!12629 = !{i64 2244712}
!12630 = !DILocation(line: 0, scope: !12624, inlinedAt: !12628)
!12631 = !DILocation(line: 32, column: 2, scope: !12618)
!12632 = !DILocation(line: 32, column: 2, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !12619, line: 32, column: 2)
!12634 = distinct !DILexicalBlock(scope: !12618, file: !12619, line: 32, column: 2)
!12635 = distinct !{!12635, !12636, !12637}
!12636 = !DILocation(line: 32, column: 2, scope: !12634)
!12637 = !DILocation(line: 34, column: 2, scope: !12634)
!12638 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12619, file: !12619, line: 39, type: !12639, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12641)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{null, !32, !12433}
!12641 = !{!12642, !12643}
!12642 = !DILocalVariable(name: "reason", arg: 1, scope: !12638, file: !12619, line: 39, type: !32)
!12643 = !DILocalVariable(name: "esf", arg: 2, scope: !12638, file: !12619, line: 40, type: !12433)
!12644 = !DILocation(line: 0, scope: !12638)
!12645 = !DILocation(line: 45, column: 2, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12647, file: !12619, line: 45, column: 2)
!12647 = distinct !DILexicalBlock(scope: !12648, file: !12619, line: 45, column: 2)
!12648 = distinct !DILexicalBlock(scope: !12649, file: !12619, line: 45, column: 2)
!12649 = distinct !DILexicalBlock(scope: !12638, file: !12619, line: 45, column: 2)
!12650 = !DILocation(line: 46, column: 2, scope: !12638)
!12651 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12619, file: !12619, line: 81, type: !6005, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12652)
!12652 = !{!12653}
!12653 = !DILocalVariable(name: "reason", arg: 1, scope: !12651, file: !12619, line: 81, type: !32)
!12654 = !DILocation(line: 0, scope: !12651)
!12655 = !DILocation(line: 83, column: 2, scope: !12651)
!12656 = distinct !DISubprogram(name: "z_fatal_error", scope: !12619, file: !12619, line: 96, type: !12639, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12657)
!12657 = !{!12658, !12659, !12660, !12661}
!12658 = !DILocalVariable(name: "reason", arg: 1, scope: !12656, file: !12619, line: 96, type: !32)
!12659 = !DILocalVariable(name: "esf", arg: 2, scope: !12656, file: !12619, line: 96, type: !12433)
!12660 = !DILocalVariable(name: "key", scope: !12656, file: !12619, line: 102, type: !32)
!12661 = !DILocalVariable(name: "thread", scope: !12656, file: !12619, line: 103, type: !12477)
!12662 = !DILocation(line: 0, scope: !12656)
!12663 = !DILocation(line: 55, column: 2, scope: !12624, inlinedAt: !12664)
!12664 = distinct !DILocation(line: 102, column: 21, scope: !12656)
!12665 = !DILocation(line: 0, scope: !12624, inlinedAt: !12664)
!12666 = !DILocation(line: 104, column: 4, scope: !12656)
!12667 = !DILocation(line: 109, column: 2, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !12619, line: 109, column: 2)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !12619, line: 109, column: 2)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !12619, line: 109, column: 2)
!12671 = distinct !DILexicalBlock(scope: !12656, file: !12619, line: 109, column: 2)
!12672 = !DILocation(line: 119, column: 11, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12656, file: !12619, line: 119, column: 6)
!12674 = !DILocation(line: 119, column: 20, scope: !12673)
!12675 = !DILocalVariable(name: "esf", arg: 1, scope: !12676, file: !7365, line: 71, type: !12433)
!12676 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7365, file: !7365, line: 71, type: !12677, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!345, !12433}
!12679 = !{!12675}
!12680 = !DILocation(line: 0, scope: !12676, inlinedAt: !12681)
!12681 = distinct !DILocation(line: 119, column: 23, scope: !12673)
!12682 = !DILocation(line: 73, column: 21, scope: !12676, inlinedAt: !12681)
!12683 = !DILocation(line: 73, column: 26, scope: !12676, inlinedAt: !12681)
!12684 = !DILocation(line: 73, column: 9, scope: !12676, inlinedAt: !12681)
!12685 = !DILocation(line: 119, column: 6, scope: !12656)
!12686 = !DILocation(line: 120, column: 3, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12688, file: !12619, line: 120, column: 3)
!12688 = distinct !DILexicalBlock(scope: !12689, file: !12619, line: 120, column: 3)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !12619, line: 120, column: 3)
!12690 = distinct !DILexicalBlock(scope: !12691, file: !12619, line: 120, column: 3)
!12691 = distinct !DILexicalBlock(scope: !12673, file: !12619, line: 119, column: 57)
!12692 = !DILocation(line: 121, column: 2, scope: !12691)
!12693 = !DILocation(line: 124, column: 2, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12695, file: !12619, line: 124, column: 2)
!12695 = distinct !DILexicalBlock(scope: !12696, file: !12619, line: 124, column: 2)
!12696 = distinct !DILexicalBlock(scope: !12697, file: !12619, line: 124, column: 2)
!12697 = distinct !DILexicalBlock(scope: !12656, file: !12619, line: 124, column: 2)
!12698 = !DILocation(line: 131, column: 2, scope: !12656)
!12699 = !DILocation(line: 0, scope: !12676, inlinedAt: !12700)
!12700 = distinct !DILocation(line: 163, column: 24, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12702, file: !12619, line: 163, column: 7)
!12702 = distinct !DILexicalBlock(scope: !12703, file: !12619, line: 160, column: 9)
!12703 = distinct !DILexicalBlock(scope: !12656, file: !12619, line: 146, column: 6)
!12704 = !DILocation(line: 73, column: 21, scope: !12676, inlinedAt: !12700)
!12705 = !DILocation(line: 73, column: 26, scope: !12676, inlinedAt: !12700)
!12706 = !DILocation(line: 73, column: 9, scope: !12676, inlinedAt: !12700)
!12707 = !DILocation(line: 163, column: 7, scope: !12702)
!12708 = !DILocalVariable(name: "key", arg: 1, scope: !12709, file: !5994, line: 84, type: !32)
!12709 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5994, file: !5994, line: 84, type: !6005, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12710)
!12710 = !{!12708}
!12711 = !DILocation(line: 0, scope: !12709, inlinedAt: !12712)
!12712 = distinct !DILocation(line: 171, column: 4, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12701, file: !12619, line: 163, column: 58)
!12714 = !DILocation(line: 95, column: 2, scope: !12709, inlinedAt: !12712)
!12715 = !{i64 2245529}
!12716 = !DILocation(line: 172, column: 4, scope: !12713)
!12717 = !DILocation(line: 163, column: 21, scope: !12701)
!12718 = !DILocation(line: 178, column: 15, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12720, file: !12619, line: 178, column: 8)
!12720 = distinct !DILexicalBlock(scope: !12701, file: !12619, line: 174, column: 10)
!12721 = !DILocation(line: 0, scope: !12709, inlinedAt: !12722)
!12722 = distinct !DILocation(line: 179, column: 5, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12719, file: !12619, line: 178, column: 38)
!12724 = !DILocation(line: 0, scope: !12709, inlinedAt: !12725)
!12725 = distinct !DILocation(line: 186, column: 2, scope: !12656)
!12726 = !DILocation(line: 178, column: 8, scope: !12720)
!12727 = !DILocation(line: 189, column: 3, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !12619, line: 188, column: 41)
!12729 = distinct !DILexicalBlock(scope: !12656, file: !12619, line: 188, column: 6)
!12730 = !DILocation(line: 191, column: 1, scope: !12656)
!12731 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !12732, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2022)
!12732 = !DISubroutineType(types: !12733)
!12733 = !{!12734}
!12734 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !12477)
!12735 = !DILocation(line: 535, column: 9, scope: !12731)
!12736 = !DILocation(line: 535, column: 2, scope: !12731)
!12737 = distinct !DISubprogram(name: "reason_to_str", scope: !12619, file: !12619, line: 62, type: !12738, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12740)
!12738 = !DISubroutineType(types: !12739)
!12739 = !{!278, !32}
!12740 = !{!12741}
!12741 = !DILocalVariable(name: "reason", arg: 1, scope: !12737, file: !12619, line: 62, type: !32)
!12742 = !DILocation(line: 0, scope: !12737)
!12743 = !DILocation(line: 64, column: 2, scope: !12737)
!12744 = !DILocation(line: 0, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12737, file: !12619, line: 64, column: 18)
!12746 = !DILocation(line: 78, column: 1, scope: !12737)
!12747 = distinct !DISubprogram(name: "thread_name_get", scope: !12619, file: !12619, line: 51, type: !12748, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12750)
!12748 = !DISubroutineType(types: !12749)
!12749 = !{!278, !12477}
!12750 = !{!12751, !12752}
!12751 = !DILocalVariable(name: "thread", arg: 1, scope: !12747, file: !12619, line: 51, type: !12477)
!12752 = !DILocalVariable(name: "thread_name", scope: !12747, file: !12619, line: 53, type: !278)
!12753 = !DILocation(line: 0, scope: !12747)
!12754 = !DILocation(line: 53, column: 36, scope: !12747)
!12755 = !DILocation(line: 53, column: 28, scope: !12747)
!12756 = !DILocation(line: 53, column: 47, scope: !12747)
!12757 = !DILocation(line: 55, column: 19, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12747, file: !12619, line: 55, column: 6)
!12759 = !DILocation(line: 55, column: 28, scope: !12758)
!12760 = !DILocation(line: 55, column: 32, scope: !12758)
!12761 = !DILocation(line: 55, column: 47, scope: !12758)
!12762 = !DILocation(line: 55, column: 6, scope: !12747)
!12763 = !DILocation(line: 57, column: 2, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12758, file: !12619, line: 55, column: 57)
!12765 = !DILocation(line: 59, column: 2, scope: !12747)
!12766 = distinct !DISubprogram(name: "k_thread_abort", scope: !3204, file: !3204, line: 188, type: !12767, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !12769)
!12767 = !DISubroutineType(types: !12768)
!12768 = !{null, !12734}
!12769 = !{!12770}
!12770 = !DILocalVariable(name: "thread", arg: 1, scope: !12766, file: !3204, line: 188, type: !12734)
!12771 = !DILocation(line: 0, scope: !12766)
!12772 = !DILocation(line: 197, column: 2, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12766, file: !3204, line: 197, column: 2)
!12774 = !{i64 2154750084}
!12775 = !DILocation(line: 198, column: 2, scope: !12766)
!12776 = !DILocation(line: 199, column: 1, scope: !12766)
!12777 = distinct !DISubprogram(name: "z_current_get", scope: !3204, file: !3204, line: 173, type: !12732, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2022)
!12778 = !DILocation(line: 180, column: 2, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12777, file: !3204, line: 180, column: 2)
!12780 = !{i64 2154750016}
!12781 = !DILocation(line: 181, column: 9, scope: !12777)
!12782 = !DILocation(line: 181, column: 2, scope: !12777)
!12783 = distinct !DISubprogram(name: "z_early_memset", scope: !1821, file: !1821, line: 108, type: !12784, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12786)
!12784 = !DISubroutineType(types: !12785)
!12785 = !{null, !113, !119, !239}
!12786 = !{!12787, !12788, !12789}
!12787 = !DILocalVariable(name: "dst", arg: 1, scope: !12783, file: !1821, line: 108, type: !113)
!12788 = !DILocalVariable(name: "c", arg: 2, scope: !12783, file: !1821, line: 108, type: !119)
!12789 = !DILocalVariable(name: "n", arg: 3, scope: !12783, file: !1821, line: 108, type: !239)
!12790 = !DILocation(line: 0, scope: !12783)
!12791 = !DILocation(line: 110, column: 9, scope: !12783)
!12792 = !DILocation(line: 111, column: 1, scope: !12783)
!12793 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1821, file: !1821, line: 121, type: !12794, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12796)
!12794 = !DISubroutineType(types: !12795)
!12795 = !{null, !113, !13, !239}
!12796 = !{!12797, !12798, !12799}
!12797 = !DILocalVariable(name: "dst", arg: 1, scope: !12793, file: !1821, line: 121, type: !113)
!12798 = !DILocalVariable(name: "src", arg: 2, scope: !12793, file: !1821, line: 121, type: !13)
!12799 = !DILocalVariable(name: "n", arg: 3, scope: !12793, file: !1821, line: 121, type: !239)
!12800 = !DILocation(line: 0, scope: !12793)
!12801 = !DILocation(line: 123, column: 9, scope: !12793)
!12802 = !DILocation(line: 124, column: 1, scope: !12793)
!12803 = distinct !DISubprogram(name: "z_bss_zero", scope: !1821, file: !1821, line: 132, type: !2953, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !2022)
!12804 = !DILocation(line: 143, column: 2, scope: !12803)
!12805 = !DILocation(line: 168, column: 1, scope: !12803)
!12806 = distinct !DISubprogram(name: "z_init_cpu", scope: !1821, file: !1821, line: 372, type: !8399, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12807)
!12807 = !{!12808}
!12808 = !DILocalVariable(name: "id", arg: 1, scope: !12806, file: !1821, line: 372, type: !119)
!12809 = !DILocation(line: 0, scope: !12806)
!12810 = !DILocation(line: 374, column: 2, scope: !12806)
!12811 = !DILocation(line: 375, column: 34, scope: !12806)
!12812 = !DILocation(line: 375, column: 19, scope: !12806)
!12813 = !DILocation(line: 375, column: 31, scope: !12806)
!12814 = !DILocation(line: 376, column: 24, scope: !12806)
!12815 = !DILocation(line: 376, column: 19, scope: !12806)
!12816 = !DILocation(line: 376, column: 22, scope: !12806)
!12817 = !DILocation(line: 378, column: 26, scope: !12806)
!12818 = !DILocation(line: 378, column: 4, scope: !12806)
!12819 = !DILocation(line: 378, column: 50, scope: !12806)
!12820 = !DILocation(line: 377, column: 19, scope: !12806)
!12821 = !DILocation(line: 377, column: 29, scope: !12806)
!12822 = !DILocation(line: 384, column: 1, scope: !12806)
!12823 = distinct !DISubprogram(name: "init_idle_thread", scope: !1821, file: !1821, line: 343, type: !8399, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12824)
!12824 = !{!12825, !12826, !12827, !12830}
!12825 = !DILocalVariable(name: "i", arg: 1, scope: !12823, file: !1821, line: 343, type: !119)
!12826 = !DILocalVariable(name: "thread", scope: !12823, file: !1821, line: 345, type: !1913)
!12827 = !DILocalVariable(name: "stack", scope: !12823, file: !1821, line: 346, type: !12828)
!12828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12829, size: 32)
!12829 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !2031)
!12830 = !DILocalVariable(name: "tname", scope: !12823, file: !1821, line: 354, type: !106)
!12831 = !DILocation(line: 0, scope: !12823)
!12832 = !DILocation(line: 345, column: 29, scope: !12823)
!12833 = !DILocation(line: 346, column: 28, scope: !12823)
!12834 = !DILocation(line: 362, column: 37, scope: !12823)
!12835 = !DILocation(line: 362, column: 36, scope: !12823)
!12836 = !DILocation(line: 361, column: 2, scope: !12823)
!12837 = !DILocation(line: 365, column: 2, scope: !12823)
!12838 = !DILocation(line: 370, column: 1, scope: !12823)
!12839 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !12840, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12842)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{!106, !12828}
!12842 = !{!12843}
!12843 = !DILocalVariable(name: "sym", arg: 1, scope: !12839, file: !128, line: 331, type: !12828)
!12844 = !DILocation(line: 0, scope: !12839)
!12845 = !DILocation(line: 333, column: 21, scope: !12839)
!12846 = !DILocation(line: 333, column: 2, scope: !12839)
!12847 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12848, file: !12848, line: 155, type: !12849, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12851)
!12848 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12849 = !DISubroutineType(types: !12850)
!12850 = !{null, !1913}
!12851 = !{!12852}
!12852 = !DILocalVariable(name: "thread", arg: 1, scope: !12847, file: !12848, line: 155, type: !1913)
!12853 = !DILocation(line: 0, scope: !12847)
!12854 = !DILocation(line: 157, column: 15, scope: !12847)
!12855 = !DILocation(line: 157, column: 28, scope: !12847)
!12856 = !DILocation(line: 158, column: 1, scope: !12847)
!12857 = distinct !DISubprogram(name: "z_cstart", scope: !1821, file: !1821, line: 501, type: !2953, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12858)
!12858 = !{!12859}
!12859 = !DILocalVariable(name: "dummy_thread", scope: !12857, file: !1821, line: 518, type: !1914)
!12860 = !DILocation(line: 507, column: 2, scope: !12857)
!12861 = !DILocation(line: 43, column: 14, scope: !12862, inlinedAt: !12866)
!12862 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12863, file: !12863, line: 40, type: !2953, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12864)
!12863 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12864 = !{!12865}
!12865 = !DILocalVariable(name: "msp", scope: !12862, file: !12863, line: 42, type: !118)
!12866 = distinct !DILocation(line: 44, column: 2, scope: !12867, inlinedAt: !12869)
!12867 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12868, file: !12868, line: 42, type: !2953, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !2022)
!12868 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12869 = distinct !DILocation(line: 510, column: 2, scope: !12857)
!12870 = !DILocation(line: 43, column: 3, scope: !12862, inlinedAt: !12866)
!12871 = !DILocation(line: 43, column: 60, scope: !12862, inlinedAt: !12866)
!12872 = !DILocation(line: 0, scope: !12862, inlinedAt: !12866)
!12873 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12874, file: !6315, line: 1153, type: !118)
!12874 = distinct !DISubprogram(name: "__set_MSP", scope: !6315, file: !6315, line: 1153, type: !6410, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12875)
!12875 = !{!12873}
!12876 = !DILocation(line: 0, scope: !12874, inlinedAt: !12877)
!12877 = distinct !DILocation(line: 46, column: 2, scope: !12862, inlinedAt: !12866)
!12878 = !DILocation(line: 1155, column: 3, scope: !12874, inlinedAt: !12877)
!12879 = !{i64 3519088}
!12880 = !DILocation(line: 62, column: 11, scope: !12862, inlinedAt: !12866)
!12881 = !DILocation(line: 102, column: 2, scope: !12882, inlinedAt: !12883)
!12882 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7365, file: !7365, line: 97, type: !2953, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !2022)
!12883 = distinct !DILocation(line: 45, column: 2, scope: !12867, inlinedAt: !12869)
!12884 = !DILocation(line: 108, column: 2, scope: !12882, inlinedAt: !12883)
!12885 = !DILocation(line: 112, column: 2, scope: !12882, inlinedAt: !12883)
!12886 = !DILocation(line: 113, column: 2, scope: !12882, inlinedAt: !12883)
!12887 = !DILocation(line: 114, column: 2, scope: !12882, inlinedAt: !12883)
!12888 = !DILocation(line: 116, column: 2, scope: !12882, inlinedAt: !12883)
!12889 = !DILocation(line: 123, column: 13, scope: !12882, inlinedAt: !12883)
!12890 = !DILocation(line: 46, column: 2, scope: !12867, inlinedAt: !12869)
!12891 = !DILocation(line: 47, column: 2, scope: !12867, inlinedAt: !12869)
!12892 = !DILocation(line: 174, column: 12, scope: !12893, inlinedAt: !12894)
!12893 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7365, file: !7365, line: 169, type: !2953, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !2022)
!12894 = distinct !DILocation(line: 48, column: 2, scope: !12867, inlinedAt: !12869)
!12895 = !DILocation(line: 179, column: 12, scope: !12893, inlinedAt: !12894)
!12896 = !DILocation(line: 50, column: 2, scope: !12867, inlinedAt: !12869)
!12897 = !DILocation(line: 57, column: 2, scope: !12867, inlinedAt: !12869)
!12898 = !DILocation(line: 518, column: 2, scope: !12857)
!12899 = !DILocation(line: 518, column: 18, scope: !12857)
!12900 = !DILocation(line: 520, column: 2, scope: !12857)
!12901 = !DILocation(line: 523, column: 2, scope: !12857)
!12902 = !DILocation(line: 526, column: 2, scope: !12857)
!12903 = !DILocation(line: 527, column: 2, scope: !12857)
!12904 = !DILocation(line: 543, column: 24, scope: !12857)
!12905 = !DILocation(line: 543, column: 2, scope: !12857)
!12906 = !DILocation(line: 0, scope: !2055)
!12907 = !DILocation(line: 246, column: 15, scope: !2073)
!12908 = !DILocation(line: 246, column: 36, scope: !2072)
!12909 = !DILocation(line: 246, column: 2, scope: !2073)
!12910 = !DILocation(line: 247, column: 37, scope: !2071)
!12911 = !DILocation(line: 0, scope: !2071)
!12912 = !DILocation(line: 248, column: 19, scope: !2071)
!12913 = !DILocation(line: 248, column: 12, scope: !2071)
!12914 = !DILocation(line: 250, column: 11, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !2071, file: !1821, line: 250, column: 7)
!12916 = !DILocation(line: 250, column: 7, scope: !2071)
!12917 = !DILocation(line: 254, column: 11, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12919, file: !1821, line: 254, column: 8)
!12919 = distinct !DILexicalBlock(scope: !12915, file: !1821, line: 250, column: 20)
!12920 = !DILocation(line: 254, column: 8, scope: !12919)
!12921 = !DILocation(line: 255, column: 9, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12918, file: !1821, line: 254, column: 17)
!12923 = !DILocation(line: 258, column: 9, scope: !12922)
!12924 = !DILocation(line: 261, column: 28, scope: !12922)
!12925 = !DILocation(line: 261, column: 10, scope: !12922)
!12926 = !DILocation(line: 261, column: 17, scope: !12922)
!12927 = !DILocation(line: 261, column: 26, scope: !12922)
!12928 = !DILocation(line: 262, column: 4, scope: !12922)
!12929 = !DILocation(line: 263, column: 9, scope: !12919)
!12930 = !DILocation(line: 263, column: 16, scope: !12919)
!12931 = !DILocation(line: 263, column: 28, scope: !12919)
!12932 = !DILocation(line: 264, column: 3, scope: !12919)
!12933 = !DILocation(line: 246, column: 60, scope: !2072)
!12934 = distinct !{!12934, !12909, !12935}
!12935 = !DILocation(line: 265, column: 2, scope: !2073)
!12936 = !DILocation(line: 266, column: 1, scope: !2055)
!12937 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6355, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12938)
!12938 = !{!12939, !12940}
!12939 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12937, file: !533, line: 1814, type: !789)
!12940 = !DILocalVariable(name: "priority", arg: 2, scope: !12937, file: !533, line: 1814, type: !118)
!12941 = !DILocation(line: 0, scope: !12937)
!12942 = !DILocation(line: 1822, column: 48, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12944, file: !533, line: 1821, column: 3)
!12944 = distinct !DILexicalBlock(scope: !12937, file: !533, line: 1816, column: 7)
!12945 = !DILocation(line: 1822, column: 32, scope: !12943)
!12946 = !DILocation(line: 1822, column: 40, scope: !12943)
!12947 = !DILocation(line: 1822, column: 5, scope: !12943)
!12948 = !DILocation(line: 1822, column: 46, scope: !12943)
!12949 = !DILocation(line: 1824, column: 1, scope: !12937)
!12950 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12868, file: !12868, line: 32, type: !2953, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!12951 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12952, file: !12952, line: 215, type: !12849, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12953)
!12952 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12953 = !{!12954}
!12954 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12951, file: !12952, line: 215, type: !1913)
!12955 = !DILocation(line: 0, scope: !12951)
!12956 = !DILocation(line: 217, column: 21, scope: !12951)
!12957 = !DILocation(line: 217, column: 34, scope: !12951)
!12958 = !DILocation(line: 221, column: 21, scope: !12951)
!12959 = !DILocation(line: 221, column: 34, scope: !12951)
!12960 = !DILocation(line: 223, column: 27, scope: !12951)
!12961 = !DILocation(line: 223, column: 33, scope: !12951)
!12962 = !DILocation(line: 224, column: 27, scope: !12951)
!12963 = !DILocation(line: 224, column: 32, scope: !12951)
!12964 = !DILocation(line: 232, column: 16, scope: !12951)
!12965 = !DILocation(line: 232, column: 30, scope: !12951)
!12966 = !DILocation(line: 239, column: 24, scope: !12951)
!12967 = !DILocation(line: 240, column: 1, scope: !12951)
!12968 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1821, file: !1821, line: 399, type: !12969, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12971)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!106}
!12971 = !{!12972}
!12972 = !DILocalVariable(name: "stack_ptr", scope: !12968, file: !1821, line: 401, type: !106)
!12973 = !DILocation(line: 404, column: 2, scope: !12968)
!12974 = !DILocation(line: 416, column: 24, scope: !12968)
!12975 = !DILocation(line: 418, column: 14, scope: !12968)
!12976 = !DILocation(line: 0, scope: !12968)
!12977 = !DILocation(line: 423, column: 2, scope: !12968)
!12978 = !DILocation(line: 424, column: 2, scope: !12968)
!12979 = !DILocation(line: 426, column: 2, scope: !12968)
!12980 = !DILocation(line: 428, column: 2, scope: !12968)
!12981 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1821, file: !1821, line: 432, type: !12982, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12984)
!12982 = !DISubroutineType(types: !12983)
!12983 = !{null, !106}
!12984 = !{!12985}
!12985 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12981, file: !1821, line: 432, type: !106)
!12986 = !DILocation(line: 0, scope: !12981)
!12987 = !DILocation(line: 435, column: 2, scope: !12981)
!12988 = !DILocation(line: 445, column: 2, scope: !12981)
!12989 = distinct !DISubprogram(name: "bg_thread_main", scope: !1821, file: !1821, line: 277, type: !111, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !12990)
!12990 = !{!12991, !12992, !12993}
!12991 = !DILocalVariable(name: "unused1", arg: 1, scope: !12989, file: !1821, line: 277, type: !113)
!12992 = !DILocalVariable(name: "unused2", arg: 2, scope: !12989, file: !1821, line: 277, type: !113)
!12993 = !DILocalVariable(name: "unused3", arg: 3, scope: !12989, file: !1821, line: 277, type: !113)
!12994 = !DILocation(line: 0, scope: !12989)
!12995 = !DILocation(line: 291, column: 20, scope: !12989)
!12996 = !DILocation(line: 293, column: 2, scope: !12989)
!12997 = !DILocation(line: 297, column: 2, scope: !12989)
!12998 = !DILocation(line: 305, column: 2, scope: !12989)
!12999 = !DILocation(line: 307, column: 2, scope: !12989)
!13000 = !DILocation(line: 330, column: 8, scope: !12989)
!13001 = !DILocation(line: 333, column: 34, scope: !12989)
!13002 = !DILocation(line: 339, column: 1, scope: !12989)
!13003 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2084, file: !2084, line: 45, type: !13004, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13012)
!13004 = !DISubroutineType(types: !13005)
!13005 = !{null, !13006, !113}
!13006 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !245, line: 103, baseType: !13007)
!13007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13008, size: 32)
!13008 = !DISubroutineType(types: !13009)
!13009 = !{null, !13010, !113}
!13010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13011, size: 32)
!13011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2089)
!13012 = !{!13013, !13014}
!13013 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13003, file: !2084, line: 45, type: !13006)
!13014 = !DILocalVariable(name: "user_data", arg: 2, scope: !13003, file: !2084, line: 45, type: !113)
!13015 = !DILocation(line: 0, scope: !13003)
!13016 = !DILocation(line: 71, column: 1, scope: !13003)
!13017 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2084, file: !2084, line: 73, type: !13004, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13018)
!13018 = !{!13019, !13020}
!13019 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13017, file: !2084, line: 73, type: !13006)
!13020 = !DILocalVariable(name: "user_data", arg: 2, scope: !13017, file: !2084, line: 73, type: !113)
!13021 = !DILocation(line: 0, scope: !13017)
!13022 = !DILocation(line: 95, column: 1, scope: !13017)
!13023 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2084, file: !2084, line: 97, type: !7366, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2022)
!13024 = !DILocation(line: 1031, column: 3, scope: !13025, inlinedAt: !13028)
!13025 = distinct !DISubprogram(name: "__get_IPSR", scope: !6315, file: !6315, line: 1027, type: !3191, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13026)
!13026 = !{!13027}
!13027 = !DILocalVariable(name: "result", scope: !13025, file: !6315, line: 1029, type: !118)
!13028 = distinct !DILocation(line: 48, column: 10, scope: !13029, inlinedAt: !13030)
!13029 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7365, file: !7365, line: 46, type: !7366, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2022)
!13030 = distinct !DILocation(line: 99, column: 9, scope: !13023)
!13031 = !{i64 3524739}
!13032 = !DILocation(line: 0, scope: !13025, inlinedAt: !13028)
!13033 = !DILocation(line: 48, column: 9, scope: !13029, inlinedAt: !13030)
!13034 = !DILocation(line: 99, column: 2, scope: !13023)
!13035 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2084, file: !2084, line: 106, type: !2953, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2022)
!13036 = !DILocation(line: 108, column: 2, scope: !13035)
!13037 = !DILocation(line: 108, column: 17, scope: !13035)
!13038 = !DILocation(line: 108, column: 30, scope: !13035)
!13039 = !DILocation(line: 109, column: 1, scope: !13035)
!13040 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2084, file: !2084, line: 116, type: !2953, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2022)
!13041 = !DILocation(line: 118, column: 2, scope: !13040)
!13042 = !DILocation(line: 118, column: 17, scope: !13040)
!13043 = !DILocation(line: 118, column: 30, scope: !13040)
!13044 = !DILocation(line: 119, column: 1, scope: !13040)
!13045 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2084, file: !2084, line: 126, type: !7366, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2022)
!13046 = !DILocation(line: 128, column: 10, scope: !13045)
!13047 = !DILocation(line: 128, column: 25, scope: !13045)
!13048 = !DILocation(line: 128, column: 38, scope: !13045)
!13049 = !DILocation(line: 128, column: 53, scope: !13045)
!13050 = !DILocation(line: 128, column: 2, scope: !13045)
!13051 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2084, file: !2084, line: 187, type: !13052, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!119, !2088, !278}
!13054 = !{!13055, !13056}
!13055 = !DILocalVariable(name: "thread", arg: 1, scope: !13051, file: !2084, line: 187, type: !2088)
!13056 = !DILocalVariable(name: "value", arg: 2, scope: !13051, file: !2084, line: 187, type: !278)
!13057 = !DILocation(line: 0, scope: !13051)
!13058 = !DILocation(line: 190, column: 13, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13051, file: !2084, line: 190, column: 6)
!13060 = !DILocation(line: 190, column: 6, scope: !13051)
!13061 = !DILocation(line: 194, column: 10, scope: !13051)
!13062 = !DILocation(line: 194, column: 2, scope: !13051)
!13063 = !DILocation(line: 195, column: 2, scope: !13051)
!13064 = !DILocation(line: 195, column: 47, scope: !13051)
!13065 = !DILocation(line: 199, column: 2, scope: !13051)
!13066 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2084, file: !2084, line: 238, type: !13067, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13069)
!13067 = !DISubroutineType(types: !13068)
!13068 = !{!278, !2088}
!13069 = !{!13070}
!13070 = !DILocalVariable(name: "thread", arg: 1, scope: !13066, file: !2084, line: 238, type: !2088)
!13071 = !DILocation(line: 0, scope: !13066)
!13072 = !DILocation(line: 241, column: 23, scope: !13066)
!13073 = !DILocation(line: 241, column: 2, scope: !13066)
!13074 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2084, file: !2084, line: 248, type: !13075, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13077)
!13075 = !DISubroutineType(types: !13076)
!13076 = !{!119, !2087, !106, !239}
!13077 = !{!13078, !13079, !13080}
!13078 = !DILocalVariable(name: "thread", arg: 1, scope: !13074, file: !2084, line: 248, type: !2087)
!13079 = !DILocalVariable(name: "buf", arg: 2, scope: !13074, file: !2084, line: 248, type: !106)
!13080 = !DILocalVariable(name: "size", arg: 3, scope: !13074, file: !2084, line: 248, type: !239)
!13081 = !DILocation(line: 0, scope: !13074)
!13082 = !DILocation(line: 251, column: 15, scope: !13074)
!13083 = !DILocation(line: 251, column: 2, scope: !13074)
!13084 = !DILocation(line: 252, column: 2, scope: !13074)
!13085 = !DILocation(line: 0, scope: !2083)
!13086 = !DILocation(line: 281, column: 11, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !2083, file: !2084, line: 281, column: 6)
!13088 = !DILocation(line: 281, column: 20, scope: !13087)
!13089 = !DILocation(line: 275, column: 45, scope: !2083)
!13090 = !DILocation(line: 285, column: 10, scope: !2083)
!13091 = !DILocation(line: 0, scope: !2207)
!13092 = !DILocation(line: 293, column: 39, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !2207, file: !2084, line: 293, column: 2)
!13094 = !DILocation(line: 293, column: 2, scope: !2207)
!13095 = !DILocation(line: 273, column: 14, scope: !2083)
!13096 = !DILocation(line: 309, column: 2, scope: !2083)
!13097 = !DILocation(line: 309, column: 11, scope: !2083)
!13098 = !DILocation(line: 311, column: 2, scope: !2083)
!13099 = !DILocation(line: 293, column: 26, scope: !13093)
!13100 = !DILocation(line: 294, column: 9, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13093, file: !2084, line: 293, column: 54)
!13102 = !DILocation(line: 295, column: 21, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13101, file: !2084, line: 295, column: 7)
!13104 = !DILocation(line: 295, column: 28, scope: !13103)
!13105 = !DILocation(line: 295, column: 7, scope: !13101)
!13106 = !DILocation(line: 299, column: 25, scope: !13101)
!13107 = !DILocation(line: 299, column: 41, scope: !13101)
!13108 = !DILocation(line: 300, column: 7, scope: !13101)
!13109 = !DILocation(line: 300, column: 26, scope: !13101)
!13110 = !DILocation(line: 299, column: 10, scope: !13101)
!13111 = !DILocation(line: 299, column: 7, scope: !13101)
!13112 = !DILocation(line: 302, column: 16, scope: !13101)
!13113 = !DILocation(line: 304, column: 20, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13101, file: !2084, line: 304, column: 7)
!13115 = !DILocation(line: 304, column: 7, scope: !13101)
!13116 = !DILocation(line: 305, column: 26, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13114, file: !2084, line: 304, column: 26)
!13118 = !DILocation(line: 305, column: 42, scope: !13117)
!13119 = !DILocation(line: 305, column: 11, scope: !13117)
!13120 = !DILocation(line: 305, column: 8, scope: !13117)
!13121 = !DILocation(line: 306, column: 3, scope: !13117)
!13122 = !DILocation(line: 293, column: 50, scope: !13093)
!13123 = !DILocation(line: 312, column: 1, scope: !2083)
!13124 = distinct !DISubprogram(name: "copy_bytes", scope: !2084, file: !2084, line: 261, type: !13125, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13127)
!13125 = !DISubroutineType(types: !13126)
!13126 = !{!239, !106, !239, !278, !239}
!13127 = !{!13128, !13129, !13130, !13131, !13132}
!13128 = !DILocalVariable(name: "dest", arg: 1, scope: !13124, file: !2084, line: 261, type: !106)
!13129 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13124, file: !2084, line: 261, type: !239)
!13130 = !DILocalVariable(name: "src", arg: 3, scope: !13124, file: !2084, line: 261, type: !278)
!13131 = !DILocalVariable(name: "src_size", arg: 4, scope: !13124, file: !2084, line: 261, type: !239)
!13132 = !DILocalVariable(name: "bytes_to_copy", scope: !13124, file: !2084, line: 263, type: !239)
!13133 = !DILocation(line: 0, scope: !13124)
!13134 = !DILocation(line: 265, column: 18, scope: !13124)
!13135 = !DILocation(line: 266, column: 2, scope: !13124)
!13136 = !DILocation(line: 268, column: 2, scope: !13124)
!13137 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2084, file: !2084, line: 383, type: !13138, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13140)
!13138 = !DISubroutineType(types: !13139)
!13139 = !{null, !2088}
!13140 = !{!13141}
!13141 = !DILocalVariable(name: "thread", arg: 1, scope: !13137, file: !2084, line: 383, type: !2088)
!13142 = !DILocation(line: 0, scope: !13137)
!13143 = !DILocation(line: 387, column: 2, scope: !13137)
!13144 = !DILocation(line: 388, column: 1, scope: !13137)
!13145 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2084, file: !2084, line: 528, type: !13146, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13153)
!13146 = !DISubroutineType(types: !13147)
!13147 = !{!106, !2088, !13148, !239, !108, !113, !113, !113, !119, !118, !278}
!13148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13149, size: 32)
!13149 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !13150)
!13150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !13151)
!13151 = !{!13152}
!13152 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13150, file: !128, line: 48, baseType: !107, size: 8)
!13153 = !{!13154, !13155, !13156, !13157, !13158, !13159, !13160, !13161, !13162, !13163, !13164}
!13154 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13145, file: !2084, line: 528, type: !2088)
!13155 = !DILocalVariable(name: "stack", arg: 2, scope: !13145, file: !2084, line: 529, type: !13148)
!13156 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13145, file: !2084, line: 529, type: !239)
!13157 = !DILocalVariable(name: "entry", arg: 4, scope: !13145, file: !2084, line: 530, type: !108)
!13158 = !DILocalVariable(name: "p1", arg: 5, scope: !13145, file: !2084, line: 531, type: !113)
!13159 = !DILocalVariable(name: "p2", arg: 6, scope: !13145, file: !2084, line: 531, type: !113)
!13160 = !DILocalVariable(name: "p3", arg: 7, scope: !13145, file: !2084, line: 531, type: !113)
!13161 = !DILocalVariable(name: "prio", arg: 8, scope: !13145, file: !2084, line: 532, type: !119)
!13162 = !DILocalVariable(name: "options", arg: 9, scope: !13145, file: !2084, line: 532, type: !118)
!13163 = !DILocalVariable(name: "name", arg: 10, scope: !13145, file: !2084, line: 532, type: !278)
!13164 = !DILocalVariable(name: "stack_ptr", scope: !13145, file: !2084, line: 534, type: !106)
!13165 = !DILocation(line: 0, scope: !13145)
!13166 = !DILocation(line: 536, column: 2, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13168, file: !2084, line: 536, column: 2)
!13168 = distinct !DILexicalBlock(scope: !13169, file: !2084, line: 536, column: 2)
!13169 = distinct !DILexicalBlock(scope: !13145, file: !2084, line: 536, column: 2)
!13170 = !DILocation(line: 536, column: 2, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13167, file: !2084, line: 536, column: 2)
!13172 = !DILocation(line: 550, column: 28, scope: !13145)
!13173 = !DILocation(line: 550, column: 2, scope: !13145)
!13174 = !DILocation(line: 553, column: 34, scope: !13145)
!13175 = !DILocation(line: 553, column: 2, scope: !13145)
!13176 = !DILocation(line: 554, column: 14, scope: !13145)
!13177 = !DILocation(line: 564, column: 2, scope: !13145)
!13178 = !DILocation(line: 567, column: 14, scope: !13145)
!13179 = !DILocation(line: 567, column: 24, scope: !13145)
!13180 = !DILocation(line: 594, column: 11, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13145, file: !2084, line: 594, column: 6)
!13182 = !DILocation(line: 0, scope: !13181)
!13183 = !DILocation(line: 594, column: 6, scope: !13145)
!13184 = !DILocation(line: 595, column: 3, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13181, file: !2084, line: 594, column: 20)
!13186 = !DILocation(line: 598, column: 3, scope: !13185)
!13187 = !DILocation(line: 598, column: 52, scope: !13185)
!13188 = !DILocation(line: 599, column: 2, scope: !13185)
!13189 = !DILocation(line: 600, column: 23, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13181, file: !2084, line: 599, column: 9)
!13191 = !DILocation(line: 612, column: 7, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13145, file: !2084, line: 612, column: 6)
!13193 = !DILocation(line: 612, column: 6, scope: !13145)
!13194 = !DILocation(line: 627, column: 40, scope: !13145)
!13195 = !DILocation(line: 637, column: 2, scope: !13145)
!13196 = !DILocation(line: 613, column: 15, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13192, file: !2084, line: 612, column: 17)
!13198 = !DILocation(line: 613, column: 29, scope: !13197)
!13199 = !DILocation(line: 638, column: 1, scope: !13145)
!13200 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12848, file: !12848, line: 78, type: !13201, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13203)
!13201 = !DISubroutineType(types: !13202)
!13202 = !{!345, !113}
!13203 = !{!13204}
!13204 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13200, file: !12848, line: 78, type: !113)
!13205 = !DILocation(line: 0, scope: !13200)
!13206 = !DILocation(line: 80, column: 21, scope: !13200)
!13207 = !DILocation(line: 80, column: 2, scope: !13200)
!13208 = distinct !DISubprogram(name: "z_waitq_init", scope: !13209, file: !13209, line: 47, type: !13210, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13212)
!13209 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13210 = !DISubroutineType(types: !13211)
!13211 = !{null, !2119}
!13212 = !{!13213}
!13213 = !DILocalVariable(name: "w", arg: 1, scope: !13208, file: !13209, line: 47, type: !2119)
!13214 = !DILocation(line: 0, scope: !13208)
!13215 = !DILocation(line: 49, column: 21, scope: !13208)
!13216 = !DILocation(line: 49, column: 2, scope: !13208)
!13217 = !DILocation(line: 50, column: 1, scope: !13208)
!13218 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2084, file: !2084, line: 791, type: !13219, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13222)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{null, !13221, !119, !118, !32}
!13221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!13222 = !{!13223, !13224, !13225, !13226}
!13223 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13218, file: !2084, line: 791, type: !13221)
!13224 = !DILocalVariable(name: "priority", arg: 2, scope: !13218, file: !2084, line: 791, type: !119)
!13225 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13218, file: !2084, line: 792, type: !118)
!13226 = !DILocalVariable(name: "options", arg: 4, scope: !13218, file: !2084, line: 792, type: !32)
!13227 = !DILocation(line: 0, scope: !13218)
!13228 = !DILocation(line: 795, column: 15, scope: !13218)
!13229 = !DILocation(line: 795, column: 25, scope: !13218)
!13230 = !DILocation(line: 796, column: 30, scope: !13218)
!13231 = !DILocation(line: 796, column: 15, scope: !13218)
!13232 = !DILocation(line: 796, column: 28, scope: !13218)
!13233 = !DILocation(line: 797, column: 30, scope: !13218)
!13234 = !DILocation(line: 797, column: 15, scope: !13218)
!13235 = !DILocation(line: 797, column: 28, scope: !13218)
!13236 = !DILocation(line: 799, column: 22, scope: !13218)
!13237 = !DILocation(line: 799, column: 15, scope: !13218)
!13238 = !DILocation(line: 799, column: 20, scope: !13218)
!13239 = !DILocation(line: 801, column: 15, scope: !13218)
!13240 = !DILocation(line: 801, column: 28, scope: !13218)
!13241 = !DILocation(line: 814, column: 2, scope: !13218)
!13242 = !DILocation(line: 815, column: 1, scope: !13218)
!13243 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2084, file: !2084, line: 449, type: !13244, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13246)
!13244 = !DISubroutineType(types: !13245)
!13245 = !{!106, !2088, !13148, !239}
!13246 = !{!13247, !13248, !13249, !13250, !13251, !13252, !13253, !13254}
!13247 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13243, file: !2084, line: 449, type: !2088)
!13248 = !DILocalVariable(name: "stack", arg: 2, scope: !13243, file: !2084, line: 450, type: !13148)
!13249 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13243, file: !2084, line: 450, type: !239)
!13250 = !DILocalVariable(name: "stack_obj_size", scope: !13243, file: !2084, line: 452, type: !239)
!13251 = !DILocalVariable(name: "stack_buf_size", scope: !13243, file: !2084, line: 452, type: !239)
!13252 = !DILocalVariable(name: "stack_ptr", scope: !13243, file: !2084, line: 453, type: !106)
!13253 = !DILocalVariable(name: "stack_buf_start", scope: !13243, file: !2084, line: 453, type: !106)
!13254 = !DILocalVariable(name: "delta", scope: !13243, file: !2084, line: 454, type: !239)
!13255 = !DILocation(line: 0, scope: !13243)
!13256 = !DILocation(line: 465, column: 20, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13243, file: !2084, line: 463, column: 2)
!13258 = !DILocation(line: 466, column: 21, scope: !13257)
!13259 = !DILocation(line: 473, column: 28, scope: !13243)
!13260 = !DILocation(line: 514, column: 33, scope: !13243)
!13261 = !DILocation(line: 514, column: 25, scope: !13243)
!13262 = !DILocation(line: 514, column: 31, scope: !13243)
!13263 = !DILocation(line: 515, column: 25, scope: !13243)
!13264 = !DILocation(line: 515, column: 30, scope: !13243)
!13265 = !DILocation(line: 516, column: 25, scope: !13243)
!13266 = !DILocation(line: 516, column: 31, scope: !13243)
!13267 = !DILocation(line: 520, column: 2, scope: !13243)
!13268 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !13269, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13271)
!13269 = !DISubroutineType(types: !13270)
!13270 = !{!106, !13148}
!13271 = !{!13272}
!13272 = !DILocalVariable(name: "sym", arg: 1, scope: !13268, file: !128, line: 331, type: !13148)
!13273 = !DILocation(line: 0, scope: !13268)
!13274 = !DILocation(line: 333, column: 21, scope: !13268)
!13275 = !DILocation(line: 333, column: 2, scope: !13268)
!13276 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13277, file: !13277, line: 40, type: !13278, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13280)
!13277 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13278 = !DISubroutineType(types: !13279)
!13279 = !{null, !13221}
!13280 = !{!13281}
!13281 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13276, file: !13277, line: 40, type: !13221)
!13282 = !DILocation(line: 0, scope: !13276)
!13283 = !DILocation(line: 42, column: 31, scope: !13276)
!13284 = !DILocation(line: 42, column: 2, scope: !13276)
!13285 = !DILocation(line: 43, column: 1, scope: !13276)
!13286 = distinct !DISubprogram(name: "z_init_timeout", scope: !13277, file: !13277, line: 25, type: !2145, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13287)
!13287 = !{!13288}
!13288 = !DILocalVariable(name: "to", arg: 1, scope: !13286, file: !13277, line: 25, type: !2147)
!13289 = !DILocation(line: 0, scope: !13286)
!13290 = !DILocation(line: 27, column: 22, scope: !13286)
!13291 = !DILocation(line: 27, column: 2, scope: !13286)
!13292 = !DILocation(line: 28, column: 1, scope: !13286)
!13293 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !13294, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13296)
!13294 = !DISubroutineType(types: !13295)
!13295 = !{null, !2194}
!13296 = !{!13297}
!13297 = !DILocalVariable(name: "node", arg: 1, scope: !13293, file: !153, line: 211, type: !2194)
!13298 = !DILocation(line: 0, scope: !13293)
!13299 = !DILocation(line: 213, column: 8, scope: !13293)
!13300 = !DILocation(line: 213, column: 13, scope: !13293)
!13301 = !DILocation(line: 214, column: 8, scope: !13293)
!13302 = !DILocation(line: 214, column: 13, scope: !13293)
!13303 = !DILocation(line: 215, column: 1, scope: !13293)
!13304 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !13305, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13308)
!13305 = !DISubroutineType(types: !13306)
!13306 = !{null, !13307}
!13307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!13308 = !{!13309}
!13309 = !DILocalVariable(name: "list", arg: 1, scope: !13304, file: !153, line: 197, type: !13307)
!13310 = !DILocation(line: 0, scope: !13304)
!13311 = !DILocation(line: 199, column: 8, scope: !13304)
!13312 = !DILocation(line: 199, column: 13, scope: !13304)
!13313 = !DILocation(line: 200, column: 8, scope: !13304)
!13314 = !DILocation(line: 200, column: 13, scope: !13304)
!13315 = !DILocation(line: 201, column: 1, scope: !13304)
!13316 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2084, file: !2084, line: 641, type: !13317, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13323)
!13317 = !DISubroutineType(types: !13318)
!13318 = !{!2087, !2088, !13148, !239, !108, !113, !113, !113, !119, !118, !13319}
!13319 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !13320)
!13320 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !13321)
!13321 = !{!13322}
!13322 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13320, file: !115, line: 66, baseType: !114, size: 64)
!13323 = !{!13324, !13325, !13326, !13327, !13328, !13329, !13330, !13331, !13332, !13333}
!13324 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13316, file: !2084, line: 641, type: !2088)
!13325 = !DILocalVariable(name: "stack", arg: 2, scope: !13316, file: !2084, line: 642, type: !13148)
!13326 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13316, file: !2084, line: 643, type: !239)
!13327 = !DILocalVariable(name: "entry", arg: 4, scope: !13316, file: !2084, line: 643, type: !108)
!13328 = !DILocalVariable(name: "p1", arg: 5, scope: !13316, file: !2084, line: 644, type: !113)
!13329 = !DILocalVariable(name: "p2", arg: 6, scope: !13316, file: !2084, line: 644, type: !113)
!13330 = !DILocalVariable(name: "p3", arg: 7, scope: !13316, file: !2084, line: 644, type: !113)
!13331 = !DILocalVariable(name: "prio", arg: 8, scope: !13316, file: !2084, line: 645, type: !119)
!13332 = !DILocalVariable(name: "options", arg: 9, scope: !13316, file: !2084, line: 645, type: !118)
!13333 = !DILocalVariable(name: "delay", arg: 10, scope: !13316, file: !2084, line: 645, type: !13319)
!13334 = !DILocation(line: 0, scope: !13316)
!13335 = !DILocation(line: 1031, column: 3, scope: !13025, inlinedAt: !13336)
!13336 = distinct !DILocation(line: 48, column: 10, scope: !13029, inlinedAt: !13337)
!13337 = distinct !DILocation(line: 647, column: 2, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13339, file: !2084, line: 647, column: 2)
!13339 = distinct !DILexicalBlock(scope: !13316, file: !2084, line: 647, column: 2)
!13340 = !DILocation(line: 0, scope: !13025, inlinedAt: !13336)
!13341 = !DILocation(line: 48, column: 9, scope: !13029, inlinedAt: !13337)
!13342 = !DILocation(line: 647, column: 2, scope: !13339)
!13343 = !DILocation(line: 647, column: 2, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13338, file: !2084, line: 647, column: 2)
!13345 = !DILocation(line: 649, column: 2, scope: !13316)
!13346 = !DILocation(line: 652, column: 7, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13316, file: !2084, line: 652, column: 6)
!13348 = !DILocation(line: 652, column: 6, scope: !13316)
!13349 = !DILocation(line: 653, column: 3, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13347, file: !2084, line: 652, column: 39)
!13351 = !DILocation(line: 654, column: 2, scope: !13350)
!13352 = !DILocation(line: 656, column: 2, scope: !13316)
!13353 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2084, file: !2084, line: 401, type: !13354, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13356)
!13354 = !DISubroutineType(types: !13355)
!13355 = !{null, !2088, !13319}
!13356 = !{!13357, !13358}
!13357 = !DILocalVariable(name: "thread", arg: 1, scope: !13353, file: !2084, line: 401, type: !2088)
!13358 = !DILocalVariable(name: "delay", arg: 2, scope: !13353, file: !2084, line: 401, type: !13319)
!13359 = !DILocation(line: 0, scope: !13353)
!13360 = !DILocation(line: 404, column: 6, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13353, file: !2084, line: 404, column: 6)
!13362 = !DILocation(line: 404, column: 6, scope: !13353)
!13363 = !DILocation(line: 405, column: 3, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13361, file: !2084, line: 404, column: 38)
!13365 = !DILocation(line: 406, column: 2, scope: !13364)
!13366 = !DILocation(line: 407, column: 3, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13361, file: !2084, line: 406, column: 9)
!13368 = !DILocation(line: 413, column: 1, scope: !13353)
!13369 = distinct !DISubprogram(name: "k_thread_start", scope: !3204, file: !3204, line: 205, type: !13370, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13372)
!13370 = !DISubroutineType(types: !13371)
!13371 = !{null, !2087}
!13372 = !{!13373}
!13373 = !DILocalVariable(name: "thread", arg: 1, scope: !13369, file: !3204, line: 205, type: !2087)
!13374 = !DILocation(line: 0, scope: !13369)
!13375 = !DILocation(line: 214, column: 2, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13369, file: !3204, line: 214, column: 2)
!13377 = !{i64 2154775308}
!13378 = !DILocation(line: 215, column: 2, scope: !13369)
!13379 = !DILocation(line: 216, column: 1, scope: !13369)
!13380 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13277, file: !13277, line: 47, type: !13354, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13381)
!13381 = !{!13382, !13383}
!13382 = !DILocalVariable(name: "thread", arg: 1, scope: !13380, file: !13277, line: 47, type: !2088)
!13383 = !DILocalVariable(name: "ticks", arg: 2, scope: !13380, file: !13277, line: 47, type: !13319)
!13384 = !DILocation(line: 0, scope: !13380)
!13385 = !DILocation(line: 49, column: 30, scope: !13380)
!13386 = !DILocation(line: 49, column: 2, scope: !13380)
!13387 = !DILocation(line: 50, column: 1, scope: !13380)
!13388 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2084, file: !2084, line: 748, type: !2953, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13389)
!13389 = !{!13390, !13408}
!13390 = !DILocalVariable(name: "thread_data", scope: !13391, file: !2084, line: 750, type: !13392)
!13391 = distinct !DILexicalBlock(scope: !13388, file: !2084, line: 750, column: 2)
!13392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13393, size: 32)
!13393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !245, line: 620, size: 384, elements: !13394)
!13394 = !{!13395, !13396, !13397, !13398, !13399, !13400, !13401, !13402, !13403, !13404, !13405, !13407}
!13395 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13393, file: !245, line: 621, baseType: !2088, size: 32)
!13396 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13393, file: !245, line: 622, baseType: !13148, size: 32, offset: 32)
!13397 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13393, file: !245, line: 623, baseType: !32, size: 32, offset: 64)
!13398 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13393, file: !245, line: 624, baseType: !108, size: 32, offset: 96)
!13399 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13393, file: !245, line: 625, baseType: !113, size: 32, offset: 128)
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13393, file: !245, line: 626, baseType: !113, size: 32, offset: 160)
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13393, file: !245, line: 627, baseType: !113, size: 32, offset: 192)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13393, file: !245, line: 628, baseType: !119, size: 32, offset: 224)
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13393, file: !245, line: 629, baseType: !118, size: 32, offset: 256)
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13393, file: !245, line: 630, baseType: !763, size: 32, offset: 288)
!13405 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13393, file: !245, line: 631, baseType: !13406, size: 32, offset: 320)
!13406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 32)
!13407 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13393, file: !245, line: 632, baseType: !278, size: 32, offset: 352)
!13408 = !DILocalVariable(name: "thread_data", scope: !13409, file: !2084, line: 781, type: !13392)
!13409 = distinct !DILexicalBlock(scope: !13388, file: !2084, line: 781, column: 2)
!13410 = !DILocation(line: 0, scope: !13391)
!13411 = !DILocation(line: 750, column: 2, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !2084, line: 750, column: 2)
!13413 = distinct !DILexicalBlock(scope: !13414, file: !2084, line: 750, column: 2)
!13414 = distinct !DILexicalBlock(scope: !13391, file: !2084, line: 750, column: 2)
!13415 = !DILocation(line: 750, column: 2, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13417, file: !2084, line: 750, column: 2)
!13417 = distinct !DILexicalBlock(scope: !13412, file: !2084, line: 750, column: 2)
!13418 = !DILocation(line: 750, column: 2, scope: !13413)
!13419 = !DILocation(line: 750, column: 2, scope: !13391)
!13420 = !DILocation(line: 780, column: 2, scope: !13388)
!13421 = !DILocation(line: 0, scope: !13409)
!13422 = !DILocation(line: 781, column: 2, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13424, file: !2084, line: 781, column: 2)
!13424 = distinct !DILexicalBlock(scope: !13425, file: !2084, line: 781, column: 2)
!13425 = distinct !DILexicalBlock(scope: !13409, file: !2084, line: 781, column: 2)
!13426 = !DILocation(line: 752, column: 17, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13414, file: !2084, line: 750, column: 38)
!13428 = !DILocation(line: 753, column: 17, scope: !13427)
!13429 = !DILocation(line: 754, column: 17, scope: !13427)
!13430 = !DILocation(line: 755, column: 17, scope: !13427)
!13431 = !DILocation(line: 756, column: 17, scope: !13427)
!13432 = !DILocation(line: 757, column: 17, scope: !13427)
!13433 = !DILocation(line: 758, column: 17, scope: !13427)
!13434 = !DILocation(line: 759, column: 17, scope: !13427)
!13435 = !DILocation(line: 760, column: 17, scope: !13427)
!13436 = !DILocation(line: 761, column: 17, scope: !13427)
!13437 = !DILocation(line: 751, column: 3, scope: !13427)
!13438 = !DILocation(line: 763, column: 16, scope: !13427)
!13439 = !DILocation(line: 763, column: 29, scope: !13427)
!13440 = !DILocation(line: 763, column: 39, scope: !13427)
!13441 = !DILocation(line: 750, column: 2, scope: !13414)
!13442 = !DILocation(line: 750, column: 2, scope: !13417)
!13443 = distinct !{!13443, !13419, !13444}
!13444 = !DILocation(line: 764, column: 2, scope: !13391)
!13445 = !DILocation(line: 781, column: 2, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13447, file: !2084, line: 781, column: 2)
!13447 = distinct !DILexicalBlock(scope: !13423, file: !2084, line: 781, column: 2)
!13448 = !DILocation(line: 781, column: 2, scope: !13424)
!13449 = !DILocation(line: 781, column: 2, scope: !13409)
!13450 = !DILocation(line: 787, column: 2, scope: !13388)
!13451 = !DILocation(line: 788, column: 1, scope: !13388)
!13452 = !DILocation(line: 782, column: 20, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !2084, line: 782, column: 7)
!13454 = distinct !DILexicalBlock(scope: !13425, file: !2084, line: 781, column: 38)
!13455 = !DILocation(line: 782, column: 31, scope: !13453)
!13456 = !DILocation(line: 782, column: 7, scope: !13454)
!13457 = !DILocation(line: 783, column: 37, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13453, file: !2084, line: 782, column: 51)
!13459 = !DILocation(line: 784, column: 10, scope: !13458)
!13460 = !DILocation(line: 783, column: 4, scope: !13458)
!13461 = !DILocation(line: 785, column: 3, scope: !13458)
!13462 = !DILocation(line: 781, column: 2, scope: !13425)
!13463 = !DILocation(line: 781, column: 2, scope: !13447)
!13464 = distinct !{!13464, !13449, !13465}
!13465 = !DILocation(line: 786, column: 2, scope: !13409)
!13466 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3196, file: !3196, line: 403, type: !3197, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13467)
!13467 = !{!13468}
!13468 = !DILocalVariable(name: "t", arg: 1, scope: !13466, file: !3196, line: 403, type: !120)
!13469 = !DILocation(line: 0, scope: !13466)
!13470 = !DILocalVariable(name: "t", arg: 1, scope: !13471, file: !3196, line: 102, type: !120)
!13471 = distinct !DISubprogram(name: "z_tmcvt", scope: !3196, file: !3196, line: 102, type: !3249, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13472)
!13472 = !{!13470, !13473, !13474, !13475, !13476, !13477, !13478, !13479, !13480, !13481, !13482}
!13473 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13471, file: !3196, line: 102, type: !118)
!13474 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13471, file: !3196, line: 103, type: !118)
!13475 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13471, file: !3196, line: 103, type: !345)
!13476 = !DILocalVariable(name: "result32", arg: 5, scope: !13471, file: !3196, line: 104, type: !345)
!13477 = !DILocalVariable(name: "round_up", arg: 6, scope: !13471, file: !3196, line: 104, type: !345)
!13478 = !DILocalVariable(name: "round_off", arg: 7, scope: !13471, file: !3196, line: 105, type: !345)
!13479 = !DILocalVariable(name: "mul_ratio", scope: !13471, file: !3196, line: 107, type: !345)
!13480 = !DILocalVariable(name: "div_ratio", scope: !13471, file: !3196, line: 109, type: !345)
!13481 = !DILocalVariable(name: "off", scope: !13471, file: !3196, line: 116, type: !120)
!13482 = !DILocalVariable(name: "rdivisor", scope: !13483, file: !3196, line: 119, type: !118)
!13483 = distinct !DILexicalBlock(scope: !13484, file: !3196, line: 118, column: 18)
!13484 = distinct !DILexicalBlock(scope: !13471, file: !3196, line: 118, column: 6)
!13485 = !DILocation(line: 0, scope: !13471, inlinedAt: !13486)
!13486 = distinct !DILocation(line: 406, column: 9, scope: !13466)
!13487 = !DILocation(line: 145, column: 13, scope: !13488, inlinedAt: !13486)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !3196, line: 144, column: 10)
!13489 = distinct !DILexicalBlock(scope: !13490, file: !3196, line: 142, column: 7)
!13490 = distinct !DILexicalBlock(scope: !13491, file: !3196, line: 141, column: 24)
!13491 = distinct !DILexicalBlock(scope: !13492, file: !3196, line: 141, column: 13)
!13492 = distinct !DILexicalBlock(scope: !13471, file: !3196, line: 134, column: 6)
!13493 = !DILocation(line: 406, column: 2, scope: !13466)
!13494 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2084, file: !2084, line: 817, type: !4376, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13495)
!13495 = !{!13496, !13497, !13498, !13499}
!13496 = !DILocalVariable(name: "entry", arg: 1, scope: !13494, file: !2084, line: 817, type: !108)
!13497 = !DILocalVariable(name: "p1", arg: 2, scope: !13494, file: !2084, line: 818, type: !113)
!13498 = !DILocalVariable(name: "p2", arg: 3, scope: !13494, file: !2084, line: 818, type: !113)
!13499 = !DILocalVariable(name: "p3", arg: 4, scope: !13494, file: !2084, line: 818, type: !113)
!13500 = !DILocation(line: 0, scope: !13494)
!13501 = !DILocation(line: 822, column: 2, scope: !13494)
!13502 = !DILocation(line: 822, column: 17, scope: !13494)
!13503 = !DILocation(line: 822, column: 30, scope: !13494)
!13504 = !DILocation(line: 823, column: 2, scope: !13494)
!13505 = !DILocation(line: 845, column: 2, scope: !13494)
!13506 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2084, file: !2084, line: 853, type: !13507, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13510)
!13507 = !DISubroutineType(types: !13508)
!13508 = !{!345, !13509}
!13509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 32)
!13510 = !{!13511, !13512}
!13511 = !DILocalVariable(name: "l", arg: 1, scope: !13506, file: !2084, line: 853, type: !13509)
!13512 = !DILocalVariable(name: "thread_cpu", scope: !13506, file: !2084, line: 855, type: !22)
!13513 = !DILocation(line: 0, scope: !13506)
!13514 = !DILocation(line: 855, column: 28, scope: !13506)
!13515 = !DILocation(line: 857, column: 17, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13506, file: !2084, line: 857, column: 6)
!13517 = !DILocation(line: 857, column: 6, scope: !13506)
!13518 = !DILocation(line: 858, column: 19, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !2084, line: 858, column: 7)
!13520 = distinct !DILexicalBlock(scope: !13516, file: !2084, line: 857, column: 24)
!13521 = !DILocation(line: 858, column: 42, scope: !13519)
!13522 = !DILocation(line: 858, column: 28, scope: !13519)
!13523 = !DILocation(line: 858, column: 25, scope: !13519)
!13524 = !DILocation(line: 858, column: 7, scope: !13520)
!13525 = !DILocation(line: 862, column: 2, scope: !13506)
!13526 = !DILocation(line: 863, column: 1, scope: !13506)
!13527 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2084, file: !2084, line: 865, type: !13507, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13528)
!13528 = !{!13529}
!13529 = !DILocalVariable(name: "l", arg: 1, scope: !13527, file: !2084, line: 865, type: !13509)
!13530 = !DILocation(line: 0, scope: !13527)
!13531 = !DILocation(line: 867, column: 9, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13527, file: !2084, line: 867, column: 6)
!13533 = !DILocation(line: 867, column: 38, scope: !13532)
!13534 = !DILocation(line: 867, column: 24, scope: !13532)
!13535 = !DILocation(line: 867, column: 54, scope: !13532)
!13536 = !DILocation(line: 867, column: 43, scope: !13532)
!13537 = !DILocation(line: 867, column: 41, scope: !13532)
!13538 = !DILocation(line: 867, column: 20, scope: !13532)
!13539 = !DILocation(line: 867, column: 6, scope: !13527)
!13540 = !DILocation(line: 870, column: 16, scope: !13527)
!13541 = !DILocation(line: 871, column: 2, scope: !13527)
!13542 = !DILocation(line: 872, column: 1, scope: !13527)
!13543 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2084, file: !2084, line: 874, type: !13544, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13546)
!13544 = !DISubroutineType(types: !13545)
!13545 = !{null, !13509}
!13546 = !{!13547}
!13547 = !DILocalVariable(name: "l", arg: 1, scope: !13543, file: !2084, line: 874, type: !13509)
!13548 = !DILocation(line: 0, scope: !13543)
!13549 = !DILocation(line: 876, column: 32, scope: !13543)
!13550 = !DILocation(line: 876, column: 18, scope: !13543)
!13551 = !DILocation(line: 876, column: 48, scope: !13543)
!13552 = !DILocation(line: 876, column: 37, scope: !13543)
!13553 = !DILocation(line: 876, column: 35, scope: !13543)
!13554 = !DILocation(line: 876, column: 5, scope: !13543)
!13555 = !DILocation(line: 876, column: 16, scope: !13543)
!13556 = !DILocation(line: 877, column: 1, scope: !13543)
!13557 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2084, file: !2084, line: 888, type: !13558, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13560)
!13558 = !DISubroutineType(types: !13559)
!13559 = !{!119, !2088}
!13560 = !{!13561}
!13561 = !DILocalVariable(name: "thread", arg: 1, scope: !13557, file: !2084, line: 888, type: !2088)
!13562 = !DILocation(line: 0, scope: !13557)
!13563 = !DILocation(line: 893, column: 2, scope: !13557)
!13564 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2084, file: !2084, line: 897, type: !13565, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13567)
!13565 = !DISubroutineType(types: !13566)
!13566 = !{!119, !2088, !32}
!13567 = !{!13568, !13569}
!13568 = !DILocalVariable(name: "thread", arg: 1, scope: !13564, file: !2084, line: 897, type: !2088)
!13569 = !DILocalVariable(name: "options", arg: 2, scope: !13564, file: !2084, line: 897, type: !32)
!13570 = !DILocation(line: 0, scope: !13564)
!13571 = !DILocation(line: 902, column: 2, scope: !13564)
!13572 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2084, file: !2084, line: 1072, type: !13573, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13578)
!13573 = !DISubroutineType(types: !13574)
!13574 = !{!119, !2087, !13575}
!13575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13576, size: 32)
!13576 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !143, line: 234, baseType: !13577)
!13577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !143, line: 192, elements: !2022)
!13578 = !{!13579, !13580}
!13579 = !DILocalVariable(name: "thread", arg: 1, scope: !13572, file: !2084, line: 1072, type: !2087)
!13580 = !DILocalVariable(name: "stats", arg: 2, scope: !13572, file: !2084, line: 1073, type: !13575)
!13581 = !DILocation(line: 0, scope: !13572)
!13582 = !DILocation(line: 1075, column: 14, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13572, file: !2084, line: 1075, column: 6)
!13584 = !DILocation(line: 1075, column: 23, scope: !13583)
!13585 = !DILocation(line: 1086, column: 1, scope: !13572)
!13586 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2084, file: !2084, line: 1088, type: !13587, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13589)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{!119, !13575}
!13589 = !{!13590}
!13590 = !DILocalVariable(name: "stats", arg: 1, scope: !13586, file: !2084, line: 1088, type: !13575)
!13591 = !DILocation(line: 0, scope: !13586)
!13592 = !DILocation(line: 1094, column: 12, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13586, file: !2084, line: 1094, column: 6)
!13594 = !DILocation(line: 1120, column: 1, scope: !13586)
!13595 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13596, file: !13596, line: 20, type: !2953, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !2022)
!13596 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13597 = !DILocation(line: 30, column: 2, scope: !13595)
!13598 = !DILocation(line: 31, column: 1, scope: !13595)
!13599 = distinct !DISubprogram(name: "idle", scope: !13596, file: !13596, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !13600)
!13600 = !{!13601, !13602, !13603}
!13601 = !DILocalVariable(name: "unused1", arg: 1, scope: !13599, file: !13596, line: 33, type: !113)
!13602 = !DILocalVariable(name: "unused2", arg: 2, scope: !13599, file: !13596, line: 33, type: !113)
!13603 = !DILocalVariable(name: "unused3", arg: 3, scope: !13599, file: !13596, line: 33, type: !113)
!13604 = !DILocation(line: 0, scope: !13599)
!13605 = !DILocation(line: 39, column: 2, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13607, file: !13596, line: 39, column: 2)
!13607 = distinct !DILexicalBlock(scope: !13599, file: !13596, line: 39, column: 2)
!13608 = !DILocation(line: 39, column: 2, scope: !13607)
!13609 = !DILocation(line: 39, column: 2, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13606, file: !13596, line: 39, column: 2)
!13611 = !DILocation(line: 55, column: 2, scope: !13612, inlinedAt: !13616)
!13612 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5994, file: !5994, line: 42, type: !5995, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !13613)
!13613 = !{!13614, !13615}
!13614 = !DILocalVariable(name: "key", scope: !13612, file: !5994, line: 44, type: !32)
!13615 = !DILocalVariable(name: "tmp", scope: !13612, file: !5994, line: 53, type: !32)
!13616 = distinct !DILocation(line: 62, column: 10, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13599, file: !13596, line: 41, column: 15)
!13618 = !{i64 2243054}
!13619 = !DILocation(line: 0, scope: !13612, inlinedAt: !13616)
!13620 = !DILocation(line: 86, column: 3, scope: !13617)
!13621 = !DILocation(line: 41, column: 2, scope: !13599)
!13622 = distinct !{!13622, !13621, !13623}
!13623 = !DILocation(line: 105, column: 2, scope: !13599)
!13624 = distinct !DISubprogram(name: "k_cpu_idle", scope: !245, file: !245, line: 5627, type: !2953, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2934, retainedNodes: !2022)
!13625 = !DILocation(line: 5629, column: 2, scope: !13624)
!13626 = !DILocation(line: 5630, column: 1, scope: !13624)
!13627 = !DISubprogram(name: "arch_cpu_idle", scope: !109, file: !109, line: 167, type: !2953, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!13628 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2322, file: !2322, line: 93, type: !13629, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13631)
!13629 = !DISubroutineType(types: !13630)
!13630 = !{!763, !2214, !2214}
!13631 = !{!13632, !13633, !13634, !13635}
!13632 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13628, file: !2322, line: 93, type: !2214)
!13633 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13628, file: !2322, line: 94, type: !2214)
!13634 = !DILocalVariable(name: "b1", scope: !13628, file: !2322, line: 97, type: !763)
!13635 = !DILocalVariable(name: "b2", scope: !13628, file: !2322, line: 98, type: !763)
!13636 = !DILocation(line: 0, scope: !13628)
!13637 = !DILocation(line: 97, column: 30, scope: !13628)
!13638 = !DILocation(line: 98, column: 30, scope: !13628)
!13639 = !DILocation(line: 100, column: 9, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13628, file: !2322, line: 100, column: 6)
!13641 = !DILocation(line: 100, column: 6, scope: !13628)
!13642 = !DILocation(line: 125, column: 1, scope: !13628)
!13643 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2322, file: !2322, line: 428, type: !13644, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13646)
!13644 = !DISubroutineType(types: !13645)
!13645 = !{null, !2214}
!13646 = !{!13647}
!13647 = !DILocalVariable(name: "curr", arg: 1, scope: !13643, file: !2322, line: 428, type: !2214)
!13648 = !DILocation(line: 0, scope: !13643)
!13649 = !DILocation(line: 434, column: 6, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13643, file: !2322, line: 434, column: 6)
!13651 = !DILocation(line: 434, column: 23, scope: !13650)
!13652 = !DILocation(line: 434, column: 6, scope: !13643)
!13653 = !DILocation(line: 435, column: 50, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13650, file: !2322, line: 434, column: 29)
!13655 = !DILocation(line: 435, column: 48, scope: !13654)
!13656 = !DILocation(line: 435, column: 29, scope: !13654)
!13657 = !DILocation(line: 436, column: 24, scope: !13654)
!13658 = !DILocation(line: 436, column: 3, scope: !13654)
!13659 = !DILocation(line: 437, column: 2, scope: !13654)
!13660 = !DILocation(line: 438, column: 1, scope: !13643)
!13661 = distinct !DISubprogram(name: "slice_time", scope: !2322, file: !2322, line: 407, type: !13662, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13664)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{!119, !2214}
!13664 = !{!13665, !13666}
!13665 = !DILocalVariable(name: "curr", arg: 1, scope: !13661, file: !2322, line: 407, type: !2214)
!13666 = !DILocalVariable(name: "ret", scope: !13661, file: !2322, line: 409, type: !119)
!13667 = !DILocation(line: 0, scope: !13661)
!13668 = !DILocation(line: 409, column: 12, scope: !13661)
!13669 = !DILocation(line: 416, column: 2, scope: !13661)
!13670 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2322, file: !2322, line: 440, type: !13671, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13673)
!13671 = !DISubroutineType(types: !13672)
!13672 = !{null, !763, !119}
!13673 = !{!13674, !13675, !13676, !13682}
!13674 = !DILocalVariable(name: "slice", arg: 1, scope: !13670, file: !2322, line: 440, type: !763)
!13675 = !DILocalVariable(name: "prio", arg: 2, scope: !13670, file: !2322, line: 440, type: !119)
!13676 = !DILocalVariable(name: "__i", scope: !13677, file: !2322, line: 442, type: !13678)
!13677 = distinct !DILexicalBlock(scope: !13670, file: !2322, line: 442, column: 2)
!13678 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !13679)
!13679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !13680)
!13680 = !{!13681}
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13679, file: !259, line: 33, baseType: !119, size: 32)
!13682 = !DILocalVariable(name: "__key", scope: !13677, file: !2322, line: 442, type: !13678)
!13683 = !DILocation(line: 0, scope: !13670)
!13684 = !DILocation(line: 0, scope: !13677)
!13685 = !DILocalVariable(name: "l", arg: 1, scope: !13686, file: !259, line: 136, type: !13689)
!13686 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !13687, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13690)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{!13678, !13689}
!13689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!13690 = !{!13685, !13691}
!13691 = !DILocalVariable(name: "k", scope: !13686, file: !259, line: 139, type: !13678)
!13692 = !DILocation(line: 0, scope: !13686, inlinedAt: !13693)
!13693 = distinct !DILocation(line: 442, column: 2, scope: !13677)
!13694 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !13699)
!13695 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5994, file: !5994, line: 42, type: !5995, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13696)
!13696 = !{!13697, !13698}
!13697 = !DILocalVariable(name: "key", scope: !13695, file: !5994, line: 44, type: !32)
!13698 = !DILocalVariable(name: "tmp", scope: !13695, file: !5994, line: 53, type: !32)
!13699 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !13693)
!13700 = !{i64 2287025}
!13701 = !DILocation(line: 0, scope: !13695, inlinedAt: !13699)
!13702 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !13693)
!13703 = distinct !DILexicalBlock(scope: !13704, file: !259, line: 148, column: 2)
!13704 = distinct !DILexicalBlock(scope: !13686, file: !259, line: 148, column: 2)
!13705 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !13693)
!13706 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !13693)
!13707 = distinct !DILexicalBlock(scope: !13703, file: !259, line: 148, column: 2)
!13708 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !13693)
!13709 = !DILocation(line: 443, column: 29, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13711, file: !2322, line: 442, column: 26)
!13711 = distinct !DILexicalBlock(scope: !13677, file: !2322, line: 442, column: 2)
!13712 = !DILocation(line: 444, column: 17, scope: !13710)
!13713 = !DILocation(line: 445, column: 51, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13710, file: !2322, line: 445, column: 7)
!13715 = !DILocation(line: 445, column: 7, scope: !13710)
!13716 = !DILocation(line: 0, scope: !13710)
!13717 = !DILocation(line: 451, column: 18, scope: !13710)
!13718 = !DILocation(line: 452, column: 3, scope: !13710)
!13719 = !DILocalVariable(name: "key", arg: 2, scope: !13720, file: !259, line: 190, type: !13678)
!13720 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !13721, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13723)
!13721 = !DISubroutineType(types: !13722)
!13722 = !{null, !13689, !13678}
!13723 = !{!13724, !13719}
!13724 = !DILocalVariable(name: "l", arg: 1, scope: !13720, file: !259, line: 189, type: !13689)
!13725 = !DILocation(line: 0, scope: !13720, inlinedAt: !13726)
!13726 = distinct !DILocation(line: 442, column: 2, scope: !13711)
!13727 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !13726)
!13728 = distinct !DILexicalBlock(scope: !13729, file: !259, line: 194, column: 2)
!13729 = distinct !DILexicalBlock(scope: !13720, file: !259, line: 194, column: 2)
!13730 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !13726)
!13731 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !13726)
!13732 = distinct !DILexicalBlock(scope: !13728, file: !259, line: 194, column: 2)
!13733 = !DILocalVariable(name: "key", arg: 1, scope: !13734, file: !5994, line: 84, type: !32)
!13734 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5994, file: !5994, line: 84, type: !6005, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13735)
!13735 = !{!13733}
!13736 = !DILocation(line: 0, scope: !13734, inlinedAt: !13737)
!13737 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !13726)
!13738 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !13737)
!13739 = !{i64 2287842}
!13740 = !DILocation(line: 454, column: 1, scope: !13670)
!13741 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3196, file: !3196, line: 389, type: !7600, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13742)
!13742 = !{!13743}
!13743 = !DILocalVariable(name: "t", arg: 1, scope: !13741, file: !3196, line: 389, type: !118)
!13744 = !DILocation(line: 0, scope: !13741)
!13745 = !DILocalVariable(name: "t", arg: 1, scope: !13746, file: !3196, line: 102, type: !120)
!13746 = distinct !DISubprogram(name: "z_tmcvt", scope: !3196, file: !3196, line: 102, type: !3249, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13747)
!13747 = !{!13745, !13748, !13749, !13750, !13751, !13752, !13753, !13754, !13755, !13756, !13757}
!13748 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13746, file: !3196, line: 102, type: !118)
!13749 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13746, file: !3196, line: 103, type: !118)
!13750 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13746, file: !3196, line: 103, type: !345)
!13751 = !DILocalVariable(name: "result32", arg: 5, scope: !13746, file: !3196, line: 104, type: !345)
!13752 = !DILocalVariable(name: "round_up", arg: 6, scope: !13746, file: !3196, line: 104, type: !345)
!13753 = !DILocalVariable(name: "round_off", arg: 7, scope: !13746, file: !3196, line: 105, type: !345)
!13754 = !DILocalVariable(name: "mul_ratio", scope: !13746, file: !3196, line: 107, type: !345)
!13755 = !DILocalVariable(name: "div_ratio", scope: !13746, file: !3196, line: 109, type: !345)
!13756 = !DILocalVariable(name: "off", scope: !13746, file: !3196, line: 116, type: !120)
!13757 = !DILocalVariable(name: "rdivisor", scope: !13758, file: !3196, line: 119, type: !118)
!13758 = distinct !DILexicalBlock(scope: !13759, file: !3196, line: 118, column: 18)
!13759 = distinct !DILexicalBlock(scope: !13746, file: !3196, line: 118, column: 6)
!13760 = !DILocation(line: 0, scope: !13746, inlinedAt: !13761)
!13761 = distinct !DILocation(line: 392, column: 9, scope: !13741)
!13762 = !DILocation(line: 143, column: 25, scope: !13763, inlinedAt: !13761)
!13763 = distinct !DILexicalBlock(scope: !13764, file: !3196, line: 142, column: 17)
!13764 = distinct !DILexicalBlock(scope: !13765, file: !3196, line: 142, column: 7)
!13765 = distinct !DILexicalBlock(scope: !13766, file: !3196, line: 141, column: 24)
!13766 = distinct !DILexicalBlock(scope: !13767, file: !3196, line: 141, column: 13)
!13767 = distinct !DILexicalBlock(scope: !13746, file: !3196, line: 134, column: 6)
!13768 = !DILocation(line: 392, column: 2, scope: !13741)
!13769 = distinct !DISubprogram(name: "z_time_slice", scope: !2322, file: !2322, line: 502, type: !8399, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13770)
!13770 = !{!13771, !13772}
!13771 = !DILocalVariable(name: "ticks", arg: 1, scope: !13769, file: !2322, line: 502, type: !119)
!13772 = !DILocalVariable(name: "key", scope: !13769, file: !2322, line: 511, type: !13678)
!13773 = !DILocation(line: 0, scope: !13769)
!13774 = !DILocation(line: 0, scope: !13686, inlinedAt: !13775)
!13775 = distinct !DILocation(line: 511, column: 25, scope: !13769)
!13776 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !13775)
!13778 = !DILocation(line: 0, scope: !13695, inlinedAt: !13777)
!13779 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !13775)
!13780 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !13775)
!13781 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !13775)
!13782 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !13775)
!13783 = !DILocation(line: 514, column: 6, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13769, file: !2322, line: 514, column: 6)
!13785 = !DILocation(line: 514, column: 25, scope: !13784)
!13786 = !DILocation(line: 514, column: 22, scope: !13784)
!13787 = !DILocation(line: 514, column: 6, scope: !13769)
!13788 = !DILocation(line: 515, column: 3, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13784, file: !2322, line: 514, column: 35)
!13790 = !DILocation(line: 0, scope: !13720, inlinedAt: !13791)
!13791 = distinct !DILocation(line: 516, column: 3, scope: !13789)
!13792 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !13791)
!13793 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !13791)
!13794 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !13791)
!13795 = !DILocation(line: 0, scope: !13734, inlinedAt: !13796)
!13796 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !13791)
!13797 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !13796)
!13798 = !DILocation(line: 517, column: 3, scope: !13789)
!13799 = !DILocation(line: 519, column: 18, scope: !13769)
!13800 = !DILocation(line: 522, column: 6, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13769, file: !2322, line: 522, column: 6)
!13802 = !DILocation(line: 522, column: 27, scope: !13801)
!13803 = !DILocation(line: 522, column: 30, scope: !13801)
!13804 = !DILocation(line: 522, column: 6, scope: !13769)
!13805 = !DILocation(line: 523, column: 30, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !2322, line: 523, column: 7)
!13807 = distinct !DILexicalBlock(scope: !13801, file: !2322, line: 522, column: 51)
!13808 = !DILocation(line: 523, column: 13, scope: !13806)
!13809 = !DILocation(line: 523, column: 7, scope: !13807)
!13810 = !DILocation(line: 530, column: 10, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13806, file: !2322, line: 523, column: 43)
!13812 = !DILocation(line: 531, column: 3, scope: !13811)
!13813 = !DILocation(line: 532, column: 30, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13806, file: !2322, line: 531, column: 10)
!13815 = !DILocation(line: 535, column: 29, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13801, file: !2322, line: 534, column: 9)
!13817 = !DILocation(line: 0, scope: !13720, inlinedAt: !13818)
!13818 = distinct !DILocation(line: 537, column: 2, scope: !13769)
!13819 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !13818)
!13820 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !13818)
!13821 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !13818)
!13822 = !DILocation(line: 0, scope: !13734, inlinedAt: !13823)
!13823 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !13818)
!13824 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !13823)
!13825 = !DILocation(line: 538, column: 1, scope: !13769)
!13826 = distinct !DISubprogram(name: "sliceable", scope: !2322, file: !2322, line: 468, type: !13827, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13829)
!13827 = !DISubroutineType(types: !13828)
!13828 = !{!345, !2214}
!13829 = !{!13830, !13831}
!13830 = !DILocalVariable(name: "thread", arg: 1, scope: !13826, file: !2322, line: 468, type: !2214)
!13831 = !DILocalVariable(name: "ret", scope: !13826, file: !2322, line: 470, type: !345)
!13832 = !DILocation(line: 0, scope: !13826)
!13833 = !DILocation(line: 470, column: 13, scope: !13826)
!13834 = !DILocation(line: 471, column: 3, scope: !13826)
!13835 = !DILocation(line: 471, column: 7, scope: !13826)
!13836 = !DILocation(line: 472, column: 3, scope: !13826)
!13837 = !DILocation(line: 472, column: 37, scope: !13826)
!13838 = !DILocation(line: 472, column: 24, scope: !13826)
!13839 = !DILocation(line: 472, column: 43, scope: !13826)
!13840 = !DILocation(line: 472, column: 7, scope: !13826)
!13841 = !DILocation(line: 473, column: 3, scope: !13826)
!13842 = !DILocation(line: 473, column: 7, scope: !13826)
!13843 = !DILocation(line: 473, column: 6, scope: !13826)
!13844 = !DILocation(line: 479, column: 2, scope: !13826)
!13845 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2322, file: !2322, line: 482, type: !13846, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13848)
!13846 = !DISubroutineType(types: !13847)
!13847 = !{!13678, !13678}
!13848 = !{!13849, !13850}
!13849 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13845, file: !2322, line: 482, type: !13678)
!13850 = !DILocalVariable(name: "curr", scope: !13845, file: !2322, line: 484, type: !2214)
!13851 = !DILocation(line: 0, scope: !13845)
!13852 = !DILocation(line: 484, column: 26, scope: !13845)
!13853 = !DILocation(line: 493, column: 7, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13845, file: !2322, line: 493, column: 6)
!13855 = !DILocation(line: 493, column: 6, scope: !13845)
!13856 = !DILocation(line: 494, column: 3, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13854, file: !2322, line: 493, column: 49)
!13858 = !DILocation(line: 495, column: 2, scope: !13857)
!13859 = !DILocation(line: 496, column: 2, scope: !13845)
!13860 = !DILocation(line: 499, column: 1, scope: !13845)
!13861 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12848, file: !12848, line: 106, type: !13827, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13862)
!13862 = !{!13863, !13864}
!13863 = !DILocalVariable(name: "thread", arg: 1, scope: !13861, file: !12848, line: 106, type: !2214)
!13864 = !DILocalVariable(name: "state", scope: !13861, file: !12848, line: 108, type: !185)
!13865 = !DILocation(line: 0, scope: !13861)
!13866 = !DILocation(line: 108, column: 31, scope: !13861)
!13867 = !DILocation(line: 110, column: 16, scope: !13861)
!13868 = !DILocation(line: 111, column: 41, scope: !13861)
!13869 = !DILocation(line: 110, column: 2, scope: !13861)
!13870 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2322, file: !2322, line: 393, type: !13644, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13871)
!13871 = !{!13872}
!13872 = !DILocalVariable(name: "thread", arg: 1, scope: !13870, file: !2322, line: 393, type: !2214)
!13873 = !DILocation(line: 0, scope: !13870)
!13874 = !DILocation(line: 395, column: 6, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13870, file: !2322, line: 395, column: 6)
!13876 = !DILocation(line: 395, column: 6, scope: !13870)
!13877 = !DILocalVariable(name: "thread", arg: 1, scope: !13878, file: !2322, line: 264, type: !2214)
!13878 = distinct !DISubprogram(name: "dequeue_thread", scope: !2322, file: !2322, line: 264, type: !13644, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13879)
!13879 = !{!13877}
!13880 = !DILocation(line: 0, scope: !13878, inlinedAt: !13881)
!13881 = distinct !DILocation(line: 396, column: 3, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13875, file: !2322, line: 395, column: 34)
!13883 = !DILocation(line: 266, column: 15, scope: !13878, inlinedAt: !13881)
!13884 = !DILocation(line: 266, column: 28, scope: !13878, inlinedAt: !13881)
!13885 = !DILocalVariable(name: "thread", arg: 1, scope: !13886, file: !2322, line: 232, type: !2214)
!13886 = distinct !DISubprogram(name: "runq_remove", scope: !2322, file: !2322, line: 232, type: !13644, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13887)
!13887 = !{!13885}
!13888 = !DILocation(line: 0, scope: !13886, inlinedAt: !13889)
!13889 = distinct !DILocation(line: 268, column: 3, scope: !13890, inlinedAt: !13881)
!13890 = distinct !DILexicalBlock(scope: !13891, file: !2322, line: 267, column: 35)
!13891 = distinct !DILexicalBlock(scope: !13878, file: !2322, line: 267, column: 6)
!13892 = !DILocation(line: 234, column: 2, scope: !13886, inlinedAt: !13889)
!13893 = !DILocation(line: 397, column: 2, scope: !13882)
!13894 = !DILocalVariable(name: "thread", arg: 1, scope: !13895, file: !2322, line: 250, type: !2214)
!13895 = distinct !DISubprogram(name: "queue_thread", scope: !2322, file: !2322, line: 250, type: !13644, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13896)
!13896 = !{!13894}
!13897 = !DILocation(line: 0, scope: !13895, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 398, column: 2, scope: !13870)
!13899 = !DILocation(line: 252, column: 15, scope: !13895, inlinedAt: !13898)
!13900 = !DILocation(line: 252, column: 28, scope: !13895, inlinedAt: !13898)
!13901 = !DILocalVariable(name: "thread", arg: 1, scope: !13902, file: !2322, line: 227, type: !2214)
!13902 = distinct !DISubprogram(name: "runq_add", scope: !2322, file: !2322, line: 227, type: !13644, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13903)
!13903 = !{!13901}
!13904 = !DILocation(line: 0, scope: !13902, inlinedAt: !13905)
!13905 = distinct !DILocation(line: 254, column: 3, scope: !13906, inlinedAt: !13898)
!13906 = distinct !DILexicalBlock(scope: !13907, file: !2322, line: 253, column: 35)
!13907 = distinct !DILexicalBlock(scope: !13895, file: !2322, line: 253, column: 6)
!13908 = !DILocalVariable(name: "pq", arg: 1, scope: !13909, file: !2322, line: 181, type: !13912)
!13909 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2322, file: !2322, line: 181, type: !13910, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13913)
!13910 = !DISubroutineType(types: !13911)
!13911 = !{null, !13912, !2214}
!13912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!13913 = !{!13908, !13914, !13915}
!13914 = !DILocalVariable(name: "thread", arg: 2, scope: !13909, file: !2322, line: 182, type: !2214)
!13915 = !DILocalVariable(name: "t", scope: !13909, file: !2322, line: 184, type: !2214)
!13916 = !DILocation(line: 0, scope: !13909, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 229, column: 2, scope: !13902, inlinedAt: !13905)
!13918 = !DILocation(line: 186, column: 2, scope: !13919, inlinedAt: !13917)
!13919 = distinct !DILexicalBlock(scope: !13920, file: !2322, line: 186, column: 2)
!13920 = distinct !DILexicalBlock(scope: !13909, file: !2322, line: 186, column: 2)
!13921 = !DILocation(line: 186, column: 2, scope: !13920, inlinedAt: !13917)
!13922 = !DILocation(line: 186, column: 2, scope: !13923, inlinedAt: !13917)
!13923 = distinct !DILexicalBlock(scope: !13919, file: !2322, line: 186, column: 2)
!13924 = !DILocation(line: 188, column: 2, scope: !13925, inlinedAt: !13917)
!13925 = distinct !DILexicalBlock(scope: !13909, file: !2322, line: 188, column: 2)
!13926 = !DILocation(line: 188, column: 2, scope: !13927, inlinedAt: !13917)
!13927 = distinct !DILexicalBlock(scope: !13925, file: !2322, line: 188, column: 2)
!13928 = !DILocation(line: 0, scope: !13925, inlinedAt: !13917)
!13929 = !DILocation(line: 189, column: 7, scope: !13930, inlinedAt: !13917)
!13930 = distinct !DILexicalBlock(scope: !13931, file: !2322, line: 189, column: 7)
!13931 = distinct !DILexicalBlock(scope: !13927, file: !2322, line: 188, column: 56)
!13932 = !DILocation(line: 189, column: 35, scope: !13930, inlinedAt: !13917)
!13933 = !DILocation(line: 189, column: 7, scope: !13931, inlinedAt: !13917)
!13934 = !DILocation(line: 191, column: 21, scope: !13935, inlinedAt: !13917)
!13935 = distinct !DILexicalBlock(scope: !13930, file: !2322, line: 189, column: 40)
!13936 = !DILocation(line: 190, column: 4, scope: !13935, inlinedAt: !13917)
!13937 = !DILocation(line: 192, column: 4, scope: !13935, inlinedAt: !13917)
!13938 = distinct !{!13938, !13924, !13939}
!13939 = !DILocation(line: 194, column: 2, scope: !13925, inlinedAt: !13917)
!13940 = !DILocation(line: 196, column: 37, scope: !13909, inlinedAt: !13917)
!13941 = !DILocation(line: 196, column: 2, scope: !13909, inlinedAt: !13917)
!13942 = !DILocation(line: 197, column: 1, scope: !13909, inlinedAt: !13917)
!13943 = !DILocation(line: 399, column: 25, scope: !13870)
!13944 = !DILocation(line: 399, column: 22, scope: !13870)
!13945 = !DILocation(line: 399, column: 2, scope: !13870)
!13946 = !DILocation(line: 400, column: 1, scope: !13870)
!13947 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12848, file: !12848, line: 136, type: !13827, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13948)
!13948 = !{!13949}
!13949 = !DILocalVariable(name: "thread", arg: 1, scope: !13947, file: !12848, line: 136, type: !2214)
!13950 = !DILocation(line: 0, scope: !13947)
!13951 = !DILocation(line: 138, column: 9, scope: !13947)
!13952 = !DILocation(line: 138, column: 2, scope: !13947)
!13953 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2322, file: !2322, line: 1137, type: !13910, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13954)
!13954 = !{!13955, !13956}
!13955 = !DILocalVariable(name: "pq", arg: 1, scope: !13953, file: !2322, line: 1137, type: !13912)
!13956 = !DILocalVariable(name: "thread", arg: 2, scope: !13953, file: !2322, line: 1137, type: !2214)
!13957 = !DILocation(line: 0, scope: !13953)
!13958 = !DILocation(line: 1139, column: 2, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13960, file: !2322, line: 1139, column: 2)
!13960 = distinct !DILexicalBlock(scope: !13953, file: !2322, line: 1139, column: 2)
!13961 = !DILocation(line: 1139, column: 2, scope: !13960)
!13962 = !DILocation(line: 1139, column: 2, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13959, file: !2322, line: 1139, column: 2)
!13964 = !DILocation(line: 1141, column: 33, scope: !13953)
!13965 = !DILocation(line: 1141, column: 2, scope: !13953)
!13966 = !DILocation(line: 1142, column: 1, scope: !13953)
!13967 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12848, file: !12848, line: 83, type: !13827, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13968)
!13968 = !{!13969}
!13969 = !DILocalVariable(name: "thread", arg: 1, scope: !13967, file: !12848, line: 83, type: !2214)
!13970 = !DILocation(line: 0, scope: !13967)
!13971 = !DILocation(line: 89, column: 16, scope: !13967)
!13972 = !DILocation(line: 89, column: 2, scope: !13967)
!13973 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !13974, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13976)
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!2318, !13912}
!13976 = !{!13977}
!13977 = !DILocalVariable(name: "list", arg: 1, scope: !13973, file: !153, line: 294, type: !13912)
!13978 = !DILocation(line: 0, scope: !13973)
!13979 = !DILocation(line: 296, column: 9, scope: !13973)
!13980 = !DILocation(line: 296, column: 49, scope: !13973)
!13981 = !DILocation(line: 296, column: 2, scope: !13973)
!13982 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !13983, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13985)
!13983 = !DISubroutineType(types: !13984)
!13984 = !{null, !2318, !2318}
!13985 = !{!13986, !13987, !13988}
!13986 = !DILocalVariable(name: "successor", arg: 1, scope: !13982, file: !153, line: 443, type: !2318)
!13987 = !DILocalVariable(name: "node", arg: 2, scope: !13982, file: !153, line: 443, type: !2318)
!13988 = !DILocalVariable(name: "prev", scope: !13982, file: !153, line: 445, type: !13989)
!13989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2318)
!13990 = !DILocation(line: 0, scope: !13982)
!13991 = !DILocation(line: 445, column: 39, scope: !13982)
!13992 = !DILocation(line: 447, column: 8, scope: !13982)
!13993 = !DILocation(line: 447, column: 13, scope: !13982)
!13994 = !DILocation(line: 448, column: 8, scope: !13982)
!13995 = !DILocation(line: 448, column: 13, scope: !13982)
!13996 = !DILocation(line: 449, column: 8, scope: !13982)
!13997 = !DILocation(line: 449, column: 13, scope: !13982)
!13998 = !DILocation(line: 450, column: 18, scope: !13982)
!13999 = !DILocation(line: 451, column: 1, scope: !13982)
!14000 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !14001, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14003)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!2318, !13912, !2318}
!14003 = !{!14004, !14005}
!14004 = !DILocalVariable(name: "list", arg: 1, scope: !14000, file: !153, line: 341, type: !13912)
!14005 = !DILocalVariable(name: "node", arg: 2, scope: !14000, file: !153, line: 342, type: !2318)
!14006 = !DILocation(line: 0, scope: !14000)
!14007 = !DILocation(line: 344, column: 15, scope: !14000)
!14008 = !DILocation(line: 344, column: 9, scope: !14000)
!14009 = !DILocation(line: 344, column: 26, scope: !14000)
!14010 = !DILocation(line: 344, column: 2, scope: !14000)
!14011 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !14012, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14014)
!14012 = !DISubroutineType(types: !14013)
!14013 = !{null, !13912, !2318}
!14014 = !{!14015, !14016, !14017}
!14015 = !DILocalVariable(name: "list", arg: 1, scope: !14011, file: !153, line: 404, type: !13912)
!14016 = !DILocalVariable(name: "node", arg: 2, scope: !14011, file: !153, line: 404, type: !2318)
!14017 = !DILocalVariable(name: "tail", scope: !14011, file: !153, line: 406, type: !13989)
!14018 = !DILocation(line: 0, scope: !14011)
!14019 = !DILocation(line: 406, column: 34, scope: !14011)
!14020 = !DILocation(line: 408, column: 8, scope: !14011)
!14021 = !DILocation(line: 408, column: 13, scope: !14011)
!14022 = !DILocation(line: 409, column: 8, scope: !14011)
!14023 = !DILocation(line: 409, column: 13, scope: !14011)
!14024 = !DILocation(line: 411, column: 8, scope: !14011)
!14025 = !DILocation(line: 411, column: 13, scope: !14011)
!14026 = !DILocation(line: 412, column: 13, scope: !14011)
!14027 = !DILocation(line: 413, column: 1, scope: !14011)
!14028 = distinct !DISubprogram(name: "update_cache", scope: !2322, file: !2322, line: 559, type: !8399, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14029)
!14029 = !{!14030, !14031}
!14030 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14028, file: !2322, line: 559, type: !119)
!14031 = !DILocalVariable(name: "thread", scope: !14028, file: !2322, line: 562, type: !2214)
!14032 = !DILocation(line: 0, scope: !14028)
!14033 = !DILocation(line: 239, column: 9, scope: !14034, inlinedAt: !14037)
!14034 = distinct !DISubprogram(name: "runq_best", scope: !2322, file: !2322, line: 237, type: !14035, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!14035 = !DISubroutineType(types: !14036)
!14036 = !{!2214}
!14037 = distinct !DILocation(line: 314, column: 28, scope: !14038, inlinedAt: !14041)
!14038 = distinct !DISubprogram(name: "next_up", scope: !2322, file: !2322, line: 312, type: !14035, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14039)
!14039 = !{!14040}
!14040 = !DILocalVariable(name: "thread", scope: !14038, file: !2322, line: 314, type: !2214)
!14041 = distinct !DILocation(line: 562, column: 28, scope: !14028)
!14042 = !DILocation(line: 0, scope: !14038, inlinedAt: !14041)
!14043 = !DILocation(line: 340, column: 17, scope: !14038, inlinedAt: !14041)
!14044 = !DILocation(line: 340, column: 9, scope: !14038, inlinedAt: !14041)
!14045 = !DILocalVariable(name: "thread", arg: 1, scope: !14046, file: !2322, line: 127, type: !2214)
!14046 = distinct !DISubprogram(name: "should_preempt", scope: !2322, file: !2322, line: 127, type: !14047, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14049)
!14047 = !DISubroutineType(types: !14048)
!14048 = !{!345, !2214, !119}
!14049 = !{!14045, !14050}
!14050 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14046, file: !2322, line: 128, type: !119)
!14051 = !DILocation(line: 0, scope: !14046, inlinedAt: !14052)
!14052 = distinct !DILocation(line: 564, column: 6, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14028, file: !2322, line: 564, column: 6)
!14054 = !DILocation(line: 133, column: 17, scope: !14055, inlinedAt: !14052)
!14055 = distinct !DILexicalBlock(scope: !14046, file: !2322, line: 133, column: 6)
!14056 = !DILocation(line: 0, scope: !14053)
!14057 = !DILocation(line: 133, column: 6, scope: !14046, inlinedAt: !14052)
!14058 = !DILocation(line: 137, column: 2, scope: !14059, inlinedAt: !14052)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !2322, line: 137, column: 2)
!14060 = distinct !DILexicalBlock(scope: !14046, file: !2322, line: 137, column: 2)
!14061 = !DILocation(line: 137, column: 2, scope: !14060, inlinedAt: !14052)
!14062 = !DILocation(line: 137, column: 2, scope: !14063, inlinedAt: !14052)
!14063 = distinct !DILexicalBlock(scope: !14059, file: !2322, line: 137, column: 2)
!14064 = !DILocation(line: 140, column: 6, scope: !14065, inlinedAt: !14052)
!14065 = distinct !DILexicalBlock(scope: !14046, file: !2322, line: 140, column: 6)
!14066 = !DILocation(line: 140, column: 6, scope: !14046, inlinedAt: !14052)
!14067 = !DILocation(line: 150, column: 9, scope: !14068, inlinedAt: !14052)
!14068 = distinct !DILexicalBlock(scope: !14046, file: !2322, line: 149, column: 6)
!14069 = !DILocation(line: 149, column: 6, scope: !14046, inlinedAt: !14052)
!14070 = !DILocation(line: 157, column: 6, scope: !14071, inlinedAt: !14052)
!14071 = distinct !DILexicalBlock(scope: !14046, file: !2322, line: 157, column: 6)
!14072 = !DILocation(line: 564, column: 6, scope: !14028)
!14073 = !DILocation(line: 566, column: 14, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14075, file: !2322, line: 566, column: 7)
!14075 = distinct !DILexicalBlock(scope: !14053, file: !2322, line: 564, column: 42)
!14076 = !DILocation(line: 566, column: 7, scope: !14075)
!14077 = !DILocation(line: 567, column: 4, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14074, file: !2322, line: 566, column: 27)
!14079 = !DILocation(line: 568, column: 3, scope: !14078)
!14080 = !DILocation(line: 585, column: 1, scope: !14028)
!14081 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2322, file: !2322, line: 1144, type: !14082, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14084)
!14082 = !DISubroutineType(types: !14083)
!14083 = !{!2214, !13912}
!14084 = !{!14085, !14086, !14087}
!14085 = !DILocalVariable(name: "pq", arg: 1, scope: !14081, file: !2322, line: 1144, type: !13912)
!14086 = !DILocalVariable(name: "thread", scope: !14081, file: !2322, line: 1146, type: !2214)
!14087 = !DILocalVariable(name: "n", scope: !14081, file: !2322, line: 1147, type: !2318)
!14088 = !DILocation(line: 0, scope: !14081)
!14089 = !DILocation(line: 1147, column: 19, scope: !14081)
!14090 = !DILocation(line: 1152, column: 2, scope: !14081)
!14091 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12848, file: !12848, line: 115, type: !13827, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14092)
!14092 = !{!14093}
!14093 = !DILocalVariable(name: "thread", arg: 1, scope: !14091, file: !12848, line: 115, type: !2214)
!14094 = !DILocation(line: 0, scope: !14091)
!14095 = !DILocation(line: 117, column: 46, scope: !14091)
!14096 = !DILocation(line: 117, column: 10, scope: !14091)
!14097 = !DILocation(line: 117, column: 9, scope: !14091)
!14098 = !DILocation(line: 117, column: 2, scope: !14091)
!14099 = distinct !DISubprogram(name: "is_preempt", scope: !2322, file: !2322, line: 62, type: !13662, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14100)
!14100 = !{!14101}
!14101 = !DILocalVariable(name: "thread", arg: 1, scope: !14099, file: !2322, line: 62, type: !2214)
!14102 = !DILocation(line: 0, scope: !14099)
!14103 = !DILocation(line: 65, column: 22, scope: !14099)
!14104 = !DILocation(line: 65, column: 30, scope: !14099)
!14105 = !DILocation(line: 65, column: 2, scope: !14099)
!14106 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13277, file: !13277, line: 35, type: !14107, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14111)
!14107 = !DISubroutineType(types: !14108)
!14108 = !{!345, !14109}
!14109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14110, size: 32)
!14110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2265)
!14111 = !{!14112}
!14112 = !DILocalVariable(name: "to", arg: 1, scope: !14106, file: !13277, line: 35, type: !14109)
!14113 = !DILocation(line: 0, scope: !14106)
!14114 = !DILocation(line: 37, column: 35, scope: !14106)
!14115 = !DILocation(line: 37, column: 10, scope: !14106)
!14116 = !DILocation(line: 37, column: 9, scope: !14106)
!14117 = !DILocation(line: 37, column: 2, scope: !14106)
!14118 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !14119, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14123)
!14119 = !DISubroutineType(types: !14120)
!14120 = !{!345, !14121}
!14121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14122, size: 32)
!14122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!14123 = !{!14124}
!14124 = !DILocalVariable(name: "node", arg: 1, scope: !14118, file: !153, line: 225, type: !14121)
!14125 = !DILocation(line: 0, scope: !14118)
!14126 = !DILocation(line: 227, column: 15, scope: !14118)
!14127 = !DILocation(line: 227, column: 20, scope: !14118)
!14128 = !DILocation(line: 227, column: 2, scope: !14118)
!14129 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !14001, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14130)
!14130 = !{!14131, !14132}
!14131 = !DILocalVariable(name: "list", arg: 1, scope: !14129, file: !153, line: 325, type: !13912)
!14132 = !DILocalVariable(name: "node", arg: 2, scope: !14129, file: !153, line: 326, type: !2318)
!14133 = !DILocation(line: 0, scope: !14129)
!14134 = !DILocation(line: 328, column: 24, scope: !14129)
!14135 = !DILocation(line: 328, column: 15, scope: !14129)
!14136 = !DILocation(line: 328, column: 9, scope: !14129)
!14137 = !DILocation(line: 328, column: 45, scope: !14129)
!14138 = !DILocation(line: 328, column: 2, scope: !14129)
!14139 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !14140, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14142)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{!345, !13912}
!14142 = !{!14143}
!14143 = !DILocalVariable(name: "list", arg: 1, scope: !14139, file: !153, line: 266, type: !13912)
!14144 = !DILocation(line: 0, scope: !14139)
!14145 = !DILocation(line: 268, column: 15, scope: !14139)
!14146 = !DILocation(line: 268, column: 20, scope: !14139)
!14147 = !DILocation(line: 268, column: 2, scope: !14139)
!14148 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !14149, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14151)
!14149 = !DISubroutineType(types: !14150)
!14150 = !{null, !2318}
!14151 = !{!14152, !14153, !14154}
!14152 = !DILocalVariable(name: "node", arg: 1, scope: !14148, file: !153, line: 496, type: !2318)
!14153 = !DILocalVariable(name: "prev", scope: !14148, file: !153, line: 498, type: !13989)
!14154 = !DILocalVariable(name: "next", scope: !14148, file: !153, line: 499, type: !13989)
!14155 = !DILocation(line: 0, scope: !14148)
!14156 = !DILocation(line: 498, column: 34, scope: !14148)
!14157 = !DILocation(line: 499, column: 34, scope: !14148)
!14158 = !DILocation(line: 501, column: 8, scope: !14148)
!14159 = !DILocation(line: 501, column: 13, scope: !14148)
!14160 = !DILocation(line: 502, column: 8, scope: !14148)
!14161 = !DILocation(line: 502, column: 13, scope: !14148)
!14162 = !DILocation(line: 503, column: 2, scope: !14148)
!14163 = !DILocation(line: 504, column: 1, scope: !14148)
!14164 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !14149, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14165)
!14165 = !{!14166}
!14166 = !DILocalVariable(name: "node", arg: 1, scope: !14164, file: !153, line: 211, type: !2318)
!14167 = !DILocation(line: 0, scope: !14164)
!14168 = !DILocation(line: 213, column: 8, scope: !14164)
!14169 = !DILocation(line: 213, column: 13, scope: !14164)
!14170 = !DILocation(line: 214, column: 8, scope: !14164)
!14171 = !DILocation(line: 214, column: 13, scope: !14164)
!14172 = !DILocation(line: 215, column: 1, scope: !14164)
!14173 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12848, file: !12848, line: 131, type: !14174, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14176)
!14174 = !DISubroutineType(types: !14175)
!14175 = !{!345, !2214, !118}
!14176 = !{!14177, !14178}
!14177 = !DILocalVariable(name: "thread", arg: 1, scope: !14173, file: !12848, line: 131, type: !2214)
!14178 = !DILocalVariable(name: "state", arg: 2, scope: !14173, file: !12848, line: 131, type: !118)
!14179 = !DILocation(line: 0, scope: !14173)
!14180 = !DILocation(line: 133, column: 23, scope: !14173)
!14181 = !DILocation(line: 133, column: 10, scope: !14173)
!14182 = !DILocation(line: 133, column: 36, scope: !14173)
!14183 = !DILocation(line: 133, column: 45, scope: !14173)
!14184 = !DILocation(line: 133, column: 2, scope: !14173)
!14185 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12848, file: !12848, line: 211, type: !14186, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14188)
!14186 = !DISubroutineType(types: !14187)
!14187 = !{!345, !119, !119}
!14188 = !{!14189, !14190}
!14189 = !DILocalVariable(name: "prio", arg: 1, scope: !14185, file: !12848, line: 211, type: !119)
!14190 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14185, file: !12848, line: 211, type: !119)
!14191 = !DILocation(line: 0, scope: !14185)
!14192 = !DILocation(line: 213, column: 9, scope: !14185)
!14193 = !DILocation(line: 213, column: 2, scope: !14185)
!14194 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12848, file: !12848, line: 206, type: !14186, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14195)
!14195 = !{!14196, !14197}
!14196 = !DILocalVariable(name: "prio1", arg: 1, scope: !14194, file: !12848, line: 206, type: !119)
!14197 = !DILocalVariable(name: "prio2", arg: 2, scope: !14194, file: !12848, line: 206, type: !119)
!14198 = !DILocation(line: 0, scope: !14194)
!14199 = !DILocation(line: 208, column: 15, scope: !14194)
!14200 = !DILocation(line: 208, column: 2, scope: !14194)
!14201 = distinct !DISubprogram(name: "z_ready_thread", scope: !2322, file: !2322, line: 635, type: !13644, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14202)
!14202 = !{!14203, !14204, !14206}
!14203 = !DILocalVariable(name: "thread", arg: 1, scope: !14201, file: !2322, line: 635, type: !2214)
!14204 = !DILocalVariable(name: "__i", scope: !14205, file: !2322, line: 637, type: !13678)
!14205 = distinct !DILexicalBlock(scope: !14201, file: !2322, line: 637, column: 2)
!14206 = !DILocalVariable(name: "__key", scope: !14205, file: !2322, line: 637, type: !13678)
!14207 = !DILocation(line: 0, scope: !14201)
!14208 = !DILocation(line: 0, scope: !14205)
!14209 = !DILocation(line: 0, scope: !13686, inlinedAt: !14210)
!14210 = distinct !DILocation(line: 637, column: 2, scope: !14205)
!14211 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14212)
!14212 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14210)
!14213 = !DILocation(line: 0, scope: !13695, inlinedAt: !14212)
!14214 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14210)
!14215 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14210)
!14216 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14210)
!14217 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14210)
!14218 = !DILocation(line: 639, column: 4, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14220, file: !2322, line: 638, column: 41)
!14220 = distinct !DILexicalBlock(scope: !14221, file: !2322, line: 638, column: 7)
!14221 = distinct !DILexicalBlock(scope: !14222, file: !2322, line: 637, column: 26)
!14222 = distinct !DILexicalBlock(scope: !14205, file: !2322, line: 637, column: 2)
!14223 = !DILocation(line: 0, scope: !13720, inlinedAt: !14224)
!14224 = distinct !DILocation(line: 637, column: 2, scope: !14222)
!14225 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14224)
!14226 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14224)
!14227 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14224)
!14228 = !DILocation(line: 0, scope: !13734, inlinedAt: !14229)
!14229 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14224)
!14230 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14229)
!14231 = !DILocation(line: 642, column: 1, scope: !14201)
!14232 = distinct !DISubprogram(name: "ready_thread", scope: !2322, file: !2322, line: 617, type: !13644, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14233)
!14233 = !{!14234}
!14234 = !DILocalVariable(name: "thread", arg: 1, scope: !14232, file: !2322, line: 617, type: !2214)
!14235 = !DILocation(line: 0, scope: !14232)
!14236 = !DILocation(line: 626, column: 7, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14232, file: !2322, line: 626, column: 6)
!14238 = !DILocation(line: 626, column: 34, scope: !14237)
!14239 = !DILocation(line: 626, column: 37, scope: !14237)
!14240 = !DILocation(line: 626, column: 6, scope: !14232)
!14241 = !DILocation(line: 0, scope: !13895, inlinedAt: !14242)
!14242 = distinct !DILocation(line: 629, column: 3, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14237, file: !2322, line: 626, column: 64)
!14244 = !DILocation(line: 252, column: 15, scope: !13895, inlinedAt: !14242)
!14245 = !DILocation(line: 252, column: 28, scope: !13895, inlinedAt: !14242)
!14246 = !DILocation(line: 0, scope: !13902, inlinedAt: !14247)
!14247 = distinct !DILocation(line: 254, column: 3, scope: !13906, inlinedAt: !14242)
!14248 = !DILocation(line: 0, scope: !13909, inlinedAt: !14249)
!14249 = distinct !DILocation(line: 229, column: 2, scope: !13902, inlinedAt: !14247)
!14250 = !DILocation(line: 186, column: 2, scope: !13919, inlinedAt: !14249)
!14251 = !DILocation(line: 186, column: 2, scope: !13920, inlinedAt: !14249)
!14252 = !DILocation(line: 186, column: 2, scope: !13923, inlinedAt: !14249)
!14253 = !DILocation(line: 188, column: 2, scope: !13925, inlinedAt: !14249)
!14254 = !DILocation(line: 188, column: 2, scope: !13927, inlinedAt: !14249)
!14255 = !DILocation(line: 0, scope: !13925, inlinedAt: !14249)
!14256 = !DILocation(line: 189, column: 7, scope: !13930, inlinedAt: !14249)
!14257 = !DILocation(line: 189, column: 35, scope: !13930, inlinedAt: !14249)
!14258 = !DILocation(line: 189, column: 7, scope: !13931, inlinedAt: !14249)
!14259 = !DILocation(line: 191, column: 21, scope: !13935, inlinedAt: !14249)
!14260 = !DILocation(line: 190, column: 4, scope: !13935, inlinedAt: !14249)
!14261 = !DILocation(line: 192, column: 4, scope: !13935, inlinedAt: !14249)
!14262 = distinct !{!14262, !14253, !14263}
!14263 = !DILocation(line: 194, column: 2, scope: !13925, inlinedAt: !14249)
!14264 = !DILocation(line: 196, column: 37, scope: !13909, inlinedAt: !14249)
!14265 = !DILocation(line: 196, column: 2, scope: !13909, inlinedAt: !14249)
!14266 = !DILocation(line: 197, column: 1, scope: !13909, inlinedAt: !14249)
!14267 = !DILocation(line: 630, column: 3, scope: !14243)
!14268 = !DILocation(line: 632, column: 2, scope: !14243)
!14269 = !DILocation(line: 633, column: 1, scope: !14232)
!14270 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12848, file: !12848, line: 120, type: !13827, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14271)
!14271 = !{!14272}
!14272 = !DILocalVariable(name: "thread", arg: 1, scope: !14270, file: !12848, line: 120, type: !2214)
!14273 = !DILocation(line: 0, scope: !14270)
!14274 = !DILocation(line: 122, column: 12, scope: !14270)
!14275 = !DILocation(line: 122, column: 62, scope: !14270)
!14276 = !DILocation(line: 123, column: 4, scope: !14270)
!14277 = !DILocation(line: 122, column: 2, scope: !14270)
!14278 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2322, file: !2322, line: 644, type: !13644, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14279)
!14279 = !{!14280, !14281, !14283}
!14280 = !DILocalVariable(name: "thread", arg: 1, scope: !14278, file: !2322, line: 644, type: !2214)
!14281 = !DILocalVariable(name: "__i", scope: !14282, file: !2322, line: 646, type: !13678)
!14282 = distinct !DILexicalBlock(scope: !14278, file: !2322, line: 646, column: 2)
!14283 = !DILocalVariable(name: "__key", scope: !14282, file: !2322, line: 646, type: !13678)
!14284 = !DILocation(line: 0, scope: !14278)
!14285 = !DILocation(line: 0, scope: !14282)
!14286 = !DILocation(line: 0, scope: !13686, inlinedAt: !14287)
!14287 = distinct !DILocation(line: 646, column: 2, scope: !14282)
!14288 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14289)
!14289 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14287)
!14290 = !DILocation(line: 0, scope: !13695, inlinedAt: !14289)
!14291 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14287)
!14292 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14287)
!14293 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14287)
!14294 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14287)
!14295 = !DILocation(line: 647, column: 3, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14297, file: !2322, line: 646, column: 26)
!14297 = distinct !DILexicalBlock(scope: !14282, file: !2322, line: 646, column: 2)
!14298 = !DILocation(line: 0, scope: !13720, inlinedAt: !14299)
!14299 = distinct !DILocation(line: 646, column: 2, scope: !14297)
!14300 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14299)
!14301 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14299)
!14302 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14299)
!14303 = !DILocation(line: 0, scope: !13734, inlinedAt: !14304)
!14304 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14299)
!14305 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14304)
!14306 = !DILocation(line: 649, column: 1, scope: !14278)
!14307 = distinct !DISubprogram(name: "z_sched_start", scope: !2322, file: !2322, line: 651, type: !13644, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14308)
!14308 = !{!14309, !14310}
!14309 = !DILocalVariable(name: "thread", arg: 1, scope: !14307, file: !2322, line: 651, type: !2214)
!14310 = !DILocalVariable(name: "key", scope: !14307, file: !2322, line: 653, type: !13678)
!14311 = !DILocation(line: 0, scope: !14307)
!14312 = !DILocation(line: 0, scope: !13686, inlinedAt: !14313)
!14313 = distinct !DILocation(line: 653, column: 25, scope: !14307)
!14314 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14315)
!14315 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14313)
!14316 = !DILocation(line: 0, scope: !13695, inlinedAt: !14315)
!14317 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14313)
!14318 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14313)
!14319 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14313)
!14320 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14313)
!14321 = !DILocation(line: 655, column: 6, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14307, file: !2322, line: 655, column: 6)
!14323 = !DILocation(line: 655, column: 6, scope: !14307)
!14324 = !DILocation(line: 0, scope: !13720, inlinedAt: !14325)
!14325 = distinct !DILocation(line: 656, column: 3, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14322, file: !2322, line: 655, column: 36)
!14327 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14325)
!14328 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14325)
!14329 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14325)
!14330 = !DILocation(line: 0, scope: !13734, inlinedAt: !14331)
!14331 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14325)
!14332 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14331)
!14333 = !DILocation(line: 657, column: 3, scope: !14326)
!14334 = !DILocation(line: 660, column: 2, scope: !14307)
!14335 = !DILocation(line: 661, column: 2, scope: !14307)
!14336 = !DILocation(line: 662, column: 2, scope: !14307)
!14337 = !DILocation(line: 663, column: 1, scope: !14307)
!14338 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12848, file: !12848, line: 126, type: !13827, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14339)
!14339 = !{!14340}
!14340 = !DILocalVariable(name: "thread", arg: 1, scope: !14338, file: !12848, line: 126, type: !2214)
!14341 = !DILocation(line: 0, scope: !14338)
!14342 = !DILocation(line: 128, column: 23, scope: !14338)
!14343 = !DILocation(line: 128, column: 36, scope: !14338)
!14344 = !DILocation(line: 128, column: 56, scope: !14338)
!14345 = !DILocation(line: 128, column: 2, scope: !14338)
!14346 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12848, file: !12848, line: 155, type: !13644, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14347)
!14347 = !{!14348}
!14348 = !DILocalVariable(name: "thread", arg: 1, scope: !14346, file: !12848, line: 155, type: !2214)
!14349 = !DILocation(line: 0, scope: !14346)
!14350 = !DILocation(line: 157, column: 15, scope: !14346)
!14351 = !DILocation(line: 157, column: 28, scope: !14346)
!14352 = !DILocation(line: 158, column: 1, scope: !14346)
!14353 = distinct !DISubprogram(name: "z_reschedule", scope: !2322, file: !2322, line: 967, type: !13721, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14354)
!14354 = !{!14355, !14356}
!14355 = !DILocalVariable(name: "lock", arg: 1, scope: !14353, file: !2322, line: 967, type: !13689)
!14356 = !DILocalVariable(name: "key", arg: 2, scope: !14353, file: !2322, line: 967, type: !13678)
!14357 = !DILocation(line: 0, scope: !14353)
!14358 = !DILocation(line: 969, column: 6, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14353, file: !2322, line: 969, column: 6)
!14360 = !DILocation(line: 969, column: 23, scope: !14359)
!14361 = !DILocation(line: 969, column: 26, scope: !14359)
!14362 = !DILocation(line: 969, column: 6, scope: !14353)
!14363 = !DILocalVariable(name: "key", arg: 2, scope: !14364, file: !12952, line: 193, type: !13678)
!14364 = distinct !DISubprogram(name: "z_swap", scope: !12952, file: !12952, line: 193, type: !14365, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14367)
!14365 = !DISubroutineType(types: !14366)
!14366 = !{!119, !13689, !13678}
!14367 = !{!14368, !14363}
!14368 = !DILocalVariable(name: "lock", arg: 1, scope: !14364, file: !12952, line: 193, type: !13689)
!14369 = !DILocation(line: 0, scope: !14364, inlinedAt: !14370)
!14370 = distinct !DILocation(line: 970, column: 3, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14359, file: !2322, line: 969, column: 39)
!14372 = !DILocalVariable(name: "l", arg: 1, scope: !14373, file: !259, line: 221, type: !13689)
!14373 = distinct !DISubprogram(name: "k_spin_release", scope: !259, file: !259, line: 221, type: !14374, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14376)
!14374 = !DISubroutineType(types: !14375)
!14375 = !{null, !13689}
!14376 = !{!14372}
!14377 = !DILocation(line: 0, scope: !14373, inlinedAt: !14378)
!14378 = distinct !DILocation(line: 195, column: 2, scope: !14364, inlinedAt: !14370)
!14379 = !DILocation(line: 225, column: 2, scope: !14380, inlinedAt: !14378)
!14380 = distinct !DILexicalBlock(scope: !14381, file: !259, line: 225, column: 2)
!14381 = distinct !DILexicalBlock(scope: !14373, file: !259, line: 225, column: 2)
!14382 = !DILocation(line: 225, column: 2, scope: !14381, inlinedAt: !14378)
!14383 = !DILocation(line: 225, column: 2, scope: !14384, inlinedAt: !14378)
!14384 = distinct !DILexicalBlock(scope: !14380, file: !259, line: 225, column: 2)
!14385 = !DILocation(line: 196, column: 9, scope: !14364, inlinedAt: !14370)
!14386 = !DILocation(line: 971, column: 2, scope: !14371)
!14387 = !DILocation(line: 0, scope: !13720, inlinedAt: !14388)
!14388 = distinct !DILocation(line: 972, column: 3, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14359, file: !2322, line: 971, column: 9)
!14390 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14388)
!14391 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14388)
!14392 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14388)
!14393 = !DILocation(line: 0, scope: !13734, inlinedAt: !14394)
!14394 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14388)
!14395 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14394)
!14396 = !DILocation(line: 975, column: 1, scope: !14353)
!14397 = distinct !DISubprogram(name: "resched", scope: !2322, file: !2322, line: 940, type: !14398, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14400)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{!345, !118}
!14400 = !{!14401}
!14401 = !DILocalVariable(name: "key", arg: 1, scope: !14397, file: !2322, line: 940, type: !118)
!14402 = !DILocation(line: 0, scope: !14397)
!14403 = !DILocalVariable(name: "key", arg: 1, scope: !14404, file: !5994, line: 112, type: !32)
!14404 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5994, file: !5994, line: 112, type: !14405, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14407)
!14405 = !DISubroutineType(types: !14406)
!14406 = !{!345, !32}
!14407 = !{!14403}
!14408 = !DILocation(line: 0, scope: !14404, inlinedAt: !14409)
!14409 = distinct !DILocation(line: 946, column: 9, scope: !14397)
!14410 = !DILocation(line: 115, column: 13, scope: !14404, inlinedAt: !14409)
!14411 = !DILocation(line: 946, column: 32, scope: !14397)
!14412 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !14416)
!14413 = distinct !DISubprogram(name: "__get_IPSR", scope: !6315, file: !6315, line: 1027, type: !3191, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14414)
!14414 = !{!14415}
!14415 = !DILocalVariable(name: "result", scope: !14413, file: !6315, line: 1029, type: !118)
!14416 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !14418)
!14417 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7365, file: !7365, line: 46, type: !7366, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!14418 = distinct !DILocation(line: 946, column: 36, scope: !14397)
!14419 = !{i64 3541896}
!14420 = !DILocation(line: 0, scope: !14413, inlinedAt: !14416)
!14421 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !14418)
!14422 = !DILocation(line: 946, column: 2, scope: !14397)
!14423 = distinct !DISubprogram(name: "need_swap", scope: !2322, file: !2322, line: 953, type: !7366, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14424)
!14424 = !{!14425}
!14425 = !DILocalVariable(name: "new_thread", scope: !14423, file: !2322, line: 959, type: !2214)
!14426 = !DILocation(line: 962, column: 31, scope: !14423)
!14427 = !DILocation(line: 0, scope: !14423)
!14428 = !DILocation(line: 963, column: 23, scope: !14423)
!14429 = !DILocation(line: 963, column: 20, scope: !14423)
!14430 = !DILocation(line: 963, column: 2, scope: !14423)
!14431 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12952, file: !12952, line: 181, type: !6325, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14432)
!14432 = !{!14433, !14434}
!14433 = !DILocalVariable(name: "key", arg: 1, scope: !14431, file: !12952, line: 181, type: !32)
!14434 = !DILocalVariable(name: "ret", scope: !14431, file: !12952, line: 183, type: !119)
!14435 = !DILocation(line: 0, scope: !14431)
!14436 = !DILocation(line: 185, column: 8, scope: !14431)
!14437 = !DILocation(line: 186, column: 2, scope: !14431)
!14438 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2322, file: !2322, line: 665, type: !13644, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14439)
!14439 = !{!14440, !14441, !14443}
!14440 = !DILocalVariable(name: "thread", arg: 1, scope: !14438, file: !2322, line: 665, type: !2214)
!14441 = !DILocalVariable(name: "__i", scope: !14442, file: !2322, line: 671, type: !13678)
!14442 = distinct !DILexicalBlock(scope: !14438, file: !2322, line: 671, column: 2)
!14443 = !DILocalVariable(name: "__key", scope: !14442, file: !2322, line: 671, type: !13678)
!14444 = !DILocation(line: 0, scope: !14438)
!14445 = !DILocation(line: 669, column: 8, scope: !14438)
!14446 = !DILocation(line: 0, scope: !14442)
!14447 = !DILocation(line: 0, scope: !13686, inlinedAt: !14448)
!14448 = distinct !DILocation(line: 671, column: 2, scope: !14442)
!14449 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14450)
!14450 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14448)
!14451 = !DILocation(line: 0, scope: !13695, inlinedAt: !14450)
!14452 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14448)
!14453 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14448)
!14454 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14448)
!14455 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14448)
!14456 = !DILocation(line: 672, column: 7, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14458, file: !2322, line: 672, column: 7)
!14458 = distinct !DILexicalBlock(scope: !14459, file: !2322, line: 671, column: 26)
!14459 = distinct !DILexicalBlock(scope: !14442, file: !2322, line: 671, column: 2)
!14460 = !DILocation(line: 672, column: 7, scope: !14458)
!14461 = !DILocation(line: 0, scope: !13878, inlinedAt: !14462)
!14462 = distinct !DILocation(line: 673, column: 4, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14457, file: !2322, line: 672, column: 35)
!14464 = !DILocation(line: 266, column: 15, scope: !13878, inlinedAt: !14462)
!14465 = !DILocation(line: 266, column: 28, scope: !13878, inlinedAt: !14462)
!14466 = !DILocation(line: 0, scope: !13886, inlinedAt: !14467)
!14467 = distinct !DILocation(line: 268, column: 3, scope: !13890, inlinedAt: !14462)
!14468 = !DILocation(line: 234, column: 2, scope: !13886, inlinedAt: !14467)
!14469 = !DILocation(line: 674, column: 3, scope: !14463)
!14470 = !DILocation(line: 675, column: 3, scope: !14458)
!14471 = !DILocation(line: 676, column: 26, scope: !14458)
!14472 = !DILocation(line: 676, column: 23, scope: !14458)
!14473 = !DILocation(line: 676, column: 3, scope: !14458)
!14474 = !DILocation(line: 0, scope: !13720, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 671, column: 2, scope: !14459)
!14476 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14475)
!14477 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14475)
!14478 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14475)
!14479 = !DILocation(line: 0, scope: !13734, inlinedAt: !14480)
!14480 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14475)
!14481 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14480)
!14482 = !DILocation(line: 679, column: 16, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14438, file: !2322, line: 679, column: 6)
!14484 = !DILocation(line: 679, column: 13, scope: !14483)
!14485 = !DILocation(line: 679, column: 6, scope: !14438)
!14486 = !DILocation(line: 680, column: 3, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14483, file: !2322, line: 679, column: 26)
!14488 = !DILocation(line: 681, column: 2, scope: !14487)
!14489 = !DILocation(line: 684, column: 1, scope: !14438)
!14490 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13277, file: !13277, line: 52, type: !13662, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14491)
!14491 = !{!14492}
!14492 = !DILocalVariable(name: "thread", arg: 1, scope: !14490, file: !13277, line: 52, type: !2214)
!14493 = !DILocation(line: 0, scope: !14490)
!14494 = !DILocation(line: 54, column: 39, scope: !14490)
!14495 = !DILocation(line: 54, column: 9, scope: !14490)
!14496 = !DILocation(line: 54, column: 2, scope: !14490)
!14497 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12848, file: !12848, line: 141, type: !13644, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14498)
!14498 = !{!14499}
!14499 = !DILocalVariable(name: "thread", arg: 1, scope: !14497, file: !12848, line: 141, type: !2214)
!14500 = !DILocation(line: 0, scope: !14497)
!14501 = !DILocation(line: 143, column: 15, scope: !14497)
!14502 = !DILocation(line: 143, column: 28, scope: !14497)
!14503 = !DILocation(line: 146, column: 1, scope: !14497)
!14504 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12848, file: !12848, line: 73, type: !2953, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!14505 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14506)
!14506 = distinct !DILocation(line: 75, column: 30, scope: !14504)
!14507 = !DILocation(line: 0, scope: !13695, inlinedAt: !14506)
!14508 = !DILocation(line: 75, column: 9, scope: !14504)
!14509 = !DILocation(line: 76, column: 1, scope: !14504)
!14510 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2322, file: !2322, line: 977, type: !6410, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14511)
!14511 = !{!14512}
!14512 = !DILocalVariable(name: "key", arg: 1, scope: !14510, file: !2322, line: 977, type: !118)
!14513 = !DILocation(line: 0, scope: !14510)
!14514 = !DILocation(line: 979, column: 6, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14510, file: !2322, line: 979, column: 6)
!14516 = !DILocation(line: 979, column: 6, scope: !14510)
!14517 = !DILocation(line: 980, column: 3, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14515, file: !2322, line: 979, column: 20)
!14519 = !DILocation(line: 981, column: 2, scope: !14518)
!14520 = !DILocation(line: 0, scope: !13734, inlinedAt: !14521)
!14521 = distinct !DILocation(line: 982, column: 3, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14515, file: !2322, line: 981, column: 9)
!14523 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14521)
!14524 = !DILocation(line: 985, column: 1, scope: !14510)
!14525 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2322, file: !2322, line: 695, type: !13644, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14526)
!14526 = !{!14527, !14528}
!14527 = !DILocalVariable(name: "thread", arg: 1, scope: !14525, file: !2322, line: 695, type: !2214)
!14528 = !DILocalVariable(name: "key", scope: !14525, file: !2322, line: 699, type: !13678)
!14529 = !DILocation(line: 0, scope: !14525)
!14530 = !DILocation(line: 0, scope: !13686, inlinedAt: !14531)
!14531 = distinct !DILocation(line: 699, column: 25, scope: !14525)
!14532 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14533)
!14533 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14531)
!14534 = !DILocation(line: 0, scope: !13695, inlinedAt: !14533)
!14535 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14531)
!14536 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14531)
!14537 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14531)
!14538 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14531)
!14539 = !DILocation(line: 702, column: 7, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14525, file: !2322, line: 702, column: 6)
!14541 = !DILocation(line: 702, column: 6, scope: !14525)
!14542 = !DILocation(line: 0, scope: !13720, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 703, column: 3, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14540, file: !2322, line: 702, column: 38)
!14545 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14543)
!14546 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14543)
!14547 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14543)
!14548 = !DILocation(line: 0, scope: !13734, inlinedAt: !14549)
!14549 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14543)
!14550 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14549)
!14551 = !DILocation(line: 704, column: 3, scope: !14544)
!14552 = !DILocation(line: 707, column: 2, scope: !14525)
!14553 = !DILocation(line: 708, column: 2, scope: !14525)
!14554 = !DILocation(line: 710, column: 2, scope: !14525)
!14555 = !DILocation(line: 713, column: 1, scope: !14525)
!14556 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12848, file: !12848, line: 96, type: !13827, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14557)
!14557 = !{!14558}
!14558 = !DILocalVariable(name: "thread", arg: 1, scope: !14556, file: !12848, line: 96, type: !2214)
!14559 = !DILocation(line: 0, scope: !14556)
!14560 = !DILocation(line: 98, column: 23, scope: !14556)
!14561 = !DILocation(line: 98, column: 36, scope: !14556)
!14562 = !DILocation(line: 98, column: 57, scope: !14556)
!14563 = !DILocation(line: 98, column: 2, scope: !14556)
!14564 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12848, file: !12848, line: 148, type: !13644, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14565)
!14565 = !{!14566}
!14566 = !DILocalVariable(name: "thread", arg: 1, scope: !14564, file: !12848, line: 148, type: !2214)
!14567 = !DILocation(line: 0, scope: !14564)
!14568 = !DILocation(line: 150, column: 15, scope: !14564)
!14569 = !DILocation(line: 150, column: 28, scope: !14564)
!14570 = !DILocation(line: 153, column: 1, scope: !14564)
!14571 = distinct !DISubprogram(name: "z_pend_thread", scope: !2322, file: !2322, line: 770, type: !14572, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14578)
!14572 = !DISubroutineType(types: !14573)
!14573 = !{null, !2214, !2245, !14574}
!14574 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !14575)
!14575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !14576)
!14576 = !{!14577}
!14577 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14575, file: !115, line: 66, baseType: !114, size: 64)
!14578 = !{!14579, !14580, !14581, !14582, !14584}
!14579 = !DILocalVariable(name: "thread", arg: 1, scope: !14571, file: !2322, line: 770, type: !2214)
!14580 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14571, file: !2322, line: 770, type: !2245)
!14581 = !DILocalVariable(name: "timeout", arg: 3, scope: !14571, file: !2322, line: 771, type: !14574)
!14582 = !DILocalVariable(name: "__i", scope: !14583, file: !2322, line: 774, type: !13678)
!14583 = distinct !DILexicalBlock(scope: !14571, file: !2322, line: 774, column: 2)
!14584 = !DILocalVariable(name: "__key", scope: !14583, file: !2322, line: 774, type: !13678)
!14585 = !DILocation(line: 0, scope: !14571)
!14586 = !DILocation(line: 773, column: 2, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14588, file: !2322, line: 773, column: 2)
!14588 = distinct !DILexicalBlock(scope: !14571, file: !2322, line: 773, column: 2)
!14589 = !DILocation(line: 773, column: 2, scope: !14588)
!14590 = !DILocation(line: 773, column: 2, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14587, file: !2322, line: 773, column: 2)
!14592 = !DILocation(line: 0, scope: !14583)
!14593 = !DILocation(line: 0, scope: !13686, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 774, column: 2, scope: !14583)
!14595 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14596)
!14596 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14594)
!14597 = !DILocation(line: 0, scope: !13695, inlinedAt: !14596)
!14598 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14594)
!14599 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14594)
!14600 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14594)
!14601 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14594)
!14602 = !DILocation(line: 775, column: 3, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14604, file: !2322, line: 774, column: 26)
!14604 = distinct !DILexicalBlock(scope: !14583, file: !2322, line: 774, column: 2)
!14605 = !DILocation(line: 0, scope: !13720, inlinedAt: !14606)
!14606 = distinct !DILocation(line: 774, column: 2, scope: !14604)
!14607 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14606)
!14608 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14606)
!14609 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14606)
!14610 = !DILocation(line: 0, scope: !13734, inlinedAt: !14611)
!14611 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14606)
!14612 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14611)
!14613 = !DILocation(line: 777, column: 1, scope: !14571)
!14614 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2322, file: !2322, line: 79, type: !13827, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14615)
!14615 = !{!14616}
!14616 = !DILocalVariable(name: "thread", arg: 1, scope: !14614, file: !2322, line: 79, type: !2214)
!14617 = !DILocation(line: 0, scope: !14614)
!14618 = !DILocation(line: 81, column: 23, scope: !14614)
!14619 = !DILocation(line: 81, column: 36, scope: !14614)
!14620 = !DILocation(line: 81, column: 53, scope: !14614)
!14621 = !DILocation(line: 81, column: 2, scope: !14614)
!14622 = distinct !DISubprogram(name: "pend_locked", scope: !2322, file: !2322, line: 760, type: !14572, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14623)
!14623 = !{!14624, !14625, !14626}
!14624 = !DILocalVariable(name: "thread", arg: 1, scope: !14622, file: !2322, line: 760, type: !2214)
!14625 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14622, file: !2322, line: 760, type: !2245)
!14626 = !DILocalVariable(name: "timeout", arg: 3, scope: !14622, file: !2322, line: 761, type: !14574)
!14627 = !DILocation(line: 0, scope: !14622)
!14628 = !DILocation(line: 766, column: 2, scope: !14622)
!14629 = !DILocation(line: 767, column: 2, scope: !14622)
!14630 = !DILocation(line: 768, column: 1, scope: !14622)
!14631 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2322, file: !2322, line: 740, type: !14632, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14634)
!14632 = !DISubroutineType(types: !14633)
!14633 = !{null, !2214, !2245}
!14634 = !{!14635, !14636}
!14635 = !DILocalVariable(name: "thread", arg: 1, scope: !14631, file: !2322, line: 740, type: !2214)
!14636 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14631, file: !2322, line: 740, type: !2245)
!14637 = !DILocation(line: 0, scope: !14631)
!14638 = !DILocation(line: 742, column: 2, scope: !14631)
!14639 = !DILocation(line: 743, column: 2, scope: !14631)
!14640 = !DILocation(line: 747, column: 13, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14631, file: !2322, line: 747, column: 6)
!14642 = !DILocation(line: 747, column: 6, scope: !14631)
!14643 = !DILocation(line: 748, column: 16, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14641, file: !2322, line: 747, column: 22)
!14645 = !DILocation(line: 748, column: 26, scope: !14644)
!14646 = !DILocation(line: 749, column: 28, scope: !14644)
!14647 = !DILocation(line: 0, scope: !13909, inlinedAt: !14648)
!14648 = distinct !DILocation(line: 749, column: 3, scope: !14644)
!14649 = !DILocation(line: 186, column: 2, scope: !13919, inlinedAt: !14648)
!14650 = !DILocation(line: 186, column: 2, scope: !13920, inlinedAt: !14648)
!14651 = !DILocation(line: 186, column: 2, scope: !13923, inlinedAt: !14648)
!14652 = !DILocation(line: 188, column: 2, scope: !13925, inlinedAt: !14648)
!14653 = !DILocation(line: 188, column: 2, scope: !13927, inlinedAt: !14648)
!14654 = !DILocation(line: 0, scope: !13925, inlinedAt: !14648)
!14655 = !DILocation(line: 189, column: 7, scope: !13930, inlinedAt: !14648)
!14656 = !DILocation(line: 189, column: 35, scope: !13930, inlinedAt: !14648)
!14657 = !DILocation(line: 189, column: 7, scope: !13931, inlinedAt: !14648)
!14658 = !DILocation(line: 191, column: 21, scope: !13935, inlinedAt: !14648)
!14659 = !DILocation(line: 190, column: 4, scope: !13935, inlinedAt: !14648)
!14660 = !DILocation(line: 192, column: 4, scope: !13935, inlinedAt: !14648)
!14661 = distinct !{!14661, !14652, !14662}
!14662 = !DILocation(line: 194, column: 2, scope: !13925, inlinedAt: !14648)
!14663 = !DILocation(line: 196, column: 37, scope: !13909, inlinedAt: !14648)
!14664 = !DILocation(line: 196, column: 2, scope: !13909, inlinedAt: !14648)
!14665 = !DILocation(line: 197, column: 1, scope: !13909, inlinedAt: !14648)
!14666 = !DILocation(line: 751, column: 1, scope: !14631)
!14667 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2322, file: !2322, line: 753, type: !14668, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14670)
!14668 = !DISubroutineType(types: !14669)
!14669 = !{null, !2214, !14574}
!14670 = !{!14671, !14672}
!14671 = !DILocalVariable(name: "thread", arg: 1, scope: !14667, file: !2322, line: 753, type: !2214)
!14672 = !DILocalVariable(name: "timeout", arg: 2, scope: !14667, file: !2322, line: 753, type: !14574)
!14673 = !DILocation(line: 0, scope: !14667)
!14674 = !DILocation(line: 755, column: 7, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14667, file: !2322, line: 755, column: 6)
!14676 = !DILocation(line: 755, column: 6, scope: !14667)
!14677 = !DILocation(line: 756, column: 3, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14675, file: !2322, line: 755, column: 41)
!14679 = !DILocation(line: 757, column: 2, scope: !14678)
!14680 = !DILocation(line: 758, column: 1, scope: !14667)
!14681 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13277, file: !13277, line: 47, type: !14668, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14682)
!14682 = !{!14683, !14684}
!14683 = !DILocalVariable(name: "thread", arg: 1, scope: !14681, file: !13277, line: 47, type: !2214)
!14684 = !DILocalVariable(name: "ticks", arg: 2, scope: !14681, file: !13277, line: 47, type: !14574)
!14685 = !DILocation(line: 0, scope: !14681)
!14686 = !DILocation(line: 49, column: 30, scope: !14681)
!14687 = !DILocation(line: 49, column: 2, scope: !14681)
!14688 = !DILocation(line: 50, column: 1, scope: !14681)
!14689 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2322, file: !2322, line: 795, type: !2271, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14690)
!14690 = !{!14691, !14692, !14693, !14695, !14696}
!14691 = !DILocalVariable(name: "timeout", arg: 1, scope: !14689, file: !2322, line: 795, type: !2273)
!14692 = !DILocalVariable(name: "thread", scope: !14689, file: !2322, line: 797, type: !2214)
!14693 = !DILocalVariable(name: "__i", scope: !14694, file: !2322, line: 800, type: !13678)
!14694 = distinct !DILexicalBlock(scope: !14689, file: !2322, line: 800, column: 2)
!14695 = !DILocalVariable(name: "__key", scope: !14694, file: !2322, line: 800, type: !13678)
!14696 = !DILocalVariable(name: "killed", scope: !14697, file: !2322, line: 801, type: !345)
!14697 = distinct !DILexicalBlock(scope: !14698, file: !2322, line: 800, column: 26)
!14698 = distinct !DILexicalBlock(scope: !14694, file: !2322, line: 800, column: 2)
!14699 = !DILocation(line: 0, scope: !14689)
!14700 = !DILocation(line: 797, column: 28, scope: !14689)
!14701 = !DILocation(line: 0, scope: !14694)
!14702 = !DILocation(line: 0, scope: !13686, inlinedAt: !14703)
!14703 = distinct !DILocation(line: 800, column: 2, scope: !14694)
!14704 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14705)
!14705 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14703)
!14706 = !DILocation(line: 0, scope: !13695, inlinedAt: !14705)
!14707 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14703)
!14708 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14703)
!14709 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14703)
!14710 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14703)
!14711 = !DILocation(line: 801, column: 27, scope: !14697)
!14712 = !DILocation(line: 801, column: 32, scope: !14697)
!14713 = !DILocation(line: 801, column: 61, scope: !14697)
!14714 = !DILocation(line: 0, scope: !14697)
!14715 = !DILocation(line: 804, column: 7, scope: !14697)
!14716 = !DILocation(line: 805, column: 21, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14718, file: !2322, line: 805, column: 8)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !2322, line: 804, column: 16)
!14719 = distinct !DILexicalBlock(scope: !14697, file: !2322, line: 804, column: 7)
!14720 = !DILocation(line: 805, column: 31, scope: !14717)
!14721 = !DILocation(line: 805, column: 8, scope: !14718)
!14722 = !DILocation(line: 806, column: 5, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14717, file: !2322, line: 805, column: 40)
!14724 = !DILocation(line: 807, column: 4, scope: !14723)
!14725 = !DILocation(line: 808, column: 4, scope: !14718)
!14726 = !DILocation(line: 809, column: 4, scope: !14718)
!14727 = !DILocation(line: 810, column: 4, scope: !14718)
!14728 = !DILocation(line: 811, column: 3, scope: !14718)
!14729 = !DILocation(line: 0, scope: !13720, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 800, column: 2, scope: !14698)
!14731 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14730)
!14732 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14730)
!14733 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14730)
!14734 = !DILocation(line: 0, scope: !13734, inlinedAt: !14735)
!14735 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14730)
!14736 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14735)
!14737 = !DILocation(line: 813, column: 1, scope: !14689)
!14738 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2322, file: !2322, line: 779, type: !13644, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14739)
!14739 = !{!14740}
!14740 = !DILocalVariable(name: "thread", arg: 1, scope: !14738, file: !2322, line: 779, type: !2214)
!14741 = !DILocation(line: 0, scope: !14738)
!14742 = !DILocation(line: 781, column: 21, scope: !14738)
!14743 = !DILocation(line: 781, column: 2, scope: !14738)
!14744 = !DILocation(line: 782, column: 2, scope: !14738)
!14745 = !DILocation(line: 783, column: 15, scope: !14738)
!14746 = !DILocation(line: 783, column: 25, scope: !14738)
!14747 = !DILocation(line: 784, column: 1, scope: !14738)
!14748 = distinct !DISubprogram(name: "pended_on_thread", scope: !2322, file: !2322, line: 724, type: !14749, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14751)
!14749 = !DISubroutineType(types: !14750)
!14750 = !{!2245, !2214}
!14751 = !{!14752}
!14752 = !DILocalVariable(name: "thread", arg: 1, scope: !14748, file: !2322, line: 724, type: !2214)
!14753 = !DILocation(line: 0, scope: !14748)
!14754 = !DILocation(line: 726, column: 2, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14756, file: !2322, line: 726, column: 2)
!14756 = distinct !DILexicalBlock(scope: !14748, file: !2322, line: 726, column: 2)
!14757 = !DILocation(line: 726, column: 2, scope: !14756)
!14758 = !DILocation(line: 726, column: 2, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14755, file: !2322, line: 726, column: 2)
!14760 = !DILocation(line: 728, column: 2, scope: !14748)
!14761 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12848, file: !12848, line: 165, type: !13644, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14762)
!14762 = !{!14763}
!14763 = !DILocalVariable(name: "thread", arg: 1, scope: !14761, file: !12848, line: 165, type: !2214)
!14764 = !DILocation(line: 0, scope: !14761)
!14765 = !DILocation(line: 167, column: 15, scope: !14761)
!14766 = !DILocation(line: 167, column: 28, scope: !14761)
!14767 = !DILocation(line: 168, column: 1, scope: !14761)
!14768 = distinct !DISubprogram(name: "unready_thread", scope: !2322, file: !2322, line: 731, type: !13644, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14769)
!14769 = !{!14770}
!14770 = !DILocalVariable(name: "thread", arg: 1, scope: !14768, file: !2322, line: 731, type: !2214)
!14771 = !DILocation(line: 0, scope: !14768)
!14772 = !DILocation(line: 733, column: 6, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14768, file: !2322, line: 733, column: 6)
!14774 = !DILocation(line: 733, column: 6, scope: !14768)
!14775 = !DILocation(line: 0, scope: !13878, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 734, column: 3, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14773, file: !2322, line: 733, column: 34)
!14778 = !DILocation(line: 266, column: 15, scope: !13878, inlinedAt: !14776)
!14779 = !DILocation(line: 266, column: 28, scope: !13878, inlinedAt: !14776)
!14780 = !DILocation(line: 0, scope: !13886, inlinedAt: !14781)
!14781 = distinct !DILocation(line: 268, column: 3, scope: !13890, inlinedAt: !14776)
!14782 = !DILocation(line: 234, column: 2, scope: !13886, inlinedAt: !14781)
!14783 = !DILocation(line: 735, column: 2, scope: !14777)
!14784 = !DILocation(line: 736, column: 25, scope: !14768)
!14785 = !DILocation(line: 736, column: 22, scope: !14768)
!14786 = !DILocation(line: 736, column: 2, scope: !14768)
!14787 = !DILocation(line: 737, column: 1, scope: !14768)
!14788 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12848, file: !12848, line: 160, type: !13644, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14789)
!14789 = !{!14790}
!14790 = !DILocalVariable(name: "thread", arg: 1, scope: !14788, file: !12848, line: 160, type: !2214)
!14791 = !DILocation(line: 0, scope: !14788)
!14792 = !DILocation(line: 162, column: 15, scope: !14788)
!14793 = !DILocation(line: 162, column: 28, scope: !14788)
!14794 = !DILocation(line: 163, column: 1, scope: !14788)
!14795 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2322, file: !2322, line: 786, type: !13644, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14796)
!14796 = !{!14797, !14798, !14800}
!14797 = !DILocalVariable(name: "thread", arg: 1, scope: !14795, file: !2322, line: 786, type: !2214)
!14798 = !DILocalVariable(name: "__i", scope: !14799, file: !2322, line: 788, type: !13678)
!14799 = distinct !DILexicalBlock(scope: !14795, file: !2322, line: 788, column: 2)
!14800 = !DILocalVariable(name: "__key", scope: !14799, file: !2322, line: 788, type: !13678)
!14801 = !DILocation(line: 0, scope: !14795)
!14802 = !DILocation(line: 0, scope: !14799)
!14803 = !DILocation(line: 0, scope: !13686, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 788, column: 2, scope: !14799)
!14805 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14806)
!14806 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14804)
!14807 = !DILocation(line: 0, scope: !13695, inlinedAt: !14806)
!14808 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14804)
!14809 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14804)
!14810 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14804)
!14811 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14804)
!14812 = !DILocation(line: 789, column: 3, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !2322, line: 788, column: 26)
!14814 = distinct !DILexicalBlock(scope: !14799, file: !2322, line: 788, column: 2)
!14815 = !DILocation(line: 0, scope: !13720, inlinedAt: !14816)
!14816 = distinct !DILocation(line: 788, column: 2, scope: !14814)
!14817 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14816)
!14818 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14816)
!14819 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14816)
!14820 = !DILocation(line: 0, scope: !13734, inlinedAt: !14821)
!14821 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14816)
!14822 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14821)
!14823 = !DILocation(line: 791, column: 1, scope: !14795)
!14824 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2322, file: !2322, line: 816, type: !14825, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14827)
!14825 = !DISubroutineType(types: !14826)
!14826 = !{!119, !118, !2245, !14574}
!14827 = !{!14828, !14829, !14830, !14831, !14832, !14834}
!14828 = !DILocalVariable(name: "key", arg: 1, scope: !14824, file: !2322, line: 816, type: !118)
!14829 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14824, file: !2322, line: 816, type: !2245)
!14830 = !DILocalVariable(name: "timeout", arg: 3, scope: !14824, file: !2322, line: 816, type: !14574)
!14831 = !DILocalVariable(name: "ret", scope: !14824, file: !2322, line: 828, type: !119)
!14832 = !DILocalVariable(name: "__i", scope: !14833, file: !2322, line: 829, type: !13678)
!14833 = distinct !DILexicalBlock(scope: !14824, file: !2322, line: 829, column: 2)
!14834 = !DILocalVariable(name: "__key", scope: !14833, file: !2322, line: 829, type: !13678)
!14835 = !DILocation(line: 0, scope: !14824)
!14836 = !DILocation(line: 823, column: 14, scope: !14824)
!14837 = !DILocation(line: 823, column: 2, scope: !14824)
!14838 = !DILocation(line: 826, column: 20, scope: !14824)
!14839 = !DILocation(line: 826, column: 18, scope: !14824)
!14840 = !DILocation(line: 828, column: 12, scope: !14824)
!14841 = !DILocation(line: 0, scope: !14833)
!14842 = !DILocation(line: 0, scope: !13686, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 829, column: 2, scope: !14833)
!14844 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14845)
!14845 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14843)
!14846 = !DILocation(line: 0, scope: !13695, inlinedAt: !14845)
!14847 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14843)
!14848 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14843)
!14849 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14843)
!14850 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14843)
!14851 = !DILocation(line: 830, column: 7, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14853, file: !2322, line: 830, column: 7)
!14853 = distinct !DILexicalBlock(scope: !14854, file: !2322, line: 829, column: 26)
!14854 = distinct !DILexicalBlock(scope: !14833, file: !2322, line: 829, column: 2)
!14855 = !DILocation(line: 830, column: 26, scope: !14852)
!14856 = !DILocation(line: 830, column: 23, scope: !14852)
!14857 = !DILocation(line: 830, column: 7, scope: !14853)
!14858 = !DILocation(line: 831, column: 20, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14852, file: !2322, line: 830, column: 36)
!14860 = !DILocation(line: 832, column: 3, scope: !14859)
!14861 = !DILocation(line: 0, scope: !13720, inlinedAt: !14862)
!14862 = distinct !DILocation(line: 829, column: 2, scope: !14854)
!14863 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14862)
!14864 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14862)
!14865 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14862)
!14866 = !DILocation(line: 0, scope: !13734, inlinedAt: !14867)
!14867 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14862)
!14868 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14867)
!14869 = !DILocation(line: 834, column: 2, scope: !14824)
!14870 = distinct !DISubprogram(name: "z_pend_curr", scope: !2322, file: !2322, line: 840, type: !14871, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14873)
!14871 = !DISubroutineType(types: !14872)
!14872 = !{!119, !13689, !13678, !2245, !14574}
!14873 = !{!14874, !14875, !14876, !14877}
!14874 = !DILocalVariable(name: "lock", arg: 1, scope: !14870, file: !2322, line: 840, type: !13689)
!14875 = !DILocalVariable(name: "key", arg: 2, scope: !14870, file: !2322, line: 840, type: !13678)
!14876 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14870, file: !2322, line: 841, type: !2245)
!14877 = !DILocalVariable(name: "timeout", arg: 4, scope: !14870, file: !2322, line: 841, type: !14574)
!14878 = !DILocation(line: 0, scope: !14870)
!14879 = !DILocation(line: 844, column: 20, scope: !14870)
!14880 = !DILocation(line: 844, column: 18, scope: !14870)
!14881 = !DILocation(line: 846, column: 2, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14883, file: !2322, line: 846, column: 2)
!14883 = distinct !DILexicalBlock(scope: !14870, file: !2322, line: 846, column: 2)
!14884 = !DILocation(line: 846, column: 2, scope: !14883)
!14885 = !DILocation(line: 846, column: 2, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14882, file: !2322, line: 846, column: 2)
!14887 = !DILocation(line: 0, scope: !13686, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 856, column: 9, scope: !14870)
!14889 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14888)
!14891 = !DILocation(line: 0, scope: !13695, inlinedAt: !14890)
!14892 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14888)
!14893 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14888)
!14894 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14888)
!14895 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14888)
!14896 = !DILocation(line: 857, column: 14, scope: !14870)
!14897 = !DILocation(line: 857, column: 2, scope: !14870)
!14898 = !DILocation(line: 0, scope: !14373, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 858, column: 2, scope: !14870)
!14900 = !DILocation(line: 225, column: 2, scope: !14380, inlinedAt: !14899)
!14901 = !DILocation(line: 225, column: 2, scope: !14381, inlinedAt: !14899)
!14902 = !DILocation(line: 225, column: 2, scope: !14384, inlinedAt: !14899)
!14903 = !DILocation(line: 0, scope: !14364, inlinedAt: !14904)
!14904 = distinct !DILocation(line: 859, column: 9, scope: !14870)
!14905 = !DILocation(line: 0, scope: !14373, inlinedAt: !14906)
!14906 = distinct !DILocation(line: 195, column: 2, scope: !14364, inlinedAt: !14904)
!14907 = !DILocation(line: 225, column: 2, scope: !14380, inlinedAt: !14906)
!14908 = !DILocation(line: 225, column: 2, scope: !14381, inlinedAt: !14906)
!14909 = !DILocation(line: 225, column: 2, scope: !14384, inlinedAt: !14906)
!14910 = !DILocation(line: 196, column: 9, scope: !14364, inlinedAt: !14904)
!14911 = !DILocation(line: 859, column: 2, scope: !14870)
!14912 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2322, file: !2322, line: 862, type: !14913, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14915)
!14913 = !DISubroutineType(types: !14914)
!14914 = !{!2214, !2245}
!14915 = !{!14916, !14917, !14918, !14920}
!14916 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14912, file: !2322, line: 862, type: !2245)
!14917 = !DILocalVariable(name: "thread", scope: !14912, file: !2322, line: 864, type: !2214)
!14918 = !DILocalVariable(name: "__i", scope: !14919, file: !2322, line: 866, type: !13678)
!14919 = distinct !DILexicalBlock(scope: !14912, file: !2322, line: 866, column: 2)
!14920 = !DILocalVariable(name: "__key", scope: !14919, file: !2322, line: 866, type: !13678)
!14921 = !DILocation(line: 0, scope: !14912)
!14922 = !DILocation(line: 0, scope: !14919)
!14923 = !DILocation(line: 0, scope: !13686, inlinedAt: !14924)
!14924 = distinct !DILocation(line: 866, column: 2, scope: !14919)
!14925 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14924)
!14927 = !DILocation(line: 0, scope: !13695, inlinedAt: !14926)
!14928 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14924)
!14929 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14924)
!14930 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14924)
!14931 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14924)
!14932 = !DILocation(line: 867, column: 12, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14934, file: !2322, line: 866, column: 26)
!14934 = distinct !DILexicalBlock(scope: !14919, file: !2322, line: 866, column: 2)
!14935 = !DILocation(line: 869, column: 14, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14933, file: !2322, line: 869, column: 7)
!14937 = !DILocation(line: 869, column: 7, scope: !14933)
!14938 = !DILocation(line: 870, column: 4, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14936, file: !2322, line: 869, column: 23)
!14940 = !DILocation(line: 871, column: 3, scope: !14939)
!14941 = !DILocation(line: 0, scope: !13720, inlinedAt: !14942)
!14942 = distinct !DILocation(line: 866, column: 2, scope: !14934)
!14943 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14942)
!14944 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14942)
!14945 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14942)
!14946 = !DILocation(line: 0, scope: !13734, inlinedAt: !14947)
!14947 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14942)
!14948 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14947)
!14949 = !DILocation(line: 874, column: 2, scope: !14912)
!14950 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2322, file: !2322, line: 877, type: !14913, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14951)
!14951 = !{!14952, !14953, !14954, !14956}
!14952 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14950, file: !2322, line: 877, type: !2245)
!14953 = !DILocalVariable(name: "thread", scope: !14950, file: !2322, line: 879, type: !2214)
!14954 = !DILocalVariable(name: "__i", scope: !14955, file: !2322, line: 881, type: !13678)
!14955 = distinct !DILexicalBlock(scope: !14950, file: !2322, line: 881, column: 2)
!14956 = !DILocalVariable(name: "__key", scope: !14955, file: !2322, line: 881, type: !13678)
!14957 = !DILocation(line: 0, scope: !14950)
!14958 = !DILocation(line: 0, scope: !14955)
!14959 = !DILocation(line: 0, scope: !13686, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 881, column: 2, scope: !14955)
!14961 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14962)
!14962 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14960)
!14963 = !DILocation(line: 0, scope: !13695, inlinedAt: !14962)
!14964 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14960)
!14965 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14960)
!14966 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14960)
!14967 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14960)
!14968 = !DILocation(line: 882, column: 12, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14970, file: !2322, line: 881, column: 26)
!14970 = distinct !DILexicalBlock(scope: !14955, file: !2322, line: 881, column: 2)
!14971 = !DILocation(line: 884, column: 14, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14969, file: !2322, line: 884, column: 7)
!14973 = !DILocation(line: 884, column: 7, scope: !14969)
!14974 = !DILocation(line: 885, column: 4, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14972, file: !2322, line: 884, column: 23)
!14976 = !DILocation(line: 886, column: 10, scope: !14975)
!14977 = !DILocation(line: 887, column: 3, scope: !14975)
!14978 = !DILocation(line: 0, scope: !13720, inlinedAt: !14979)
!14979 = distinct !DILocation(line: 881, column: 2, scope: !14970)
!14980 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !14979)
!14981 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !14979)
!14982 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !14979)
!14983 = !DILocation(line: 0, scope: !13734, inlinedAt: !14984)
!14984 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !14979)
!14985 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !14984)
!14986 = !DILocation(line: 890, column: 2, scope: !14950)
!14987 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2322, file: !2322, line: 893, type: !13644, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !14988)
!14988 = !{!14989}
!14989 = !DILocalVariable(name: "thread", arg: 1, scope: !14987, file: !2322, line: 893, type: !2214)
!14990 = !DILocation(line: 0, scope: !14987)
!14991 = !DILocation(line: 0, scope: !14795, inlinedAt: !14992)
!14992 = distinct !DILocation(line: 895, column: 2, scope: !14987)
!14993 = !DILocation(line: 0, scope: !14799, inlinedAt: !14992)
!14994 = !DILocation(line: 0, scope: !13686, inlinedAt: !14995)
!14995 = distinct !DILocation(line: 788, column: 2, scope: !14799, inlinedAt: !14992)
!14996 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !14997)
!14997 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !14995)
!14998 = !DILocation(line: 0, scope: !13695, inlinedAt: !14997)
!14999 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !14995)
!15000 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !14995)
!15001 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !14995)
!15002 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !14995)
!15003 = !DILocation(line: 789, column: 3, scope: !14813, inlinedAt: !14992)
!15004 = !DILocation(line: 0, scope: !13720, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 788, column: 2, scope: !14814, inlinedAt: !14992)
!15006 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !15005)
!15007 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !15005)
!15008 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !15005)
!15009 = !DILocation(line: 0, scope: !13734, inlinedAt: !15010)
!15010 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !15005)
!15011 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !15010)
!15012 = !DILocation(line: 896, column: 8, scope: !14987)
!15013 = !DILocation(line: 897, column: 1, scope: !14987)
!15014 = distinct !DISubprogram(name: "z_set_prio", scope: !2322, file: !2322, line: 902, type: !14047, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15015)
!15015 = !{!15016, !15017, !15018, !15019, !15021}
!15016 = !DILocalVariable(name: "thread", arg: 1, scope: !15014, file: !2322, line: 902, type: !2214)
!15017 = !DILocalVariable(name: "prio", arg: 2, scope: !15014, file: !2322, line: 902, type: !119)
!15018 = !DILocalVariable(name: "need_sched", scope: !15014, file: !2322, line: 904, type: !345)
!15019 = !DILocalVariable(name: "__i", scope: !15020, file: !2322, line: 906, type: !13678)
!15020 = distinct !DILexicalBlock(scope: !15014, file: !2322, line: 906, column: 2)
!15021 = !DILocalVariable(name: "__key", scope: !15020, file: !2322, line: 906, type: !13678)
!15022 = !DILocation(line: 0, scope: !15014)
!15023 = !DILocation(line: 0, scope: !15020)
!15024 = !DILocation(line: 0, scope: !13686, inlinedAt: !15025)
!15025 = distinct !DILocation(line: 906, column: 2, scope: !15020)
!15026 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !15025)
!15028 = !DILocation(line: 0, scope: !13695, inlinedAt: !15027)
!15029 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !15025)
!15030 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !15025)
!15031 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !15025)
!15032 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !15025)
!15033 = !DILocation(line: 907, column: 16, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !15035, file: !2322, line: 906, column: 26)
!15035 = distinct !DILexicalBlock(scope: !15020, file: !2322, line: 906, column: 2)
!15036 = !DILocation(line: 909, column: 7, scope: !15034)
!15037 = !DILocation(line: 0, scope: !13878, inlinedAt: !15038)
!15038 = distinct !DILocation(line: 912, column: 5, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15040, file: !2322, line: 911, column: 63)
!15040 = distinct !DILexicalBlock(scope: !15041, file: !2322, line: 911, column: 8)
!15041 = distinct !DILexicalBlock(scope: !15042, file: !2322, line: 909, column: 19)
!15042 = distinct !DILexicalBlock(scope: !15034, file: !2322, line: 909, column: 7)
!15043 = !DILocation(line: 266, column: 28, scope: !13878, inlinedAt: !15038)
!15044 = !DILocation(line: 0, scope: !13886, inlinedAt: !15045)
!15045 = distinct !DILocation(line: 268, column: 3, scope: !13890, inlinedAt: !15038)
!15046 = !DILocation(line: 234, column: 2, scope: !13886, inlinedAt: !15045)
!15047 = !DILocation(line: 913, column: 23, scope: !15039)
!15048 = !DILocation(line: 0, scope: !13895, inlinedAt: !15049)
!15049 = distinct !DILocation(line: 914, column: 5, scope: !15039)
!15050 = !DILocation(line: 252, column: 28, scope: !13895, inlinedAt: !15049)
!15051 = !DILocation(line: 0, scope: !13902, inlinedAt: !15052)
!15052 = distinct !DILocation(line: 254, column: 3, scope: !13906, inlinedAt: !15049)
!15053 = !DILocation(line: 0, scope: !13909, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 229, column: 2, scope: !13902, inlinedAt: !15052)
!15055 = !DILocation(line: 186, column: 2, scope: !13919, inlinedAt: !15054)
!15056 = !DILocation(line: 186, column: 2, scope: !13920, inlinedAt: !15054)
!15057 = !DILocation(line: 186, column: 2, scope: !13923, inlinedAt: !15054)
!15058 = !DILocation(line: 188, column: 2, scope: !13925, inlinedAt: !15054)
!15059 = !DILocation(line: 188, column: 2, scope: !13927, inlinedAt: !15054)
!15060 = !DILocation(line: 0, scope: !13925, inlinedAt: !15054)
!15061 = !DILocation(line: 189, column: 7, scope: !13930, inlinedAt: !15054)
!15062 = !DILocation(line: 189, column: 35, scope: !13930, inlinedAt: !15054)
!15063 = !DILocation(line: 189, column: 7, scope: !13931, inlinedAt: !15054)
!15064 = !DILocation(line: 190, column: 4, scope: !13935, inlinedAt: !15054)
!15065 = !DILocation(line: 192, column: 4, scope: !13935, inlinedAt: !15054)
!15066 = distinct !{!15066, !15058, !15067}
!15067 = !DILocation(line: 194, column: 2, scope: !13925, inlinedAt: !15054)
!15068 = !DILocation(line: 196, column: 2, scope: !13909, inlinedAt: !15054)
!15069 = !DILocation(line: 197, column: 1, scope: !13909, inlinedAt: !15054)
!15070 = !DILocation(line: 918, column: 4, scope: !15041)
!15071 = !DILocation(line: 919, column: 3, scope: !15041)
!15072 = !DILocation(line: 920, column: 22, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15042, file: !2322, line: 919, column: 10)
!15074 = !DILocation(line: 0, scope: !13720, inlinedAt: !15075)
!15075 = distinct !DILocation(line: 906, column: 2, scope: !15035)
!15076 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !15075)
!15077 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !15075)
!15078 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !15075)
!15079 = !DILocation(line: 0, scope: !13734, inlinedAt: !15080)
!15080 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !15075)
!15081 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !15080)
!15082 = !DILocation(line: 926, column: 2, scope: !15014)
!15083 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2322, file: !2322, line: 929, type: !15084, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15086)
!15084 = !DISubroutineType(types: !15085)
!15085 = !{null, !2214, !119}
!15086 = !{!15087, !15088, !15089}
!15087 = !DILocalVariable(name: "thread", arg: 1, scope: !15083, file: !2322, line: 929, type: !2214)
!15088 = !DILocalVariable(name: "prio", arg: 2, scope: !15083, file: !2322, line: 929, type: !119)
!15089 = !DILocalVariable(name: "need_sched", scope: !15083, file: !2322, line: 931, type: !345)
!15090 = !DILocation(line: 0, scope: !15083)
!15091 = !DILocation(line: 931, column: 20, scope: !15083)
!15092 = !DILocation(line: 935, column: 17, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15083, file: !2322, line: 935, column: 6)
!15094 = !DILocation(line: 935, column: 20, scope: !15093)
!15095 = !DILocation(line: 935, column: 35, scope: !15093)
!15096 = !DILocation(line: 935, column: 48, scope: !15093)
!15097 = !DILocation(line: 935, column: 6, scope: !15083)
!15098 = !DILocation(line: 936, column: 3, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !15093, file: !2322, line: 935, column: 55)
!15100 = !DILocation(line: 937, column: 2, scope: !15099)
!15101 = !DILocation(line: 938, column: 1, scope: !15083)
!15102 = distinct !DISubprogram(name: "k_sched_lock", scope: !2322, file: !2322, line: 987, type: !2953, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15103)
!15103 = !{!15104, !15106}
!15104 = !DILocalVariable(name: "__i", scope: !15105, file: !2322, line: 989, type: !13678)
!15105 = distinct !DILexicalBlock(scope: !15102, file: !2322, line: 989, column: 2)
!15106 = !DILocalVariable(name: "__key", scope: !15105, file: !2322, line: 989, type: !13678)
!15107 = !DILocation(line: 0, scope: !15105)
!15108 = !DILocation(line: 0, scope: !13686, inlinedAt: !15109)
!15109 = distinct !DILocation(line: 989, column: 2, scope: !15105)
!15110 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !15111)
!15111 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !15109)
!15112 = !DILocation(line: 0, scope: !13695, inlinedAt: !15111)
!15113 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !15109)
!15114 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !15109)
!15115 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !15109)
!15116 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !15109)
!15117 = !DILocation(line: 992, column: 3, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15119, file: !2322, line: 989, column: 26)
!15119 = distinct !DILexicalBlock(scope: !15105, file: !2322, line: 989, column: 2)
!15120 = !DILocation(line: 0, scope: !13720, inlinedAt: !15121)
!15121 = distinct !DILocation(line: 989, column: 2, scope: !15119)
!15122 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !15121)
!15123 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !15121)
!15124 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !15121)
!15125 = !DILocation(line: 0, scope: !13734, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !15121)
!15127 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !15126)
!15128 = !DILocation(line: 994, column: 1, scope: !15102)
!15129 = distinct !DISubprogram(name: "z_sched_lock", scope: !12848, file: !12848, line: 251, type: !2953, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!15130 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15131)
!15131 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15132)
!15132 = distinct !DILocation(line: 253, column: 2, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15134, file: !12848, line: 253, column: 2)
!15134 = distinct !DILexicalBlock(scope: !15129, file: !12848, line: 253, column: 2)
!15135 = !DILocation(line: 0, scope: !14413, inlinedAt: !15131)
!15136 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15132)
!15137 = !DILocation(line: 253, column: 2, scope: !15134)
!15138 = !DILocation(line: 253, column: 2, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15133, file: !12848, line: 253, column: 2)
!15140 = !DILocation(line: 254, column: 2, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15142, file: !12848, line: 254, column: 2)
!15142 = distinct !DILexicalBlock(scope: !15129, file: !12848, line: 254, column: 2)
!15143 = !DILocation(line: 254, column: 2, scope: !15142)
!15144 = !DILocation(line: 254, column: 2, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15141, file: !12848, line: 254, column: 2)
!15146 = !DILocation(line: 256, column: 2, scope: !15129)
!15147 = !DILocation(line: 258, column: 2, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15129, file: !12848, line: 258, column: 2)
!15149 = !{i64 2154876715}
!15150 = !DILocation(line: 259, column: 1, scope: !15129)
!15151 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2322, file: !2322, line: 996, type: !2953, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15152)
!15152 = !{!15153, !15155}
!15153 = !DILocalVariable(name: "__i", scope: !15154, file: !2322, line: 998, type: !13678)
!15154 = distinct !DILexicalBlock(scope: !15151, file: !2322, line: 998, column: 2)
!15155 = !DILocalVariable(name: "__key", scope: !15154, file: !2322, line: 998, type: !13678)
!15156 = !DILocation(line: 0, scope: !15154)
!15157 = !DILocation(line: 0, scope: !13686, inlinedAt: !15158)
!15158 = distinct !DILocation(line: 998, column: 2, scope: !15154)
!15159 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !15160)
!15160 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !15158)
!15161 = !DILocation(line: 0, scope: !13695, inlinedAt: !15160)
!15162 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !15158)
!15163 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !15158)
!15164 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !15158)
!15165 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !15158)
!15166 = !DILocation(line: 999, column: 3, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15168, file: !2322, line: 999, column: 3)
!15168 = distinct !DILexicalBlock(scope: !15169, file: !2322, line: 999, column: 3)
!15169 = distinct !DILexicalBlock(scope: !15170, file: !2322, line: 998, column: 26)
!15170 = distinct !DILexicalBlock(scope: !15154, file: !2322, line: 998, column: 2)
!15171 = !DILocation(line: 999, column: 3, scope: !15168)
!15172 = !DILocation(line: 999, column: 3, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15167, file: !2322, line: 999, column: 3)
!15174 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15175)
!15175 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 1000, column: 3, scope: !15177)
!15177 = distinct !DILexicalBlock(scope: !15178, file: !2322, line: 1000, column: 3)
!15178 = distinct !DILexicalBlock(scope: !15169, file: !2322, line: 1000, column: 3)
!15179 = !DILocation(line: 0, scope: !14413, inlinedAt: !15175)
!15180 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15176)
!15181 = !DILocation(line: 1000, column: 3, scope: !15178)
!15182 = !DILocation(line: 1000, column: 3, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15177, file: !2322, line: 1000, column: 3)
!15184 = !DILocation(line: 1002, column: 5, scope: !15169)
!15185 = !DILocation(line: 1002, column: 20, scope: !15169)
!15186 = !DILocation(line: 1002, column: 3, scope: !15169)
!15187 = !DILocation(line: 1003, column: 3, scope: !15169)
!15188 = !DILocation(line: 0, scope: !13720, inlinedAt: !15189)
!15189 = distinct !DILocation(line: 998, column: 2, scope: !15170)
!15190 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !15189)
!15191 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !15189)
!15192 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !15189)
!15193 = !DILocation(line: 0, scope: !13734, inlinedAt: !15194)
!15194 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !15189)
!15195 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !15194)
!15196 = !DILocation(line: 1011, column: 2, scope: !15151)
!15197 = !DILocation(line: 1012, column: 1, scope: !15151)
!15198 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2322, file: !2322, line: 1014, type: !14035, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!15199 = !DILocation(line: 1028, column: 25, scope: !15198)
!15200 = !DILocation(line: 1028, column: 2, scope: !15198)
!15201 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2322, file: !2322, line: 1155, type: !15202, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15204)
!15202 = !DISubroutineType(types: !15203)
!15203 = !{!345, !2243, !2243}
!15204 = !{!15205, !15206, !15207, !15208, !15209}
!15205 = !DILocalVariable(name: "a", arg: 1, scope: !15201, file: !2322, line: 1155, type: !2243)
!15206 = !DILocalVariable(name: "b", arg: 2, scope: !15201, file: !2322, line: 1155, type: !2243)
!15207 = !DILocalVariable(name: "thread_a", scope: !15201, file: !2322, line: 1157, type: !2214)
!15208 = !DILocalVariable(name: "thread_b", scope: !15201, file: !2322, line: 1157, type: !2214)
!15209 = !DILocalVariable(name: "cmp", scope: !15201, file: !2322, line: 1158, type: !763)
!15210 = !DILocation(line: 0, scope: !15201)
!15211 = !DILocation(line: 1160, column: 13, scope: !15201)
!15212 = !DILocation(line: 1161, column: 13, scope: !15201)
!15213 = !DILocation(line: 1163, column: 8, scope: !15201)
!15214 = !DILocation(line: 1165, column: 10, scope: !15215)
!15215 = distinct !DILexicalBlock(scope: !15201, file: !2322, line: 1165, column: 6)
!15216 = !DILocation(line: 1165, column: 6, scope: !15201)
!15217 = !DILocation(line: 1167, column: 17, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15215, file: !2322, line: 1167, column: 13)
!15219 = !DILocation(line: 1167, column: 13, scope: !15215)
!15220 = !DILocation(line: 1170, column: 25, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15218, file: !2322, line: 1169, column: 9)
!15222 = !DILocation(line: 1170, column: 52, scope: !15221)
!15223 = !DILocation(line: 1170, column: 35, scope: !15221)
!15224 = !DILocation(line: 1170, column: 3, scope: !15221)
!15225 = !DILocation(line: 0, scope: !15215)
!15226 = !DILocation(line: 1173, column: 1, scope: !15201)
!15227 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2322, file: !2322, line: 1175, type: !15228, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15243)
!15228 = !DISubroutineType(types: !15229)
!15229 = !{null, !15230, !2214}
!15230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15231, size: 32)
!15231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15232, line: 37, size: 128, elements: !15233)
!15232 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15233 = !{!15234, !15242}
!15234 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15231, file: !15232, line: 38, baseType: !15235, size: 96)
!15235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !169, line: 83, size: 96, elements: !15236)
!15236 = !{!15237, !15238, !15241}
!15237 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15235, file: !169, line: 84, baseType: !2243, size: 32)
!15238 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15235, file: !169, line: 85, baseType: !15239, size: 32, offset: 32)
!15239 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !169, line: 81, baseType: !15240)
!15240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15202, size: 32)
!15241 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15235, file: !169, line: 86, baseType: !119, size: 32, offset: 64)
!15242 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15231, file: !15232, line: 39, baseType: !119, size: 32, offset: 96)
!15243 = !{!15244, !15245, !15246, !15247, !15256}
!15244 = !DILocalVariable(name: "pq", arg: 1, scope: !15227, file: !2322, line: 1175, type: !15230)
!15245 = !DILocalVariable(name: "thread", arg: 2, scope: !15227, file: !2322, line: 1175, type: !2214)
!15246 = !DILocalVariable(name: "t", scope: !15227, file: !2322, line: 1177, type: !2214)
!15247 = !DILocalVariable(name: "__f", scope: !15248, file: !2322, line: 1190, type: !15251)
!15248 = distinct !DILexicalBlock(scope: !15249, file: !2322, line: 1190, column: 3)
!15249 = distinct !DILexicalBlock(scope: !15250, file: !2322, line: 1189, column: 27)
!15250 = distinct !DILexicalBlock(scope: !15227, file: !2322, line: 1189, column: 6)
!15251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !169, line: 155, size: 96, elements: !15252)
!15252 = !{!15253, !15254, !15255}
!15253 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15251, file: !169, line: 156, baseType: !2317, size: 32)
!15254 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15251, file: !169, line: 157, baseType: !284, size: 32, offset: 32)
!15255 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15251, file: !169, line: 158, baseType: !763, size: 32, offset: 64)
!15256 = !DILocalVariable(name: "n", scope: !15257, file: !2322, line: 1190, type: !2243)
!15257 = distinct !DILexicalBlock(scope: !15258, file: !2322, line: 1190, column: 3)
!15258 = distinct !DILexicalBlock(scope: !15248, file: !2322, line: 1190, column: 3)
!15259 = !DILocation(line: 0, scope: !15227)
!15260 = !DILocation(line: 1179, column: 2, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15262, file: !2322, line: 1179, column: 2)
!15262 = distinct !DILexicalBlock(scope: !15227, file: !2322, line: 1179, column: 2)
!15263 = !DILocation(line: 1179, column: 2, scope: !15262)
!15264 = !DILocation(line: 1179, column: 2, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15261, file: !2322, line: 1179, column: 2)
!15266 = !DILocation(line: 1181, column: 31, scope: !15227)
!15267 = !DILocation(line: 1181, column: 45, scope: !15227)
!15268 = !DILocation(line: 1181, column: 15, scope: !15227)
!15269 = !DILocation(line: 1181, column: 25, scope: !15227)
!15270 = !DILocation(line: 1189, column: 11, scope: !15250)
!15271 = !DILocation(line: 1189, column: 7, scope: !15250)
!15272 = !DILocation(line: 1189, column: 6, scope: !15227)
!15273 = !DILocation(line: 1190, column: 3, scope: !15248)
!15274 = !DILocation(line: 1190, column: 3, scope: !15257)
!15275 = !DILocation(line: 0, scope: !15257)
!15276 = !DILocation(line: 1190, column: 3, scope: !15258)
!15277 = !DILocation(line: 1193, column: 2, scope: !15249)
!15278 = !DILocation(line: 1191, column: 42, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15258, file: !2322, line: 1190, column: 54)
!15280 = !DILocation(line: 1191, column: 12, scope: !15279)
!15281 = !DILocation(line: 1191, column: 22, scope: !15279)
!15282 = distinct !{!15282, !15273, !15283}
!15283 = !DILocation(line: 1192, column: 3, scope: !15248)
!15284 = !DILocation(line: 1195, column: 17, scope: !15227)
!15285 = !DILocation(line: 1195, column: 37, scope: !15227)
!15286 = !DILocation(line: 1195, column: 2, scope: !15227)
!15287 = !DILocation(line: 1196, column: 1, scope: !15227)
!15288 = !DISubprogram(name: "z_rb_foreach_next", scope: !169, file: !169, line: 176, type: !15289, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!15289 = !DISubroutineType(types: !15290)
!15290 = !{!2243, !15291, !15292}
!15291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15235, size: 32)
!15292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15251, size: 32)
!15293 = !DISubprogram(name: "rb_insert", scope: !169, file: !169, line: 105, type: !15294, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!15294 = !DISubroutineType(types: !15295)
!15295 = !{null, !15291, !2243}
!15296 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2322, file: !2322, line: 1198, type: !15228, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15297)
!15297 = !{!15298, !15299}
!15298 = !DILocalVariable(name: "pq", arg: 1, scope: !15296, file: !2322, line: 1198, type: !15230)
!15299 = !DILocalVariable(name: "thread", arg: 2, scope: !15296, file: !2322, line: 1198, type: !2214)
!15300 = !DILocation(line: 0, scope: !15296)
!15301 = !DILocation(line: 1200, column: 2, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15303, file: !2322, line: 1200, column: 2)
!15303 = distinct !DILexicalBlock(scope: !15296, file: !2322, line: 1200, column: 2)
!15304 = !DILocation(line: 1200, column: 2, scope: !15303)
!15305 = !DILocation(line: 1200, column: 2, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15302, file: !2322, line: 1200, column: 2)
!15307 = !DILocation(line: 1202, column: 17, scope: !15296)
!15308 = !DILocation(line: 1202, column: 37, scope: !15296)
!15309 = !DILocation(line: 1202, column: 2, scope: !15296)
!15310 = !DILocation(line: 1204, column: 16, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15296, file: !2322, line: 1204, column: 6)
!15312 = !DILocation(line: 1204, column: 7, scope: !15311)
!15313 = !DILocation(line: 1204, column: 6, scope: !15296)
!15314 = !DILocation(line: 1205, column: 7, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !15311, file: !2322, line: 1204, column: 22)
!15316 = !DILocation(line: 1205, column: 22, scope: !15315)
!15317 = !DILocation(line: 1206, column: 2, scope: !15315)
!15318 = !DILocation(line: 1207, column: 1, scope: !15296)
!15319 = !DISubprogram(name: "rb_remove", scope: !169, file: !169, line: 110, type: !15294, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!15320 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2322, file: !2322, line: 1209, type: !15321, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15323)
!15321 = !DISubroutineType(types: !15322)
!15322 = !{!2214, !15230}
!15323 = !{!15324, !15325, !15326}
!15324 = !DILocalVariable(name: "pq", arg: 1, scope: !15320, file: !2322, line: 1209, type: !15230)
!15325 = !DILocalVariable(name: "thread", scope: !15320, file: !2322, line: 1211, type: !2214)
!15326 = !DILocalVariable(name: "n", scope: !15320, file: !2322, line: 1212, type: !2243)
!15327 = !DILocation(line: 0, scope: !15320)
!15328 = !DILocation(line: 1212, column: 37, scope: !15320)
!15329 = !DILocation(line: 1212, column: 21, scope: !15320)
!15330 = !DILocation(line: 1217, column: 2, scope: !15320)
!15331 = distinct !DISubprogram(name: "rb_get_min", scope: !169, file: !169, line: 115, type: !15332, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15334)
!15332 = !DISubroutineType(types: !15333)
!15333 = !{!2243, !15291}
!15334 = !{!15335}
!15335 = !DILocalVariable(name: "tree", arg: 1, scope: !15331, file: !169, line: 115, type: !15291)
!15336 = !DILocation(line: 0, scope: !15331)
!15337 = !DILocation(line: 117, column: 9, scope: !15331)
!15338 = !DILocation(line: 117, column: 2, scope: !15331)
!15339 = !DISubprogram(name: "z_rb_get_minmax", scope: !169, file: !169, line: 100, type: !15340, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2022)
!15340 = !DISubroutineType(types: !15341)
!15341 = !{!2243, !15291, !185}
!15342 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2322, file: !2322, line: 1246, type: !15343, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15351)
!15343 = !DISubroutineType(types: !15344)
!15344 = !{!2214, !15345}
!15345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15346, size: 32)
!15346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15232, line: 53, size: 2080, elements: !15347)
!15347 = !{!15348, !15350}
!15348 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15346, file: !15232, line: 54, baseType: !15349, size: 2048)
!15349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2250, size: 2048, elements: !231)
!15350 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15346, file: !15232, line: 55, baseType: !32, size: 32, offset: 2048)
!15351 = !{!15352, !15353, !15354, !15355}
!15352 = !DILocalVariable(name: "pq", arg: 1, scope: !15342, file: !2322, line: 1246, type: !15345)
!15353 = !DILocalVariable(name: "thread", scope: !15342, file: !2322, line: 1252, type: !2214)
!15354 = !DILocalVariable(name: "l", scope: !15342, file: !2322, line: 1253, type: !13912)
!15355 = !DILocalVariable(name: "n", scope: !15342, file: !2322, line: 1254, type: !2318)
!15356 = !DILocation(line: 0, scope: !15342)
!15357 = !DILocation(line: 1248, column: 11, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15342, file: !2322, line: 1248, column: 6)
!15359 = !DILocation(line: 1248, column: 7, scope: !15358)
!15360 = !DILocation(line: 1248, column: 6, scope: !15342)
!15361 = !DILocation(line: 1253, column: 31, scope: !15342)
!15362 = !DILocation(line: 1253, column: 20, scope: !15342)
!15363 = !DILocation(line: 1254, column: 19, scope: !15342)
!15364 = !DILocation(line: 1260, column: 1, scope: !15342)
!15365 = distinct !DISubprogram(name: "z_unpend_all", scope: !2322, file: !2322, line: 1262, type: !15366, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15368)
!15366 = !DISubroutineType(types: !15367)
!15367 = !{!119, !2245}
!15368 = !{!15369, !15370, !15371}
!15369 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15365, file: !2322, line: 1262, type: !2245)
!15370 = !DILocalVariable(name: "need_sched", scope: !15365, file: !2322, line: 1264, type: !119)
!15371 = !DILocalVariable(name: "thread", scope: !15365, file: !2322, line: 1265, type: !2214)
!15372 = !DILocation(line: 0, scope: !15365)
!15373 = !DILocation(line: 1267, column: 19, scope: !15365)
!15374 = !DILocation(line: 1267, column: 41, scope: !15365)
!15375 = !DILocation(line: 1267, column: 2, scope: !15365)
!15376 = !DILocation(line: 1268, column: 3, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15365, file: !2322, line: 1267, column: 50)
!15378 = !DILocation(line: 1269, column: 3, scope: !15377)
!15379 = distinct !{!15379, !15375, !15380}
!15380 = !DILocation(line: 1271, column: 2, scope: !15365)
!15381 = !DILocation(line: 1273, column: 2, scope: !15365)
!15382 = distinct !DISubprogram(name: "z_waitq_head", scope: !13209, file: !13209, line: 52, type: !14913, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15383)
!15383 = !{!15384}
!15384 = !DILocalVariable(name: "w", arg: 1, scope: !15382, file: !13209, line: 52, type: !2245)
!15385 = !DILocation(line: 0, scope: !15382)
!15386 = !DILocation(line: 54, column: 52, scope: !15382)
!15387 = !DILocation(line: 54, column: 28, scope: !15382)
!15388 = !DILocation(line: 54, column: 9, scope: !15382)
!15389 = !DILocation(line: 54, column: 2, scope: !15382)
!15390 = distinct !DISubprogram(name: "init_ready_q", scope: !2322, file: !2322, line: 1276, type: !15391, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15398)
!15391 = !DISubroutineType(types: !15392)
!15392 = !{null, !15393}
!15393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15394, size: 32)
!15394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !15395)
!15395 = !{!15396, !15397}
!15396 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15394, file: !179, line: 86, baseType: !2214, size: 32)
!15397 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15394, file: !179, line: 90, baseType: !2250, size: 64, offset: 32)
!15398 = !{!15399}
!15399 = !DILocalVariable(name: "rq", arg: 1, scope: !15390, file: !2322, line: 1276, type: !15393)
!15400 = !DILocation(line: 0, scope: !15390)
!15401 = !DILocation(line: 1289, column: 22, scope: !15390)
!15402 = !DILocation(line: 1289, column: 2, scope: !15390)
!15403 = !DILocation(line: 1291, column: 1, scope: !15390)
!15404 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !15405, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15407)
!15405 = !DISubroutineType(types: !15406)
!15406 = !{null, !13912}
!15407 = !{!15408}
!15408 = !DILocalVariable(name: "list", arg: 1, scope: !15404, file: !153, line: 197, type: !13912)
!15409 = !DILocation(line: 0, scope: !15404)
!15410 = !DILocation(line: 199, column: 8, scope: !15404)
!15411 = !DILocation(line: 199, column: 13, scope: !15404)
!15412 = !DILocation(line: 200, column: 8, scope: !15404)
!15413 = !DILocation(line: 200, column: 13, scope: !15404)
!15414 = !DILocation(line: 201, column: 1, scope: !15404)
!15415 = distinct !DISubprogram(name: "z_sched_init", scope: !2322, file: !2322, line: 1293, type: !2953, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!15416 = !DILocation(line: 1302, column: 2, scope: !15415)
!15417 = !DILocation(line: 1306, column: 2, scope: !15415)
!15418 = !DILocation(line: 1309, column: 1, scope: !15415)
!15419 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2322, file: !2322, line: 1311, type: !15420, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15423)
!15420 = !DISubroutineType(types: !15421)
!15421 = !{!119, !15422}
!15422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2214)
!15423 = !{!15424}
!15424 = !DILocalVariable(name: "thread", arg: 1, scope: !15419, file: !2322, line: 1311, type: !15422)
!15425 = !DILocation(line: 0, scope: !15419)
!15426 = !DILocation(line: 1313, column: 22, scope: !15419)
!15427 = !DILocation(line: 1313, column: 9, scope: !15419)
!15428 = !DILocation(line: 1313, column: 2, scope: !15419)
!15429 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2322, file: !2322, line: 1325, type: !15430, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15432)
!15430 = !DISubroutineType(types: !15431)
!15431 = !{null, !15422, !119}
!15432 = !{!15433, !15434, !15435}
!15433 = !DILocalVariable(name: "thread", arg: 1, scope: !15429, file: !2322, line: 1325, type: !15422)
!15434 = !DILocalVariable(name: "prio", arg: 2, scope: !15429, file: !2322, line: 1325, type: !119)
!15435 = !DILocalVariable(name: "th", scope: !15429, file: !2322, line: 1334, type: !2214)
!15436 = !DILocation(line: 0, scope: !15429)
!15437 = !DILocation(line: 1331, column: 2, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15439, file: !2322, line: 1331, column: 2)
!15439 = distinct !DILexicalBlock(scope: !15440, file: !2322, line: 1331, column: 2)
!15440 = distinct !DILexicalBlock(scope: !15429, file: !2322, line: 1331, column: 2)
!15441 = !DILocation(line: 1331, column: 2, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15438, file: !2322, line: 1331, column: 2)
!15443 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15444)
!15444 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 1332, column: 2, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15447, file: !2322, line: 1332, column: 2)
!15447 = distinct !DILexicalBlock(scope: !15429, file: !2322, line: 1332, column: 2)
!15448 = !DILocation(line: 0, scope: !14413, inlinedAt: !15444)
!15449 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15445)
!15450 = !DILocation(line: 1332, column: 2, scope: !15447)
!15451 = !DILocation(line: 1332, column: 2, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15446, file: !2322, line: 1332, column: 2)
!15453 = !DILocation(line: 1336, column: 2, scope: !15429)
!15454 = !DILocation(line: 1337, column: 1, scope: !15429)
!15455 = distinct !DISubprogram(name: "k_can_yield", scope: !2322, file: !2322, line: 1384, type: !7366, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!15456 = !DILocation(line: 1386, column: 11, scope: !15455)
!15457 = !DILocation(line: 1386, column: 29, scope: !15455)
!15458 = !DILocation(line: 1386, column: 32, scope: !15455)
!15459 = !DILocation(line: 1386, column: 46, scope: !15455)
!15460 = !DILocation(line: 1387, column: 28, scope: !15455)
!15461 = !DILocation(line: 1387, column: 4, scope: !15455)
!15462 = !DILocation(line: 1386, column: 2, scope: !15455)
!15463 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !245, file: !245, line: 989, type: !7366, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!15464 = !DILocation(line: 993, column: 10, scope: !15463)
!15465 = !DILocation(line: 993, column: 2, scope: !15463)
!15466 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2322, file: !2322, line: 1390, type: !2953, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15467)
!15467 = !{!15468}
!15468 = !DILocalVariable(name: "key", scope: !15466, file: !2322, line: 1396, type: !13678)
!15469 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 1392, column: 2, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15473, file: !2322, line: 1392, column: 2)
!15473 = distinct !DILexicalBlock(scope: !15466, file: !2322, line: 1392, column: 2)
!15474 = !DILocation(line: 0, scope: !14413, inlinedAt: !15470)
!15475 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15471)
!15476 = !DILocation(line: 1392, column: 2, scope: !15473)
!15477 = !DILocation(line: 1392, column: 2, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15472, file: !2322, line: 1392, column: 2)
!15479 = !DILocation(line: 0, scope: !13686, inlinedAt: !15480)
!15480 = distinct !DILocation(line: 1396, column: 25, scope: !15466)
!15481 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !15480)
!15483 = !DILocation(line: 0, scope: !13695, inlinedAt: !15482)
!15484 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !15480)
!15485 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !15480)
!15486 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !15480)
!15487 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !15480)
!15488 = !DILocation(line: 0, scope: !15466)
!15489 = !DILocation(line: 1400, column: 18, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15491, file: !2322, line: 1399, column: 36)
!15491 = distinct !DILexicalBlock(scope: !15466, file: !2322, line: 1398, column: 6)
!15492 = !DILocation(line: 0, scope: !13878, inlinedAt: !15493)
!15493 = distinct !DILocation(line: 1400, column: 3, scope: !15490)
!15494 = !DILocation(line: 266, column: 15, scope: !13878, inlinedAt: !15493)
!15495 = !DILocation(line: 266, column: 28, scope: !13878, inlinedAt: !15493)
!15496 = !DILocation(line: 0, scope: !13886, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 268, column: 3, scope: !13890, inlinedAt: !15493)
!15498 = !DILocation(line: 234, column: 2, scope: !13886, inlinedAt: !15497)
!15499 = !DILocation(line: 1402, column: 15, scope: !15466)
!15500 = !DILocation(line: 0, scope: !13895, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 1402, column: 2, scope: !15466)
!15502 = !DILocation(line: 252, column: 15, scope: !13895, inlinedAt: !15501)
!15503 = !DILocation(line: 252, column: 28, scope: !13895, inlinedAt: !15501)
!15504 = !DILocation(line: 0, scope: !13902, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 254, column: 3, scope: !13906, inlinedAt: !15501)
!15506 = !DILocation(line: 0, scope: !13909, inlinedAt: !15507)
!15507 = distinct !DILocation(line: 229, column: 2, scope: !13902, inlinedAt: !15505)
!15508 = !DILocation(line: 186, column: 2, scope: !13919, inlinedAt: !15507)
!15509 = !DILocation(line: 186, column: 2, scope: !13920, inlinedAt: !15507)
!15510 = !DILocation(line: 186, column: 2, scope: !13923, inlinedAt: !15507)
!15511 = !DILocation(line: 188, column: 2, scope: !13925, inlinedAt: !15507)
!15512 = !DILocation(line: 188, column: 2, scope: !13927, inlinedAt: !15507)
!15513 = !DILocation(line: 0, scope: !13925, inlinedAt: !15507)
!15514 = !DILocation(line: 189, column: 7, scope: !13930, inlinedAt: !15507)
!15515 = !DILocation(line: 189, column: 35, scope: !13930, inlinedAt: !15507)
!15516 = !DILocation(line: 189, column: 7, scope: !13931, inlinedAt: !15507)
!15517 = !DILocation(line: 191, column: 21, scope: !13935, inlinedAt: !15507)
!15518 = !DILocation(line: 190, column: 4, scope: !13935, inlinedAt: !15507)
!15519 = !DILocation(line: 192, column: 4, scope: !13935, inlinedAt: !15507)
!15520 = distinct !{!15520, !15511, !15521}
!15521 = !DILocation(line: 194, column: 2, scope: !13925, inlinedAt: !15507)
!15522 = !DILocation(line: 196, column: 37, scope: !13909, inlinedAt: !15507)
!15523 = !DILocation(line: 196, column: 2, scope: !13909, inlinedAt: !15507)
!15524 = !DILocation(line: 197, column: 1, scope: !13909, inlinedAt: !15507)
!15525 = !DILocation(line: 1403, column: 2, scope: !15466)
!15526 = !DILocation(line: 0, scope: !14364, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 1404, column: 2, scope: !15466)
!15528 = !DILocation(line: 0, scope: !14373, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 195, column: 2, scope: !14364, inlinedAt: !15527)
!15530 = !DILocation(line: 225, column: 2, scope: !14380, inlinedAt: !15529)
!15531 = !DILocation(line: 225, column: 2, scope: !14381, inlinedAt: !15529)
!15532 = !DILocation(line: 225, column: 2, scope: !14384, inlinedAt: !15529)
!15533 = !DILocation(line: 196, column: 9, scope: !14364, inlinedAt: !15527)
!15534 = !DILocation(line: 1405, column: 1, scope: !15466)
!15535 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2322, file: !2322, line: 1459, type: !15536, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15538)
!15536 = !DISubroutineType(types: !15537)
!15537 = !{!763, !14574}
!15538 = !{!15539, !15540, !15541}
!15539 = !DILocalVariable(name: "timeout", arg: 1, scope: !15535, file: !2322, line: 1459, type: !14574)
!15540 = !DILocalVariable(name: "ticks", scope: !15535, file: !2322, line: 1461, type: !114)
!15541 = !DILocalVariable(name: "ret", scope: !15535, file: !2322, line: 1480, type: !763)
!15542 = !DILocation(line: 0, scope: !15535)
!15543 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15544)
!15544 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15545)
!15545 = distinct !DILocation(line: 1463, column: 2, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15547, file: !2322, line: 1463, column: 2)
!15547 = distinct !DILexicalBlock(scope: !15535, file: !2322, line: 1463, column: 2)
!15548 = !DILocation(line: 0, scope: !14413, inlinedAt: !15544)
!15549 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15545)
!15550 = !DILocation(line: 1463, column: 2, scope: !15547)
!15551 = !DILocation(line: 1463, column: 2, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15546, file: !2322, line: 1463, column: 2)
!15553 = !DILocation(line: 1468, column: 6, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15535, file: !2322, line: 1468, column: 6)
!15555 = !DILocation(line: 1468, column: 6, scope: !15535)
!15556 = !DILocation(line: 1469, column: 20, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15554, file: !2322, line: 1468, column: 40)
!15558 = !DILocation(line: 1469, column: 3, scope: !15557)
!15559 = !DILocation(line: 1473, column: 3, scope: !15557)
!15560 = !DILocation(line: 1478, column: 10, scope: !15535)
!15561 = !DILocation(line: 1480, column: 16, scope: !15535)
!15562 = !DILocation(line: 1485, column: 1, scope: !15535)
!15563 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3204, file: !3204, line: 310, type: !15564, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15566)
!15564 = !DISubroutineType(types: !15565)
!15565 = !{null, !15422}
!15566 = !{!15567}
!15567 = !DILocalVariable(name: "thread", arg: 1, scope: !15563, file: !3204, line: 310, type: !15422)
!15568 = !DILocation(line: 0, scope: !15563)
!15569 = !DILocation(line: 319, column: 2, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15563, file: !3204, line: 319, column: 2)
!15571 = !{i64 2154792873}
!15572 = !DILocation(line: 320, column: 2, scope: !15563)
!15573 = !DILocation(line: 321, column: 1, scope: !15563)
!15574 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2322, file: !2322, line: 1415, type: !15575, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15577)
!15575 = !DISubroutineType(types: !15576)
!15576 = !{!763, !114}
!15577 = !{!15578, !15579, !15580, !15581}
!15578 = !DILocalVariable(name: "ticks", arg: 1, scope: !15574, file: !2322, line: 1415, type: !114)
!15579 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15574, file: !2322, line: 1418, type: !118)
!15580 = !DILocalVariable(name: "timeout", scope: !15574, file: !2322, line: 1430, type: !14574)
!15581 = !DILocalVariable(name: "key", scope: !15574, file: !2322, line: 1437, type: !13678)
!15582 = !DILocation(line: 0, scope: !15574)
!15583 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15584)
!15584 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15585)
!15585 = distinct !DILocation(line: 1420, column: 2, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15587, file: !2322, line: 1420, column: 2)
!15587 = distinct !DILexicalBlock(scope: !15574, file: !2322, line: 1420, column: 2)
!15588 = !DILocation(line: 0, scope: !14413, inlinedAt: !15584)
!15589 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15585)
!15590 = !DILocation(line: 1420, column: 2, scope: !15587)
!15591 = !DILocation(line: 1420, column: 2, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15586, file: !2322, line: 1420, column: 2)
!15593 = !DILocation(line: 1425, column: 12, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15574, file: !2322, line: 1425, column: 6)
!15595 = !DILocation(line: 1425, column: 6, scope: !15574)
!15596 = !DILocation(line: 1426, column: 3, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15594, file: !2322, line: 1425, column: 18)
!15598 = !DILocation(line: 1427, column: 3, scope: !15597)
!15599 = !DILocation(line: 1431, column: 24, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15574, file: !2322, line: 1431, column: 6)
!15601 = !DILocation(line: 1431, column: 6, scope: !15574)
!15602 = !DILocation(line: 1432, column: 35, scope: !15603)
!15603 = distinct !DILexicalBlock(scope: !15600, file: !2322, line: 1431, column: 30)
!15604 = !DILocation(line: 1432, column: 27, scope: !15603)
!15605 = !DILocation(line: 1433, column: 2, scope: !15603)
!15606 = !DILocation(line: 1434, column: 27, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15600, file: !2322, line: 1433, column: 9)
!15608 = !DILocation(line: 0, scope: !15600)
!15609 = !DILocation(line: 0, scope: !13686, inlinedAt: !15610)
!15610 = distinct !DILocation(line: 1437, column: 25, scope: !15574)
!15611 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !15612)
!15612 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !15610)
!15613 = !DILocation(line: 0, scope: !13695, inlinedAt: !15612)
!15614 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !15610)
!15615 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !15610)
!15616 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !15610)
!15617 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !15610)
!15618 = !DILocation(line: 1440, column: 20, scope: !15574)
!15619 = !DILocation(line: 1440, column: 18, scope: !15574)
!15620 = !DILocation(line: 1442, column: 2, scope: !15574)
!15621 = !DILocation(line: 1443, column: 23, scope: !15574)
!15622 = !DILocation(line: 1443, column: 2, scope: !15574)
!15623 = !DILocation(line: 1444, column: 29, scope: !15574)
!15624 = !DILocation(line: 1444, column: 2, scope: !15574)
!15625 = !DILocation(line: 0, scope: !14364, inlinedAt: !15626)
!15626 = distinct !DILocation(line: 1446, column: 8, scope: !15574)
!15627 = !DILocation(line: 0, scope: !14373, inlinedAt: !15628)
!15628 = distinct !DILocation(line: 195, column: 2, scope: !14364, inlinedAt: !15626)
!15629 = !DILocation(line: 225, column: 2, scope: !14380, inlinedAt: !15628)
!15630 = !DILocation(line: 225, column: 2, scope: !14381, inlinedAt: !15628)
!15631 = !DILocation(line: 225, column: 2, scope: !14384, inlinedAt: !15628)
!15632 = !DILocation(line: 196, column: 9, scope: !14364, inlinedAt: !15626)
!15633 = !DILocation(line: 1448, column: 2, scope: !15634)
!15634 = distinct !DILexicalBlock(scope: !15635, file: !2322, line: 1448, column: 2)
!15635 = distinct !DILexicalBlock(scope: !15574, file: !2322, line: 1448, column: 2)
!15636 = !DILocation(line: 1448, column: 2, scope: !15635)
!15637 = !DILocation(line: 1448, column: 2, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15634, file: !2322, line: 1448, column: 2)
!15639 = !DILocation(line: 1450, column: 10, scope: !15574)
!15640 = !DILocation(line: 1450, column: 45, scope: !15574)
!15641 = !DILocation(line: 1450, column: 43, scope: !15574)
!15642 = !DILocation(line: 1451, column: 6, scope: !15574)
!15643 = !DILocation(line: 1457, column: 1, scope: !15574)
!15644 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3196, file: !3196, line: 1103, type: !3197, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15645)
!15645 = !{!15646}
!15646 = !DILocalVariable(name: "t", arg: 1, scope: !15644, file: !3196, line: 1103, type: !120)
!15647 = !DILocation(line: 0, scope: !15644)
!15648 = !DILocation(line: 0, scope: !13746, inlinedAt: !15649)
!15649 = distinct !DILocation(line: 1106, column: 9, scope: !15644)
!15650 = !DILocation(line: 139, column: 13, scope: !15651, inlinedAt: !15649)
!15651 = distinct !DILexicalBlock(scope: !15652, file: !3196, line: 138, column: 10)
!15652 = distinct !DILexicalBlock(scope: !15653, file: !3196, line: 136, column: 7)
!15653 = distinct !DILexicalBlock(scope: !13767, file: !3196, line: 134, column: 17)
!15654 = !DILocation(line: 1106, column: 2, scope: !15644)
!15655 = distinct !DISubprogram(name: "k_yield", scope: !3204, file: !3204, line: 140, type: !2953, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!15656 = !DILocation(line: 148, column: 2, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15655, file: !3204, line: 148, column: 2)
!15658 = !{i64 2154792193}
!15659 = !DILocation(line: 149, column: 2, scope: !15655)
!15660 = !DILocation(line: 150, column: 1, scope: !15655)
!15661 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2322, file: !2322, line: 1495, type: !15662, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15664)
!15662 = !DISubroutineType(types: !15663)
!15663 = !{!763, !119}
!15664 = !{!15665, !15666}
!15665 = !DILocalVariable(name: "us", arg: 1, scope: !15661, file: !2322, line: 1495, type: !119)
!15666 = !DILocalVariable(name: "ticks", scope: !15661, file: !2322, line: 1497, type: !763)
!15667 = !DILocation(line: 0, scope: !15661)
!15668 = !DILocation(line: 1501, column: 31, scope: !15661)
!15669 = !DILocation(line: 1501, column: 10, scope: !15661)
!15670 = !DILocation(line: 1502, column: 23, scope: !15661)
!15671 = !DILocation(line: 1502, column: 10, scope: !15661)
!15672 = !DILocation(line: 1506, column: 31, scope: !15661)
!15673 = !DILocation(line: 1506, column: 9, scope: !15661)
!15674 = !DILocation(line: 1506, column: 2, scope: !15661)
!15675 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3196, file: !3196, line: 571, type: !3197, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15676)
!15676 = !{!15677}
!15677 = !DILocalVariable(name: "t", arg: 1, scope: !15675, file: !3196, line: 571, type: !120)
!15678 = !DILocation(line: 0, scope: !15675)
!15679 = !DILocation(line: 0, scope: !13746, inlinedAt: !15680)
!15680 = distinct !DILocation(line: 574, column: 9, scope: !15675)
!15681 = !DILocation(line: 135, column: 5, scope: !15653, inlinedAt: !15680)
!15682 = !DILocation(line: 139, column: 13, scope: !15651, inlinedAt: !15680)
!15683 = !DILocation(line: 574, column: 2, scope: !15675)
!15684 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3196, file: !3196, line: 1187, type: !3197, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15685)
!15685 = !{!15686}
!15686 = !DILocalVariable(name: "t", arg: 1, scope: !15684, file: !3196, line: 1187, type: !120)
!15687 = !DILocation(line: 0, scope: !15684)
!15688 = !DILocation(line: 0, scope: !13746, inlinedAt: !15689)
!15689 = distinct !DILocation(line: 1190, column: 9, scope: !15684)
!15690 = !DILocation(line: 145, column: 13, scope: !15691, inlinedAt: !15689)
!15691 = distinct !DILexicalBlock(scope: !13764, file: !3196, line: 144, column: 10)
!15692 = !DILocation(line: 1190, column: 2, scope: !15684)
!15693 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2322, file: !2322, line: 1517, type: !15564, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15694)
!15694 = !{!15695}
!15695 = !DILocalVariable(name: "thread", arg: 1, scope: !15693, file: !2322, line: 1517, type: !15422)
!15696 = !DILocation(line: 0, scope: !15693)
!15697 = !DILocation(line: 1521, column: 6, scope: !15698)
!15698 = distinct !DILexicalBlock(scope: !15693, file: !2322, line: 1521, column: 6)
!15699 = !DILocation(line: 1521, column: 6, scope: !15693)
!15700 = !DILocation(line: 1525, column: 6, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !15693, file: !2322, line: 1525, column: 6)
!15702 = !DILocation(line: 1525, column: 37, scope: !15701)
!15703 = !DILocation(line: 1525, column: 6, scope: !15693)
!15704 = !DILocation(line: 1527, column: 20, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15706, file: !2322, line: 1527, column: 7)
!15706 = distinct !DILexicalBlock(scope: !15701, file: !2322, line: 1525, column: 42)
!15707 = !DILocation(line: 1527, column: 33, scope: !15705)
!15708 = !DILocation(line: 1527, column: 7, scope: !15706)
!15709 = !DILocation(line: 1532, column: 2, scope: !15693)
!15710 = !DILocation(line: 1533, column: 2, scope: !15693)
!15711 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15712)
!15712 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 1537, column: 7, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15693, file: !2322, line: 1537, column: 6)
!15715 = !DILocation(line: 0, scope: !14413, inlinedAt: !15712)
!15716 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15713)
!15717 = !DILocation(line: 1537, column: 6, scope: !15693)
!15718 = !DILocation(line: 1538, column: 3, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15714, file: !2322, line: 1537, column: 25)
!15720 = !DILocation(line: 1539, column: 2, scope: !15719)
!15721 = !DILocation(line: 1540, column: 1, scope: !15693)
!15722 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12848, file: !12848, line: 101, type: !13827, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15723)
!15723 = !{!15724}
!15724 = !DILocalVariable(name: "thread", arg: 1, scope: !15722, file: !12848, line: 101, type: !2214)
!15725 = !DILocation(line: 0, scope: !15722)
!15726 = !DILocation(line: 103, column: 23, scope: !15722)
!15727 = !DILocation(line: 103, column: 36, scope: !15722)
!15728 = !DILocation(line: 103, column: 55, scope: !15722)
!15729 = !DILocation(line: 103, column: 2, scope: !15722)
!15730 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2322, file: !2322, line: 1567, type: !15731, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15733)
!15731 = !DISubroutineType(types: !15732)
!15732 = !{!15422}
!15733 = !{!15734}
!15734 = !DILocalVariable(name: "ret", scope: !15730, file: !2322, line: 1577, type: !15422)
!15735 = !DILocation(line: 1577, column: 30, scope: !15730)
!15736 = !DILocation(line: 0, scope: !15730)
!15737 = !DILocation(line: 1582, column: 2, scope: !15730)
!15738 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2322, file: !2322, line: 1593, type: !7669, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2022)
!15739 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15740)
!15740 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15741)
!15741 = distinct !DILocation(line: 1595, column: 10, scope: !15738)
!15742 = !DILocation(line: 0, scope: !14413, inlinedAt: !15740)
!15743 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15741)
!15744 = !DILocation(line: 1595, column: 27, scope: !15738)
!15745 = !DILocation(line: 1595, column: 41, scope: !15738)
!15746 = !DILocation(line: 1595, column: 30, scope: !15738)
!15747 = !DILocation(line: 1595, column: 2, scope: !15738)
!15748 = distinct !DISubprogram(name: "z_thread_abort", scope: !2322, file: !2322, line: 1725, type: !13644, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15749)
!15749 = !{!15750, !15751}
!15750 = !DILocalVariable(name: "thread", arg: 1, scope: !15748, file: !2322, line: 1725, type: !2214)
!15751 = !DILocalVariable(name: "key", scope: !15748, file: !2322, line: 1727, type: !13678)
!15752 = !DILocation(line: 0, scope: !15748)
!15753 = !DILocation(line: 0, scope: !13686, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 1727, column: 25, scope: !15748)
!15755 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !15754)
!15757 = !DILocation(line: 0, scope: !13695, inlinedAt: !15756)
!15758 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !15754)
!15759 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !15754)
!15760 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !15754)
!15761 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !15754)
!15762 = !DILocation(line: 1729, column: 20, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15748, file: !2322, line: 1729, column: 6)
!15764 = !DILocation(line: 1729, column: 33, scope: !15763)
!15765 = !DILocation(line: 1729, column: 48, scope: !15763)
!15766 = !DILocation(line: 1729, column: 6, scope: !15748)
!15767 = !DILocation(line: 0, scope: !13720, inlinedAt: !15768)
!15768 = distinct !DILocation(line: 1730, column: 3, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15763, file: !2322, line: 1729, column: 54)
!15770 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !15768)
!15771 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !15768)
!15772 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !15768)
!15773 = !DILocation(line: 0, scope: !13734, inlinedAt: !15774)
!15774 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !15768)
!15775 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !15774)
!15776 = !DILocation(line: 1731, column: 3, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15778, file: !2322, line: 1731, column: 3)
!15778 = distinct !DILexicalBlock(scope: !15779, file: !2322, line: 1731, column: 3)
!15779 = distinct !DILexicalBlock(scope: !15769, file: !2322, line: 1731, column: 3)
!15780 = !DILocation(line: 1736, column: 20, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15748, file: !2322, line: 1736, column: 6)
!15782 = !DILocation(line: 1736, column: 33, scope: !15781)
!15783 = !DILocation(line: 1736, column: 49, scope: !15781)
!15784 = !DILocation(line: 1736, column: 6, scope: !15748)
!15785 = !DILocation(line: 0, scope: !13720, inlinedAt: !15786)
!15786 = distinct !DILocation(line: 1737, column: 3, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15781, file: !2322, line: 1736, column: 56)
!15788 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !15786)
!15789 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !15786)
!15790 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !15786)
!15791 = !DILocation(line: 0, scope: !13734, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !15786)
!15793 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !15792)
!15794 = !DILocation(line: 1738, column: 3, scope: !15787)
!15795 = !DILocation(line: 1775, column: 2, scope: !15748)
!15796 = !DILocation(line: 1776, column: 16, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15748, file: !2322, line: 1776, column: 6)
!15798 = !DILocation(line: 1776, column: 13, scope: !15797)
!15799 = !DILocation(line: 1776, column: 25, scope: !15797)
!15800 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15801)
!15801 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 1776, column: 29, scope: !15797)
!15803 = !DILocation(line: 0, scope: !14413, inlinedAt: !15801)
!15804 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15802)
!15805 = !DILocation(line: 1776, column: 6, scope: !15748)
!15806 = !DILocation(line: 0, scope: !14364, inlinedAt: !15807)
!15807 = distinct !DILocation(line: 1777, column: 3, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15797, file: !2322, line: 1776, column: 47)
!15809 = !DILocation(line: 0, scope: !14373, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 195, column: 2, scope: !14364, inlinedAt: !15807)
!15811 = !DILocation(line: 225, column: 2, scope: !14380, inlinedAt: !15810)
!15812 = !DILocation(line: 225, column: 2, scope: !14381, inlinedAt: !15810)
!15813 = !DILocation(line: 225, column: 2, scope: !14384, inlinedAt: !15810)
!15814 = !DILocation(line: 196, column: 9, scope: !14364, inlinedAt: !15807)
!15815 = !DILocation(line: 1778, column: 3, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15817, file: !2322, line: 1778, column: 3)
!15817 = distinct !DILexicalBlock(scope: !15818, file: !2322, line: 1778, column: 3)
!15818 = distinct !DILexicalBlock(scope: !15808, file: !2322, line: 1778, column: 3)
!15819 = !DILocation(line: 0, scope: !13720, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 1780, column: 2, scope: !15748)
!15821 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !15820)
!15822 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !15820)
!15823 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !15820)
!15824 = !DILocation(line: 0, scope: !13734, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !15820)
!15826 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !15825)
!15827 = !DILocation(line: 1781, column: 1, scope: !15748)
!15828 = distinct !DISubprogram(name: "end_thread", scope: !2322, file: !2322, line: 1690, type: !13644, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15829)
!15829 = !{!15830}
!15830 = !DILocalVariable(name: "thread", arg: 1, scope: !15828, file: !2322, line: 1690, type: !2214)
!15831 = !DILocation(line: 0, scope: !15828)
!15832 = !DILocation(line: 1695, column: 20, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15828, file: !2322, line: 1695, column: 6)
!15834 = !DILocation(line: 1695, column: 33, scope: !15833)
!15835 = !DILocation(line: 1695, column: 49, scope: !15833)
!15836 = !DILocation(line: 1695, column: 6, scope: !15828)
!15837 = !DILocation(line: 1697, column: 29, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15833, file: !2322, line: 1695, column: 56)
!15839 = !DILocation(line: 1698, column: 7, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15838, file: !2322, line: 1698, column: 7)
!15841 = !DILocation(line: 1698, column: 7, scope: !15838)
!15842 = !DILocation(line: 0, scope: !13878, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 1699, column: 4, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15840, file: !2322, line: 1698, column: 35)
!15845 = !DILocation(line: 266, column: 28, scope: !13878, inlinedAt: !15843)
!15846 = !DILocation(line: 0, scope: !13886, inlinedAt: !15847)
!15847 = distinct !DILocation(line: 268, column: 3, scope: !13890, inlinedAt: !15843)
!15848 = !DILocation(line: 234, column: 2, scope: !13886, inlinedAt: !15847)
!15849 = !DILocation(line: 1700, column: 3, scope: !15844)
!15850 = !DILocation(line: 1701, column: 20, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15838, file: !2322, line: 1701, column: 7)
!15852 = !DILocation(line: 1701, column: 30, scope: !15851)
!15853 = !DILocation(line: 1701, column: 7, scope: !15838)
!15854 = !DILocation(line: 1702, column: 4, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15851, file: !2322, line: 1701, column: 39)
!15856 = !DILocation(line: 1703, column: 3, scope: !15855)
!15857 = !DILocation(line: 1704, column: 9, scope: !15838)
!15858 = !DILocation(line: 1705, column: 23, scope: !15838)
!15859 = !DILocation(line: 1705, column: 3, scope: !15838)
!15860 = !DILocation(line: 1706, column: 3, scope: !15838)
!15861 = !DILocation(line: 1722, column: 2, scope: !15838)
!15862 = !DILocation(line: 1723, column: 1, scope: !15828)
!15863 = distinct !DISubprogram(name: "unpend_all", scope: !2322, file: !2322, line: 1674, type: !15864, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15866)
!15864 = !DISubroutineType(types: !15865)
!15865 = !{null, !2245}
!15866 = !{!15867, !15868}
!15867 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15863, file: !2322, line: 1674, type: !2245)
!15868 = !DILocalVariable(name: "thread", scope: !15863, file: !2322, line: 1676, type: !2214)
!15869 = !DILocation(line: 0, scope: !15863)
!15870 = !DILocation(line: 1678, column: 19, scope: !15863)
!15871 = !DILocation(line: 1678, column: 41, scope: !15863)
!15872 = !DILocation(line: 1678, column: 2, scope: !15863)
!15873 = !DILocation(line: 1679, column: 3, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15863, file: !2322, line: 1678, column: 50)
!15875 = !DILocation(line: 1680, column: 9, scope: !15874)
!15876 = !DILocalVariable(name: "thread", arg: 1, scope: !15877, file: !12868, line: 65, type: !2214)
!15877 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12868, file: !12868, line: 65, type: !15878, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15880)
!15878 = !DISubroutineType(types: !15879)
!15879 = !{null, !2214, !32}
!15880 = !{!15876, !15881}
!15881 = !DILocalVariable(name: "value", arg: 2, scope: !15877, file: !12868, line: 65, type: !32)
!15882 = !DILocation(line: 0, scope: !15877, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 1681, column: 3, scope: !15874)
!15884 = !DILocation(line: 67, column: 15, scope: !15877, inlinedAt: !15883)
!15885 = !DILocation(line: 67, column: 33, scope: !15877, inlinedAt: !15883)
!15886 = !DILocation(line: 1682, column: 3, scope: !15874)
!15887 = distinct !{!15887, !15872, !15888}
!15888 = !DILocation(line: 1683, column: 2, scope: !15863)
!15889 = !DILocation(line: 1684, column: 1, scope: !15863)
!15890 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2322, file: !2322, line: 1794, type: !15891, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15893)
!15891 = !DISubroutineType(types: !15892)
!15892 = !{!119, !2214, !14574}
!15893 = !{!15894, !15895, !15896, !15897}
!15894 = !DILocalVariable(name: "thread", arg: 1, scope: !15890, file: !2322, line: 1794, type: !2214)
!15895 = !DILocalVariable(name: "timeout", arg: 2, scope: !15890, file: !2322, line: 1794, type: !14574)
!15896 = !DILocalVariable(name: "key", scope: !15890, file: !2322, line: 1796, type: !13678)
!15897 = !DILocalVariable(name: "ret", scope: !15890, file: !2322, line: 1797, type: !119)
!15898 = !DILocation(line: 0, scope: !15890)
!15899 = !DILocation(line: 0, scope: !13686, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 1796, column: 25, scope: !15890)
!15901 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !15900)
!15903 = !DILocation(line: 0, scope: !13695, inlinedAt: !15902)
!15904 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !15900)
!15905 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !15900)
!15906 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !15900)
!15907 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !15900)
!15908 = !DILocation(line: 1801, column: 20, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15890, file: !2322, line: 1801, column: 6)
!15910 = !DILocation(line: 1801, column: 33, scope: !15909)
!15911 = !DILocation(line: 1801, column: 49, scope: !15909)
!15912 = !DILocation(line: 1801, column: 6, scope: !15890)
!15913 = !DILocation(line: 1803, column: 13, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15909, file: !2322, line: 1803, column: 13)
!15915 = !DILocation(line: 1803, column: 13, scope: !15909)
!15916 = !DILocation(line: 1805, column: 24, scope: !15917)
!15917 = distinct !DILexicalBlock(scope: !15914, file: !2322, line: 1805, column: 13)
!15918 = !DILocation(line: 1805, column: 21, scope: !15917)
!15919 = !DILocation(line: 1805, column: 34, scope: !15917)
!15920 = !DILocation(line: 1806, column: 20, scope: !15917)
!15921 = !DILocation(line: 1806, column: 44, scope: !15917)
!15922 = !DILocation(line: 1806, column: 30, scope: !15917)
!15923 = !DILocation(line: 1805, column: 13, scope: !15914)
!15924 = !DILocation(line: 1031, column: 3, scope: !14413, inlinedAt: !15925)
!15925 = distinct !DILocation(line: 48, column: 10, scope: !14417, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 1809, column: 3, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15928, file: !2322, line: 1809, column: 3)
!15928 = distinct !DILexicalBlock(scope: !15929, file: !2322, line: 1809, column: 3)
!15929 = distinct !DILexicalBlock(scope: !15917, file: !2322, line: 1808, column: 9)
!15930 = !DILocation(line: 0, scope: !14413, inlinedAt: !15925)
!15931 = !DILocation(line: 48, column: 9, scope: !14417, inlinedAt: !15926)
!15932 = !DILocation(line: 1809, column: 3, scope: !15928)
!15933 = !DILocation(line: 1809, column: 3, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15927, file: !2322, line: 1809, column: 3)
!15935 = !DILocation(line: 1810, column: 23, scope: !15929)
!15936 = !DILocation(line: 1810, column: 42, scope: !15929)
!15937 = !DILocation(line: 1810, column: 3, scope: !15929)
!15938 = !DILocation(line: 1811, column: 22, scope: !15929)
!15939 = !DILocation(line: 1811, column: 3, scope: !15929)
!15940 = !DILocation(line: 0, scope: !14364, inlinedAt: !15941)
!15941 = distinct !DILocation(line: 1814, column: 9, scope: !15929)
!15942 = !DILocation(line: 0, scope: !14373, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 195, column: 2, scope: !14364, inlinedAt: !15941)
!15944 = !DILocation(line: 225, column: 2, scope: !14380, inlinedAt: !15943)
!15945 = !DILocation(line: 225, column: 2, scope: !14381, inlinedAt: !15943)
!15946 = !DILocation(line: 225, column: 2, scope: !14384, inlinedAt: !15943)
!15947 = !DILocation(line: 196, column: 9, scope: !14364, inlinedAt: !15941)
!15948 = !DILocation(line: 1817, column: 3, scope: !15929)
!15949 = !DILocation(line: 0, scope: !15909)
!15950 = !DILocation(line: 0, scope: !13720, inlinedAt: !15951)
!15951 = distinct !DILocation(line: 1822, column: 2, scope: !15890)
!15952 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !15951)
!15953 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !15951)
!15954 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !15951)
!15955 = !DILocation(line: 0, scope: !13734, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !15951)
!15957 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !15956)
!15958 = !DILocation(line: 1823, column: 2, scope: !15890)
!15959 = !DILocation(line: 1824, column: 1, scope: !15890)
!15960 = distinct !DISubprogram(name: "z_sched_wake", scope: !2322, file: !2322, line: 1882, type: !15961, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15963)
!15961 = !DISubroutineType(types: !15962)
!15962 = !{!345, !2245, !119, !113}
!15963 = !{!15964, !15965, !15966, !15967, !15968, !15969, !15971}
!15964 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15960, file: !2322, line: 1882, type: !2245)
!15965 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15960, file: !2322, line: 1882, type: !119)
!15966 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15960, file: !2322, line: 1882, type: !113)
!15967 = !DILocalVariable(name: "thread", scope: !15960, file: !2322, line: 1884, type: !2214)
!15968 = !DILocalVariable(name: "ret", scope: !15960, file: !2322, line: 1885, type: !345)
!15969 = !DILocalVariable(name: "__i", scope: !15970, file: !2322, line: 1887, type: !13678)
!15970 = distinct !DILexicalBlock(scope: !15960, file: !2322, line: 1887, column: 2)
!15971 = !DILocalVariable(name: "__key", scope: !15970, file: !2322, line: 1887, type: !13678)
!15972 = !DILocation(line: 0, scope: !15960)
!15973 = !DILocation(line: 0, scope: !15970)
!15974 = !DILocation(line: 0, scope: !13686, inlinedAt: !15975)
!15975 = distinct !DILocation(line: 1887, column: 2, scope: !15970)
!15976 = !DILocation(line: 55, column: 2, scope: !13695, inlinedAt: !15977)
!15977 = distinct !DILocation(line: 145, column: 10, scope: !13686, inlinedAt: !15975)
!15978 = !DILocation(line: 0, scope: !13695, inlinedAt: !15977)
!15979 = !DILocation(line: 148, column: 2, scope: !13703, inlinedAt: !15975)
!15980 = !DILocation(line: 148, column: 2, scope: !13704, inlinedAt: !15975)
!15981 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !15975)
!15982 = !DILocation(line: 160, column: 2, scope: !13686, inlinedAt: !15975)
!15983 = !DILocation(line: 1888, column: 12, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15985, file: !2322, line: 1887, column: 26)
!15985 = distinct !DILexicalBlock(scope: !15970, file: !2322, line: 1887, column: 2)
!15986 = !DILocation(line: 1890, column: 14, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15984, file: !2322, line: 1890, column: 7)
!15988 = !DILocation(line: 1890, column: 7, scope: !15984)
!15989 = !DILocalVariable(name: "thread", arg: 1, scope: !15990, file: !15991, line: 134, type: !2214)
!15990 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15991, file: !15991, line: 134, type: !15992, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !15994)
!15991 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15992 = !DISubroutineType(types: !15993)
!15993 = !{null, !2214, !32, !113}
!15994 = !{!15989, !15995, !15996}
!15995 = !DILocalVariable(name: "value", arg: 2, scope: !15990, file: !15991, line: 135, type: !32)
!15996 = !DILocalVariable(name: "data", arg: 3, scope: !15990, file: !15991, line: 136, type: !113)
!15997 = !DILocation(line: 0, scope: !15990, inlinedAt: !15998)
!15998 = distinct !DILocation(line: 1891, column: 4, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15987, file: !2322, line: 1890, column: 23)
!16000 = !DILocation(line: 0, scope: !15877, inlinedAt: !16001)
!16001 = distinct !DILocation(line: 138, column: 2, scope: !15990, inlinedAt: !15998)
!16002 = !DILocation(line: 67, column: 15, scope: !15877, inlinedAt: !16001)
!16003 = !DILocation(line: 67, column: 33, scope: !15877, inlinedAt: !16001)
!16004 = !DILocation(line: 139, column: 15, scope: !15990, inlinedAt: !15998)
!16005 = !DILocation(line: 139, column: 25, scope: !15990, inlinedAt: !15998)
!16006 = !DILocation(line: 1894, column: 4, scope: !15999)
!16007 = !DILocation(line: 1895, column: 10, scope: !15999)
!16008 = !DILocation(line: 1896, column: 4, scope: !15999)
!16009 = !DILocation(line: 1898, column: 3, scope: !15999)
!16010 = !DILocation(line: 0, scope: !13720, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 1887, column: 2, scope: !15985)
!16012 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !16011)
!16013 = !DILocation(line: 194, column: 2, scope: !13729, inlinedAt: !16011)
!16014 = !DILocation(line: 194, column: 2, scope: !13732, inlinedAt: !16011)
!16015 = !DILocation(line: 0, scope: !13734, inlinedAt: !16016)
!16016 = distinct !DILocation(line: 215, column: 2, scope: !13720, inlinedAt: !16011)
!16017 = !DILocation(line: 95, column: 2, scope: !13734, inlinedAt: !16016)
!16018 = !DILocation(line: 1901, column: 2, scope: !15960)
!16019 = distinct !DISubprogram(name: "z_sched_wait", scope: !2322, file: !2322, line: 1904, type: !16020, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !16023)
!16020 = !DISubroutineType(types: !16021)
!16021 = !{!119, !13689, !13678, !2245, !14574, !16022}
!16022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!16023 = !{!16024, !16025, !16026, !16027, !16028, !16029}
!16024 = !DILocalVariable(name: "lock", arg: 1, scope: !16019, file: !2322, line: 1904, type: !13689)
!16025 = !DILocalVariable(name: "key", arg: 2, scope: !16019, file: !2322, line: 1904, type: !13678)
!16026 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16019, file: !2322, line: 1905, type: !2245)
!16027 = !DILocalVariable(name: "timeout", arg: 4, scope: !16019, file: !2322, line: 1905, type: !14574)
!16028 = !DILocalVariable(name: "data", arg: 5, scope: !16019, file: !2322, line: 1905, type: !16022)
!16029 = !DILocalVariable(name: "ret", scope: !16019, file: !2322, line: 1907, type: !119)
!16030 = !DILocation(line: 0, scope: !16019)
!16031 = !DILocation(line: 1907, column: 12, scope: !16019)
!16032 = !DILocation(line: 1909, column: 11, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16019, file: !2322, line: 1909, column: 6)
!16034 = !DILocation(line: 1909, column: 6, scope: !16019)
!16035 = !DILocation(line: 1910, column: 11, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16033, file: !2322, line: 1909, column: 20)
!16037 = !DILocation(line: 1910, column: 26, scope: !16036)
!16038 = !DILocation(line: 1910, column: 9, scope: !16036)
!16039 = !DILocation(line: 1911, column: 2, scope: !16036)
!16040 = !DILocation(line: 1912, column: 2, scope: !16019)
!16041 = distinct !DISubprogram(name: "z_data_copy", scope: !16042, file: !16042, line: 22, type: !2953, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2936, retainedNodes: !2022)
!16042 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16043 = !DILocation(line: 24, column: 2, scope: !16041)
!16044 = !DILocation(line: 27, column: 2, scope: !16041)
!16045 = !DILocation(line: 71, column: 1, scope: !16041)
!16046 = distinct !DISubprogram(name: "z_add_timeout", scope: !2359, file: !2359, line: 88, type: !16047, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16053)
!16047 = !DISubroutineType(types: !16048)
!16048 = !{null, !2332, !2351, !16049}
!16049 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !16050)
!16050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !16051)
!16051 = !{!16052}
!16052 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16050, file: !115, line: 66, baseType: !114, size: 64)
!16053 = !{!16054, !16055, !16056, !16057, !16063, !16064, !16067, !16070}
!16054 = !DILocalVariable(name: "to", arg: 1, scope: !16046, file: !2359, line: 88, type: !2332)
!16055 = !DILocalVariable(name: "fn", arg: 2, scope: !16046, file: !2359, line: 88, type: !2351)
!16056 = !DILocalVariable(name: "timeout", arg: 3, scope: !16046, file: !2359, line: 89, type: !16049)
!16057 = !DILocalVariable(name: "__i", scope: !16058, file: !2359, line: 102, type: !16059)
!16058 = distinct !DILexicalBlock(scope: !16046, file: !2359, line: 102, column: 2)
!16059 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !16060)
!16060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !16061)
!16061 = !{!16062}
!16062 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16060, file: !259, line: 33, baseType: !119, size: 32)
!16063 = !DILocalVariable(name: "__key", scope: !16058, file: !2359, line: 102, type: !16059)
!16064 = !DILocalVariable(name: "t", scope: !16065, file: !2359, line: 103, type: !2332)
!16065 = distinct !DILexicalBlock(scope: !16066, file: !2359, line: 102, column: 24)
!16066 = distinct !DILexicalBlock(scope: !16058, file: !2359, line: 102, column: 2)
!16067 = !DILocalVariable(name: "ticks", scope: !16068, file: !2359, line: 107, type: !114)
!16068 = distinct !DILexicalBlock(scope: !16069, file: !2359, line: 106, column: 39)
!16069 = distinct !DILexicalBlock(scope: !16065, file: !2359, line: 105, column: 7)
!16070 = !DILocalVariable(name: "next_time", scope: !16071, file: !2359, line: 137, type: !763)
!16071 = distinct !DILexicalBlock(scope: !16072, file: !2359, line: 127, column: 22)
!16072 = distinct !DILexicalBlock(scope: !16065, file: !2359, line: 127, column: 7)
!16073 = !DILocation(line: 0, scope: !16046)
!16074 = !DILocation(line: 91, column: 6, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16046, file: !2359, line: 91, column: 6)
!16076 = !DILocation(line: 91, column: 6, scope: !16046)
!16077 = !DILocation(line: 99, column: 2, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16079, file: !2359, line: 99, column: 2)
!16079 = distinct !DILexicalBlock(scope: !16046, file: !2359, line: 99, column: 2)
!16080 = !DILocation(line: 99, column: 2, scope: !16079)
!16081 = !DILocation(line: 99, column: 2, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16078, file: !2359, line: 99, column: 2)
!16083 = !DILocation(line: 100, column: 6, scope: !16046)
!16084 = !DILocation(line: 100, column: 9, scope: !16046)
!16085 = !DILocation(line: 0, scope: !16058)
!16086 = !DILocalVariable(name: "l", arg: 1, scope: !16087, file: !259, line: 136, type: !16090)
!16087 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !16088, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16091)
!16088 = !DISubroutineType(types: !16089)
!16089 = !{!16059, !16090}
!16090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!16091 = !{!16086, !16092}
!16092 = !DILocalVariable(name: "k", scope: !16087, file: !259, line: 139, type: !16059)
!16093 = !DILocation(line: 0, scope: !16087, inlinedAt: !16094)
!16094 = distinct !DILocation(line: 102, column: 2, scope: !16058)
!16095 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16100)
!16096 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5994, file: !5994, line: 42, type: !5995, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16097)
!16097 = !{!16098, !16099}
!16098 = !DILocalVariable(name: "key", scope: !16096, file: !5994, line: 44, type: !32)
!16099 = !DILocalVariable(name: "tmp", scope: !16096, file: !5994, line: 53, type: !32)
!16100 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16094)
!16101 = !{i64 2248567}
!16102 = !DILocation(line: 0, scope: !16096, inlinedAt: !16100)
!16103 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16094)
!16104 = distinct !DILexicalBlock(scope: !16105, file: !259, line: 148, column: 2)
!16105 = distinct !DILexicalBlock(scope: !16087, file: !259, line: 148, column: 2)
!16106 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16094)
!16107 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16094)
!16108 = distinct !DILexicalBlock(scope: !16104, file: !259, line: 148, column: 2)
!16109 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16094)
!16110 = !DILocation(line: 106, column: 33, scope: !16069)
!16111 = !DILocation(line: 105, column: 7, scope: !16065)
!16112 = !DILocation(line: 107, column: 50, scope: !16068)
!16113 = !DILocation(line: 107, column: 48, scope: !16068)
!16114 = !DILocation(line: 0, scope: !16068)
!16115 = !DILocation(line: 109, column: 17, scope: !16068)
!16116 = !DILocation(line: 110, column: 3, scope: !16068)
!16117 = !DILocation(line: 111, column: 31, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16069, file: !2359, line: 110, column: 10)
!16119 = !DILocation(line: 111, column: 37, scope: !16118)
!16120 = !DILocation(line: 111, column: 35, scope: !16118)
!16121 = !DILocation(line: 0, scope: !16069)
!16122 = !DILocation(line: 109, column: 8, scope: !16068)
!16123 = !DILocation(line: 109, column: 15, scope: !16068)
!16124 = !DILocation(line: 114, column: 12, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16065, file: !2359, line: 114, column: 3)
!16126 = !DILocation(line: 0, scope: !16065)
!16127 = !DILocation(line: 114, column: 3, scope: !16125)
!16128 = !DILocation(line: 115, column: 24, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16130, file: !2359, line: 115, column: 8)
!16130 = distinct !DILexicalBlock(scope: !16131, file: !2359, line: 114, column: 45)
!16131 = distinct !DILexicalBlock(scope: !16125, file: !2359, line: 114, column: 3)
!16132 = !DILocation(line: 115, column: 11, scope: !16129)
!16133 = !DILocation(line: 115, column: 18, scope: !16129)
!16134 = !DILocation(line: 115, column: 8, scope: !16130)
!16135 = !DILocation(line: 116, column: 15, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16129, file: !2359, line: 115, column: 32)
!16137 = !DILocation(line: 117, column: 26, scope: !16136)
!16138 = !DILocation(line: 117, column: 5, scope: !16136)
!16139 = !DILocation(line: 123, column: 7, scope: !16065)
!16140 = !DILocation(line: 120, column: 15, scope: !16130)
!16141 = !DILocation(line: 114, column: 36, scope: !16131)
!16142 = distinct !{!16142, !16127, !16143}
!16143 = !DILocation(line: 121, column: 3, scope: !16125)
!16144 = !DILocation(line: 124, column: 4, scope: !16145)
!16145 = distinct !DILexicalBlock(scope: !16146, file: !2359, line: 123, column: 18)
!16146 = distinct !DILexicalBlock(scope: !16065, file: !2359, line: 123, column: 7)
!16147 = !DILocation(line: 125, column: 3, scope: !16145)
!16148 = !DILocation(line: 127, column: 13, scope: !16072)
!16149 = !DILocation(line: 127, column: 10, scope: !16072)
!16150 = !DILocation(line: 127, column: 7, scope: !16065)
!16151 = !DILocation(line: 137, column: 24, scope: !16071)
!16152 = !DILocation(line: 0, scope: !16071)
!16153 = !DILocation(line: 139, column: 18, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16071, file: !2359, line: 139, column: 8)
!16155 = !DILocation(line: 139, column: 23, scope: !16154)
!16156 = !DILocation(line: 141, column: 5, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16154, file: !2359, line: 140, column: 48)
!16158 = !DILocation(line: 142, column: 4, scope: !16157)
!16159 = !DILocalVariable(name: "key", arg: 2, scope: !16160, file: !259, line: 190, type: !16059)
!16160 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !16161, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16163)
!16161 = !DISubroutineType(types: !16162)
!16162 = !{null, !16090, !16059}
!16163 = !{!16164, !16159}
!16164 = !DILocalVariable(name: "l", arg: 1, scope: !16160, file: !259, line: 189, type: !16090)
!16165 = !DILocation(line: 0, scope: !16160, inlinedAt: !16166)
!16166 = distinct !DILocation(line: 102, column: 2, scope: !16066)
!16167 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16166)
!16168 = distinct !DILexicalBlock(scope: !16169, file: !259, line: 194, column: 2)
!16169 = distinct !DILexicalBlock(scope: !16160, file: !259, line: 194, column: 2)
!16170 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16166)
!16171 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16166)
!16172 = distinct !DILexicalBlock(scope: !16168, file: !259, line: 194, column: 2)
!16173 = !DILocalVariable(name: "key", arg: 1, scope: !16174, file: !5994, line: 84, type: !32)
!16174 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5994, file: !5994, line: 84, type: !6005, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16175)
!16175 = !{!16173}
!16176 = !DILocation(line: 0, scope: !16174, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16166)
!16178 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16177)
!16179 = !{i64 2249384}
!16180 = !DILocation(line: 148, column: 1, scope: !16046)
!16181 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !16182, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16186)
!16182 = !DISubroutineType(types: !16183)
!16183 = !{!345, !16184}
!16184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16185, size: 32)
!16185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2336)
!16186 = !{!16187}
!16187 = !DILocalVariable(name: "node", arg: 1, scope: !16181, file: !153, line: 225, type: !16184)
!16188 = !DILocation(line: 0, scope: !16181)
!16189 = !DILocation(line: 227, column: 15, scope: !16181)
!16190 = !DILocation(line: 227, column: 20, scope: !16181)
!16191 = !DILocation(line: 227, column: 2, scope: !16181)
!16192 = distinct !DISubprogram(name: "elapsed", scope: !2359, file: !2359, line: 62, type: !16193, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !2022)
!16193 = !DISubroutineType(types: !16194)
!16194 = !{!763}
!16195 = !DILocation(line: 64, column: 9, scope: !16192)
!16196 = !DILocation(line: 64, column: 28, scope: !16192)
!16197 = !DILocation(line: 64, column: 35, scope: !16192)
!16198 = !DILocation(line: 64, column: 2, scope: !16192)
!16199 = distinct !DISubprogram(name: "first", scope: !2359, file: !2359, line: 39, type: !16200, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16202)
!16200 = !DISubroutineType(types: !16201)
!16201 = !{!2332}
!16202 = !{!16203}
!16203 = !DILocalVariable(name: "t", scope: !16199, file: !2359, line: 41, type: !16204)
!16204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!16205 = !DILocation(line: 41, column: 19, scope: !16199)
!16206 = !DILocation(line: 0, scope: !16199)
!16207 = !DILocation(line: 43, column: 9, scope: !16199)
!16208 = !DILocation(line: 43, column: 2, scope: !16199)
!16209 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !16210, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16212)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{null, !16204, !16204}
!16212 = !{!16213, !16214, !16215}
!16213 = !DILocalVariable(name: "successor", arg: 1, scope: !16209, file: !153, line: 443, type: !16204)
!16214 = !DILocalVariable(name: "node", arg: 2, scope: !16209, file: !153, line: 443, type: !16204)
!16215 = !DILocalVariable(name: "prev", scope: !16209, file: !153, line: 445, type: !16216)
!16216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16204)
!16217 = !DILocation(line: 0, scope: !16209)
!16218 = !DILocation(line: 445, column: 39, scope: !16209)
!16219 = !DILocation(line: 447, column: 8, scope: !16209)
!16220 = !DILocation(line: 447, column: 13, scope: !16209)
!16221 = !DILocation(line: 448, column: 8, scope: !16209)
!16222 = !DILocation(line: 448, column: 13, scope: !16209)
!16223 = !DILocation(line: 449, column: 8, scope: !16209)
!16224 = !DILocation(line: 449, column: 13, scope: !16209)
!16225 = !DILocation(line: 450, column: 18, scope: !16209)
!16226 = !DILocation(line: 451, column: 1, scope: !16209)
!16227 = distinct !DISubprogram(name: "next", scope: !2359, file: !2359, line: 46, type: !16228, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16230)
!16228 = !DISubroutineType(types: !16229)
!16229 = !{!2332, !2332}
!16230 = !{!16231, !16232}
!16231 = !DILocalVariable(name: "t", arg: 1, scope: !16227, file: !2359, line: 46, type: !2332)
!16232 = !DILocalVariable(name: "n", scope: !16227, file: !2359, line: 48, type: !16204)
!16233 = !DILocation(line: 0, scope: !16227)
!16234 = !DILocation(line: 48, column: 58, scope: !16227)
!16235 = !DILocation(line: 48, column: 19, scope: !16227)
!16236 = !DILocation(line: 50, column: 9, scope: !16227)
!16237 = !DILocation(line: 50, column: 2, scope: !16227)
!16238 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !16239, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16242)
!16239 = !DISubroutineType(types: !16240)
!16240 = !{null, !16241, !16204}
!16241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!16242 = !{!16243, !16244, !16245}
!16243 = !DILocalVariable(name: "list", arg: 1, scope: !16238, file: !153, line: 404, type: !16241)
!16244 = !DILocalVariable(name: "node", arg: 2, scope: !16238, file: !153, line: 404, type: !16204)
!16245 = !DILocalVariable(name: "tail", scope: !16238, file: !153, line: 406, type: !16216)
!16246 = !DILocation(line: 0, scope: !16238)
!16247 = !DILocation(line: 406, column: 34, scope: !16238)
!16248 = !DILocation(line: 408, column: 8, scope: !16238)
!16249 = !DILocation(line: 408, column: 13, scope: !16238)
!16250 = !DILocation(line: 409, column: 8, scope: !16238)
!16251 = !DILocation(line: 409, column: 13, scope: !16238)
!16252 = !DILocation(line: 411, column: 8, scope: !16238)
!16253 = !DILocation(line: 411, column: 13, scope: !16238)
!16254 = !DILocation(line: 412, column: 13, scope: !16238)
!16255 = !DILocation(line: 413, column: 1, scope: !16238)
!16256 = distinct !DISubprogram(name: "next_timeout", scope: !2359, file: !2359, line: 67, type: !16193, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16257)
!16257 = !{!16258, !16259, !16260}
!16258 = !DILocalVariable(name: "to", scope: !16256, file: !2359, line: 69, type: !2332)
!16259 = !DILocalVariable(name: "ticks_elapsed", scope: !16256, file: !2359, line: 70, type: !763)
!16260 = !DILocalVariable(name: "ret", scope: !16256, file: !2359, line: 71, type: !763)
!16261 = !DILocation(line: 69, column: 24, scope: !16256)
!16262 = !DILocation(line: 0, scope: !16256)
!16263 = !DILocation(line: 70, column: 26, scope: !16256)
!16264 = !DILocation(line: 73, column: 10, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16256, file: !2359, line: 73, column: 6)
!16266 = !DILocation(line: 73, column: 19, scope: !16265)
!16267 = !DILocation(line: 74, column: 21, scope: !16265)
!16268 = !DILocation(line: 74, column: 30, scope: !16265)
!16269 = !DILocation(line: 74, column: 28, scope: !16265)
!16270 = !DILocation(line: 74, column: 45, scope: !16265)
!16271 = !DILocation(line: 73, column: 6, scope: !16256)
!16272 = !DILocation(line: 77, column: 9, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16265, file: !2359, line: 76, column: 9)
!16274 = !DILocation(line: 0, scope: !16265)
!16275 = !DILocation(line: 81, column: 20, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16256, file: !2359, line: 81, column: 6)
!16277 = !DILocation(line: 81, column: 6, scope: !16276)
!16278 = !DILocation(line: 81, column: 32, scope: !16276)
!16279 = !DILocation(line: 85, column: 2, scope: !16256)
!16280 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !16281, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16283)
!16281 = !DISubroutineType(types: !16282)
!16282 = !{!16204, !16241, !16204}
!16283 = !{!16284, !16285}
!16284 = !DILocalVariable(name: "list", arg: 1, scope: !16280, file: !153, line: 341, type: !16241)
!16285 = !DILocalVariable(name: "node", arg: 2, scope: !16280, file: !153, line: 342, type: !16204)
!16286 = !DILocation(line: 0, scope: !16280)
!16287 = !DILocation(line: 344, column: 15, scope: !16280)
!16288 = !DILocation(line: 344, column: 9, scope: !16280)
!16289 = !DILocation(line: 344, column: 26, scope: !16280)
!16290 = !DILocation(line: 344, column: 2, scope: !16280)
!16291 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !16281, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16292)
!16292 = !{!16293, !16294}
!16293 = !DILocalVariable(name: "list", arg: 1, scope: !16291, file: !153, line: 325, type: !16241)
!16294 = !DILocalVariable(name: "node", arg: 2, scope: !16291, file: !153, line: 326, type: !16204)
!16295 = !DILocation(line: 0, scope: !16291)
!16296 = !DILocation(line: 328, column: 24, scope: !16291)
!16297 = !DILocation(line: 328, column: 15, scope: !16291)
!16298 = !DILocation(line: 328, column: 9, scope: !16291)
!16299 = !DILocation(line: 328, column: 45, scope: !16291)
!16300 = !DILocation(line: 328, column: 2, scope: !16291)
!16301 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !16302, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16304)
!16302 = !DISubroutineType(types: !16303)
!16303 = !{!16204, !16241}
!16304 = !{!16305}
!16305 = !DILocalVariable(name: "list", arg: 1, scope: !16301, file: !153, line: 294, type: !16241)
!16306 = !DILocation(line: 0, scope: !16301)
!16307 = !DILocation(line: 296, column: 9, scope: !16301)
!16308 = !DILocation(line: 296, column: 2, scope: !16301)
!16309 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !16310, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16312)
!16310 = !DISubroutineType(types: !16311)
!16311 = !{!345, !16241}
!16312 = !{!16313}
!16313 = !DILocalVariable(name: "list", arg: 1, scope: !16309, file: !153, line: 266, type: !16241)
!16314 = !DILocation(line: 0, scope: !16309)
!16315 = !DILocation(line: 268, column: 15, scope: !16309)
!16316 = !DILocation(line: 268, column: 20, scope: !16309)
!16317 = !DILocation(line: 268, column: 2, scope: !16309)
!16318 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2359, file: !2359, line: 150, type: !16319, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16321)
!16319 = !DISubroutineType(types: !16320)
!16320 = !{!119, !2332}
!16321 = !{!16322, !16323, !16324, !16326}
!16322 = !DILocalVariable(name: "to", arg: 1, scope: !16318, file: !2359, line: 150, type: !2332)
!16323 = !DILocalVariable(name: "ret", scope: !16318, file: !2359, line: 152, type: !119)
!16324 = !DILocalVariable(name: "__i", scope: !16325, file: !2359, line: 154, type: !16059)
!16325 = distinct !DILexicalBlock(scope: !16318, file: !2359, line: 154, column: 2)
!16326 = !DILocalVariable(name: "__key", scope: !16325, file: !2359, line: 154, type: !16059)
!16327 = !DILocation(line: 0, scope: !16318)
!16328 = !DILocation(line: 0, scope: !16325)
!16329 = !DILocation(line: 0, scope: !16087, inlinedAt: !16330)
!16330 = distinct !DILocation(line: 154, column: 2, scope: !16325)
!16331 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16332)
!16332 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16330)
!16333 = !DILocation(line: 0, scope: !16096, inlinedAt: !16332)
!16334 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16330)
!16335 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16330)
!16336 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16330)
!16337 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16330)
!16338 = !DILocation(line: 155, column: 7, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16340, file: !2359, line: 155, column: 7)
!16340 = distinct !DILexicalBlock(scope: !16341, file: !2359, line: 154, column: 24)
!16341 = distinct !DILexicalBlock(scope: !16325, file: !2359, line: 154, column: 2)
!16342 = !DILocation(line: 155, column: 7, scope: !16340)
!16343 = !DILocation(line: 156, column: 4, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16339, file: !2359, line: 155, column: 39)
!16345 = !DILocation(line: 158, column: 3, scope: !16344)
!16346 = !DILocation(line: 0, scope: !16160, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 154, column: 2, scope: !16341)
!16348 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16347)
!16349 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16347)
!16350 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16347)
!16351 = !DILocation(line: 0, scope: !16174, inlinedAt: !16352)
!16352 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16347)
!16353 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16352)
!16354 = !DILocation(line: 161, column: 2, scope: !16318)
!16355 = distinct !DISubprogram(name: "remove_timeout", scope: !2359, file: !2359, line: 53, type: !2353, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16356)
!16356 = !{!16357}
!16357 = !DILocalVariable(name: "t", arg: 1, scope: !16355, file: !2359, line: 53, type: !2332)
!16358 = !DILocation(line: 0, scope: !16355)
!16359 = !DILocation(line: 55, column: 6, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16355, file: !2359, line: 55, column: 6)
!16361 = !DILocation(line: 55, column: 14, scope: !16360)
!16362 = !DILocation(line: 55, column: 6, scope: !16355)
!16363 = !DILocation(line: 56, column: 25, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16360, file: !2359, line: 55, column: 23)
!16365 = !DILocation(line: 56, column: 12, scope: !16364)
!16366 = !DILocation(line: 56, column: 19, scope: !16364)
!16367 = !DILocation(line: 57, column: 2, scope: !16364)
!16368 = !DILocation(line: 59, column: 23, scope: !16355)
!16369 = !DILocation(line: 59, column: 2, scope: !16355)
!16370 = !DILocation(line: 60, column: 1, scope: !16355)
!16371 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !16372, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16374)
!16372 = !DISubroutineType(types: !16373)
!16373 = !{null, !16204}
!16374 = !{!16375, !16376, !16377}
!16375 = !DILocalVariable(name: "node", arg: 1, scope: !16371, file: !153, line: 496, type: !16204)
!16376 = !DILocalVariable(name: "prev", scope: !16371, file: !153, line: 498, type: !16216)
!16377 = !DILocalVariable(name: "next", scope: !16371, file: !153, line: 499, type: !16216)
!16378 = !DILocation(line: 0, scope: !16371)
!16379 = !DILocation(line: 498, column: 34, scope: !16371)
!16380 = !DILocation(line: 499, column: 34, scope: !16371)
!16381 = !DILocation(line: 501, column: 8, scope: !16371)
!16382 = !DILocation(line: 501, column: 13, scope: !16371)
!16383 = !DILocation(line: 502, column: 8, scope: !16371)
!16384 = !DILocation(line: 502, column: 13, scope: !16371)
!16385 = !DILocation(line: 503, column: 2, scope: !16371)
!16386 = !DILocation(line: 504, column: 1, scope: !16371)
!16387 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !16372, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16388)
!16388 = !{!16389}
!16389 = !DILocalVariable(name: "node", arg: 1, scope: !16387, file: !153, line: 211, type: !16204)
!16390 = !DILocation(line: 0, scope: !16387)
!16391 = !DILocation(line: 213, column: 8, scope: !16387)
!16392 = !DILocation(line: 213, column: 13, scope: !16387)
!16393 = !DILocation(line: 214, column: 8, scope: !16387)
!16394 = !DILocation(line: 214, column: 13, scope: !16387)
!16395 = !DILocation(line: 215, column: 1, scope: !16387)
!16396 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2359, file: !2359, line: 183, type: !16397, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16401)
!16397 = !DISubroutineType(types: !16398)
!16398 = !{!114, !16399}
!16399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16400, size: 32)
!16400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2333)
!16401 = !{!16402, !16403, !16404, !16406}
!16402 = !DILocalVariable(name: "timeout", arg: 1, scope: !16396, file: !2359, line: 183, type: !16399)
!16403 = !DILocalVariable(name: "ticks", scope: !16396, file: !2359, line: 185, type: !114)
!16404 = !DILocalVariable(name: "__i", scope: !16405, file: !2359, line: 187, type: !16059)
!16405 = distinct !DILexicalBlock(scope: !16396, file: !2359, line: 187, column: 2)
!16406 = !DILocalVariable(name: "__key", scope: !16405, file: !2359, line: 187, type: !16059)
!16407 = !DILocation(line: 0, scope: !16396)
!16408 = !DILocation(line: 0, scope: !16405)
!16409 = !DILocation(line: 0, scope: !16087, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 187, column: 2, scope: !16405)
!16411 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16410)
!16413 = !DILocation(line: 0, scope: !16096, inlinedAt: !16412)
!16414 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16410)
!16415 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16410)
!16416 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16410)
!16417 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16410)
!16418 = !DILocation(line: 188, column: 11, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16420, file: !2359, line: 187, column: 24)
!16420 = distinct !DILexicalBlock(scope: !16405, file: !2359, line: 187, column: 2)
!16421 = !DILocation(line: 0, scope: !16160, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 187, column: 2, scope: !16420)
!16423 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16422)
!16424 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16422)
!16425 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16422)
!16426 = !DILocation(line: 0, scope: !16174, inlinedAt: !16427)
!16427 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16422)
!16428 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16427)
!16429 = !DILocation(line: 191, column: 2, scope: !16396)
!16430 = distinct !DISubprogram(name: "timeout_rem", scope: !2359, file: !2359, line: 165, type: !16397, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16431)
!16431 = !{!16432, !16433, !16434}
!16432 = !DILocalVariable(name: "timeout", arg: 1, scope: !16430, file: !2359, line: 165, type: !16399)
!16433 = !DILocalVariable(name: "ticks", scope: !16430, file: !2359, line: 167, type: !114)
!16434 = !DILocalVariable(name: "t", scope: !16435, file: !2359, line: 173, type: !2332)
!16435 = distinct !DILexicalBlock(scope: !16430, file: !2359, line: 173, column: 2)
!16436 = !DILocation(line: 0, scope: !16430)
!16437 = !DILocation(line: 169, column: 6, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16430, file: !2359, line: 169, column: 6)
!16439 = !DILocation(line: 169, column: 6, scope: !16430)
!16440 = !DILocation(line: 173, column: 28, scope: !16435)
!16441 = !DILocation(line: 0, scope: !16435)
!16442 = !DILocation(line: 173, column: 39, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16435, file: !2359, line: 173, column: 2)
!16444 = !DILocation(line: 173, column: 2, scope: !16435)
!16445 = !DILocation(line: 174, column: 15, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16443, file: !2359, line: 173, column: 61)
!16447 = !DILocation(line: 174, column: 9, scope: !16446)
!16448 = !DILocation(line: 175, column: 15, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16446, file: !2359, line: 175, column: 7)
!16450 = !DILocation(line: 175, column: 7, scope: !16446)
!16451 = !DILocation(line: 173, column: 52, scope: !16443)
!16452 = distinct !{!16452, !16444, !16453}
!16453 = !DILocation(line: 178, column: 2, scope: !16435)
!16454 = !DILocation(line: 180, column: 17, scope: !16430)
!16455 = !DILocation(line: 180, column: 15, scope: !16430)
!16456 = !DILocation(line: 180, column: 2, scope: !16430)
!16457 = !DILocation(line: 181, column: 1, scope: !16430)
!16458 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13277, file: !13277, line: 35, type: !16459, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16461)
!16459 = !DISubroutineType(types: !16460)
!16460 = !{!345, !16399}
!16461 = !{!16462}
!16462 = !DILocalVariable(name: "to", arg: 1, scope: !16458, file: !13277, line: 35, type: !16399)
!16463 = !DILocation(line: 0, scope: !16458)
!16464 = !DILocation(line: 37, column: 35, scope: !16458)
!16465 = !DILocation(line: 37, column: 10, scope: !16458)
!16466 = !DILocation(line: 37, column: 9, scope: !16458)
!16467 = !DILocation(line: 37, column: 2, scope: !16458)
!16468 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2359, file: !2359, line: 194, type: !16397, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16469)
!16469 = !{!16470, !16471, !16472, !16474}
!16470 = !DILocalVariable(name: "timeout", arg: 1, scope: !16468, file: !2359, line: 194, type: !16399)
!16471 = !DILocalVariable(name: "ticks", scope: !16468, file: !2359, line: 196, type: !114)
!16472 = !DILocalVariable(name: "__i", scope: !16473, file: !2359, line: 198, type: !16059)
!16473 = distinct !DILexicalBlock(scope: !16468, file: !2359, line: 198, column: 2)
!16474 = !DILocalVariable(name: "__key", scope: !16473, file: !2359, line: 198, type: !16059)
!16475 = !DILocation(line: 0, scope: !16468)
!16476 = !DILocation(line: 0, scope: !16473)
!16477 = !DILocation(line: 0, scope: !16087, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 198, column: 2, scope: !16473)
!16479 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16478)
!16481 = !DILocation(line: 0, scope: !16096, inlinedAt: !16480)
!16482 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16478)
!16483 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16478)
!16484 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16478)
!16485 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16478)
!16486 = !DILocation(line: 199, column: 11, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !16488, file: !2359, line: 198, column: 24)
!16488 = distinct !DILexicalBlock(scope: !16473, file: !2359, line: 198, column: 2)
!16489 = !DILocation(line: 199, column: 23, scope: !16487)
!16490 = !DILocation(line: 0, scope: !16160, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 198, column: 2, scope: !16488)
!16492 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16491)
!16493 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16491)
!16494 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16491)
!16495 = !DILocation(line: 0, scope: !16174, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16491)
!16497 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16496)
!16498 = !DILocation(line: 199, column: 21, scope: !16487)
!16499 = !DILocation(line: 202, column: 2, scope: !16468)
!16500 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2359, file: !2359, line: 205, type: !16193, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16501)
!16501 = !{!16502, !16503, !16505}
!16502 = !DILocalVariable(name: "ret", scope: !16500, file: !2359, line: 207, type: !763)
!16503 = !DILocalVariable(name: "__i", scope: !16504, file: !2359, line: 209, type: !16059)
!16504 = distinct !DILexicalBlock(scope: !16500, file: !2359, line: 209, column: 2)
!16505 = !DILocalVariable(name: "__key", scope: !16504, file: !2359, line: 209, type: !16059)
!16506 = !DILocation(line: 0, scope: !16500)
!16507 = !DILocation(line: 0, scope: !16504)
!16508 = !DILocation(line: 0, scope: !16087, inlinedAt: !16509)
!16509 = distinct !DILocation(line: 209, column: 2, scope: !16504)
!16510 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16511)
!16511 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16509)
!16512 = !DILocation(line: 0, scope: !16096, inlinedAt: !16511)
!16513 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16509)
!16514 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16509)
!16515 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16509)
!16516 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16509)
!16517 = !DILocation(line: 210, column: 9, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16519, file: !2359, line: 209, column: 24)
!16519 = distinct !DILexicalBlock(scope: !16504, file: !2359, line: 209, column: 2)
!16520 = !DILocation(line: 0, scope: !16160, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 209, column: 2, scope: !16519)
!16522 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16521)
!16523 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16521)
!16524 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16521)
!16525 = !DILocation(line: 0, scope: !16174, inlinedAt: !16526)
!16526 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16521)
!16527 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16526)
!16528 = !DILocation(line: 212, column: 2, scope: !16500)
!16529 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2359, file: !2359, line: 215, type: !10772, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16530)
!16530 = !{!16531, !16532, !16533, !16535, !16536, !16539, !16540}
!16531 = !DILocalVariable(name: "ticks", arg: 1, scope: !16529, file: !2359, line: 215, type: !763)
!16532 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16529, file: !2359, line: 215, type: !345)
!16533 = !DILocalVariable(name: "__i", scope: !16534, file: !2359, line: 217, type: !16059)
!16534 = distinct !DILexicalBlock(scope: !16529, file: !2359, line: 217, column: 2)
!16535 = !DILocalVariable(name: "__key", scope: !16534, file: !2359, line: 217, type: !16059)
!16536 = !DILocalVariable(name: "next_to", scope: !16537, file: !2359, line: 218, type: !119)
!16537 = distinct !DILexicalBlock(scope: !16538, file: !2359, line: 217, column: 24)
!16538 = distinct !DILexicalBlock(scope: !16534, file: !2359, line: 217, column: 2)
!16539 = !DILocalVariable(name: "sooner", scope: !16537, file: !2359, line: 219, type: !345)
!16540 = !DILocalVariable(name: "imminent", scope: !16537, file: !2359, line: 221, type: !345)
!16541 = !DILocation(line: 0, scope: !16529)
!16542 = !DILocation(line: 0, scope: !16534)
!16543 = !DILocation(line: 0, scope: !16087, inlinedAt: !16544)
!16544 = distinct !DILocation(line: 217, column: 2, scope: !16534)
!16545 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16546)
!16546 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16544)
!16547 = !DILocation(line: 0, scope: !16096, inlinedAt: !16546)
!16548 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16544)
!16549 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16544)
!16550 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16544)
!16551 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16544)
!16552 = !DILocation(line: 218, column: 17, scope: !16537)
!16553 = !DILocation(line: 0, scope: !16537)
!16554 = !DILocation(line: 221, column: 27, scope: !16537)
!16555 = !DILocation(line: 233, column: 17, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16537, file: !2359, line: 233, column: 7)
!16557 = !DILocation(line: 234, column: 26, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16556, file: !2359, line: 233, column: 56)
!16559 = !DILocation(line: 234, column: 4, scope: !16558)
!16560 = !DILocation(line: 235, column: 3, scope: !16558)
!16561 = !DILocation(line: 0, scope: !16160, inlinedAt: !16562)
!16562 = distinct !DILocation(line: 217, column: 2, scope: !16538)
!16563 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16562)
!16564 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16562)
!16565 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16562)
!16566 = !DILocation(line: 0, scope: !16174, inlinedAt: !16567)
!16567 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16562)
!16568 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16567)
!16569 = !DILocation(line: 237, column: 1, scope: !16529)
!16570 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2359, file: !2359, line: 239, type: !16571, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16573)
!16571 = !DISubroutineType(types: !16572)
!16572 = !{null, !763}
!16573 = !{!16574, !16575, !16576, !16578}
!16574 = !DILocalVariable(name: "ticks", arg: 1, scope: !16570, file: !2359, line: 239, type: !763)
!16575 = !DILocalVariable(name: "key", scope: !16570, file: !2359, line: 245, type: !16059)
!16576 = !DILocalVariable(name: "t", scope: !16577, file: !2359, line: 262, type: !2332)
!16577 = distinct !DILexicalBlock(scope: !16570, file: !2359, line: 261, column: 67)
!16578 = !DILocalVariable(name: "dt", scope: !16577, file: !2359, line: 263, type: !119)
!16579 = !DILocation(line: 0, scope: !16570)
!16580 = !DILocation(line: 242, column: 2, scope: !16570)
!16581 = !DILocation(line: 0, scope: !16087, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 245, column: 25, scope: !16570)
!16583 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16582)
!16585 = !DILocation(line: 0, scope: !16096, inlinedAt: !16584)
!16586 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16582)
!16587 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16582)
!16588 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16582)
!16589 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16582)
!16590 = !DILocation(line: 261, column: 9, scope: !16570)
!16591 = !DILocation(line: 261, column: 17, scope: !16570)
!16592 = !DILocation(line: 261, column: 25, scope: !16570)
!16593 = !DILocation(line: 261, column: 37, scope: !16570)
!16594 = !DILocation(line: 261, column: 47, scope: !16570)
!16595 = !DILocation(line: 261, column: 44, scope: !16570)
!16596 = !DILocation(line: 261, column: 2, scope: !16570)
!16597 = !DILocation(line: 0, scope: !16577)
!16598 = !DILocation(line: 263, column: 12, scope: !16577)
!16599 = !DILocation(line: 265, column: 16, scope: !16577)
!16600 = !DILocation(line: 265, column: 13, scope: !16577)
!16601 = !DILocation(line: 266, column: 13, scope: !16577)
!16602 = !DILocation(line: 267, column: 3, scope: !16577)
!16603 = !DILocation(line: 0, scope: !16160, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 269, column: 3, scope: !16577)
!16605 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16604)
!16606 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16604)
!16607 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16604)
!16608 = !DILocation(line: 0, scope: !16174, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16604)
!16610 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16609)
!16611 = !DILocation(line: 270, column: 6, scope: !16577)
!16612 = !DILocation(line: 270, column: 3, scope: !16577)
!16613 = !DILocation(line: 0, scope: !16087, inlinedAt: !16614)
!16614 = distinct !DILocation(line: 271, column: 9, scope: !16577)
!16615 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16616)
!16616 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16614)
!16617 = !DILocation(line: 0, scope: !16096, inlinedAt: !16616)
!16618 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16614)
!16619 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16614)
!16620 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16614)
!16621 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16614)
!16622 = !DILocation(line: 272, column: 22, scope: !16577)
!16623 = distinct !{!16623, !16596, !16624}
!16624 = !DILocation(line: 273, column: 2, scope: !16570)
!16625 = !DILocation(line: 276, column: 19, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16627, file: !2359, line: 275, column: 23)
!16627 = distinct !DILexicalBlock(scope: !16570, file: !2359, line: 275, column: 6)
!16628 = !DILocation(line: 277, column: 2, scope: !16626)
!16629 = !DILocation(line: 279, column: 15, scope: !16570)
!16630 = !DILocation(line: 279, column: 12, scope: !16570)
!16631 = !DILocation(line: 280, column: 21, scope: !16570)
!16632 = !DILocation(line: 282, column: 24, scope: !16570)
!16633 = !DILocation(line: 282, column: 2, scope: !16570)
!16634 = !DILocation(line: 0, scope: !16160, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 284, column: 2, scope: !16570)
!16636 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16635)
!16637 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16635)
!16638 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16635)
!16639 = !DILocation(line: 0, scope: !16174, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16635)
!16641 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16640)
!16642 = !DILocation(line: 285, column: 1, scope: !16570)
!16643 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2359, file: !2359, line: 287, type: !16644, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16646)
!16644 = !DISubroutineType(types: !16645)
!16645 = !{!116}
!16646 = !{!16647, !16648, !16650}
!16647 = !DILocalVariable(name: "t", scope: !16643, file: !2359, line: 289, type: !120)
!16648 = !DILocalVariable(name: "__i", scope: !16649, file: !2359, line: 291, type: !16059)
!16649 = distinct !DILexicalBlock(scope: !16643, file: !2359, line: 291, column: 2)
!16650 = !DILocalVariable(name: "__key", scope: !16649, file: !2359, line: 291, type: !16059)
!16651 = !DILocation(line: 0, scope: !16643)
!16652 = !DILocation(line: 0, scope: !16649)
!16653 = !DILocation(line: 0, scope: !16087, inlinedAt: !16654)
!16654 = distinct !DILocation(line: 291, column: 2, scope: !16649)
!16655 = !DILocation(line: 55, column: 2, scope: !16096, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 145, column: 10, scope: !16087, inlinedAt: !16654)
!16657 = !DILocation(line: 0, scope: !16096, inlinedAt: !16656)
!16658 = !DILocation(line: 148, column: 2, scope: !16104, inlinedAt: !16654)
!16659 = !DILocation(line: 148, column: 2, scope: !16105, inlinedAt: !16654)
!16660 = !DILocation(line: 148, column: 2, scope: !16108, inlinedAt: !16654)
!16661 = !DILocation(line: 160, column: 2, scope: !16087, inlinedAt: !16654)
!16662 = !DILocation(line: 292, column: 7, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16664, file: !2359, line: 291, column: 24)
!16664 = distinct !DILexicalBlock(scope: !16649, file: !2359, line: 291, column: 2)
!16665 = !DILocation(line: 292, column: 19, scope: !16663)
!16666 = !DILocation(line: 0, scope: !16160, inlinedAt: !16667)
!16667 = distinct !DILocation(line: 291, column: 2, scope: !16664)
!16668 = !DILocation(line: 194, column: 2, scope: !16168, inlinedAt: !16667)
!16669 = !DILocation(line: 194, column: 2, scope: !16169, inlinedAt: !16667)
!16670 = !DILocation(line: 194, column: 2, scope: !16172, inlinedAt: !16667)
!16671 = !DILocation(line: 0, scope: !16174, inlinedAt: !16672)
!16672 = distinct !DILocation(line: 215, column: 2, scope: !16160, inlinedAt: !16667)
!16673 = !DILocation(line: 95, column: 2, scope: !16174, inlinedAt: !16672)
!16674 = !DILocation(line: 292, column: 17, scope: !16663)
!16675 = !DILocation(line: 294, column: 2, scope: !16643)
!16676 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2359, file: !2359, line: 297, type: !3191, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !2022)
!16677 = !DILocation(line: 300, column: 19, scope: !16676)
!16678 = !DILocation(line: 300, column: 9, scope: !16676)
!16679 = !DILocation(line: 300, column: 2, scope: !16676)
!16680 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2359, file: !2359, line: 306, type: !16644, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !2022)
!16681 = !DILocation(line: 308, column: 9, scope: !16680)
!16682 = !DILocation(line: 308, column: 2, scope: !16680)
!16683 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2359, file: !2359, line: 319, type: !6410, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16684)
!16684 = !{!16685, !16686, !16687, !16688}
!16685 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16683, file: !2359, line: 319, type: !118)
!16686 = !DILocalVariable(name: "start_cycles", scope: !16683, file: !2359, line: 328, type: !118)
!16687 = !DILocalVariable(name: "cycles_to_wait", scope: !16683, file: !2359, line: 331, type: !118)
!16688 = !DILocalVariable(name: "current_cycles", scope: !16689, file: !2359, line: 338, type: !118)
!16689 = distinct !DILexicalBlock(scope: !16690, file: !2359, line: 337, column: 11)
!16690 = distinct !DILexicalBlock(scope: !16691, file: !2359, line: 337, column: 2)
!16691 = distinct !DILexicalBlock(scope: !16683, file: !2359, line: 337, column: 2)
!16692 = !DILocation(line: 0, scope: !16683)
!16693 = !DILocation(line: 322, column: 19, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16683, file: !2359, line: 322, column: 6)
!16695 = !DILocation(line: 322, column: 6, scope: !16683)
!16696 = !DILocation(line: 328, column: 26, scope: !16683)
!16697 = !DILocation(line: 333, column: 43, scope: !16683)
!16698 = !DILocation(line: 337, column: 2, scope: !16683)
!16699 = !DILocation(line: 338, column: 29, scope: !16689)
!16700 = !DILocation(line: 0, scope: !16689)
!16701 = !DILocation(line: 341, column: 23, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16689, file: !2359, line: 341, column: 7)
!16703 = !DILocation(line: 341, column: 39, scope: !16702)
!16704 = !DILocation(line: 349, column: 1, scope: !16683)
!16705 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3191, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !2022)
!16706 = !DILocation(line: 1677, column: 9, scope: !16705)
!16707 = !DILocation(line: 1677, column: 2, scope: !16705)
!16708 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3279, file: !3279, line: 24, type: !3191, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !2022)
!16709 = !DILocation(line: 26, column: 9, scope: !16708)
!16710 = !DILocation(line: 26, column: 2, scope: !16708)
!16711 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2359, file: !2359, line: 364, type: !16712, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !16714)
!16712 = !DISubroutineType(types: !16713)
!16713 = !{!120, !16049}
!16714 = !{!16715, !16716}
!16715 = !DILocalVariable(name: "timeout", arg: 1, scope: !16711, file: !2359, line: 364, type: !16049)
!16716 = !DILocalVariable(name: "dt", scope: !16711, file: !2359, line: 366, type: !114)
!16717 = !DILocation(line: 0, scope: !16711)
!16718 = !DILocation(line: 368, column: 6, scope: !16711)
!16719 = !DILocation(line: 371, column: 10, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16721, file: !2359, line: 370, column: 47)
!16721 = distinct !DILexicalBlock(scope: !16722, file: !2359, line: 370, column: 13)
!16722 = distinct !DILexicalBlock(scope: !16711, file: !2359, line: 368, column: 6)
!16723 = !DILocation(line: 371, column: 3, scope: !16720)
!16724 = !DILocation(line: 376, column: 58, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16726, file: !2359, line: 376, column: 7)
!16726 = distinct !DILexicalBlock(scope: !16721, file: !2359, line: 372, column: 9)
!16727 = !DILocation(line: 376, column: 7, scope: !16726)
!16728 = !DILocation(line: 376, column: 43, scope: !16725)
!16729 = !DILocation(line: 377, column: 4, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16725, file: !2359, line: 376, column: 64)
!16731 = !DILocation(line: 379, column: 10, scope: !16726)
!16732 = !DILocation(line: 379, column: 33, scope: !16726)
!16733 = !DILocation(line: 379, column: 31, scope: !16726)
!16734 = !DILocation(line: 379, column: 3, scope: !16726)
!16735 = !DILocation(line: 0, scope: !16722)
!16736 = !DILocation(line: 381, column: 1, scope: !16711)
!16737 = distinct !DISubprogram(name: "boot_banner", scope: !16738, file: !16738, line: 26, type: !2953, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2939, retainedNodes: !2022)
!16738 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16739 = !DILocation(line: 34, column: 2, scope: !16737)
!16740 = !DILocation(line: 36, column: 1, scope: !16737)
