; ModuleID = 'build/96b_argonkey/subsys/zbus/hello_world/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%struct._thread_arch = type { i32, i32 }
%struct.version_msg = type { i8, i8, i16 }
%struct.zbus_observer = type { i8*, i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.zbus_channel = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231533 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231513 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231503 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231603 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231593 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231583 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231573 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231563 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231553 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231543 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233496 to i8*), void (i8*)* inttoptr (i32 134231523 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [53 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_subscriber_task_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_acc_data_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_simple_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_bar_sub to i8*), i8* bitcast (%struct.zbus_channel* @acc_data_chan to i8*), i8* bitcast (%struct.zbus_observer* @bar_sub to i8*), i8* bitcast (%struct.zbus_observer* @foo_lis to i8*), i8* bitcast (%struct.zbus_channel* @simple_chan to i8*), i8* bitcast (%struct.zbus_channel* @version_chan to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !25
@.str = private unnamed_addr constant [13 x i8] c"version_chan\00", align 1
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 2 }, align 2, !dbg !358
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer*] zeroinitializer, align 4, !dbg !365
@version_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer** getelementptr inbounds ([1 x %struct.zbus_observer*], [1 x %struct.zbus_observer*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !112
@_zbus_mutex_acc_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_acc_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_acc_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_acc_data_chan", align 4, !dbg !295
@.str.1 = private unnamed_addr constant [14 x i8] c"acc_data_chan\00", align 1
@_zbus_message_acc_data_chan = internal global %struct._thread_stack_info zeroinitializer, align 4, !dbg !370
@_zbus_observers_acc_data_chan = internal constant [3 x %struct.zbus_observer*] [%struct.zbus_observer* @foo_lis, %struct.zbus_observer* @bar_sub, %struct.zbus_observer* null], align 4, !dbg !377
@acc_data_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i16 12, i8* null, i8* bitcast (%struct._thread_stack_info* @_zbus_message_acc_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_acc_data_chan, %struct.zbus_observer** getelementptr inbounds ([3 x %struct.zbus_observer*], [3 x %struct.zbus_observer*]* @_zbus_observers_acc_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.acc_data_chan", align 4, !dbg !297
@_zbus_mutex_simple_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_simple_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_simple_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_simple_chan", align 4, !dbg !299
@.str.2 = private unnamed_addr constant [12 x i8] c"simple_chan\00", align 1
@_zbus_message_simple_chan = internal global i32 0, align 4, !dbg !382
@_zbus_observers_simple_chan = internal constant [1 x %struct.zbus_observer*] zeroinitializer, align 4, !dbg !384
@simple_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i16 4, i8* null, i8* bitcast (i32* @_zbus_message_simple_chan to i8*), i1 (i8*, i32)* @simple_chan_validator, %struct.k_mutex* @_zbus_mutex_simple_chan, %struct.zbus_observer** getelementptr inbounds ([1 x %struct.zbus_observer*], [1 x %struct.zbus_observer*]* @_zbus_observers_simple_chan, i32 0, i32 0) }, section "._zbus_channel.static.simple_chan", align 4, !dbg !301
@.str.3 = private unnamed_addr constant [8 x i8] c"foo_lis\00", align 1
@foo_lis = dso_local global %struct.zbus_observer { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @listener_callback_example }, section "._zbus_observer.static.foo_lis", align 4, !dbg !303
@_zbus_observer_queue_bar_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_bar_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_bar_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_bar_sub", align 4, !dbg !305
@_k_fifo_buf__zbus_observer_queue_bar_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !344
@.str.4 = private unnamed_addr constant [8 x i8] c"bar_sub\00", align 1
@bar_sub = dso_local global %struct.zbus_observer { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8 1, %struct.k_msgq* @_zbus_observer_queue_bar_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.bar_sub", align 4, !dbg !307
@_k_thread_obj_subscriber_task_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !354
@_k_thread_stack_subscriber_task_id = dso_local global [576 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !349
@.str.5 = private unnamed_addr constant [19 x i8] c"subscriber_task_id\00", align 1
@_k_thread_data_subscriber_task_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_subscriber_task_id, %struct.z_thread_stack_element* getelementptr inbounds ([576 x %struct.z_thread_stack_element], [576 x %struct.z_thread_stack_element]* @_k_thread_stack_subscriber_task_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @subscriber_task to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_subscriber_task_id", align 4, !dbg !309
@subscriber_task_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_subscriber_task_id, align 4, !dbg !340
@__const.main.acc1 = private unnamed_addr constant %struct._thread_stack_info { i32 1, i32 1, i32 1 }, align 4
@.str.6 = private unnamed_addr constant [58 x i8] c"%c: Sensor sample started raw reading, version %u.%u-%u!\0A\00", align 1
@count = internal unnamed_addr global i32 0, align 4, !dbg !356
@.str.7 = private unnamed_addr constant [19 x i8] c"%c: Channel list:\0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"%c: Observers list:\0A\00", align 1
@.str.9 = private unnamed_addr constant [65 x i8] c"%c: Pub a valid value to a channel with validator successfully.\0A\00", align 1
@.str.10 = private unnamed_addr constant [68 x i8] c"%c: Pub an invalid value to a channel with validator successfully.\0A\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"%c: From listener -> Acc x=%d, y=%d, z=%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"%c: From subscriber -> Acc x=%d, y=%d, z=%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"%c: %d - Channel %s:\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"%c:       Message size: %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"%c:       Observers:\0A\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"%c:       - %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"%c: %d - %s %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"Subscriber\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"Listener\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !386
@.str.1.22 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !410
@.str.25 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !420
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !470
@.str.30 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.32 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.33 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.31 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.35 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.36 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.37 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.38 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.39 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.40 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.64 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.59 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.60 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.61 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.62 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.63 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.54 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.55 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.48 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.56 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.57 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.58 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.53 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.47 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.49 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.50 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.51 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.52 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.43 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.44 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.45 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !499
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !628
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !505
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !637
@.str.76 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !673
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.89, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !683
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !688
@.str.88 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.89 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.90 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !708
@.str.1.94 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@_zbus_channel_list_start = external dso_local global [0 x %struct.zbus_channel], align 4
@_zbus_channel_list_end = external dso_local global [0 x %struct.zbus_channel], align 4
@_zbus_observer_list_start = external dso_local global [0 x %struct.zbus_observer], align 4
@_zbus_observer_list_end = external dso_local global [0 x %struct.zbus_observer], align 4
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !720
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !912
@.str.103 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !874
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !857
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.103, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !830
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !846
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !876
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !889
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !891
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !893
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !895
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !897
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !899
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !901
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !903
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !905
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !907
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !917
@.str.105 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !942
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1037
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1026
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1078
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !937
@.str.114 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1144
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1425
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1395
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1381
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1323
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !935
@.str.1.115 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1427
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1399
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1397
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1337
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !933
@.str.2.116 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1440
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1403
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1401
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1346
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !931
@.str.3.117 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1442
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1407
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1405
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1355
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !929
@.str.4.118 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1444
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1411
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1409
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1361
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !927
@.str.5.119 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1446
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1415
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1413
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1367
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !925
@.str.6.120 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1448
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1419
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1417
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !923
@.str.7.121 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1450
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1423
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1421
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1379
@.str.125 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.125, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1452
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.1.128 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1608
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1663
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1606
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1665
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.128, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1597
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1599
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1652
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1655
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1657
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1660
@.str.2.130 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.133 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.135 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.136 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1010
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1676
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1783
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1785
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1781
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1752
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1787
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1321
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1335
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1344
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1353
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1359
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1365
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1377
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1877
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1918
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1921
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1926
@.str.171 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.175 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.176 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.177 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.181 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.182 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.183 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.184 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.185 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.180 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.179 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.181, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.182, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.183, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.184, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.185, i32 0, i32 0)], align 4
@.str.187 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.187, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1933
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2155
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2142
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2150
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2162
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2167
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.196 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.202, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.203, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.204, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.205, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.206, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.207, i32 0, i32 0)], align 4, !dbg !2195
@.str.201 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.202 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.203 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.204 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.205 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.206 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.200 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.207 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2307
@.str.8.199 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2320
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2428
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2536
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2539
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2541
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2160
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2152
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2543
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2579
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2020
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2577
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2582
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3331 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3333, !srcloc !3334
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3335, !srcloc !3336
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3337, !srcloc !3338
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #26, !dbg !3339, !srcloc !3340
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3341, !srcloc !3342
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3343, !srcloc !3344
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #26, !dbg !3345, !srcloc !3346
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3347, !srcloc !3348
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #26, !dbg !3349, !srcloc !3350
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3351, !srcloc !3352
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3353, !srcloc !3354
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3355, !srcloc !3356
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3357, !srcloc !3358
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3359, !srcloc !3360
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3361, !srcloc !3362
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3363, !srcloc !3364
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3365, !srcloc !3366
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3367, !srcloc !3368
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3369, !srcloc !3370
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3371, !srcloc !3372
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3373, !srcloc !3374
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3375, !srcloc !3376
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3377, !srcloc !3378
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3379, !srcloc !3380
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3381, !srcloc !3382
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3383, !srcloc !3384
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3385, !srcloc !3386
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3387, !srcloc !3390
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3391, !srcloc !3392
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3393, !srcloc !3394
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3395, !srcloc !3396
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3397, !srcloc !3398
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3403, !srcloc !3404
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3405, !srcloc !3406
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3407, !srcloc !3408
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3409, !srcloc !3410
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3411, !srcloc !3412
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3413, !srcloc !3414
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3437, !srcloc !3438
  ret void, !dbg !3439
}

; Function Attrs: noinline nounwind optsize
define internal void @listener_callback_example(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3442 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3444, metadata !DIExpression()), !dbg !3448
  %2 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #27, !dbg !3449
  call void @llvm.dbg.value(metadata i8* %2, metadata !3445, metadata !DIExpression()), !dbg !3448
  %3 = bitcast i8* %2 to i32*, !dbg !3450
  %4 = load i32, i32* %3, align 4, !dbg !3450
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3450
  %6 = bitcast i8* %5 to i32*, !dbg !3450
  %7 = load i32, i32* %6, align 4, !dbg !3450
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3450
  %9 = bitcast i8* %8 to i32*, !dbg !3450
  %10 = load i32, i32* %9, align 4, !dbg !3450
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i32 0, i32 0), i32 noundef 73, i32 noundef %4, i32 noundef %7, i32 noundef %10) #28, !dbg !3450
  ret void, !dbg !3455
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3456 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3460, metadata !DIExpression()), !dbg !3461
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !3462
  %3 = load i8*, i8** %2, align 4, !dbg !3462
  ret i8* %3, !dbg !3463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal zeroext i1 @simple_chan_validator(i8* nocapture noundef readonly %0, i32 noundef %1) #3 !dbg !3464 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3466, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %1, metadata !3467, metadata !DIExpression()), !dbg !3470
  %3 = bitcast i8* %0 to i32*, !dbg !3471
  call void @llvm.dbg.value(metadata i32* %3, metadata !3468, metadata !DIExpression()), !dbg !3470
  %4 = load i32, i32* %3, align 4, !dbg !3472
  %5 = icmp ult i32 %4, 10, !dbg !3474
  ret i1 %5, !dbg !3475
}

; Function Attrs: noinline nounwind optsize
define internal void @subscriber_task() #1 !dbg !3476 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct._thread_stack_info, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3481
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3481
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3478, metadata !DIExpression(DW_OP_deref)), !dbg !3482
  %4 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @bar_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #28, !dbg !3483
  %5 = icmp eq i32 %4, 0, !dbg !3484
  br i1 %5, label %6, label %24, !dbg !3485

6:                                                ; preds = %0
  %7 = bitcast %struct._thread_stack_info* %2 to i8*
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2
  br label %11, !dbg !3485

11:                                               ; preds = %6, %21
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #26, !dbg !3486
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !3479, metadata !DIExpression()), !dbg !3487
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3488
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !3478, metadata !DIExpression()), !dbg !3482
  %13 = icmp eq %struct.zbus_channel* %12, @acc_data_chan, !dbg !3490
  br i1 %13, label %14, label %21, !dbg !3491

14:                                               ; preds = %11
  %15 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #27, !dbg !3492
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !3494
  %17 = call i32 @zbus_chan_read(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %7, [1 x i64] %16) #28, !dbg !3494
  %18 = load i32, i32* %8, align 4, !dbg !3495
  %19 = load i32, i32* %9, align 4, !dbg !3495
  %20 = load i32, i32* %10, align 4, !dbg !3495
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i32 0, i32 0), i32 noundef 73, i32 noundef %18, i32 noundef %19, i32 noundef %20) #28, !dbg !3495
  br label %21, !dbg !3500

21:                                               ; preds = %14, %11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #26, !dbg !3501
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3478, metadata !DIExpression(DW_OP_deref)), !dbg !3482
  %22 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @bar_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #28, !dbg !3483
  %23 = icmp eq i32 %22, 0, !dbg !3484
  br i1 %23, label %11, label %24, !dbg !3485, !llvm.loop !3502

24:                                               ; preds = %21, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3503
  ret void, !dbg !3503
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !3504 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3509, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.value(metadata i64 %0, metadata !3511, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 1000, metadata !3516, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 10000, metadata !3517, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 1, metadata !3518, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 0, metadata !3519, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 1, metadata !3520, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 0, metadata !3521, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 1, metadata !3522, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 0, metadata !3523, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i64 0, metadata !3524, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i64 0, metadata !3524, metadata !DIExpression()), !dbg !3528
  %2 = mul i64 %0, 10, !dbg !3530
  ret i64 %2, !dbg !3536
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3537 {
  %1 = alloca i32, align 4
  %2 = alloca %struct._thread_stack_info, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3545
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3545
  %4 = bitcast %struct._thread_stack_info* %2 to i8*, !dbg !3546
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !3546
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !3541, metadata !DIExpression()), !dbg !3547
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %4, i8* noundef nonnull align 4 dereferenceable(12) bitcast (%struct._thread_stack_info* @__const.main.acc1 to i8*), i32 12, i1 false), !dbg !3547
  %5 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef nonnull @version_chan) #27, !dbg !3548
  call void @llvm.dbg.value(metadata i8* %5, metadata !3542, metadata !DIExpression()), !dbg !3549
  %6 = load i8, i8* %5, align 2, !dbg !3550
  %7 = zext i8 %6 to i32, !dbg !3550
  %8 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !3550
  %9 = load i8, i8* %8, align 1, !dbg !3550
  %10 = zext i8 %9 to i32, !dbg !3550
  %11 = getelementptr inbounds i8, i8* %5, i32 2, !dbg !3550
  %12 = bitcast i8* %11 to i16*, !dbg !3550
  %13 = load i16, i16* %12, align 2, !dbg !3550
  %14 = zext i16 %13 to i32, !dbg !3550
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i32 0, i32 0), i32 noundef 73, i32 noundef %7, i32 noundef %10, i32 noundef %14) #28, !dbg !3550
  store i32 0, i32* @count, align 4, !dbg !3555
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0), i32 noundef 73) #28, !dbg !3556
  %15 = tail call zeroext i1 @zbus_iterate_over_channels(i1 (%struct.zbus_channel*)* noundef nonnull @print_channel_data_iterator) #28, !dbg !3561
  store i32 0, i32* @count, align 4, !dbg !3562
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i32 noundef 73) #28, !dbg !3563
  %16 = tail call zeroext i1 @zbus_iterate_over_observers(i1 (%struct.zbus_observer*)* noundef nonnull @print_observer_data_iterator) #28, !dbg !3568
  %17 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #27, !dbg !3569
  %18 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !3570
  %19 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %4, [1 x i64] %18) #28, !dbg !3570
  call fastcc void @k_msleep() #27, !dbg !3571
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !3572
  store i32 2, i32* %20, align 4, !dbg !3573
  %21 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !3574
  store i32 2, i32* %21, align 4, !dbg !3575
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !3576
  store i32 2, i32* %22, align 4, !dbg !3577
  %23 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %4, [1 x i64] %18) #28, !dbg !3578
  call void @llvm.dbg.value(metadata i32 5, metadata !3540, metadata !DIExpression()), !dbg !3549
  store i32 5, i32* %1, align 4, !dbg !3579
  %24 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #27, !dbg !3580
  %25 = insertvalue [1 x i64] poison, i64 %24, 0, !dbg !3581
  call void @llvm.dbg.value(metadata i32* %1, metadata !3540, metadata !DIExpression(DW_OP_deref)), !dbg !3549
  %26 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @simple_chan, i8* noundef nonnull %3, [1 x i64] %25) #28, !dbg !3581
  call void @llvm.dbg.value(metadata i32 %26, metadata !3539, metadata !DIExpression()), !dbg !3549
  %27 = icmp eq i32 %26, 0, !dbg !3582
  br i1 %27, label %28, label %29, !dbg !3584

28:                                               ; preds = %0
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.9, i32 0, i32 0), i32 noundef 73) #28, !dbg !3585
  br label %29, !dbg !3591

29:                                               ; preds = %28, %0
  call void @llvm.dbg.value(metadata i32 15, metadata !3540, metadata !DIExpression()), !dbg !3549
  store i32 15, i32* %1, align 4, !dbg !3592
  call void @llvm.dbg.value(metadata i32* %1, metadata !3540, metadata !DIExpression(DW_OP_deref)), !dbg !3549
  %30 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @simple_chan, i8* noundef nonnull %3, [1 x i64] %25) #28, !dbg !3593
  call void @llvm.dbg.value(metadata i32 %30, metadata !3539, metadata !DIExpression()), !dbg !3549
  %31 = icmp eq i32 %30, -35, !dbg !3594
  br i1 %31, label %32, label %33, !dbg !3596

32:                                               ; preds = %29
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.10, i32 0, i32 0), i32 noundef 73) #28, !dbg !3597
  br label %33, !dbg !3603

33:                                               ; preds = %32, %29
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !3604
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3604
  ret void, !dbg !3604
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal zeroext i1 @print_channel_data_iterator(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3605 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3609, metadata !DIExpression()), !dbg !3612
  %2 = load i32, i32* @count, align 4, !dbg !3613
  %3 = tail call fastcc i8* @zbus_chan_name(%struct.zbus_channel* noundef %0) #27, !dbg !3613
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), i32 noundef 73, i32 noundef %2, i8* noundef %3) #28, !dbg !3613
  %4 = tail call fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* noundef %0) #27, !dbg !3618
  %5 = zext i16 %4 to i32, !dbg !3618
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0), i32 noundef 73, i32 noundef %5) #28, !dbg !3618
  %6 = load i32, i32* @count, align 4, !dbg !3623
  %7 = add nsw i32 %6, 1, !dbg !3623
  store i32 %7, i32* @count, align 4, !dbg !3623
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i32 0, i32 0), i32 noundef 73) #28, !dbg !3624
  %8 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 6, !dbg !3629
  %9 = load %struct.zbus_observer**, %struct.zbus_observer*** %8, align 4, !dbg !3629
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %9, metadata !3610, metadata !DIExpression()), !dbg !3630
  %10 = load %struct.zbus_observer*, %struct.zbus_observer** %9, align 4, !dbg !3631
  %11 = icmp eq %struct.zbus_observer* %10, null, !dbg !3633
  br i1 %11, label %12, label %13, !dbg !3634

12:                                               ; preds = %13, %1
  ret i1 true, !dbg !3635

13:                                               ; preds = %1, %13
  %14 = phi %struct.zbus_observer* [ %19, %13 ], [ %10, %1 ]
  %15 = phi %struct.zbus_observer** [ %18, %13 ], [ %9, %1 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %15, metadata !3610, metadata !DIExpression()), !dbg !3630
  %16 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %14, i32 0, i32 0, !dbg !3636
  %17 = load i8*, i8** %16, align 4, !dbg !3636
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i32 noundef 73, i8* noundef %17) #28, !dbg !3636
  %18 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %15, i32 1, !dbg !3642
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !3610, metadata !DIExpression()), !dbg !3630
  %19 = load %struct.zbus_observer*, %struct.zbus_observer** %18, align 4, !dbg !3631
  %20 = icmp eq %struct.zbus_observer* %19, null, !dbg !3633
  br i1 %20, label %12, label %13, !dbg !3634, !llvm.loop !3643
}

; Function Attrs: noinline nounwind optsize
define internal zeroext i1 @print_observer_data_iterator(%struct.zbus_observer* nocapture noundef readonly %0) #1 !dbg !3645 {
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !3649, metadata !DIExpression()), !dbg !3650
  %2 = load i32, i32* @count, align 4, !dbg !3651
  %3 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 2, !dbg !3651
  %4 = load %struct.k_msgq*, %struct.k_msgq** %3, align 4, !dbg !3651
  %5 = icmp eq %struct.k_msgq* %4, null, !dbg !3651
  %6 = select i1 %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), !dbg !3651
  %7 = tail call fastcc i8* @zbus_obs_name(%struct.zbus_observer* noundef %0) #27, !dbg !3651
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i32 noundef 73, i32 noundef %2, i8* noundef %6, i8* noundef %7) #28, !dbg !3651
  %8 = load i32, i32* @count, align 4, !dbg !3656
  %9 = add nsw i32 %8, 1, !dbg !3656
  store i32 %9, i32* @count, align 4, !dbg !3656
  ret i1 true, !dbg !3657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3658 {
  call void @llvm.dbg.value(metadata i32 1000, metadata !3662, metadata !DIExpression()), !dbg !3663
  %1 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #27, !dbg !3664
  %2 = insertvalue [1 x i64] poison, i64 %1, 0, !dbg !3665
  tail call fastcc void @k_sleep([1 x i64] %2) #27, !dbg !3665
  ret void, !dbg !3666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3667 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3676, metadata !DIExpression()), !dbg !3677
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3678, !srcloc !3680
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #28, !dbg !3681
  ret void, !dbg !3682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_obs_name(%struct.zbus_observer* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3683 {
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !3687, metadata !DIExpression()), !dbg !3688
  %2 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 0, !dbg !3689
  %3 = load i8*, i8** %2, align 4, !dbg !3689
  ret i8* %3, !dbg !3690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_name(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3691 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3695, metadata !DIExpression()), !dbg !3696
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !3697
  %3 = load i8*, i8** %2, align 4, !dbg !3697
  ret i8* %3, !dbg !3698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3699 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3703, metadata !DIExpression()), !dbg !3704
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !3705
  %3 = load i16, i16* %2, align 4, !dbg !3705
  ret i16 %3, !dbg !3706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3707 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %0, metadata !3718, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %1, metadata !3719, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %2, metadata !3720, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %3, metadata !3721, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %0, metadata !3723, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %0, metadata !3724, metadata !DIExpression()), !dbg !3785
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3786
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !3786
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3727, metadata !DIExpression()), !dbg !3787
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3788
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !3788
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3729, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.value(metadata i32 0, metadata !3730, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 0, metadata !3731, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 0, metadata !3732, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 -1, metadata !3733, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 0, metadata !3736, metadata !DIExpression()), !dbg !3785
  %12 = and i32 %2, 4, !dbg !3790
  %13 = icmp eq i32 %12, 0, !dbg !3791
  call void @llvm.dbg.value(metadata i1 %13, metadata !3737, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3785
  %14 = lshr i32 %2, 3, !dbg !3792
  %15 = and i32 %14, 7, !dbg !3792
  %16 = add nuw nsw i32 %15, 1, !dbg !3793
  call void @llvm.dbg.value(metadata i32 %16, metadata !3738, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 0, metadata !3739, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %0, metadata !3740, metadata !DIExpression()), !dbg !3785
  %17 = ptrtoint i8* %0 to i32, !dbg !3794
  %18 = and i32 %17, 3, !dbg !3796
  %19 = icmp eq i32 %18, 0, !dbg !3796
  br i1 %19, label %20, label %316, !dbg !3797

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3798
  call void @llvm.dbg.value(metadata i8* %21, metadata !3724, metadata !DIExpression()), !dbg !3785
  %22 = icmp eq i8* %0, null, !dbg !3799
  %23 = and i32 %1, 7, !dbg !3801
  %24 = sub nuw nsw i32 8, %23, !dbg !3801
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3801
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3801
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %27, metadata !3719, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %26, metadata !3724, metadata !DIExpression()), !dbg !3785
  br i1 %22, label %33, label %28, !dbg !3802

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3804
  %30 = sub i32 4, %17, !dbg !3804
  %31 = add i32 %30, %29, !dbg !3805
  %32 = icmp ugt i32 %31, %27, !dbg !3806
  br i1 %32, label %316, label %33, !dbg !3807

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3808
  call void @llvm.dbg.value(metadata i8* %34, metadata !3721, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %3, metadata !3735, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 4, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 4, metadata !3725, metadata !DIExpression()), !dbg !3785
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3809

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %42, metadata !3721, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %43, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %44, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %45, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %72, metadata !3733, metadata !DIExpression()), !dbg !3785
  br i1 %46, label %73, label %47, !dbg !3810

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3811
  %49 = zext i1 %48 to i32, !dbg !3815
  %50 = add nsw i32 %72, %49, !dbg !3815
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3815
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3815
  call void @llvm.dbg.value(metadata i32 %52, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %51, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3736, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %50, metadata !3733, metadata !DIExpression()), !dbg !3785
  br label %53, !dbg !3816

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %40, metadata !3721, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %58, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %57, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %56, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3736, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %54, metadata !3733, metadata !DIExpression()), !dbg !3785
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3817
  call void @llvm.dbg.value(metadata i8* %60, metadata !3721, metadata !DIExpression()), !dbg !3785
  %61 = load i8, i8* %60, align 1, !dbg !3819
  %62 = icmp eq i8 %61, 0, !dbg !3820
  br i1 %62, label %223, label %63, !dbg !3821, !llvm.loop !3822

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3810

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3825

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3736, metadata !DIExpression()), !dbg !3785
  %75 = add nsw i32 %72, -1, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %75, metadata !3733, metadata !DIExpression()), !dbg !3785
  br label %53, !dbg !3827

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3828

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 4, metadata !3725, metadata !DIExpression()), !dbg !3785
  br label %53, !dbg !3829

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 4, metadata !3725, metadata !DIExpression()), !dbg !3785
  br label %53, !dbg !3830

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3831
  %81 = icmp eq i8 %80, 108, !dbg !3833
  br i1 %81, label %82, label %109, !dbg !3834

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3835
  %84 = load i8, i8* %83, align 1, !dbg !3835
  %85 = icmp eq i8 %84, 108, !dbg !3838
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3839
  %89 = add i32 %88, 7, !dbg !3839
  %90 = and i32 %89, -8, !dbg !3839
  %91 = inttoptr i32 %90 to i8*, !dbg !3839
  %92 = inttoptr i32 %90 to double*, !dbg !3839
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3839
  %94 = load double, double* %92, align 8, !dbg !3839
  call void @llvm.dbg.value(metadata i8* %93, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 8, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 8, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata double %94, metadata !3753, metadata !DIExpression()), !dbg !3841
  %95 = ptrtoint i8* %43 to i32, !dbg !3842
  %96 = add i32 %95, 7, !dbg !3842
  %97 = and i32 %96, -8, !dbg !3842
  %98 = inttoptr i32 %97 to i8*, !dbg !3843
  call void @llvm.dbg.value(metadata i8* %98, metadata !3724, metadata !DIExpression()), !dbg !3785
  br i1 %22, label %104, label %99, !dbg !3844

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3845
  %101 = icmp ugt i32 %100, %194, !dbg !3849
  br i1 %101, label %316, label %102, !dbg !3850

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3851
  store double %94, double* %103, align 8, !dbg !3851
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3854
  call void @llvm.dbg.value(metadata i8* %105, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3736, metadata !DIExpression()), !dbg !3785
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3736, metadata !DIExpression()), !dbg !3785
  br label %53, !dbg !3855

107:                                              ; preds = %73, %73
  br label %109, !dbg !3856

108:                                              ; preds = %73
  br label %109, !dbg !3856

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3785
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3785
  call void @llvm.dbg.value(metadata i32 %113, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %112, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3736, metadata !DIExpression()), !dbg !3785
  %114 = ptrtoint i8* %43 to i32, !dbg !3856
  %115 = add i32 %114, -1, !dbg !3856
  %116 = add i32 %115, %112, !dbg !3856
  %117 = sub i32 0, %112, !dbg !3856
  %118 = and i32 %116, %117, !dbg !3856
  %119 = inttoptr i32 %118 to i8*, !dbg !3857
  call void @llvm.dbg.value(metadata i8* %119, metadata !3724, metadata !DIExpression()), !dbg !3785
  br i1 %22, label %124, label %120, !dbg !3858

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3860
  %122 = add i32 %121, %118, !dbg !3861
  %123 = icmp ugt i32 %122, %194, !dbg !3862
  br i1 %123, label %316, label %124, !dbg !3863

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3864

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3857
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3865
  call void @llvm.dbg.value(metadata i8* %127, metadata !3722, metadata !DIExpression()), !dbg !3785
  %128 = bitcast i8* %41 to i8**, !dbg !3865
  %129 = load i8*, i8** %128, align 4, !dbg !3865
  call void @llvm.dbg.value(metadata i8* %129, metadata !3735, metadata !DIExpression()), !dbg !3785
  br label %130, !dbg !3866

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3867
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3868
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3785
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3869
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3785
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3870
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3785
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3785
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3785
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3785
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3871
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %142, metadata !3719, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %141, metadata !3721, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %140, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %139, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %138, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %137, metadata !3730, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %136, metadata !3738, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %135, metadata !3731, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3736, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %133, metadata !3735, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %132, metadata !3733, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %131, metadata !3732, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.label(metadata !3784), !dbg !3873
  br i1 %22, label %146, label %144, !dbg !3874

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3875
  store i8* %133, i8** %145, align 4, !dbg !3878
  br label %146, !dbg !3879

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %147, metadata !3738, metadata !DIExpression()), !dbg !3785
  %148 = icmp sgt i32 %136, 0, !dbg !3881
  br i1 %148, label %152, label %149, !dbg !3882

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #27, !dbg !3883
  %151 = zext i1 %150 to i32, !dbg !3883
  br label %152, !dbg !3882

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3882
  %154 = icmp eq i32 %153, 0, !dbg !3882
  call void @llvm.dbg.value(metadata i1 %154, metadata !3762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3884
  call void @llvm.dbg.value(metadata i1 %36, metadata !3765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3884
  %155 = or i1 %36, %154, !dbg !3885
  br i1 %155, label %156, label %190, !dbg !3885

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3886
  %158 = sub i32 %157, %17, !dbg !3886
  %159 = lshr i32 %158, 2, !dbg !3887
  call void @llvm.dbg.value(metadata i32 %159, metadata !3766, metadata !DIExpression()), !dbg !3888
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3889
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3889
  br i1 %163, label %316, label %164, !dbg !3889

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3891

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3892
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3895
  store i8 %166, i8* %167, align 1, !dbg !3896
  %168 = trunc i32 %132 to i8, !dbg !3897
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3898
  store i8 %168, i8* %169, align 1, !dbg !3899
  br i1 %154, label %173, label %170, !dbg !3900

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3901
  store i8 %171, i8* %167, align 1, !dbg !3901
  %172 = add i32 %131, 1, !dbg !3904
  call void @llvm.dbg.value(metadata i32 %172, metadata !3732, metadata !DIExpression()), !dbg !3785
  br label %185, !dbg !3905

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %174, metadata !3731, metadata !DIExpression()), !dbg !3785
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3908

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %177, metadata !3719, metadata !DIExpression()), !dbg !3785
  br label %185, !dbg !3912

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3913

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3914
  call void @llvm.dbg.value(metadata i32 %180, metadata !3719, metadata !DIExpression()), !dbg !3785
  br label %185, !dbg !3917

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #28, !dbg !3918
  %183 = add i32 %142, 2, !dbg !3920
  %184 = add i32 %183, %182, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %184, metadata !3719, metadata !DIExpression()), !dbg !3785
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3785
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3785
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3785
  call void @llvm.dbg.value(metadata i32 %188, metadata !3719, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %187, metadata !3731, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %186, metadata !3732, metadata !DIExpression()), !dbg !3785
  %189 = add nuw nsw i32 %137, 1, !dbg !3922
  call void @llvm.dbg.value(metadata i32 undef, metadata !3719, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 undef, metadata !3730, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 undef, metadata !3731, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 undef, metadata !3732, metadata !DIExpression()), !dbg !3785
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3867
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3869
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3870
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3871
  call void @llvm.dbg.value(metadata i32 %194, metadata !3719, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %193, metadata !3730, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %192, metadata !3731, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %191, metadata !3732, metadata !DIExpression()), !dbg !3785
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3923
  call void @llvm.dbg.value(metadata i8* %195, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %143, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %141, metadata !3721, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %139, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %138, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3736, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %132, metadata !3733, metadata !DIExpression()), !dbg !3785
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3817
  call void @llvm.dbg.value(metadata i8* %196, metadata !3721, metadata !DIExpression()), !dbg !3785
  %197 = load i8, i8* %196, align 1, !dbg !3819
  %198 = icmp eq i8 %197, 0, !dbg !3820
  br i1 %198, label %223, label %63, !dbg !3821

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3924

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3925
  call void @llvm.dbg.value(metadata i8* %201, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 undef, metadata !3769, metadata !DIExpression()), !dbg !3926
  br i1 %22, label %216, label %202, !dbg !3927

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3925
  %204 = load i32, i32* %203, align 4, !dbg !3925
  call void @llvm.dbg.value(metadata i32 %204, metadata !3769, metadata !DIExpression()), !dbg !3926
  %205 = inttoptr i32 %118 to i32*, !dbg !3928
  store i32 %204, i32* %205, align 4, !dbg !3931
  br label %216, !dbg !3932

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3933
  %208 = add i32 %207, 7, !dbg !3933
  %209 = and i32 %208, -8, !dbg !3933
  %210 = inttoptr i32 %209 to i8*, !dbg !3933
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3933
  call void @llvm.dbg.value(metadata i8* %211, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i64 undef, metadata !3775, metadata !DIExpression()), !dbg !3934
  br i1 %22, label %216, label %212, !dbg !3935

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3933
  %214 = load i64, i64* %213, align 8, !dbg !3933
  call void @llvm.dbg.value(metadata i64 %214, metadata !3775, metadata !DIExpression()), !dbg !3934
  %215 = inttoptr i32 %118 to i64*, !dbg !3936
  store i64 %214, i64* %215, align 8, !dbg !3941
  br label %216, !dbg !3942

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3943
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3943
  call void @llvm.dbg.value(metadata i8* %218, metadata !3722, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %40, metadata !3721, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %219, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %113, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %112, metadata !3726, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8 poison, metadata !3736, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %72, metadata !3733, metadata !DIExpression()), !dbg !3785
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3817
  call void @llvm.dbg.value(metadata i8* %220, metadata !3721, metadata !DIExpression()), !dbg !3785
  %221 = load i8, i8* %220, align 1, !dbg !3819
  %222 = icmp eq i8 %221, 0, !dbg !3820
  br i1 %222, label %223, label %38, !dbg !3821

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3944
  %225 = ptrtoint i8* %224 to i32, !dbg !3945
  %226 = sub i32 %225, %17, !dbg !3945
  %227 = lshr i32 %226, 2, !dbg !3947
  %228 = icmp ugt i32 %226, 1023, !dbg !3948
  br i1 %228, label %316, label %229, !dbg !3949

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3950

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3951
  %232 = add i32 %231, %226, !dbg !3954
  br label %316, !dbg !3955

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3956
  store i8 %234, i8* %0, align 1, !dbg !3957
  %235 = trunc i32 %192 to i8, !dbg !3958
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3960
  store i8 %236, i8* %238, align 1, !dbg !3962
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3963
  store i8 %237, i8* %239, align 1, !dbg !3964
  %240 = trunc i32 %191 to i8, !dbg !3965
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3966
  store i8 %240, i8* %241, align 1, !dbg !3967
  %242 = icmp eq i32 %191, 0, !dbg !3968
  %243 = xor i1 %242, true, !dbg !3969
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3969
  call void @llvm.dbg.value(metadata i8* %224, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 0, metadata !3734, metadata !DIExpression()), !dbg !3785
  br i1 %245, label %246, label %265, !dbg !3969

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3970

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %250, metadata !3734, metadata !DIExpression()), !dbg !3785
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3971
  %252 = load i8, i8* %251, align 1, !dbg !3971
  %253 = icmp sgt i8 %252, -1, !dbg !3973
  br i1 %253, label %261, label %254, !dbg !3974

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3778, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3975
  %255 = ptrtoint i8* %249 to i32, !dbg !3976
  %256 = add i32 %247, %255, !dbg !3978
  %257 = icmp ugt i32 %256, %194, !dbg !3979
  br i1 %257, label %316, label %258, !dbg !3980

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3981
  call void @llvm.dbg.value(metadata i8 %259, metadata !3778, metadata !DIExpression()), !dbg !3975
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3982
  call void @llvm.dbg.value(metadata i8* %260, metadata !3724, metadata !DIExpression()), !dbg !3785
  store i8 %259, i8* %249, align 1, !dbg !3983
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3923
  call void @llvm.dbg.value(metadata i8* %262, metadata !3724, metadata !DIExpression()), !dbg !3785
  %263 = add nuw i32 %250, 1, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %263, metadata !3734, metadata !DIExpression()), !dbg !3785
  %264 = icmp eq i32 %263, %193, !dbg !3985
  br i1 %264, label %265, label %248, !dbg !3970, !llvm.loop !3986

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3923
  call void @llvm.dbg.value(metadata i8* %266, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 0, metadata !3734, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %133, metadata !3735, metadata !DIExpression()), !dbg !3785
  %267 = icmp eq i32 %193, 0, !dbg !3988
  br i1 %267, label %312, label %268, !dbg !3991

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3991

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %272, metadata !3735, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %273, metadata !3734, metadata !DIExpression()), !dbg !3785
  br i1 %242, label %278, label %274, !dbg !3992

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3995
  %276 = load i8, i8* %275, align 1, !dbg !3995
  %277 = icmp sgt i8 %276, -1, !dbg !3996
  br i1 %277, label %278, label %307, !dbg !3997

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !3998

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3725, metadata !DIExpression()), !dbg !3785
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !3999
  %281 = load i8, i8* %280, align 1, !dbg !3999
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4002
  call void @llvm.dbg.value(metadata i8* %282, metadata !3724, metadata !DIExpression()), !dbg !3785
  store i8 %281, i8* %271, align 1, !dbg !4003
  br label %293, !dbg !4004

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4005
  %285 = load i8, i8* %284, align 1, !dbg !4005
  %286 = zext i8 %285 to i32, !dbg !4005
  %287 = shl nuw nsw i32 %286, 2, !dbg !4007
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4008
  %289 = bitcast i8* %288 to i8**, !dbg !4009
  %290 = load i8*, i8** %289, align 4, !dbg !4009
  call void @llvm.dbg.value(metadata i8* %290, metadata !3735, metadata !DIExpression()), !dbg !3785
  store i8* null, i8** %289, align 4, !dbg !4010
  %291 = tail call i32 @strlen(i8* noundef %290) #28, !dbg !4011
  %292 = add i32 %291, 1, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %292, metadata !3725, metadata !DIExpression()), !dbg !3785
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3785
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4013
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3785
  call void @llvm.dbg.value(metadata i8* %296, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %295, metadata !3725, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %294, metadata !3735, metadata !DIExpression()), !dbg !3785
  %297 = ptrtoint i8* %296 to i32, !dbg !4014
  %298 = add i32 %269, %295, !dbg !4016
  %299 = add i32 %298, %297, !dbg !4017
  %300 = icmp ugt i32 %299, %194, !dbg !4018
  br i1 %300, label %316, label %301, !dbg !4019

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4020
  %303 = load i8, i8* %302, align 1, !dbg !4020
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4021
  call void @llvm.dbg.value(metadata i8* %304, metadata !3724, metadata !DIExpression()), !dbg !3785
  store i8 %303, i8* %296, align 1, !dbg !4022
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #28, !dbg !4023
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4024
  call void @llvm.dbg.value(metadata i8* %306, metadata !3724, metadata !DIExpression()), !dbg !3785
  br label %307, !dbg !4025

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4026
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3785
  call void @llvm.dbg.value(metadata i8* %309, metadata !3724, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i8* %308, metadata !3735, metadata !DIExpression()), !dbg !3785
  %310 = add nuw i32 %273, 1, !dbg !4027
  call void @llvm.dbg.value(metadata i32 %310, metadata !3734, metadata !DIExpression()), !dbg !3785
  %311 = icmp eq i32 %310, %193, !dbg !3988
  br i1 %311, label %312, label %270, !dbg !3991, !llvm.loop !4028

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3923
  %314 = ptrtoint i8* %313 to i32, !dbg !4030
  %315 = sub i32 %314, %17, !dbg !4030
  br label %316, !dbg !4031

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3785
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4032
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4032
  ret i32 %317, !dbg !4032
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4033 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4037, metadata !DIExpression()), !dbg !4038
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #27, !dbg !4039
  ret i1 %2, !dbg !4040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4041 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4046, metadata !DIExpression()), !dbg !4047
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4048
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4049
  %4 = and i1 %2, %3, !dbg !4049
  ret i1 %4, !dbg !4050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4051 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4055, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i32 %1, metadata !4056, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i32 %2, metadata !4057, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i8* %3, metadata !4058, metadata !DIExpression()), !dbg !4061
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4062
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4062
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4059, metadata !DIExpression()), !dbg !4063
  call void @llvm.va_start(i8* nonnull %6), !dbg !4064
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4065
  %8 = load i32, i32* %7, align 4, !dbg !4065
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4065
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #27, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %10, metadata !4060, metadata !DIExpression()), !dbg !4061
  call void @llvm.va_end(i8* nonnull %6), !dbg !4066
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4067
  ret i32 %10, !dbg !4068
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4069 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4081, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4082, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i8* %2, metadata !4083, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i8* %3, metadata !4084, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i8* %3, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i8* %3, metadata !4086, metadata !DIExpression()), !dbg !4100
  %5 = icmp eq i8* %3, null, !dbg !4101
  br i1 %5, label %45, label %6, !dbg !4103

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4095, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4100
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4104
  %8 = load i8, i8* %7, align 1, !dbg !4104
  %9 = zext i8 %8 to i32, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %9, metadata !4096, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i8 undef, metadata !4097, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata i8 undef, metadata !4098, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata i32 0, metadata !4094, metadata !DIExpression()), !dbg !4100
  %10 = icmp eq i8 %8, 0, !dbg !4106
  br i1 %10, label %39, label %11, !dbg !4109

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4110
  call void @llvm.dbg.value(metadata i8 %12, metadata !4095, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %13 = zext i8 %12 to i32, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %13, metadata !4095, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %14 = shl nuw nsw i32 %13, 2, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %14, metadata !4095, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4113
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4114
  %17 = load i8, i8* %16, align 1, !dbg !4114
  call void @llvm.dbg.value(metadata i8 %17, metadata !4097, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %18 = zext i8 %17 to i32, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %18, metadata !4097, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4116
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4117
  %21 = load i8, i8* %20, align 1, !dbg !4117
  call void @llvm.dbg.value(metadata i8 %21, metadata !4098, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %22 = zext i8 %21 to i32, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %22, metadata !4098, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %23 = shl nuw nsw i32 %22, 1, !dbg !4119
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4120
  call void @llvm.dbg.value(metadata i8* %24, metadata !4092, metadata !DIExpression()), !dbg !4100
  br label %25, !dbg !4109

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4092, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %27, metadata !4094, metadata !DIExpression()), !dbg !4100
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4121
  call void @llvm.dbg.value(metadata i8* %28, metadata !4092, metadata !DIExpression()), !dbg !4100
  %29 = load i8, i8* %26, align 1, !dbg !4123
  %30 = zext i8 %29 to i32, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %30, metadata !4099, metadata !DIExpression()), !dbg !4100
  %31 = shl nuw nsw i32 %30, 2, !dbg !4124
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4125
  %33 = bitcast i8* %32 to i8**, !dbg !4126
  call void @llvm.dbg.value(metadata i8** %33, metadata !4093, metadata !DIExpression()), !dbg !4100
  store i8* %28, i8** %33, align 4, !dbg !4127
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #28, !dbg !4128
  %35 = add i32 %34, 1, !dbg !4129
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4130
  call void @llvm.dbg.value(metadata i8* %36, metadata !4092, metadata !DIExpression()), !dbg !4100
  %37 = add nuw nsw i32 %27, 1, !dbg !4131
  call void @llvm.dbg.value(metadata i32 %37, metadata !4094, metadata !DIExpression()), !dbg !4100
  %38 = icmp eq i32 %37, %9, !dbg !4106
  br i1 %38, label %39, label %25, !dbg !4109, !llvm.loop !4132

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4134
  call void @llvm.dbg.value(metadata i8* %40, metadata !4085, metadata !DIExpression()), !dbg !4100
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4135
  %42 = bitcast i8* %41 to i8**, !dbg !4135
  %43 = load i8*, i8** %42, align 1, !dbg !4135
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #27, !dbg !4136
  br label %45, !dbg !4137

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4100
  ret i32 %46, !dbg !4138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4139 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4143, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4144, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.value(metadata i8* %2, metadata !4145, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.value(metadata i8* %3, metadata !4146, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.value(metadata i8* %4, metadata !4147, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.value(metadata i8* %4, metadata !4148, metadata !DIExpression()), !dbg !4153
  %6 = ptrtoint i8* %4 to i32, !dbg !4154
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4154
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #28, !dbg !4154
  ret i32 %8, !dbg !4155
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4156 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4160, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i32 %1, metadata !4161, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i8 0, metadata !4163, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i32 0, metadata !4164, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i8 poison, metadata !4163, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i8* %0, metadata !4160, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4165
  %3 = load i8, i8* %0, align 1, !dbg !4166
  call void @llvm.dbg.value(metadata i8 %3, metadata !4162, metadata !DIExpression()), !dbg !4165
  %4 = icmp eq i8 %3, 0, !dbg !4167
  br i1 %4, label %29, label %5, !dbg !4168

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %8, metadata !4164, metadata !DIExpression()), !dbg !4165
  br i1 %9, label %11, label %22, !dbg !4170

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4172
  br i1 %12, label %13, label %17, !dbg !4176

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4177
  br i1 %14, label %29, label %15, !dbg !4180

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4181
  br i1 %16, label %29, label %22, !dbg !4183

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4184
  %19 = xor i1 %18, true, !dbg !4186
  %20 = zext i1 %18 to i32, !dbg !4186
  %21 = add nsw i32 %8, %20, !dbg !4186
  br label %22, !dbg !4186

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4165
  call void @llvm.dbg.value(metadata i32 %24, metadata !4164, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i8 poison, metadata !4163, metadata !DIExpression()), !dbg !4165
  %25 = icmp eq i8 %6, 37, !dbg !4187
  %26 = xor i1 %25, %23, !dbg !4189
  call void @llvm.dbg.value(metadata i8* %10, metadata !4160, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i8* %10, metadata !4160, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4165
  %27 = load i8, i8* %10, align 1, !dbg !4166
  call void @llvm.dbg.value(metadata i8 %27, metadata !4162, metadata !DIExpression()), !dbg !4165
  %28 = icmp eq i8 %27, 0, !dbg !4167
  br i1 %28, label %29, label %5, !dbg !4168, !llvm.loop !4190

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4165
  ret i1 %30, !dbg !4192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4193 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4197, metadata !DIExpression()), !dbg !4198
  %2 = add i8 %0, -64, !dbg !4199
  %3 = icmp ult i8 %2, 59, !dbg !4199
  ret i1 %3, !dbg !4200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4201 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4209, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %1, metadata !4210, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4211, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %3, metadata !4212, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %4, metadata !4213, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i16* %5, metadata !4214, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %6, metadata !4215, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %0, metadata !4216, metadata !DIExpression()), !dbg !4278
  %11 = bitcast i8* %0 to i32*, !dbg !4279
  call void @llvm.dbg.value(metadata i32* %11, metadata !4217, metadata !DIExpression()), !dbg !4278
  %12 = and i32 %4, 8, !dbg !4280
  %13 = icmp eq i32 %12, 0, !dbg !4281
  call void @llvm.dbg.value(metadata i1 %13, metadata !4221, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %0, metadata !4224, metadata !DIExpression()), !dbg !4278
  %14 = icmp eq i32 %1, 0, !dbg !4282
  br i1 %14, label %15, label %17, !dbg !4283

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #27, !dbg !4284
  br label %17, !dbg !4283

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4283
  call void @llvm.dbg.value(metadata i32 %18, metadata !4210, metadata !DIExpression()), !dbg !4278
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4285
  %20 = load i8, i8* %19, align 1, !dbg !4285
  %21 = zext i8 %20 to i32, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %21, metadata !4219, metadata !DIExpression()), !dbg !4278
  %22 = icmp ne i8 %20, 0, !dbg !4287
  %23 = and i32 %4, 1, !dbg !4288
  %24 = icmp ne i32 %23, 0, !dbg !4288
  %25 = and i1 %24, %22, !dbg !4288
  call void @llvm.dbg.value(metadata i1 %25, metadata !4223, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4278
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4289
  %27 = load i8, i8* %26, align 1, !dbg !4289
  %28 = zext i8 %27 to i32, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %28, metadata !4220, metadata !DIExpression()), !dbg !4278
  %29 = icmp ne i8 %27, 0, !dbg !4291
  %30 = and i32 %4, 2, !dbg !4292
  %31 = icmp ne i32 %30, 0, !dbg !4292
  %32 = and i1 %31, %29, !dbg !4292
  call void @llvm.dbg.value(metadata i1 %32, metadata !4222, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4278
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4293
  br i1 %33, label %38, label %34, !dbg !4293

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4295
  br i1 %35, label %267, label %36, !dbg !4298

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #28, !dbg !4299
  br label %267, !dbg !4301

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4302
  %40 = zext i8 %39 to i32, !dbg !4303
  %41 = shl nuw nsw i32 %40, 2, !dbg !4304
  call void @llvm.dbg.value(metadata i32 %41, metadata !4218, metadata !DIExpression()), !dbg !4278
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4305
  %43 = bitcast i8* %42 to i8**, !dbg !4306
  %44 = load i8*, i8** %43, align 4, !dbg !4306
  call void @llvm.dbg.value(metadata i8* %44, metadata !4227, metadata !DIExpression()), !dbg !4278
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4307
  call void @llvm.dbg.value(metadata i8* %45, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 0, metadata !4229, metadata !DIExpression()), !dbg !4278
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4308
  br i1 %46, label %47, label %132, !dbg !4309

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4226, metadata !DIExpression()), !dbg !4278
  br i1 %25, label %48, label %73, !dbg !4310

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %45, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 0, metadata !4229, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 0, metadata !4230, metadata !DIExpression()), !dbg !4311
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4312

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %52, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %53, metadata !4229, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %54, metadata !4230, metadata !DIExpression()), !dbg !4311
  %55 = load i8, i8* %52, align 1, !dbg !4313
  %56 = zext i8 %55 to i32, !dbg !4314
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4314
  %58 = bitcast i32* %57 to i8**, !dbg !4315
  %59 = load i8*, i8** %58, align 4, !dbg !4315
  call void @llvm.dbg.value(metadata i8* %59, metadata !4236, metadata !DIExpression()), !dbg !4316
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #27, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %60, metadata !4239, metadata !DIExpression()), !dbg !4316
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4318
  br i1 %62, label %63, label %67, !dbg !4318

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4320
  %65 = add nuw i32 %53, 1, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %65, metadata !4229, metadata !DIExpression()), !dbg !4278
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4323
  store i16 %64, i16* %66, align 2, !dbg !4324
  br label %67, !dbg !4325

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4278
  call void @llvm.dbg.value(metadata i32 %68, metadata !4229, metadata !DIExpression()), !dbg !4278
  %69 = add nsw i32 %60, %51, !dbg !4326
  call void @llvm.dbg.value(metadata i32 %69, metadata !4226, metadata !DIExpression()), !dbg !4278
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4327
  call void @llvm.dbg.value(metadata i8* %70, metadata !4228, metadata !DIExpression()), !dbg !4278
  %71 = add nuw nsw i32 %54, 1, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %71, metadata !4230, metadata !DIExpression()), !dbg !4311
  %72 = icmp eq i32 %71, %21, !dbg !4329
  br i1 %72, label %79, label %50, !dbg !4312, !llvm.loop !4330

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4332
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4332
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4332
  br label %79, !dbg !4332

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4335
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4278
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4336
  call void @llvm.dbg.value(metadata i1 undef, metadata !4240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4337
  call void @llvm.dbg.value(metadata i32 0, metadata !4241, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i32 %82, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %81, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %80, metadata !4229, metadata !DIExpression()), !dbg !4278
  %83 = icmp eq i8 %27, 0, !dbg !4339
  br i1 %83, label %267, label %84, !dbg !4340

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4341
  %86 = icmp eq i32 %85, 0, !dbg !4342
  call void @llvm.dbg.value(metadata i1 %86, metadata !4240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4337
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4340

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %93, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %94, metadata !4229, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %95, metadata !4241, metadata !DIExpression()), !dbg !4338
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4343
  call void @llvm.dbg.value(metadata i8* %96, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 undef, metadata !4243, metadata !DIExpression()), !dbg !4344
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4345
  call void @llvm.dbg.value(metadata i8* %97, metadata !4228, metadata !DIExpression()), !dbg !4278
  %98 = load i8, i8* %96, align 1, !dbg !4346
  call void @llvm.dbg.value(metadata i8 %98, metadata !4246, metadata !DIExpression()), !dbg !4344
  %99 = zext i8 %98 to i32, !dbg !4347
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4347
  %101 = bitcast i32* %100 to i8**, !dbg !4348
  %102 = load i8*, i8** %101, align 4, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %102, metadata !4247, metadata !DIExpression()), !dbg !4344
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #27, !dbg !4349
  call void @llvm.dbg.value(metadata i1 %103, metadata !4248, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4344
  br i1 %13, label %110, label %104, !dbg !4350

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4352
  call void @llvm.dbg.value(metadata i8 %105, metadata !4243, metadata !DIExpression()), !dbg !4344
  %106 = zext i8 %105 to i32, !dbg !4353
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #27, !dbg !4354
  br i1 %107, label %108, label %110, !dbg !4355

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #28, !dbg !4356
  %109 = add nsw i32 %92, -2, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %109, metadata !4226, metadata !DIExpression()), !dbg !4278
  br label %127, !dbg !4363

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4364

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4365

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4367
  call void @llvm.dbg.value(metadata i32 %113, metadata !4226, metadata !DIExpression()), !dbg !4278
  br label %127, !dbg !4370

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4371

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4274), !dbg !4372
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #27, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %116, metadata !4249, metadata !DIExpression()), !dbg !4344
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4374
  br i1 %118, label %119, label %123, !dbg !4374

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4376
  %121 = add nuw i32 %94, 1, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %121, metadata !4229, metadata !DIExpression()), !dbg !4278
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4379
  store i16 %120, i16* %122, align 2, !dbg !4380
  br label %123, !dbg !4381

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4278
  call void @llvm.dbg.value(metadata i32 %124, metadata !4229, metadata !DIExpression()), !dbg !4278
  %125 = add i32 %92, -1, !dbg !4382
  %126 = add i32 %125, %116, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %126, metadata !4226, metadata !DIExpression()), !dbg !4278
  br label %127, !dbg !4384

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4278
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4344
  call void @llvm.dbg.value(metadata i32 %129, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %128, metadata !4229, metadata !DIExpression()), !dbg !4278
  %130 = add nuw nsw i32 %95, 1, !dbg !4385
  call void @llvm.dbg.value(metadata i8* %97, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %130, metadata !4241, metadata !DIExpression()), !dbg !4338
  %131 = icmp eq i32 %130, %28, !dbg !4339
  br i1 %131, label %267, label %91, !dbg !4340, !llvm.loop !4386

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4251, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4252, metadata !DIExpression()), !dbg !4389
  br i1 %25, label %133, label %135, !dbg !4390

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4253, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 0, metadata !4254, metadata !DIExpression()), !dbg !4278
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4391
  call void @llvm.dbg.value(metadata i8* %134, metadata !4255, metadata !DIExpression()), !dbg !4278
  br label %140, !dbg !4394

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4395
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4395

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4255, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 undef, metadata !4254, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 0, metadata !4253, metadata !DIExpression()), !dbg !4278
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #28, !dbg !4397
  br label %145, !dbg !4400

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4401
  call void @llvm.dbg.value(metadata i8* %148, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 0, metadata !4257, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8 %146, metadata !4254, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 %147, metadata !4253, metadata !DIExpression()), !dbg !4278
  %149 = icmp eq i8 %27, 0, !dbg !4403
  br i1 %149, label %150, label %152, !dbg !4404

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4405
  br label %157, !dbg !4404

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4404

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4405
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4406
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4407
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4278
  call void @llvm.dbg.value(metadata i8 undef, metadata !4250, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4278
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4408
  %163 = load i8, i8* %162, align 1, !dbg !4408
  %164 = zext i8 %159 to i32, !dbg !4409
  %165 = add i8 %163, %159, !dbg !4410
  call void @llvm.dbg.value(metadata i8 %165, metadata !4250, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4278
  %166 = icmp eq i32 %30, 0, !dbg !4411
  %167 = lshr i8 %160, 1, !dbg !4412
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4412
  call void @llvm.dbg.value(metadata i8 %168, metadata !4250, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4278
  %169 = icmp eq i32 %23, 0, !dbg !4413
  %170 = icmp eq i32 %158, 0, !dbg !4405
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4405
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4405
  call void @llvm.dbg.value(metadata i8 %172, metadata !4250, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4278
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4265, metadata !DIExpression()), !dbg !4414
  %173 = load i32, i32* %11, align 1, !dbg !4415
  store i8 %165, i8* %162, align 1, !dbg !4416
  store i8 %172, i8* %19, align 1, !dbg !4416
  store i8 %168, i8* %26, align 1, !dbg !4416
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #28, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %174, metadata !4256, metadata !DIExpression()), !dbg !4278
  %175 = icmp slt i32 %174, 0, !dbg !4418
  br i1 %175, label %267, label %220, !dbg !4420

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %178, metadata !4257, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8 %179, metadata !4254, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 %180, metadata !4253, metadata !DIExpression()), !dbg !4278
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4421
  call void @llvm.dbg.value(metadata i8* %181, metadata !4228, metadata !DIExpression()), !dbg !4278
  %182 = load i8, i8* %177, align 1, !dbg !4422
  call void @llvm.dbg.value(metadata i8 %182, metadata !4259, metadata !DIExpression()), !dbg !4423
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4424
  call void @llvm.dbg.value(metadata i8* %183, metadata !4228, metadata !DIExpression()), !dbg !4278
  %184 = load i8, i8* %181, align 1, !dbg !4425
  call void @llvm.dbg.value(metadata i8 %184, metadata !4262, metadata !DIExpression()), !dbg !4423
  %185 = zext i8 %184 to i32, !dbg !4426
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4426
  %187 = bitcast i32* %186 to i8**, !dbg !4427
  %188 = load i8*, i8** %187, align 4, !dbg !4427
  call void @llvm.dbg.value(metadata i8* %188, metadata !4263, metadata !DIExpression()), !dbg !4423
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #27, !dbg !4428
  call void @llvm.dbg.value(metadata i1 %189, metadata !4264, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4423
  br i1 %13, label %193, label %190, !dbg !4429

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4431
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #27, !dbg !4432
  br i1 %192, label %215, label %193, !dbg !4433

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4434

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4435

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4438
  call void @llvm.dbg.value(metadata i8 %196, metadata !4253, metadata !DIExpression()), !dbg !4278
  br label %208, !dbg !4441

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4442

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4443
  call void @llvm.dbg.value(metadata i8 %199, metadata !4254, metadata !DIExpression()), !dbg !4278
  br label %208, !dbg !4446

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4447

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4449
  call void @llvm.dbg.value(metadata i8 %202, metadata !4253, metadata !DIExpression()), !dbg !4278
  br label %208, !dbg !4452

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4453
  call void @llvm.dbg.value(metadata i8 %204, metadata !4254, metadata !DIExpression()), !dbg !4278
  %205 = zext i8 %179 to i32, !dbg !4455
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4455
  store i8 %182, i8* %206, align 1, !dbg !4456
  %207 = add i8 %179, 2, !dbg !4457
  call void @llvm.dbg.value(metadata i8 %207, metadata !4254, metadata !DIExpression()), !dbg !4278
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4458
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4458
  store i8 %184, i8* %214, align 1, !dbg !4458
  br label %215, !dbg !4459

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4278
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4407
  call void @llvm.dbg.value(metadata i8 %217, metadata !4254, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8 %216, metadata !4253, metadata !DIExpression()), !dbg !4278
  %218 = add nuw nsw i32 %178, 1, !dbg !4459
  call void @llvm.dbg.value(metadata i8* %183, metadata !4228, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %218, metadata !4257, metadata !DIExpression()), !dbg !4402
  %219 = icmp eq i32 %218, %28, !dbg !4403
  br i1 %219, label %157, label %176, !dbg !4404, !llvm.loop !4460

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %174, metadata !4226, metadata !DIExpression()), !dbg !4278
  store i32 %173, i32* %11, align 1, !dbg !4462
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4463
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #28, !dbg !4464
  call void @llvm.dbg.value(metadata i32 %223, metadata !4256, metadata !DIExpression()), !dbg !4278
  %224 = icmp slt i32 %223, 0, !dbg !4465
  br i1 %224, label %267, label %225, !dbg !4467

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4226, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4468
  %228 = add nuw nsw i32 %41, %21, !dbg !4468
  %229 = sub i32 %227, %228, !dbg !4468
  call void @llvm.dbg.value(metadata i32 %229, metadata !4266, metadata !DIExpression()), !dbg !4278
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #28, !dbg !4469
  call void @llvm.dbg.value(metadata i32 %230, metadata !4256, metadata !DIExpression()), !dbg !4278
  %231 = icmp slt i32 %230, 0, !dbg !4470
  br i1 %231, label %267, label %232, !dbg !4472

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %233, metadata !4226, metadata !DIExpression()), !dbg !4278
  %234 = add nuw nsw i32 %233, %230, !dbg !4474
  call void @llvm.dbg.value(metadata i32 %234, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 0, metadata !4267, metadata !DIExpression()), !dbg !4475
  %235 = icmp eq i8 %159, 0, !dbg !4476
  br i1 %235, label %264, label %236, !dbg !4477

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4477

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4267, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata i32 %240, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4478
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4479
  %242 = load i8, i8* %241, align 1, !dbg !4479
  call void @llvm.dbg.value(metadata i8 %242, metadata !4269, metadata !DIExpression()), !dbg !4480
  store i8 %242, i8* %10, align 1, !dbg !4481
  %243 = zext i8 %242 to i32, !dbg !4482
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4482
  %245 = bitcast i32* %244 to i8**, !dbg !4483
  %246 = load i8*, i8** %245, align 4, !dbg !4483
  call void @llvm.dbg.value(metadata i8* %246, metadata !4272, metadata !DIExpression()), !dbg !4480
  br i1 %237, label %250, label %247, !dbg !4484

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4485
  %249 = load i16, i16* %248, align 2, !dbg !4485
  br label %250, !dbg !4484

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4484
  call void @llvm.dbg.value(metadata i32 undef, metadata !4273, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4480
  call void @llvm.dbg.value(metadata i8* %10, metadata !4269, metadata !DIExpression(DW_OP_deref)), !dbg !4480
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #28, !dbg !4486
  call void @llvm.dbg.value(metadata i32 %252, metadata !4256, metadata !DIExpression()), !dbg !4278
  %253 = icmp slt i32 %252, 0, !dbg !4487
  br i1 %253, label %257, label %254, !dbg !4489

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4273, metadata !DIExpression()), !dbg !4480
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4226, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4278
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #27, !dbg !4490
  call void @llvm.dbg.value(metadata i32 %255, metadata !4256, metadata !DIExpression()), !dbg !4278
  %256 = icmp slt i32 %255, 0, !dbg !4491
  br i1 %256, label %257, label %259, !dbg !4493

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4494
  call void @llvm.dbg.value(metadata i32 undef, metadata !4226, metadata !DIExpression()), !dbg !4278
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4495
  call void @llvm.dbg.value(metadata i32 %260, metadata !4226, metadata !DIExpression()), !dbg !4278
  %261 = add nsw i32 %260, %255, !dbg !4496
  call void @llvm.dbg.value(metadata i32 %261, metadata !4226, metadata !DIExpression()), !dbg !4278
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4494
  %262 = add nuw nsw i32 %239, 1, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %262, metadata !4267, metadata !DIExpression()), !dbg !4475
  %263 = icmp eq i32 %262, %164, !dbg !4476
  br i1 %263, label %264, label %238, !dbg !4477, !llvm.loop !4498

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4474
  call void @llvm.dbg.value(metadata i32 %265, metadata !4226, metadata !DIExpression()), !dbg !4278
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #28, !dbg !4500
  br label %267, !dbg !4501

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4278
  ret i32 %268, !dbg !4502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4503 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4507, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i8* %0, metadata !4508, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i8* %0, metadata !4509, metadata !DIExpression()), !dbg !4515
  %2 = load i8, i8* %0, align 1, !dbg !4516
  %3 = zext i8 %2 to i32, !dbg !4516
  %4 = shl nuw nsw i32 %3, 2, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %4, metadata !4510, metadata !DIExpression()), !dbg !4515
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4518
  %6 = load i8, i8* %5, align 1, !dbg !4518
  %7 = zext i8 %6 to i32, !dbg !4518
  call void @llvm.dbg.value(metadata i32 %7, metadata !4511, metadata !DIExpression()), !dbg !4515
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4519
  %9 = load i8, i8* %8, align 1, !dbg !4519
  %10 = zext i8 %9 to i32, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %10, metadata !4512, metadata !DIExpression()), !dbg !4515
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4520
  call void @llvm.dbg.value(metadata i8* %11, metadata !4508, metadata !DIExpression()), !dbg !4515
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4521
  call void @llvm.dbg.value(metadata i8* %12, metadata !4508, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i32 0, metadata !4513, metadata !DIExpression()), !dbg !4522
  %13 = icmp eq i8 %6, 0, !dbg !4523
  br i1 %13, label %14, label %19, !dbg !4525

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4515
  %16 = ptrtoint i8* %15 to i32, !dbg !4526
  %17 = ptrtoint i8* %0 to i32, !dbg !4526
  %18 = sub i32 %16, %17, !dbg !4526
  ret i32 %18, !dbg !4527

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4513, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i8* %21, metadata !4508, metadata !DIExpression()), !dbg !4515
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4528
  call void @llvm.dbg.value(metadata i8* %22, metadata !4508, metadata !DIExpression()), !dbg !4515
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #28, !dbg !4530
  %24 = add i32 %23, 1, !dbg !4531
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4532
  call void @llvm.dbg.value(metadata i8* %25, metadata !4508, metadata !DIExpression()), !dbg !4515
  %26 = add nuw nsw i32 %20, 1, !dbg !4533
  call void @llvm.dbg.value(metadata i32 %26, metadata !4513, metadata !DIExpression()), !dbg !4522
  %27 = icmp eq i32 %26, %7, !dbg !4523
  br i1 %27, label %14, label %19, !dbg !4525, !llvm.loop !4534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4536 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4540, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i8* %1, metadata !4541, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i8* %2, metadata !4542, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i16 %3, metadata !4543, metadata !DIExpression()), !dbg !4544
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4545
  br i1 %5, label %6, label %9, !dbg !4547

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #28, !dbg !4548
  %8 = add i32 %7, 1, !dbg !4550
  br label %20, !dbg !4551

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4552
  br i1 %10, label %13, label %11, !dbg !4553

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4553
  br label %16, !dbg !4553

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #28, !dbg !4554
  %15 = add i32 %14, 1, !dbg !4555
  br label %16, !dbg !4553

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4553
  %18 = and i32 %17, 65535, !dbg !4556
  call void @llvm.dbg.value(metadata i32 %17, metadata !4543, metadata !DIExpression()), !dbg !4544
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #28, !dbg !4557
  br label %20, !dbg !4558

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4544
  ret i32 %21, !dbg !4559
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4562, metadata !DIExpression()), !dbg !4563
  ret i32 0, !dbg !4564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4565 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4569, metadata !DIExpression()), !dbg !4570
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4571
  ret void, !dbg !4572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #3 !dbg !4573 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4576
  ret i8* %1, !dbg !4577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4578 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4589, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8* %0, metadata !4588, metadata !DIExpression()), !dbg !4598
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !4599
  ret void, !dbg !4601
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4606, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* %1, metadata !4607, metadata !DIExpression()), !dbg !4608
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4609
  %4 = tail call i32 %3(i32 noundef %0) #28, !dbg !4609
  ret i32 %4, !dbg !4610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4611 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4618, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4615, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i8* %1, metadata !4616, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i8* %2, metadata !4617, metadata !DIExpression()), !dbg !4619
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #28, !dbg !4620
  ret void, !dbg !4621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4622 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4626, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %1, metadata !4627, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4628, metadata !DIExpression()), !dbg !4629
  %3 = icmp eq i32 %1, 0, !dbg !4630
  br i1 %3, label %13, label %4, !dbg !4633

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4628, metadata !DIExpression()), !dbg !4629
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4634
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4636
  %8 = load i8, i8* %7, align 1, !dbg !4636
  %9 = zext i8 %8 to i32, !dbg !4636
  %10 = tail call i32 %6(i32 noundef %9) #28, !dbg !4634
  %11 = add nuw i32 %5, 1, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %11, metadata !4628, metadata !DIExpression()), !dbg !4629
  %12 = icmp eq i32 %11, %1, !dbg !4630
  br i1 %12, label %13, label %4, !dbg !4633, !llvm.loop !4638

13:                                               ; preds = %4, %2
  ret void, !dbg !4640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4641 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4645, metadata !DIExpression()), !dbg !4647
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4648
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4648
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4646, metadata !DIExpression()), !dbg !4649
  call void @llvm.va_start(i8* nonnull %3), !dbg !4650
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4651
  %5 = load i32, i32* %4, align 4, !dbg !4651
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4651
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !4651
  call void @llvm.va_end(i8* nonnull %3), !dbg !4652
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4653
  ret void, !dbg !4653
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4654 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4658, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.value(metadata i32 %1, metadata !4659, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.value(metadata i8* %2, metadata !4660, metadata !DIExpression()), !dbg !4663
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4664
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4664
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4661, metadata !DIExpression()), !dbg !4665
  call void @llvm.va_start(i8* nonnull %5), !dbg !4666
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4667
  %7 = load i32, i32* %6, align 4, !dbg !4667
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4667
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !4667
  call void @llvm.dbg.value(metadata i32 %9, metadata !4662, metadata !DIExpression()), !dbg !4663
  call void @llvm.va_end(i8* nonnull %5), !dbg !4668
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4669
  ret i32 %9, !dbg !4670
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4671 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata i8* %0, metadata !4675, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata i32 %1, metadata !4676, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata i8* %2, metadata !4677, metadata !DIExpression()), !dbg !4685
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4686
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !4686
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4679, metadata !DIExpression()), !dbg !4687
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4688
  store i8* %0, i8** %7, align 4, !dbg !4688
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4688
  store i32 %1, i32* %8, align 4, !dbg !4688
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4688
  store i32 0, i32* %9, align 4, !dbg !4688
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !4689
  %10 = load i32, i32* %9, align 4, !dbg !4690
  %11 = load i32, i32* %8, align 4, !dbg !4692
  %12 = icmp slt i32 %10, %11, !dbg !4693
  br i1 %12, label %13, label %15, !dbg !4694

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4695
  store i8 0, i8* %14, align 1, !dbg !4697
  br label %15, !dbg !4698

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !4699
  ret i32 %10, !dbg !4700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !4701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4706, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4707, metadata !DIExpression()), !dbg !4708
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4709
  %4 = load i8*, i8** %3, align 4, !dbg !4709
  %5 = icmp eq i8* %4, null, !dbg !4711
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4712
  br i1 %5, label %12, label %8, !dbg !4713

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4714
  %10 = load i32, i32* %9, align 4, !dbg !4714
  %11 = icmp slt i32 %7, %10, !dbg !4715
  br i1 %11, label %15, label %12, !dbg !4716

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4717
  %14 = add nsw i32 %7, 1, !dbg !4719
  store i32 %14, i32* %13, align 4, !dbg !4719
  br label %25, !dbg !4720

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4721
  %17 = icmp eq i32 %7, %16, !dbg !4723
  br i1 %17, label %18, label %21, !dbg !4724

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4725
  store i32 %19, i32* %6, align 4, !dbg !4725
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4727
  store i8 0, i8* %20, align 1, !dbg !4728
  br label %25, !dbg !4729

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4730
  %23 = add nsw i32 %7, 1, !dbg !4732
  store i32 %23, i32* %6, align 4, !dbg !4732
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4733
  store i8 %22, i8* %24, align 1, !dbg !4734
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4735
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #11 !dbg !4736 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4741, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i8* %1, metadata !4742, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i8* %2, metadata !4743, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i8* %3, metadata !4744, metadata !DIExpression()), !dbg !4745
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !4746
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !4747
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !4748
  unreachable, !dbg !4749
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !4750 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !4854
  ret %struct.k_thread* %1, !dbg !4855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4860, metadata !DIExpression()), !dbg !4861
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4862, !srcloc !4864
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !4865
  ret void, !dbg !4866
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !4867 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4868, !srcloc !4870
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #28, !dbg !4871
  ret %struct.k_thread* %1, !dbg !4872
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !4873 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4884, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %1, metadata !4885, metadata !DIExpression()), !dbg !4888
  %3 = icmp eq i8* %1, null, !dbg !4889
  br i1 %3, label %8, label %4, !dbg !4891

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4892
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4892
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4886, metadata !DIExpression()), !dbg !4888
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4893, !range !4894
  call void @llvm.dbg.value(metadata i32 %7, metadata !4887, metadata !DIExpression()), !dbg !4888
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !4895
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !4896
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4898 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4902, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %1, metadata !4903, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %1, metadata !4904, metadata !DIExpression()), !dbg !4906
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4907
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4905, metadata !DIExpression()), !dbg !4906
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4908
  %5 = ptrtoint i8* %4 to i32, !dbg !4909
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4909
  %7 = sub i32 %5, %6, !dbg !4909
  %8 = lshr i32 %7, 3, !dbg !4910
  ret i32 %8, !dbg !4911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #10 !dbg !4912 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4916, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i32 %1, metadata !4917, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i1 %2, metadata !4918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4921
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4922
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4919, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4920, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4921
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4923
  %6 = bitcast i8* %5 to i16*, !dbg !4923
  %7 = load i16, i16* %6, align 2, !dbg !4923
  %8 = and i16 %7, -2, !dbg !4927
  %9 = zext i1 %2 to i16, !dbg !4927
  %10 = or i16 %8, %9, !dbg !4927
  store i16 %10, i16* %6, align 2, !dbg !4923
  ret void, !dbg !4928
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4929 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4933, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %1, metadata !4934, metadata !DIExpression()), !dbg !4935
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4936
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !4938
  br i1 %4, label %7, label %5, !dbg !4939

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !4940
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4942
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !4943
  br label %7, !dbg !4944

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4945, !range !4947
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !4948
  br i1 %9, label %13, label %10, !dbg !4949

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !4950
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4952, !range !4947
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !4953
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %12, metadata !4934, metadata !DIExpression()), !dbg !4935
  br label %13, !dbg !4955

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4934, metadata !DIExpression()), !dbg !4935
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !4956
  ret void, !dbg !4957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !4958 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4962, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.value(metadata i32 %1, metadata !4963, metadata !DIExpression()), !dbg !4964
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4965
  %4 = add i32 %3, %1, !dbg !4966
  ret i32 %4, !dbg !4967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !4968 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4972, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i32 %1, metadata !4973, metadata !DIExpression()), !dbg !4974
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !4975
  %4 = and i32 %3, 1, !dbg !4976
  %5 = icmp ne i32 %4, 0, !dbg !4975
  ret i1 %5, !dbg !4977
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4978 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4980, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.value(metadata i32 %1, metadata !4981, metadata !DIExpression()), !dbg !4985
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4986, !range !4987
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %4, metadata !4982, metadata !DIExpression()), !dbg !4989
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !4990
  ret void, !dbg !4991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !4992 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4996, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %1, metadata !4997, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %2, metadata !4998, metadata !DIExpression()), !dbg !5001
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5002
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5003
  %6 = add i32 %5, %4, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %6, metadata !4999, metadata !DIExpression()), !dbg !5001
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5005
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5006
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5007
  ret void, !dbg !5008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !5009 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5011, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i32 %1, metadata !5012, metadata !DIExpression()), !dbg !5013
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !5014
  %4 = sub i32 %1, %3, !dbg !5015
  ret i32 %4, !dbg !5016
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5017 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5019, metadata !DIExpression()), !dbg !5024
  call void @llvm.dbg.value(metadata i32 %1, metadata !5020, metadata !DIExpression()), !dbg !5024
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5025, !range !4987
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %4, metadata !5021, metadata !DIExpression()), !dbg !5027
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5028
  ret void, !dbg !5029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !5030 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5034, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 %1, metadata !5035, metadata !DIExpression()), !dbg !5036
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5037
  %4 = lshr i32 %3, 1, !dbg !5038
  ret i32 %4, !dbg !5039
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #12 !dbg !5040 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5044, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i32 %1, metadata !5045, metadata !DIExpression()), !dbg !5047
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !5048
  %4 = add i32 %1, 1, !dbg !5049
  %5 = sub i32 %4, %3, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %5, metadata !5046, metadata !DIExpression()), !dbg !5047
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5051, !range !5052
  %7 = sub nsw i32 31, %6, !dbg !5053
  ret i32 %7, !dbg !5054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5055 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5059, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 %1, metadata !5060, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 %2, metadata !5061, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5062, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5068
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5069
  %5 = load i32, i32* %4, align 4, !dbg !5069
  %6 = icmp eq i32 %5, 0, !dbg !5070
  br i1 %6, label %7, label %12, !dbg !5071

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5072
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5074
  %10 = load i32, i32* %9, align 4, !dbg !5075
  %11 = or i32 %10, %8, !dbg !5075
  store i32 %11, i32* %9, align 4, !dbg !5075
  store i32 %1, i32* %4, align 4, !dbg !5076
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5077
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5078
  br label %14, !dbg !5079

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5064, metadata !DIExpression()), !dbg !5080
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !5081, !range !5082
  call void @llvm.dbg.value(metadata i32 %13, metadata !5067, metadata !DIExpression()), !dbg !5080
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !5083
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5084
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !5085
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !5086
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5088 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5090, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i32 %1, metadata !5091, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i32 %2, metadata !5092, metadata !DIExpression()), !dbg !5093
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !5094
  ret void, !dbg !5095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5096 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5098, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i32 %1, metadata !5099, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i32 %2, metadata !5100, metadata !DIExpression()), !dbg !5101
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !5102
  ret void, !dbg !5103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5104 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5106, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.value(metadata i32 %1, metadata !5107, metadata !DIExpression()), !dbg !5108
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !5109
  ret i32 %3, !dbg !5110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !5111 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5115, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata i32 %1, metadata !5116, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata i32 %2, metadata !5117, metadata !DIExpression()), !dbg !5120
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5121
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5118, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5119, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5120
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5119, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5120
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5122
  call void @llvm.dbg.value(metadata i8* %5, metadata !5119, metadata !DIExpression()), !dbg !5120
  %6 = bitcast i8* %5 to i16*, !dbg !5123
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5126
  %8 = load i16, i16* %7, align 2, !dbg !5126
  %9 = zext i16 %8 to i32, !dbg !5126
  ret i32 %9, !dbg !5127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5128 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5132, metadata !DIExpression()), !dbg !5133
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5134
  ret %struct.chunk_unit_t* %2, !dbg !5135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !5136 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5140, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32 %1, metadata !5141, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32 %2, metadata !5142, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32 %3, metadata !5143, metadata !DIExpression()), !dbg !5146
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5147
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5144, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5145, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5146
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5148
  call void @llvm.dbg.value(metadata i8* %6, metadata !5145, metadata !DIExpression()), !dbg !5146
  %7 = trunc i32 %3 to i16, !dbg !5149
  %8 = bitcast i8* %6 to i16*, !dbg !5152
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5153
  store i16 %7, i16* %9, align 2, !dbg !5154
  ret void, !dbg !5155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5156 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5160, metadata !DIExpression()), !dbg !5161
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !5162
  ret i32 %2, !dbg !5163
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5164 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5168, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i32 %1, metadata !5169, metadata !DIExpression()), !dbg !5170
  %3 = add i32 %1, 4, !dbg !5171
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !5172
  ret i32 %4, !dbg !5173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5178, metadata !DIExpression()), !dbg !5179
  %2 = add i32 %0, 7, !dbg !5180
  %3 = lshr i32 %2, 3, !dbg !5181
  ret i32 %3, !dbg !5182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5183 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5187, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.value(metadata i32 %1, metadata !5188, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.value(metadata i32 %2, metadata !5189, metadata !DIExpression()), !dbg !5190
  %4 = shl i32 %2, 1, !dbg !5191
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !5192
  ret void, !dbg !5193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5194 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5196, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %1, metadata !5197, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %2, metadata !5198, metadata !DIExpression()), !dbg !5199
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !5200
  ret void, !dbg !5201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5202 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5204, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i32 %1, metadata !5205, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i32 %2, metadata !5206, metadata !DIExpression()), !dbg !5212
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5213
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5207, metadata !DIExpression()), !dbg !5212
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5214
  %6 = icmp eq i32 %5, %1, !dbg !5215
  br i1 %6, label %7, label %14, !dbg !5216

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5217
  %9 = xor i32 %8, -1, !dbg !5219
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5220
  %11 = load i32, i32* %10, align 4, !dbg !5221
  %12 = and i32 %11, %9, !dbg !5221
  store i32 %12, i32* %10, align 4, !dbg !5221
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5222
  store i32 0, i32* %13, align 4, !dbg !5223
  br label %17, !dbg !5224

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %15, metadata !5208, metadata !DIExpression()), !dbg !5226
  call void @llvm.dbg.value(metadata i32 %5, metadata !5211, metadata !DIExpression()), !dbg !5226
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5227
  store i32 %5, i32* %16, align 4, !dbg !5228
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !5229
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !5230
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5232 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5234, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 %1, metadata !5235, metadata !DIExpression()), !dbg !5236
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !5237
  ret i32 %3, !dbg !5238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #3 !dbg !5239 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5243, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %1, metadata !5244, metadata !DIExpression()), !dbg !5250
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5251
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5251
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5245, metadata !DIExpression()), !dbg !5250
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !5252
  call void @llvm.dbg.value(metadata i32 %5, metadata !5246, metadata !DIExpression()), !dbg !5250
  %6 = ptrtoint i8* %1 to i32, !dbg !5253
  call void @llvm.dbg.value(metadata i32 %6, metadata !5247, metadata !DIExpression()), !dbg !5250
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !5254
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5254
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5255
  call void @llvm.dbg.value(metadata i32 %9, metadata !5248, metadata !DIExpression()), !dbg !5250
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !5256
  %11 = shl i32 %10, 3, !dbg !5257
  call void @llvm.dbg.value(metadata i32 %11, metadata !5249, metadata !DIExpression()), !dbg !5250
  %12 = sub i32 %9, %6, !dbg !5258
  %13 = add i32 %12, %11, !dbg !5259
  ret i32 %13, !dbg !5260
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #14 !dbg !5261 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5265, metadata !DIExpression()), !dbg !5271
  call void @llvm.dbg.value(metadata i32 %1, metadata !5266, metadata !DIExpression()), !dbg !5271
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5272
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5272
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5267, metadata !DIExpression()), !dbg !5271
  %5 = icmp eq i32 %1, 0, !dbg !5273
  br i1 %5, label %19, label %6, !dbg !5275

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5276
  br i1 %7, label %19, label %8, !dbg !5277

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5278, !range !4894
  call void @llvm.dbg.value(metadata i32 %9, metadata !5269, metadata !DIExpression()), !dbg !5271
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !5279
  call void @llvm.dbg.value(metadata i32 %10, metadata !5270, metadata !DIExpression()), !dbg !5271
  %11 = icmp eq i32 %10, 0, !dbg !5280
  br i1 %11, label %19, label %12, !dbg !5282

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5283
  %14 = icmp ugt i32 %13, %9, !dbg !5285
  br i1 %14, label %15, label %17, !dbg !5286

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5287
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !5289
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !5290
  br label %17, !dbg !5291

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !5292
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5293
  call void @llvm.dbg.value(metadata i8* %18, metadata !5268, metadata !DIExpression()), !dbg !5271
  br label %19, !dbg !5294

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5271
  ret i8* %20, !dbg !5295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5296 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5300, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i32 %1, metadata !5301, metadata !DIExpression()), !dbg !5302
  %3 = lshr i32 %1, 3, !dbg !5303
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5304
  %5 = load i32, i32* %4, align 4, !dbg !5304
  %6 = icmp uge i32 %3, %5, !dbg !5305
  ret i1 %6, !dbg !5306
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5307 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5311, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata i32 %1, metadata !5312, metadata !DIExpression()), !dbg !5326
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5327
  call void @llvm.dbg.value(metadata i32 %3, metadata !5313, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5314, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5326
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5328
  %5 = load i32, i32* %4, align 4, !dbg !5328
  %6 = icmp eq i32 %5, 0, !dbg !5329
  br i1 %6, label %19, label %7, !dbg !5330

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5331
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5332
  call void @llvm.dbg.value(metadata i32 %9, metadata !5318, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i32 %8, metadata !5319, metadata !DIExpression()), !dbg !5333
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5334
  %11 = icmp ult i32 %10, %1, !dbg !5336
  br i1 %11, label %13, label %12, !dbg !5337

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !5338
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5340
  store i32 %14, i32* %4, align 4, !dbg !5341
  %15 = add nsw i32 %9, -1, !dbg !5342
  call void @llvm.dbg.value(metadata i32 %15, metadata !5318, metadata !DIExpression()), !dbg !5332
  %16 = icmp eq i32 %15, 0, !dbg !5342
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5343
  br i1 %18, label %19, label %7, !dbg !5343, !llvm.loop !5344

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5347
  %21 = load i32, i32* %20, align 4, !dbg !5347
  %22 = add nsw i32 %3, 1, !dbg !5348
  %23 = shl nsw i32 -1, %22, !dbg !5348
  %24 = and i32 %21, %23, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %24, metadata !5321, metadata !DIExpression()), !dbg !5326
  %25 = icmp eq i32 %24, 0, !dbg !5350
  br i1 %25, label %30, label %26, !dbg !5351

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5352, !range !5052
  call void @llvm.dbg.value(metadata i32 %27, metadata !5322, metadata !DIExpression()), !dbg !5353
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5354
  %29 = load i32, i32* %28, align 4, !dbg !5354
  call void @llvm.dbg.value(metadata i32 %29, metadata !5325, metadata !DIExpression()), !dbg !5353
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !5355
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5326
  ret i32 %31, !dbg !5356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5357 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5359, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %1, metadata !5360, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %2, metadata !5361, metadata !DIExpression()), !dbg !5365
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5366
  call void @llvm.dbg.value(metadata i32 %4, metadata !5362, metadata !DIExpression()), !dbg !5365
  %5 = sub i32 %2, %1, !dbg !5367
  call void @llvm.dbg.value(metadata i32 %5, metadata !5363, metadata !DIExpression()), !dbg !5365
  %6 = sub i32 %4, %5, !dbg !5368
  call void @llvm.dbg.value(metadata i32 %6, metadata !5364, metadata !DIExpression()), !dbg !5365
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5369
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !5370
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !5371
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5372
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5373
  ret void, !dbg !5374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5375 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5379, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.value(metadata i32 %1, metadata !5380, metadata !DIExpression()), !dbg !5383
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5384
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5381, metadata !DIExpression()), !dbg !5383
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5385
  call void @llvm.dbg.value(metadata i8* %4, metadata !5382, metadata !DIExpression()), !dbg !5383
  ret i8* %4, !dbg !5386
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !5387 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5391, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %1, metadata !5392, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %2, metadata !5393, metadata !DIExpression()), !dbg !5403
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5404
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5404
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5394, metadata !DIExpression()), !dbg !5403
  %6 = sub i32 0, %1, !dbg !5405
  %7 = and i32 %6, %1, !dbg !5406
  call void @llvm.dbg.value(metadata i32 %7, metadata !5396, metadata !DIExpression()), !dbg !5403
  %8 = icmp eq i32 %7, %1, !dbg !5407
  br i1 %8, label %13, label %9, !dbg !5409

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %10, metadata !5392, metadata !DIExpression()), !dbg !5403
  %11 = icmp ult i32 %7, 4, !dbg !5412
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5412
  br label %17, !dbg !5412

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5413
  br i1 %14, label %15, label %17, !dbg !5416

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !5417
  br label %57, !dbg !5419

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5403
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5420
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5392, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %19, metadata !5395, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %18, metadata !5396, metadata !DIExpression()), !dbg !5403
  %21 = icmp eq i32 %2, 0, !dbg !5421
  br i1 %21, label %57, label %22, !dbg !5423

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !5424
  br i1 %23, label %57, label %24, !dbg !5425

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5426
  %26 = add i32 %25, %20, !dbg !5427
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !5428, !range !4894
  call void @llvm.dbg.value(metadata i32 %27, metadata !5397, metadata !DIExpression()), !dbg !5403
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !5429
  call void @llvm.dbg.value(metadata i32 %28, metadata !5398, metadata !DIExpression()), !dbg !5403
  %29 = icmp eq i32 %28, 0, !dbg !5430
  br i1 %29, label %57, label %30, !dbg !5432

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !5433
  call void @llvm.dbg.value(metadata i8* %31, metadata !5399, metadata !DIExpression()), !dbg !5403
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5434
  %33 = ptrtoint i8* %32 to i32, !dbg !5434
  %34 = add i32 %20, -1, !dbg !5434
  %35 = add i32 %34, %33, !dbg !5434
  %36 = sub i32 0, %20, !dbg !5434
  %37 = and i32 %35, %36, !dbg !5434
  %38 = inttoptr i32 %37 to i8*, !dbg !5435
  %39 = sub i32 0, %18, !dbg !5436
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5436
  call void @llvm.dbg.value(metadata i8* %40, metadata !5399, metadata !DIExpression()), !dbg !5403
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5437
  %42 = ptrtoint i8* %41 to i32, !dbg !5437
  %43 = add i32 %42, 7, !dbg !5437
  %44 = and i32 %43, -8, !dbg !5437
  call void @llvm.dbg.value(metadata i32 %44, metadata !5400, metadata !DIExpression()), !dbg !5403
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !5438
  call void @llvm.dbg.value(metadata i32 %45, metadata !5401, metadata !DIExpression()), !dbg !5403
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !5439
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5440
  %48 = sub i32 %44, %47, !dbg !5440
  %49 = ashr exact i32 %48, 3, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %49, metadata !5402, metadata !DIExpression()), !dbg !5403
  %50 = icmp ugt i32 %45, %28, !dbg !5441
  br i1 %50, label %51, label %52, !dbg !5443

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !5444
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !5446
  br label %52, !dbg !5447

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !5448
  %54 = icmp ugt i32 %53, %49, !dbg !5450
  br i1 %54, label %55, label %56, !dbg !5451

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !5452
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !5454
  br label %56, !dbg !5455

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !5456
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5403
  ret i8* %58, !dbg !5457
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5458 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5462, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8* %1, metadata !5463, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i32 %2, metadata !5464, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i32 %3, metadata !5465, metadata !DIExpression()), !dbg !5481
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5482
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5482
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5466, metadata !DIExpression()), !dbg !5481
  %7 = icmp eq i8* %1, null, !dbg !5483
  br i1 %7, label %8, label %10, !dbg !5485

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5486
  br label %59, !dbg !5488

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5489
  br i1 %11, label %12, label %13, !dbg !5491

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5492
  br label %59, !dbg !5494

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !5495
  br i1 %14, label %59, label %15, !dbg !5497

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5498, !range !4894
  call void @llvm.dbg.value(metadata i32 %16, metadata !5467, metadata !DIExpression()), !dbg !5481
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5499
  call void @llvm.dbg.value(metadata i32 %17, metadata !5468, metadata !DIExpression()), !dbg !5481
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5500
  %19 = ptrtoint i8* %1 to i32, !dbg !5501
  %20 = ptrtoint i8* %18 to i32, !dbg !5501
  %21 = sub i32 %19, %20, !dbg !5501
  call void @llvm.dbg.value(metadata i32 %21, metadata !5469, metadata !DIExpression()), !dbg !5481
  %22 = add i32 %21, %3, !dbg !5502
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5503
  call void @llvm.dbg.value(metadata i32 %23, metadata !5470, metadata !DIExpression()), !dbg !5481
  %24 = icmp eq i32 %2, 0, !dbg !5504
  br i1 %24, label %29, label %25, !dbg !5505

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5506
  %27 = and i32 %26, %19, !dbg !5507
  %28 = icmp eq i32 %27, 0, !dbg !5507
  br i1 %28, label %29, label %49, !dbg !5508

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5509
  %31 = icmp eq i32 %23, %30, !dbg !5510
  br i1 %31, label %59, label %32, !dbg !5511

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5512
  br i1 %33, label %34, label %36, !dbg !5513

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5514
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !5516
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !5517
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !5518
  br label %59, !dbg !5519

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5520
  br i1 %37, label %49, label %38, !dbg !5521

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5522
  %40 = add i32 %39, %30, !dbg !5523
  %41 = icmp ult i32 %40, %23, !dbg !5524
  br i1 %41, label %49, label %42, !dbg !5525

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5526
  call void @llvm.dbg.value(metadata i32 %43, metadata !5471, metadata !DIExpression()), !dbg !5527
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5528
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5529
  %45 = icmp ult i32 %43, %44, !dbg !5531
  br i1 %45, label %46, label %48, !dbg !5532

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5533
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !5535
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !5536
  br label %48, !dbg !5537

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !5538
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !5539
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5540
  call void @llvm.dbg.value(metadata i8* %50, metadata !5477, metadata !DIExpression()), !dbg !5481
  %51 = icmp eq i8* %50, null, !dbg !5541
  br i1 %51, label %59, label %52, !dbg !5542

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5543, !range !4987
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !5544
  %55 = sub i32 %54, %21, !dbg !5545
  call void @llvm.dbg.value(metadata i32 %55, metadata !5478, metadata !DIExpression()), !dbg !5546
  %56 = icmp ult i32 %55, %3, !dbg !5547
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5547
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #28, !dbg !5548
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5549
  br label %59, !dbg !5550

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5481
  ret i8* %60, !dbg !5551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5552 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5556, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i32 %1, metadata !5557, metadata !DIExpression()), !dbg !5558
  %3 = shl i32 %1, 3, !dbg !5559
  %4 = add i32 %3, -4, !dbg !5560
  ret i32 %4, !dbg !5561
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !5562 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5566, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i8* %1, metadata !5567, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i32 %2, metadata !5568, metadata !DIExpression()), !dbg !5577
  %4 = add i32 %2, -4, !dbg !5578
  call void @llvm.dbg.value(metadata i32 %4, metadata !5568, metadata !DIExpression()), !dbg !5577
  %5 = ptrtoint i8* %1 to i32, !dbg !5579
  %6 = add i32 %5, 7, !dbg !5579
  %7 = and i32 %6, -8, !dbg !5579
  call void @llvm.dbg.value(metadata i32 %7, metadata !5569, metadata !DIExpression()), !dbg !5577
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5580
  %9 = ptrtoint i8* %8 to i32, !dbg !5580
  %10 = and i32 %9, -8, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %10, metadata !5570, metadata !DIExpression()), !dbg !5577
  %11 = sub i32 %10, %7, !dbg !5581
  %12 = lshr exact i32 %11, 3, !dbg !5582
  call void @llvm.dbg.value(metadata i32 %12, metadata !5571, metadata !DIExpression()), !dbg !5577
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5583
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5572, metadata !DIExpression()), !dbg !5577
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5584
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5585
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5586
  store i32 %12, i32* %15, align 8, !dbg !5587
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5588
  store i32 0, i32* %16, align 4, !dbg !5589
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !5590
  call void @llvm.dbg.value(metadata i32 %17, metadata !5573, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5577
  %18 = shl i32 %17, 2, !dbg !5591
  %19 = add i32 %18, 20, !dbg !5592
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !5593
  call void @llvm.dbg.value(metadata i32 %20, metadata !5574, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i32 0, metadata !5575, metadata !DIExpression()), !dbg !5594
  %21 = icmp slt i32 %17, 0, !dbg !5595
  br i1 %21, label %22, label %24, !dbg !5597

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !5598
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !5599
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !5600
  %23 = sub i32 %12, %20, !dbg !5601
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !5602
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !5603
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !5604
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !5605
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !5606
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !5607
  ret void, !dbg !5608

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5575, metadata !DIExpression()), !dbg !5594
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5609
  store i32 0, i32* %26, align 4, !dbg !5611
  %27 = add nuw i32 %25, 1, !dbg !5612
  call void @llvm.dbg.value(metadata i32 %27, metadata !5575, metadata !DIExpression()), !dbg !5594
  %28 = icmp eq i32 %25, %17, !dbg !5595
  br i1 %28, label %22, label %24, !dbg !5597, !llvm.loop !5613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5615 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5628, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5625, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i8* %1, metadata !5626, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i8* %2, metadata !5627, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %4, metadata !5629, metadata !DIExpression()), !dbg !5754
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5755
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !5755
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5630, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.value(metadata i32 0, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i1 undef, metadata !5636, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5754
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5757

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5757

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5758
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5628, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i8* %30, metadata !5627, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %29, metadata !5634, metadata !DIExpression()), !dbg !5754
  %31 = load i8, i8* %30, align 1, !dbg !5759
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5757

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5759
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5760
  call void @llvm.dbg.value(metadata i8* %34, metadata !5627, metadata !DIExpression()), !dbg !5754
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #28, !dbg !5760
  call void @llvm.dbg.value(metadata i32 %35, metadata !5638, metadata !DIExpression()), !dbg !5761
  %36 = icmp slt i32 %35, 0, !dbg !5762
  %37 = add i32 %29, 1, !dbg !5760
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %36, label %365, label %28, !llvm.loop !5764

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5766
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5643, metadata !DIExpression()), !dbg !5767
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5767
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5686, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5689, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %30, metadata !5692, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i32 -1, metadata !5693, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i32 -1, metadata !5694, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* null, metadata !5695, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %14, metadata !5696, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8 0, metadata !5697, metadata !DIExpression()), !dbg !5768
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !5769
  call void @llvm.dbg.value(metadata i8* %39, metadata !5627, metadata !DIExpression()), !dbg !5754
  %40 = load i24, i24* %15, align 8, !dbg !5770
  %41 = and i24 %40, 256, !dbg !5770
  %42 = icmp eq i24 %41, 0, !dbg !5770
  br i1 %42, label %51, label %43, !dbg !5772

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5773
  call void @llvm.dbg.value(metadata i8* %44, metadata !5628, metadata !DIExpression()), !dbg !5754
  %45 = bitcast i8* %27 to i32*, !dbg !5773
  %46 = load i32, i32* %45, align 4, !dbg !5773
  call void @llvm.dbg.value(metadata i32 %46, metadata !5693, metadata !DIExpression()), !dbg !5768
  %47 = icmp slt i32 %46, 0, !dbg !5775
  br i1 %47, label %48, label %56, !dbg !5777

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5778
  store i24 %49, i24* %15, align 8, !dbg !5778
  %50 = sub nsw i32 0, %46, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %50, metadata !5693, metadata !DIExpression()), !dbg !5768
  br label %56, !dbg !5781

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5782
  %53 = icmp eq i24 %52, 0, !dbg !5782
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5784
  br label %56, !dbg !5784

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5785
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5768
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5628, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %58, metadata !5693, metadata !DIExpression()), !dbg !5768
  %60 = and i24 %57, 1024, !dbg !5785
  %61 = icmp eq i24 %60, 0, !dbg !5785
  br i1 %61, label %69, label %62, !dbg !5786

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5787
  call void @llvm.dbg.value(metadata i8* %63, metadata !5628, metadata !DIExpression()), !dbg !5754
  %64 = bitcast i8* %59 to i32*, !dbg !5787
  %65 = load i32, i32* %64, align 4, !dbg !5787
  call void @llvm.dbg.value(metadata i32 %65, metadata !5698, metadata !DIExpression()), !dbg !5788
  %66 = icmp slt i32 %65, 0, !dbg !5789
  br i1 %66, label %67, label %74, !dbg !5791

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5792
  store i24 %68, i24* %15, align 8, !dbg !5792
  br label %74, !dbg !5794

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5795
  %71 = icmp eq i24 %70, 0, !dbg !5795
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5797
  br label %74, !dbg !5797

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5798
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5768
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5768
  call void @llvm.dbg.value(metadata i8* %77, metadata !5628, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %76, metadata !5694, metadata !DIExpression()), !dbg !5768
  store i32 0, i32* %16, align 4, !dbg !5799
  store i32 0, i32* %17, align 8, !dbg !5800
  %78 = lshr i24 %75, 16, !dbg !5798
  call void @llvm.dbg.value(metadata i24 %78, metadata !5701, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5768
  %79 = lshr i24 %75, 11, !dbg !5801
  %80 = and i24 %79, 15, !dbg !5801
  %81 = zext i24 %80 to i32, !dbg !5801
  call void @llvm.dbg.value(metadata i32 %81, metadata !5702, metadata !DIExpression()), !dbg !5768
  %82 = trunc i24 %78 to i3, !dbg !5802
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5802

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5803

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5806
  call void @llvm.dbg.value(metadata i8* %85, metadata !5628, metadata !DIExpression()), !dbg !5754
  %86 = bitcast i8* %77 to i32*, !dbg !5806
  %87 = load i32, i32* %86, align 4, !dbg !5806
  %88 = sext i32 %87 to i64, !dbg !5806
  store i64 %88, i64* %20, align 8, !dbg !5808
  br label %115, !dbg !5809

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5810
  call void @llvm.dbg.value(metadata i8* %90, metadata !5628, metadata !DIExpression()), !dbg !5754
  %91 = bitcast i8* %77 to i32*, !dbg !5810
  %92 = load i32, i32* %91, align 4, !dbg !5810
  %93 = sext i32 %92 to i64, !dbg !5810
  store i64 %93, i64* %20, align 8, !dbg !5813
  br label %115, !dbg !5814

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5815
  %96 = add i32 %95, 7, !dbg !5815
  %97 = and i32 %96, -8, !dbg !5815
  %98 = inttoptr i32 %97 to i8*, !dbg !5815
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5815
  call void @llvm.dbg.value(metadata i8* %99, metadata !5628, metadata !DIExpression()), !dbg !5754
  %100 = inttoptr i32 %97 to i64*, !dbg !5815
  %101 = load i64, i64* %100, align 8, !dbg !5815
  store i64 %101, i64* %20, align 8, !dbg !5816
  br label %115, !dbg !5817

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5818
  %104 = add i32 %103, 7, !dbg !5818
  %105 = and i32 %104, -8, !dbg !5818
  %106 = inttoptr i32 %105 to i8*, !dbg !5818
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5818
  call void @llvm.dbg.value(metadata i8* %107, metadata !5628, metadata !DIExpression()), !dbg !5754
  %108 = inttoptr i32 %105 to i64*, !dbg !5818
  %109 = load i64, i64* %108, align 8, !dbg !5818
  store i64 %109, i64* %20, align 8, !dbg !5819
  br label %115, !dbg !5820

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5821
  call void @llvm.dbg.value(metadata i8* %111, metadata !5628, metadata !DIExpression()), !dbg !5754
  %112 = bitcast i8* %77 to i32*, !dbg !5821
  %113 = load i32, i32* %112, align 4, !dbg !5821
  %114 = sext i32 %113 to i64, !dbg !5822
  store i64 %114, i64* %20, align 8, !dbg !5823
  br label %115, !dbg !5824

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5825
  call void @llvm.dbg.value(metadata i8* %117, metadata !5628, metadata !DIExpression()), !dbg !5754
  %118 = trunc i24 %79 to i4, !dbg !5826
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5826

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5827
  %121 = ashr exact i64 %120, 56, !dbg !5827
  store i64 %121, i64* %20, align 8, !dbg !5830
  br label %177, !dbg !5831

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5832
  %124 = ashr exact i64 %123, 48, !dbg !5832
  store i64 %124, i64* %20, align 8, !dbg !5835
  br label %177, !dbg !5836

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5837

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5840
  call void @llvm.dbg.value(metadata i8* %127, metadata !5628, metadata !DIExpression()), !dbg !5754
  %128 = bitcast i8* %77 to i32*, !dbg !5840
  %129 = load i32, i32* %128, align 4, !dbg !5840
  %130 = zext i32 %129 to i64, !dbg !5840
  store i64 %130, i64* %20, align 8, !dbg !5842
  br label %157, !dbg !5843

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5844
  call void @llvm.dbg.value(metadata i8* %132, metadata !5628, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i8* %132, metadata !5628, metadata !DIExpression()), !dbg !5754
  %133 = bitcast i8* %77 to i32*, !dbg !5844
  %134 = load i32, i32* %133, align 4, !dbg !5844
  %135 = zext i32 %134 to i64, !dbg !5844
  store i64 %135, i64* %20, align 8, !dbg !5844
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5846
  %138 = add i32 %137, 7, !dbg !5846
  %139 = and i32 %138, -8, !dbg !5846
  %140 = inttoptr i32 %139 to i8*, !dbg !5846
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5846
  call void @llvm.dbg.value(metadata i8* %141, metadata !5628, metadata !DIExpression()), !dbg !5754
  %142 = inttoptr i32 %139 to i64*, !dbg !5846
  %143 = load i64, i64* %142, align 8, !dbg !5846
  store i64 %143, i64* %20, align 8, !dbg !5847
  br label %157, !dbg !5848

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5849
  %146 = add i32 %145, 7, !dbg !5849
  %147 = and i32 %146, -8, !dbg !5849
  %148 = inttoptr i32 %147 to i8*, !dbg !5849
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5849
  call void @llvm.dbg.value(metadata i8* %149, metadata !5628, metadata !DIExpression()), !dbg !5754
  %150 = inttoptr i32 %147 to i64*, !dbg !5849
  %151 = load i64, i64* %150, align 8, !dbg !5849
  store i64 %151, i64* %20, align 8, !dbg !5850
  br label %157, !dbg !5851

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5852
  call void @llvm.dbg.value(metadata i8* %153, metadata !5628, metadata !DIExpression()), !dbg !5754
  %154 = bitcast i8* %77 to i32*, !dbg !5852
  %155 = load i32, i32* %154, align 4, !dbg !5852
  %156 = zext i32 %155 to i64, !dbg !5853
  store i64 %156, i64* %20, align 8, !dbg !5854
  br label %157, !dbg !5855

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5856
  call void @llvm.dbg.value(metadata i8* %159, metadata !5628, metadata !DIExpression()), !dbg !5754
  %160 = trunc i24 %79 to i4, !dbg !5857
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5857

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5858
  store i64 %162, i64* %20, align 8, !dbg !5861
  br label %177, !dbg !5862

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5863
  store i64 %164, i64* %20, align 8, !dbg !5866
  br label %177, !dbg !5867

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5868
  %167 = add i32 %166, 7, !dbg !5868
  %168 = and i32 %167, -8, !dbg !5868
  %169 = inttoptr i32 %168 to i8*, !dbg !5868
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5868
  call void @llvm.dbg.value(metadata i8* %170, metadata !5628, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i8* %170, metadata !5628, metadata !DIExpression()), !dbg !5754
  %171 = inttoptr i32 %168 to double*, !dbg !5868
  %172 = load double, double* %171, align 8, !dbg !5868
  store double %172, double* %19, align 8, !dbg !5868
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5872
  call void @llvm.dbg.value(metadata i8* %174, metadata !5628, metadata !DIExpression()), !dbg !5754
  %175 = bitcast i8* %77 to i8**, !dbg !5872
  %176 = load i8*, i8** %175, align 4, !dbg !5872
  store i8* %176, i8** %18, align 8, !dbg !5875
  br label %177, !dbg !5876

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5768
  call void @llvm.dbg.value(metadata i8* %178, metadata !5628, metadata !DIExpression()), !dbg !5754
  %179 = and i24 %75, 3, !dbg !5877
  %180 = icmp eq i24 %179, 0, !dbg !5877
  br i1 %180, label %185, label %181, !dbg !5877

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !5878
  call void @llvm.dbg.value(metadata i32 %182, metadata !5703, metadata !DIExpression()), !dbg !5879
  %183 = icmp slt i32 %182, 0, !dbg !5880
  %184 = add i32 %182, %29, !dbg !5878
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5882
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5883

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #28, !dbg !5884
  call void @llvm.dbg.value(metadata i32 %188, metadata !5707, metadata !DIExpression()), !dbg !5885
  %189 = icmp slt i32 %188, 0, !dbg !5886
  %190 = add i32 %29, 1, !dbg !5884
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5888
  call void @llvm.dbg.value(metadata i8* %192, metadata !5695, metadata !DIExpression()), !dbg !5768
  %193 = icmp sgt i32 %76, -1, !dbg !5889
  br i1 %193, label %194, label %196, !dbg !5891

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #28, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %195, metadata !5710, metadata !DIExpression()), !dbg !5894
  br label %241, !dbg !5895

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #28, !dbg !5896
  call void @llvm.dbg.value(metadata i32 %197, metadata !5710, metadata !DIExpression()), !dbg !5894
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5695, metadata !DIExpression()), !dbg !5768
  %199 = load i64, i64* %20, align 8, !dbg !5898
  %200 = trunc i64 %199 to i8, !dbg !5899
  store i8 %200, i8* %10, align 1, !dbg !5900
  call void @llvm.dbg.value(metadata i8* %23, metadata !5696, metadata !DIExpression()), !dbg !5768
  br label %245, !dbg !5901

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5902
  %203 = icmp eq i24 %202, 0, !dbg !5902
  %204 = trunc i24 %75 to i8, !dbg !5904
  %205 = shl i8 %204, 1, !dbg !5904
  %206 = and i8 %205, 32, !dbg !5904
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5904
  call void @llvm.dbg.value(metadata i8 %207, metadata !5697, metadata !DIExpression()), !dbg !5768
  %208 = load i64, i64* %20, align 8, !dbg !5905
  call void @llvm.dbg.value(metadata i64 %208, metadata !5635, metadata !DIExpression()), !dbg !5754
  %209 = icmp slt i64 %208, 0, !dbg !5906
  br i1 %209, label %210, label %212, !dbg !5908

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5697, metadata !DIExpression()), !dbg !5768
  %211 = sub nsw i64 0, %208, !dbg !5909
  store i64 %211, i64* %20, align 8, !dbg !5911
  br label %212, !dbg !5912

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5768
  call void @llvm.dbg.value(metadata i8 %213, metadata !5697, metadata !DIExpression()), !dbg !5768
  %214 = load i64, i64* %20, align 8, !dbg !5913
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !5914
  call void @llvm.dbg.value(metadata i8* %215, metadata !5695, metadata !DIExpression()), !dbg !5768
  br label %216, !dbg !5915

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5916
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5917
  call void @llvm.dbg.value(metadata i8* %218, metadata !5695, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8 %217, metadata !5697, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.label(metadata !5753), !dbg !5918
  %219 = icmp sgt i32 %76, -1, !dbg !5919
  br i1 %219, label %222, label %220, !dbg !5920

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5921
  br label %245, !dbg !5920

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5923
  %224 = sub i32 %22, %223, !dbg !5923
  call void @llvm.dbg.value(metadata i32 %224, metadata !5712, metadata !DIExpression()), !dbg !5924
  %225 = load i24, i24* %15, align 8, !dbg !5925
  %226 = and i24 %225, -65, !dbg !5925
  store i24 %226, i24* %15, align 8, !dbg !5925
  %227 = icmp ugt i32 %76, %224, !dbg !5926
  br i1 %227, label %228, label %245, !dbg !5928

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5929
  store i32 %229, i32* %16, align 4, !dbg !5931
  br label %245, !dbg !5932

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5933
  %232 = icmp eq i8* %231, null, !dbg !5935
  br i1 %232, label %245, label %233, !dbg !5936

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5937
  %235 = zext i32 %234 to i64, !dbg !5937
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !5939
  call void @llvm.dbg.value(metadata i8* %236, metadata !5695, metadata !DIExpression()), !dbg !5768
  %237 = load i24, i24* %15, align 8, !dbg !5940
  %238 = or i24 %237, 1048576, !dbg !5940
  store i24 %238, i24* %15, align 8, !dbg !5940
  store i8 120, i8* %21, align 1, !dbg !5941
  br label %216, !dbg !5942

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5943
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !5946
  br label %363, !dbg !5947

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5948
  call void @llvm.dbg.value(metadata i32 %242, metadata !5710, metadata !DIExpression()), !dbg !5894
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5949
  call void @llvm.dbg.value(metadata i32 -1, metadata !5694, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i32 %29, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i8* %192, metadata !5695, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %243, metadata !5696, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8 0, metadata !5697, metadata !DIExpression()), !dbg !5768
  %244 = icmp eq i8* %192, null, !dbg !5950
  br i1 %244, label %363, label %245, !dbg !5952, !llvm.loop !5764

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5921
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5768
  call void @llvm.dbg.value(metadata i32 0, metadata !5716, metadata !DIExpression()), !dbg !5768
  %250 = zext i8 %249 to i32, !dbg !5953
  %251 = icmp eq i8 %249, 0, !dbg !5955
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  call void @llvm.dbg.value(metadata i32 undef, metadata !5715, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  call void @llvm.dbg.value(metadata i32 undef, metadata !5715, metadata !DIExpression()), !dbg !5768
  %252 = icmp sgt i32 %58, 0, !dbg !5956
  br i1 %252, label %253, label %302, !dbg !5957

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5921
  %255 = icmp eq i24 %254, 0, !dbg !5921
  %256 = ptrtoint i8* %248 to i32, !dbg !5958
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  %257 = ptrtoint i8* %247 to i32, !dbg !5958
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  %258 = xor i1 %251, true, !dbg !5959
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  %259 = sext i1 %258 to i32, !dbg !5959
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  %260 = lshr i24 %246, 19, !dbg !5960
  %261 = and i24 %260, 1, !dbg !5960
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5960
  %263 = zext i24 %262 to i32, !dbg !5960
  %264 = add i32 %257, %259, !dbg !5960
  %265 = add i32 %256, %263, !dbg !5960
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  %266 = and i24 %246, 4194304, !dbg !5961
  %267 = icmp eq i24 %266, 0, !dbg !5961
  %268 = load i32, i32* %16, align 4, !dbg !5963
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5715, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5768
  call void @llvm.dbg.value(metadata i32 undef, metadata !5715, metadata !DIExpression()), !dbg !5768
  %269 = load i32, i32* %17, align 8, !dbg !5964
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5964
  call void @llvm.dbg.value(metadata i32 undef, metadata !5715, metadata !DIExpression()), !dbg !5768
  %271 = add i32 %264, %58, !dbg !5964
  %272 = add i32 %265, %268, !dbg !5964
  %273 = add i32 %272, %270, !dbg !5965
  %274 = sub i32 %271, %273, !dbg !5965
  call void @llvm.dbg.value(metadata i32 %274, metadata !5693, metadata !DIExpression()), !dbg !5768
  %275 = and i24 %246, 4, !dbg !5966
  %276 = icmp eq i24 %275, 0, !dbg !5966
  br i1 %276, label %277, label %302, !dbg !5967

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5717, metadata !DIExpression()), !dbg !5968
  %278 = and i24 %246, 64, !dbg !5969
  %279 = icmp eq i24 %278, 0, !dbg !5969
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5970
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5970
  %282 = select i1 %279, i32 32, i32 48, !dbg !5970
  br i1 %280, label %287, label %283, !dbg !5970

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #28, !dbg !5971
  call void @llvm.dbg.value(metadata i32 %284, metadata !5722, metadata !DIExpression()), !dbg !5972
  %285 = icmp slt i32 %284, 0, !dbg !5973
  %286 = add i32 %29, 1, !dbg !5971
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5768
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5758
  call void @llvm.dbg.value(metadata i32 %290, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i8 undef, metadata !5717, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8 %288, metadata !5697, metadata !DIExpression()), !dbg !5768
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5975
  %292 = add i32 %291, -1, !dbg !5975
  br label %293, !dbg !5975

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5976
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5758
  call void @llvm.dbg.value(metadata i32 %295, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %294, metadata !5693, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i32 %294, metadata !5693, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5768
  %296 = icmp sgt i32 %294, 0, !dbg !5977
  br i1 %296, label %297, label %302, !dbg !5975

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %298, metadata !5693, metadata !DIExpression()), !dbg !5768
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #28, !dbg !5979
  call void @llvm.dbg.value(metadata i32 %299, metadata !5728, metadata !DIExpression()), !dbg !5980
  %300 = icmp slt i32 %299, 0, !dbg !5981
  %301 = add i32 %295, 1, !dbg !5979
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %300, label %361, label %293, !llvm.loop !5983

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5768
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5768
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5758
  call void @llvm.dbg.value(metadata i32 %305, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %304, metadata !5693, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8 %303, metadata !5697, metadata !DIExpression()), !dbg !5768
  %306 = icmp eq i8 %303, 0, !dbg !5985
  br i1 %306, label %312, label %307, !dbg !5986

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5987
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #28, !dbg !5988
  call void @llvm.dbg.value(metadata i32 %309, metadata !5731, metadata !DIExpression()), !dbg !5989
  %310 = icmp slt i32 %309, 0, !dbg !5990
  %311 = add i32 %305, 1, !dbg !5988
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5758
  call void @llvm.dbg.value(metadata i32 %313, metadata !5634, metadata !DIExpression()), !dbg !5754
  %314 = lshr i24 %246, 20, !dbg !5992
  %315 = lshr i24 %246, 19, !dbg !5993
  %316 = or i24 %314, %315, !dbg !5994
  %317 = and i24 %316, 1, !dbg !5994
  %318 = icmp eq i24 %317, 0, !dbg !5994
  br i1 %318, label %323, label %319, !dbg !5995

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #28, !dbg !5996
  call void @llvm.dbg.value(metadata i32 %320, metadata !5735, metadata !DIExpression()), !dbg !5997
  %321 = icmp slt i32 %320, 0, !dbg !5998
  %322 = add i32 %313, 1, !dbg !5996
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5758
  call void @llvm.dbg.value(metadata i32 %324, metadata !5634, metadata !DIExpression()), !dbg !5754
  %325 = and i24 %246, 1048576, !dbg !6000
  %326 = icmp eq i24 %325, 0, !dbg !6000
  br i1 %326, label %333, label %327, !dbg !6001

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6002
  %329 = zext i8 %328 to i32, !dbg !6002
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #28, !dbg !6002
  call void @llvm.dbg.value(metadata i32 %330, metadata !5741, metadata !DIExpression()), !dbg !6003
  %331 = icmp slt i32 %330, 0, !dbg !6004
  %332 = add i32 %324, 1, !dbg !6002
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5758
  call void @llvm.dbg.value(metadata i32 %334, metadata !5634, metadata !DIExpression()), !dbg !5754
  %335 = load i32, i32* %16, align 4, !dbg !6006
  call void @llvm.dbg.value(metadata i32 %335, metadata !5716, metadata !DIExpression()), !dbg !5768
  br label %336, !dbg !6007

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6008
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5758
  call void @llvm.dbg.value(metadata i32 %338, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %337, metadata !5716, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5768
  %339 = icmp sgt i32 %337, 0, !dbg !6009
  br i1 %339, label %340, label %345, !dbg !6007

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6010
  call void @llvm.dbg.value(metadata i32 %341, metadata !5716, metadata !DIExpression()), !dbg !5768
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #28, !dbg !6011
  call void @llvm.dbg.value(metadata i32 %342, metadata !5745, metadata !DIExpression()), !dbg !6012
  %343 = icmp slt i32 %342, 0, !dbg !6013
  %344 = add i32 %338, 1, !dbg !6011
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %343, label %361, label %336, !llvm.loop !6015

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %346, metadata !5748, metadata !DIExpression()), !dbg !6018
  %347 = icmp slt i32 %346, 0, !dbg !6019
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %349, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %304, metadata !5693, metadata !DIExpression()), !dbg !5768
  %350 = icmp sgt i32 %304, 0, !dbg !6021
  br i1 %350, label %351, label %363, !dbg !6022

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6022
  %353 = add i32 %352, %338, !dbg !6022
  br label %354, !dbg !6022

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %355, metadata !5693, metadata !DIExpression()), !dbg !5768
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #28, !dbg !6023
  call void @llvm.dbg.value(metadata i32 %356, metadata !5750, metadata !DIExpression()), !dbg !6024
  %357 = icmp slt i32 %356, 0, !dbg !6025
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6027
  call void @llvm.dbg.value(metadata i32 undef, metadata !5634, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %359, metadata !5693, metadata !DIExpression()), !dbg !5768
  %360 = icmp sgt i32 %355, 1, !dbg !6021
  br i1 %360, label %354, label %363, !dbg !6022, !llvm.loop !6028

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5765
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5758
  call void @llvm.dbg.value(metadata i32 %364, metadata !5634, metadata !DIExpression()), !dbg !5754
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5765
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5754
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6030
  ret i32 %366, !dbg !6030
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6031 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6035, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %1, metadata !6036, metadata !DIExpression()), !dbg !6037
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6038
  store i24 0, i24* %3, align 4, !dbg !6038
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6038
  store i8 0, i8* %4, align 1, !dbg !6038
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6038
  store i32 0, i32* %5, align 4, !dbg !6038
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6038
  store i32 0, i32* %6, align 4, !dbg !6038
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6039
  call void @llvm.dbg.value(metadata i8* %7, metadata !6036, metadata !DIExpression()), !dbg !6037
  %8 = load i8, i8* %7, align 1, !dbg !6040
  %9 = icmp eq i8 %8, 37, !dbg !6042
  br i1 %9, label %10, label %12, !dbg !6043

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6044
  call void @llvm.dbg.value(metadata i8* %11, metadata !6036, metadata !DIExpression()), !dbg !6037
  store i8 37, i8* %4, align 1, !dbg !6046
  br label %18, !dbg !6047

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !6048
  call void @llvm.dbg.value(metadata i8* %13, metadata !6036, metadata !DIExpression()), !dbg !6037
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !6049
  call void @llvm.dbg.value(metadata i8* %14, metadata !6036, metadata !DIExpression()), !dbg !6037
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !6050
  call void @llvm.dbg.value(metadata i8* %15, metadata !6036, metadata !DIExpression()), !dbg !6037
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !6051
  call void @llvm.dbg.value(metadata i8* %16, metadata !6036, metadata !DIExpression()), !dbg !6037
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !6052
  call void @llvm.dbg.value(metadata i8* %17, metadata !6036, metadata !DIExpression()), !dbg !6037
  br label %18, !dbg !6053

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6037
  ret i8* %19, !dbg !6054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6055 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6059, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %1, metadata !6060, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %2, metadata !6061, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %3, metadata !6062, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 0, metadata !6063, metadata !DIExpression()), !dbg !6066
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6067

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6068
  call void @llvm.dbg.value(metadata i32 %9, metadata !6063, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %8, metadata !6061, metadata !DIExpression()), !dbg !6066
  %10 = icmp ult i8* %8, %3, !dbg !6069
  br i1 %10, label %11, label %13, !dbg !6070

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6071
  br label %17, !dbg !6070

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6072

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6073
  %16 = icmp eq i8 %15, 0, !dbg !6072
  br i1 %16, label %24, label %17, !dbg !6067

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6071
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6074
  call void @llvm.dbg.value(metadata i8* %19, metadata !6061, metadata !DIExpression()), !dbg !6066
  %20 = zext i8 %18 to i32, !dbg !6075
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #28, !dbg !6076
  call void @llvm.dbg.value(metadata i32 %21, metadata !6064, metadata !DIExpression()), !dbg !6077
  %22 = icmp slt i32 %21, 0, !dbg !6078
  %23 = add i32 %9, 1, !dbg !6080
  call void @llvm.dbg.value(metadata i32 undef, metadata !6063, metadata !DIExpression()), !dbg !6066
  br i1 %22, label %24, label %7, !llvm.loop !6081

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6066
  ret i32 %25, !dbg !6083
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #16 !dbg !6084 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6088, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6089, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata i8* %2, metadata !6090, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata i8* %3, metadata !6091, metadata !DIExpression()), !dbg !6098
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6099
  %6 = load i8, i8* %5, align 1, !dbg !6099
  %7 = zext i8 %6 to i32, !dbg !6100
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !6101
  %9 = icmp eq i32 %8, 0, !dbg !6101
  call void @llvm.dbg.value(metadata i1 %9, metadata !6092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6098
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !6102
  call void @llvm.dbg.value(metadata i32 %10, metadata !6093, metadata !DIExpression()), !dbg !6098
  %11 = ptrtoint i8* %3 to i32, !dbg !6103
  %12 = ptrtoint i8* %2 to i32, !dbg !6103
  %13 = sub i32 %11, %12, !dbg !6103
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6104
  call void @llvm.dbg.value(metadata i8* %14, metadata !6095, metadata !DIExpression()), !dbg !6098
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6105

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6098
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6088, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata i8* %18, metadata !6095, metadata !DIExpression()), !dbg !6098
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6106
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6107
  call void @llvm.dbg.value(metadata i32 %25, metadata !6096, metadata !DIExpression()), !dbg !6108
  %26 = icmp ult i32 %25, 10, !dbg !6109
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6110
  %28 = add i32 %27, %25, !dbg !6108
  %29 = trunc i32 %28 to i8, !dbg !6110
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6111
  call void @llvm.dbg.value(metadata i8* %30, metadata !6095, metadata !DIExpression()), !dbg !6098
  store i8 %29, i8* %30, align 1, !dbg !6112
  call void @llvm.dbg.value(metadata i64 %22, metadata !6088, metadata !DIExpression()), !dbg !6098
  %31 = icmp uge i64 %19, %15, !dbg !6113
  %32 = icmp ugt i8* %30, %2, !dbg !6114
  %33 = and i1 %31, %32, !dbg !6114
  br i1 %33, label %17, label %34, !dbg !6115, !llvm.loop !6116

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6118
  %36 = load i24, i24* %35, align 4, !dbg !6118
  %37 = and i24 %36, 32, !dbg !6118
  %38 = icmp eq i24 %37, 0, !dbg !6118
  br i1 %38, label %44, label %39, !dbg !6120

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6121

40:                                               ; preds = %39
  br label %41, !dbg !6123

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6127
  store i24 %43, i24* %35, align 4, !dbg !6127
  br label %44, !dbg !6128

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6129 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6135, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i8* %1, metadata !6136, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %2, metadata !6137, metadata !DIExpression()), !dbg !6138
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6139
  %5 = load i24, i24* %4, align 4, !dbg !6139
  %6 = lshr i24 %5, 11, !dbg !6139
  %7 = and i24 %6, 15, !dbg !6139
  %8 = zext i24 %7 to i32, !dbg !6139
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6140

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6141
  store i32 %2, i32* %10, align 4, !dbg !6143
  br label %28, !dbg !6144

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6145
  store i8 %12, i8* %1, align 1, !dbg !6146
  br label %28, !dbg !6147

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6148
  %15 = bitcast i8* %1 to i16*, !dbg !6149
  store i16 %14, i16* %15, align 2, !dbg !6150
  br label %28, !dbg !6151

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6152
  store i32 %2, i32* %17, align 4, !dbg !6153
  br label %28, !dbg !6154

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6155
  %20 = bitcast i8* %1 to i64*, !dbg !6156
  store i64 %19, i64* %20, align 8, !dbg !6157
  br label %28, !dbg !6158

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6159
  %23 = bitcast i8* %1 to i64*, !dbg !6160
  store i64 %22, i64* %23, align 8, !dbg !6161
  br label %28, !dbg !6162

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6163
  store i32 %2, i32* %25, align 4, !dbg !6164
  br label %28, !dbg !6165

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6166
  store i32 %2, i32* %27, align 4, !dbg !6167
  br label %28, !dbg !6168

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6169
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6173, metadata !DIExpression()), !dbg !6174
  %2 = add i32 %0, -65, !dbg !6175
  %3 = icmp ult i32 %2, 26, !dbg !6176
  %4 = zext i1 %3 to i32, !dbg !6176
  ret i32 %4, !dbg !6177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6178 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6182, metadata !DIExpression()), !dbg !6183
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6184

2:                                                ; preds = %1
  br label %4, !dbg !6185

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6187

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6188
  ret i32 %5, !dbg !6189
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #16 !dbg !6190 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6192, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i8* %1, metadata !6193, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i8 1, metadata !6194, metadata !DIExpression()), !dbg !6195
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6196

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6194, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i8* %5, metadata !6193, metadata !DIExpression()), !dbg !6195
  %6 = load i8, i8* %5, align 1, !dbg !6197
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6199

7:                                                ; preds = %4
  br label %11, !dbg !6200

8:                                                ; preds = %4
  br label %11, !dbg !6202

9:                                                ; preds = %4
  br label %11, !dbg !6203

10:                                               ; preds = %4
  br label %11, !dbg !6204

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6205
  %14 = or i24 %13, %12, !dbg !6205
  store i24 %14, i24* %3, align 4, !dbg !6205
  call void @llvm.dbg.value(metadata i8 poison, metadata !6194, metadata !DIExpression()), !dbg !6195
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6193, metadata !DIExpression()), !dbg !6195
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6194, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i8* %15, metadata !6193, metadata !DIExpression()), !dbg !6195
  %17 = load i24, i24* %3, align 4, !dbg !6206
  %18 = and i24 %17, 68, !dbg !6208
  %19 = icmp eq i24 %18, 68, !dbg !6208
  br i1 %19, label %20, label %22, !dbg !6208

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6209
  store i24 %21, i24* %3, align 4, !dbg !6209
  br label %22, !dbg !6211

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6212
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6213 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6215, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %1, metadata !6216, metadata !DIExpression()), !dbg !6219
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6220
  %5 = load i24, i24* %4, align 4, !dbg !6221
  %6 = or i24 %5, 128, !dbg !6221
  store i24 %6, i24* %4, align 4, !dbg !6221
  call void @llvm.dbg.value(metadata i8* %1, metadata !6216, metadata !DIExpression()), !dbg !6219
  %7 = load i8, i8* %1, align 1, !dbg !6222
  %8 = icmp eq i8 %7, 42, !dbg !6224
  br i1 %8, label %9, label %12, !dbg !6225

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6226
  store i24 %10, i24* %4, align 4, !dbg !6226
  call void @llvm.dbg.value(metadata i8* %1, metadata !6216, metadata !DIExpression()), !dbg !6219
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6228
  call void @llvm.dbg.value(metadata i8* %11, metadata !6216, metadata !DIExpression()), !dbg !6219
  store i8* %11, i8** %3, align 4, !dbg !6228
  br label %29, !dbg !6229

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6217, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8** %3, metadata !6216, metadata !DIExpression(DW_OP_deref)), !dbg !6219
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6230
  call void @llvm.dbg.value(metadata i32 %13, metadata !6218, metadata !DIExpression()), !dbg !6219
  %14 = load i8*, i8** %3, align 4, !dbg !6231
  call void @llvm.dbg.value(metadata i8* %14, metadata !6216, metadata !DIExpression()), !dbg !6219
  %15 = icmp eq i8* %14, %1, !dbg !6233
  br i1 %15, label %29, label %16, !dbg !6234

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6235
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6237
  store i32 %13, i32* %18, align 4, !dbg !6238
  %19 = lshr i32 %13, 31, !dbg !6239
  %20 = lshr i24 %17, 1, !dbg !6240
  %21 = and i24 %20, 1, !dbg !6240
  %22 = zext i24 %21 to i32, !dbg !6240
  %23 = or i32 %19, %22, !dbg !6240
  %24 = trunc i32 %23 to i24, !dbg !6240
  %25 = shl nuw nsw i24 %24, 1, !dbg !6240
  %26 = and i24 %17, -131, !dbg !6240
  %27 = or i24 %26, 128, !dbg !6240
  %28 = or i24 %25, %27, !dbg !6240
  store i24 %28, i24* %4, align 4, !dbg !6240
  br label %29, !dbg !6241

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6219
  ret i8* %30, !dbg !6242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6243 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6245, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %1, metadata !6246, metadata !DIExpression()), !dbg !6248
  %4 = load i8, i8* %1, align 1, !dbg !6249
  %5 = icmp eq i8 %4, 46, !dbg !6250
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6251
  %7 = load i24, i24* %6, align 4, !dbg !6252
  %8 = select i1 %5, i24 512, i24 0, !dbg !6252
  %9 = and i24 %7, -513, !dbg !6252
  %10 = or i24 %9, %8, !dbg !6252
  store i24 %10, i24* %6, align 4, !dbg !6252
  br i1 %5, label %11, label %32, !dbg !6253

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6246, metadata !DIExpression()), !dbg !6248
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6254
  call void @llvm.dbg.value(metadata i8* %12, metadata !6246, metadata !DIExpression()), !dbg !6248
  store i8* %12, i8** %3, align 4, !dbg !6254
  %13 = load i8, i8* %12, align 1, !dbg !6255
  %14 = icmp eq i8 %13, 42, !dbg !6257
  br i1 %14, label %15, label %18, !dbg !6258

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6259
  store i24 %16, i24* %6, align 4, !dbg !6259
  call void @llvm.dbg.value(metadata i8* %12, metadata !6246, metadata !DIExpression()), !dbg !6248
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6261
  call void @llvm.dbg.value(metadata i8* %17, metadata !6246, metadata !DIExpression()), !dbg !6248
  store i8* %17, i8** %3, align 4, !dbg !6261
  br label %32, !dbg !6262

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6246, metadata !DIExpression(DW_OP_deref)), !dbg !6248
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6263
  call void @llvm.dbg.value(metadata i32 %19, metadata !6247, metadata !DIExpression()), !dbg !6248
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6264
  store i32 %19, i32* %20, align 4, !dbg !6265
  %21 = lshr i32 %19, 31, !dbg !6266
  %22 = load i24, i24* %6, align 4, !dbg !6267
  %23 = lshr i24 %22, 1, !dbg !6267
  %24 = and i24 %23, 1, !dbg !6267
  %25 = zext i24 %24 to i32, !dbg !6267
  %26 = or i32 %21, %25, !dbg !6267
  %27 = trunc i32 %26 to i24, !dbg !6267
  %28 = shl nuw nsw i24 %27, 1, !dbg !6267
  %29 = and i24 %22, -3, !dbg !6267
  %30 = or i24 %28, %29, !dbg !6267
  store i24 %30, i24* %6, align 4, !dbg !6267
  %31 = load i8*, i8** %3, align 4, !dbg !6268
  call void @llvm.dbg.value(metadata i8* %31, metadata !6246, metadata !DIExpression()), !dbg !6248
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6248
  ret i8* %33, !dbg !6269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6270 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6272, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %1, metadata !6273, metadata !DIExpression()), !dbg !6274
  %3 = load i8, i8* %1, align 1, !dbg !6275
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6276

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6277
  call void @llvm.dbg.value(metadata i8* %5, metadata !6273, metadata !DIExpression()), !dbg !6274
  %6 = load i8, i8* %5, align 1, !dbg !6280
  %7 = icmp eq i8 %6, 104, !dbg !6281
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6282
  %9 = load i24, i24* %8, align 4, !dbg !6282
  %10 = and i24 %9, -30721, !dbg !6282
  br i1 %7, label %11, label %14, !dbg !6283

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6284
  store i24 %12, i24* %8, align 4, !dbg !6284
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6286
  call void @llvm.dbg.value(metadata i8* %13, metadata !6273, metadata !DIExpression()), !dbg !6274
  br label %56, !dbg !6287

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6288
  store i24 %15, i24* %8, align 4, !dbg !6288
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6290
  call void @llvm.dbg.value(metadata i8* %17, metadata !6273, metadata !DIExpression()), !dbg !6274
  %18 = load i8, i8* %17, align 1, !dbg !6292
  %19 = icmp eq i8 %18, 108, !dbg !6293
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6294
  %21 = load i24, i24* %20, align 4, !dbg !6294
  %22 = and i24 %21, -30721, !dbg !6294
  br i1 %19, label %23, label %26, !dbg !6295

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6296
  store i24 %24, i24* %20, align 4, !dbg !6296
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6298
  call void @llvm.dbg.value(metadata i8* %25, metadata !6273, metadata !DIExpression()), !dbg !6274
  br label %56, !dbg !6299

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6300
  store i24 %27, i24* %20, align 4, !dbg !6300
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6302
  %30 = load i24, i24* %29, align 4, !dbg !6303
  %31 = and i24 %30, -30721, !dbg !6303
  %32 = or i24 %31, 10240, !dbg !6303
  store i24 %32, i24* %29, align 4, !dbg !6303
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6304
  call void @llvm.dbg.value(metadata i8* %33, metadata !6273, metadata !DIExpression()), !dbg !6274
  br label %56, !dbg !6305

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6306
  %36 = load i24, i24* %35, align 4, !dbg !6307
  %37 = and i24 %36, -30721, !dbg !6307
  %38 = or i24 %37, 12288, !dbg !6307
  store i24 %38, i24* %35, align 4, !dbg !6307
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6308
  call void @llvm.dbg.value(metadata i8* %39, metadata !6273, metadata !DIExpression()), !dbg !6274
  br label %56, !dbg !6309

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6310
  %42 = load i24, i24* %41, align 4, !dbg !6311
  %43 = and i24 %42, -30721, !dbg !6311
  %44 = or i24 %43, 14336, !dbg !6311
  store i24 %44, i24* %41, align 4, !dbg !6311
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6312
  call void @llvm.dbg.value(metadata i8* %45, metadata !6273, metadata !DIExpression()), !dbg !6274
  br label %56, !dbg !6313

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6314
  %48 = load i24, i24* %47, align 4, !dbg !6315
  %49 = and i24 %48, -30723, !dbg !6315
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6316
  call void @llvm.dbg.value(metadata i8* %50, metadata !6273, metadata !DIExpression()), !dbg !6274
  %51 = or i24 %49, 16386, !dbg !6317
  store i24 %51, i24* %47, align 4, !dbg !6317
  br label %56, !dbg !6318

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6319
  %54 = load i24, i24* %53, align 4, !dbg !6320
  %55 = and i24 %54, -30721, !dbg !6320
  store i24 %55, i24* %53, align 4, !dbg !6320
  br label %56, !dbg !6321

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6273, metadata !DIExpression()), !dbg !6274
  ret i8* %57, !dbg !6322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6323 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6325, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %1, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8 0, metadata !6327, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %1, metadata !6326, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6330
  %3 = load i8, i8* %1, align 1, !dbg !6331
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6332
  store i8 %3, i8* %4, align 1, !dbg !6333
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6334

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6335

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6336
  %9 = load i24, i24* %8, align 4, !dbg !6336
  %10 = and i24 %9, -458753, !dbg !6336
  %11 = or i24 %10, %7, !dbg !6336
  call void @llvm.dbg.label(metadata !6328), !dbg !6337
  %12 = and i24 %9, 30720, !dbg !6338
  %13 = icmp eq i24 %12, 16384, !dbg !6338
  %14 = zext i1 %13 to i24, !dbg !6340
  %15 = or i24 %11, %14, !dbg !6340
  %16 = icmp eq i8 %3, 99, !dbg !6341
  br i1 %16, label %17, label %43, !dbg !6343

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6344
  %19 = icmp ne i24 %18, 0, !dbg !6344
  call void @llvm.dbg.value(metadata i1 %19, metadata !6327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6330
  br label %43, !dbg !6346

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6347
  %22 = load i24, i24* %21, align 4, !dbg !6348
  %23 = and i24 %22, -458753, !dbg !6348
  %24 = or i24 %23, 262144, !dbg !6348
  call void @llvm.dbg.value(metadata i8 1, metadata !6327, metadata !DIExpression()), !dbg !6330
  br label %43, !dbg !6349

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6352
  %27 = load i24, i24* %26, align 4, !dbg !6353
  %28 = and i24 %27, -458753, !dbg !6353
  %29 = or i24 %28, 196608, !dbg !6353
  %30 = and i24 %27, 30720, !dbg !6354
  %31 = icmp eq i24 %30, 16384, !dbg !6354
  br label %43, !dbg !6356

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6357
  %34 = load i24, i24* %33, align 4, !dbg !6358
  %35 = and i24 %34, -458753, !dbg !6358
  %36 = or i24 %35, 196608, !dbg !6358
  %37 = and i24 %34, 30720, !dbg !6359
  %38 = icmp ne i24 %37, 0, !dbg !6359
  br label %43, !dbg !6361

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6362
  %41 = load i24, i24* %40, align 4, !dbg !6363
  %42 = or i24 %41, 1, !dbg !6363
  br label %43, !dbg !6364

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6365
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6366
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6367
  call void @llvm.dbg.value(metadata i8* %48, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8 poison, metadata !6327, metadata !DIExpression()), !dbg !6330
  %49 = lshr i24 %44, 1, !dbg !6365
  %50 = and i24 %49, 1, !dbg !6365
  %51 = zext i24 %50 to i32, !dbg !6365
  %52 = or i32 %51, %47, !dbg !6365
  %53 = trunc i32 %52 to i24, !dbg !6365
  %54 = shl nuw nsw i24 %53, 1, !dbg !6365
  %55 = and i24 %44, -3, !dbg !6365
  %56 = or i24 %54, %55, !dbg !6365
  store i24 %56, i24* %46, align 4, !dbg !6365
  ret i8* %48, !dbg !6368
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #16 !dbg !6369 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6373, metadata !DIExpression()), !dbg !6376
  %2 = load i8*, i8** %0, align 4, !dbg !6377
  call void @llvm.dbg.value(metadata i8* %2, metadata !6374, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i32 0, metadata !6375, metadata !DIExpression()), !dbg !6376
  %3 = load i8, i8* %2, align 1, !dbg !6378
  %4 = zext i8 %3 to i32, !dbg !6379
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !6380
  %6 = icmp eq i32 %5, 0, !dbg !6381
  br i1 %6, label %19, label %7, !dbg !6381

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6375, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8* %10, metadata !6374, metadata !DIExpression()), !dbg !6376
  %11 = mul i32 %9, 10, !dbg !6382
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6384
  call void @llvm.dbg.value(metadata i8* %12, metadata !6374, metadata !DIExpression()), !dbg !6376
  %13 = add i32 %11, -48, !dbg !6385
  %14 = add i32 %13, %8, !dbg !6386
  call void @llvm.dbg.value(metadata i32 %14, metadata !6375, metadata !DIExpression()), !dbg !6376
  %15 = load i8, i8* %12, align 1, !dbg !6378
  %16 = zext i8 %15 to i32, !dbg !6379
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !6380
  %18 = icmp eq i32 %17, 0, !dbg !6381
  br i1 %18, label %19, label %7, !dbg !6381, !llvm.loop !6387

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6376
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6376
  store i8* %20, i8** %0, align 4, !dbg !6389
  ret i32 %21, !dbg !6390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6393, metadata !DIExpression()), !dbg !6394
  %2 = add i32 %0, -48, !dbg !6395
  %3 = icmp ult i32 %2, 10, !dbg !6396
  %4 = zext i1 %3 to i32, !dbg !6396
  ret i32 %4, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6398 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #26, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #26, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #26, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #26, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #26, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #26, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #26, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #26, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #26, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #26, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #26, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #26, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #26, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #26, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #26, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #26, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #26, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #26, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,5\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #26, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #26, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #26, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #26, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #26, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #26, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #26, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_CHANNEL_NAME\0A\09.equ\09CONFIG_ZBUS_CHANNEL_NAME,1\0A\09.type\09CONFIG_ZBUS_CHANNEL_NAME,%object", ""() #26, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_OBSERVER_NAME\0A\09.equ\09CONFIG_ZBUS_OBSERVER_NAME,1\0A\09.type\09CONFIG_ZBUS_OBSERVER_NAME,%object", ""() #26, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #26, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #26, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #26, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7042, !srcloc !7043
  ret void, !dbg !7044
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7045 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7047, metadata !DIExpression()), !dbg !7049
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !7050
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !7051
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7052, !srcloc !7061
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7052
  call void @llvm.dbg.value(metadata i32 %3, metadata !7058, metadata !DIExpression()) #26, !dbg !7062
  call void @llvm.dbg.value(metadata i32 undef, metadata !7059, metadata !DIExpression()) #26, !dbg !7062
  call void @llvm.dbg.value(metadata i32 %3, metadata !7048, metadata !DIExpression()), !dbg !7049
  call void @llvm.dbg.value(metadata i32 %3, metadata !7063, metadata !DIExpression()) #26, !dbg !7068
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7070, !srcloc !7071
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7072
  ret i32 0, !dbg !7073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #17 !dbg !7074 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7076
  %2 = or i32 %1, 512, !dbg !7076
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7076
  ret void, !dbg !7077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #17 !dbg !7078 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7079
  %2 = or i32 %1, 1024, !dbg !7079
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7079
  ret void, !dbg !7080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7081 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7083, metadata !DIExpression()), !dbg !7084
  ret i32 0, !dbg !7085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7086 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7089, metadata !DIExpression()), !dbg !7097
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7098
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7098
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7090, metadata !DIExpression()), !dbg !7099
  call void @llvm.va_start(i8* nonnull %3), !dbg !7100
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7101
  %5 = load i32, i32* %4, align 4, !dbg !7101
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7101
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !7101
  call void @llvm.va_end(i8* nonnull %3), !dbg !7102
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7103
  ret void, !dbg !7103
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7104 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7109, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata i8* %0, metadata !7108, metadata !DIExpression()), !dbg !7110
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #28, !dbg !7111
  ret void, !dbg !7112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7117, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i8* %1, metadata !7118, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i32 %2, metadata !7119, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i8* %1, metadata !7120, metadata !DIExpression()), !dbg !7121
  %4 = icmp eq i32 %2, 0, !dbg !7122
  br i1 %4, label %14, label %5, !dbg !7123

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #27, !dbg !7121
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7123

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7120, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i32 %10, metadata !7119, metadata !DIExpression()), !dbg !7121
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i32 noundef %7) #28, !dbg !7124
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #27, !dbg !7126
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7127
  call void @llvm.dbg.value(metadata i32 %11, metadata !7119, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i8* %12, metadata !7120, metadata !DIExpression()), !dbg !7121
  br i1 %13, label %14, label %8, !dbg !7127, !llvm.loop !7128

14:                                               ; preds = %8, %3
  ret void, !dbg !7130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !7131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7136, metadata !DIExpression()), !dbg !7137
  %2 = add i32 %0, -1, !dbg !7138
  %3 = icmp ult i32 %2, 4, !dbg !7138
  %4 = shl i32 %2, 3, !dbg !7138
  %5 = lshr i32 1145657157, %4, !dbg !7138
  %6 = trunc i32 %5 to i8, !dbg !7138
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7138
  ret i8 %7, !dbg !7139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7140 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7144, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i32 %1, metadata !7145, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i32 0, metadata !7146, metadata !DIExpression()), !dbg !7156
  br label %4, !dbg !7157

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.31, i32 0, i32 0)) #28, !dbg !7158
  call void @llvm.dbg.value(metadata i32 0, metadata !7148, metadata !DIExpression()), !dbg !7159
  br label %16, !dbg !7160

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7146, metadata !DIExpression()), !dbg !7156
  %6 = icmp ult i32 %5, %1, !dbg !7161
  br i1 %6, label %7, label %11, !dbg !7165

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7166
  %9 = load i8, i8* %8, align 1, !dbg !7166
  %10 = zext i8 %9 to i32, !dbg !7168
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.32, i32 0, i32 0), i32 noundef %10) #28, !dbg !7169
  br label %12, !dbg !7170

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.33, i32 0, i32 0)) #28, !dbg !7171
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %13, metadata !7146, metadata !DIExpression()), !dbg !7156
  %14 = icmp eq i32 %13, 8, !dbg !7174
  br i1 %14, label %3, label %4, !dbg !7157, !llvm.loop !7175

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.34, i32 0, i32 0)) #28, !dbg !7177
  ret void, !dbg !7178

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7148, metadata !DIExpression()), !dbg !7159
  %18 = icmp ult i32 %17, %1, !dbg !7179
  br i1 %18, label %19, label %26, !dbg !7180

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7181
  %21 = load i8, i8* %20, align 1, !dbg !7181
  call void @llvm.dbg.value(metadata i8 %21, metadata !7150, metadata !DIExpression()), !dbg !7182
  %22 = zext i8 %21 to i32, !dbg !7183
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #27, !dbg !7184
  %24 = icmp eq i32 %23, 0, !dbg !7185
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7184
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.35, i32 0, i32 0), i32 noundef %25) #28, !dbg !7186
  br label %27, !dbg !7187

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.36, i32 0, i32 0)) #28, !dbg !7188
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7190
  call void @llvm.dbg.value(metadata i32 %28, metadata !7148, metadata !DIExpression()), !dbg !7159
  %29 = icmp eq i32 %28, 8, !dbg !7191
  br i1 %29, label %15, label %16, !dbg !7160, !llvm.loop !7192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7196, metadata !DIExpression()), !dbg !7197
  %2 = add i32 %0, -32, !dbg !7198
  %3 = icmp ult i32 %2, 95, !dbg !7198
  %4 = zext i1 %3 to i32, !dbg !7198
  ret i32 %4, !dbg !7199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7249, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7250, metadata !DIExpression()), !dbg !7251
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7252
  br i1 %3, label %5, label %4, !dbg !7254

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #27, !dbg !7255
  br label %5, !dbg !7257

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !7258
  ret void, !dbg !7259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7260 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7264, metadata !DIExpression()), !dbg !7265
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7266
  %3 = load i32, i32* %2, align 4, !dbg !7266
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7266
  %5 = load i32, i32* %4, align 4, !dbg !7266
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7266
  %7 = load i32, i32* %6, align 4, !dbg !7266
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.37, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #28, !dbg !7266
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7271
  %9 = load i32, i32* %8, align 4, !dbg !7271
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7271
  %11 = load i32, i32* %10, align 4, !dbg !7271
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7271
  %13 = load i32, i32* %12, align 4, !dbg !7271
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #28, !dbg !7271
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7276
  %15 = load i32, i32* %14, align 4, !dbg !7276
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #28, !dbg !7276
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7281
  %17 = load i32, i32* %16, align 4, !dbg !7281
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.40, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #28, !dbg !7281
  ret void, !dbg !7286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7287 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7304, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7305, metadata !DIExpression()), !dbg !7307
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7308
  %4 = load i32, i32* %3, align 4, !dbg !7308
  call void @llvm.dbg.value(metadata i32 %4, metadata !7306, metadata !DIExpression()), !dbg !7307
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !7309
  ret void, !dbg !7310
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !7311 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7315, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.value(metadata i8* %0, metadata !7316, metadata !DIExpression()), !dbg !7318
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7319
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7319
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7317, metadata !DIExpression()), !dbg !7320
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7320
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7321
  %5 = bitcast i8* %4 to i32*, !dbg !7321
  %6 = load i32, i32* %5, align 4, !dbg !7321
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7322
  store i32 %6, i32* %7, align 4, !dbg !7323
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !7324
  unreachable, !dbg !7325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7329, metadata !DIExpression()), !dbg !7330
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !7331
  ret void, !dbg !7332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7337, metadata !DIExpression()), !dbg !7338
  %2 = icmp sgt i32 %0, -1, !dbg !7339
  br i1 %2, label %3, label %8, !dbg !7341

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7342, !srcloc !7344
  %4 = and i32 %0, 31, !dbg !7345
  %5 = shl nuw i32 1, %4, !dbg !7346
  %6 = lshr i32 %0, 5, !dbg !7347
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7348
  store volatile i32 %5, i32* %7, align 4, !dbg !7349
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7350, !srcloc !7351
  br label %8, !dbg !7352

8:                                                ; preds = %3, %1
  ret void, !dbg !7353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7356, metadata !DIExpression()), !dbg !7357
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !7358
  ret void, !dbg !7359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7362, metadata !DIExpression()), !dbg !7363
  %2 = icmp sgt i32 %0, -1, !dbg !7364
  br i1 %2, label %3, label %8, !dbg !7366

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7367
  %5 = shl nuw i32 1, %4, !dbg !7369
  %6 = lshr i32 %0, 5, !dbg !7370
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7371
  store volatile i32 %5, i32* %7, align 4, !dbg !7372
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7373, !srcloc !7377
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7378, !srcloc !7381
  br label %8, !dbg !7382

8:                                                ; preds = %3, %1
  ret void, !dbg !7383
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #18 !dbg !7384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7388, metadata !DIExpression()), !dbg !7389
  %2 = lshr i32 %0, 5, !dbg !7390
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7391
  %4 = load volatile i32, i32* %3, align 4, !dbg !7391
  %5 = and i32 %0, 31, !dbg !7392
  %6 = shl nuw i32 1, %5, !dbg !7392
  %7 = and i32 %4, %6, !dbg !7393
  ret i32 %7, !dbg !7394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7399, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32 %1, metadata !7400, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32 %2, metadata !7401, metadata !DIExpression()), !dbg !7402
  %4 = add i32 %1, 1, !dbg !7403
  call void @llvm.dbg.value(metadata i32 %4, metadata !7400, metadata !DIExpression()), !dbg !7402
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !7406
  ret void, !dbg !7407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !7408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7412, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 %1, metadata !7413, metadata !DIExpression()), !dbg !7414
  %3 = trunc i32 %1 to i8, !dbg !7415
  %4 = shl i8 %3, 4, !dbg !7415
  %5 = and i32 %0, 15, !dbg !7417
  %6 = add nsw i32 %5, -4, !dbg !7417
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7417
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7417
  %9 = icmp slt i32 %0, 0, !dbg !7417
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7417
  store volatile i8 %4, i8* %10, align 1, !dbg !7415
  ret void, !dbg !7418
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7419 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7421, metadata !DIExpression()), !dbg !7422
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #28, !dbg !7423
  ret void, !dbg !7424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7425 {
  tail call void @z_SysNmiOnReset() #28, !dbg !7427
  tail call void @z_arm_int_exit() #28, !dbg !7428
  ret void, !dbg !7429
}

; Function Attrs: optsize
declare !dbg !7430 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7431 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #11 !dbg !7433 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !7435
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !7436
  tail call void @z_bss_zero() #28, !dbg !7437
  tail call void @z_data_copy() #28, !dbg !7438
  tail call void @z_arm_interrupt_init() #28, !dbg !7439
  tail call void @z_cstart() #30, !dbg !7440
  unreachable, !dbg !7440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7441 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7442
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7443, !srcloc !7446
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7447, !srcloc !7450
  ret void, !dbg !7451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7452 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7453
  %2 = and i32 %1, -15728641, !dbg !7453
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7453
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #26, !dbg !7454, !srcloc !7461
  call void @llvm.dbg.value(metadata i32 %3, metadata !7459, metadata !DIExpression()) #26, !dbg !7462
  %4 = and i32 %3, -5, !dbg !7463
  call void @llvm.dbg.value(metadata i32 %4, metadata !7464, metadata !DIExpression()) #26, !dbg !7469
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #26, !dbg !7471, !srcloc !7472
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7473, !srcloc !7450
  ret void, !dbg !7475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7479, metadata !DIExpression()), !dbg !7480
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7481
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7482
  store i32 %0, i32* %3, align 4, !dbg !7483
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7484
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7485
  store i32 %4, i32* %5, align 4, !dbg !7486
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7487
  %7 = or i32 %6, 268435456, !dbg !7487
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7487
  call void @llvm.dbg.value(metadata i32 0, metadata !7488, metadata !DIExpression()) #26, !dbg !7491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7493, !srcloc !7494
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7495
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7496
  %10 = load i32, i32* %9, align 4, !dbg !7496
  ret i32 %10, !dbg !7497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !7498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7608, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7609, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %2, metadata !7610, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7611, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %4, metadata !7612, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %5, metadata !7613, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %6, metadata !7614, metadata !DIExpression()), !dbg !7616
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7617
  call void @llvm.dbg.value(metadata i8* %8, metadata !7615, metadata !DIExpression()), !dbg !7616
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7618
  %10 = bitcast i8* %9 to i32*, !dbg !7618
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7619
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7620
  %12 = bitcast i8* %8 to i32*, !dbg !7621
  store i32 %11, i32* %12, align 4, !dbg !7622
  %13 = ptrtoint i8* %4 to i32, !dbg !7623
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7624
  %15 = bitcast i8* %14 to i32*, !dbg !7624
  store i32 %13, i32* %15, align 4, !dbg !7625
  %16 = ptrtoint i8* %5 to i32, !dbg !7626
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7627
  %18 = bitcast i8* %17 to i32*, !dbg !7627
  store i32 %16, i32* %18, align 4, !dbg !7628
  %19 = ptrtoint i8* %6 to i32, !dbg !7629
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7630
  %21 = bitcast i8* %20 to i32*, !dbg !7630
  store i32 %19, i32* %21, align 4, !dbg !7631
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7632
  %23 = bitcast i8* %22 to i32*, !dbg !7632
  store i32 16777216, i32* %23, align 4, !dbg !7633
  %24 = ptrtoint i8* %8 to i32, !dbg !7634
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7635
  store i32 %24, i32* %25, align 8, !dbg !7636
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7637
  store i32 0, i32* %26, align 4, !dbg !7638
  ret void, !dbg !7639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !7640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7645, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %1, metadata !7646, metadata !DIExpression()), !dbg !7651
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7652
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7647, metadata !DIExpression()), !dbg !7651
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7653
  br i1 %4, label %19, label %5, !dbg !7655

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7650, metadata !DIExpression()), !dbg !7651
  %6 = icmp eq i32 %0, -22, !dbg !7656
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7656
  %8 = load i32, i32* %7, align 4, !dbg !7656
  br i1 %6, label %16, label %9, !dbg !7658

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7656
  %11 = icmp ule i32 %10, %0, !dbg !7656
  %12 = icmp ugt i32 %8, %0, !dbg !7656
  %13 = and i1 %12, %11, !dbg !7656
  %14 = icmp ugt i32 %8, %1, !dbg !7656
  %15 = and i1 %14, %13, !dbg !7656
  br i1 %15, label %18, label %19, !dbg !7656

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7656
  br i1 %17, label %18, label %19, !dbg !7658

18:                                               ; preds = %9, %16
  br label %19, !dbg !7659

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7651
  ret i32 %20, !dbg !7661
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #11 !dbg !7662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7666, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %1, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7668, metadata !DIExpression()), !dbg !7669
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7670
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #28, !dbg !7671
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !7672, !srcloc !7673
  unreachable, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7675 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7693, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %1, metadata !7694, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %2, metadata !7695, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7696, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 0, metadata !7697, metadata !DIExpression()), !dbg !7703
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7704
  %9 = and i32 %8, 511, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %9, metadata !7698, metadata !DIExpression()), !dbg !7703
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !7706
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !7706
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7707
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #26, !dbg !7707
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7702, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32 0, metadata !7709, metadata !DIExpression()) #26, !dbg !7712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7714, !srcloc !7715
  call void @llvm.dbg.value(metadata i8* %6, metadata !7700, metadata !DIExpression(DW_OP_deref)), !dbg !7703
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !7716
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i8* %5, metadata !7699, metadata !DIExpression(DW_OP_deref)), !dbg !7703
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %12, metadata !7697, metadata !DIExpression()), !dbg !7703
  %13 = load i8, i8* %5, align 1, !dbg !7718, !range !7720
  call void @llvm.dbg.value(metadata i8 %13, metadata !7699, metadata !DIExpression()), !dbg !7703
  %14 = icmp eq i8 %13, 0, !dbg !7718
  br i1 %14, label %15, label %32, !dbg !7721

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7722
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #28, !dbg !7723
  %18 = load i8, i8* %6, align 1, !dbg !7724, !range !7720
  call void @llvm.dbg.value(metadata i8 %18, metadata !7700, metadata !DIExpression()), !dbg !7703
  %19 = icmp eq i8 %18, 0, !dbg !7724
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7726
  %21 = load i32, i32* %20, align 4, !dbg !7726
  br i1 %19, label %27, label %22, !dbg !7727

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7728
  %24 = icmp eq i32 %23, 0, !dbg !7731
  br i1 %24, label %25, label %31, !dbg !7732

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7733
  br label %29, !dbg !7735

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7736
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7726
  br label %31, !dbg !7738

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #28, !dbg !7738
  br label %32, !dbg !7739

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #26, !dbg !7739
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !7739
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !7739
  ret void, !dbg !7739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7745, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %1, metadata !7746, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %2, metadata !7747, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %3, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8 0, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7750, metadata !DIExpression()), !dbg !7751
  store i8 0, i8* %3, align 1, !dbg !7752
  %5 = icmp ugt i32 %2, -16777217, !dbg !7753
  br i1 %5, label %6, label %17, !dbg !7755

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7756
  %8 = icmp eq i32 %7, 8, !dbg !7756
  br i1 %8, label %9, label %10, !dbg !7756

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.64, i32 0, i32 0), i32 noundef 69) #28, !dbg !7758
  br label %17, !dbg !7764

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7765
  %12 = icmp eq i32 %11, 0, !dbg !7765
  br i1 %12, label %13, label %14, !dbg !7766

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7750, metadata !DIExpression()), !dbg !7751
  store i8 1, i8* %3, align 1, !dbg !7769
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7751
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7750, metadata !DIExpression()), !dbg !7751
  br label %17, !dbg !7772

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7751
  ret %struct.__esf* %18, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7774 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7778, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %1, metadata !7779, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i8* %2, metadata !7780, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  store i8 0, i8* %2, align 1, !dbg !7783
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7784

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !7785
  call void @llvm.dbg.value(metadata i32 %5, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %12, !dbg !7787

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !7788
  call void @llvm.dbg.value(metadata i32 %7, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %12, !dbg !7789

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !7790
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %12, !dbg !7791

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !7792
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %12, !dbg !7793

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !7794
  br label %12, !dbg !7795

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #27, !dbg !7796
  br label %12, !dbg !7797

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7782
  call void @llvm.dbg.value(metadata i32 %13, metadata !7781, metadata !DIExpression()), !dbg !7782
  ret i32 %13, !dbg !7798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7799 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7803, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i8* %1, metadata !7804, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i32 0, metadata !7805, metadata !DIExpression()), !dbg !7806
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.59, i32 0, i32 0), i32 noundef 69) #28, !dbg !7807
  store i8 0, i8* %1, align 1, !dbg !7812
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7813
  %4 = and i32 %3, 2, !dbg !7815
  %5 = icmp eq i32 %4, 0, !dbg !7816
  br i1 %5, label %7, label %6, !dbg !7817

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.60, i32 0, i32 0), i32 noundef 69) #28, !dbg !7818
  br label %36, !dbg !7824

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7825
  %9 = icmp sgt i32 %8, -1, !dbg !7827
  br i1 %9, label %11, label %10, !dbg !7828

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.61, i32 0, i32 0), i32 noundef 69) #28, !dbg !7829
  br label %36, !dbg !7835

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7836
  %13 = and i32 %12, 1073741824, !dbg !7838
  %14 = icmp eq i32 %13, 0, !dbg !7839
  br i1 %14, label %36, label %15, !dbg !7840

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.62, i32 0, i32 0), i32 noundef 69) #28, !dbg !7841
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !7847
  br i1 %16, label %17, label %21, !dbg !7849

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7850
  %19 = load i32, i32* %18, align 4, !dbg !7850
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.63, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #28, !dbg !7850
  %20 = load i32, i32* %18, align 4, !dbg !7856
  call void @llvm.dbg.value(metadata i32 %20, metadata !7805, metadata !DIExpression()), !dbg !7806
  br label %36, !dbg !7857

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7858
  %23 = and i32 %22, 255, !dbg !7860
  %24 = icmp eq i32 %23, 0, !dbg !7861
  br i1 %24, label %27, label %25, !dbg !7862

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %26, metadata !7805, metadata !DIExpression()), !dbg !7806
  br label %36, !dbg !7865

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7866
  %29 = and i32 %28, 65280, !dbg !7868
  %30 = icmp eq i32 %29, 0, !dbg !7869
  br i1 %30, label %32, label %31, !dbg !7870

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !7871
  call void @llvm.dbg.value(metadata i32 0, metadata !7805, metadata !DIExpression()), !dbg !7806
  br label %36, !dbg !7873

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7874
  %34 = icmp ult i32 %33, 65536, !dbg !7876
  br i1 %34, label %36, label %35, !dbg !7877

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #27, !dbg !7878
  call void @llvm.dbg.value(metadata i32 0, metadata !7805, metadata !DIExpression()), !dbg !7806
  br label %36, !dbg !7880

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7806
  call void @llvm.dbg.value(metadata i32 %37, metadata !7805, metadata !DIExpression()), !dbg !7806
  ret i32 %37, !dbg !7881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7882 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7884, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 %1, metadata !7885, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i8* %2, metadata !7886, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 0, metadata !7887, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 -22, metadata !7888, metadata !DIExpression()), !dbg !7897
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.54, i32 0, i32 0), i32 noundef 69) #28, !dbg !7898
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7903
  %5 = and i32 %4, 16, !dbg !7905
  %6 = icmp eq i32 %5, 0, !dbg !7906
  br i1 %6, label %8, label %7, !dbg !7907

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.55, i32 0, i32 0), i32 noundef 69) #28, !dbg !7908
  br label %8, !dbg !7914

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7915
  %10 = and i32 %9, 8, !dbg !7917
  %11 = icmp eq i32 %10, 0, !dbg !7918
  br i1 %11, label %13, label %12, !dbg !7919

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.48, i32 0, i32 0), i32 noundef 69) #28, !dbg !7920
  br label %13, !dbg !7926

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7927
  %15 = and i32 %14, 2, !dbg !7928
  %16 = icmp eq i32 %15, 0, !dbg !7929
  br i1 %16, label %27, label %17, !dbg !7930

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.56, i32 0, i32 0), i32 noundef 69) #28, !dbg !7931
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %18, metadata !7889, metadata !DIExpression()), !dbg !7937
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7938
  %20 = and i32 %19, 128, !dbg !7940
  %21 = icmp eq i32 %20, 0, !dbg !7941
  br i1 %21, label %27, label %22, !dbg !7942

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7888, metadata !DIExpression()), !dbg !7897
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.57, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #28, !dbg !7943
  %23 = icmp eq i32 %1, 0, !dbg !7949
  br i1 %23, label %27, label %24, !dbg !7951

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7952
  %26 = and i32 %25, -129, !dbg !7952
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7952
  br label %27, !dbg !7954

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7897
  call void @llvm.dbg.value(metadata i32 %28, metadata !7888, metadata !DIExpression()), !dbg !7897
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7955
  %30 = and i32 %29, 1, !dbg !7957
  %31 = icmp eq i32 %30, 0, !dbg !7958
  br i1 %31, label %33, label %32, !dbg !7959

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.58, i32 0, i32 0), i32 noundef 69) #28, !dbg !7960
  br label %33, !dbg !7966

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7967
  %35 = and i32 %34, 32, !dbg !7969
  %36 = icmp eq i32 %35, 0, !dbg !7970
  br i1 %36, label %38, label %37, !dbg !7971

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.53, i32 0, i32 0), i32 noundef 69) #28, !dbg !7972
  br label %38, !dbg !7978

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7979
  %40 = and i32 %39, 16, !dbg !7980
  %41 = icmp eq i32 %40, 0, !dbg !7980
  br i1 %41, label %42, label %46, !dbg !7981

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7982
  %44 = and i32 %43, 2, !dbg !7983
  %45 = icmp eq i32 %44, 0, !dbg !7983
  br i1 %45, label %55, label %46, !dbg !7984

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7985
  %48 = and i32 %47, 2048, !dbg !7986
  %49 = icmp eq i32 %48, 0, !dbg !7986
  br i1 %49, label %55, label %50, !dbg !7987

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7988
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #28, !dbg !7989
  call void @llvm.dbg.value(metadata i32 %52, metadata !7892, metadata !DIExpression()), !dbg !7990
  %53 = icmp eq i32 %52, 0, !dbg !7991
  br i1 %53, label %55, label %54, !dbg !7993

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7994, metadata !DIExpression()) #26, !dbg !7997
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #26, !dbg !8000, !srcloc !8001
  call void @llvm.dbg.value(metadata i32 2, metadata !7887, metadata !DIExpression()), !dbg !7897
  br label %55, !dbg !8002

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7897
  call void @llvm.dbg.value(metadata i32 %56, metadata !7887, metadata !DIExpression()), !dbg !7897
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8003
  %58 = and i32 %57, 32, !dbg !8005
  %59 = icmp eq i32 %58, 0, !dbg !8006
  br i1 %59, label %63, label %60, !dbg !8007

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8008
  %62 = and i32 %61, -8193, !dbg !8008
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8008
  br label %63, !dbg !8010

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8011
  %65 = or i32 %64, 255, !dbg !8011
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8011
  store i8 0, i8* %2, align 1, !dbg !8012
  ret i32 %56, !dbg !8013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8014 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8018, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i32 %0, metadata !8019, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i8* %1, metadata !8020, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i32 0, metadata !8021, metadata !DIExpression()), !dbg !8025
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #28, !dbg !8026
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8031
  %4 = and i32 %3, 4096, !dbg !8033
  %5 = icmp eq i32 %4, 0, !dbg !8033
  br i1 %5, label %7, label %6, !dbg !8034

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.47, i32 0, i32 0), i32 noundef 69) #28, !dbg !8035
  br label %7, !dbg !8041

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8042
  %9 = and i32 %8, 2048, !dbg !8044
  %10 = icmp eq i32 %9, 0, !dbg !8044
  br i1 %10, label %12, label %11, !dbg !8045

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.48, i32 0, i32 0), i32 noundef 69) #28, !dbg !8046
  br label %12, !dbg !8052

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8053
  %14 = and i32 %13, 512, !dbg !8054
  %15 = icmp eq i32 %14, 0, !dbg !8054
  br i1 %15, label %26, label %16, !dbg !8055

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.49, i32 0, i32 0), i32 noundef 69) #28, !dbg !8056
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8061
  call void @llvm.dbg.value(metadata i32 %17, metadata !8022, metadata !DIExpression()), !dbg !8062
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8063
  %19 = and i32 %18, 32768, !dbg !8065
  %20 = icmp eq i32 %19, 0, !dbg !8066
  br i1 %20, label %26, label %21, !dbg !8067

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.50, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #28, !dbg !8068
  %22 = icmp eq i32 %0, 0, !dbg !8074
  br i1 %22, label %26, label %23, !dbg !8076

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8077
  %25 = and i32 %24, -32769, !dbg !8077
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8077
  br label %26, !dbg !8079

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8080
  %28 = and i32 %27, 1024, !dbg !8082
  %29 = icmp eq i32 %28, 0, !dbg !8082
  br i1 %29, label %31, label %30, !dbg !8083

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.51, i32 0, i32 0), i32 noundef 69) #28, !dbg !8084
  br label %31, !dbg !8090

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8091
  %33 = and i32 %32, 256, !dbg !8093
  %34 = icmp eq i32 %33, 0, !dbg !8094
  br i1 %34, label %35, label %39, !dbg !8095

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8096
  %37 = and i32 %36, 8192, !dbg !8098
  %38 = icmp eq i32 %37, 0, !dbg !8098
  br i1 %38, label %41, label %39, !dbg !8099

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.52, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.53, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #28, !dbg !8100
  br label %41, !dbg !8101

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8101
  %43 = or i32 %42, 65280, !dbg !8101
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8101
  store i8 0, i8* %1, align 1, !dbg !8102
  ret void, !dbg !8103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8104 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8110, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32 0, metadata !8111, metadata !DIExpression()), !dbg !8112
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.43, i32 0, i32 0), i32 noundef 69) #28, !dbg !8113
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8118
  %2 = and i32 %1, 33554432, !dbg !8120
  %3 = icmp eq i32 %2, 0, !dbg !8121
  br i1 %3, label %5, label %4, !dbg !8122

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.44, i32 0, i32 0), i32 noundef 69) #28, !dbg !8123
  br label %5, !dbg !8129

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8130
  %7 = and i32 %6, 16777216, !dbg !8132
  %8 = icmp eq i32 %7, 0, !dbg !8133
  br i1 %8, label %10, label %9, !dbg !8134

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #28, !dbg !8135
  br label %10, !dbg !8141

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8142
  %12 = and i32 %11, 524288, !dbg !8144
  %13 = icmp eq i32 %12, 0, !dbg !8145
  br i1 %13, label %15, label %14, !dbg !8146

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #28, !dbg !8147
  br label %15, !dbg !8153

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8154
  %17 = and i32 %16, 262144, !dbg !8156
  %18 = icmp eq i32 %17, 0, !dbg !8157
  br i1 %18, label %20, label %19, !dbg !8158

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #28, !dbg !8159
  br label %20, !dbg !8165

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8166
  %22 = and i32 %21, 131072, !dbg !8168
  %23 = icmp eq i32 %22, 0, !dbg !8169
  br i1 %23, label %25, label %24, !dbg !8170

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #28, !dbg !8171
  br label %25, !dbg !8177

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8178
  %27 = and i32 %26, 65536, !dbg !8180
  %28 = icmp eq i32 %27, 0, !dbg !8181
  br i1 %28, label %30, label %29, !dbg !8182

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.45, i32 0, i32 0), i32 noundef 69) #28, !dbg !8183
  br label %30, !dbg !8189

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8190
  %32 = or i32 %31, -65536, !dbg !8190
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8190
  ret void, !dbg !8191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8192 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i8* %0, metadata !8197, metadata !DIExpression()), !dbg !8198
  store i8 0, i8* %0, align 1, !dbg !8199
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #28, !dbg !8200
  ret void, !dbg !8205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8206 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8210, metadata !DIExpression()), !dbg !8212
  call void @llvm.dbg.value(metadata i32 %0, metadata !8211, metadata !DIExpression()), !dbg !8212
  %2 = icmp slt i32 %0, 16, !dbg !8213
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8213
  %4 = add nsw i32 %0, -16, !dbg !8213
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #28, !dbg !8213
  ret void, !dbg !8218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8219 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8223, metadata !DIExpression()), !dbg !8226
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8227
  %3 = load i32, i32* %2, align 4, !dbg !8227
  %4 = inttoptr i32 %3 to i16*, !dbg !8228
  call void @llvm.dbg.value(metadata i16* %4, metadata !8224, metadata !DIExpression()), !dbg !8226
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8229
  %6 = or i32 %5, 256, !dbg !8229
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8229
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8230, !srcloc !8233
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8234, !srcloc !8237
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8238
  %8 = load i16, i16* %7, align 2, !dbg !8239
  call void @llvm.dbg.value(metadata i16 %8, metadata !8225, metadata !DIExpression()), !dbg !8226
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8240
  %10 = and i32 %9, -257, !dbg !8240
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8240
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8241, !srcloc !8233
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8243, !srcloc !8237
  %11 = icmp eq i16 %8, -8446, !dbg !8245
  ret i1 %11, !dbg !8247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #17 !dbg !8248 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8249
  %2 = or i32 %1, 16, !dbg !8249
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8249
  ret void, !dbg !8250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #17 !dbg !8251 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8254, metadata !DIExpression()), !dbg !8255
  br label %1, !dbg !8256

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8254, metadata !DIExpression()), !dbg !8255
  tail call fastcc void @__NVIC_SetPriority.67(i32 noundef %2) #27, !dbg !8258
  %3 = add nuw nsw i32 %2, 1, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %3, metadata !8254, metadata !DIExpression()), !dbg !8255
  %4 = icmp eq i32 %3, 97, !dbg !8262
  br i1 %4, label %5, label %1, !dbg !8256, !llvm.loop !8263

5:                                                ; preds = %1
  ret void, !dbg !8265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.67(i32 noundef %0) unnamed_addr #17 !dbg !8266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8268, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32 1, metadata !8269, metadata !DIExpression()), !dbg !8270
  %2 = and i32 %0, 15, !dbg !8271
  %3 = add nsw i32 %2, -4, !dbg !8271
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8271
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8271
  %6 = icmp slt i32 %0, 0, !dbg !8271
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8271
  store volatile i8 16, i8* %7, align 1, !dbg !8272
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8381, metadata !DIExpression()), !dbg !8382
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8383
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8385
  br i1 %3, label %4, label %12, !dbg !8386

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8387, !srcloc !8399
  call void @llvm.dbg.value(metadata i32 %5, metadata !8390, metadata !DIExpression()) #26, !dbg !8400
  %6 = icmp eq i32 %5, 0, !dbg !8401
  br i1 %6, label %12, label %7, !dbg !8402

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8403
  %9 = or i32 %8, 268435456, !dbg !8403
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8403
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8405
  %11 = and i32 %10, -32769, !dbg !8405
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8405
  br label %12, !dbg !8406

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !8407
  ret void, !dbg !8408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8409 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #28, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !612, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i8 0, metadata !613, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i32 64, metadata !615, metadata !DIExpression()), !dbg !8412
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8413
  %3 = load i32, i32* %2, align 4, !dbg !8413
  %4 = add i32 %3, -64, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %4, metadata !614, metadata !DIExpression()), !dbg !8412
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8416
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8417
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8418
  call void @llvm.dbg.value(metadata i8 1, metadata !613, metadata !DIExpression()), !dbg !8412
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #28, !dbg !8419
  ret void, !dbg !8420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8421 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8422
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8423, !srcloc !8426
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8427, !srcloc !8430
  ret void, !dbg !8431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8432 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8433, !srcloc !8436
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8437
  ret void, !dbg !8438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8439 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8454, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i8 %1, metadata !8455, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i32 %2, metadata !8456, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i32 %3, metadata !8457, metadata !DIExpression()), !dbg !8458
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !8459
  ret void, !dbg !8461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8462 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8467, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i8 %1, metadata !8468, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 undef, metadata !8469, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 undef, metadata !8470, metadata !DIExpression()), !dbg !8472
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8473
  call void @llvm.dbg.value(metadata i8 %3, metadata !8471, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8472
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !8474
  call void @llvm.dbg.value(metadata i32 %4, metadata !8471, metadata !DIExpression()), !dbg !8472
  %5 = trunc i32 %4 to i8, !dbg !8475
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8478 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8482, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i8 %1, metadata !8483, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i8 %2, metadata !8484, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i1 %3, metadata !8485, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8488
  %5 = zext i8 %2 to i32, !dbg !8489
  call void @llvm.dbg.value(metadata i32 %5, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 0, metadata !8486, metadata !DIExpression()), !dbg !8488
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 0, metadata !8486, metadata !DIExpression()), !dbg !8488
  %7 = icmp eq i8 %1, 0, !dbg !8490
  br i1 %7, label %30, label %8, !dbg !8493

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 %10, metadata !8486, metadata !DIExpression()), !dbg !8488
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8494
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8497
  %13 = load i32, i32* %12, align 4, !dbg !8497
  %14 = icmp eq i32 %13, 0, !dbg !8498
  br i1 %14, label %26, label %15, !dbg !8499

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8500

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !8502
  %18 = icmp eq i32 %17, 0, !dbg !8502
  br i1 %18, label %19, label %20, !dbg !8503

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #28, !dbg !8504
  br label %30, !dbg !8510

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8511
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !8512
  call void @llvm.dbg.value(metadata i32 %22, metadata !8487, metadata !DIExpression()), !dbg !8488
  %23 = icmp eq i32 %22, -22, !dbg !8513
  br i1 %23, label %30, label %24, !dbg !8515

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8516
  call void @llvm.dbg.value(metadata i32 %25, metadata !8487, metadata !DIExpression()), !dbg !8488
  br label %26, !dbg !8517

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8488
  call void @llvm.dbg.value(metadata i32 %27, metadata !8487, metadata !DIExpression()), !dbg !8488
  %28 = add nuw nsw i32 %10, 1, !dbg !8518
  call void @llvm.dbg.value(metadata i32 %28, metadata !8486, metadata !DIExpression()), !dbg !8488
  %29 = icmp eq i32 %28, %6, !dbg !8490
  br i1 %29, label %30, label %8, !dbg !8493, !llvm.loop !8519

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8488
  ret i32 %31, !dbg !8521
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8522 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8526, metadata !DIExpression()), !dbg !8528
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8529
  %3 = load i32, i32* %2, align 4, !dbg !8529
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8530, !range !5052
  %5 = icmp ult i32 %4, 2, !dbg !8530
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8531
  br i1 %7, label %8, label %15, !dbg !8531

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8532
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8533
  %11 = load i32, i32* %10, align 4, !dbg !8533
  %12 = and i32 %11, %9, !dbg !8534
  %13 = icmp eq i32 %12, 0, !dbg !8535
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8527, metadata !DIExpression()), !dbg !8528
  ret i32 %16, !dbg !8536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8537 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8541, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8542, metadata !DIExpression()), !dbg !8544
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8545
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8545
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8543, metadata !DIExpression()), !dbg !8546
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8547
  %6 = load i32, i32* %5, align 4, !dbg !8547
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8548
  store i32 %6, i32* %7, align 4, !dbg !8549
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8550
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8551
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8552
  %11 = load i32, i32* %10, align 4, !dbg !8552
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !8553
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !8554
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8555
  ret i32 %12, !dbg !8556
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #13 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8564, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8565, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 undef, metadata !8566, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %2, metadata !8567, metadata !DIExpression()), !dbg !8568
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8569
  %5 = load i32, i32* %4, align 4, !dbg !8569
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !8570
  %7 = or i32 %6, %5, !dbg !8571
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8572
  store i32 %7, i32* %8, align 4, !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8575 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8579, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8580, metadata !DIExpression()), !dbg !8581
  %3 = zext i8 %0 to i32, !dbg !8582
  %4 = icmp ugt i8 %0, 7, !dbg !8584
  br i1 %4, label %5, label %6, !dbg !8585

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #28, !dbg !8586
  br label %7, !dbg !8592

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !8593
  br label %7, !dbg !8594

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8581
  ret i32 %8, !dbg !8595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #17 !dbg !8596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8600, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8601, metadata !DIExpression()), !dbg !8602
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !8603
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8604
  %4 = load i32, i32* %3, align 4, !dbg !8604
  %5 = and i32 %4, -32, !dbg !8605
  %6 = or i32 %5, %0, !dbg !8606
  %7 = or i32 %6, 16, !dbg !8606
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8607
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8608
  %9 = load i32, i32* %8, align 4, !dbg !8608
  %10 = or i32 %9, 1, !dbg !8609
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8610
  ret void, !dbg !8611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #17 !dbg !8612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8615, metadata !DIExpression()), !dbg !8616
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8617
  ret void, !dbg !8618
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8623, metadata !DIExpression()), !dbg !8624
  %2 = icmp ult i32 %0, 33, !dbg !8625
  br i1 %2, label %11, label %3, !dbg !8627

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8628
  br i1 %4, label %11, label %5, !dbg !8630

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8631
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8632, !range !5052
  %8 = mul nsw i32 %7, -2, !dbg !8633
  %9 = add nsw i32 %8, 62, !dbg !8633
  %10 = and i32 %9, 62, !dbg !8634
  br label %11, !dbg !8635

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8624
  ret i32 %12, !dbg !8636
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8637 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8641, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8 %1, metadata !8642, metadata !DIExpression()), !dbg !8643
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !8644
  ret void, !dbg !8646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8647 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8651, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8 %1, metadata !8652, metadata !DIExpression()), !dbg !8658
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8659
  call void @llvm.dbg.value(metadata i8 %3, metadata !8653, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8658
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !8660
  call void @llvm.dbg.value(metadata i32 %4, metadata !8653, metadata !DIExpression()), !dbg !8658
  %5 = icmp ne i32 %4, -22, !dbg !8661
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8662
  call void @llvm.dbg.value(metadata i32 %4, metadata !8654, metadata !DIExpression()), !dbg !8663
  br i1 %7, label %8, label %12, !dbg !8662

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8654, metadata !DIExpression()), !dbg !8663
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !8664
  %10 = add i32 %9, 1, !dbg !8667
  call void @llvm.dbg.value(metadata i32 %10, metadata !8654, metadata !DIExpression()), !dbg !8663
  %11 = icmp eq i32 %10, 8, !dbg !8668
  br i1 %11, label %12, label %8, !dbg !8669, !llvm.loop !8670

12:                                               ; preds = %8, %2
  ret void, !dbg !8672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #17 !dbg !8673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8676, metadata !DIExpression()), !dbg !8677
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8678
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8679
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8681 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8686
  %2 = icmp ugt i32 %1, 8, !dbg !8688
  br i1 %2, label %14, label %3, !dbg !8689

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !8690
  call void @llvm.dbg.value(metadata i32 0, metadata !8685, metadata !DIExpression()), !dbg !8691
  %4 = icmp eq i32 %1, 0, !dbg !8692
  br i1 %4, label %12, label %5, !dbg !8695

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8695

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8685, metadata !DIExpression()), !dbg !8691
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8696
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !8698
  %10 = add nuw i32 %8, 1, !dbg !8699
  call void @llvm.dbg.value(metadata i32 %10, metadata !8685, metadata !DIExpression()), !dbg !8691
  %11 = icmp eq i32 %10, %1, !dbg !8692
  br i1 %11, label %12, label %7, !dbg !8695, !llvm.loop !8700

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8702
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8703
  tail call void @arm_core_mpu_enable() #27, !dbg !8704
  br label %14, !dbg !8705

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8691
  ret i32 %15, !dbg !8706
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !8707 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8714, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i8* %1, metadata !8715, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i8* %0, metadata !8716, metadata !DIExpression()), !dbg !8717
  %3 = load i8, i8* %1, align 1, !dbg !8718
  %4 = icmp eq i8 %3, 0, !dbg !8719
  br i1 %4, label %13, label %5, !dbg !8720

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8714, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i8* %8, metadata !8715, metadata !DIExpression()), !dbg !8717
  store i8 %6, i8* %7, align 1, !dbg !8721
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8723
  call void @llvm.dbg.value(metadata i8* %9, metadata !8714, metadata !DIExpression()), !dbg !8717
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8724
  call void @llvm.dbg.value(metadata i8* %10, metadata !8715, metadata !DIExpression()), !dbg !8717
  %11 = load i8, i8* %10, align 1, !dbg !8718
  %12 = icmp eq i8 %11, 0, !dbg !8719
  br i1 %12, label %13, label %5, !dbg !8720, !llvm.loop !8725

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8727
  ret i8* %0, !dbg !8728
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8729 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %1, metadata !8734, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %2, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %0, metadata !8736, metadata !DIExpression()), !dbg !8737
  %4 = icmp eq i32 %2, 0, !dbg !8738
  br i1 %4, label %22, label %5, !dbg !8739

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %7, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %8, metadata !8734, metadata !DIExpression()), !dbg !8737
  %9 = load i8, i8* %8, align 1, !dbg !8740
  %10 = icmp eq i8 %9, 0, !dbg !8741
  br i1 %10, label %16, label %11, !dbg !8742

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8743
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8745
  call void @llvm.dbg.value(metadata i8* %12, metadata !8734, metadata !DIExpression()), !dbg !8737
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8746
  call void @llvm.dbg.value(metadata i8* %13, metadata !8733, metadata !DIExpression()), !dbg !8737
  %14 = add i32 %7, -1, !dbg !8747
  call void @llvm.dbg.value(metadata i32 %14, metadata !8735, metadata !DIExpression()), !dbg !8737
  %15 = icmp eq i32 %14, 0, !dbg !8738
  br i1 %15, label %22, label %5, !dbg !8739, !llvm.loop !8748

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %18, metadata !8735, metadata !DIExpression()), !dbg !8737
  store i8 0, i8* %17, align 1, !dbg !8750
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8752
  call void @llvm.dbg.value(metadata i8* %19, metadata !8733, metadata !DIExpression()), !dbg !8737
  %20 = add i32 %18, -1, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %20, metadata !8735, metadata !DIExpression()), !dbg !8737
  %21 = icmp eq i32 %20, 0, !dbg !8754
  br i1 %21, label %22, label %16, !dbg !8755, !llvm.loop !8756

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8758
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8763, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 %1, metadata !8764, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 %1, metadata !8765, metadata !DIExpression()), !dbg !8766
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8767

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8763, metadata !DIExpression()), !dbg !8766
  %6 = load i8, i8* %5, align 1, !dbg !8768
  %7 = icmp eq i8 %6, %3, !dbg !8769
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8770
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8771
  call void @llvm.dbg.value(metadata i8* %10, metadata !8763, metadata !DIExpression()), !dbg !8766
  br i1 %9, label %11, label %4, !dbg !8770, !llvm.loop !8773

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8775
  ret i8* %12, !dbg !8776
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8777 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8779, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i32 %1, metadata !8780, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* null, metadata !8781, metadata !DIExpression()), !dbg !8782
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8783

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8782
  call void @llvm.dbg.value(metadata i8* %6, metadata !8781, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* %5, metadata !8779, metadata !DIExpression()), !dbg !8782
  %7 = load i8, i8* %5, align 1, !dbg !8784
  %8 = icmp eq i8 %7, %3, !dbg !8787
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8788
  call void @llvm.dbg.value(metadata i8* %9, metadata !8781, metadata !DIExpression()), !dbg !8782
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8789
  call void @llvm.dbg.value(metadata i8* %10, metadata !8779, metadata !DIExpression()), !dbg !8782
  %11 = icmp eq i8 %7, 0, !dbg !8790
  br i1 %11, label %12, label %4, !dbg !8790, !llvm.loop !8791

12:                                               ; preds = %4
  ret i8* %9, !dbg !8793
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !8794 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8798, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i32 0, metadata !8799, metadata !DIExpression()), !dbg !8800
  %2 = load i8, i8* %0, align 1, !dbg !8801
  %3 = icmp eq i8 %2, 0, !dbg !8802
  br i1 %3, label %11, label %4, !dbg !8803

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8799, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i8* %6, metadata !8798, metadata !DIExpression()), !dbg !8800
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8804
  call void @llvm.dbg.value(metadata i8* %7, metadata !8798, metadata !DIExpression()), !dbg !8800
  %8 = add i32 %5, 1, !dbg !8806
  call void @llvm.dbg.value(metadata i32 %8, metadata !8799, metadata !DIExpression()), !dbg !8800
  %9 = load i8, i8* %7, align 1, !dbg !8801
  %10 = icmp eq i8 %9, 0, !dbg !8802
  br i1 %10, label %11, label %4, !dbg !8803, !llvm.loop !8807

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8800
  ret i32 %12, !dbg !8809
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8814, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 %1, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 0, metadata !8816, metadata !DIExpression()), !dbg !8817
  %3 = load i8, i8* %0, align 1, !dbg !8818
  %4 = icmp ne i8 %3, 0, !dbg !8819
  %5 = icmp ne i32 %1, 0, !dbg !8820
  %6 = and i1 %4, %5, !dbg !8820
  br i1 %6, label %7, label %16, !dbg !8821

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8816, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8* %9, metadata !8814, metadata !DIExpression()), !dbg !8817
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8822
  call void @llvm.dbg.value(metadata i8* %10, metadata !8814, metadata !DIExpression()), !dbg !8817
  %11 = add nuw i32 %8, 1, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %11, metadata !8816, metadata !DIExpression()), !dbg !8817
  %12 = load i8, i8* %10, align 1, !dbg !8818
  %13 = icmp ne i8 %12, 0, !dbg !8819
  %14 = icmp ult i32 %11, %1, !dbg !8820
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8820
  br i1 %15, label %7, label %16, !dbg !8821, !llvm.loop !8825

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8817
  ret i32 %17, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !8828 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8832, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i8* %1, metadata !8833, metadata !DIExpression()), !dbg !8834
  %3 = load i8, i8* %0, align 1, !dbg !8835
  %4 = load i8, i8* %1, align 1, !dbg !8836
  %5 = icmp ne i8 %3, %4, !dbg !8837
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8838
  br i1 %7, label %18, label %8, !dbg !8838

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8833, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i8* %10, metadata !8832, metadata !DIExpression()), !dbg !8834
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8839
  call void @llvm.dbg.value(metadata i8* %11, metadata !8832, metadata !DIExpression()), !dbg !8834
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8841
  call void @llvm.dbg.value(metadata i8* %12, metadata !8833, metadata !DIExpression()), !dbg !8834
  %13 = load i8, i8* %11, align 1, !dbg !8835
  %14 = load i8, i8* %12, align 1, !dbg !8836
  %15 = icmp ne i8 %13, %14, !dbg !8837
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8838
  br i1 %17, label %18, label %8, !dbg !8838, !llvm.loop !8842

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8835
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8836
  %21 = zext i8 %19 to i32, !dbg !8845
  %22 = zext i8 %20 to i32, !dbg !8846
  %23 = sub nsw i32 %21, %22, !dbg !8847
  ret i32 %23, !dbg !8848
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8849 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8853, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i8* %1, metadata !8854, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 %2, metadata !8855, metadata !DIExpression()), !dbg !8856
  %4 = icmp eq i32 %2, 0, !dbg !8857
  br i1 %4, label %23, label %5, !dbg !8857

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8855, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i8* %7, metadata !8854, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i8* %8, metadata !8853, metadata !DIExpression()), !dbg !8856
  %9 = load i8, i8* %8, align 1, !dbg !8858
  %10 = load i8, i8* %7, align 1, !dbg !8859
  %11 = icmp ne i8 %9, %10, !dbg !8860
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8861
  br i1 %13, label %19, label %14, !dbg !8861

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8862
  call void @llvm.dbg.value(metadata i8* %15, metadata !8853, metadata !DIExpression()), !dbg !8856
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8864
  call void @llvm.dbg.value(metadata i8* %16, metadata !8854, metadata !DIExpression()), !dbg !8856
  %17 = add i32 %6, -1, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %17, metadata !8855, metadata !DIExpression()), !dbg !8856
  %18 = icmp eq i32 %17, 0, !dbg !8857
  br i1 %18, label %23, label %5, !dbg !8857, !llvm.loop !8866

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8869
  %21 = zext i8 %10 to i32, !dbg !8870
  %22 = sub nsw i32 %20, %21, !dbg !8871
  br label %23, !dbg !8872

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8872
  ret i32 %24, !dbg !8873
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #16 !dbg !8874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8878, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.value(metadata i8* %1, metadata !8879, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.value(metadata i8** %2, metadata !8880, metadata !DIExpression()), !dbg !8883
  %4 = icmp eq i8* %0, null, !dbg !8884
  br i1 %4, label %5, label %7, !dbg !8884

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8885
  br label %7, !dbg !8884

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8884
  call void @llvm.dbg.value(metadata i8* %8, metadata !8881, metadata !DIExpression()), !dbg !8883
  %9 = load i8, i8* %8, align 1, !dbg !8886
  %10 = icmp eq i8 %9, 0, !dbg !8886
  br i1 %10, label %33, label %11, !dbg !8887

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8881, metadata !DIExpression()), !dbg !8883
  %14 = zext i8 %12 to i32, !dbg !8886
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !8888
  %16 = icmp eq i8* %15, null, !dbg !8887
  br i1 %16, label %21, label %17, !dbg !8889

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8890
  call void @llvm.dbg.value(metadata i8* %18, metadata !8881, metadata !DIExpression()), !dbg !8883
  %19 = load i8, i8* %18, align 1, !dbg !8886
  %20 = icmp eq i8 %19, 0, !dbg !8886
  br i1 %20, label %33, label %11, !dbg !8887, !llvm.loop !8892

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8882, metadata !DIExpression()), !dbg !8883
  %24 = zext i8 %22 to i32, !dbg !8894
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !8895
  %26 = icmp eq i8* %25, null, !dbg !8896
  br i1 %26, label %27, label %31, !dbg !8897

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8898
  call void @llvm.dbg.value(metadata i8* %28, metadata !8882, metadata !DIExpression()), !dbg !8883
  %29 = load i8, i8* %28, align 1, !dbg !8894
  %30 = icmp eq i8 %29, 0, !dbg !8894
  br i1 %30, label %33, label %21, !dbg !8900, !llvm.loop !8901

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8903
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8906
  br label %33, !dbg !8907

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8883
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8883
  store i8* %34, i8** %2, align 4, !dbg !8883
  ret i8* %35, !dbg !8908
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !8909 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8911, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i8* %1, metadata !8912, metadata !DIExpression()), !dbg !8913
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !8914
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8915
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !8916
  ret i8* %0, !dbg !8917
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8918 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8920, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %1, metadata !8921, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %0, metadata !8923, metadata !DIExpression()), !dbg !8925
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %4, metadata !8924, metadata !DIExpression()), !dbg !8925
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8927
  call void @llvm.dbg.value(metadata i8* %5, metadata !8920, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %1, metadata !8921, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8925
  %6 = icmp eq i32 %2, 0, !dbg !8928
  br i1 %6, label %18, label %7, !dbg !8929

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8930
  call void @llvm.dbg.value(metadata i8* %9, metadata !8920, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %10, metadata !8921, metadata !DIExpression()), !dbg !8925
  %12 = load i8, i8* %10, align 1, !dbg !8931
  %13 = icmp eq i8 %12, 0, !dbg !8932
  br i1 %13, label %18, label %14, !dbg !8933

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8934
  call void @llvm.dbg.value(metadata i8* %15, metadata !8921, metadata !DIExpression()), !dbg !8925
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8936
  call void @llvm.dbg.value(metadata i8* %16, metadata !8920, metadata !DIExpression()), !dbg !8925
  store i8 %12, i8* %9, align 1, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %11, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i32 %11, metadata !8922, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8925
  %17 = icmp eq i32 %11, 0, !dbg !8928
  br i1 %17, label %18, label %7, !dbg !8929, !llvm.loop !8938

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8925
  store i8 0, i8* %19, align 1, !dbg !8940
  ret i8* %0, !dbg !8941
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8942 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8946, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %1, metadata !8947, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %2, metadata !8948, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %0, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %1, metadata !8950, metadata !DIExpression()), !dbg !8951
  %4 = icmp eq i32 %2, 0, !dbg !8952
  br i1 %4, label %31, label %5, !dbg !8954

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %0, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %2, metadata !8948, metadata !DIExpression()), !dbg !8951
  %6 = add i32 %2, -1, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %6, metadata !8948, metadata !DIExpression()), !dbg !8951
  %7 = icmp eq i32 %6, 0, !dbg !8956
  br i1 %7, label %23, label %8, !dbg !8957

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8958
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8958
  br label %11, !dbg !8958

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %14, metadata !8949, metadata !DIExpression()), !dbg !8951
  %15 = load i8, i8* %14, align 1, !dbg !8959
  %16 = load i8, i8* %13, align 1, !dbg !8960
  %17 = icmp eq i8 %15, %16, !dbg !8961
  br i1 %17, label %18, label %23, !dbg !8958

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8962
  call void @llvm.dbg.value(metadata i8* %19, metadata !8949, metadata !DIExpression()), !dbg !8951
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8964
  call void @llvm.dbg.value(metadata i8* %20, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %12, metadata !8948, metadata !DIExpression()), !dbg !8951
  %21 = add i32 %12, -1, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %21, metadata !8948, metadata !DIExpression()), !dbg !8951
  %22 = icmp eq i32 %21, 0, !dbg !8956
  br i1 %22, label %23, label %11, !dbg !8957, !llvm.loop !8965

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8951
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8951
  %26 = load i8, i8* %24, align 1, !dbg !8967
  %27 = zext i8 %26 to i32, !dbg !8967
  %28 = load i8, i8* %25, align 1, !dbg !8968
  %29 = zext i8 %28 to i32, !dbg !8968
  %30 = sub nsw i32 %27, %29, !dbg !8969
  br label %31, !dbg !8970

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8951
  ret i32 %32, !dbg !8971
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8972 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8976, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %1, metadata !8977, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %2, metadata !8978, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %0, metadata !8979, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %1, metadata !8980, metadata !DIExpression()), !dbg !8981
  %4 = ptrtoint i8* %0 to i32, !dbg !8982
  %5 = ptrtoint i8* %1 to i32, !dbg !8982
  %6 = sub i32 %4, %5, !dbg !8982
  %7 = icmp ult i32 %6, %2, !dbg !8984
  br i1 %7, label %10, label %8, !dbg !8985

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8980, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %0, metadata !8979, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %2, metadata !8978, metadata !DIExpression()), !dbg !8981
  %9 = icmp eq i32 %2, 0, !dbg !8986
  br i1 %9, label %26, label %17, !dbg !8988

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8978, metadata !DIExpression()), !dbg !8981
  %12 = add i32 %11, -1, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %12, metadata !8978, metadata !DIExpression()), !dbg !8981
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8992
  %14 = load i8, i8* %13, align 1, !dbg !8992
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8993
  store i8 %14, i8* %15, align 1, !dbg !8994
  %16 = icmp eq i32 %12, 0, !dbg !8995
  br i1 %16, label %26, label %10, !dbg !8996, !llvm.loop !8997

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8980, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %19, metadata !8979, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %20, metadata !8978, metadata !DIExpression()), !dbg !8981
  %21 = load i8, i8* %18, align 1, !dbg !8999
  store i8 %21, i8* %19, align 1, !dbg !9001
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9002
  call void @llvm.dbg.value(metadata i8* %22, metadata !8979, metadata !DIExpression()), !dbg !8981
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9003
  call void @llvm.dbg.value(metadata i8* %23, metadata !8980, metadata !DIExpression()), !dbg !8981
  %24 = add i32 %20, -1, !dbg !9004
  call void @llvm.dbg.value(metadata i32 %24, metadata !8978, metadata !DIExpression()), !dbg !8981
  %25 = icmp eq i32 %24, 0, !dbg !8986
  br i1 %25, label %26, label %17, !dbg !8988, !llvm.loop !9005

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !9008 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9014, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i8* %1, metadata !9015, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i32 %2, metadata !9016, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i8* %0, metadata !9017, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i8* %1, metadata !9018, metadata !DIExpression()), !dbg !9019
  %4 = icmp eq i32 %2, 0, !dbg !9020
  br i1 %4, label %14, label %5, !dbg !9021

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9018, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i8* %7, metadata !9017, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i32 %8, metadata !9016, metadata !DIExpression()), !dbg !9019
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9022
  call void @llvm.dbg.value(metadata i8* %9, metadata !9018, metadata !DIExpression()), !dbg !9019
  %10 = load i8, i8* %6, align 1, !dbg !9024
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9025
  call void @llvm.dbg.value(metadata i8* %11, metadata !9017, metadata !DIExpression()), !dbg !9019
  store i8 %10, i8* %7, align 1, !dbg !9026
  %12 = add i32 %8, -1, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %12, metadata !9016, metadata !DIExpression()), !dbg !9019
  %13 = icmp eq i32 %12, 0, !dbg !9020
  br i1 %13, label %14, label %5, !dbg !9021, !llvm.loop !9028

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9030
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9031 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9035, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i32 %1, metadata !9036, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i32 %2, metadata !9037, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i8* %0, metadata !9038, metadata !DIExpression()), !dbg !9040
  %4 = trunc i32 %1 to i8, !dbg !9041
  call void @llvm.dbg.value(metadata i8 %4, metadata !9039, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i32 %2, metadata !9037, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i8* %0, metadata !9038, metadata !DIExpression()), !dbg !9040
  %5 = icmp eq i32 %2, 0, !dbg !9042
  br i1 %5, label %12, label %6, !dbg !9043

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9037, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i8* %8, metadata !9038, metadata !DIExpression()), !dbg !9040
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9044
  call void @llvm.dbg.value(metadata i8* %9, metadata !9038, metadata !DIExpression()), !dbg !9040
  store i8 %4, i8* %8, align 1, !dbg !9046
  %10 = add i32 %7, -1, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %10, metadata !9037, metadata !DIExpression()), !dbg !9040
  %11 = icmp eq i32 %10, 0, !dbg !9042
  br i1 %11, label %12, label %6, !dbg !9043, !llvm.loop !9048

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9050
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9051 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9055, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i32 %1, metadata !9056, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i32 %2, metadata !9057, metadata !DIExpression()), !dbg !9061
  %4 = icmp eq i32 %2, 0, !dbg !9062
  br i1 %4, label %17, label %5, !dbg !9063

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9064

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9065
  call void @llvm.dbg.value(metadata i8* %9, metadata !9058, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %8, metadata !9057, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i8* %9, metadata !9058, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9065
  %10 = load i8, i8* %9, align 1, !dbg !9066
  %11 = icmp eq i8 %10, %6, !dbg !9069
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9070
  call void @llvm.dbg.value(metadata i8* %12, metadata !9058, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %13, metadata !9057, metadata !DIExpression()), !dbg !9061
  br i1 %15, label %16, label %7, !dbg !9070, !llvm.loop !9071

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9073

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9061
  ret i8* %19, !dbg !9074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !9075 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9077, metadata !DIExpression()), !dbg !9078
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9079
  ret void, !dbg !9080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9083, metadata !DIExpression()), !dbg !9084
  ret i32 -1, !dbg !9085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9090, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.value(metadata i32* %1, metadata !9091, metadata !DIExpression()), !dbg !9092
  %3 = ptrtoint i32* %1 to i32, !dbg !9093
  %4 = and i32 %3, -2, !dbg !9093
  %5 = icmp eq i32 %4, 2, !dbg !9093
  br i1 %5, label %6, label %9, !dbg !9093

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9094
  %8 = tail call i32 %7(i32 noundef %0) #28, !dbg !9094
  br label %9, !dbg !9095

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9095
  ret i32 %10, !dbg !9096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9099, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32* %1, metadata !9100, metadata !DIExpression()), !dbg !9101
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9102
  ret i32 %3, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9107, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i32* %1, metadata !9108, metadata !DIExpression()), !dbg !9109
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9110, !srcloc !9112
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9113
  ret i32 %3, !dbg !9114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9115 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9120, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32* %1, metadata !9121, metadata !DIExpression()), !dbg !9124
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9125
  call void @llvm.dbg.value(metadata i32 %3, metadata !9122, metadata !DIExpression()), !dbg !9124
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %4, metadata !9123, metadata !DIExpression()), !dbg !9124
  %5 = icmp ne i32 %3, %4, !dbg !9127
  %6 = sext i1 %5 to i32, !dbg !9128
  ret i32 %6, !dbg !9129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9130 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9134, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %1, metadata !9135, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %2, metadata !9136, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32* %3, metadata !9137, metadata !DIExpression()), !dbg !9138
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9139
  ret i32 %5, !dbg !9140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9141 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9143, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32 %1, metadata !9144, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32 %2, metadata !9145, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32* %3, metadata !9146, metadata !DIExpression()), !dbg !9147
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9148, !srcloc !9150
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9151
  ret i32 %5, !dbg !9152
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9155, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %1, metadata !9156, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %2, metadata !9157, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32* %3, metadata !9158, metadata !DIExpression()), !dbg !9163
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9164
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9166
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9166
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9166
  br i1 %11, label %33, label %12, !dbg !9166

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9163
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9163
  call void @llvm.dbg.value(metadata i8* %14, metadata !9161, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %13, metadata !9159, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %1, metadata !9160, metadata !DIExpression()), !dbg !9163
  br label %15, !dbg !9167

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9169
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9163
  call void @llvm.dbg.value(metadata i8* %17, metadata !9161, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %16, metadata !9160, metadata !DIExpression()), !dbg !9163
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9170
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9173
  call void @llvm.dbg.value(metadata i8* %19, metadata !9161, metadata !DIExpression()), !dbg !9163
  %20 = load i8, i8* %17, align 1, !dbg !9174
  %21 = zext i8 %20 to i32, !dbg !9175
  %22 = tail call i32 %18(i32 noundef %21) #28, !dbg !9170
  %23 = icmp eq i32 %22, -1, !dbg !9176
  br i1 %23, label %30, label %24, !dbg !9177

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %25, metadata !9160, metadata !DIExpression()), !dbg !9163
  %26 = icmp eq i32 %25, 0, !dbg !9179
  br i1 %26, label %27, label %15, !dbg !9180, !llvm.loop !9181

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9183
  call void @llvm.dbg.value(metadata i32 %28, metadata !9159, metadata !DIExpression()), !dbg !9163
  %29 = icmp eq i32 %28, 0, !dbg !9184
  br i1 %29, label %30, label %12, !dbg !9185, !llvm.loop !9186

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9163
  call void @llvm.dbg.value(metadata i32 %31, metadata !9159, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.label(metadata !9162), !dbg !9189
  %32 = sub i32 %2, %31, !dbg !9190
  br label %33, !dbg !9191

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9163
  ret i32 %34, !dbg !9192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9197, metadata !DIExpression()), !dbg !9198
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9199
  %3 = icmp eq i32 %2, -1, !dbg !9201
  br i1 %3, label %8, label %4, !dbg !9202

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9203
  %6 = icmp eq i32 %5, -1, !dbg !9204
  %7 = sext i1 %6 to i32, !dbg !9203
  br label %8, !dbg !9205

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9198
  ret i32 %9, !dbg !9206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9207 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9215, metadata !DIExpression()), !dbg !9217
  %3 = tail call i64 @sys_clock_tick_get() #28, !dbg !9218
  call void @llvm.dbg.value(metadata i64 %3, metadata !9216, metadata !DIExpression()), !dbg !9217
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9219
  %5 = sub i64 %1, %3, !dbg !9219
  store i64 %5, i64* %4, align 8, !dbg !9219
  ret void, !dbg !9220
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9221 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9373, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9371, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.value(metadata i8* %1, metadata !9372, metadata !DIExpression()), !dbg !9376
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #28, !dbg !9377
  call void @llvm.dbg.value(metadata i64 %4, metadata !9375, metadata !DIExpression()), !dbg !9376
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9378
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9378
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9380
  br i1 %7, label %13, label %8, !dbg !9381

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9382
  %10 = load i16, i16* %9, align 4, !dbg !9382
  %11 = zext i16 %10 to i32, !dbg !9383
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #28, !dbg !9384
  br i1 %12, label %13, label %28, !dbg !9385

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9386
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9386
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #27, !dbg !9387
  call void @llvm.dbg.value(metadata i32 %16, metadata !9374, metadata !DIExpression()), !dbg !9376
  %17 = icmp eq i32 %16, 0, !dbg !9388
  br i1 %17, label %18, label %28, !dbg !9390

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9391
  %20 = load i8*, i8** %19, align 4, !dbg !9391
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9392
  %22 = load i16, i16* %21, align 4, !dbg !9392
  %23 = zext i16 %22 to i32, !dbg !9393
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #28, !dbg !9394
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #27, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %25, metadata !9374, metadata !DIExpression()), !dbg !9376
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9396
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #27, !dbg !9397
  br label %28, !dbg !9398

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9376
  ret i32 %29, !dbg !9399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9400 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9405, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9404, metadata !DIExpression()), !dbg !9406
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9407, !srcloc !9409
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #28, !dbg !9410
  ret i32 %3, !dbg !9411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9412 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9416, metadata !DIExpression()), !dbg !9424
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9417, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.value(metadata i32 0, metadata !9418, metadata !DIExpression()), !dbg !9424
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 6, !dbg !9425
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9425
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9420, metadata !DIExpression()), !dbg !9426
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9427
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9429
  br i1 %8, label %31, label %16, !dbg !9430

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9431
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9432
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9416, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9422, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i32 0, metadata !9418, metadata !DIExpression()), !dbg !9424
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9435
  br i1 %12, label %31, label %13, !dbg !9436

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9436

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9420, metadata !DIExpression()), !dbg !9426
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 1, !dbg !9437
  %20 = load i8, i8* %19, align 4, !dbg !9437, !range !7720
  %21 = icmp eq i8 %20, 0, !dbg !9437
  br i1 %21, label %27, label %22, !dbg !9440

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 3, !dbg !9441
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9441
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9442
  br i1 %25, label %27, label %26, !dbg !9443

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9416, metadata !DIExpression()), !dbg !9424
  tail call void %24(%struct.zbus_channel* noundef %0) #28, !dbg !9444
  br label %27, !dbg !9446

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9447
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9420, metadata !DIExpression()), !dbg !9426
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9427
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9429
  br i1 %30, label %9, label %16, !dbg !9430, !llvm.loop !9448

31:                                               ; preds = %53, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %54, %53 ], !dbg !9424
  ret i32 %32, !dbg !9450

33:                                               ; preds = %13, %53
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %56, %53 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %55, %53 ]
  %36 = phi i32 [ 0, %13 ], [ %54, %53 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9422, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i32 %36, metadata !9418, metadata !DIExpression()), !dbg !9424
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9451
  %38 = load i8, i8* %37, align 4, !dbg !9451, !range !7720
  %39 = icmp eq i8 %38, 0, !dbg !9451
  br i1 %39, label %53, label %40, !dbg !9454

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 2, !dbg !9455
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9455
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9456
  br i1 %43, label %53, label %44, !dbg !9457

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !9458
  %45 = load i64, i64* %15, align 8, !dbg !9460
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9460
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9416, metadata !DIExpression(DW_OP_deref)), !dbg !9424
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #27, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %47, metadata !9419, metadata !DIExpression()), !dbg !9424
  %48 = icmp eq i32 %47, 0, !dbg !9461
  br i1 %48, label %53, label %49, !dbg !9463

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9464
  %51 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %50, i32 0, i32 0, !dbg !9464
  %52 = load i8*, i8** %51, align 4, !dbg !9464
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.94, i32 0, i32 0), i32 noundef 69, i8* noundef %52, %struct.zbus_observer* noundef %50, i32 noundef %47) #28, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %47, metadata !9418, metadata !DIExpression()), !dbg !9424
  br label %53, !dbg !9470

53:                                               ; preds = %33, %40, %49, %44
  %54 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9424
  call void @llvm.dbg.value(metadata i32 %54, metadata !9418, metadata !DIExpression()), !dbg !9424
  %55 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9471
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %55, metadata !9422, metadata !DIExpression()), !dbg !9434
  %56 = load %struct.zbus_observer*, %struct.zbus_observer** %55, align 4, !dbg !9432
  %57 = icmp eq %struct.zbus_observer* %56, null, !dbg !9435
  br i1 %57, label %31, label %33, !dbg !9436, !llvm.loop !9472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9474 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9478, metadata !DIExpression()), !dbg !9479
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9480, !srcloc !9482
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #28, !dbg !9483
  ret i32 %2, !dbg !9484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9485 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9491, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9489, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i8* %1, metadata !9490, metadata !DIExpression()), !dbg !9492
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9493, !srcloc !9495
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #28, !dbg !9496
  ret i32 %4, !dbg !9497
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9498 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9504, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9502, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i8* %1, metadata !9503, metadata !DIExpression()), !dbg !9506
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9507
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9507
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #27, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %6, metadata !9505, metadata !DIExpression()), !dbg !9506
  %7 = icmp eq i32 %6, 0, !dbg !9509
  br i1 %7, label %8, label %17, !dbg !9511

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9512
  %10 = load i8*, i8** %9, align 4, !dbg !9512
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9513
  %12 = load i16, i16* %11, align 4, !dbg !9513
  %13 = zext i16 %12 to i32, !dbg !9514
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #28, !dbg !9515
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9516
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #27, !dbg !9517
  br label %17, !dbg !9518

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9506
  ret i32 %18, !dbg !9519
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9520 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9525, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9524, metadata !DIExpression()), !dbg !9528
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #28, !dbg !9529
  call void @llvm.dbg.value(metadata i64 %3, metadata !9527, metadata !DIExpression()), !dbg !9528
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9530
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9530
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #27, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %6, metadata !9526, metadata !DIExpression()), !dbg !9528
  %7 = icmp eq i32 %6, 0, !dbg !9532
  br i1 %7, label %8, label %12, !dbg !9534

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #27, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %9, metadata !9526, metadata !DIExpression()), !dbg !9528
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9536
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #27, !dbg !9537
  br label %12, !dbg !9538

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9528
  ret i32 %13, !dbg !9539
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9540 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9543, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9542, metadata !DIExpression()), !dbg !9545
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9546
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9546
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #27, !dbg !9547
  call void @llvm.dbg.value(metadata i32 %5, metadata !9544, metadata !DIExpression()), !dbg !9545
  ret i32 %5, !dbg !9548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9549 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9553, metadata !DIExpression()), !dbg !9555
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9556
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9556
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #27, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %4, metadata !9554, metadata !DIExpression()), !dbg !9555
  ret i32 %4, !dbg !9558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9559 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9564, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9565, metadata !DIExpression()), !dbg !9567
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 2, !dbg !9568
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9568
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9570
  br i1 %6, label %10, label %7, !dbg !9571

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9572
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #27, !dbg !9573
  br label %10, !dbg !9574

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9567
  ret i32 %11, !dbg !9575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9576 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9582, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9580, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i8* %1, metadata !9581, metadata !DIExpression()), !dbg !9583
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9584, !srcloc !9586
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #28, !dbg !9587
  ret i32 %4, !dbg !9588
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @zbus_iterate_over_channels(i1 (%struct.zbus_channel*)* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9589 {
  call void @llvm.dbg.value(metadata i1 (%struct.zbus_channel*)* %0, metadata !9743, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), metadata !9744, metadata !DIExpression()), !dbg !9748
  br i1 icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), label %2, label %10, !dbg !9749

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), metadata !9744, metadata !DIExpression()), !dbg !9748
  %3 = tail call zeroext i1 %0(%struct.zbus_channel* noundef nonnull getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0)) #28, !dbg !9750
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 1), metadata !9744, metadata !DIExpression()), !dbg !9748
  br i1 %3, label %4, label %10, !dbg !9754

4:                                                ; preds = %2, %7
  %5 = phi %struct.zbus_channel* [ %9, %7 ], [ getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 1), %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %5, metadata !9744, metadata !DIExpression()), !dbg !9748
  %6 = icmp ult %struct.zbus_channel* %5, getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0), !dbg !9755
  br i1 %6, label %7, label %10, !dbg !9749, !llvm.loop !9757

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %5, metadata !9744, metadata !DIExpression()), !dbg !9748
  %8 = tail call zeroext i1 %0(%struct.zbus_channel* noundef nonnull %5) #28, !dbg !9750
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %5, i32 1, !dbg !9759
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %9, metadata !9744, metadata !DIExpression()), !dbg !9748
  br i1 %8, label %4, label %10, !dbg !9754, !llvm.loop !9757

10:                                               ; preds = %7, %4, %2, %1
  %11 = phi i1 [ icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), %1 ], [ icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), %2 ], [ %6, %4 ], [ %6, %7 ], !dbg !9755
  %12 = xor i1 %11, true, !dbg !9760
  ret i1 %12, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @zbus_iterate_over_observers(i1 (%struct.zbus_observer*)* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9761 {
  call void @llvm.dbg.value(metadata i1 (%struct.zbus_observer*)* %0, metadata !9768, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), metadata !9769, metadata !DIExpression()), !dbg !9773
  br i1 icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), label %2, label %10, !dbg !9774

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), metadata !9769, metadata !DIExpression()), !dbg !9773
  %3 = tail call zeroext i1 %0(%struct.zbus_observer* noundef nonnull getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0)) #28, !dbg !9775
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 1), metadata !9769, metadata !DIExpression()), !dbg !9773
  br i1 %3, label %4, label %10, !dbg !9779

4:                                                ; preds = %2, %7
  %5 = phi %struct.zbus_observer* [ %9, %7 ], [ getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 1), %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %5, metadata !9769, metadata !DIExpression()), !dbg !9773
  %6 = icmp ult %struct.zbus_observer* %5, getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0), !dbg !9780
  br i1 %6, label %7, label %10, !dbg !9774, !llvm.loop !9782

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %5, metadata !9769, metadata !DIExpression()), !dbg !9773
  %8 = tail call zeroext i1 %0(%struct.zbus_observer* noundef nonnull %5) #28, !dbg !9775
  %9 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %5, i32 1, !dbg !9784
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %9, metadata !9769, metadata !DIExpression()), !dbg !9773
  br i1 %8, label %4, label %10, !dbg !9779, !llvm.loop !9782

10:                                               ; preds = %7, %4, %2, %1
  %11 = phi i1 [ icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), %1 ], [ icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), %2 ], [ %6, %4 ], [ %6, %7 ], !dbg !9780
  %12 = xor i1 %11, true, !dbg !9785
  ret i1 %12, !dbg !9785
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9788, metadata !DIExpression()), !dbg !9789
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !9790
  ret void, !dbg !9791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9796, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i32 %1, metadata !9797, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9798, metadata !DIExpression()), !dbg !9802
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9803
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9803
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9803
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9799, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i32 %0, metadata !9801, metadata !DIExpression()), !dbg !9802
  %7 = icmp slt i32 %0, %1, !dbg !9804
  br i1 %7, label %8, label %22, !dbg !9807

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9801, metadata !DIExpression()), !dbg !9802
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !9808
  %11 = icmp eq i32 %10, 0, !dbg !9808
  br i1 %11, label %19, label %12, !dbg !9811

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !9812
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9814
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9814
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9816
  br i1 %15, label %19, label %16, !dbg !9817

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9818
  %18 = load i8*, i8** %17, align 4, !dbg !9818
  tail call void %14(i32 noundef %9, i8* noundef %18) #28, !dbg !9819
  br label %19, !dbg !9820

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9821
  call void @llvm.dbg.value(metadata i32 %20, metadata !9801, metadata !DIExpression()), !dbg !9802
  %21 = icmp eq i32 %20, %1, !dbg !9804
  br i1 %21, label %22, label %8, !dbg !9807, !llvm.loop !9822

22:                                               ; preds = %19, %3
  ret void, !dbg !9824
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #18 !dbg !9825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9827, metadata !DIExpression()), !dbg !9828
  %2 = shl nuw i32 1, %0, !dbg !9829
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !9832
  ret i32 %3, !dbg !9833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #17 !dbg !9834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9838, metadata !DIExpression()), !dbg !9839
  %2 = shl nuw i32 1, %0, !dbg !9840
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !9843
  ret void, !dbg !9844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9848, metadata !DIExpression()), !dbg !9849
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9850
  ret void, !dbg !9851
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9854, metadata !DIExpression()), !dbg !9855
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9856
  %3 = and i32 %2, %0, !dbg !9856
  %4 = icmp eq i32 %3, %0, !dbg !9857
  %5 = zext i1 %4 to i32, !dbg !9857
  ret i32 %5, !dbg !9858
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9861, metadata !DIExpression()), !dbg !9862
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !9863
  ret void, !dbg !9864
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9867, metadata !DIExpression()), !dbg !9868
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !9869
  ret void, !dbg !9870
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9873, metadata !DIExpression()), !dbg !9874
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !9875
  ret void, !dbg !9876
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9879, metadata !DIExpression()), !dbg !9880
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !9881
  ret void, !dbg !9882
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9883 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9885, metadata !DIExpression()), !dbg !9886
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !9887
  ret void, !dbg !9888
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9891, metadata !DIExpression()), !dbg !9892
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !9893
  ret void, !dbg !9894
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9897, metadata !DIExpression()), !dbg !9898
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !9899
  ret void, !dbg !9900
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9901 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9903, metadata !DIExpression()), !dbg !9904
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !9905
  ret void, !dbg !9906
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9907 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9909, metadata !DIExpression()), !dbg !9910
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !9911
  ret void, !dbg !9912
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9915, metadata !DIExpression()), !dbg !9916
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !9917
  ret void, !dbg !9918
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9919 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9921, metadata !DIExpression()), !dbg !9922
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !9923
  ret i32 0, !dbg !9924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !878 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !882, metadata !DIExpression()), !dbg !9925
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #28, !dbg !9926
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #28, !dbg !9928
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #28, !dbg !9930
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #28, !dbg !9932
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #28, !dbg !9934
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #28, !dbg !9936
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #28, !dbg !9938
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #28, !dbg !9940
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #28, !dbg !9942
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #28, !dbg !9944
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #28, !dbg !9946
  ret void, !dbg !9948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9951, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.value(metadata i32 0, metadata !9952, metadata !DIExpression()), !dbg !9953
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9954
  %3 = load i32, i32* %2, align 4, !dbg !9954
  call void @llvm.dbg.value(metadata i32 %3, metadata !9952, metadata !DIExpression()), !dbg !9953
  %4 = shl nuw i32 1, %0, !dbg !9955
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !9956
  tail call void @arch_irq_enable(i32 noundef %3) #28, !dbg !9957
  ret void, !dbg !9958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9961, metadata !DIExpression()), !dbg !9962
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9963
  %3 = or i32 %2, %0, !dbg !9963
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9963
  ret void, !dbg !9964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #17 !dbg !9965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9967, metadata !DIExpression()), !dbg !9968
  %2 = icmp slt i32 %0, 32, !dbg !9969
  br i1 %2, label %3, label %5, !dbg !9971

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9972
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !9974
  br label %5, !dbg !9975

5:                                                ; preds = %1, %3
  ret void, !dbg !9976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9979, metadata !DIExpression()), !dbg !9980
  %2 = xor i32 %0, -1, !dbg !9981
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9981
  %4 = and i32 %3, %2, !dbg !9981
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9981
  ret void, !dbg !9982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !9983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9987, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i32 %1, metadata !9988, metadata !DIExpression()), !dbg !9989
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9990

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9991
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !9993
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !9994
  br label %11, !dbg !9995

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9996
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !9997
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !9998
  br label %11, !dbg !9999

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10000
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !10001
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !10002
  br label %11, !dbg !10003

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10004
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !10005
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !10006
  br label %11, !dbg !10007

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10011, metadata !DIExpression()), !dbg !10012
  %2 = xor i32 %0, -1, !dbg !10013
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10013
  %4 = and i32 %3, %2, !dbg !10013
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10013
  ret void, !dbg !10014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10017, metadata !DIExpression()), !dbg !10018
  %2 = xor i32 %0, -1, !dbg !10019
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10019
  %4 = and i32 %3, %2, !dbg !10019
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10019
  ret void, !dbg !10020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10023, metadata !DIExpression()), !dbg !10024
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10025
  %3 = or i32 %2, %0, !dbg !10025
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10025
  ret void, !dbg !10026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10029, metadata !DIExpression()), !dbg !10030
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10031
  %3 = or i32 %2, %0, !dbg !10031
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10031
  ret void, !dbg !10032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #10 !dbg !10033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10037, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10038, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.value(metadata i8* %2, metadata !10039, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !10040, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10042, metadata !DIExpression()), !dbg !10043
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10044
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10044
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10046
  br i1 %6, label %7, label %9, !dbg !10047

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10048
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10049
  store i8* %2, i8** %8, align 4, !dbg !10050
  br label %9, !dbg !10051

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10043
  ret i32 %10, !dbg !10052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10055, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !10056, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10057, metadata !DIExpression()), !dbg !10058
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10059
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10060
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10061
  store i8* null, i8** %3, align 4, !dbg !10062
  ret void, !dbg !10063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10066, metadata !DIExpression()), !dbg !10071
  call void @llvm.dbg.value(metadata i8* %1, metadata !10067, metadata !DIExpression()), !dbg !10071
  call void @llvm.dbg.value(metadata i8* %1, metadata !10068, metadata !DIExpression()), !dbg !10071
  %3 = bitcast i8* %1 to i32*, !dbg !10072
  %4 = load i32, i32* %3, align 4, !dbg !10072
  %5 = add i32 %4, -169, !dbg !10072
  %6 = icmp ult i32 %5, -121, !dbg !10072
  br i1 %6, label %15, label %7, !dbg !10074

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10075
  %9 = inttoptr i32 %8 to i32*, !dbg !10076
  call void @llvm.dbg.value(metadata i32* %9, metadata !10069, metadata !DIExpression()), !dbg !10071
  %10 = load volatile i32, i32* %9, align 4, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %10, metadata !10070, metadata !DIExpression()), !dbg !10071
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10078
  %12 = bitcast i8* %11 to i32*, !dbg !10078
  %13 = load i32, i32* %12, align 4, !dbg !10078
  %14 = or i32 %13, %10, !dbg !10079
  call void @llvm.dbg.value(metadata i32 %14, metadata !10070, metadata !DIExpression()), !dbg !10071
  store volatile i32 %14, i32* %9, align 4, !dbg !10080
  br label %15, !dbg !10081

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10071
  ret i32 %16, !dbg !10082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !10083 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10085, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i8* %1, metadata !10086, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i8* %1, metadata !10087, metadata !DIExpression()), !dbg !10090
  %3 = bitcast i8* %1 to i32*, !dbg !10091
  %4 = load i32, i32* %3, align 4, !dbg !10091
  %5 = add i32 %4, -169, !dbg !10091
  %6 = icmp ult i32 %5, -121, !dbg !10091
  br i1 %6, label %16, label %7, !dbg !10093

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10094
  %9 = inttoptr i32 %8 to i32*, !dbg !10095
  call void @llvm.dbg.value(metadata i32* %9, metadata !10088, metadata !DIExpression()), !dbg !10090
  %10 = load volatile i32, i32* %9, align 4, !dbg !10096
  call void @llvm.dbg.value(metadata i32 %10, metadata !10089, metadata !DIExpression()), !dbg !10090
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10097
  %12 = bitcast i8* %11 to i32*, !dbg !10097
  %13 = load i32, i32* %12, align 4, !dbg !10097
  %14 = xor i32 %13, -1, !dbg !10098
  %15 = and i32 %10, %14, !dbg !10099
  call void @llvm.dbg.value(metadata i32 %15, metadata !10089, metadata !DIExpression()), !dbg !10090
  store volatile i32 %15, i32* %9, align 4, !dbg !10100
  br label %16, !dbg !10101

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10090
  ret i32 %17, !dbg !10102
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10105, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i8* %1, metadata !10106, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32* %2, metadata !10107, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i8* %1, metadata !10108, metadata !DIExpression()), !dbg !10113
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %4, metadata !10109, metadata !DIExpression()), !dbg !10113
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #27, !dbg !10115
  call void @llvm.dbg.value(metadata i32 %5, metadata !10110, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %5, metadata !10111, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %4, metadata !10112, metadata !DIExpression()), !dbg !10113
  %6 = bitcast i8* %1 to i32*, !dbg !10116
  %7 = load i32, i32* %6, align 4, !dbg !10116
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !10117

8:                                                ; preds = %3
  br label %18, !dbg !10118

9:                                                ; preds = %3
  br label %18, !dbg !10120

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #28, !dbg !10121
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #27, !dbg !10122
  br label %18, !dbg !10123

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #28, !dbg !10124
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #27, !dbg !10125
  br label %18, !dbg !10126

16:                                               ; preds = %3
  br label %18, !dbg !10127

17:                                               ; preds = %3
  br label %18, !dbg !10128

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !10129
  br label %20, !dbg !10130

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !10113
  ret i32 %21, !dbg !10130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #17 !dbg !10131 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10133, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i8* %1, metadata !10134, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i8* %2, metadata !10135, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i8* %1, metadata !10136, metadata !DIExpression()), !dbg !10141
  %4 = bitcast i8* %1 to i32*, !dbg !10142
  %5 = load i32, i32* %4, align 4, !dbg !10142
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %6, metadata !10140, metadata !DIExpression()), !dbg !10141
  %7 = icmp slt i32 %6, 0, !dbg !10144
  br i1 %7, label %22, label %8, !dbg !10146

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10136, metadata !DIExpression()), !dbg !10141
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10147
  %10 = bitcast i8* %9 to i32*, !dbg !10147
  %11 = load i32, i32* %10, align 4, !dbg !10147
  %12 = lshr i32 %11, 16, !dbg !10147
  %13 = and i32 %12, 7, !dbg !10147
  %14 = lshr i32 %11, 8, !dbg !10148
  %15 = and i32 %14, 31, !dbg !10148
  %16 = shl i32 %13, %15, !dbg !10149
  call void @llvm.dbg.value(metadata i32 %16, metadata !10139, metadata !DIExpression()), !dbg !10141
  %17 = and i32 %11, 255, !dbg !10150
  %18 = or i32 %17, 1073887232, !dbg !10151
  %19 = inttoptr i32 %18 to i32*, !dbg !10152
  call void @llvm.dbg.value(metadata i32* %19, metadata !10137, metadata !DIExpression()), !dbg !10141
  %20 = load volatile i32, i32* %19, align 4, !dbg !10153
  call void @llvm.dbg.value(metadata i32 %20, metadata !10138, metadata !DIExpression()), !dbg !10141
  %21 = or i32 %16, %20, !dbg !10154
  call void @llvm.dbg.value(metadata i32 %21, metadata !10138, metadata !DIExpression()), !dbg !10141
  store volatile i32 %21, i32* %19, align 4, !dbg !10155
  br label %22, !dbg !10156

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10141
  ret i32 %23, !dbg !10157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10162, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10163, metadata !DIExpression()), !dbg !10164
  %2 = add i32 %0, -1, !dbg !10165
  %3 = icmp ult i32 %2, 6, !dbg !10165
  br i1 %3, label %4, label %7, !dbg !10165

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10165
  %6 = load i32, i32* %5, align 4, !dbg !10165
  call void @llvm.dbg.value(metadata i32 %6, metadata !10163, metadata !DIExpression()), !dbg !10164
  br label %7, !dbg !10166

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10164
  ret i32 %8, !dbg !10167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #5 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10172, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.value(metadata i32 2, metadata !10173, metadata !DIExpression()), !dbg !10174
  %2 = lshr i32 %0, 1, !dbg !10175
  ret i32 %2, !dbg !10176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10181, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 8, metadata !10182, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 84, metadata !10183, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %1, metadata !10184, metadata !DIExpression()), !dbg !10185
  %3 = mul i32 %0, 84, !dbg !10186
  %4 = shl nsw i32 %1, 3, !dbg !10187
  %5 = udiv i32 %3, %4, !dbg !10188
  ret i32 %5, !dbg !10189
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10190 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10192, metadata !DIExpression()), !dbg !10195
  tail call void @config_enable_default_clocks() #28, !dbg !10196
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #28, !dbg !10197
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !10197
  %4 = lshr i32 %3, 4, !dbg !10197
  %5 = and i32 %4, 15, !dbg !10197
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10197
  %7 = load i8, i8* %6, align 1, !dbg !10197
  %8 = zext i8 %7 to i32, !dbg !10197
  %9 = lshr i32 %2, %8, !dbg !10197
  call void @llvm.dbg.value(metadata i32 %9, metadata !10193, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10194, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10195
  %10 = icmp ult i32 %9, 84000000, !dbg !10198
  br i1 %10, label %11, label %13, !dbg !10200

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #28, !dbg !10201
  br label %13, !dbg !10203

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !10204
  tail call fastcc void @set_up_plls() #27, !dbg !10205
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10206
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !10209
  br label %14, !dbg !10210

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10211
  %16 = icmp eq i32 %15, 8, !dbg !10212
  br i1 %16, label %17, label %14, !dbg !10210, !llvm.loop !10213

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10215
  br i1 %18, label %19, label %21, !dbg !10217

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #28, !dbg !10218
  br label %21, !dbg !10220

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10221
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !10222
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !10223
  ret i32 0, !dbg !10224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #18 !dbg !10225 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10227
  %2 = and i32 %1, 240, !dbg !10227
  ret i32 %2, !dbg !10228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #17 !dbg !10229 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !10230
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !10235
  br label %1, !dbg !10236

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !10237
  %3 = icmp eq i32 %2, 1, !dbg !10238
  br i1 %3, label %4, label %1, !dbg !10236, !llvm.loop !10239

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !10241
  br label %5, !dbg !10244

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !10245
  %7 = icmp eq i32 %6, 1, !dbg !10246
  br i1 %7, label %8, label %5, !dbg !10244, !llvm.loop !10247

8:                                                ; preds = %5
  ret void, !dbg !10249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10250 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10251
  %2 = icmp eq i32 %1, 8, !dbg !10253
  br i1 %2, label %3, label %4, !dbg !10254

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10255
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !10257
  br label %4, !dbg !10258

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !10259
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10260
  %6 = and i32 %5, -196609, !dbg !10260
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10260
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10261
  %8 = and i32 %7, -251658241, !dbg !10261
  %9 = or i32 %8, 134217728, !dbg !10261
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10261
  tail call void @config_pll_sysclock() #28, !dbg !10262
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !10263
  br label %10, !dbg !10264

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !10265
  %12 = icmp eq i32 %11, 1, !dbg !10266
  br i1 %12, label %13, label %10, !dbg !10264, !llvm.loop !10267

13:                                               ; preds = %10
  ret void, !dbg !10269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #17 !dbg !10270 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10272, metadata !DIExpression()), !dbg !10273
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10274
  %2 = and i32 %1, -241, !dbg !10274
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10274
  ret void, !dbg !10275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #17 !dbg !10276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10278, metadata !DIExpression()), !dbg !10279
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10280
  %3 = and i32 %2, -4, !dbg !10280
  %4 = or i32 %3, %0, !dbg !10280
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #18 !dbg !10282 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10283
  %2 = and i32 %1, 12, !dbg !10283
  ret i32 %2, !dbg !10284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #17 !dbg !10285 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10287, metadata !DIExpression()), !dbg !10288
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10289
  %2 = and i32 %1, -7169, !dbg !10289
  %3 = or i32 %2, 4096, !dbg !10289
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #17 !dbg !10291 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10293, metadata !DIExpression()), !dbg !10294
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10295
  %2 = and i32 %1, -57345, !dbg !10295
  %3 = or i32 %2, 32768, !dbg !10295
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10295
  ret void, !dbg !10296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #17 !dbg !10297 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10298
  %2 = icmp eq i32 %1, 1, !dbg !10300
  br i1 %2, label %7, label %3, !dbg !10301

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !10302
  br label %4, !dbg !10304

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10305
  %6 = icmp eq i32 %5, 1, !dbg !10306
  br i1 %6, label %7, label %4, !dbg !10304, !llvm.loop !10307

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !10309
  br label %8, !dbg !10310

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10311
  %10 = icmp eq i32 %9, 0, !dbg !10312
  br i1 %10, label %11, label %8, !dbg !10310, !llvm.loop !10313

11:                                               ; preds = %8
  ret void, !dbg !10315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #17 !dbg !10316 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10317
  %2 = and i32 %1, -16777217, !dbg !10317
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10317
  ret void, !dbg !10318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #17 !dbg !10319 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10320
  %2 = or i32 %1, 16777216, !dbg !10320
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10320
  ret void, !dbg !10321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #18 !dbg !10322 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10323
  %2 = lshr i32 %1, 25, !dbg !10324
  %3 = and i32 %2, 1, !dbg !10324
  ret i32 %3, !dbg !10325
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #18 !dbg !10326 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10327
  %2 = lshr i32 %1, 1, !dbg !10328
  %3 = and i32 %2, 1, !dbg !10328
  ret i32 %3, !dbg !10329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #17 !dbg !10330 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10331
  %2 = or i32 %1, 1, !dbg !10331
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10331
  ret void, !dbg !10332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #17 !dbg !10333 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10334
  %2 = and i32 %1, -262145, !dbg !10334
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10334
  ret void, !dbg !10335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #17 !dbg !10336 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10337
  %2 = or i32 %1, 65536, !dbg !10337
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10337
  ret void, !dbg !10338
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #18 !dbg !10339 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10340
  %2 = lshr i32 %1, 17, !dbg !10341
  %3 = and i32 %2, 1, !dbg !10341
  ret i32 %3, !dbg !10342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #17 !dbg !10343 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10344
  %2 = or i32 %1, 1, !dbg !10344
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10344
  ret void, !dbg !10345
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #18 !dbg !10346 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10347
  %2 = lshr i32 %1, 1, !dbg !10348
  %3 = and i32 %2, 1, !dbg !10348
  ret i32 %3, !dbg !10349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10350 {
  ret i32 16000000, !dbg !10352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #17 !dbg !10356 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !10357
  ret void, !dbg !10358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #17 !dbg !10359 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10363, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.value(metadata i32 8, metadata !10364, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.value(metadata i32 84, metadata !10365, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.value(metadata i32 0, metadata !10366, metadata !DIExpression()), !dbg !10367
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10368
  %2 = and i32 %1, -4227072, !dbg !10368
  %3 = or i32 %2, 4199688, !dbg !10368
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10368
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10369
  %5 = and i32 %4, -196609, !dbg !10369
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10369
  ret void, !dbg !10370
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10371 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !10372
  ret void, !dbg !10373
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10374 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10377, metadata !DIExpression()), !dbg !10379
  %2 = bitcast i32* %1 to i8*, !dbg !10380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10380
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10378, metadata !DIExpression()), !dbg !10381
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10382
  %4 = or i32 %3, 268435456, !dbg !10382
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10382
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10383
  %6 = and i32 %5, 268435456, !dbg !10383
  store volatile i32 %6, i32* %1, align 4, !dbg !10384
  %7 = load volatile i32, i32* %1, align 4, !dbg !10385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10386
  ret void, !dbg !10386
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10389, metadata !DIExpression()), !dbg !10390
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !10391
  br i1 %2, label %3, label %4, !dbg !10393

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !10394
  br label %4, !dbg !10395

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10390
  ret i32 %5, !dbg !10396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10402, metadata !DIExpression()), !dbg !10403
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10404, !srcloc !10406
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !10407
  ret i1 %1, !dbg !10408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10409 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #28, !dbg !10410
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #28, !dbg !10411
  ret void, !dbg !10412
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10415, metadata !DIExpression()), !dbg !10416
  %2 = icmp eq i32 %0, 10, !dbg !10417
  br i1 %2, label %3, label %4, !dbg !10419

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !10420
  br label %4, !dbg !10422

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10423
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !10424
  ret i32 %0, !dbg !10425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10426 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10429, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8 %0, metadata !10430, metadata !DIExpression()), !dbg !10431
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10432, !srcloc !10434
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !10435
  ret void, !dbg !10436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10439, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i8 %0, metadata !10440, metadata !DIExpression()), !dbg !10442
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10443
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10441, metadata !DIExpression()), !dbg !10442
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10444
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10444
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #28, !dbg !10445
  ret void, !dbg !10446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10449, metadata !DIExpression()), !dbg !10450
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #28, !dbg !10451
  ret i1 %1, !dbg !10452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10453 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10500, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10502, metadata !DIExpression()), !dbg !10503
  ret void, !dbg !10504
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10505 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10507, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i8 %1, metadata !10508, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 %2, metadata !10509, metadata !DIExpression()), !dbg !10512
  %5 = bitcast i32* %4 to i8*, !dbg !10513
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10513
  call void @llvm.dbg.value(metadata i32* %4, metadata !10511, metadata !DIExpression(DW_OP_deref)), !dbg !10512
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %6, metadata !10510, metadata !DIExpression()), !dbg !10512
  %7 = icmp eq i32 %6, 0, !dbg !10515
  br i1 %7, label %8, label %31, !dbg !10517

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10510, metadata !DIExpression()), !dbg !10512
  %9 = and i32 %2, 131072, !dbg !10518
  %10 = icmp eq i32 %9, 0, !dbg !10520
  br i1 %10, label %28, label %11, !dbg !10521

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10522
  %13 = icmp eq i32 %12, 0, !dbg !10525
  br i1 %13, label %18, label %14, !dbg !10526

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10527
  %16 = shl nuw i32 1, %15, !dbg !10527
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !10529
  br label %25, !dbg !10530

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10531
  %20 = icmp eq i32 %19, 0, !dbg !10533
  %21 = zext i8 %1 to i32, !dbg !10512
  br i1 %20, label %25, label %22, !dbg !10534

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10535
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !10537
  br label %25, !dbg !10538

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10539
  %27 = load i32, i32* %4, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %30, metadata !10511, metadata !DIExpression()), !dbg !10512
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !10541
  br label %31, !dbg !10542

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10539
  %30 = load i32, i32* %4, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %30, metadata !10511, metadata !DIExpression()), !dbg !10512
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !10541
  call void @llvm.dbg.value(metadata i32 0, metadata !10510, metadata !DIExpression()), !dbg !10512
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10543
  ret i32 %6, !dbg !10543
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #18 !dbg !10544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10548, metadata !DIExpression()), !dbg !10553
  call void @llvm.dbg.value(metadata i32* %1, metadata !10549, metadata !DIExpression()), !dbg !10553
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10554
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10554
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10554
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10550, metadata !DIExpression()), !dbg !10553
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10555
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10555
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10555
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10552, metadata !DIExpression()), !dbg !10553
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !10556
  store i32 %9, i32* %1, align 4, !dbg !10557
  ret i32 0, !dbg !10558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #17 !dbg !10559 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10561, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i32 %1, metadata !10562, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i32 %2, metadata !10563, metadata !DIExpression()), !dbg !10567
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10568
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10568
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10568
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10564, metadata !DIExpression()), !dbg !10567
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10569
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10569
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10569
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10565, metadata !DIExpression()), !dbg !10567
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !10570
  call void @llvm.dbg.value(metadata i32 %10, metadata !10566, metadata !DIExpression()), !dbg !10567
  %11 = xor i32 %1, -1, !dbg !10571
  %12 = and i32 %10, %11, !dbg !10572
  %13 = and i32 %2, %1, !dbg !10573
  %14 = or i32 %12, %13, !dbg !10574
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !10575
  ret i32 0, !dbg !10576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10579, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i32 %1, metadata !10580, metadata !DIExpression()), !dbg !10583
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10584
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10584
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10584
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10581, metadata !DIExpression()), !dbg !10583
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10585
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10585
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10585
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10582, metadata !DIExpression()), !dbg !10583
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10586
  store volatile i32 %1, i32* %9, align 4, !dbg !10586
  ret i32 0, !dbg !10587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10588 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10590, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 %1, metadata !10591, metadata !DIExpression()), !dbg !10594
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10595
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10595
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10595
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10592, metadata !DIExpression()), !dbg !10594
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10596
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10596
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10596
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10593, metadata !DIExpression()), !dbg !10594
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !10597
  ret i32 0, !dbg !10598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10601, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %1, metadata !10602, metadata !DIExpression()), !dbg !10605
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10606
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10606
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10606
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10603, metadata !DIExpression()), !dbg !10605
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10607
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10607
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10607
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10604, metadata !DIExpression()), !dbg !10605
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10608
  %10 = load volatile i32, i32* %9, align 4, !dbg !10608
  %11 = xor i32 %10, %1, !dbg !10608
  store volatile i32 %11, i32* %9, align 4, !dbg !10608
  ret i32 0, !dbg !10609
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10610 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10612, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i8 %1, metadata !10613, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 %2, metadata !10614, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 %3, metadata !10615, metadata !DIExpression()), !dbg !10622
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10623
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10623
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10623
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10616, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i8* undef, metadata !10617, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 0, metadata !10619, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 0, metadata !10620, metadata !DIExpression()), !dbg !10622
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10624

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10625
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !10629
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10630
  %12 = load i32, i32* %11, align 4, !dbg !10630
  %13 = icmp eq i32 %10, %12, !dbg !10631
  br i1 %13, label %14, label %29, !dbg !10632

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #28, !dbg !10633
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #28, !dbg !10635
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #28, !dbg !10636
  br label %29, !dbg !10637

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10638
  %17 = load i8*, i8** %16, align 4, !dbg !10638
  call void @llvm.dbg.value(metadata i8* %17, metadata !10617, metadata !DIExpression()), !dbg !10622
  %18 = zext i8 %1 to i32, !dbg !10639
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #28, !dbg !10641
  %20 = icmp eq i32 %19, 0, !dbg !10642
  br i1 %20, label %21, label %29, !dbg !10643

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10644
  %23 = load i32, i32* %22, align 4, !dbg !10644
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !10645
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10646

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10619, metadata !DIExpression()), !dbg !10622
  br label %27, !dbg !10647

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10619, metadata !DIExpression()), !dbg !10622
  br label %27, !dbg !10649

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10619, metadata !DIExpression()), !dbg !10622
  br label %27, !dbg !10650

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10622
  call void @llvm.dbg.value(metadata i32 %28, metadata !10619, metadata !DIExpression()), !dbg !10622
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #28, !dbg !10651
  tail call void @stm32_exti_enable(i32 noundef %18) #28, !dbg !10652
  br label %29, !dbg !10652

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10622
  call void @llvm.dbg.value(metadata i32 %30, metadata !10620, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.label(metadata !10621), !dbg !10653
  ret i32 %30, !dbg !10654
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #16 !dbg !10655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10657, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10658, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata i1 %2, metadata !10659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10661
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10662
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10662
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10662
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10660, metadata !DIExpression()), !dbg !10661
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10663
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !10664
  ret i32 %8, !dbg !10665
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #16 !dbg !10666 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10672, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10673, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata i1 %2, metadata !10674, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10675
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !10676
  br i1 %4, label %10, label %5, !dbg !10678

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10679
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !10682
  %8 = or i1 %7, %2, !dbg !10683
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10683
  br i1 %2, label %11, label %13, !dbg !10683

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10684

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10685
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !10688
  br label %13, !dbg !10689

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10675
  ret i32 %14, !dbg !10690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10691 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10695, metadata !DIExpression()), !dbg !10696
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10697
  %3 = icmp eq %struct._snode* %2, null, !dbg !10697
  ret i1 %3, !dbg !10697
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #16 !dbg !10698 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10702, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10703, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10704, metadata !DIExpression()), !dbg !10706
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10707
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10704, metadata !DIExpression()), !dbg !10706
  %4 = icmp eq %struct._snode* %3, null, !dbg !10709
  br i1 %4, label %15, label %5, !dbg !10707

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10704, metadata !DIExpression()), !dbg !10706
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10711
  br i1 %6, label %9, label %11, !dbg !10714

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10704, metadata !DIExpression()), !dbg !10706
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10711
  br i1 %8, label %9, label %11, !dbg !10714, !llvm.loop !10715

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !10716
  br label %15, !dbg !10716

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10704, metadata !DIExpression()), !dbg !10706
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !10709
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10705, metadata !DIExpression()), !dbg !10706
  %14 = icmp eq %struct._snode* %13, null, !dbg !10709
  br i1 %14, label %15, label %7, !dbg !10707, !llvm.loop !10715

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !10719 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10723, metadata !DIExpression()), !dbg !10725
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10724, metadata !DIExpression()), !dbg !10725
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10726
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !10726
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10726
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10727
  %5 = icmp eq %struct._snode* %4, null, !dbg !10727
  br i1 %5, label %6, label %8, !dbg !10726

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10729
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !10729
  br label %8, !dbg !10729

8:                                                ; preds = %6, %2
  ret void, !dbg !10726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10731 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10735, metadata !DIExpression()), !dbg !10736
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10737
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10737
  ret %struct._snode* %3, !dbg !10738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10739 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10743, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10744, metadata !DIExpression()), !dbg !10745
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10746
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10747
  ret void, !dbg !10748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10749 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10751, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10752, metadata !DIExpression()), !dbg !10753
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10754
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10755
  ret void, !dbg !10756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10759, metadata !DIExpression()), !dbg !10760
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10761
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10761
  ret %struct._snode* %3, !dbg !10762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10763 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10765, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10766, metadata !DIExpression()), !dbg !10767
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10768
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10769
  ret void, !dbg !10770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !10771 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10775, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10776, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10777, metadata !DIExpression()), !dbg !10778
  %4 = icmp eq %struct._snode* %1, null, !dbg !10779
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !10781
  br i1 %4, label %6, label %11, !dbg !10782

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !10783
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10785
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10785
  br i1 %8, label %9, label %15, !dbg !10783

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10787
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !10787
  br label %15, !dbg !10787

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !10789
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10791
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10791
  br i1 %13, label %14, label %15, !dbg !10789

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !10793
  br label %15, !dbg !10793

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !10782
  ret void, !dbg !10782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #3 !dbg !10795 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10799, metadata !DIExpression()), !dbg !10800
  %2 = icmp eq %struct._snode* %0, null, !dbg !10801
  br i1 %2, label %5, label %3, !dbg !10801

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !10801
  br label %5, !dbg !10801

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10801
  ret %struct._snode* %6, !dbg !10801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10804, metadata !DIExpression()), !dbg !10805
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !10806
  ret %struct._snode* %2, !dbg !10806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10807 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10809, metadata !DIExpression()), !dbg !10810
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10811
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10811
  ret %struct._snode* %3, !dbg !10812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10815, metadata !DIExpression()), !dbg !10818
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !10819, !range !10820
  call void @llvm.dbg.value(metadata i32 %2, metadata !10816, metadata !DIExpression()), !dbg !10818
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %3, metadata !10817, metadata !DIExpression()), !dbg !10818
  ret i32 %3, !dbg !10822
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i8* %1, metadata !10826, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i8* %1, metadata !10827, metadata !DIExpression()), !dbg !10828
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10829
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10829
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10830
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10830
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10830
  %8 = shl nuw i32 1, %0, !dbg !10831
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !10832
  ret void, !dbg !10833
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10834 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10838, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %1, metadata !10839, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10840, metadata !DIExpression()), !dbg !10844
  %4 = bitcast i64* %3 to i8*, !dbg !10845
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10845
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10842, metadata !DIExpression()), !dbg !10844
  store i64 70368744177732, i64* %3, align 8, !dbg !10846
  call void @llvm.dbg.value(metadata i64* %3, metadata !10842, metadata !DIExpression(DW_OP_deref)), !dbg !10844
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %5, metadata !10843, metadata !DIExpression()), !dbg !10844
  %6 = icmp eq i32 %5, 0, !dbg !10848
  br i1 %6, label %7, label %8, !dbg !10850

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !10851
  br label %8, !dbg !10852

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10853
  ret void, !dbg !10853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10854 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10856, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i8* %0, metadata !10857, metadata !DIExpression()), !dbg !10859
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10860
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10858, metadata !DIExpression()), !dbg !10859
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10861
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10861
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #28, !dbg !10862
  ret i32 %5, !dbg !10863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10866, metadata !DIExpression()), !dbg !10869
  call void @llvm.dbg.value(metadata i32 %1, metadata !10867, metadata !DIExpression()), !dbg !10869
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !10870
  call void @llvm.dbg.value(metadata i32 %3, metadata !10868, metadata !DIExpression()), !dbg !10869
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !10871
  ret void, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10877, metadata !DIExpression()), !dbg !10878
  %2 = sdiv i32 %0, 4, !dbg !10879
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10880
  %6 = add nsw i32 %5, 16, !dbg !10881
  %7 = shl i32 15, %6, !dbg !10882
  %8 = or i32 %7, %2, !dbg !10883
  ret i32 %8, !dbg !10884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10889, metadata !DIExpression()), !dbg !10891
  call void @llvm.dbg.value(metadata i32 %1, metadata !10890, metadata !DIExpression()), !dbg !10891
  %3 = and i32 %1, 255, !dbg !10892
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10892
  %5 = load volatile i32, i32* %4, align 4, !dbg !10892
  %6 = lshr i32 %1, 16, !dbg !10892
  %7 = xor i32 %6, -1, !dbg !10892
  %8 = and i32 %5, %7, !dbg !10892
  call void @llvm.dbg.value(metadata i32 %6, metadata !10893, metadata !DIExpression()) #26, !dbg !10897
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10899, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %9, metadata !10896, metadata !DIExpression()) #26, !dbg !10897
  call void @llvm.dbg.value(metadata i32 %9, metadata !10901, metadata !DIExpression()) #26, !dbg !10906
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10908, !range !5052
  %11 = shl i32 %0, %10, !dbg !10892
  %12 = or i32 %11, %8, !dbg !10892
  store volatile i32 %12, i32* %4, align 4, !dbg !10892
  ret void, !dbg !10909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10910 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10914, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10915, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i32 %2, metadata !10916, metadata !DIExpression()), !dbg !10919
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10920
  %5 = icmp eq %struct._snode* %4, null, !dbg !10920
  br i1 %5, label %21, label %6, !dbg !10920

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !10922
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10918, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10917, metadata !DIExpression()), !dbg !10919
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10923
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10923
  %11 = load i32, i32* %10, align 4, !dbg !10923
  %12 = and i32 %11, %2, !dbg !10927
  %13 = icmp eq i32 %12, 0, !dbg !10927
  br i1 %13, label %19, label %14, !dbg !10928

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10917, metadata !DIExpression()), !dbg !10919
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10929
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10929
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10929
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #28, !dbg !10931
  br label %19, !dbg !10932

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10917, metadata !DIExpression()), !dbg !10919
  %20 = icmp eq %struct._snode* %8, null, !dbg !10933
  br i1 %20, label %21, label %6, !dbg !10933

21:                                               ; preds = %19, %3
  ret void, !dbg !10934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10937, metadata !DIExpression()), !dbg !10938
  %2 = and i32 %0, 255, !dbg !10939
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10939
  %4 = load volatile i32, i32* %3, align 4, !dbg !10939
  %5 = lshr i32 %0, 16, !dbg !10939
  %6 = and i32 %4, %5, !dbg !10939
  call void @llvm.dbg.value(metadata i32 %5, metadata !10893, metadata !DIExpression()) #26, !dbg !10940
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !10942, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %7, metadata !10896, metadata !DIExpression()) #26, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %7, metadata !10901, metadata !DIExpression()) #26, !dbg !10943
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !10945, !range !5052
  %9 = lshr i32 %6, %8, !dbg !10946
  ret i32 %9, !dbg !10947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10948 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10953, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32 %1, metadata !10954, metadata !DIExpression()), !dbg !10955
  %3 = shl i32 %1, 16, !dbg !10956
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10956
  store volatile i32 %3, i32* %4, align 4, !dbg !10956
  ret void, !dbg !10957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !10958 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10962, metadata !DIExpression()), !dbg !10963
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10964
  %3 = load volatile i32, i32* %2, align 4, !dbg !10964
  ret i32 %3, !dbg !10965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10966 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10968, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %1, metadata !10969, metadata !DIExpression()), !dbg !10970
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10971
  store volatile i32 %1, i32* %3, align 4, !dbg !10971
  ret void, !dbg !10972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !10973 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10975, metadata !DIExpression()), !dbg !10976
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10977
  %3 = load volatile i32, i32* %2, align 4, !dbg !10977
  ret i32 %3, !dbg !10978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #10 !dbg !10979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10983, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %1, metadata !10984, metadata !DIExpression()), !dbg !10985
  %3 = and i32 %0, 131072, !dbg !10986
  %4 = icmp eq i32 %3, 0, !dbg !10988
  br i1 %4, label %22, label %5, !dbg !10989

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10990
  %6 = and i32 %0, 2, !dbg !10992
  %7 = icmp eq i32 %6, 0, !dbg !10994
  br i1 %7, label %11, label %8, !dbg !10995

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10996
  %10 = icmp eq i32 %9, 0, !dbg !10996
  br i1 %10, label %33, label %11, !dbg !10999

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11000
  store i32 %12, i32* %1, align 4, !dbg !11000
  %13 = and i32 %0, 16, !dbg !11001
  %14 = icmp eq i32 %13, 0, !dbg !11003
  br i1 %14, label %17, label %15, !dbg !11004

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11005
  br label %31, !dbg !11007

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11008
  %19 = icmp eq i32 %18, 0, !dbg !11010
  br i1 %19, label %33, label %20, !dbg !11011

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11012
  br label %31, !dbg !11014

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11015
  %24 = icmp eq i32 %23, 0, !dbg !11017
  br i1 %24, label %31, label %25, !dbg !11018

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11019
  %27 = icmp eq i32 %26, 0, !dbg !11022
  br i1 %27, label %28, label %31, !dbg !11023

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11024
  br label %33, !dbg !11025

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10985
  ret i32 %34, !dbg !11025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11026 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11030, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %1, metadata !11031, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %2, metadata !11032, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %3, metadata !11033, metadata !DIExpression()), !dbg !11041
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11042
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11042
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11042
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11034, metadata !DIExpression()), !dbg !11041
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11043
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11043
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11043
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11035, metadata !DIExpression()), !dbg !11041
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !11044
  call void @llvm.dbg.value(metadata i32 %11, metadata !11036, metadata !DIExpression()), !dbg !11041
  %12 = and i32 %2, 48, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %12, metadata !11037, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %2, metadata !11038, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %2, metadata !11039, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11041
  call void @llvm.dbg.value(metadata i32 %2, metadata !11040, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11041
  %13 = lshr i32 %2, 6, !dbg !11046
  %14 = and i32 %13, 1, !dbg !11046
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !11047
  %15 = lshr i32 %2, 7, !dbg !11048
  %16 = and i32 %15, 3, !dbg !11048
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !11049
  %17 = lshr i32 %2, 9, !dbg !11050
  %18 = and i32 %17, 3, !dbg !11050
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !11051
  %19 = icmp eq i32 %12, 32, !dbg !11052
  br i1 %19, label %20, label %24, !dbg !11054

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11055
  br i1 %21, label %22, label %23, !dbg !11058

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11059
  br label %24, !dbg !11061

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11062
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11064
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !11065
  ret void, !dbg !11066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !11067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11069, metadata !DIExpression()), !dbg !11071
  %2 = shl nuw i32 1, %0, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %2, metadata !11070, metadata !DIExpression()), !dbg !11071
  ret i32 %2, !dbg !11073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11074 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11078, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 %1, metadata !11079, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 %2, metadata !11080, metadata !DIExpression()), !dbg !11081
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11082
  %5 = load volatile i32, i32* %4, align 4, !dbg !11082
  %6 = xor i32 %1, -1, !dbg !11082
  %7 = and i32 %5, %6, !dbg !11082
  %8 = mul i32 %2, %1, !dbg !11082
  %9 = or i32 %7, %8, !dbg !11082
  store volatile i32 %9, i32* %4, align 4, !dbg !11082
  ret void, !dbg !11083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11084 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11086, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %1, metadata !11087, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %2, metadata !11088, metadata !DIExpression()), !dbg !11089
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11090
  %5 = load volatile i32, i32* %4, align 4, !dbg !11090
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11091
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11093, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11094
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11096, !range !5052
  %8 = shl nuw nsw i32 %7, 1, !dbg !11090
  %9 = shl i32 3, %8, !dbg !11090
  %10 = xor i32 %9, -1, !dbg !11090
  %11 = and i32 %5, %10, !dbg !11090
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11097
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11097
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11099
  %12 = shl i32 %2, %8, !dbg !11090
  %13 = or i32 %11, %12, !dbg !11090
  store volatile i32 %13, i32* %4, align 4, !dbg !11090
  ret void, !dbg !11101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11102 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11104, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %1, metadata !11105, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %2, metadata !11106, metadata !DIExpression()), !dbg !11107
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11108
  %5 = load volatile i32, i32* %4, align 4, !dbg !11108
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11109
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11111, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11109
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11112
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11114, !range !5052
  %8 = shl nuw nsw i32 %7, 1, !dbg !11108
  %9 = shl i32 3, %8, !dbg !11108
  %10 = xor i32 %9, -1, !dbg !11108
  %11 = and i32 %5, %10, !dbg !11108
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11115
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11115
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11117
  %12 = shl i32 %2, %8, !dbg !11108
  %13 = or i32 %11, %12, !dbg !11108
  store volatile i32 %13, i32* %4, align 4, !dbg !11108
  ret void, !dbg !11119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11120 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11122, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i32 %1, metadata !11123, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i32 %2, metadata !11124, metadata !DIExpression()), !dbg !11125
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11126
  %5 = load volatile i32, i32* %4, align 4, !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11127
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11129, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11127
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11130
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11132, !range !5052
  %8 = shl nuw nsw i32 %7, 2, !dbg !11126
  %9 = shl i32 15, %8, !dbg !11126
  %10 = xor i32 %9, -1, !dbg !11126
  %11 = and i32 %5, %10, !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11135
  %12 = shl i32 %2, %8, !dbg !11126
  %13 = or i32 %11, %12, !dbg !11126
  store volatile i32 %13, i32* %4, align 4, !dbg !11126
  ret void, !dbg !11137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11140, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 %1, metadata !11141, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 %2, metadata !11142, metadata !DIExpression()), !dbg !11143
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11144
  %5 = load volatile i32, i32* %4, align 4, !dbg !11144
  %6 = lshr i32 %1, 8, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %6, metadata !10893, metadata !DIExpression()) #26, !dbg !11145
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11147, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %7, metadata !10896, metadata !DIExpression()) #26, !dbg !11145
  call void @llvm.dbg.value(metadata i32 %7, metadata !10901, metadata !DIExpression()) #26, !dbg !11148
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11150, !range !5052
  %9 = shl nuw nsw i32 %8, 2, !dbg !11144
  %10 = shl i32 15, %9, !dbg !11144
  %11 = xor i32 %10, -1, !dbg !11144
  %12 = and i32 %5, %11, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %6, metadata !10893, metadata !DIExpression()) #26, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %7, metadata !10896, metadata !DIExpression()) #26, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %7, metadata !10901, metadata !DIExpression()) #26, !dbg !11153
  %13 = shl i32 %2, %9, !dbg !11144
  %14 = or i32 %12, %13, !dbg !11144
  store volatile i32 %14, i32* %4, align 4, !dbg !11144
  ret void, !dbg !11155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11156 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11158, metadata !DIExpression()), !dbg !11161
  call void @llvm.dbg.value(metadata i32 %1, metadata !11159, metadata !DIExpression()), !dbg !11161
  call void @llvm.dbg.value(metadata i32 %2, metadata !11160, metadata !DIExpression()), !dbg !11161
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11162
  %5 = load volatile i32, i32* %4, align 4, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11163
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11165, !srcloc !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11163
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11166
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11168, !range !5052
  %8 = shl nuw nsw i32 %7, 1, !dbg !11162
  %9 = shl i32 3, %8, !dbg !11162
  %10 = xor i32 %9, -1, !dbg !11162
  %11 = and i32 %5, %10, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !10893, metadata !DIExpression()) #26, !dbg !11169
  call void @llvm.dbg.value(metadata i32 %6, metadata !10896, metadata !DIExpression()) #26, !dbg !11169
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()) #26, !dbg !11171
  %12 = shl i32 %2, %8, !dbg !11162
  %13 = or i32 %11, %12, !dbg !11162
  store volatile i32 %13, i32* %4, align 4, !dbg !11162
  ret void, !dbg !11173
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11174 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11176, metadata !DIExpression()), !dbg !11179
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11180
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11180
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11180
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11177, metadata !DIExpression()), !dbg !11179
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11181
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11182
  %6 = tail call fastcc zeroext i1 @device_is_ready.123() #27, !dbg !11183
  br i1 %6, label %7, label %11, !dbg !11185

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !11186
  call void @llvm.dbg.value(metadata i32 %8, metadata !11178, metadata !DIExpression()), !dbg !11179
  %9 = icmp slt i32 %8, 0, !dbg !11187
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11189
  br label %11, !dbg !11189

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11179
  ret i32 %12, !dbg !11190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.123() unnamed_addr #1 !dbg !11191 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11195, metadata !DIExpression()), !dbg !11196
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11197, !srcloc !11199
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.124() #27, !dbg !11200
  ret i1 %1, !dbg !11201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11206, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i8 1, metadata !11207, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11208, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i32 0, metadata !11209, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11210, metadata !DIExpression()), !dbg !11211
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11212
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11212
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11208, metadata !DIExpression()), !dbg !11211
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11213
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11216
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %7, metadata !11209, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i32 %7, metadata !11209, metadata !DIExpression()), !dbg !11211
  ret i32 %7, !dbg !11218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.124() unnamed_addr #1 !dbg !11219 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11221, metadata !DIExpression()), !dbg !11222
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #28, !dbg !11223
  ret i1 %1, !dbg !11224
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11229, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i32 %1, metadata !11230, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i32 %2, metadata !11231, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i32 %3, metadata !11232, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i32 0, metadata !11233, metadata !DIExpression()), !dbg !11237
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !11238
  %5 = icmp eq i32 %3, 17, !dbg !11239
  br i1 %5, label %6, label %14, !dbg !11240

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11241
  call void @llvm.dbg.value(metadata i32 %7, metadata !11234, metadata !DIExpression()), !dbg !11242
  %8 = icmp eq i32 %7, 0, !dbg !11243
  %9 = shl nuw i32 1, %1, !dbg !11245
  br i1 %8, label %12, label %10, !dbg !11246

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11247
  br label %14, !dbg !11249

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11250
  br label %14, !dbg !11253

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11254
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11257, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.value(metadata i8* %1, metadata !11258, metadata !DIExpression()), !dbg !11261
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11262
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11262
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11262
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11259, metadata !DIExpression()), !dbg !11261
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11263
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11263
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !11265
  %9 = icmp eq i32 %8, 0, !dbg !11265
  br i1 %9, label %12, label %10, !dbg !11266

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11267
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !11269
  br label %12, !dbg !11270

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11271
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11273
  %15 = icmp eq i32 %14, 0, !dbg !11273
  br i1 %15, label %19, label %16, !dbg !11274

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11275
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !11276
  store i8 %18, i8* %1, align 1, !dbg !11277
  br label %19, !dbg !11278

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11261
  ret i32 %20, !dbg !11279
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11282, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i8 %1, metadata !11283, metadata !DIExpression()), !dbg !11286
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11287
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11287
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11287
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11284, metadata !DIExpression()), !dbg !11286
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11288

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11289
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !11292
  %10 = icmp eq i32 %9, 0, !dbg !11292
  br i1 %10, label %18, label %11, !dbg !11293

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11294, !srcloc !11301
  call void @llvm.dbg.value(metadata i32 undef, metadata !11297, metadata !DIExpression()) #26, !dbg !11302
  call void @llvm.dbg.value(metadata i32 undef, metadata !11298, metadata !DIExpression()) #26, !dbg !11302
  call void @llvm.dbg.value(metadata i32 undef, metadata !11285, metadata !DIExpression()), !dbg !11286
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11303
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11305
  %15 = icmp eq i32 %14, 0, !dbg !11305
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11294
  br i1 %15, label %17, label %19, !dbg !11306

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11297, metadata !DIExpression()) #26, !dbg !11302
  call void @llvm.dbg.value(metadata i32 %16, metadata !11285, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 undef, metadata !11307, metadata !DIExpression()) #26, !dbg !11310
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11312, !srcloc !11313
  br label %18, !dbg !11314

18:                                               ; preds = %17, %7
  br label %7, !dbg !11289, !llvm.loop !11315

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11294
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11317
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !11318
  call void @llvm.dbg.value(metadata i32 %20, metadata !11307, metadata !DIExpression()) #26, !dbg !11319
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11321, !srcloc !11313
  ret void, !dbg !11322
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !11323 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11325, metadata !DIExpression()), !dbg !11328
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11329
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11329
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11329
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11326, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.value(metadata i32 0, metadata !11327, metadata !DIExpression()), !dbg !11328
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11330
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11330
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !11332
  %8 = icmp ne i32 %7, 0, !dbg !11332
  %9 = zext i1 %8 to i32, !dbg !11333
  call void @llvm.dbg.value(metadata i32 %9, metadata !11327, metadata !DIExpression()), !dbg !11328
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11334
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !11336
  %12 = icmp eq i32 %11, 0, !dbg !11336
  %13 = or i32 %9, 2, !dbg !11337
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11337
  call void @llvm.dbg.value(metadata i32 %14, metadata !11327, metadata !DIExpression()), !dbg !11328
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11338
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !11340
  %17 = icmp eq i32 %16, 0, !dbg !11340
  %18 = or i32 %14, 4, !dbg !11341
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11341
  call void @llvm.dbg.value(metadata i32 %19, metadata !11327, metadata !DIExpression()), !dbg !11328
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11342
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !11344
  %22 = icmp eq i32 %21, 0, !dbg !11344
  %23 = or i32 %19, 8, !dbg !11345
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11345
  call void @llvm.dbg.value(metadata i32 %24, metadata !11327, metadata !DIExpression()), !dbg !11328
  %25 = and i32 %24, 8, !dbg !11346
  %26 = icmp eq i32 %25, 0, !dbg !11346
  br i1 %26, label %29, label %27, !dbg !11348

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11349
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !11351
  br label %29, !dbg !11352

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11353
  %31 = icmp eq i32 %30, 0, !dbg !11353
  br i1 %31, label %34, label %32, !dbg !11355

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11356
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !11358
  br label %34, !dbg !11359

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11360
  %36 = icmp eq i32 %35, 0, !dbg !11360
  br i1 %36, label %39, label %37, !dbg !11362

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11363
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !11365
  br label %39, !dbg !11366

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11367
  %41 = icmp eq i32 %40, 0, !dbg !11367
  br i1 %41, label %44, label %42, !dbg !11369

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11370
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !11372
  br label %44, !dbg !11373

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11374
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !11375
  ret i32 %24, !dbg !11376
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11379, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11380, metadata !DIExpression()), !dbg !11388
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11389
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11389
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11389
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11381, metadata !DIExpression()), !dbg !11388
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11390
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11390
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11390
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11382, metadata !DIExpression()), !dbg !11388
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11391
  %10 = load i8, i8* %9, align 4, !dbg !11391
  %11 = zext i8 %10 to i32, !dbg !11392
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !11393
  call void @llvm.dbg.value(metadata i32 %12, metadata !11384, metadata !DIExpression()), !dbg !11388
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11394
  %14 = load i8, i8* %13, align 1, !dbg !11394
  %15 = zext i8 %14 to i32, !dbg !11395
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !11396
  call void @llvm.dbg.value(metadata i32 %16, metadata !11385, metadata !DIExpression()), !dbg !11388
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11397
  %18 = load i8, i8* %17, align 2, !dbg !11397
  %19 = zext i8 %18 to i32, !dbg !11398
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !11399
  call void @llvm.dbg.value(metadata i32 %20, metadata !11386, metadata !DIExpression()), !dbg !11388
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11400
  %22 = load i8, i8* %21, align 1, !dbg !11400
  %23 = zext i8 %22 to i32, !dbg !11401
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !11402
  call void @llvm.dbg.value(metadata i32 %24, metadata !11387, metadata !DIExpression()), !dbg !11388
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11403

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11405
  br i1 %26, label %69, label %27, !dbg !11407

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11408

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11409
  br i1 %29, label %65, label %30, !dbg !11409

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11411
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11388
  br i1 %31, label %38, label %34, !dbg !11413

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11414
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !11414

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11417
  br i1 %37, label %38, label %69, !dbg !11418

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11419
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !11420
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !11421
  %41 = icmp eq i32 %12, %40, !dbg !11423
  br i1 %41, label %43, label %42, !dbg !11424

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !11425
  br label %43, !dbg !11427

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !11428
  %45 = icmp eq i32 %16, %44, !dbg !11430
  br i1 %45, label %47, label %46, !dbg !11431

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !11432
  br label %47, !dbg !11434

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !11435
  %49 = icmp eq i32 %20, %48, !dbg !11437
  br i1 %49, label %51, label %50, !dbg !11438

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !11439
  br label %51, !dbg !11441

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !11442
  %53 = icmp eq i32 %24, %52, !dbg !11444
  br i1 %53, label %55, label %54, !dbg !11445

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !11446
  br label %55, !dbg !11448

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11449
  %57 = load i32, i32* %56, align 4, !dbg !11449
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11451
  %59 = load i32, i32* %58, align 4, !dbg !11451
  %60 = icmp eq i32 %57, %59, !dbg !11452
  br i1 %60, label %63, label %61, !dbg !11453

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !11454
  %62 = load i32, i32* %56, align 4, !dbg !11456
  store i32 %62, i32* %58, align 4, !dbg !11457
  br label %63, !dbg !11458

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11459
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !11460
  br label %69, !dbg !11461

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11409
  %67 = and i8 %66, 1, !dbg !11409
  %68 = icmp eq i8 %67, 0, !dbg !11409
  br i1 %68, label %30, label %69, !dbg !11409

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11388
  ret i32 %70, !dbg !11462
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11465, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11466, metadata !DIExpression()), !dbg !11468
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11469
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11469
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11469
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11467, metadata !DIExpression()), !dbg !11468
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11470
  %7 = load i32, i32* %6, align 4, !dbg !11470
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11471
  store i32 %7, i32* %8, align 4, !dbg !11472
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11473, !range !11474
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !11475
  %11 = trunc i32 %10 to i8, !dbg !11475
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11476
  store i8 %11, i8* %12, align 4, !dbg !11477
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !11478, !range !11479
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !11480
  %15 = trunc i32 %14 to i8, !dbg !11480
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11481
  store i8 %15, i8* %16, align 1, !dbg !11482
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !11483
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11484, !range !11474
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !11485
  %20 = trunc i32 %19 to i8, !dbg !11485
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11486
  store i8 %20, i8* %21, align 2, !dbg !11487
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !11488, !range !11489
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !11490
  %24 = trunc i32 %23 to i8, !dbg !11490
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11491
  store i8 %24, i8* %25, align 1, !dbg !11492
  ret i32 0, !dbg !11493
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11498, metadata !DIExpression()), !dbg !11500
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11501
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11501
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11501
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11499, metadata !DIExpression()), !dbg !11500
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11502
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11502
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !11503
  ret i32 %7, !dbg !11504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11509, metadata !DIExpression()), !dbg !11510
  %2 = icmp eq i32 %0, 1024, !dbg !11511
  %3 = select i1 %2, i32 2, i32 0, !dbg !11511
  %4 = icmp eq i32 %0, 1536, !dbg !11511
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11511
  ret i32 %5, !dbg !11512
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11515, metadata !DIExpression()), !dbg !11517
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11518
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11518
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11518
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11516, metadata !DIExpression()), !dbg !11517
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11519
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11519
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !11520
  ret i32 %7, !dbg !11521
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11526, metadata !DIExpression()), !dbg !11527
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11528
  %3 = icmp ult i32 %2, 4, !dbg !11528
  br i1 %3, label %4, label %7, !dbg !11528

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11528
  %6 = load i32, i32* %5, align 4, !dbg !11528
  br label %7, !dbg !11528

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11529
  ret i32 %8, !dbg !11531
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11532 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11534, metadata !DIExpression()), !dbg !11536
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11537
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11537
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11537
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11535, metadata !DIExpression()), !dbg !11536
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11538
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11538
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !11539
  ret i32 %7, !dbg !11540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11545, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i32 %1, metadata !11546, metadata !DIExpression()), !dbg !11547
  %3 = icmp eq i32 %0, 4096, !dbg !11548
  %4 = icmp eq i32 %1, 0, !dbg !11548
  %5 = select i1 %4, i32 4, i32 3, !dbg !11548
  %6 = select i1 %4, i32 3, i32 2, !dbg !11548
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11548
  ret i32 %7, !dbg !11549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11552, metadata !DIExpression()), !dbg !11554
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11555
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11555
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11555
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11553, metadata !DIExpression()), !dbg !11554
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11556
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11556
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !11557
  ret i32 %7, !dbg !11558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11563, metadata !DIExpression()), !dbg !11564
  %2 = icmp eq i32 %0, 768, !dbg !11565
  %3 = zext i1 %2 to i32, !dbg !11564
  ret i32 %3, !dbg !11567
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11568 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11573, metadata !DIExpression()), !dbg !11574
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11575
  %3 = load volatile i32, i32* %2, align 4, !dbg !11575
  %4 = and i32 %3, 768, !dbg !11575
  ret i32 %4, !dbg !11576
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11577 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11579, metadata !DIExpression()), !dbg !11580
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11581
  %3 = load volatile i32, i32* %2, align 4, !dbg !11581
  %4 = and i32 %3, 4096, !dbg !11581
  ret i32 %4, !dbg !11582
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11585, metadata !DIExpression()), !dbg !11586
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11587
  %3 = load volatile i32, i32* %2, align 4, !dbg !11587
  %4 = and i32 %3, 12288, !dbg !11587
  ret i32 %4, !dbg !11588
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11589 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11591, metadata !DIExpression()), !dbg !11592
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11593
  %3 = load volatile i32, i32* %2, align 4, !dbg !11593
  %4 = and i32 %3, 1536, !dbg !11593
  ret i32 %4, !dbg !11594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11599, metadata !DIExpression()), !dbg !11600
  %2 = icmp eq i32 %0, 2, !dbg !11601
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11601
  %4 = icmp eq i32 %0, 1, !dbg !11601
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11601
  ret i32 %5, !dbg !11602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11607, metadata !DIExpression()), !dbg !11608
  %2 = icmp ult i32 %0, 3, !dbg !11609
  br i1 %2, label %3, label %6, !dbg !11609

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11609
  %5 = load i32, i32* %4, align 4, !dbg !11609
  br label %6, !dbg !11609

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11610
  ret i32 %7, !dbg !11612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11617, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata i32 %1, metadata !11618, metadata !DIExpression()), !dbg !11619
  %3 = icmp eq i32 %0, 4, !dbg !11620
  %4 = icmp eq i32 %1, 0, !dbg !11620
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11620
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11620
  ret i32 %6, !dbg !11621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11626, metadata !DIExpression()), !dbg !11627
  %2 = icmp eq i32 %0, 1, !dbg !11628
  %3 = select i1 %2, i32 768, i32 0, !dbg !11627
  ret i32 %3, !dbg !11630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11631 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11635, metadata !DIExpression()), !dbg !11636
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11637
  %3 = load volatile i32, i32* %2, align 4, !dbg !11637
  %4 = and i32 %3, -8193, !dbg !11637
  store volatile i32 %4, i32* %2, align 4, !dbg !11637
  ret void, !dbg !11638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11643, metadata !DIExpression()), !dbg !11646
  call void @llvm.dbg.value(metadata i32 %1, metadata !11644, metadata !DIExpression()), !dbg !11646
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11647
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11647
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11647
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11645, metadata !DIExpression()), !dbg !11646
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11648
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11648
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11649
  ret void, !dbg !11650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11653, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.value(metadata i32 %1, metadata !11654, metadata !DIExpression()), !dbg !11656
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11657
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11657
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11657
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11655, metadata !DIExpression()), !dbg !11656
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11658
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11658
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11659
  ret void, !dbg !11660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11661 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11663, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.value(metadata i32 %1, metadata !11664, metadata !DIExpression()), !dbg !11666
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11667
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11667
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11667
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11665, metadata !DIExpression()), !dbg !11666
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11668
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11668
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11673, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 %1, metadata !11674, metadata !DIExpression()), !dbg !11676
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11677
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11677
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11677
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11675, metadata !DIExpression()), !dbg !11676
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11678
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11678
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11679
  ret void, !dbg !11680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11681 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11683, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i32 %1, metadata !11684, metadata !DIExpression()), !dbg !11688
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11689
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11689
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11689
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11685, metadata !DIExpression()), !dbg !11688
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11690
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11690
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11690
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11686, metadata !DIExpression()), !dbg !11688
  %10 = bitcast i32* %3 to i8*, !dbg !11691
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11691
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11692
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11692
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11696
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11696
  %15 = load i8*, i8** %14, align 4, !dbg !11696
  call void @llvm.dbg.value(metadata i32* %3, metadata !11687, metadata !DIExpression(DW_OP_deref)), !dbg !11688
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !11697
  %17 = icmp slt i32 %16, 0, !dbg !11698
  br i1 %17, label %18, label %21, !dbg !11699

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #27, !dbg !11700
  %20 = zext i8 %19 to i32, !dbg !11700
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef %20) #28, !dbg !11700
  br label %26, !dbg !11706

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11707
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11707
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #27, !dbg !11708
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11709
  %25 = load i32, i32* %3, align 4, !dbg !11710
  call void @llvm.dbg.value(metadata i32 %25, metadata !11687, metadata !DIExpression()), !dbg !11688
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #27, !dbg !11711
  br label %26, !dbg !11712

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11712
  ret void, !dbg !11712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11713 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11715, metadata !DIExpression()), !dbg !11716
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11717
  %3 = load volatile i32, i32* %2, align 4, !dbg !11717
  %4 = or i32 %3, 8192, !dbg !11717
  store volatile i32 %4, i32* %2, align 4, !dbg !11717
  ret void, !dbg !11718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11721, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.value(metadata i8* %1, metadata !11722, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.value(metadata i32* %2, metadata !11723, metadata !DIExpression()), !dbg !11725
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11726
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11726
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11726
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11724, metadata !DIExpression()), !dbg !11725
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11727
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11727
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11729
  br i1 %9, label %12, label %10, !dbg !11730

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #28, !dbg !11731
  br label %12, !dbg !11732

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11725
  ret i32 %13, !dbg !11733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef %0) unnamed_addr #5 !dbg !11734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11736, metadata !DIExpression()), !dbg !11737
  %2 = icmp eq i32 %0, 2, !dbg !11738
  %3 = select i1 %2, i8 87, i8 63, !dbg !11738
  %4 = icmp eq i32 %0, 1, !dbg !11738
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11738
  ret i8 %5, !dbg !11739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11740 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11744, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.value(metadata i32 0, metadata !11745, metadata !DIExpression()), !dbg !11746
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11747
  %3 = load volatile i32, i32* %2, align 4, !dbg !11747
  %4 = and i32 %3, -32769, !dbg !11747
  store volatile i32 %4, i32* %2, align 4, !dbg !11747
  ret void, !dbg !11748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11749 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11753, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata i32 %1, metadata !11754, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata i32 0, metadata !11755, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata i32 %2, metadata !11756, metadata !DIExpression()), !dbg !11757
  %4 = zext i32 %1 to i64, !dbg !11758
  %5 = mul nuw nsw i64 %4, 25, !dbg !11758
  %6 = zext i32 %2 to i64, !dbg !11758
  %7 = shl nuw nsw i64 %6, 2, !dbg !11758
  %8 = udiv i64 %5, %7, !dbg !11758
  %9 = trunc i64 %8 to i32, !dbg !11758
  %10 = udiv i32 %9, 100, !dbg !11758
  %11 = shl nuw nsw i32 %10, 4, !dbg !11758
  %12 = mul i32 %10, -100, !dbg !11758
  %13 = add i32 %12, %9, !dbg !11758
  %14 = shl i32 %13, 4, !dbg !11758
  %15 = add i32 %14, 50, !dbg !11758
  %16 = udiv i32 %15, 100, !dbg !11758
  %17 = and i32 %16, 240, !dbg !11758
  %18 = add nuw nsw i32 %17, %11, !dbg !11758
  %19 = and i32 %16, 15, !dbg !11758
  %20 = and i32 %18, 65520, !dbg !11761
  %21 = or i32 %20, %19, !dbg !11761
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11762
  store volatile i32 %21, i32* %22, align 4, !dbg !11763
  ret void, !dbg !11764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11765 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11767, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 %1, metadata !11768, metadata !DIExpression()), !dbg !11769
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11770
  %4 = load volatile i32, i32* %3, align 4, !dbg !11770
  %5 = and i32 %4, -769, !dbg !11770
  %6 = or i32 %5, %1, !dbg !11770
  store volatile i32 %6, i32* %3, align 4, !dbg !11770
  ret void, !dbg !11771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11772 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11774, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i32 %1, metadata !11775, metadata !DIExpression()), !dbg !11776
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11777
  %4 = load volatile i32, i32* %3, align 4, !dbg !11777
  %5 = and i32 %4, -4097, !dbg !11777
  %6 = or i32 %5, %1, !dbg !11777
  store volatile i32 %6, i32* %3, align 4, !dbg !11777
  ret void, !dbg !11778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11779 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %1, metadata !11782, metadata !DIExpression()), !dbg !11783
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11784
  %4 = load volatile i32, i32* %3, align 4, !dbg !11784
  %5 = and i32 %4, -12289, !dbg !11784
  %6 = or i32 %5, %1, !dbg !11784
  store volatile i32 %6, i32* %3, align 4, !dbg !11784
  ret void, !dbg !11785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11786 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11788, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata i32 %1, metadata !11789, metadata !DIExpression()), !dbg !11790
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11791
  %4 = load volatile i32, i32* %3, align 4, !dbg !11791
  %5 = and i32 %4, -1537, !dbg !11791
  %6 = or i32 %5, %1, !dbg !11791
  store volatile i32 %6, i32* %3, align 4, !dbg !11791
  ret void, !dbg !11792
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11793 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11795, metadata !DIExpression()), !dbg !11796
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11797
  %3 = load volatile i32, i32* %2, align 4, !dbg !11797
  %4 = lshr i32 %3, 3, !dbg !11798
  %5 = and i32 %4, 1, !dbg !11798
  ret i32 %5, !dbg !11799
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11800 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11802, metadata !DIExpression()), !dbg !11803
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11804
  %3 = load volatile i32, i32* %2, align 4, !dbg !11804
  %4 = and i32 %3, 1, !dbg !11804
  ret i32 %4, !dbg !11805
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11806 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11808, metadata !DIExpression()), !dbg !11809
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11810
  %3 = load volatile i32, i32* %2, align 4, !dbg !11810
  %4 = lshr i32 %3, 1, !dbg !11811
  %5 = and i32 %4, 1, !dbg !11811
  ret i32 %5, !dbg !11812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11813 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11815, metadata !DIExpression()), !dbg !11816
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11817
  %3 = load volatile i32, i32* %2, align 4, !dbg !11817
  %4 = lshr i32 %3, 8, !dbg !11818
  %5 = and i32 %4, 1, !dbg !11818
  ret i32 %5, !dbg !11819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11820 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11822, metadata !DIExpression()), !dbg !11823
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11824
  store volatile i32 -257, i32* %2, align 4, !dbg !11824
  ret void, !dbg !11825
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11826 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11828, metadata !DIExpression()), !dbg !11830
  %3 = bitcast i32* %2 to i8*, !dbg !11831
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11831
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11829, metadata !DIExpression()), !dbg !11832
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11833
  %5 = load volatile i32, i32* %4, align 4, !dbg !11833
  store volatile i32 %5, i32* %2, align 4, !dbg !11834
  %6 = load volatile i32, i32* %2, align 4, !dbg !11835
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11836
  %8 = load volatile i32, i32* %7, align 4, !dbg !11836
  store volatile i32 %8, i32* %2, align 4, !dbg !11837
  %9 = load volatile i32, i32* %2, align 4, !dbg !11838
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11839
  ret void, !dbg !11839
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11840 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11842, metadata !DIExpression()), !dbg !11844
  %3 = bitcast i32* %2 to i8*, !dbg !11845
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11845
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11843, metadata !DIExpression()), !dbg !11846
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11847
  %5 = load volatile i32, i32* %4, align 4, !dbg !11847
  store volatile i32 %5, i32* %2, align 4, !dbg !11848
  %6 = load volatile i32, i32* %2, align 4, !dbg !11849
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11850
  %8 = load volatile i32, i32* %7, align 4, !dbg !11850
  store volatile i32 %8, i32* %2, align 4, !dbg !11851
  %9 = load volatile i32, i32* %2, align 4, !dbg !11852
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11853
  ret void, !dbg !11853
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11854 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11856, metadata !DIExpression()), !dbg !11858
  %3 = bitcast i32* %2 to i8*, !dbg !11859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11859
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11857, metadata !DIExpression()), !dbg !11860
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11861
  %5 = load volatile i32, i32* %4, align 4, !dbg !11861
  store volatile i32 %5, i32* %2, align 4, !dbg !11862
  %6 = load volatile i32, i32* %2, align 4, !dbg !11863
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11864
  %8 = load volatile i32, i32* %7, align 4, !dbg !11864
  store volatile i32 %8, i32* %2, align 4, !dbg !11865
  %9 = load volatile i32, i32* %2, align 4, !dbg !11866
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11867
  ret void, !dbg !11867
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11868 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11870, metadata !DIExpression()), !dbg !11872
  %3 = bitcast i32* %2 to i8*, !dbg !11873
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11873
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11871, metadata !DIExpression()), !dbg !11874
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11875
  %5 = load volatile i32, i32* %4, align 4, !dbg !11875
  store volatile i32 %5, i32* %2, align 4, !dbg !11876
  %6 = load volatile i32, i32* %2, align 4, !dbg !11877
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11878
  %8 = load volatile i32, i32* %7, align 4, !dbg !11878
  store volatile i32 %8, i32* %2, align 4, !dbg !11879
  %9 = load volatile i32, i32* %2, align 4, !dbg !11880
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11881
  ret void, !dbg !11881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11882 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11884, metadata !DIExpression()), !dbg !11885
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11886
  %3 = load volatile i32, i32* %2, align 4, !dbg !11886
  %4 = lshr i32 %3, 7, !dbg !11887
  %5 = and i32 %4, 1, !dbg !11887
  ret i32 %5, !dbg !11888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !11889 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11893, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i8 %1, metadata !11894, metadata !DIExpression()), !dbg !11895
  %3 = zext i8 %1 to i32, !dbg !11896
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11897
  store volatile i32 %3, i32* %4, align 4, !dbg !11898
  ret void, !dbg !11899
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11900 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11902, metadata !DIExpression()), !dbg !11903
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11904
  %3 = load volatile i32, i32* %2, align 4, !dbg !11904
  %4 = lshr i32 %3, 5, !dbg !11905
  %5 = and i32 %4, 1, !dbg !11905
  ret i32 %5, !dbg !11906
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11907 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11911, metadata !DIExpression()), !dbg !11912
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11913
  %3 = load volatile i32, i32* %2, align 4, !dbg !11913
  %4 = trunc i32 %3 to i8, !dbg !11914
  ret i8 %4, !dbg !11915
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11918, metadata !DIExpression()), !dbg !11924
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11925
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11925
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11925
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11919, metadata !DIExpression()), !dbg !11924
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11926
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11926
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11926
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11920, metadata !DIExpression()), !dbg !11924
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !11927
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11928
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11928
  %10 = tail call fastcc zeroext i1 @device_is_ready.132(%struct.device* noundef %9) #27, !dbg !11930
  br i1 %10, label %14, label %11, !dbg !11931

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #27, !dbg !11932
  %13 = zext i8 %12 to i32, !dbg !11932
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.133, i32 0, i32 0), i32 noundef %13) #28, !dbg !11932
  br label %62, !dbg !11938

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11939
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11940
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11940
  %18 = load i8*, i8** %17, align 4, !dbg !11940
  %19 = tail call fastcc i32 @clock_control_on.134(%struct.device* noundef %15, i8* noundef %18) #27, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %19, metadata !11923, metadata !DIExpression()), !dbg !11924
  %20 = icmp eq i32 %19, 0, !dbg !11942
  br i1 %20, label %24, label %21, !dbg !11944

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #27, !dbg !11945
  %23 = zext i8 %22 to i32, !dbg !11945
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.135, i32 0, i32 0), i32 noundef %23) #28, !dbg !11945
  br label %62, !dbg !11951

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11952
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11952
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #27, !dbg !11953
  call void @llvm.dbg.value(metadata i32 %27, metadata !11923, metadata !DIExpression()), !dbg !11924
  %28 = icmp slt i32 %27, 0, !dbg !11954
  br i1 %28, label %62, label %29, !dbg !11956

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11957
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11957
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #27, !dbg !11958
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11959
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #27, !dbg !11960
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11961
  %34 = load i32, i32* %33, align 4, !dbg !11961
  %35 = icmp ult i32 %34, 3, !dbg !11963
  br i1 %35, label %39, label %36, !dbg !11963

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 2) #27, !dbg !11964
  %38 = zext i8 %37 to i32, !dbg !11964
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.136, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #28, !dbg !11964
  call void @llvm.dbg.value(metadata i32 0, metadata !11921, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11924
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11963
  %41 = load i32, i32* %40, align 4, !dbg !11963
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !11963
  %43 = load i32, i32* %42, align 4, !dbg !11963
  br label %44, !dbg !11963

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11973
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11973
  call void @llvm.dbg.value(metadata i32 %46, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %45, metadata !11921, metadata !DIExpression()), !dbg !11924
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11974
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #27, !dbg !11975
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11976
  %49 = load i8, i8* %48, align 4, !dbg !11976, !range !7720
  %50 = icmp eq i8 %49, 0, !dbg !11976
  br i1 %50, label %52, label %51, !dbg !11978

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !11979
  br label %52, !dbg !11981

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11982
  %54 = load i32, i32* %53, align 4, !dbg !11982
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #27, !dbg !11983
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11984
  %56 = load i8, i8* %55, align 4, !dbg !11984, !range !7720
  %57 = icmp eq i8 %56, 0, !dbg !11984
  br i1 %57, label %60, label %58, !dbg !11986

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11987
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #27, !dbg !11989
  br label %60, !dbg !11990

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11991
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #27, !dbg !11992
  br label %62, !dbg !11993

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11924
  ret i32 %63, !dbg !11994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11995 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11999, metadata !DIExpression()), !dbg !12003
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12004
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12004
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12004
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12000, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12001, metadata !DIExpression()), !dbg !12003
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12005
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !12006
  ret void, !dbg !12007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.132(%struct.device* noundef %0) unnamed_addr #1 !dbg !12008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12012, metadata !DIExpression()), !dbg !12013
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12014, !srcloc !12016
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.137(%struct.device* noundef %0) #27, !dbg !12017
  ret i1 %2, !dbg !12018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.134(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12021, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8* %1, metadata !12022, metadata !DIExpression()), !dbg !12024
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12025
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12025
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12025
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12023, metadata !DIExpression()), !dbg !12024
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12026
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12026
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #28, !dbg !12027
  ret i32 %8, !dbg !12028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12029 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12033, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i8 0, metadata !12034, metadata !DIExpression()), !dbg !12037
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !12038
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12036, metadata !DIExpression(DW_OP_deref)), !dbg !12037
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #28, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %4, metadata !12035, metadata !DIExpression()), !dbg !12037
  %5 = icmp slt i32 %4, 0, !dbg !12040
  br i1 %5, label %9, label %6, !dbg !12042

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12043
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12036, metadata !DIExpression()), !dbg !12037
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !12044
  br label %9, !dbg !12045

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12037
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !12046
  ret i32 %10, !dbg !12046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12047 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12049, metadata !DIExpression()), !dbg !12053
  call void @llvm.dbg.value(metadata i32 12, metadata !12050, metadata !DIExpression()), !dbg !12053
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12054

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12055, metadata !DIExpression()) #26, !dbg !12061
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #26, !dbg !12064, !srcloc !12065
  call void @llvm.dbg.value(metadata i32 %4, metadata !12060, metadata !DIExpression()) #26, !dbg !12061
  %5 = or i32 %4, 12, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %5, metadata !12051, metadata !DIExpression()), !dbg !12067
  call void @llvm.dbg.value(metadata i32 %5, metadata !12068, metadata !DIExpression()) #26, !dbg !12075
  call void @llvm.dbg.value(metadata i32* %2, metadata !12073, metadata !DIExpression()) #26, !dbg !12075
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #26, !dbg !12077, !srcloc !12078
  call void @llvm.dbg.value(metadata i32 %6, metadata !12074, metadata !DIExpression()) #26, !dbg !12075
  %7 = icmp eq i32 %6, 0, !dbg !12054
  br i1 %7, label %8, label %3, !dbg !12066, !llvm.loop !12079

8:                                                ; preds = %3
  ret void, !dbg !12080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !12081 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12083, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %1, metadata !12084, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %2, metadata !12085, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 0, metadata !12086, metadata !DIExpression()), !dbg !12087
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12088
  %5 = load volatile i32, i32* %4, align 4, !dbg !12088
  %6 = and i32 %5, -5633, !dbg !12088
  %7 = or i32 %2, %1, !dbg !12088
  %8 = or i32 %7, %6, !dbg !12088
  store volatile i32 %8, i32* %4, align 4, !dbg !12088
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12089
  %10 = load volatile i32, i32* %9, align 4, !dbg !12089
  %11 = and i32 %10, -12289, !dbg !12089
  store volatile i32 %11, i32* %9, align 4, !dbg !12089
  ret void, !dbg !12090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12091 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12093, metadata !DIExpression()), !dbg !12094
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12095
  %3 = load volatile i32, i32* %2, align 4, !dbg !12095
  %4 = or i32 %3, 8, !dbg !12095
  store volatile i32 %4, i32* %2, align 4, !dbg !12095
  ret void, !dbg !12096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12097 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12101, metadata !DIExpression()), !dbg !12104
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12102, metadata !DIExpression()), !dbg !12104
  call void @llvm.dbg.value(metadata i32 0, metadata !12103, metadata !DIExpression()), !dbg !12104
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12105
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12105
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12106
  %5 = load i8, i8* %4, align 4, !dbg !12106
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #28, !dbg !12107
  ret i32 %6, !dbg !12108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.137(%struct.device* noundef %0) unnamed_addr #1 !dbg !12109 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12111, metadata !DIExpression()), !dbg !12112
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #28, !dbg !12113
  ret i1 %2, !dbg !12114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #17 !dbg !12115 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12117, metadata !DIExpression()), !dbg !12118
  tail call fastcc void @__NVIC_SetPriority.139() #27, !dbg !12119
  store i32 8399, i32* @last_load, align 4, !dbg !12120
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12121
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12122
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12123
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12124
  %3 = or i32 %2, 7, !dbg !12124
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12124
  ret i32 0, !dbg !12125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.139() unnamed_addr #17 !dbg !12126 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12128, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata i32 1, metadata !12129, metadata !DIExpression()), !dbg !12130
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12131
  ret void, !dbg !12134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12135 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12137, metadata !DIExpression()), !dbg !12139
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !12140
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12141
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12142
  %5 = add i32 %4, %3, !dbg !12142
  store i32 %5, i32* @cycle_count, align 4, !dbg !12142
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12143
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12144
  %7 = sub i32 %5, %6, !dbg !12147
  %8 = udiv i32 %7, 8400, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %8, metadata !12138, metadata !DIExpression()), !dbg !12139
  %9 = mul nuw i32 %8, 8400, !dbg !12149
  %10 = add i32 %9, %6, !dbg !12150
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12150
  tail call void @sys_clock_announce(i32 noundef %8) #28, !dbg !12151
  tail call void @z_arm_int_exit() #28, !dbg !12152
  ret void, !dbg !12153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #17 !dbg !12154 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %1, metadata !12156, metadata !DIExpression()), !dbg !12160
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %2, metadata !12157, metadata !DIExpression()), !dbg !12160
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %3, metadata !12158, metadata !DIExpression()), !dbg !12160
  %4 = and i32 %2, 65536, !dbg !12163
  %5 = icmp ne i32 %4, 0, !dbg !12163
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12165
  %8 = load i32, i32* @last_load, align 4, !dbg !12160
  br i1 %7, label %9, label %13, !dbg !12165

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12166
  %11 = add i32 %10, %8, !dbg !12166
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12166
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12168
  br label %13, !dbg !12169

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12170
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12171
  %16 = add i32 %14, %15, !dbg !12172
  ret i32 %16, !dbg !12173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12178, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.value(metadata i1 %1, metadata !12179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12191
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12192
  br i1 %4, label %5, label %8, !dbg !12192

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12194
  %7 = and i32 %6, -2, !dbg !12194
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12194
  store i32 -16777216, i32* @last_load, align 4, !dbg !12196
  br label %54, !dbg !12197

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12198
  call void @llvm.dbg.value(metadata i32 %9, metadata !12183, metadata !DIExpression()), !dbg !12191
  br i1 %3, label %18, label %10, !dbg !12199

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12199
  call void @llvm.dbg.value(metadata i32 undef, metadata !12178, metadata !DIExpression()), !dbg !12191
  %12 = icmp slt i32 %11, 1, !dbg !12200
  br i1 %12, label %18, label %13, !dbg !12200

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12200
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12200
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12200
  %17 = add nuw nsw i32 %16, 8399, !dbg !12200
  br label %18, !dbg !12200

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12178, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12201, metadata !DIExpression()) #26, !dbg !12208
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12210, !srcloc !12216
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12210
  call void @llvm.dbg.value(metadata i32 %21, metadata !12213, metadata !DIExpression()) #26, !dbg !12217
  call void @llvm.dbg.value(metadata i32 undef, metadata !12214, metadata !DIExpression()) #26, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %21, metadata !12207, metadata !DIExpression()) #26, !dbg !12208
  call void @llvm.dbg.value(metadata i32 %21, metadata !12184, metadata !DIExpression()), !dbg !12191
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %22, metadata !12189, metadata !DIExpression()), !dbg !12191
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12219
  call void @llvm.dbg.value(metadata i32 %23, metadata !12181, metadata !DIExpression()), !dbg !12191
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12220
  %25 = add i32 %24, %22, !dbg !12220
  store i32 %25, i32* @cycle_count, align 4, !dbg !12220
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12221
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12222
  %27 = sub i32 %25, %26, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %27, metadata !12190, metadata !DIExpression()), !dbg !12191
  %28 = icmp slt i32 %27, 0, !dbg !12224
  br i1 %28, label %38, label %29, !dbg !12226

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()), !dbg !12191
  %30 = add nuw i32 %19, %27, !dbg !12227
  %31 = urem i32 %30, 8400, !dbg !12229
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12180, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12191
  %32 = sub nuw nsw i32 %19, %31, !dbg !12230
  call void @llvm.dbg.value(metadata i32 %32, metadata !12180, metadata !DIExpression()), !dbg !12191
  %33 = icmp ugt i32 %32, 1024, !dbg !12231
  br i1 %33, label %34, label %36, !dbg !12231

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12180, metadata !DIExpression()), !dbg !12191
  %35 = icmp ugt i32 %32, 16766400, !dbg !12232
  br i1 %35, label %38, label %36, !dbg !12234

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12235
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12236
  call void @llvm.dbg.value(metadata i32 %40, metadata !12182, metadata !DIExpression()), !dbg !12191
  %41 = add nsw i32 %39, -1, !dbg !12237
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12238
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12239
  %42 = icmp ult i32 %23, %40, !dbg !12240
  br i1 %42, label %43, label %48, !dbg !12242

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12243
  %45 = add i32 %23, %9, !dbg !12245
  %46 = sub i32 %45, %40, !dbg !12246
  %47 = add i32 %46, %44, !dbg !12243
  br label %52, !dbg !12247

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12248
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12250
  %51 = add i32 %49, %50, !dbg !12250
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12251
  store i32 %53, i32* @cycle_count, align 4, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %21, metadata !12252, metadata !DIExpression()) #26, !dbg !12258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12257, metadata !DIExpression()) #26, !dbg !12258
  call void @llvm.dbg.value(metadata i32 %21, metadata !12260, metadata !DIExpression()) #26, !dbg !12263
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #26, !dbg !12265, !srcloc !12266
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12268 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12201, metadata !DIExpression()) #26, !dbg !12272
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12274, !srcloc !12216
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12274
  call void @llvm.dbg.value(metadata i32 %2, metadata !12213, metadata !DIExpression()) #26, !dbg !12276
  call void @llvm.dbg.value(metadata i32 undef, metadata !12214, metadata !DIExpression()) #26, !dbg !12276
  call void @llvm.dbg.value(metadata i32 %2, metadata !12207, metadata !DIExpression()) #26, !dbg !12272
  call void @llvm.dbg.value(metadata i32 %2, metadata !12270, metadata !DIExpression()), !dbg !12277
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !12278
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12279
  %5 = add i32 %4, %3, !dbg !12280
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12281
  %7 = sub i32 %5, %6, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %7, metadata !12271, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 %2, metadata !12252, metadata !DIExpression()) #26, !dbg !12283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12257, metadata !DIExpression()) #26, !dbg !12283
  call void @llvm.dbg.value(metadata i32 %2, metadata !12260, metadata !DIExpression()) #26, !dbg !12285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !12287, !srcloc !12266
  %8 = udiv i32 %7, 8400, !dbg !12288
  ret i32 %8, !dbg !12289
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12290 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12201, metadata !DIExpression()) #26, !dbg !12294
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12296, !srcloc !12216
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %2, metadata !12213, metadata !DIExpression()) #26, !dbg !12298
  call void @llvm.dbg.value(metadata i32 undef, metadata !12214, metadata !DIExpression()) #26, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %2, metadata !12207, metadata !DIExpression()) #26, !dbg !12294
  call void @llvm.dbg.value(metadata i32 %2, metadata !12292, metadata !DIExpression()), !dbg !12299
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !12300
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12301
  %5 = add i32 %4, %3, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %5, metadata !12293, metadata !DIExpression()), !dbg !12299
  call void @llvm.dbg.value(metadata i32 %2, metadata !12252, metadata !DIExpression()) #26, !dbg !12303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12257, metadata !DIExpression()) #26, !dbg !12303
  call void @llvm.dbg.value(metadata i32 %2, metadata !12260, metadata !DIExpression()) #26, !dbg !12305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !12307, !srcloc !12266
  ret i32 %5, !dbg !12308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #17 !dbg !12309 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12310
  %2 = icmp eq i32 %1, -16777216, !dbg !12312
  br i1 %2, label %3, label %6, !dbg !12313

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12314
  %5 = or i32 %4, 1, !dbg !12314
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12314
  br label %6, !dbg !12316

6:                                                ; preds = %3, %0
  ret void, !dbg !12317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #17 !dbg !12318 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12319
  %2 = and i32 %1, -2, !dbg !12319
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12319
  ret void, !dbg !12320
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #16 !dbg !12321 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12347, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i8 %1, metadata !12348, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12349, metadata !DIExpression()), !dbg !12350
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12351
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12351
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12350
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12352
  %8 = load i8, i8* %6, align 4, !dbg !12353
  %9 = zext i8 %8 to i32, !dbg !12354
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12354
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12355
  br i1 %11, label %18, label %24, !dbg !12356

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12350
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12352
  %14 = load i8, i8* %6, align 4, !dbg !12353
  %15 = zext i8 %14 to i32, !dbg !12354
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12354
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12355
  br i1 %17, label %18, label %24, !dbg !12356, !llvm.loop !12357

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12359
  %21 = load i8, i8* %20, align 1, !dbg !12359
  %22 = icmp eq i8 %21, %1, !dbg !12362
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12363
  br i1 %22, label %24, label %12, !dbg !12364

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12350
  ret i32 %25, !dbg !12365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12366 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12377, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i8 %1, metadata !12378, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i32 %2, metadata !12379, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i32 0, metadata !12382, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i32 0, metadata !12383, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i8 0, metadata !12384, metadata !DIExpression()), !dbg !12394
  %4 = icmp eq i8 %1, 0, !dbg !12395
  br i1 %4, label %35, label %5, !dbg !12396

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12395
  br label %9, !dbg !12396

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12384, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata i32 %29, metadata !12382, metadata !DIExpression()), !dbg !12393
  %8 = icmp eq i32 %34, %6, !dbg !12395
  br i1 %8, label %35, label %9, !dbg !12396, !llvm.loop !12397

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12384, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata i32 %11, metadata !12382, metadata !DIExpression()), !dbg !12393
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12399
  %13 = load i32, i32* %12, align 4, !dbg !12399
  call void @llvm.dbg.value(metadata i32 %13, metadata !12381, metadata !DIExpression()), !dbg !12393
  %14 = and i32 %13, 31, !dbg !12400
  %15 = icmp ult i32 %14, 16, !dbg !12401
  br i1 %15, label %16, label %20, !dbg !12402

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12403
  %18 = load i32, i32* %17, align 4, !dbg !12403
  %19 = or i32 %18, 32, !dbg !12405
  call void @llvm.dbg.value(metadata i32 %19, metadata !12382, metadata !DIExpression()), !dbg !12393
  br label %28, !dbg !12406

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12407

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12408
  %23 = load i32, i32* %22, align 4, !dbg !12408
  call void @llvm.dbg.value(metadata i32 %23, metadata !12386, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12409
  %24 = lshr i32 %23, 7, !dbg !12410
  %25 = and i32 %24, 16, !dbg !12410
  %26 = or i32 %25, %23, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %26, metadata !12382, metadata !DIExpression()), !dbg !12393
  br label %28, !dbg !12411

27:                                               ; preds = %20
  br label %28, !dbg !12412

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12393
  call void @llvm.dbg.value(metadata i32 %29, metadata !12382, metadata !DIExpression()), !dbg !12393
  %30 = lshr i32 %13, 5, !dbg !12412
  %31 = and i32 %30, 255, !dbg !12412
  call void @llvm.dbg.value(metadata i32 %31, metadata !12380, metadata !DIExpression()), !dbg !12393
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !12413
  call void @llvm.dbg.value(metadata i32 %32, metadata !12383, metadata !DIExpression()), !dbg !12393
  %33 = icmp slt i32 %32, 0, !dbg !12414
  %34 = add nuw nsw i32 %10, 1, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %34, metadata !12384, metadata !DIExpression()), !dbg !12394
  br i1 %33, label %35, label %7, !dbg !12417

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %1, metadata !12424, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %2, metadata !12425, metadata !DIExpression()), !dbg !12427
  %4 = icmp ugt i32 %0, 175, !dbg !12428
  br i1 %4, label %16, label %5, !dbg !12430

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12431
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12432
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12432
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12426, metadata !DIExpression()), !dbg !12427
  %9 = add nsw i32 %6, -8, !dbg !12433
  %10 = icmp ult i32 %9, 3, !dbg !12433
  br i1 %10, label %16, label %11, !dbg !12435

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.144(%struct.device* noundef %8) #27, !dbg !12436
  br i1 %12, label %13, label %16, !dbg !12437

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12438
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #28, !dbg !12439
  br label %16, !dbg !12440

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12427
  ret i32 %17, !dbg !12441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.144(%struct.device* noundef %0) unnamed_addr #1 !dbg !12442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12446, metadata !DIExpression()), !dbg !12447
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12448, !srcloc !12450
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.145(%struct.device* noundef %0) #27, !dbg !12451
  ret i1 %2, !dbg !12452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.145(%struct.device* noundef %0) unnamed_addr #1 !dbg !12453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12455, metadata !DIExpression()), !dbg !12456
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #28, !dbg !12457
  ret i1 %2, !dbg !12458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12459 {
  ret void, !dbg !12460
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #18 !dbg !12461 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12463, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 0, metadata !12464, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 2, metadata !12465, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 0, metadata !12466, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 2, metadata !12467, metadata !DIExpression()), !dbg !12468
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12469
  %2 = and i32 %1, 12, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %2, metadata !12463, metadata !DIExpression()), !dbg !12468
  %3 = icmp eq i32 %2, 8, !dbg !12471
  br i1 %3, label %4, label %18, !dbg !12471

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12472
  call void @llvm.dbg.value(metadata i32 %5, metadata !12466, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12468
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12474
  %7 = and i32 %6, 63, !dbg !12475
  call void @llvm.dbg.value(metadata i32 %7, metadata !12467, metadata !DIExpression()), !dbg !12468
  %8 = udiv i32 16000000, %7, !dbg !12476
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12476
  %10 = lshr i32 %9, 6, !dbg !12476
  %11 = and i32 %10, 511, !dbg !12476
  %12 = mul i32 %11, %8, !dbg !12476
  call void @llvm.dbg.value(metadata i32 %12, metadata !12464, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 %12, metadata !12464, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 %12, metadata !12464, metadata !DIExpression()), !dbg !12468
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12478
  %14 = lshr i32 %13, 15, !dbg !12479
  %15 = and i32 %14, 6, !dbg !12479
  %16 = add nuw nsw i32 %15, 2, !dbg !12479
  call void @llvm.dbg.value(metadata i32 %16, metadata !12465, metadata !DIExpression()), !dbg !12468
  %17 = udiv i32 %12, %16, !dbg !12480
  br label %18, !dbg !12481

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12482
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12483
  %21 = lshr i32 %20, 4, !dbg !12484
  %22 = and i32 %21, 15, !dbg !12484
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12485
  %24 = load i8, i8* %23, align 1, !dbg !12485
  %25 = zext i8 %24 to i32, !dbg !12485
  call void @llvm.dbg.value(metadata i32 %25, metadata !12463, metadata !DIExpression()), !dbg !12468
  %26 = lshr i32 %19, %25, !dbg !12486
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12486
  ret void, !dbg !12487
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12488 {
  ret i32 0, !dbg !12493
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12494 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12521, metadata !DIExpression()), !dbg !12532
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12533
  br i1 %3, label %317, label %4, !dbg !12535

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12536
  %6 = load i32, i32* %5, align 4, !dbg !12536
  %7 = and i32 %6, 1, !dbg !12538
  %8 = icmp eq i32 %7, 0, !dbg !12539
  br i1 %8, label %66, label %9, !dbg !12540

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12541
  %11 = and i32 %10, 12, !dbg !12541
  %12 = icmp eq i32 %11, 4, !dbg !12544
  br i1 %12, label %21, label %13, !dbg !12545

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12546
  %15 = and i32 %14, 12, !dbg !12546
  %16 = icmp eq i32 %15, 8, !dbg !12547
  br i1 %16, label %17, label %29, !dbg !12548

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12549
  %19 = and i32 %18, 4194304, !dbg !12550
  %20 = icmp eq i32 %19, 0, !dbg !12551
  br i1 %20, label %29, label %21, !dbg !12552

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12553
  %23 = and i32 %22, 131072, !dbg !12553
  %24 = icmp eq i32 %23, 0, !dbg !12553
  br i1 %24, label %66, label %25, !dbg !12556

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12557
  %27 = load i32, i32* %26, align 4, !dbg !12557
  %28 = icmp eq i32 %27, 0, !dbg !12558
  br i1 %28, label %317, label %66, !dbg !12559

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12560
  %31 = load i32, i32* %30, align 4, !dbg !12560
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12564

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12565
  %34 = or i32 %33, 65536, !dbg !12565
  br label %45, !dbg !12565

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12567
  %37 = or i32 %36, 262144, !dbg !12567
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12567
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12567
  %39 = or i32 %38, 65536, !dbg !12567
  br label %45, !dbg !12567

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12570
  %42 = and i32 %41, -65537, !dbg !12570
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12570
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12570
  %44 = and i32 %43, -262145, !dbg !12570
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12572
  %47 = load i32, i32* %30, align 4, !dbg !12573
  %48 = icmp eq i32 %47, 0, !dbg !12575
  %49 = tail call i32 @HAL_GetTick() #28, !dbg !12576
  call void @llvm.dbg.value(metadata i32 %49, metadata !12522, metadata !DIExpression()), !dbg !12532
  call void @llvm.dbg.value(metadata i32 %49, metadata !12522, metadata !DIExpression()), !dbg !12532
  br i1 %48, label %58, label %50, !dbg !12577

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12578
  %52 = and i32 %51, 131072, !dbg !12580
  %53 = icmp eq i32 %52, 0, !dbg !12580
  br i1 %53, label %54, label %66, !dbg !12581

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #28, !dbg !12582
  %56 = sub i32 %55, %49, !dbg !12585
  %57 = icmp ugt i32 %56, 100, !dbg !12586
  br i1 %57, label %317, label %50, !dbg !12587, !llvm.loop !12588

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12590
  %60 = and i32 %59, 131072, !dbg !12590
  %61 = icmp eq i32 %60, 0, !dbg !12590
  br i1 %61, label %66, label %62, !dbg !12592

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #28, !dbg !12593
  %64 = sub i32 %63, %49, !dbg !12596
  %65 = icmp ugt i32 %64, 100, !dbg !12597
  br i1 %65, label %317, label %58, !dbg !12598, !llvm.loop !12599

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12601
  %68 = and i32 %67, 2, !dbg !12603
  %69 = icmp eq i32 %68, 0, !dbg !12604
  br i1 %69, label %121, label %70, !dbg !12605

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12606
  %72 = and i32 %71, 12, !dbg !12606
  %73 = icmp eq i32 %72, 0, !dbg !12609
  br i1 %73, label %82, label %74, !dbg !12610

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12611
  %76 = and i32 %75, 12, !dbg !12611
  %77 = icmp eq i32 %76, 8, !dbg !12612
  br i1 %77, label %78, label %90, !dbg !12613

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12614
  %80 = and i32 %79, 4194304, !dbg !12615
  %81 = icmp eq i32 %80, 0, !dbg !12616
  br i1 %81, label %82, label %90, !dbg !12617

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12618
  %84 = and i32 %83, 2, !dbg !12618
  %85 = icmp eq i32 %84, 0, !dbg !12618
  br i1 %85, label %114, label %86, !dbg !12621

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12622
  %88 = load i32, i32* %87, align 4, !dbg !12622
  %89 = icmp eq i32 %88, 1, !dbg !12623
  br i1 %89, label %114, label %317, !dbg !12624

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12625
  %92 = load i32, i32* %91, align 4, !dbg !12625
  %93 = icmp eq i32 %92, 0, !dbg !12628
  br i1 %93, label %104, label %94, !dbg !12629

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12630
  %95 = tail call i32 @HAL_GetTick() #28, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %95, metadata !12522, metadata !DIExpression()), !dbg !12532
  br label %96, !dbg !12633

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12634
  %98 = and i32 %97, 2, !dbg !12635
  %99 = icmp eq i32 %98, 0, !dbg !12635
  br i1 %99, label %100, label %114, !dbg !12633

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #28, !dbg !12636
  %102 = sub i32 %101, %95, !dbg !12639
  %103 = icmp ugt i32 %102, 2, !dbg !12640
  br i1 %103, label %317, label %96, !dbg !12641, !llvm.loop !12642

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12644
  %105 = tail call i32 @HAL_GetTick() #28, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %105, metadata !12522, metadata !DIExpression()), !dbg !12532
  br label %106, !dbg !12647

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12648
  %108 = and i32 %107, 2, !dbg !12648
  %109 = icmp eq i32 %108, 0, !dbg !12648
  br i1 %109, label %121, label %110, !dbg !12647

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #28, !dbg !12649
  %112 = sub i32 %111, %105, !dbg !12652
  %113 = icmp ugt i32 %112, 2, !dbg !12653
  br i1 %113, label %317, label %106, !dbg !12654, !llvm.loop !12655

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12657
  %116 = and i32 %115, -249, !dbg !12657
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12657
  %118 = load i32, i32* %117, align 4, !dbg !12657
  %119 = shl i32 %118, 3, !dbg !12657
  %120 = or i32 %119, %116, !dbg !12657
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12657
  br label %121, !dbg !12658

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12658
  %123 = and i32 %122, 8, !dbg !12660
  %124 = icmp eq i32 %123, 0, !dbg !12661
  br i1 %124, label %149, label %125, !dbg !12662

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12663
  %127 = load i32, i32* %126, align 4, !dbg !12663
  %128 = icmp eq i32 %127, 0, !dbg !12666
  br i1 %128, label %139, label %129, !dbg !12667

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12668
  %130 = tail call i32 @HAL_GetTick() #28, !dbg !12670
  call void @llvm.dbg.value(metadata i32 %130, metadata !12522, metadata !DIExpression()), !dbg !12532
  br label %131, !dbg !12671

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12672
  %133 = and i32 %132, 2, !dbg !12673
  %134 = icmp eq i32 %133, 0, !dbg !12673
  br i1 %134, label %135, label %149, !dbg !12671

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #28, !dbg !12674
  %137 = sub i32 %136, %130, !dbg !12677
  %138 = icmp ugt i32 %137, 2, !dbg !12678
  br i1 %138, label %317, label %131, !dbg !12679, !llvm.loop !12680

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12682
  %140 = tail call i32 @HAL_GetTick() #28, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %140, metadata !12522, metadata !DIExpression()), !dbg !12532
  br label %141, !dbg !12685

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12686
  %143 = and i32 %142, 2, !dbg !12686
  %144 = icmp eq i32 %143, 0, !dbg !12686
  br i1 %144, label %149, label %145, !dbg !12685

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #28, !dbg !12687
  %147 = sub i32 %146, %140, !dbg !12690
  %148 = icmp ugt i32 %147, 2, !dbg !12691
  br i1 %148, label %317, label %141, !dbg !12692, !llvm.loop !12693

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12695
  %151 = and i32 %150, 4, !dbg !12696
  %152 = icmp eq i32 %151, 0, !dbg !12697
  br i1 %152, label %221, label %153, !dbg !12698

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12524, metadata !DIExpression()), !dbg !12699
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12700
  %155 = and i32 %154, 268435456, !dbg !12700
  %156 = icmp eq i32 %155, 0, !dbg !12700
  br i1 %156, label %157, label %164, !dbg !12701

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12702
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12702
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12528, metadata !DIExpression()), !dbg !12702
  store volatile i32 0, i32* %2, align 4, !dbg !12702
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12702
  %160 = or i32 %159, 268435456, !dbg !12702
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12702
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12702
  %162 = and i32 %161, 268435456, !dbg !12702
  store volatile i32 %162, i32* %2, align 4, !dbg !12702
  %163 = load volatile i32, i32* %2, align 4, !dbg !12702
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12703
  call void @llvm.dbg.value(metadata i32 1, metadata !12524, metadata !DIExpression()), !dbg !12699
  br label %164, !dbg !12704

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12524, metadata !DIExpression()), !dbg !12699
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12705
  %166 = and i32 %165, 256, !dbg !12705
  %167 = icmp eq i32 %166, 0, !dbg !12705
  br i1 %167, label %168, label %180, !dbg !12707

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12708
  %170 = or i32 %169, 256, !dbg !12708
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12708
  %171 = tail call i32 @HAL_GetTick() #28, !dbg !12710
  call void @llvm.dbg.value(metadata i32 %171, metadata !12522, metadata !DIExpression()), !dbg !12532
  br label %172, !dbg !12711

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12712
  %174 = and i32 %173, 256, !dbg !12712
  %175 = icmp eq i32 %174, 0, !dbg !12712
  br i1 %175, label %176, label %180, !dbg !12711

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #28, !dbg !12713
  %178 = sub i32 %177, %171, !dbg !12716
  %179 = icmp ugt i32 %178, 2, !dbg !12717
  br i1 %179, label %317, label %172, !dbg !12718, !llvm.loop !12719

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12721
  %182 = load i32, i32* %181, align 4, !dbg !12721
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12724

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12725
  %185 = or i32 %184, 1, !dbg !12725
  br label %196, !dbg !12725

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12727
  %188 = or i32 %187, 4, !dbg !12727
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12727
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12727
  %190 = or i32 %189, 1, !dbg !12727
  br label %196, !dbg !12727

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12730
  %193 = and i32 %192, -2, !dbg !12730
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12730
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12730
  %195 = and i32 %194, -5, !dbg !12730
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12732
  %198 = load i32, i32* %181, align 4, !dbg !12733
  %199 = icmp eq i32 %198, 0, !dbg !12735
  %200 = tail call i32 @HAL_GetTick() #28, !dbg !12736
  call void @llvm.dbg.value(metadata i32 %200, metadata !12522, metadata !DIExpression()), !dbg !12532
  call void @llvm.dbg.value(metadata i32 %200, metadata !12522, metadata !DIExpression()), !dbg !12532
  br i1 %199, label %209, label %201, !dbg !12737

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12738
  %203 = and i32 %202, 2, !dbg !12740
  %204 = icmp eq i32 %203, 0, !dbg !12740
  br i1 %204, label %205, label %217, !dbg !12741

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #28, !dbg !12742
  %207 = sub i32 %206, %200, !dbg !12745
  %208 = icmp ugt i32 %207, 5000, !dbg !12746
  br i1 %208, label %317, label %201, !dbg !12747, !llvm.loop !12748

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12750
  %211 = and i32 %210, 2, !dbg !12750
  %212 = icmp eq i32 %211, 0, !dbg !12750
  br i1 %212, label %217, label %213, !dbg !12752

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #28, !dbg !12753
  %215 = sub i32 %214, %200, !dbg !12756
  %216 = icmp ugt i32 %215, 5000, !dbg !12757
  br i1 %216, label %317, label %209, !dbg !12758, !llvm.loop !12759

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12761

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12762
  %220 = and i32 %219, -268435457, !dbg !12762
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12762
  br label %221, !dbg !12765

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12766
  %223 = load i32, i32* %222, align 4, !dbg !12766
  %224 = icmp eq i32 %223, 0, !dbg !12768
  br i1 %224, label %316, label %225, !dbg !12769

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12770
  %227 = and i32 %226, 12, !dbg !12770
  %228 = icmp eq i32 %227, 8, !dbg !12773
  br i1 %228, label %277, label %229, !dbg !12774

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12775
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12778
  %231 = tail call i32 @HAL_GetTick() #28, !dbg !12778
  call void @llvm.dbg.value(metadata i32 %231, metadata !12522, metadata !DIExpression()), !dbg !12532
  call void @llvm.dbg.value(metadata i32 %231, metadata !12522, metadata !DIExpression()), !dbg !12532
  br i1 %230, label %232, label %269, !dbg !12779

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12780
  %234 = and i32 %233, 33554432, !dbg !12780
  %235 = icmp eq i32 %234, 0, !dbg !12780
  br i1 %235, label %240, label %236, !dbg !12782

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #28, !dbg !12783
  %238 = sub i32 %237, %231, !dbg !12786
  %239 = icmp ugt i32 %238, 2, !dbg !12787
  br i1 %239, label %317, label %232, !dbg !12788, !llvm.loop !12789

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12791
  %242 = load i32, i32* %241, align 4, !dbg !12791
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12791
  %244 = load i32, i32* %243, align 4, !dbg !12791
  %245 = or i32 %244, %242, !dbg !12791
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12791
  %247 = load i32, i32* %246, align 4, !dbg !12791
  %248 = shl i32 %247, 6, !dbg !12791
  %249 = or i32 %245, %248, !dbg !12791
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12791
  %251 = load i32, i32* %250, align 4, !dbg !12791
  %252 = shl i32 %251, 15, !dbg !12791
  %253 = add i32 %252, -65536, !dbg !12791
  %254 = and i32 %253, -65536, !dbg !12791
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12791
  %256 = load i32, i32* %255, align 4, !dbg !12791
  %257 = shl i32 %256, 24, !dbg !12791
  %258 = or i32 %249, %257, !dbg !12791
  %259 = or i32 %258, %254, !dbg !12791
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12791
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12792
  %260 = tail call i32 @HAL_GetTick() #28, !dbg !12793
  call void @llvm.dbg.value(metadata i32 %260, metadata !12522, metadata !DIExpression()), !dbg !12532
  br label %261, !dbg !12794

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12795
  %263 = and i32 %262, 33554432, !dbg !12796
  %264 = icmp eq i32 %263, 0, !dbg !12796
  br i1 %264, label %265, label %316, !dbg !12794

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #28, !dbg !12797
  %267 = sub i32 %266, %260, !dbg !12800
  %268 = icmp ugt i32 %267, 2, !dbg !12801
  br i1 %268, label %317, label %261, !dbg !12802, !llvm.loop !12803

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12805
  %271 = and i32 %270, 33554432, !dbg !12805
  %272 = icmp eq i32 %271, 0, !dbg !12805
  br i1 %272, label %316, label %273, !dbg !12807

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #28, !dbg !12808
  %275 = sub i32 %274, %231, !dbg !12811
  %276 = icmp ugt i32 %275, 2, !dbg !12812
  br i1 %276, label %317, label %269, !dbg !12813, !llvm.loop !12814

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12816
  br i1 %278, label %317, label %279, !dbg !12819

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %280, metadata !12523, metadata !DIExpression()), !dbg !12532
  %281 = and i32 %280, 4194304, !dbg !12822
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12824
  %283 = load i32, i32* %282, align 4, !dbg !12824
  %284 = icmp eq i32 %281, %283, !dbg !12825
  br i1 %284, label %285, label %317, !dbg !12826

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12827
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12828
  %288 = load i32, i32* %287, align 4, !dbg !12828
  %289 = icmp eq i32 %286, %288, !dbg !12829
  br i1 %289, label %290, label %317, !dbg !12830

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12831
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12832
  %293 = load i32, i32* %292, align 4, !dbg !12832
  %294 = shl i32 %293, 6, !dbg !12833
  %295 = icmp eq i32 %291, %294, !dbg !12834
  br i1 %295, label %296, label %317, !dbg !12835

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12836
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12837
  %299 = load i32, i32* %298, align 4, !dbg !12837
  %300 = shl i32 %299, 15, !dbg !12838
  %301 = add i32 %300, -65536, !dbg !12838
  %302 = and i32 %301, -65536, !dbg !12838
  %303 = icmp eq i32 %297, %302, !dbg !12839
  br i1 %303, label %304, label %317, !dbg !12840

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12841
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12842
  %307 = load i32, i32* %306, align 4, !dbg !12842
  %308 = shl i32 %307, 24, !dbg !12843
  %309 = icmp eq i32 %305, %308, !dbg !12844
  br i1 %309, label %310, label %317, !dbg !12845

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !12846
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12847
  %313 = load i32, i32* %312, align 4, !dbg !12847
  %314 = shl i32 %313, 28, !dbg !12848
  %315 = icmp eq i32 %311, %314, !dbg !12849
  br i1 %315, label %316, label %317, !dbg !12850

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !12851

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12532
  ret i32 %318, !dbg !12852
}

; Function Attrs: optsize
declare !dbg !12853 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12855 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12868, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata i32 %1, metadata !12869, metadata !DIExpression()), !dbg !12871
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12872
  br i1 %3, label %115, label %4, !dbg !12874

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12875
  %6 = and i32 %5, 7, !dbg !12875
  %7 = icmp ult i32 %6, %1, !dbg !12877
  br i1 %7, label %8, label %13, !dbg !12878

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12879
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12879
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12881
  %11 = and i32 %10, 7, !dbg !12881
  %12 = icmp eq i32 %11, %1, !dbg !12883
  br i1 %12, label %13, label %115, !dbg !12884

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12885
  %15 = load i32, i32* %14, align 4, !dbg !12885
  %16 = and i32 %15, 2, !dbg !12887
  %17 = icmp eq i32 %16, 0, !dbg !12888
  br i1 %17, label %39, label %18, !dbg !12889

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12890
  %20 = icmp eq i32 %19, 0, !dbg !12893
  br i1 %20, label %25, label %21, !dbg !12894

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12895
  %23 = or i32 %22, 7168, !dbg !12895
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12895
  %24 = load i32, i32* %14, align 4, !dbg !12897
  br label %25, !dbg !12899

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12897
  %27 = and i32 %26, 8, !dbg !12900
  %28 = icmp eq i32 %27, 0, !dbg !12901
  br i1 %28, label %32, label %29, !dbg !12902

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12903
  %31 = or i32 %30, 57344, !dbg !12903
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12903
  br label %32, !dbg !12905

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12906
  %34 = and i32 %33, -241, !dbg !12906
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12906
  %36 = load i32, i32* %35, align 4, !dbg !12906
  %37 = or i32 %34, %36, !dbg !12906
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12906
  %38 = load i32, i32* %14, align 4, !dbg !12907
  br label %39, !dbg !12909

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12907
  %41 = and i32 %40, 1, !dbg !12910
  %42 = icmp eq i32 %41, 0, !dbg !12911
  br i1 %42, label %73, label %43, !dbg !12912

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12913
  %45 = load i32, i32* %44, align 4, !dbg !12913
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12916

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12917
  %48 = and i32 %47, 131072, !dbg !12920
  %49 = icmp eq i32 %48, 0, !dbg !12920
  br i1 %49, label %115, label %58, !dbg !12921

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12922
  %52 = and i32 %51, 33554432, !dbg !12926
  %53 = icmp eq i32 %52, 0, !dbg !12926
  br i1 %53, label %115, label %58, !dbg !12927

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12928
  %56 = and i32 %55, 2, !dbg !12931
  %57 = icmp eq i32 %56, 0, !dbg !12931
  br i1 %57, label %115, label %58, !dbg !12932

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12933
  %60 = and i32 %59, -4, !dbg !12933
  %61 = or i32 %60, %45, !dbg !12933
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12933
  %62 = tail call i32 @HAL_GetTick() #28, !dbg !12934
  call void @llvm.dbg.value(metadata i32 %62, metadata !12870, metadata !DIExpression()), !dbg !12871
  br label %63, !dbg !12935

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12936
  %65 = and i32 %64, 12, !dbg !12936
  %66 = load i32, i32* %44, align 4, !dbg !12937
  %67 = shl i32 %66, 2, !dbg !12938
  %68 = icmp eq i32 %65, %67, !dbg !12939
  br i1 %68, label %73, label %69, !dbg !12935

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #28, !dbg !12940
  %71 = sub i32 %70, %62, !dbg !12943
  %72 = icmp ugt i32 %71, 5000, !dbg !12944
  br i1 %72, label %115, label %63, !dbg !12945, !llvm.loop !12946

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12948
  %75 = and i32 %74, 7, !dbg !12948
  %76 = icmp ugt i32 %75, %1, !dbg !12950
  br i1 %76, label %77, label %82, !dbg !12951

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12952
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12952
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12954
  %80 = and i32 %79, 7, !dbg !12954
  %81 = icmp eq i32 %80, %1, !dbg !12956
  br i1 %81, label %82, label %115, !dbg !12957

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12958
  %84 = and i32 %83, 4, !dbg !12960
  %85 = icmp eq i32 %84, 0, !dbg !12961
  br i1 %85, label %93, label %86, !dbg !12962

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12963
  %88 = and i32 %87, -7169, !dbg !12963
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12963
  %90 = load i32, i32* %89, align 4, !dbg !12963
  %91 = or i32 %88, %90, !dbg !12963
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12963
  %92 = load i32, i32* %14, align 4, !dbg !12965
  br label %93, !dbg !12967

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12965
  %95 = and i32 %94, 8, !dbg !12968
  %96 = icmp eq i32 %95, 0, !dbg !12969
  br i1 %96, label %104, label %97, !dbg !12970

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12971
  %99 = and i32 %98, -57345, !dbg !12971
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12971
  %101 = load i32, i32* %100, align 4, !dbg !12971
  %102 = shl i32 %101, 3, !dbg !12971
  %103 = or i32 %102, %99, !dbg !12971
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12971
  br label %104, !dbg !12973

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !12974
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12975
  %107 = lshr i32 %106, 4, !dbg !12976
  %108 = and i32 %107, 15, !dbg !12976
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12977
  %110 = load i8, i8* %109, align 1, !dbg !12977
  %111 = zext i8 %110 to i32, !dbg !12977
  %112 = lshr i32 %105, %111, !dbg !12978
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12979
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12980
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #28, !dbg !12981
  br label %115, !dbg !12982

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12871
  ret i32 %116, !dbg !12983
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12984 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12986, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 0, metadata !12987, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 0, metadata !12988, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 0, metadata !12989, metadata !DIExpression()), !dbg !12990
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12991
  %2 = and i32 %1, 12, !dbg !12992
  %3 = icmp eq i32 %2, 8, !dbg !12993
  br i1 %3, label %4, label %21, !dbg !12993

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12994
  %6 = and i32 %5, 63, !dbg !12997
  call void @llvm.dbg.value(metadata i32 %6, metadata !12986, metadata !DIExpression()), !dbg !12990
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12998
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13000
  %9 = lshr i32 %8, 6, !dbg !13000
  %10 = and i32 %9, 511, !dbg !13000
  %11 = zext i32 %10 to i64, !dbg !13000
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !13000
  %13 = zext i32 %6 to i64, !dbg !13000
  %14 = udiv i64 %12, %13, !dbg !13000
  %15 = trunc i64 %14 to i32, !dbg !13000
  call void @llvm.dbg.value(metadata i32 %15, metadata !12987, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 %15, metadata !12987, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 %15, metadata !12987, metadata !DIExpression()), !dbg !12990
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13001
  %17 = lshr i32 %16, 15, !dbg !13002
  %18 = and i32 %17, 6, !dbg !13002
  %19 = add nuw nsw i32 %18, 2, !dbg !13002
  call void @llvm.dbg.value(metadata i32 %19, metadata !12988, metadata !DIExpression()), !dbg !12990
  %20 = udiv i32 %15, %19, !dbg !13003
  call void @llvm.dbg.value(metadata i32 %20, metadata !12989, metadata !DIExpression()), !dbg !12990
  br label %21, !dbg !13004

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !13005
  call void @llvm.dbg.value(metadata i32 %22, metadata !12989, metadata !DIExpression()), !dbg !12990
  ret i32 %22, !dbg !13006
}

; Function Attrs: optsize
declare !dbg !13007 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13010 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13014, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 %1, metadata !13015, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 %2, metadata !13016, metadata !DIExpression()), !dbg !13031
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13032
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #26, !dbg !13032
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13017, metadata !DIExpression()), !dbg !13033
  %7 = icmp eq i32 %0, 0, !dbg !13034
  br i1 %7, label %8, label %24, !dbg !13035

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !13036
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !13036
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13027, metadata !DIExpression()), !dbg !13036
  store volatile i32 0, i32* %5, align 4, !dbg !13036
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13036
  %11 = or i32 %10, 1, !dbg !13036
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13036
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13036
  %13 = and i32 %12, 1, !dbg !13036
  store volatile i32 %13, i32* %5, align 4, !dbg !13036
  %14 = load volatile i32, i32* %5, align 4, !dbg !13036
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !13037
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13038
  store i32 256, i32* %15, align 4, !dbg !13039
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13040
  store i32 2, i32* %16, align 4, !dbg !13041
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13042
  store i32 3, i32* %17, align 4, !dbg !13043
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13044
  store i32 0, i32* %18, align 4, !dbg !13045
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13046
  store i32 0, i32* %19, align 4, !dbg !13047
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #28, !dbg !13048
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13049
  %21 = and i32 %20, -123731969, !dbg !13049
  %22 = or i32 %2, %1, !dbg !13049
  %23 = or i32 %22, %21, !dbg !13049
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13049
  br label %24, !dbg !13050

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #26, !dbg !13051
  ret void, !dbg !13051
}

; Function Attrs: optsize
declare !dbg !13052 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #17 !dbg !13056 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13057
  ret void, !dbg !13058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #17 !dbg !13059 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13060
  ret void, !dbg !13061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #3 !dbg !13062 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13063
  ret i32 %1, !dbg !13064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #18 !dbg !13065 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !13066
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13067
  %3 = lshr i32 %2, 10, !dbg !13068
  %4 = and i32 %3, 7, !dbg !13068
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13069
  %6 = load i8, i8* %5, align 1, !dbg !13069
  %7 = zext i8 %6 to i32, !dbg !13069
  %8 = lshr i32 %1, %7, !dbg !13070
  ret i32 %8, !dbg !13071
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #18 !dbg !13072 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !13073
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13074
  %3 = lshr i32 %2, 13, !dbg !13075
  %4 = and i32 %3, 7, !dbg !13075
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13076
  %6 = load i8, i8* %5, align 1, !dbg !13076
  %7 = zext i8 %6 to i32, !dbg !13076
  %8 = lshr i32 %1, %7, !dbg !13077
  ret i32 %8, !dbg !13078
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13079 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13083, metadata !DIExpression()), !dbg !13084
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13085
  store i32 15, i32* %2, align 4, !dbg !13086
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13087
  %4 = and i32 %3, 262144, !dbg !13089
  %5 = icmp eq i32 %4, 0, !dbg !13090
  br i1 %5, label %8, label %6, !dbg !13091

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13092
  store i32 327680, i32* %7, align 4, !dbg !13094
  br label %15, !dbg !13095

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13096
  %10 = and i32 %9, 65536, !dbg !13098
  %11 = icmp eq i32 %10, 0, !dbg !13099
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13100
  br i1 %11, label %14, label %13, !dbg !13101

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13102
  br label %15, !dbg !13104

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13105
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13107
  %17 = and i32 %16, 1, !dbg !13109
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13110
  store i32 %17, i32* %18, align 4, !dbg !13112
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13113
  %20 = lshr i32 %19, 3, !dbg !13114
  %21 = and i32 %20, 31, !dbg !13114
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13115
  store i32 %21, i32* %22, align 4, !dbg !13116
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13117
  %24 = and i32 %23, 4, !dbg !13119
  %25 = icmp eq i32 %24, 0, !dbg !13120
  br i1 %25, label %28, label %26, !dbg !13121

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13122
  store i32 5, i32* %27, align 4, !dbg !13124
  br label %35, !dbg !13125

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13126
  %30 = and i32 %29, 1, !dbg !13128
  %31 = icmp eq i32 %30, 0, !dbg !13129
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13130
  br i1 %31, label %34, label %33, !dbg !13131

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13132
  br label %35, !dbg !13134

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13135
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13137
  %37 = and i32 %36, 1, !dbg !13139
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13140
  store i32 %37, i32* %38, align 4, !dbg !13142
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13143
  %40 = and i32 %39, 16777216, !dbg !13145
  %41 = icmp eq i32 %40, 0, !dbg !13146
  %42 = select i1 %41, i32 1, i32 2, !dbg !13147
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13148
  store i32 %42, i32* %43, align 4, !dbg !13150
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13151
  %45 = and i32 %44, 4194304, !dbg !13152
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13153
  store i32 %45, i32* %46, align 4, !dbg !13154
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13155
  %48 = and i32 %47, 63, !dbg !13156
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13157
  store i32 %48, i32* %49, align 4, !dbg !13158
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13159
  %51 = lshr i32 %50, 6, !dbg !13160
  %52 = and i32 %51, 511, !dbg !13160
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13161
  store i32 %52, i32* %53, align 4, !dbg !13162
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13163
  %55 = shl i32 %54, 1, !dbg !13164
  %56 = and i32 %55, 393216, !dbg !13164
  %57 = add nuw nsw i32 %56, 131072, !dbg !13164
  %58 = lshr exact i32 %57, 16, !dbg !13165
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13166
  store i32 %58, i32* %59, align 4, !dbg !13167
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13168
  %61 = lshr i32 %60, 24, !dbg !13169
  %62 = and i32 %61, 15, !dbg !13169
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13170
  store i32 %62, i32* %63, align 4, !dbg !13171
  ret void, !dbg !13172
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #18 !dbg !13173 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13177, metadata !DIExpression()), !dbg !13179
  call void @llvm.dbg.value(metadata i32* %1, metadata !13178, metadata !DIExpression()), !dbg !13179
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13180
  store i32 15, i32* %3, align 4, !dbg !13181
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13182
  %5 = and i32 %4, 3, !dbg !13183
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13184
  store i32 %5, i32* %6, align 4, !dbg !13185
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13186
  %8 = and i32 %7, 240, !dbg !13187
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13188
  store i32 %8, i32* %9, align 4, !dbg !13189
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13190
  %11 = and i32 %10, 7168, !dbg !13191
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13192
  store i32 %11, i32* %12, align 4, !dbg !13193
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13194
  %14 = lshr i32 %13, 3, !dbg !13195
  %15 = and i32 %14, 7168, !dbg !13195
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13196
  store i32 %15, i32* %16, align 4, !dbg !13197
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13198
  %18 = and i32 %17, 7, !dbg !13199
  store i32 %18, i32* %1, align 4, !dbg !13200
  ret void, !dbg !13201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13202 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13203
  %2 = and i32 %1, 128, !dbg !13203
  %3 = icmp eq i32 %2, 0, !dbg !13203
  br i1 %3, label %5, label %4, !dbg !13205

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !13206
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13208
  br label %5, !dbg !13209

5:                                                ; preds = %4, %0
  ret void, !dbg !13210
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13211 {
  ret void, !dbg !13212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #17 !dbg !13213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13216, metadata !DIExpression()), !dbg !13217
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !13218
  ret void, !dbg !13219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #17 !dbg !13220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13223, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i32 1000, metadata !13224, metadata !DIExpression()), !dbg !13225
  %2 = udiv i32 %0, 1000, !dbg !13226
  %3 = add nsw i32 %2, -1, !dbg !13227
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13228
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13229
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13230
  ret void, !dbg !13231
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !13232 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13234, metadata !DIExpression()), !dbg !13236
  %3 = bitcast i32* %2 to i8*, !dbg !13237
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13237
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13235, metadata !DIExpression()), !dbg !13238
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13239
  store volatile i32 %4, i32* %2, align 4, !dbg !13238
  %5 = load volatile i32, i32* %2, align 4, !dbg !13240
  %6 = icmp eq i32 %0, -1, !dbg !13241
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13234, metadata !DIExpression()), !dbg !13236
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %8, metadata !13234, metadata !DIExpression()), !dbg !13236
  br label %9, !dbg !13243

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13234, metadata !DIExpression()), !dbg !13236
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13244
  call void @llvm.dbg.value(metadata i32 undef, metadata !13234, metadata !DIExpression()), !dbg !13236
  %12 = shl i32 %11, 15, !dbg !13236
  %13 = ashr i32 %12, 31, !dbg !13236
  %14 = add i32 %13, %10, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %14, metadata !13234, metadata !DIExpression()), !dbg !13236
  %15 = icmp eq i32 %14, 0, !dbg !13243
  br i1 %15, label %16, label %9, !dbg !13243

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13247
  ret void, !dbg !13247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !13248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13250, metadata !DIExpression()), !dbg !13251
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13252
  ret void, !dbg !13253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #17 !dbg !13254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13259, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.value(metadata i32 0, metadata !13262, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.value(metadata i32 0, metadata !13263, metadata !DIExpression()), !dbg !13264
  %2 = icmp eq i32 %0, 0, !dbg !13265
  br i1 %2, label %50, label %3, !dbg !13267

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13268
  %5 = icmp eq i32 %4, 49152, !dbg !13271
  br i1 %5, label %6, label %15, !dbg !13272

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13262, metadata !DIExpression()), !dbg !13264
  %7 = add i32 %0, -64000001, !dbg !13273
  %8 = icmp ult i32 %7, 26000000, !dbg !13273
  br i1 %8, label %15, label %9, !dbg !13273

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !13276
  %11 = select i1 %10, i32 0, i32 3, !dbg !13278
  call void @llvm.dbg.value(metadata i32 %11, metadata !13262, metadata !DIExpression()), !dbg !13264
  %12 = add i32 %0, -30000001, !dbg !13279
  %13 = icmp ult i32 %12, 60000000, !dbg !13279
  %14 = select i1 %13, i32 1, i32 %11, !dbg !13279
  call void @llvm.dbg.value(metadata i32 %14, metadata !13262, metadata !DIExpression()), !dbg !13264
  br label %15, !dbg !13279

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !13264
  call void @llvm.dbg.value(metadata i32 %16, metadata !13262, metadata !DIExpression()), !dbg !13264
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13282
  %18 = icmp eq i32 %17, 32768, !dbg !13284
  br i1 %18, label %19, label %27, !dbg !13285

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !13286
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !13289
  br i1 %22, label %27, label %23, !dbg !13289

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !13290
  %25 = and i1 %24, %21, !dbg !13293
  %26 = select i1 %25, i32 1, i32 %16, !dbg !13293
  call void @llvm.dbg.value(metadata i32 %26, metadata !13262, metadata !DIExpression()), !dbg !13264
  br label %27, !dbg !13293

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !13294
  call void @llvm.dbg.value(metadata i32 %28, metadata !13262, metadata !DIExpression()), !dbg !13264
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13295
  %30 = icmp eq i32 %29, 16384, !dbg !13297
  br i1 %30, label %31, label %39, !dbg !13298

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !13299
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !13302
  br i1 %34, label %39, label %35, !dbg !13302

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !13303
  %37 = select i1 %36, i1 %33, i1 false, !dbg !13306
  %38 = select i1 %37, i32 1, i32 %28, !dbg !13306
  call void @llvm.dbg.value(metadata i32 %38, metadata !13262, metadata !DIExpression()), !dbg !13264
  br label %39, !dbg !13306

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !13294
  call void @llvm.dbg.value(metadata i32 %40, metadata !13262, metadata !DIExpression()), !dbg !13264
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #27, !dbg !13307
  call void @llvm.dbg.value(metadata i32 2, metadata !13260, metadata !DIExpression()), !dbg !13264
  br label %41, !dbg !13308

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !13294
  call void @llvm.dbg.value(metadata i32 %42, metadata !13260, metadata !DIExpression()), !dbg !13264
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !13309
  call void @llvm.dbg.value(metadata i32 %43, metadata !13261, metadata !DIExpression()), !dbg !13264
  %44 = add nsw i32 %42, -1, !dbg !13311
  call void @llvm.dbg.value(metadata i32 %44, metadata !13260, metadata !DIExpression()), !dbg !13264
  %45 = icmp ne i32 %43, %40, !dbg !13312
  %46 = icmp ne i32 %44, 0, !dbg !13313
  %47 = select i1 %45, i1 %46, i1 false, !dbg !13313
  br i1 %47, label %41, label %48, !dbg !13314, !llvm.loop !13315

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !13317
  call void @llvm.dbg.value(metadata i32 %51, metadata !13263, metadata !DIExpression()), !dbg !13264
  ret i32 %51, !dbg !13318
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #18 !dbg !13319 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13321
  %2 = and i32 %1, 49152, !dbg !13321
  ret i32 %2, !dbg !13322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #17 !dbg !13323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13325, metadata !DIExpression()), !dbg !13326
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13327
  %3 = and i32 %2, -8, !dbg !13327
  %4 = or i32 %3, %0, !dbg !13327
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13327
  ret void, !dbg !13328
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #18 !dbg !13329 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13330
  %2 = and i32 %1, 7, !dbg !13330
  ret i32 %2, !dbg !13331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !13332 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13350, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13351, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata i32 0, metadata !13352, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata i32 0, metadata !13353, metadata !DIExpression()), !dbg !13354
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !13355
  %4 = icmp eq i32 %3, 0, !dbg !13357
  br i1 %4, label %5, label %21, !dbg !13358

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !13359
  call void @llvm.dbg.value(metadata i32 %6, metadata !13353, metadata !DIExpression()), !dbg !13354
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.154() #27, !dbg !13361
  %8 = icmp eq i32 %7, 1, !dbg !13363
  br i1 %8, label %13, label %9, !dbg !13364

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.155() #27, !dbg !13365
  br label %10, !dbg !13367

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.154() #27, !dbg !13368
  %12 = icmp eq i32 %11, 1, !dbg !13369
  br i1 %12, label %13, label %10, !dbg !13367, !llvm.loop !13370

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13372
  %15 = load i32, i32* %14, align 4, !dbg !13372
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13373
  %17 = load i32, i32* %16, align 4, !dbg !13373
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13374
  %19 = load i32, i32* %18, align 4, !dbg !13374
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.156(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !13375
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !13376
  call void @llvm.dbg.value(metadata i32 %20, metadata !13352, metadata !DIExpression()), !dbg !13354
  br label %21, !dbg !13377

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13378
  call void @llvm.dbg.value(metadata i32 %22, metadata !13352, metadata !DIExpression()), !dbg !13354
  ret i32 %22, !dbg !13379
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #18 !dbg !13380 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13384, metadata !DIExpression()), !dbg !13385
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.158() #27, !dbg !13386
  %2 = icmp ne i32 %1, 0, !dbg !13388
  call void @llvm.dbg.value(metadata i1 %2, metadata !13384, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13385
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !13389
  %4 = icmp ne i32 %3, 0, !dbg !13391
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13392
  %6 = zext i1 %5 to i32, !dbg !13392
  call void @llvm.dbg.value(metadata i32 %6, metadata !13384, metadata !DIExpression()), !dbg !13385
  ret i32 %6, !dbg !13393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #3 !dbg !13394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13398, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13399, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13400, metadata !DIExpression()), !dbg !13401
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13402
  %4 = load i32, i32* %3, align 4, !dbg !13402
  %5 = and i32 %4, 63, !dbg !13403
  %6 = udiv i32 %0, %5, !dbg !13404
  call void @llvm.dbg.value(metadata i32 %6, metadata !13400, metadata !DIExpression()), !dbg !13401
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13405
  %8 = load i32, i32* %7, align 4, !dbg !13405
  %9 = and i32 %8, 511, !dbg !13406
  %10 = mul i32 %9, %6, !dbg !13407
  call void @llvm.dbg.value(metadata i32 %10, metadata !13400, metadata !DIExpression()), !dbg !13401
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13408
  %12 = load i32, i32* %11, align 4, !dbg !13408
  %13 = lshr i32 %12, 15, !dbg !13409
  %14 = and i32 %13, 131070, !dbg !13409
  %15 = add nuw nsw i32 %14, 2, !dbg !13409
  %16 = udiv i32 %10, %15, !dbg !13410
  call void @llvm.dbg.value(metadata i32 %16, metadata !13400, metadata !DIExpression()), !dbg !13401
  ret i32 %16, !dbg !13411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.154() unnamed_addr #18 !dbg !13412 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13413
  %2 = lshr i32 %1, 1, !dbg !13414
  %3 = and i32 %2, 1, !dbg !13414
  ret i32 %3, !dbg !13415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.155() unnamed_addr #17 !dbg !13416 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13417
  %2 = or i32 %1, 1, !dbg !13417
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13417
  ret void, !dbg !13418
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.156(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #17 !dbg !13419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13421, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 %1, metadata !13422, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 %2, metadata !13423, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 %3, metadata !13424, metadata !DIExpression()), !dbg !13425
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13426
  %6 = and i32 %5, -4227072, !dbg !13426
  %7 = or i32 %1, %0, !dbg !13426
  %8 = shl i32 %2, 6, !dbg !13426
  %9 = or i32 %7, %8, !dbg !13426
  %10 = or i32 %9, %6, !dbg !13426
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13426
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13427
  %12 = and i32 %11, -196609, !dbg !13427
  %13 = or i32 %12, %3, !dbg !13427
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13427
  ret void, !dbg !13428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #17 !dbg !13429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13433, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13434, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata i32 0, metadata !13435, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata i32 0, metadata !13436, metadata !DIExpression()), !dbg !13437
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13438
  %4 = load i32, i32* %3, align 4, !dbg !13438
  %5 = lshr i32 %4, 4, !dbg !13438
  %6 = and i32 %5, 15, !dbg !13438
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13438
  %8 = load i8, i8* %7, align 1, !dbg !13438
  %9 = zext i8 %8 to i32, !dbg !13438
  %10 = lshr i32 %0, %9, !dbg !13438
  call void @llvm.dbg.value(metadata i32 %10, metadata !13436, metadata !DIExpression()), !dbg !13437
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13439
  %12 = icmp ult i32 %11, %10, !dbg !13441
  br i1 %12, label %13, label %16, !dbg !13442

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !13443
  call void @llvm.dbg.value(metadata i32 %14, metadata !13435, metadata !DIExpression()), !dbg !13437
  %15 = icmp eq i32 %14, 0, !dbg !13445
  br i1 %15, label %16, label %30, !dbg !13447

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.157() #27, !dbg !13448
  br label %17, !dbg !13450

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.158() #27, !dbg !13451
  %19 = icmp eq i32 %18, 1, !dbg !13452
  br i1 %19, label %20, label %17, !dbg !13450, !llvm.loop !13453

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13455
  tail call fastcc void @LL_RCC_SetAHBPrescaler.159(i32 noundef %21) #27, !dbg !13456
  tail call fastcc void @LL_RCC_SetSysClkSource.160() #27, !dbg !13457
  br label %22, !dbg !13458

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.161() #27, !dbg !13459
  %24 = icmp eq i32 %23, 8, !dbg !13460
  br i1 %24, label %25, label %22, !dbg !13458, !llvm.loop !13461

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13463
  %27 = load i32, i32* %26, align 4, !dbg !13463
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.162(i32 noundef %27) #27, !dbg !13464
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13465
  %29 = load i32, i32* %28, align 4, !dbg !13465
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.163(i32 noundef %29) #27, !dbg !13466
  br label %30, !dbg !13467

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13468
  %33 = icmp ugt i32 %32, %10, !dbg !13470
  br i1 %33, label %34, label %36, !dbg !13471

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !13472
  call void @llvm.dbg.value(metadata i32 %35, metadata !13435, metadata !DIExpression()), !dbg !13437
  br label %36, !dbg !13474

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13437
  call void @llvm.dbg.value(metadata i32 %37, metadata !13435, metadata !DIExpression()), !dbg !13437
  %38 = icmp eq i32 %37, 0, !dbg !13475
  br i1 %38, label %39, label %40, !dbg !13477

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !13478
  br label %40, !dbg !13480

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.157() unnamed_addr #17 !dbg !13482 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13483
  %2 = or i32 %1, 16777216, !dbg !13483
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13483
  ret void, !dbg !13484
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.158() unnamed_addr #18 !dbg !13485 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13486
  %2 = lshr i32 %1, 25, !dbg !13487
  %3 = and i32 %2, 1, !dbg !13487
  ret i32 %3, !dbg !13488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.159(i32 noundef %0) unnamed_addr #17 !dbg !13489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13491, metadata !DIExpression()), !dbg !13492
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13493
  %3 = and i32 %2, -241, !dbg !13493
  %4 = or i32 %3, %0, !dbg !13493
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13493
  ret void, !dbg !13494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.160() unnamed_addr #17 !dbg !13495 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13497, metadata !DIExpression()), !dbg !13498
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13499
  %2 = and i32 %1, -4, !dbg !13499
  %3 = or i32 %2, 2, !dbg !13499
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13499
  ret void, !dbg !13500
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.161() unnamed_addr #18 !dbg !13501 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13502
  %2 = and i32 %1, 12, !dbg !13502
  ret i32 %2, !dbg !13503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.162(i32 noundef %0) unnamed_addr #17 !dbg !13504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13506, metadata !DIExpression()), !dbg !13507
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13508
  %3 = and i32 %2, -7169, !dbg !13508
  %4 = or i32 %3, %0, !dbg !13508
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13508
  ret void, !dbg !13509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.163(i32 noundef %0) unnamed_addr #17 !dbg !13510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13512, metadata !DIExpression()), !dbg !13513
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13514
  %3 = and i32 %2, -57345, !dbg !13514
  %4 = or i32 %3, %0, !dbg !13514
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13514
  ret void, !dbg !13515
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #18 !dbg !13516 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13517
  %2 = lshr i32 %1, 27, !dbg !13518
  %3 = and i32 %2, 1, !dbg !13518
  ret i32 %3, !dbg !13519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #17 !dbg !13520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13524, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata i32 %1, metadata !13525, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13526, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13527, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata i32 0, metadata !13528, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata i32 0, metadata !13529, metadata !DIExpression()), !dbg !13530
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !13531
  %6 = icmp eq i32 %5, 0, !dbg !13533
  br i1 %6, label %7, label %27, !dbg !13534

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !13535
  call void @llvm.dbg.value(metadata i32 %8, metadata !13529, metadata !DIExpression()), !dbg !13530
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.164() #27, !dbg !13537
  %10 = icmp eq i32 %9, 1, !dbg !13539
  br i1 %10, label %19, label %11, !dbg !13540

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13541
  br i1 %12, label %13, label %14, !dbg !13544

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !13545
  br label %15, !dbg !13547

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.165() #27, !dbg !13548
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.166() #27, !dbg !13550
  br label %16, !dbg !13551

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.164() #27, !dbg !13552
  %18 = icmp eq i32 %17, 1, !dbg !13553
  br i1 %18, label %19, label %16, !dbg !13551, !llvm.loop !13554

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13556
  %21 = load i32, i32* %20, align 4, !dbg !13556
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13557
  %23 = load i32, i32* %22, align 4, !dbg !13557
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13558
  %25 = load i32, i32* %24, align 4, !dbg !13558
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.156(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !13559
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !13560
  call void @llvm.dbg.value(metadata i32 %26, metadata !13528, metadata !DIExpression()), !dbg !13530
  br label %27, !dbg !13561

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13562
  call void @llvm.dbg.value(metadata i32 %28, metadata !13528, metadata !DIExpression()), !dbg !13530
  ret i32 %28, !dbg !13563
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.164() unnamed_addr #18 !dbg !13564 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13565
  %2 = lshr i32 %1, 17, !dbg !13566
  %3 = and i32 %2, 1, !dbg !13566
  ret i32 %3, !dbg !13567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #17 !dbg !13568 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13569
  %2 = or i32 %1, 262144, !dbg !13569
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13569
  ret void, !dbg !13570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.165() unnamed_addr #17 !dbg !13571 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13572
  %2 = and i32 %1, -262145, !dbg !13572
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13572
  ret void, !dbg !13573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.166() unnamed_addr #17 !dbg !13574 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13575
  %2 = or i32 %1, 65536, !dbg !13575
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13575
  ret void, !dbg !13576
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !13577 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13580, metadata !DIExpression()), !dbg !13596
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()), !dbg !13596
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13596
  ret void, !dbg !13597
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13598 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13602, metadata !DIExpression()), !dbg !13604
  %2 = icmp eq i8* %0, null, !dbg !13605
  br i1 %2, label %29, label %3, !dbg !13607

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13608
  %5 = icmp eq i8 %4, 0, !dbg !13609
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13610
  br i1 %6, label %29, label %8, !dbg !13610

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13603, metadata !DIExpression()), !dbg !13604
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13611

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13603, metadata !DIExpression()), !dbg !13604
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !13613
  br i1 %10, label %11, label %15, !dbg !13618

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13619
  %13 = load i8*, i8** %12, align 4, !dbg !13619
  %14 = icmp eq i8* %13, %0, !dbg !13620
  br i1 %14, label %29, label %15, !dbg !13621

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13622
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13603, metadata !DIExpression()), !dbg !13604
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13623
  br i1 %17, label %7, label %8, !dbg !13624, !llvm.loop !13625

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13603, metadata !DIExpression()), !dbg !13604
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !13627
  br i1 %20, label %21, label %26, !dbg !13631

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13632
  %23 = load i8*, i8** %22, align 4, !dbg !13632
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #28, !dbg !13633
  %25 = icmp eq i32 %24, 0, !dbg !13634
  br i1 %25, label %29, label %26, !dbg !13635

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13636
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13603, metadata !DIExpression()), !dbg !13604
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13637
  br i1 %28, label %29, label %18, !dbg !13611, !llvm.loop !13638

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13604
  ret %struct.device* %30, !dbg !13640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #3 !dbg !13641 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13645, metadata !DIExpression()), !dbg !13646
  %2 = icmp eq %struct.device* %0, null, !dbg !13647
  br i1 %2, label %14, label %3, !dbg !13649

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13650
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13650
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13651
  %7 = load i8, i8* %6, align 1, !dbg !13651
  %8 = and i8 %7, 1, !dbg !13651
  %9 = icmp eq i8 %8, 0, !dbg !13651
  br i1 %9, label %14, label %10, !dbg !13652

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13653
  %12 = load i8, i8* %11, align 1, !dbg !13653
  %13 = icmp eq i8 %12, 0, !dbg !13654
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13646
  ret i1 %15, !dbg !13655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13656 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13661, metadata !DIExpression()), !dbg !13662
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13663
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13665 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13673, metadata !DIExpression()), !dbg !13678
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13674, metadata !DIExpression()), !dbg !13678
  call void @llvm.dbg.value(metadata i8* %2, metadata !13675, metadata !DIExpression()), !dbg !13678
  %5 = bitcast i32* %4 to i8*, !dbg !13679
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13679
  call void @llvm.dbg.value(metadata i32 0, metadata !13676, metadata !DIExpression()), !dbg !13678
  store i32 0, i32* %4, align 4, !dbg !13680
  call void @llvm.dbg.value(metadata i32* %4, metadata !13676, metadata !DIExpression(DW_OP_deref)), !dbg !13678
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !13681
  call void @llvm.dbg.value(metadata i16* %6, metadata !13677, metadata !DIExpression()), !dbg !13678
  %7 = load i32, i32* %4, align 4, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %7, metadata !13676, metadata !DIExpression()), !dbg !13678
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !13683
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13684
  ret i32 %8, !dbg !13685
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !13686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13690, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32* %1, metadata !13691, metadata !DIExpression()), !dbg !13696
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13697
  %4 = load i16*, i16** %3, align 4, !dbg !13697
  call void @llvm.dbg.value(metadata i16* %4, metadata !13692, metadata !DIExpression()), !dbg !13696
  %5 = icmp eq i16* %4, null, !dbg !13698
  br i1 %5, label %14, label %6, !dbg !13699

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13700
  call void @llvm.dbg.value(metadata i32 %7, metadata !13693, metadata !DIExpression()), !dbg !13700
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13701
  %9 = load i16, i16* %8, align 2, !dbg !13701
  %10 = add i16 %9, -32767, !dbg !13702
  %11 = icmp ult i16 %10, 2, !dbg !13702
  %12 = add i32 %7, 1, !dbg !13703
  call void @llvm.dbg.value(metadata i32 %12, metadata !13693, metadata !DIExpression()), !dbg !13700
  br i1 %11, label %13, label %6, !dbg !13702, !llvm.loop !13705

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13708
  br label %14, !dbg !13709

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13711 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13715, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i32 %1, metadata !13716, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13717, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i8* %3, metadata !13718, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i32 0, metadata !13719, metadata !DIExpression()), !dbg !13727
  %5 = icmp eq i32 %1, 0, !dbg !13728
  br i1 %5, label %16, label %8, !dbg !13729

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13719, metadata !DIExpression()), !dbg !13727
  %7 = icmp eq i32 %15, %1, !dbg !13728
  br i1 %7, label %16, label %8, !dbg !13729, !llvm.loop !13730

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13719, metadata !DIExpression()), !dbg !13727
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13732
  %11 = load i16, i16* %10, align 2, !dbg !13732
  call void @llvm.dbg.value(metadata i16 %11, metadata !13721, metadata !DIExpression()), !dbg !13733
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !13734
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13724, metadata !DIExpression()), !dbg !13733
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #28, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %13, metadata !13725, metadata !DIExpression()), !dbg !13733
  %14 = icmp slt i32 %13, 0, !dbg !13736
  %15 = add nuw i32 %9, 1, !dbg !13738
  call void @llvm.dbg.value(metadata i32 %15, metadata !13719, metadata !DIExpression()), !dbg !13727
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13740 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13744, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13745, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13746, metadata !DIExpression()), !dbg !13747
  %2 = sext i16 %0 to i32, !dbg !13748
  %3 = icmp slt i16 %0, 1, !dbg !13750
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13751
  %6 = add nsw i32 %2, -1, !dbg !13751
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13751
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13751
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13745, metadata !DIExpression()), !dbg !13747
  ret %struct.device* %8, !dbg !13752
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13753 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13755, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13756, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i8* %2, metadata !13757, metadata !DIExpression()), !dbg !13760
  %5 = bitcast i32* %4 to i8*, !dbg !13761
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13761
  call void @llvm.dbg.value(metadata i32 0, metadata !13758, metadata !DIExpression()), !dbg !13760
  store i32 0, i32* %4, align 4, !dbg !13762
  call void @llvm.dbg.value(metadata i32* %4, metadata !13758, metadata !DIExpression(DW_OP_deref)), !dbg !13760
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !13763
  call void @llvm.dbg.value(metadata i16* %6, metadata !13759, metadata !DIExpression()), !dbg !13760
  %7 = load i32, i32* %4, align 4, !dbg !13764
  call void @llvm.dbg.value(metadata i32 %7, metadata !13758, metadata !DIExpression()), !dbg !13760
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !13765
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13766
  ret i32 %8, !dbg !13767
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !13768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13770, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32* %1, metadata !13771, metadata !DIExpression()), !dbg !13775
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13776
  %4 = load i16*, i16** %3, align 4, !dbg !13776
  call void @llvm.dbg.value(metadata i16* %4, metadata !13772, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 0, metadata !13773, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 0, metadata !13774, metadata !DIExpression()), !dbg !13775
  %5 = icmp eq i16* %4, null, !dbg !13777
  br i1 %5, label %22, label %6, !dbg !13779

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13773, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i16* %8, metadata !13772, metadata !DIExpression()), !dbg !13775
  %9 = load i16, i16* %8, align 2, !dbg !13780
  %10 = icmp eq i16 %9, -32768, !dbg !13784
  call void @llvm.dbg.value(metadata i32 undef, metadata !13773, metadata !DIExpression()), !dbg !13775
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13785
  call void @llvm.dbg.value(metadata i16* %11, metadata !13772, metadata !DIExpression()), !dbg !13775
  %12 = zext i1 %10 to i32, !dbg !13786
  %13 = add i32 %7, %12, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %13, metadata !13773, metadata !DIExpression()), !dbg !13775
  %14 = icmp eq i32 %13, 2, !dbg !13787
  br i1 %14, label %15, label %6, !dbg !13788

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13775
  call void @llvm.dbg.value(metadata i32 %16, metadata !13774, metadata !DIExpression()), !dbg !13775
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13789
  %18 = load i16, i16* %17, align 2, !dbg !13789
  %19 = icmp eq i16 %18, 32767, !dbg !13790
  %20 = add i32 %16, 1, !dbg !13791
  call void @llvm.dbg.value(metadata i32 %20, metadata !13774, metadata !DIExpression()), !dbg !13775
  br i1 %19, label %21, label %15, !dbg !13793, !llvm.loop !13794

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13796
  br label %22, !dbg !13797

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13798
  call void @llvm.dbg.value(metadata i16* %23, metadata !13772, metadata !DIExpression()), !dbg !13775
  ret i16* %23, !dbg !13799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #3 !dbg !13800 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13803
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13804
  ret i32* %2, !dbg !13805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13806 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13954, metadata !DIExpression()), !dbg !13957
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13955, metadata !DIExpression()), !dbg !13957
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13956, metadata !DIExpression()), !dbg !13957
  ret void, !dbg !13958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13963, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i32 %1, metadata !13964, metadata !DIExpression()), !dbg !13965
  ret void, !dbg !13966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13967 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13971, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %1, metadata !13972, metadata !DIExpression()), !dbg !13973
  ret void, !dbg !13974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13979, metadata !DIExpression()), !dbg !13981
  call void @llvm.dbg.value(metadata i8* %1, metadata !13980, metadata !DIExpression()), !dbg !13981
  ret i32 -134, !dbg !13982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13987, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i8* %1, metadata !13988, metadata !DIExpression()), !dbg !13989
  ret i32 -134, !dbg !13990
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #11 !dbg !13991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13994, metadata !DIExpression()), !dbg !13995
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !13996, !srcloc !14002
  call void @llvm.dbg.value(metadata i32 undef, metadata !13999, metadata !DIExpression()) #26, !dbg !14003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14000, metadata !DIExpression()) #26, !dbg !14003
  br label %3, !dbg !14004

3:                                                ; preds = %3, %1
  br label %3, !dbg !14005, !llvm.loop !14008
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14016, metadata !DIExpression()), !dbg !14017
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.171, i32 0, i32 0), i32 noundef 69) #28, !dbg !14018
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14023
  unreachable, !dbg !14023
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #11 !dbg !14024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14026, metadata !DIExpression()), !dbg !14027
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14028
  unreachable, !dbg !14028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14031, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14032, metadata !DIExpression()), !dbg !14035
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14036, !srcloc !14002
  call void @llvm.dbg.value(metadata i32 undef, metadata !13999, metadata !DIExpression()) #26, !dbg !14038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14000, metadata !DIExpression()) #26, !dbg !14038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()), !dbg !14035
  %4 = tail call fastcc %struct.k_thread* @k_current_get.174() #29, !dbg !14039
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14034, metadata !DIExpression()), !dbg !14035
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #27, !dbg !14040
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.175, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #28, !dbg !14040
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14045
  br i1 %6, label %15, label %7, !dbg !14047

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14048, metadata !DIExpression()), !dbg !14053
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14055
  %9 = load i32, i32* %8, align 4, !dbg !14055
  %10 = and i32 %9, 511, !dbg !14056
  %11 = icmp eq i32 %10, 0, !dbg !14057
  br i1 %11, label %13, label %12, !dbg !14058

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 69) #28, !dbg !14059
  br label %13, !dbg !14065

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !14066
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.177, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #28, !dbg !14066
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !14071
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14048, metadata !DIExpression()), !dbg !14072
  br label %17, !dbg !14077

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !14066
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.177, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #28, !dbg !14066
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !14071
  br label %17, !dbg !14078

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14036
  call void @llvm.dbg.value(metadata i32 %18, metadata !13999, metadata !DIExpression()) #26, !dbg !14038
  call void @llvm.dbg.value(metadata i32 %18, metadata !14033, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #26, !dbg !14082
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14084, !srcloc !14085
  tail call fastcc void @k_thread_abort.178(%struct.k_thread* noundef %4) #27, !dbg !14086
  ret void, !dbg !14089
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.174() unnamed_addr #12 !dbg !14090 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.186() #29, !dbg !14094
  ret %struct.k_thread* %1, !dbg !14095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14100, metadata !DIExpression()), !dbg !14101
  %2 = icmp ult i32 %0, 5, !dbg !14102
  br i1 %2, label %3, label %6, !dbg !14102

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14102
  %5 = load i8*, i8** %4, align 4, !dbg !14102
  br label %6, !dbg !14102

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.180, i32 0, i32 0), %1 ], !dbg !14103
  ret i8* %7, !dbg !14105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14106 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14110, metadata !DIExpression()), !dbg !14112
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14113
  br i1 %2, label %9, label %3, !dbg !14114

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #28, !dbg !14115
  call void @llvm.dbg.value(metadata i8* %4, metadata !14111, metadata !DIExpression()), !dbg !14112
  %5 = icmp eq i8* %4, null, !dbg !14116
  br i1 %5, label %9, label %6, !dbg !14118

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14119
  %8 = icmp eq i8 %7, 0, !dbg !14120
  br i1 %8, label %9, label %10, !dbg !14121

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.179, i32 0, i32 0), metadata !14111, metadata !DIExpression()), !dbg !14112
  br label %10, !dbg !14122

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.179, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14112
  call void @llvm.dbg.value(metadata i8* %11, metadata !14111, metadata !DIExpression()), !dbg !14112
  ret i8* %11, !dbg !14124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.178(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14125 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14129, metadata !DIExpression()), !dbg !14130
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14131, !srcloc !14133
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !14134
  ret void, !dbg !14135
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.186() unnamed_addr #12 !dbg !14136 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14137, !srcloc !14139
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #28, !dbg !14140
  ret %struct.k_thread* %1, !dbg !14141
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14146, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.value(metadata i32 %1, metadata !14147, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.value(metadata i32 %2, metadata !14148, metadata !DIExpression()), !dbg !14149
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #28, !dbg !14150
  ret void, !dbg !14151
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14156, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata i8* %1, metadata !14157, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata i32 %2, metadata !14158, metadata !DIExpression()), !dbg !14159
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #28, !dbg !14160
  ret void, !dbg !14161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14162 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !14163
  ret void, !dbg !14164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14167, metadata !DIExpression()), !dbg !14168
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !14169
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14170
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14171
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14172
  %4 = trunc i32 %0 to i8, !dbg !14173
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14174
  store i8 %4, i8* %5, align 4, !dbg !14175
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14176
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !14177
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14178
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14179
  store i8* %8, i8** %9, align 4, !dbg !14180
  ret void, !dbg !14181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14184, metadata !DIExpression()), !dbg !14190
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14191
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14185, metadata !DIExpression()), !dbg !14190
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14192
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14186, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i8* null, metadata !14189, metadata !DIExpression()), !dbg !14190
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14193
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14194
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #28, !dbg !14195
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !14196
  ret void, !dbg !14197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14198 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14202, metadata !DIExpression()), !dbg !14203
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14204
  ret i8* %2, !dbg !14205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14206 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14211, metadata !DIExpression()), !dbg !14212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14213
  %3 = load i8, i8* %2, align 1, !dbg !14214
  %4 = and i8 %3, -5, !dbg !14214
  store i8 %4, i8* %2, align 1, !dbg !14214
  ret void, !dbg !14215
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #11 !dbg !14216 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !14219
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #28, !dbg !14220
  %3 = ptrtoint i8* %2 to i32, !dbg !14229
  %4 = add i32 %3, 2048, !dbg !14230
  call void @llvm.dbg.value(metadata i32 %4, metadata !14224, metadata !DIExpression()) #26, !dbg !14231
  call void @llvm.dbg.value(metadata i32 %4, metadata !14232, metadata !DIExpression()) #26, !dbg !14235
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14237, !srcloc !14238
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14239
  %6 = or i32 %5, 512, !dbg !14239
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14239
  tail call fastcc void @__NVIC_SetPriority.195(i32 noundef -2, i32 noundef 255) #28, !dbg !14240
  tail call fastcc void @__NVIC_SetPriority.195(i32 noundef -5, i32 noundef 0) #28, !dbg !14243
  tail call fastcc void @__NVIC_SetPriority.195(i32 noundef -12, i32 noundef 0) #28, !dbg !14244
  tail call fastcc void @__NVIC_SetPriority.195(i32 noundef -11, i32 noundef 0) #28, !dbg !14245
  tail call fastcc void @__NVIC_SetPriority.195(i32 noundef -10, i32 noundef 0) #28, !dbg !14246
  tail call fastcc void @__NVIC_SetPriority.195(i32 noundef -4, i32 noundef 0) #28, !dbg !14247
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14248
  %8 = or i32 %7, 458752, !dbg !14248
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14248
  tail call void @z_arm_fault_init() #28, !dbg !14249
  tail call void @z_arm_cpu_idle_init() #28, !dbg !14250
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14251
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14254
  %9 = tail call i32 @z_arm_mpu_init() #28, !dbg !14255
  tail call void @z_arm_configure_static_mpu_regions() #28, !dbg !14256
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14257
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14257
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14218, metadata !DIExpression()), !dbg !14258
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !14259
  call void @z_device_state_init() #28, !dbg !14260
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !14261
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !14262
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !14263
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14264
  unreachable, !dbg !14264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2173, metadata !DIExpression()), !dbg !14265
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14266
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14266
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2174, metadata !DIExpression()), !dbg !14265
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2174, metadata !DIExpression()), !dbg !14265
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14267
  br i1 %7, label %8, label %35, !dbg !14268

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2174, metadata !DIExpression()), !dbg !14265
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14269
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14269
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2184, metadata !DIExpression()), !dbg !14270
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14271
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14271
  %14 = tail call i32 %13(%struct.device* noundef %11) #28, !dbg !14272
  call void @llvm.dbg.value(metadata i32 %14, metadata !2188, metadata !DIExpression()), !dbg !14270
  %15 = icmp eq %struct.device* %11, null, !dbg !14273
  br i1 %15, label %32, label %16, !dbg !14275

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14276
  br i1 %17, label %26, label %18, !dbg !14279

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14280
  call void @llvm.dbg.value(metadata i32 %19, metadata !2188, metadata !DIExpression()), !dbg !14270
  %20 = icmp ult i32 %19, 255, !dbg !14282
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14282
  call void @llvm.dbg.value(metadata i32 %21, metadata !2188, metadata !DIExpression()), !dbg !14270
  %22 = trunc i32 %21 to i8, !dbg !14283
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14284
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14284
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14285
  store i8 %22, i8* %25, align 1, !dbg !14286
  br label %26, !dbg !14287

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14288
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14288
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14289
  %30 = load i8, i8* %29, align 1, !dbg !14290
  %31 = or i8 %30, 1, !dbg !14290
  store i8 %31, i8* %29, align 1, !dbg !14290
  br label %32, !dbg !14291

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14292
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2174, metadata !DIExpression()), !dbg !14265
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14267
  br i1 %34, label %8, label %35, !dbg !14268, !llvm.loop !14293

35:                                               ; preds = %32, %1
  ret void, !dbg !14295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.195(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14298, metadata !DIExpression()), !dbg !14300
  call void @llvm.dbg.value(metadata i32 %1, metadata !14299, metadata !DIExpression()), !dbg !14300
  %3 = trunc i32 %1 to i8, !dbg !14301
  %4 = shl i8 %3, 4, !dbg !14301
  %5 = and i32 %0, 15, !dbg !14304
  %6 = add nsw i32 %5, -4, !dbg !14305
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14306
  store volatile i8 %4, i8* %7, align 1, !dbg !14307
  ret void, !dbg !14308
}

; Function Attrs: optsize
declare !dbg !14309 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !14310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14313, metadata !DIExpression()), !dbg !14314
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14315
  store i8 1, i8* %2, align 1, !dbg !14316
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14317
  store i8 1, i8* %3, align 4, !dbg !14318
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14319
  store i32 0, i32* %4, align 4, !dbg !14320
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14321
  store i32 0, i32* %5, align 4, !dbg !14322
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14323
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14324
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14325
  ret void, !dbg !14326
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14327 {
  tail call void @z_sched_init() #28, !dbg !14332
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14333
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 5, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.196, i32 0, i32 0)) #28, !dbg !14334
  call void @llvm.dbg.value(metadata i8* %1, metadata !14331, metadata !DIExpression()), !dbg !14335
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14336
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !14337
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !14338
  ret i8* %1, !dbg !14339
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #11 !dbg !14340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14344, metadata !DIExpression()), !dbg !14345
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #28, !dbg !14346
  unreachable, !dbg !14347
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14350, metadata !DIExpression()), !dbg !14353
  call void @llvm.dbg.value(metadata i8* %1, metadata !14351, metadata !DIExpression()), !dbg !14353
  call void @llvm.dbg.value(metadata i8* %2, metadata !14352, metadata !DIExpression()), !dbg !14353
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14354
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !14355
  tail call void @boot_banner() #28, !dbg !14356
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !14357
  tail call void @z_init_static_threads() #28, !dbg !14358
  tail call void @main() #28, !dbg !14359
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14360
  %5 = and i8 %4, -2, !dbg !14360
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14360
  ret void, !dbg !14361
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14362 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14372, metadata !DIExpression()), !dbg !14374
  call void @llvm.dbg.value(metadata i8* %1, metadata !14373, metadata !DIExpression()), !dbg !14374
  ret void, !dbg !14375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14376 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14378, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i8* %1, metadata !14379, metadata !DIExpression()), !dbg !14380
  ret void, !dbg !14381
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14382 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14383, !srcloc !14390
  call void @llvm.dbg.value(metadata i32 %1, metadata !14386, metadata !DIExpression()) #26, !dbg !14391
  %2 = icmp ne i32 %1, 0, !dbg !14392
  ret i1 %2, !dbg !14393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !14394 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14395
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14396
  %3 = load i8, i8* %2, align 4, !dbg !14397
  %4 = or i8 %3, 1, !dbg !14397
  store i8 %4, i8* %2, align 4, !dbg !14397
  ret void, !dbg !14398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !14399 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14400
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14401
  %3 = load i8, i8* %2, align 4, !dbg !14402
  %4 = and i8 %3, -2, !dbg !14402
  store i8 %4, i8* %2, align 4, !dbg !14402
  ret void, !dbg !14403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #3 !dbg !14404 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14405
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14406
  %3 = load i8, i8* %2, align 4, !dbg !14406
  %4 = and i8 %3, 1, !dbg !14407
  %5 = icmp ne i8 %4, 0, !dbg !14408
  ret i1 %5, !dbg !14409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14410 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14414, metadata !DIExpression()), !dbg !14416
  call void @llvm.dbg.value(metadata i8* %1, metadata !14415, metadata !DIExpression()), !dbg !14416
  ret i32 -88, !dbg !14417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14418 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14422, metadata !DIExpression()), !dbg !14423
  ret i8* null, !dbg !14424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14425 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14429, metadata !DIExpression()), !dbg !14432
  call void @llvm.dbg.value(metadata i8* %1, metadata !14430, metadata !DIExpression()), !dbg !14432
  call void @llvm.dbg.value(metadata i32 %2, metadata !14431, metadata !DIExpression()), !dbg !14432
  ret i32 -88, !dbg !14433
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2197 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2311, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i8* %1, metadata !2312, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 %2, metadata !2313, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 0, metadata !2314, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i8 undef, metadata !2316, metadata !DIExpression()), !dbg !14434
  %4 = icmp eq i8* %1, null, !dbg !14435
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14437
  br i1 %6, label %46, label %7, !dbg !14437

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14438
  %9 = load i8, i8* %8, align 1, !dbg !14438
  call void @llvm.dbg.value(metadata i8 %9, metadata !2316, metadata !DIExpression()), !dbg !14434
  %10 = add i32 %2, -1, !dbg !14439
  call void @llvm.dbg.value(metadata i32 %10, metadata !2313, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i8 0, metadata !2317, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.value(metadata i8 %9, metadata !2316, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 0, metadata !2314, metadata !DIExpression()), !dbg !14434
  %11 = icmp eq i8 %9, 0, !dbg !14441
  br i1 %11, label %12, label %15, !dbg !14443

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14444
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14445
  store i8 0, i8* %14, align 1, !dbg !14446
  br label %46, !dbg !14447

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2317, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.value(metadata i8 %17, metadata !2316, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 %18, metadata !2314, metadata !DIExpression()), !dbg !14434
  %19 = zext i8 %17 to i32, !dbg !14448
  %20 = zext i8 %16 to i32, !dbg !14449
  %21 = shl nuw i32 1, %20, !dbg !14449
  call void @llvm.dbg.value(metadata i32 %21, metadata !2315, metadata !DIExpression()), !dbg !14434
  %22 = and i32 %21, %19, !dbg !14451
  %23 = icmp eq i32 %22, 0, !dbg !14453
  br i1 %23, label %42, label %24, !dbg !14454

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14455
  %26 = sub i32 %10, %18, !dbg !14456
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14457
  %28 = load i8*, i8** %27, align 4, !dbg !14457
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14458
  %30 = load i32, i32* %29, align 4, !dbg !14458
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !14459
  %32 = add i32 %31, %18, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %32, metadata !2314, metadata !DIExpression()), !dbg !14434
  %33 = trunc i32 %21 to i8, !dbg !14461
  %34 = xor i8 %33, -1, !dbg !14461
  %35 = and i8 %17, %34, !dbg !14461
  call void @llvm.dbg.value(metadata i8 %35, metadata !2316, metadata !DIExpression()), !dbg !14434
  %36 = icmp eq i8 %35, 0, !dbg !14462
  br i1 %36, label %12, label %37, !dbg !14464

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14465
  %39 = sub i32 %10, %32, !dbg !14467
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.199, i32 0, i32 0), i32 noundef 1) #27, !dbg !14468
  %41 = add i32 %40, %32, !dbg !14469
  call void @llvm.dbg.value(metadata i32 %41, metadata !2314, metadata !DIExpression()), !dbg !14434
  br label %42, !dbg !14470

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14434
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14434
  call void @llvm.dbg.value(metadata i8 %44, metadata !2316, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 %43, metadata !2314, metadata !DIExpression()), !dbg !14434
  %45 = add i8 %16, 1, !dbg !14471
  call void @llvm.dbg.value(metadata i8 %45, metadata !2317, metadata !DIExpression()), !dbg !14440
  br label %15, !dbg !14443

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.200, i32 0, i32 0), %3 ], !dbg !14434
  ret i8* %47, !dbg !14472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14473 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14477, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata i32 %1, metadata !14478, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata i8* %2, metadata !14479, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata i32 %3, metadata !14480, metadata !DIExpression()), !dbg !14482
  %5 = icmp ult i32 %1, %3, !dbg !14483
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14483
  call void @llvm.dbg.value(metadata i32 %6, metadata !14481, metadata !DIExpression()), !dbg !14482
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #28, !dbg !14484
  ret i32 %6, !dbg !14485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14490, metadata !DIExpression()), !dbg !14491
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #28, !dbg !14492
  ret void, !dbg !14493
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14494 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14503, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14504, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %2, metadata !14505, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14506, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i8* %4, metadata !14507, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i8* %5, metadata !14508, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i8* %6, metadata !14509, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %7, metadata !14510, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %8, metadata !14511, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i8* undef, metadata !14512, metadata !DIExpression()), !dbg !14514
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14515
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #27, !dbg !14516
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14517
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !14518
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !14519
  call void @llvm.dbg.value(metadata i8* %13, metadata !14513, metadata !DIExpression()), !dbg !14514
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #28, !dbg !14520
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14521
  store i8* null, i8** %14, align 4, !dbg !14522
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14523
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14523
  br i1 %16, label %20, label %17, !dbg !14525

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14526
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14526
  br label %20, !dbg !14527

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14514
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14528
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14530
  ret i8* %13, !dbg !14531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !14532 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14537, metadata !DIExpression()), !dbg !14538
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14539
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !14540
  ret void, !dbg !14541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !14542 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14547, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.value(metadata i32 %1, metadata !14548, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.value(metadata i32 %2, metadata !14549, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.value(metadata i32 %3, metadata !14550, metadata !DIExpression()), !dbg !14551
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14552
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14553
  %6 = trunc i32 %3 to i8, !dbg !14554
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14555
  store i8 %6, i8* %7, align 4, !dbg !14556
  %8 = trunc i32 %2 to i8, !dbg !14557
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14558
  store i8 %8, i8* %9, align 1, !dbg !14559
  %10 = trunc i32 %1 to i8, !dbg !14560
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14561
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14561
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14561
  store i8 %10, i8* %13, align 2, !dbg !14562
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14563
  store i8 0, i8* %14, align 1, !dbg !14564
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !14565
  ret void, !dbg !14566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !14567 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14571, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14572, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.value(metadata i32 %2, metadata !14573, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.value(metadata i32 0, metadata !14578, metadata !DIExpression()), !dbg !14579
  %4 = add i32 %2, 7, !dbg !14580
  %5 = and i32 %4, -8, !dbg !14580
  %6 = add i32 %5, 64, !dbg !14580
  call void @llvm.dbg.value(metadata i32 %6, metadata !14574, metadata !DIExpression()), !dbg !14579
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.210(%struct.z_thread_stack_element* noundef %1) #27, !dbg !14582
  call void @llvm.dbg.value(metadata i8* %7, metadata !14577, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.value(metadata i32 %5, metadata !14575, metadata !DIExpression()), !dbg !14579
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14583
  call void @llvm.dbg.value(metadata i8* %8, metadata !14576, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.value(metadata i32 0, metadata !14578, metadata !DIExpression()), !dbg !14579
  %9 = ptrtoint i8* %7 to i32, !dbg !14584
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14585
  store i32 %9, i32* %10, align 4, !dbg !14586
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14587
  store i32 %5, i32* %11, align 4, !dbg !14588
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14589
  store i32 0, i32* %12, align 4, !dbg !14590
  call void @llvm.dbg.value(metadata i8* %8, metadata !14576, metadata !DIExpression()), !dbg !14579
  ret i8* %8, !dbg !14591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.210(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14592 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14596, metadata !DIExpression()), !dbg !14597
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14598
  ret i8* %2, !dbg !14599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14600 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14605, metadata !DIExpression()), !dbg !14606
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14607
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14608
  ret void, !dbg !14609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14610 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14612, metadata !DIExpression()), !dbg !14613
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14614
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !14615
  ret void, !dbg !14616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14617 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14621, metadata !DIExpression()), !dbg !14622
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14623
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14624
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14625
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14626
  ret void, !dbg !14627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14628 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14633, metadata !DIExpression()), !dbg !14634
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14635
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14636
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14637
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14638
  ret void, !dbg !14639
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14640 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14657, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14649, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i32 %2, metadata !14650, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14651, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i8* %4, metadata !14652, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i8* %5, metadata !14653, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i8* %6, metadata !14654, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i32 %7, metadata !14655, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i32 %8, metadata !14656, metadata !DIExpression()), !dbg !14658
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !14659
  %13 = icmp eq i64 %11, -1, !dbg !14660
  br i1 %13, label %15, label %14, !dbg !14662

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !14663
  br label %15, !dbg !14665

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14667 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14672, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14671, metadata !DIExpression()), !dbg !14673
  %4 = icmp eq i64 %3, 0, !dbg !14674
  br i1 %4, label %5, label %6, !dbg !14676

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !14677
  br label %7, !dbg !14679

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !14680
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14687, metadata !DIExpression()), !dbg !14688
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14689, !srcloc !14691
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !14692
  ret void, !dbg !14693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14694 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14697, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14696, metadata !DIExpression()), !dbg !14698
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14699
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #28, !dbg !14700
  ret void, !dbg !14701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14702 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14704, metadata !DIExpression()), !dbg !14723
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14724

1:                                                ; preds = %2
  tail call void @k_sched_lock() #28, !dbg !14725
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14721, metadata !DIExpression()), !dbg !14726
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14727

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14704, metadata !DIExpression()), !dbg !14723
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14728
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14728
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14731
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14731
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14732
  %9 = load i32, i32* %8, align 4, !dbg !14732
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14733
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14733
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14734
  %13 = load i8*, i8** %12, align 4, !dbg !14734
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14735
  %15 = load i8*, i8** %14, align 4, !dbg !14735
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14736
  %17 = load i8*, i8** %16, align 4, !dbg !14736
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14737
  %19 = load i32, i32* %18, align 4, !dbg !14737
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14738
  %21 = load i32, i32* %20, align 4, !dbg !14738
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !14739
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14740
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14741
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14742
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14742
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14743
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14704, metadata !DIExpression()), !dbg !14723
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14744
  br i1 %27, label %2, label %1, !dbg !14724, !llvm.loop !14746

28:                                               ; preds = %0
  tail call void @k_sched_lock() #28, !dbg !14725
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14721, metadata !DIExpression()), !dbg !14726
  br label %29, !dbg !14727

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #28, !dbg !14748
  ret void, !dbg !14749

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14721, metadata !DIExpression()), !dbg !14726
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14750
  %33 = load i32, i32* %32, align 4, !dbg !14750
  %34 = icmp eq i32 %33, -1, !dbg !14754
  br i1 %34, label %43, label %35, !dbg !14755

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14756
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14756
  %38 = icmp sgt i32 %33, 0, !dbg !14758
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14758
  %40 = zext i32 %39 to i64, !dbg !14758
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.213(i64 noundef %40) #27, !dbg !14758
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14759
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !14759
  br label %43, !dbg !14760

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14761
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14721, metadata !DIExpression()), !dbg !14726
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14762
  br i1 %45, label %30, label %29, !dbg !14727, !llvm.loop !14764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.213(i64 noundef %0) unnamed_addr #5 !dbg !14766 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14768, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %0, metadata !14770, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i32 1000, metadata !14773, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i32 10000, metadata !14774, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i8 1, metadata !14775, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i8 0, metadata !14776, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i8 1, metadata !14777, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i8 0, metadata !14778, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i8 1, metadata !14779, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i8 0, metadata !14780, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i64 0, metadata !14781, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i64 0, metadata !14781, metadata !DIExpression()), !dbg !14785
  %2 = mul i64 %0, 10, !dbg !14787
  ret i64 %2, !dbg !14793
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #11 !dbg !14794 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14796, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i8* %1, metadata !14797, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i8* %2, metadata !14798, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i8* %3, metadata !14799, metadata !DIExpression()), !dbg !14800
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14801
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14802
  %7 = load i8, i8* %6, align 4, !dbg !14803
  %8 = or i8 %7, 4, !dbg !14803
  store i8 %8, i8* %6, align 4, !dbg !14803
  tail call void @z_thread_essential_clear() #27, !dbg !14804
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !14805
  unreachable, !dbg !14805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14810, metadata !DIExpression()), !dbg !14811
  ret i32 -134, !dbg !14812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14813 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14817, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i32 %1, metadata !14818, metadata !DIExpression()), !dbg !14819
  ret i32 -134, !dbg !14820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !14821 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14828, metadata !DIExpression()), !dbg !14830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14829, metadata !DIExpression()), !dbg !14830
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14831
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14833
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14830
  ret i32 %6, !dbg !14834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !14835 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14839, metadata !DIExpression()), !dbg !14840
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14841
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14840
  ret i32 %3, !dbg !14843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14844 {
  tail call void @sys_clock_idle_exit() #28, !dbg !14846
  ret void, !dbg !14847
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #11 !dbg !14848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14850, metadata !DIExpression()), !dbg !14853
  call void @llvm.dbg.value(metadata i8* %1, metadata !14851, metadata !DIExpression()), !dbg !14853
  call void @llvm.dbg.value(metadata i8* %2, metadata !14852, metadata !DIExpression()), !dbg !14853
  br label %4, !dbg !14854

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14855, !srcloc !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !14858, metadata !DIExpression()) #26, !dbg !14863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14859, metadata !DIExpression()) #26, !dbg !14863
  tail call fastcc void @k_cpu_idle() #27, !dbg !14864
  br label %4, !dbg !14854, !llvm.loop !14865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14867 {
  tail call void @arch_cpu_idle() #28, !dbg !14868
  ret void, !dbg !14869
}

; Function Attrs: optsize
declare !dbg !14870 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !14871 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14889, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.value(metadata i8* %1, metadata !14890, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.value(metadata i32 %2, metadata !14891, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.value(metadata i32 %3, metadata !14892, metadata !DIExpression()), !dbg !14893
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14894
  store i32 %2, i32* %5, align 4, !dbg !14895
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14896
  store i32 %3, i32* %6, align 4, !dbg !14897
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14898
  store i8* %1, i8** %7, align 4, !dbg !14899
  %8 = mul i32 %3, %2, !dbg !14900
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14901
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14902
  store i8* %9, i8** %10, align 4, !dbg !14903
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14904
  store i8* %1, i8** %11, align 4, !dbg !14905
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14906
  store i8* %1, i8** %12, align 4, !dbg !14907
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14908
  store i32 0, i32* %13, align 4, !dbg !14909
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14910
  store i8 0, i8* %14, align 4, !dbg !14911
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14912
  tail call fastcc void @z_waitq_init.216(%struct._wait_q_t* noundef %15) #27, !dbg !14913
  ret void, !dbg !14914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.216(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !14915 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14919, metadata !DIExpression()), !dbg !14920
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14921
  tail call fastcc void @sys_dlist_init.217(%struct._dnode* noundef %2) #27, !dbg !14922
  ret void, !dbg !14923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.217(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14924 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14929, metadata !DIExpression()), !dbg !14930
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14931
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14932
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14933
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14934
  ret void, !dbg !14935
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14936 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14940, metadata !DIExpression()), !dbg !14946
  call void @llvm.dbg.value(metadata i32 %1, metadata !14941, metadata !DIExpression()), !dbg !14946
  call void @llvm.dbg.value(metadata i32 %2, metadata !14942, metadata !DIExpression()), !dbg !14946
  %5 = bitcast i32* %4 to i8*, !dbg !14947
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14947
  call void @llvm.dbg.value(metadata i32* %4, metadata !14945, metadata !DIExpression(DW_OP_deref)), !dbg !14946
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !14948
  br i1 %6, label %13, label %7, !dbg !14950

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14951
  call void @llvm.dbg.value(metadata i32 %8, metadata !14945, metadata !DIExpression()), !dbg !14946
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #27, !dbg !14953
  call void @llvm.dbg.value(metadata i8* %9, metadata !14943, metadata !DIExpression()), !dbg !14946
  %10 = icmp eq i8* %9, null, !dbg !14954
  br i1 %10, label %13, label %11, !dbg !14956

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #27, !dbg !14957
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14959
  store i8 1, i8* %12, align 4, !dbg !14960
  call void @llvm.dbg.value(metadata i32 0, metadata !14944, metadata !DIExpression()), !dbg !14946
  br label %13, !dbg !14961

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !14962
  call void @llvm.dbg.value(metadata i32 %14, metadata !14944, metadata !DIExpression()), !dbg !14946
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14963
  ret i32 %14, !dbg !14964
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !14965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14970, metadata !DIExpression()), !dbg !14973
  call void @llvm.dbg.value(metadata i32 %1, metadata !14971, metadata !DIExpression()), !dbg !14973
  call void @llvm.dbg.value(metadata i32* %2, metadata !14972, metadata !DIExpression()), !dbg !14973
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !14974
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !14974
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !14974
  store i32 %6, i32* %2, align 4, !dbg !14974
  ret i1 %5, !dbg !14975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !14976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14980, metadata !DIExpression()), !dbg !14981
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #28, !dbg !14982
  ret i8* %2, !dbg !14983
}

; Function Attrs: optsize
declare !dbg !14984 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14987 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14991, metadata !DIExpression()), !dbg !14992
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14993
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #27, !dbg !14993
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14993
  br i1 %4, label %5, label %15, !dbg !14995

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14996
  %7 = load i8, i8* %6, align 4, !dbg !14996
  %8 = and i8 %7, 1, !dbg !14998
  %9 = icmp eq i8 %8, 0, !dbg !14999
  br i1 %9, label %15, label %10, !dbg !15000

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15001
  %12 = load i8*, i8** %11, align 4, !dbg !15001
  tail call void @k_free(i8* noundef %12) #28, !dbg !15003
  %13 = load i8, i8* %6, align 4, !dbg !15004
  %14 = and i8 %13, -2, !dbg !15004
  store i8 %14, i8* %6, align 4, !dbg !15004
  br label %15, !dbg !15005

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !14992
  ret i32 %16, !dbg !15006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !15007 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15011, metadata !DIExpression()), !dbg !15012
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15013
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15014
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15015
  ret %struct.k_thread* %4, !dbg !15016
}

; Function Attrs: optsize
declare !dbg !15017 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !15018 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15022, metadata !DIExpression()), !dbg !15023
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !15024
  br i1 %2, label %6, label %3, !dbg !15024

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15025
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15025
  br label %6, !dbg !15024

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15024
  ret %struct._dnode* %7, !dbg !15026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !15027 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15031, metadata !DIExpression()), !dbg !15032
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15033
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15033
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15034
  ret i1 %4, !dbg !15035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15036 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15046, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15044, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata i8* %1, metadata !15045, metadata !DIExpression()), !dbg !15054
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15056, metadata !DIExpression()) #26, !dbg !15063
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15065, !srcloc !15071
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15065
  call void @llvm.dbg.value(metadata i32 %6, metadata !15068, metadata !DIExpression()) #26, !dbg !15072
  call void @llvm.dbg.value(metadata i32 undef, metadata !15069, metadata !DIExpression()) #26, !dbg !15072
  call void @llvm.dbg.value(metadata i32 %6, metadata !15062, metadata !DIExpression()) #26, !dbg !15063
  call void @llvm.dbg.value(metadata i32 %6, metadata !15048, metadata !DIExpression()), !dbg !15054
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15073
  %8 = load i32, i32* %7, align 4, !dbg !15073
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15075
  %10 = load i32, i32* %9, align 4, !dbg !15075
  %11 = icmp ult i32 %8, %10, !dbg !15076
  br i1 %11, label %12, label %42, !dbg !15077

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15078
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #28, !dbg !15080
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15047, metadata !DIExpression()), !dbg !15054
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !15081
  br i1 %15, label %24, label %16, !dbg !15083

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !15084
  %18 = load i8*, i8** %17, align 4, !dbg !15084
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15086
  %20 = load i32, i32* %19, align 4, !dbg !15086
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #28, !dbg !15087
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15088, metadata !DIExpression()), !dbg !15094
  call void @llvm.dbg.value(metadata i32 0, metadata !15093, metadata !DIExpression()), !dbg !15094
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !15096
  store i32 0, i32* %22, align 4, !dbg !15097
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #28, !dbg !15098
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15099
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #28, !dbg !15099
  br label %53, !dbg !15100

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15101
  %26 = load i8*, i8** %25, align 4, !dbg !15101
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15103
  %28 = load i32, i32* %27, align 4, !dbg !15103
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #28, !dbg !15104
  %30 = load i32, i32* %27, align 4, !dbg !15105
  %31 = load i8*, i8** %25, align 4, !dbg !15106
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !15106
  store i8* %32, i8** %25, align 4, !dbg !15106
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15107
  %34 = load i8*, i8** %33, align 4, !dbg !15107
  %35 = icmp eq i8* %32, %34, !dbg !15109
  br i1 %35, label %36, label %39, !dbg !15110

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15111
  %38 = load i8*, i8** %37, align 4, !dbg !15111
  store i8* %38, i8** %25, align 4, !dbg !15113
  br label %39, !dbg !15114

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !15115
  %41 = add i32 %40, 1, !dbg !15115
  store i32 %41, i32* %7, align 4, !dbg !15115
  call void @llvm.dbg.value(metadata i32 0, metadata !15053, metadata !DIExpression()), !dbg !15054
  br label %51, !dbg !15116

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !15046, metadata !DIExpression()), !dbg !15054
  %44 = icmp eq i64 %43, 0, !dbg !15117
  br i1 %44, label %51, label %45, !dbg !15119

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15120
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !15122
  store i8* %1, i8** %47, align 4, !dbg !15123
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15124
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15125
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #28, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %50, metadata !15053, metadata !DIExpression()), !dbg !15054
  br label %53, !dbg !15126

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !15127
  call void @llvm.dbg.value(metadata i32 %52, metadata !15053, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata i32 %6, metadata !15128, metadata !DIExpression()) #26, !dbg !15134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15133, metadata !DIExpression()) #26, !dbg !15134
  call void @llvm.dbg.value(metadata i32 %6, metadata !15136, metadata !DIExpression()) #26, !dbg !15139
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15141, !srcloc !15142
  br label %53, !dbg !15143

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !15054
  ret i32 %54, !dbg !15144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #10 !dbg !15145 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15155, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15156, metadata !DIExpression()), !dbg !15157
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15158
  %4 = load i32, i32* %3, align 4, !dbg !15158
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15159
  store i32 %4, i32* %5, align 4, !dbg !15160
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15161
  %7 = load i32, i32* %6, align 4, !dbg !15161
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15162
  store i32 %7, i32* %8, align 4, !dbg !15163
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15164
  %10 = load i32, i32* %9, align 4, !dbg !15164
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15165
  store i32 %10, i32* %11, align 4, !dbg !15166
  ret void, !dbg !15167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15168 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15174, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15172, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata i8* %1, metadata !15173, metadata !DIExpression()), !dbg !15178
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15056, metadata !DIExpression()) #26, !dbg !15180
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15182, !srcloc !15071
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15182
  call void @llvm.dbg.value(metadata i32 %6, metadata !15068, metadata !DIExpression()) #26, !dbg !15184
  call void @llvm.dbg.value(metadata i32 undef, metadata !15069, metadata !DIExpression()) #26, !dbg !15184
  call void @llvm.dbg.value(metadata i32 %6, metadata !15062, metadata !DIExpression()) #26, !dbg !15180
  call void @llvm.dbg.value(metadata i32 %6, metadata !15175, metadata !DIExpression()), !dbg !15178
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15185
  %8 = load i32, i32* %7, align 4, !dbg !15185
  %9 = icmp eq i32 %8, 0, !dbg !15187
  br i1 %9, label %51, label %10, !dbg !15188

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15189
  %12 = load i8*, i8** %11, align 4, !dbg !15189
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15191
  %14 = load i32, i32* %13, align 4, !dbg !15191
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #28, !dbg !15192
  %16 = load i32, i32* %13, align 4, !dbg !15193
  %17 = load i8*, i8** %11, align 4, !dbg !15194
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !15194
  store i8* %18, i8** %11, align 4, !dbg !15194
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15195
  %20 = load i8*, i8** %19, align 4, !dbg !15195
  %21 = icmp eq i8* %18, %20, !dbg !15197
  br i1 %21, label %22, label %25, !dbg !15198

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15199
  %24 = load i8*, i8** %23, align 4, !dbg !15199
  store i8* %24, i8** %11, align 4, !dbg !15201
  br label %25, !dbg !15202

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !15203
  %27 = add i32 %26, -1, !dbg !15203
  store i32 %27, i32* %7, align 4, !dbg !15203
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15204
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #28, !dbg !15205
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15176, metadata !DIExpression()), !dbg !15178
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !15206
  br i1 %30, label %60, label %31, !dbg !15208

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15209
  %33 = load i8*, i8** %32, align 4, !dbg !15209
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !15211
  %35 = load i8*, i8** %34, align 4, !dbg !15211
  %36 = load i32, i32* %13, align 4, !dbg !15212
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #28, !dbg !15213
  %38 = load i32, i32* %13, align 4, !dbg !15214
  %39 = load i8*, i8** %32, align 4, !dbg !15215
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !15215
  store i8* %40, i8** %32, align 4, !dbg !15215
  %41 = load i8*, i8** %19, align 4, !dbg !15216
  %42 = icmp eq i8* %40, %41, !dbg !15218
  br i1 %42, label %43, label %46, !dbg !15219

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15220
  %45 = load i8*, i8** %44, align 4, !dbg !15220
  store i8* %45, i8** %32, align 4, !dbg !15222
  br label %46, !dbg !15223

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !15224
  %48 = add i32 %47, 1, !dbg !15224
  store i32 %48, i32* %7, align 4, !dbg !15224
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15088, metadata !DIExpression()), !dbg !15225
  call void @llvm.dbg.value(metadata i32 0, metadata !15093, metadata !DIExpression()), !dbg !15225
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !15227
  store i32 0, i32* %49, align 4, !dbg !15228
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #28, !dbg !15229
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15230
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #28, !dbg !15230
  br label %62, !dbg !15231

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !15174, metadata !DIExpression()), !dbg !15178
  %53 = icmp eq i64 %52, 0, !dbg !15232
  br i1 %53, label %60, label %54, !dbg !15234

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15235
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !15237
  store i8* %1, i8** %56, align 4, !dbg !15238
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15239
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15240
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #28, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %59, metadata !15177, metadata !DIExpression()), !dbg !15178
  br label %62, !dbg !15241

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !15242
  call void @llvm.dbg.value(metadata i32 %61, metadata !15177, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata i32 %6, metadata !15128, metadata !DIExpression()) #26, !dbg !15243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15133, metadata !DIExpression()) #26, !dbg !15243
  call void @llvm.dbg.value(metadata i32 %6, metadata !15136, metadata !DIExpression()) #26, !dbg !15245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15247, !srcloc !15142
  br label %62, !dbg !15248

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !15178
  ret i32 %63, !dbg !15249
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15250 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15254, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i8* %1, metadata !15255, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15056, metadata !DIExpression()) #26, !dbg !15259
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15261, !srcloc !15071
  call void @llvm.dbg.value(metadata i32 undef, metadata !15068, metadata !DIExpression()) #26, !dbg !15263
  call void @llvm.dbg.value(metadata i32 undef, metadata !15069, metadata !DIExpression()) #26, !dbg !15263
  call void @llvm.dbg.value(metadata i32 undef, metadata !15062, metadata !DIExpression()) #26, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15256, metadata !DIExpression()), !dbg !15258
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15264
  %5 = load i32, i32* %4, align 4, !dbg !15264
  %6 = icmp eq i32 %5, 0, !dbg !15266
  br i1 %6, label %13, label %7, !dbg !15267

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15268
  %9 = load i8*, i8** %8, align 4, !dbg !15268
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15270
  %11 = load i32, i32* %10, align 4, !dbg !15270
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #28, !dbg !15271
  call void @llvm.dbg.value(metadata i32 0, metadata !15257, metadata !DIExpression()), !dbg !15258
  br label %13, !dbg !15272

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !15273
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15261
  call void @llvm.dbg.value(metadata i32 %15, metadata !15068, metadata !DIExpression()) #26, !dbg !15263
  call void @llvm.dbg.value(metadata i32 %15, metadata !15062, metadata !DIExpression()) #26, !dbg !15259
  call void @llvm.dbg.value(metadata i32 %15, metadata !15256, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i32 %14, metadata !15257, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i32 undef, metadata !15128, metadata !DIExpression()) #26, !dbg !15274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15133, metadata !DIExpression()) #26, !dbg !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !15136, metadata !DIExpression()) #26, !dbg !15276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !15278, !srcloc !15142
  ret i32 %14, !dbg !15279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15280 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15284, metadata !DIExpression()), !dbg !15287
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15056, metadata !DIExpression()) #26, !dbg !15288
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15290, !srcloc !15071
  call void @llvm.dbg.value(metadata i32 undef, metadata !15068, metadata !DIExpression()) #26, !dbg !15292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15069, metadata !DIExpression()) #26, !dbg !15292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15062, metadata !DIExpression()) #26, !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15285, metadata !DIExpression()), !dbg !15287
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #28, !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15286, metadata !DIExpression()), !dbg !15287
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15294
  br i1 %5, label %11, label %6, !dbg !15295

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15088, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.value(metadata i32 -35, metadata !15093, metadata !DIExpression()), !dbg !15296
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15299
  store i32 -35, i32* %8, align 4, !dbg !15300
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #28, !dbg !15301
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #28, !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15286, metadata !DIExpression()), !dbg !15287
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15294
  br i1 %10, label %11, label %6, !dbg !15295, !llvm.loop !15302

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %12, metadata !15068, metadata !DIExpression()) #26, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %12, metadata !15062, metadata !DIExpression()) #26, !dbg !15288
  call void @llvm.dbg.value(metadata i32 %12, metadata !15285, metadata !DIExpression()), !dbg !15287
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15304
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15305
  store i32 0, i32* %14, align 4, !dbg !15306
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15307
  %16 = load i8*, i8** %15, align 4, !dbg !15307
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15308
  store i8* %16, i8** %17, align 4, !dbg !15309
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15310
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #28, !dbg !15310
  ret void, !dbg !15311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #9 !dbg !15312 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15323, metadata !DIExpression()), !dbg !15324
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15325
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15326
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15327
  store i32 0, i32* %3, align 4, !dbg !15328
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15329
  tail call fastcc void @z_waitq_init.222(%struct._wait_q_t* noundef %4) #27, !dbg !15330
  ret i32 0, !dbg !15331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.222(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !15332 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15336, metadata !DIExpression()), !dbg !15337
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15338
  tail call fastcc void @sys_dlist_init.223(%struct._dnode* noundef %2) #27, !dbg !15339
  ret void, !dbg !15340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.223(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15341 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15346, metadata !DIExpression()), !dbg !15347
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15348
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15349
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15350
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15351
  ret void, !dbg !15352
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15353 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15362, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15361, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata i8 0, metadata !15369, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #26, !dbg !15382
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15384, !srcloc !15390
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15384
  call void @llvm.dbg.value(metadata i32 %5, metadata !15387, metadata !DIExpression()) #26, !dbg !15391
  call void @llvm.dbg.value(metadata i32 undef, metadata !15388, metadata !DIExpression()) #26, !dbg !15391
  call void @llvm.dbg.value(metadata i32 %5, metadata !15381, metadata !DIExpression()) #26, !dbg !15382
  call void @llvm.dbg.value(metadata i32 %5, metadata !15364, metadata !DIExpression()), !dbg !15374
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15392
  %7 = load i32, i32* %6, align 4, !dbg !15392
  %8 = icmp eq i32 %7, 0, !dbg !15392
  br i1 %8, label %14, label %9, !dbg !15392

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15392
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15392
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15392
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15392
  br i1 %13, label %20, label %29, !dbg !15394, !prof !15395

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15396
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !15398
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !15398
  %18 = load i8, i8* %17, align 2, !dbg !15398
  %19 = sext i8 %18 to i32, !dbg !15396
  br label %23, !dbg !15399

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15400
  %22 = load i32, i32* %21, align 4, !dbg !15400
  br label %23, !dbg !15399

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !15401
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !15399
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15402
  store i32 %25, i32* %26, align 4, !dbg !15403
  %27 = add i32 %7, 1, !dbg !15404
  store i32 %27, i32* %6, align 4, !dbg !15404
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15405
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !15406
  call void @llvm.dbg.value(metadata i32 %5, metadata !15407, metadata !DIExpression()) #26, !dbg !15413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15412, metadata !DIExpression()) #26, !dbg !15413
  call void @llvm.dbg.value(metadata i32 %5, metadata !15415, metadata !DIExpression()) #26, !dbg !15418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !15420, !srcloc !15421
  br label %78, !dbg !15422

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !15423
  br i1 %30, label %31, label %32, !dbg !15425, !prof !15426

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !15407, metadata !DIExpression()) #26, !dbg !15427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15412, metadata !DIExpression()) #26, !dbg !15427
  call void @llvm.dbg.value(metadata i32 %5, metadata !15415, metadata !DIExpression()) #26, !dbg !15430
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !15432, !srcloc !15421
  br label %78, !dbg !15433

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !15434
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !15434
  %35 = load i8, i8* %34, align 2, !dbg !15434
  %36 = sext i8 %35 to i32, !dbg !15435
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !15436
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !15436
  %39 = load i8, i8* %38, align 2, !dbg !15436
  %40 = sext i8 %39 to i32, !dbg !15437
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #27, !dbg !15438
  call void @llvm.dbg.value(metadata i32 %41, metadata !15363, metadata !DIExpression()), !dbg !15374
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #27, !dbg !15439
  br i1 %42, label %43, label %45, !dbg !15441

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #27, !dbg !15442
  call void @llvm.dbg.value(metadata i1 %44, metadata !15369, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15374
  br label %45, !dbg !15444

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15369, metadata !DIExpression()), !dbg !15374
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15445
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15446
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #28, !dbg !15446
  call void @llvm.dbg.value(metadata i32 %49, metadata !15370, metadata !DIExpression()), !dbg !15374
  %50 = icmp eq i32 %49, 0, !dbg !15447
  br i1 %50, label %78, label %51, !dbg !15449

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #26, !dbg !15450
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15452, !srcloc !15390
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !15452
  call void @llvm.dbg.value(metadata i32 %53, metadata !15387, metadata !DIExpression()) #26, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15388, metadata !DIExpression()) #26, !dbg !15454
  call void @llvm.dbg.value(metadata i32 %53, metadata !15381, metadata !DIExpression()) #26, !dbg !15450
  call void @llvm.dbg.value(metadata i32 %53, metadata !15364, metadata !DIExpression()), !dbg !15374
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15455
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !15455
  br i1 %55, label %74, label %56, !dbg !15456, !prof !15426

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.226(%struct._wait_q_t* noundef nonnull %47) #27, !dbg !15457
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !15371, metadata !DIExpression()), !dbg !15458
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !15459
  br i1 %58, label %67, label %59, !dbg !15460

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !15461
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !15461
  %62 = load i8, i8* %61, align 2, !dbg !15461
  %63 = sext i8 %62 to i32, !dbg !15462
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15463
  %65 = load i32, i32* %64, align 4, !dbg !15463
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #27, !dbg !15464
  br label %70, !dbg !15460

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15465
  %69 = load i32, i32* %68, align 4, !dbg !15465
  br label %70, !dbg !15460

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !15460
  call void @llvm.dbg.value(metadata i32 %71, metadata !15363, metadata !DIExpression()), !dbg !15374
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #27, !dbg !15466
  %73 = select i1 %72, i1 true, i1 %46, !dbg !15467
  call void @llvm.dbg.value(metadata i1 %73, metadata !15369, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15374
  call void @llvm.dbg.value(metadata i8 poison, metadata !15369, metadata !DIExpression()), !dbg !15374
  br i1 %73, label %75, label %77, !dbg !15468

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !15369, metadata !DIExpression()), !dbg !15374
  br i1 %46, label %75, label %77, !dbg !15468

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !15469
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #28, !dbg !15469
  br label %78, !dbg !15472

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !15407, metadata !DIExpression()) #26, !dbg !15473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15412, metadata !DIExpression()) #26, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %53, metadata !15415, metadata !DIExpression()) #26, !dbg !15476
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #26, !dbg !15478, !srcloc !15421
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !15374
  ret i32 %79, !dbg !15479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15484, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata i32 %1, metadata !15485, metadata !DIExpression()), !dbg !15487
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #27, !dbg !15488
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15488
  call void @llvm.dbg.value(metadata i32 %4, metadata !15486, metadata !DIExpression()), !dbg !15487
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #27, !dbg !15489
  call void @llvm.dbg.value(metadata i32 %5, metadata !15486, metadata !DIExpression()), !dbg !15487
  ret i32 %5, !dbg !15490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15495, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i32 %1, metadata !15496, metadata !DIExpression()), !dbg !15497
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !15498
  ret i1 %3, !dbg !15499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15500 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15504, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata i32 %1, metadata !15505, metadata !DIExpression()), !dbg !15506
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15507
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15507
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15509
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15509
  %7 = load i8, i8* %6, align 2, !dbg !15509
  %8 = sext i8 %7 to i32, !dbg !15510
  %9 = icmp eq i32 %8, %1, !dbg !15511
  br i1 %9, label %12, label %10, !dbg !15512

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #28, !dbg !15513
  br label %12, !dbg !15515

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15506
  ret i1 %13, !dbg !15516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.226(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !15517 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15521, metadata !DIExpression()), !dbg !15522
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15523
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.227(%struct._dnode* noundef %2) #27, !dbg !15524
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15525
  ret %struct.k_thread* %4, !dbg !15526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.227(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !15527 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15531, metadata !DIExpression()), !dbg !15532
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.228(%struct._dnode* noundef %0) #27, !dbg !15533
  br i1 %2, label %6, label %3, !dbg !15533

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15534
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15534
  br label %6, !dbg !15533

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15533
  ret %struct._dnode* %7, !dbg !15535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.228(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !15536 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15540, metadata !DIExpression()), !dbg !15541
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15542
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15542
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15543
  ret i1 %4, !dbg !15544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15547, metadata !DIExpression()), !dbg !15549
  call void @llvm.dbg.value(metadata i32 %1, metadata !15548, metadata !DIExpression()), !dbg !15549
  %3 = icmp slt i32 %0, %1, !dbg !15550
  ret i1 %3, !dbg !15551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15554, metadata !DIExpression()), !dbg !15555
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #27, !dbg !15556
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15556
  ret i32 %3, !dbg !15557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15562, metadata !DIExpression()), !dbg !15563
  %2 = icmp sgt i32 %0, -128, !dbg !15564
  ret i1 %2, !dbg !15565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15566 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15568, metadata !DIExpression()), !dbg !15572
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15573
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !15573
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15573
  br i1 %4, label %31, label %5, !dbg !15575

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15576
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !15576
  br i1 %7, label %8, label %31, !dbg !15578

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15579
  %10 = load i32, i32* %9, align 4, !dbg !15579
  %11 = icmp ugt i32 %10, 1, !dbg !15581
  br i1 %11, label %12, label %14, !dbg !15582

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !15583
  store i32 %13, i32* %9, align 4, !dbg !15583
  br label %31, !dbg !15585

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #26, !dbg !15586
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15588, !srcloc !15390
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15588
  call void @llvm.dbg.value(metadata i32 %16, metadata !15387, metadata !DIExpression()) #26, !dbg !15590
  call void @llvm.dbg.value(metadata i32 undef, metadata !15388, metadata !DIExpression()) #26, !dbg !15590
  call void @llvm.dbg.value(metadata i32 %16, metadata !15381, metadata !DIExpression()) #26, !dbg !15586
  call void @llvm.dbg.value(metadata i32 %16, metadata !15570, metadata !DIExpression()), !dbg !15572
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15591
  %18 = load i32, i32* %17, align 4, !dbg !15591
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #27, !dbg !15592
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15593
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #28, !dbg !15594
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15569, metadata !DIExpression()), !dbg !15572
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !15595
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !15596
  br i1 %22, label %30, label %23, !dbg !15598

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !15599
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !15599
  %26 = load i8, i8* %25, align 2, !dbg !15599
  %27 = sext i8 %26 to i32, !dbg !15601
  store i32 %27, i32* %17, align 4, !dbg !15602
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15603, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 0, metadata !15608, metadata !DIExpression()), !dbg !15609
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !15611
  store i32 0, i32* %28, align 4, !dbg !15612
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #28, !dbg !15613
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15614
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #28, !dbg !15614
  br label %31, !dbg !15615

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !15616
  call void @llvm.dbg.value(metadata i32 %16, metadata !15407, metadata !DIExpression()) #26, !dbg !15618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15412, metadata !DIExpression()) #26, !dbg !15618
  call void @llvm.dbg.value(metadata i32 %16, metadata !15415, metadata !DIExpression()) #26, !dbg !15620
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15622, !srcloc !15421
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !15572
  ret i32 %32, !dbg !15623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #3 !dbg !15624 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15628, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15629, metadata !DIExpression()), !dbg !15632
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15633
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15633
  %5 = load i8, i8* %4, align 2, !dbg !15633
  call void @llvm.dbg.value(metadata i8 %5, metadata !15630, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15632
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15634
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15634
  %8 = load i8, i8* %7, align 2, !dbg !15634
  call void @llvm.dbg.value(metadata i8 %8, metadata !15631, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15632
  %9 = icmp eq i8 %8, %5, !dbg !15635
  %10 = sext i8 %5 to i32, !dbg !15637
  %11 = sext i8 %8 to i32, !dbg !15637
  %12 = sub nsw i32 %11, %10, !dbg !15637
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15637
  ret i32 %13, !dbg !15638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15643, metadata !DIExpression()), !dbg !15644
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !15645
  %3 = icmp eq i32 %2, 0, !dbg !15647
  br i1 %3, label %8, label %4, !dbg !15648

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #28, !dbg !15649
  %6 = add i32 %5, %2, !dbg !15651
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15652
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !15653
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #28, !dbg !15654
  br label %8, !dbg !15655

8:                                                ; preds = %4, %1
  ret void, !dbg !15656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #3 !dbg !15657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15661, metadata !DIExpression()), !dbg !15663
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15664
  call void @llvm.dbg.value(metadata i32 %1, metadata !15662, metadata !DIExpression()), !dbg !15663
  ret i32 %1, !dbg !15665
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15670, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata i32 %1, metadata !15671, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata i32 0, metadata !15672, metadata !DIExpression()), !dbg !15680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !15688
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15690, !srcloc !15696
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15690
  call void @llvm.dbg.value(metadata i32 %4, metadata !15693, metadata !DIExpression()) #26, !dbg !15697
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !15697
  call void @llvm.dbg.value(metadata i32 %4, metadata !15687, metadata !DIExpression()) #26, !dbg !15688
  call void @llvm.dbg.value(metadata i32 %4, metadata !15678, metadata !DIExpression()), !dbg !15680
  call void @llvm.dbg.value(metadata i32 undef, metadata !15672, metadata !DIExpression()), !dbg !15680
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15698
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !15701
  %6 = icmp sgt i32 %0, 0, !dbg !15702
  %7 = icmp sgt i32 %5, 2, !dbg !15704
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15704
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15704
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15705
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15706
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15707
  call void @llvm.dbg.value(metadata i32 %4, metadata !15708, metadata !DIExpression()) #26, !dbg !15714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !15714
  call void @llvm.dbg.value(metadata i32 %4, metadata !15716, metadata !DIExpression()) #26, !dbg !15719
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !15721, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !15672, metadata !DIExpression()), !dbg !15680
  call void @llvm.dbg.value(metadata i32 undef, metadata !15672, metadata !DIExpression()), !dbg !15680
  ret void, !dbg !15723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15726, metadata !DIExpression()), !dbg !15727
  call void @llvm.dbg.value(metadata i32 %0, metadata !15728, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15743
  call void @llvm.dbg.value(metadata i32 1000, metadata !15731, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i32 10000, metadata !15732, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i8 1, metadata !15733, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i1 true, metadata !15734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15743
  call void @llvm.dbg.value(metadata i1 true, metadata !15735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15743
  call void @llvm.dbg.value(metadata i8 0, metadata !15736, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i1 true, metadata !15737, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15743
  call void @llvm.dbg.value(metadata i1 false, metadata !15738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15743
  call void @llvm.dbg.value(metadata i64 0, metadata !15739, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i64 0, metadata !15739, metadata !DIExpression()), !dbg !15743
  %2 = mul i32 %0, 10, !dbg !15745
  ret i32 %2, !dbg !15751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15754, metadata !DIExpression()), !dbg !15756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !15757
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15759, !srcloc !15696
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15759
  call void @llvm.dbg.value(metadata i32 %3, metadata !15693, metadata !DIExpression()) #26, !dbg !15761
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !15761
  call void @llvm.dbg.value(metadata i32 %3, metadata !15687, metadata !DIExpression()) #26, !dbg !15757
  call void @llvm.dbg.value(metadata i32 %3, metadata !15755, metadata !DIExpression()), !dbg !15756
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15762
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15764
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15765
  br i1 %6, label %7, label %8, !dbg !15766

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15767
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !15769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !15769
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !15771
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !15773, !srcloc !15722
  br label %24, !dbg !15774

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15775
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !15776
  %10 = icmp eq i32 %9, 0, !dbg !15776
  br i1 %10, label %21, label %11, !dbg !15778

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !15779
  br i1 %12, label %13, label %21, !dbg !15780

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15781
  %15 = icmp sgt i32 %14, %0, !dbg !15784
  br i1 %15, label %19, label %16, !dbg !15785

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15786
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %18, metadata !15755, metadata !DIExpression()), !dbg !15756
  br label %22, !dbg !15788

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15789
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15789
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15791
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15756
  call void @llvm.dbg.value(metadata i32 %23, metadata !15755, metadata !DIExpression()), !dbg !15756
  call void @llvm.dbg.value(metadata i32 %23, metadata !15708, metadata !DIExpression()) #26, !dbg !15793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !15793
  call void @llvm.dbg.value(metadata i32 %23, metadata !15716, metadata !DIExpression()) #26, !dbg !15795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #26, !dbg !15797, !srcloc !15722
  br label %24, !dbg !15798

24:                                               ; preds = %22, %7
  ret void, !dbg !15798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !15799 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15803, metadata !DIExpression()), !dbg !15805
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !15806
  %3 = icmp eq i32 %2, 0, !dbg !15806
  br i1 %3, label %16, label %4, !dbg !15807

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !15808
  br i1 %5, label %16, label %6, !dbg !15809

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15810
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15810
  %9 = load i8, i8* %8, align 2, !dbg !15810
  %10 = sext i8 %9 to i32, !dbg !15811
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15812
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.234(i32 noundef %10, i32 noundef %11) #27, !dbg !15813
  br i1 %12, label %16, label %13, !dbg !15814

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !15815
  %15 = xor i1 %14, true, !dbg !15816
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15805
  call void @llvm.dbg.value(metadata i1 %17, metadata !15804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15805
  ret i1 %17, !dbg !15817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15818 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15822, metadata !DIExpression()), !dbg !15824
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15825
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15823, metadata !DIExpression()), !dbg !15824
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !15826
  br i1 %3, label %5, label %4, !dbg !15828

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !15829
  br label %5, !dbg !15831

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15822, metadata !DIExpression()), !dbg !15824
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15832
  ret i32 %6, !dbg !15833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !15834 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15836, metadata !DIExpression()), !dbg !15838
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15839
  %3 = load i8, i8* %2, align 1, !dbg !15839
  call void @llvm.dbg.value(metadata i8 %3, metadata !15837, metadata !DIExpression()), !dbg !15838
  %4 = and i8 %3, 31, !dbg !15840
  %5 = icmp ne i8 %4, 0, !dbg !15841
  ret i1 %5, !dbg !15842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15845, metadata !DIExpression()), !dbg !15846
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15847
  br i1 %2, label %3, label %7, !dbg !15849

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15850, metadata !DIExpression()) #26, !dbg !15853
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15856
  %5 = load i8, i8* %4, align 1, !dbg !15857
  %6 = and i8 %5, 127, !dbg !15857
  store i8 %6, i8* %4, align 1, !dbg !15857
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15858, metadata !DIExpression()) #26, !dbg !15861
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !15865
  br label %7, !dbg !15866

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15867, metadata !DIExpression()) #26, !dbg !15870
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15872
  %9 = load i8, i8* %8, align 1, !dbg !15873
  %10 = or i8 %9, -128, !dbg !15873
  store i8 %10, i8* %8, align 1, !dbg !15873
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()) #26, !dbg !15877
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15881, metadata !DIExpression()) #26, !dbg !15889
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15887, metadata !DIExpression()) #26, !dbg !15889
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !15891
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15888, metadata !DIExpression()) #26, !dbg !15889
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15893
  br i1 %12, label %23, label %13, !dbg !15891

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15888, metadata !DIExpression()) #26, !dbg !15889
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15895
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15888, metadata !DIExpression()) #26, !dbg !15889
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #28, !dbg !15896
  %17 = icmp sgt i32 %16, 0, !dbg !15899
  br i1 %17, label %18, label %20, !dbg !15900

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15901
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #28, !dbg !15903
  br label %25, !dbg !15904

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #28, !dbg !15893
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15888, metadata !DIExpression()) #26, !dbg !15889
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15893
  br i1 %22, label %23, label %13, !dbg !15891, !llvm.loop !15905

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15907
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #28, !dbg !15908
  br label %25, !dbg !15909

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15910
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15911
  %28 = zext i1 %27 to i32, !dbg !15911
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !15912
  ret void, !dbg !15913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !15914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15916, metadata !DIExpression()), !dbg !15917
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !15918
  ret i1 %2, !dbg !15919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #10 !dbg !15920 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15922, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15923, metadata !DIExpression()), !dbg !15924
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15925
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !15926
  ret void, !dbg !15927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !15928 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15932, metadata !DIExpression()), !dbg !15933
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.232(%struct._dnode* noundef %0) #27, !dbg !15934
  br i1 %2, label %6, label %3, !dbg !15934

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15935
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15935
  br label %6, !dbg !15934

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15934
  ret %struct._dnode* %7, !dbg !15936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !15937 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15941, metadata !DIExpression()), !dbg !15945
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15942, metadata !DIExpression()), !dbg !15945
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15946
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15946
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15943, metadata !DIExpression()), !dbg !15945
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15947
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15948
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15949
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15950
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15951
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15952
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15953
  ret void, !dbg !15954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #3 !dbg !15955 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15959, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15960, metadata !DIExpression()), !dbg !15961
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15962
  br i1 %3, label %6, label %4, !dbg !15963

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !15964
  br label %6, !dbg !15963

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15963
  ret %struct._dnode* %7, !dbg !15965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !15966 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15970, metadata !DIExpression()), !dbg !15973
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15971, metadata !DIExpression()), !dbg !15973
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15974
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15974
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15972, metadata !DIExpression()), !dbg !15973
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15975
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15976
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15977
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15978
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15979
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15980
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15981
  ret void, !dbg !15982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15985, metadata !DIExpression()), !dbg !15987
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !15988
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15995, metadata !DIExpression()) #26, !dbg !15997
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15998
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15999
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15999
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15986, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16000, metadata !DIExpression()) #26, !dbg !16006
  call void @llvm.dbg.value(metadata i32 %0, metadata !16005, metadata !DIExpression()) #26, !dbg !16006
  %6 = icmp eq i32 %0, 0, !dbg !16009
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16011
  br i1 %6, label %8, label %15, !dbg !16012

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #28, !dbg !16013
  br i1 %9, label %15, label %10, !dbg !16015

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #28, !dbg !16016
  br i1 %11, label %15, label %12, !dbg !16018

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #28, !dbg !16019
  %14 = icmp eq i32 %13, 0, !dbg !16019
  br i1 %14, label %18, label %15, !dbg !16021

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16022
  br i1 %16, label %18, label %17, !dbg !16025

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16026
  br label %18, !dbg !16028

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16011
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16011
  ret void, !dbg !16029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #3 !dbg !16030 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16034, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16035, metadata !DIExpression()), !dbg !16037
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef %0) #27, !dbg !16038
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16036, metadata !DIExpression()), !dbg !16037
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16035, metadata !DIExpression()), !dbg !16037
  ret %struct.k_thread* %3, !dbg !16039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16040 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16042, metadata !DIExpression()), !dbg !16043
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16044
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16045
  %4 = xor i1 %3, true, !dbg !16046
  ret i1 %4, !dbg !16047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16048 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16050, metadata !DIExpression()), !dbg !16051
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16052
  %3 = load i16, i16* %2, align 2, !dbg !16052
  %4 = icmp ult i16 %3, 128, !dbg !16053
  %5 = zext i1 %4 to i32, !dbg !16053
  ret i32 %5, !dbg !16054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16055 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16061, metadata !DIExpression()), !dbg !16062
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16063
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !16064
  %4 = xor i1 %3, true, !dbg !16065
  ret i1 %4, !dbg !16066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16067 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16073, metadata !DIExpression()), !dbg !16074
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16075
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16075
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16076
  ret i1 %4, !dbg !16077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #3 !dbg !16078 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16080, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16081, metadata !DIExpression()), !dbg !16082
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16083
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16083
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16084
  br i1 %5, label %9, label %6, !dbg !16085

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16086
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16086
  br label %9, !dbg !16085

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16085
  ret %struct._dnode* %10, !dbg !16087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.232(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !16088 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16092, metadata !DIExpression()), !dbg !16093
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16094
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16094
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16095
  ret i1 %4, !dbg !16096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !16097 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16101, metadata !DIExpression()), !dbg !16104
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16105
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16105
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16102, metadata !DIExpression()), !dbg !16104
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16106
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16106
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16103, metadata !DIExpression()), !dbg !16104
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16107
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16108
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16109
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16110
  tail call fastcc void @sys_dnode_init.233(%struct._dnode* noundef %0) #27, !dbg !16111
  ret void, !dbg !16112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.233(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16113 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16115, metadata !DIExpression()), !dbg !16116
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16117
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16118
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16119
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16120
  ret void, !dbg !16121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16126, metadata !DIExpression()), !dbg !16128
  call void @llvm.dbg.value(metadata i32 128, metadata !16127, metadata !DIExpression()), !dbg !16128
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16129
  %3 = load i8, i8* %2, align 1, !dbg !16129
  %4 = icmp slt i8 %3, 0, !dbg !16130
  ret i1 %4, !dbg !16131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.234(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16134, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i32 %1, metadata !16135, metadata !DIExpression()), !dbg !16136
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.235(i32 noundef %0, i32 noundef %1) #27, !dbg !16137
  ret i1 %3, !dbg !16138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16141, metadata !DIExpression()), !dbg !16142
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16143
  ret i1 %2, !dbg !16144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.235(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16147, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i32 %1, metadata !16148, metadata !DIExpression()), !dbg !16149
  %3 = icmp slt i32 %0, %1, !dbg !16150
  ret i1 %3, !dbg !16151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16152 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16154, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata i32 0, metadata !16155, metadata !DIExpression()), !dbg !16159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16160
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16162, !srcloc !15696
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16162
  call void @llvm.dbg.value(metadata i32 %3, metadata !15693, metadata !DIExpression()) #26, !dbg !16164
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16164
  call void @llvm.dbg.value(metadata i32 %3, metadata !15687, metadata !DIExpression()) #26, !dbg !16160
  call void @llvm.dbg.value(metadata i32 %3, metadata !16157, metadata !DIExpression()), !dbg !16159
  call void @llvm.dbg.value(metadata i32 undef, metadata !16155, metadata !DIExpression()), !dbg !16159
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16165
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !16170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16170
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !16172
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16174, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16155, metadata !DIExpression()), !dbg !16159
  call void @llvm.dbg.value(metadata i32 undef, metadata !16155, metadata !DIExpression()), !dbg !16159
  ret void, !dbg !16175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16176 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16178, metadata !DIExpression()), !dbg !16179
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16180
  br i1 %2, label %24, label %3, !dbg !16182

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !16183
  br i1 %4, label %5, label %24, !dbg !16184

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15867, metadata !DIExpression()) #26, !dbg !16185
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16188
  %7 = load i8, i8* %6, align 1, !dbg !16189
  %8 = or i8 %7, -128, !dbg !16189
  store i8 %8, i8* %6, align 1, !dbg !16189
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()) #26, !dbg !16190
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15881, metadata !DIExpression()) #26, !dbg !16192
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15887, metadata !DIExpression()) #26, !dbg !16192
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !16194
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15888, metadata !DIExpression()) #26, !dbg !16192
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16195
  br i1 %10, label %21, label %11, !dbg !16194

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15888, metadata !DIExpression()) #26, !dbg !16192
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15888, metadata !DIExpression()) #26, !dbg !16192
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #28, !dbg !16197
  %15 = icmp sgt i32 %14, 0, !dbg !16198
  br i1 %15, label %16, label %18, !dbg !16199

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16200
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #28, !dbg !16201
  br label %23, !dbg !16202

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #28, !dbg !16195
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15888, metadata !DIExpression()) #26, !dbg !16192
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16195
  br i1 %20, label %21, label %11, !dbg !16194, !llvm.loop !16203

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16205
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #28, !dbg !16206
  br label %23, !dbg !16207

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !16208
  br label %24, !dbg !16209

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16213, metadata !DIExpression()), !dbg !16214
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !16215
  br i1 %2, label %6, label %3, !dbg !16216

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !16217
  %5 = xor i1 %4, true, !dbg !16216
  br label %6, !dbg !16216

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16221, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata i32 0, metadata !16222, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16227
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16229, !srcloc !15696
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16229
  call void @llvm.dbg.value(metadata i32 %3, metadata !15693, metadata !DIExpression()) #26, !dbg !16231
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16231
  call void @llvm.dbg.value(metadata i32 %3, metadata !15687, metadata !DIExpression()) #26, !dbg !16227
  call void @llvm.dbg.value(metadata i32 %3, metadata !16224, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16222, metadata !DIExpression()), !dbg !16226
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !16232
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !16235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16235
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !16237
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16239, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16222, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16222, metadata !DIExpression()), !dbg !16226
  ret void, !dbg !16240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16243, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16246
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16248, !srcloc !15696
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16248
  call void @llvm.dbg.value(metadata i32 %3, metadata !15693, metadata !DIExpression()) #26, !dbg !16250
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16250
  call void @llvm.dbg.value(metadata i32 %3, metadata !15687, metadata !DIExpression()) #26, !dbg !16246
  call void @llvm.dbg.value(metadata i32 %3, metadata !16244, metadata !DIExpression()), !dbg !16245
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !16251
  br i1 %4, label %5, label %6, !dbg !16253

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !16254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16254
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !16257
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16259, !srcloc !15722
  br label %8, !dbg !16260

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.240(%struct.k_thread* noundef %0) #27, !dbg !16261
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16262
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16263
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !16263
  br label %8, !dbg !16264

8:                                                ; preds = %6, %5
  ret void, !dbg !16264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16265 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16267, metadata !DIExpression()), !dbg !16268
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16269
  %3 = load i8, i8* %2, align 1, !dbg !16269
  %4 = and i8 %3, 4, !dbg !16270
  %5 = icmp eq i8 %4, 0, !dbg !16271
  ret i1 %5, !dbg !16272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.240(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16273 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16275, metadata !DIExpression()), !dbg !16276
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16277
  %3 = load i8, i8* %2, align 1, !dbg !16278
  %4 = and i8 %3, -5, !dbg !16278
  store i8 %4, i8* %2, align 1, !dbg !16278
  ret void, !dbg !16279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16280 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16283, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16282, metadata !DIExpression()), !dbg !16284
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !16285
  br i1 %4, label %5, label %9, !dbg !16287

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !16288
  br i1 %6, label %7, label %9, !dbg !16289

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16290, metadata !DIExpression()) #26, !dbg !16296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16295, metadata !DIExpression()) #26, !dbg !16296
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #28, !dbg !16299
  br label %10, !dbg !16300

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !16301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16301
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !16304
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16306, !srcloc !15722
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16312, metadata !DIExpression()), !dbg !16313
  call void @llvm.dbg.value(metadata i32 %0, metadata !16314, metadata !DIExpression()), !dbg !16319
  %2 = icmp eq i32 %0, 0, !dbg !16321
  br i1 %2, label %3, label %6, !dbg !16322

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16323, !srcloc !16330
  call void @llvm.dbg.value(metadata i32 %4, metadata !16326, metadata !DIExpression()) #26, !dbg !16331
  %5 = icmp eq i32 %4, 0, !dbg !16332
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16313
  ret i1 %7, !dbg !16333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #3 !dbg !16334 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16337
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16336, metadata !DIExpression()), !dbg !16338
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16339
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16340
  ret i1 %3, !dbg !16341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16344, metadata !DIExpression()), !dbg !16346
  %2 = tail call i32 @arch_swap(i32 noundef %0) #28, !dbg !16347
  call void @llvm.dbg.value(metadata i32 %2, metadata !16345, metadata !DIExpression()), !dbg !16346
  ret i32 %2, !dbg !16348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16351, metadata !DIExpression()), !dbg !16355
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16356
  call void @llvm.dbg.value(metadata i32 0, metadata !16352, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16358
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16360, !srcloc !15696
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16360
  call void @llvm.dbg.value(metadata i32 %4, metadata !15693, metadata !DIExpression()) #26, !dbg !16362
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16362
  call void @llvm.dbg.value(metadata i32 %4, metadata !15687, metadata !DIExpression()) #26, !dbg !16358
  call void @llvm.dbg.value(metadata i32 %4, metadata !16354, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i32 undef, metadata !16352, metadata !DIExpression()), !dbg !16357
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16363
  br i1 %5, label %6, label %10, !dbg !16367

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15850, metadata !DIExpression()) #26, !dbg !16368
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16371
  %8 = load i8, i8* %7, align 1, !dbg !16372
  %9 = and i8 %8, 127, !dbg !16372
  store i8 %9, i8* %7, align 1, !dbg !16372
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15858, metadata !DIExpression()) #26, !dbg !16373
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16375
  br label %10, !dbg !16376

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !16377
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16378
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16379
  %13 = zext i1 %12 to i32, !dbg !16379
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !16380
  call void @llvm.dbg.value(metadata i32 %4, metadata !15708, metadata !DIExpression()) #26, !dbg !16381
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16381
  call void @llvm.dbg.value(metadata i32 %4, metadata !15716, metadata !DIExpression()) #26, !dbg !16383
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !16385, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16352, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i32 undef, metadata !16352, metadata !DIExpression()), !dbg !16357
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16386
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16388
  br i1 %15, label %16, label %17, !dbg !16389

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16390
  br label %17, !dbg !16392

17:                                               ; preds = %16, %10
  ret void, !dbg !16393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16396, metadata !DIExpression()), !dbg !16397
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16398
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !16399
  ret i32 %3, !dbg !16400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16401 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16403, metadata !DIExpression()), !dbg !16404
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16405
  %3 = load i8, i8* %2, align 1, !dbg !16406
  %4 = or i8 %3, 16, !dbg !16406
  store i8 %4, i8* %2, align 1, !dbg !16406
  ret void, !dbg !16407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16408 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16409, !srcloc !15696
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16409
  call void @llvm.dbg.value(metadata i32 %2, metadata !15693, metadata !DIExpression()) #26, !dbg !16411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16411
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !16412
  ret void, !dbg !16413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16416, metadata !DIExpression()), !dbg !16417
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !16418
  br i1 %2, label %3, label %5, !dbg !16420

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !16421
  br label %6, !dbg !16423

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15716, metadata !DIExpression()) #26, !dbg !16424
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !16427, !srcloc !15722
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16431, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16434
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16436, !srcloc !15696
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16436
  call void @llvm.dbg.value(metadata i32 %3, metadata !15693, metadata !DIExpression()) #26, !dbg !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16438
  call void @llvm.dbg.value(metadata i32 %3, metadata !15687, metadata !DIExpression()) #26, !dbg !16434
  call void @llvm.dbg.value(metadata i32 %3, metadata !16432, metadata !DIExpression()), !dbg !16433
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !16439
  br i1 %4, label %6, label %5, !dbg !16441

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !16442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !16445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16447, !srcloc !15722
  br label %8, !dbg !16448

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !16449
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16450
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16451
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !16451
  br label %8, !dbg !16452

8:                                                ; preds = %6, %5
  ret void, !dbg !16452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16455, metadata !DIExpression()), !dbg !16456
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16457
  %3 = load i8, i8* %2, align 1, !dbg !16457
  %4 = and i8 %3, 16, !dbg !16458
  %5 = icmp ne i8 %4, 0, !dbg !16459
  ret i1 %5, !dbg !16460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16461 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16463, metadata !DIExpression()), !dbg !16464
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16465
  %3 = load i8, i8* %2, align 1, !dbg !16466
  %4 = and i8 %3, -17, !dbg !16466
  store i8 %4, i8* %2, align 1, !dbg !16466
  ret void, !dbg !16467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16468 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16478, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16476, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16477, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata i32 0, metadata !16479, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16484
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16486, !srcloc !15696
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16486
  call void @llvm.dbg.value(metadata i32 %5, metadata !15693, metadata !DIExpression()) #26, !dbg !16488
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16488
  call void @llvm.dbg.value(metadata i32 %5, metadata !15687, metadata !DIExpression()) #26, !dbg !16484
  call void @llvm.dbg.value(metadata i32 %5, metadata !16481, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i32 undef, metadata !16479, metadata !DIExpression()), !dbg !16483
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !16489
  call void @llvm.dbg.value(metadata i32 %5, metadata !15708, metadata !DIExpression()) #26, !dbg !16492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %5, metadata !15716, metadata !DIExpression()) #26, !dbg !16494
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !16496, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16479, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i32 undef, metadata !16479, metadata !DIExpression()), !dbg !16483
  ret void, !dbg !16497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16498 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16502, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16500, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16501, metadata !DIExpression()), !dbg !16503
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #27, !dbg !16504
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !16505
  ret void, !dbg !16506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16511, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16512, metadata !DIExpression()), !dbg !16513
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !16514
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !16515
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16516
  br i1 %3, label %21, label %4, !dbg !16518

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16519
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16521
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16522
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15881, metadata !DIExpression()) #26, !dbg !16523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15887, metadata !DIExpression()) #26, !dbg !16523
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef nonnull %6) #28, !dbg !16525
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15888, metadata !DIExpression()) #26, !dbg !16523
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16526
  br i1 %8, label %19, label %9, !dbg !16525

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15888, metadata !DIExpression()) #26, !dbg !16523
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16527
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15888, metadata !DIExpression()) #26, !dbg !16523
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #28, !dbg !16528
  %13 = icmp sgt i32 %12, 0, !dbg !16529
  br i1 %13, label %14, label %16, !dbg !16530

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16531
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #28, !dbg !16532
  br label %21, !dbg !16533

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #28, !dbg !16526
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15888, metadata !DIExpression()) #26, !dbg !16523
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16526
  br i1 %18, label %19, label %9, !dbg !16525, !llvm.loop !16534

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16536
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #28, !dbg !16537
  br label %21, !dbg !16538

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16540 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16545, metadata !DIExpression()), !dbg !16546
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16544, metadata !DIExpression()), !dbg !16546
  %4 = icmp eq i64 %3, -1, !dbg !16547
  br i1 %4, label %6, label %5, !dbg !16549

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.243(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !16550
  br label %6, !dbg !16552

6:                                                ; preds = %5, %2
  ret void, !dbg !16553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.243(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16554 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16557, metadata !DIExpression()), !dbg !16558
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16556, metadata !DIExpression()), !dbg !16558
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16559
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #28, !dbg !16560
  ret void, !dbg !16561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16562 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16564, metadata !DIExpression()), !dbg !16572
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16573
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16573
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16565, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i32 0, metadata !16566, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16575
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16577, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()) #26, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()) #26, !dbg !16575
  call void @llvm.dbg.value(metadata i32 undef, metadata !16568, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !16566, metadata !DIExpression()), !dbg !16574
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16580
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16581
  %7 = load i8, i8* %6, align 1, !dbg !16581
  %8 = and i8 %7, 40, !dbg !16582
  %9 = icmp eq i8 %8, 0, !dbg !16582
  call void @llvm.dbg.value(metadata i1 %9, metadata !16569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16583
  br i1 %9, label %10, label %17, !dbg !16584

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16585
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16585
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16585
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16589
  br i1 %14, label %16, label %15, !dbg !16590

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !16591
  br label %16, !dbg !16593

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.240(%struct.k_thread* noundef nonnull %3) #27, !dbg !16594
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !16595
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !16596
  br label %17, !dbg !16597

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %18, metadata !15693, metadata !DIExpression()) #26, !dbg !16579
  call void @llvm.dbg.value(metadata i32 %18, metadata !15687, metadata !DIExpression()) #26, !dbg !16575
  call void @llvm.dbg.value(metadata i32 %18, metadata !16568, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()) #26, !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16598
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()) #26, !dbg !16600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !16602, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16566, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !16566, metadata !DIExpression()), !dbg !16574
  ret void, !dbg !16603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16604 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16606, metadata !DIExpression()), !dbg !16607
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16608
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !16609
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16610
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !16611
  ret void, !dbg !16612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16613 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16615, metadata !DIExpression()), !dbg !16616
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16617
  %3 = load i8, i8* %2, align 1, !dbg !16618
  %4 = and i8 %3, -3, !dbg !16618
  store i8 %4, i8* %2, align 1, !dbg !16618
  ret void, !dbg !16619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16622, metadata !DIExpression()), !dbg !16623
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16624
  br i1 %2, label %3, label %7, !dbg !16626

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15850, metadata !DIExpression()) #26, !dbg !16627
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16630
  %5 = load i8, i8* %4, align 1, !dbg !16631
  %6 = and i8 %5, 127, !dbg !16631
  store i8 %6, i8* %4, align 1, !dbg !16631
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15858, metadata !DIExpression()) #26, !dbg !16632
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16634
  br label %7, !dbg !16635

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16636
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16637
  %10 = zext i1 %9 to i32, !dbg !16637
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !16638
  ret void, !dbg !16639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16642, metadata !DIExpression()), !dbg !16643
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16644
  %3 = load i8, i8* %2, align 1, !dbg !16645
  %4 = or i8 %3, 2, !dbg !16645
  store i8 %4, i8* %2, align 1, !dbg !16645
  ret void, !dbg !16646
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #25 !dbg !16647 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16649, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata i32 0, metadata !16650, metadata !DIExpression()), !dbg !16654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16655
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16657, !srcloc !15696
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16657
  call void @llvm.dbg.value(metadata i32 %3, metadata !15693, metadata !DIExpression()) #26, !dbg !16659
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16659
  call void @llvm.dbg.value(metadata i32 %3, metadata !15687, metadata !DIExpression()) #26, !dbg !16655
  call void @llvm.dbg.value(metadata i32 %3, metadata !16652, metadata !DIExpression()), !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !16650, metadata !DIExpression()), !dbg !16654
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16660
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !16663
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16663
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !16665
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16667, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16650, metadata !DIExpression()), !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !16650, metadata !DIExpression()), !dbg !16654
  ret void, !dbg !16668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16669 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16675, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata i32 %0, metadata !16673, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16674, metadata !DIExpression()), !dbg !16680
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16681
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !16682
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16683
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16684
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !16685
  call void @llvm.dbg.value(metadata i32 %6, metadata !16676, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata i32 0, metadata !16677, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16687
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16689, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()) #26, !dbg !16691
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16691
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()) #26, !dbg !16687
  call void @llvm.dbg.value(metadata i32 undef, metadata !16679, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()), !dbg !16686
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16692
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16696
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16697
  br i1 %10, label %11, label %12, !dbg !16698

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16699
  br label %12, !dbg !16701

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16689
  call void @llvm.dbg.value(metadata i32 %13, metadata !15693, metadata !DIExpression()) #26, !dbg !16691
  call void @llvm.dbg.value(metadata i32 %13, metadata !15687, metadata !DIExpression()) #26, !dbg !16687
  call void @llvm.dbg.value(metadata i32 %13, metadata !16679, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()) #26, !dbg !16702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16702
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()) #26, !dbg !16704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !16706, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16677, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()), !dbg !16686
  ret i32 %6, !dbg !16707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16708 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i64 undef, metadata !16715, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16712, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16714, metadata !DIExpression()), !dbg !16716
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16717
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16719
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16721, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()) #26, !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()) #26, !dbg !16719
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16724
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !16725
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16290, metadata !DIExpression()) #26, !dbg !16726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16295, metadata !DIExpression()) #26, !dbg !16726
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #28, !dbg !16728
  ret i32 %9, !dbg !16729
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16730 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16734, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16735, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 0, metadata !16736, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16741
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16743, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()) #26, !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()) #26, !dbg !16741
  call void @llvm.dbg.value(metadata i32 undef, metadata !16738, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16735, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16740
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !16746
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16735, metadata !DIExpression()), !dbg !16739
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16749
  br i1 %5, label %7, label %6, !dbg !16751

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16752
  br label %7, !dbg !16754

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16743
  call void @llvm.dbg.value(metadata i32 %8, metadata !15693, metadata !DIExpression()) #26, !dbg !16745
  call void @llvm.dbg.value(metadata i32 %8, metadata !15687, metadata !DIExpression()) #26, !dbg !16741
  call void @llvm.dbg.value(metadata i32 %8, metadata !16738, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()) #26, !dbg !16755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()) #26, !dbg !16757
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !16759, !srcloc !15722
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16735, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16740
  ret %struct.k_thread* %4, !dbg !16760
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16761 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16763, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16764, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 0, metadata !16765, metadata !DIExpression()), !dbg !16769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16770
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16772, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()) #26, !dbg !16774
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16774
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()) #26, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !16767, metadata !DIExpression()), !dbg !16769
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16764, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 undef, metadata !16765, metadata !DIExpression()), !dbg !16769
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !16775
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16764, metadata !DIExpression()), !dbg !16768
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16778
  br i1 %5, label %8, label %6, !dbg !16780

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16781
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16783
  br label %8, !dbg !16784

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16772
  call void @llvm.dbg.value(metadata i32 %9, metadata !15693, metadata !DIExpression()) #26, !dbg !16774
  call void @llvm.dbg.value(metadata i32 %9, metadata !15687, metadata !DIExpression()) #26, !dbg !16770
  call void @llvm.dbg.value(metadata i32 %9, metadata !16767, metadata !DIExpression()), !dbg !16769
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()) #26, !dbg !16785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()) #26, !dbg !16787
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16789, !srcloc !15722
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16764, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 undef, metadata !16765, metadata !DIExpression()), !dbg !16769
  ret %struct.k_thread* %4, !dbg !16790
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16791 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16793, metadata !DIExpression()), !dbg !16794
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16649, metadata !DIExpression()) #26, !dbg !16795
  call void @llvm.dbg.value(metadata i32 0, metadata !16650, metadata !DIExpression()) #26, !dbg !16797
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16798
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16800, !srcloc !15696
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16800
  call void @llvm.dbg.value(metadata i32 %3, metadata !15693, metadata !DIExpression()) #26, !dbg !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16802
  call void @llvm.dbg.value(metadata i32 %3, metadata !15687, metadata !DIExpression()) #26, !dbg !16798
  call void @llvm.dbg.value(metadata i32 %3, metadata !16652, metadata !DIExpression()) #26, !dbg !16797
  call void @llvm.dbg.value(metadata i32 undef, metadata !16650, metadata !DIExpression()) #26, !dbg !16797
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !16803
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !16804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16804
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !16806
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16808, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16650, metadata !DIExpression()) #26, !dbg !16797
  call void @llvm.dbg.value(metadata i32 undef, metadata !16650, metadata !DIExpression()) #26, !dbg !16797
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16809
  ret void, !dbg !16810
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16811 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16813, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i32 %1, metadata !16814, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i8 0, metadata !16815, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i32 0, metadata !16816, metadata !DIExpression()), !dbg !16820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16821
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16823, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()) #26, !dbg !16825
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16825
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()) #26, !dbg !16821
  call void @llvm.dbg.value(metadata i32 undef, metadata !16818, metadata !DIExpression()), !dbg !16820
  call void @llvm.dbg.value(metadata i8 poison, metadata !16815, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i32 undef, metadata !16816, metadata !DIExpression()), !dbg !16820
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !16826
  call void @llvm.dbg.value(metadata i1 %6, metadata !16815, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16819
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16829

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15850, metadata !DIExpression()) #26, !dbg !16830
  %11 = load i8, i8* %4, align 1, !dbg !16836
  %12 = and i8 %11, 127, !dbg !16836
  store i8 %12, i8* %4, align 1, !dbg !16836
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15858, metadata !DIExpression()) #26, !dbg !16837
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16839
  store i8 %9, i8* %8, align 2, !dbg !16840
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15867, metadata !DIExpression()) #26, !dbg !16841
  %13 = load i8, i8* %4, align 1, !dbg !16843
  %14 = or i8 %13, -128, !dbg !16843
  store i8 %14, i8* %4, align 1, !dbg !16843
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()) #26, !dbg !16844
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15881, metadata !DIExpression()) #26, !dbg !16846
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15887, metadata !DIExpression()) #26, !dbg !16846
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !16848
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15888, metadata !DIExpression()) #26, !dbg !16846
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16849
  br i1 %16, label %26, label %17, !dbg !16848

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15888, metadata !DIExpression()) #26, !dbg !16846
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16850
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15888, metadata !DIExpression()) #26, !dbg !16846
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #28, !dbg !16851
  %21 = icmp sgt i32 %20, 0, !dbg !16852
  br i1 %21, label %22, label %23, !dbg !16853

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #28, !dbg !16854
  br label %27, !dbg !16855

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #28, !dbg !16849
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15888, metadata !DIExpression()) #26, !dbg !16846
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16849
  br i1 %25, label %26, label %17, !dbg !16848, !llvm.loop !16856

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #28, !dbg !16858
  br label %27, !dbg !16859

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16860
  br label %29, !dbg !16861

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16862
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16823
  call void @llvm.dbg.value(metadata i32 %30, metadata !15693, metadata !DIExpression()) #26, !dbg !16825
  call void @llvm.dbg.value(metadata i32 %30, metadata !15687, metadata !DIExpression()) #26, !dbg !16821
  call void @llvm.dbg.value(metadata i32 %30, metadata !16818, metadata !DIExpression()), !dbg !16820
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()) #26, !dbg !16864
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16864
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()) #26, !dbg !16866
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #26, !dbg !16868, !srcloc !15722
  call void @llvm.dbg.value(metadata i8 poison, metadata !16815, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i32 undef, metadata !16816, metadata !DIExpression()), !dbg !16820
  ret i1 %6, !dbg !16869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16874, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.value(metadata i32 %1, metadata !16875, metadata !DIExpression()), !dbg !16877
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !16878
  call void @llvm.dbg.value(metadata i1 %3, metadata !16876, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16877
  br i1 %3, label %4, label %12, !dbg !16879

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16881
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16882
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16882
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16882
  %9 = load i8, i8* %8, align 1, !dbg !16882
  %10 = icmp eq i8 %9, 0, !dbg !16883
  br i1 %10, label %11, label %12, !dbg !16884

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16885
  br label %12, !dbg !16887

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16889 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16891, metadata !DIExpression()), !dbg !16894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16895
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16897, !srcloc !15696
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16897
  call void @llvm.dbg.value(metadata i32 %2, metadata !15693, metadata !DIExpression()) #26, !dbg !16899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16899
  call void @llvm.dbg.value(metadata i32 %2, metadata !15687, metadata !DIExpression()) #26, !dbg !16895
  call void @llvm.dbg.value(metadata i32 %2, metadata !16893, metadata !DIExpression()), !dbg !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()), !dbg !16894
  tail call fastcc void @z_sched_lock() #27, !dbg !16900
  call void @llvm.dbg.value(metadata i32 %2, metadata !15708, metadata !DIExpression()) #26, !dbg !16903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16903
  call void @llvm.dbg.value(metadata i32 %2, metadata !15716, metadata !DIExpression()) #26, !dbg !16905
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !16907, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16891, metadata !DIExpression()), !dbg !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()), !dbg !16894
  ret void, !dbg !16908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16909 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16910
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16911
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16911
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16911
  %5 = load i8, i8* %4, align 1, !dbg !16912
  %6 = add i8 %5, -1, !dbg !16912
  store i8 %6, i8* %4, align 1, !dbg !16912
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !16913, !srcloc !16915
  ret void, !dbg !16916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16917 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16919, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !16923
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16925, !srcloc !15696
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16925
  call void @llvm.dbg.value(metadata i32 %2, metadata !15693, metadata !DIExpression()) #26, !dbg !16927
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !16927
  call void @llvm.dbg.value(metadata i32 %2, metadata !15687, metadata !DIExpression()) #26, !dbg !16923
  call void @llvm.dbg.value(metadata i32 %2, metadata !16921, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()), !dbg !16922
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16928
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16931
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16931
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16931
  %7 = load i8, i8* %6, align 1, !dbg !16932
  %8 = add i8 %7, 1, !dbg !16932
  store i8 %8, i8* %6, align 1, !dbg !16932
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !16933
  call void @llvm.dbg.value(metadata i32 %2, metadata !15708, metadata !DIExpression()) #26, !dbg !16934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !16934
  call void @llvm.dbg.value(metadata i32 %2, metadata !15716, metadata !DIExpression()) #26, !dbg !16936
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !16938, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 1, metadata !16919, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()), !dbg !16922
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16939
  ret void, !dbg !16940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #3 !dbg !16941 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16942
  ret %struct.k_thread* %1, !dbg !16943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #3 !dbg !16944 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16948, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16949, metadata !DIExpression()), !dbg !16953
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16954
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16950, metadata !DIExpression()), !dbg !16953
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16955
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16951, metadata !DIExpression()), !dbg !16953
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !16956
  call void @llvm.dbg.value(metadata i32 %5, metadata !16952, metadata !DIExpression()), !dbg !16953
  %6 = icmp sgt i32 %5, 0, !dbg !16957
  br i1 %6, label %17, label %7, !dbg !16959

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16960
  br i1 %8, label %17, label %9, !dbg !16962

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16963
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16963
  %12 = load i32, i32* %11, align 8, !dbg !16963
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16965
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16965
  %15 = load i32, i32* %14, align 8, !dbg !16965
  %16 = icmp ult i32 %12, %15, !dbg !16966
  br label %17, !dbg !16967

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16968
  ret i1 %18, !dbg !16969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16970 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16987, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16988, metadata !DIExpression()), !dbg !17002
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17003
  %5 = load i32, i32* %4, align 4, !dbg !17004
  %6 = add nsw i32 %5, 1, !dbg !17004
  store i32 %6, i32* %4, align 4, !dbg !17004
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17005
  store i32 %5, i32* %7, align 8, !dbg !17006
  %8 = load i32, i32* %4, align 4, !dbg !17007
  %9 = icmp eq i32 %8, 0, !dbg !17008
  br i1 %9, label %10, label %32, !dbg !17009

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17010
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #26, !dbg !17010
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16990, metadata !DIExpression()), !dbg !17010
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17010
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17010
  %14 = load i32, i32* %13, align 4, !dbg !17010
  %15 = shl i32 %14, 2, !dbg !17010
  %16 = alloca i8, i32 %15, align 8, !dbg !17010
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17010
  store i8* %16, i8** %17, align 4, !dbg !17010
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17010
  %19 = alloca i8, i32 %14, align 8, !dbg !17010
  store i8* %19, i8** %18, align 4, !dbg !17010
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17010
  store i32 -1, i32* %20, align 4, !dbg !17010
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #28, !dbg !17011
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16999, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16989, metadata !DIExpression()), !dbg !17002
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17013
  br i1 %22, label %23, label %24, !dbg !17010

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #26, !dbg !17013
  br label %32, !dbg !17014

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16989, metadata !DIExpression()), !dbg !17002
  %26 = load i32, i32* %4, align 4, !dbg !17015
  %27 = add nsw i32 %26, 1, !dbg !17015
  store i32 %27, i32* %4, align 4, !dbg !17015
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17017
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17017
  store i32 %26, i32* %29, align 8, !dbg !17018
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #28, !dbg !17011
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16999, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16989, metadata !DIExpression()), !dbg !17002
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17013
  br i1 %31, label %23, label %24, !dbg !17010, !llvm.loop !17019

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17021
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17022
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #28, !dbg !17023
  ret void, !dbg !17024
}

; Function Attrs: optsize
declare !dbg !17025 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17030 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17033 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17035, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17036, metadata !DIExpression()), !dbg !17037
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17038
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17039
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #28, !dbg !17040
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17041
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17041
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17043
  br i1 %7, label %8, label %10, !dbg !17044

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17045
  store i32 0, i32* %9, align 4, !dbg !17047
  br label %10, !dbg !17048

10:                                               ; preds = %8, %2
  ret void, !dbg !17049
}

; Function Attrs: optsize
declare !dbg !17050 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17051 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17055, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17056, metadata !DIExpression()), !dbg !17058
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17059
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !17060
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17057, metadata !DIExpression()), !dbg !17058
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17056, metadata !DIExpression()), !dbg !17058
  ret %struct.k_thread* %4, !dbg !17061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17062 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17066, metadata !DIExpression()), !dbg !17067
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #28, !dbg !17068
  ret %struct.rbnode* %2, !dbg !17069
}

; Function Attrs: optsize
declare !dbg !17070 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !17073 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17085, metadata !DIExpression()), !dbg !17089
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17090
  %3 = load i32, i32* %2, align 4, !dbg !17090
  %4 = icmp eq i32 %3, 0, !dbg !17092
  br i1 %4, label %10, label %5, !dbg !17093

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17086, metadata !DIExpression()), !dbg !17089
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17094, !range !5052
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17095
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17087, metadata !DIExpression()), !dbg !17089
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef %7) #27, !dbg !17096
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17088, metadata !DIExpression()), !dbg !17089
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17086, metadata !DIExpression()), !dbg !17089
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17089
  ret %struct.k_thread* %11, !dbg !17097
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17098 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17102, metadata !DIExpression()), !dbg !17105
  call void @llvm.dbg.value(metadata i32 0, metadata !17103, metadata !DIExpression()), !dbg !17105
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.256(%struct._wait_q_t* noundef %0) #27, !dbg !17106
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17104, metadata !DIExpression()), !dbg !17105
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17107
  br i1 %3, label %8, label %4, !dbg !17108

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !17109
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !17111
  call void @llvm.dbg.value(metadata i32 1, metadata !17103, metadata !DIExpression()), !dbg !17105
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.256(%struct._wait_q_t* noundef %0) #27, !dbg !17106
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17104, metadata !DIExpression()), !dbg !17105
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17107
  br i1 %7, label %8, label %4, !dbg !17108, !llvm.loop !17112

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17105
  ret i32 %9, !dbg !17114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.256(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !17115 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17117, metadata !DIExpression()), !dbg !17118
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17119
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef %2) #27, !dbg !17120
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17121
  ret %struct.k_thread* %4, !dbg !17122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17123 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17132, metadata !DIExpression()), !dbg !17133
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17134
  tail call fastcc void @sys_dlist_init.257(%struct._dnode* noundef nonnull %2) #27, !dbg !17135
  ret void, !dbg !17136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.257(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17137 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17141, metadata !DIExpression()), !dbg !17142
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17143
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17144
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17145
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17146
  ret void, !dbg !17147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17148 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !17149
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !17150
  ret void, !dbg !17151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #3 !dbg !17152 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17157, metadata !DIExpression()), !dbg !17158
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17159
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17159
  %4 = load i8, i8* %3, align 2, !dbg !17159
  %5 = sext i8 %4 to i32, !dbg !17160
  ret i32 %5, !dbg !17161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17166, metadata !DIExpression()), !dbg !17169
  call void @llvm.dbg.value(metadata i32 %1, metadata !17167, metadata !DIExpression()), !dbg !17169
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17168, metadata !DIExpression()), !dbg !17169
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !17170
  ret void, !dbg !17171
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17172 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !17173
  br i1 %1, label %8, label %2, !dbg !17174

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #28, !dbg !17175
  br i1 %3, label %8, label %4, !dbg !17176

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17177
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !17178
  %7 = xor i1 %6, true, !dbg !17176
  br label %8, !dbg !17176

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #3 !dbg !17180 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17181, !range !7720
  %2 = icmp eq i8 %1, 0, !dbg !17181
  ret i1 %2, !dbg !17182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17183 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !17186
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17188, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()) #26, !dbg !17190
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !17190
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()) #26, !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !17185, metadata !DIExpression()), !dbg !17191
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17192
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15850, metadata !DIExpression()) #26, !dbg !17195
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17197
  %4 = load i8, i8* %3, align 1, !dbg !17198
  %5 = and i8 %4, 127, !dbg !17198
  store i8 %5, i8* %3, align 1, !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15858, metadata !DIExpression()) #26, !dbg !17199
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #28, !dbg !17201
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17202
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15867, metadata !DIExpression()) #26, !dbg !17203
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17205
  %8 = load i8, i8* %7, align 1, !dbg !17206
  %9 = or i8 %8, -128, !dbg !17206
  store i8 %9, i8* %7, align 1, !dbg !17206
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15874, metadata !DIExpression()) #26, !dbg !17207
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15881, metadata !DIExpression()) #26, !dbg !17209
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15887, metadata !DIExpression()) #26, !dbg !17209
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.231(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !17211
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15888, metadata !DIExpression()) #26, !dbg !17209
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17212
  br i1 %11, label %22, label %12, !dbg !17211

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15888, metadata !DIExpression()) #26, !dbg !17209
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17213
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15888, metadata !DIExpression()) #26, !dbg !17209
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #28, !dbg !17214
  %16 = icmp sgt i32 %15, 0, !dbg !17215
  br i1 %16, label %17, label %19, !dbg !17216

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17217
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #28, !dbg !17218
  br label %24, !dbg !17219

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #28, !dbg !17212
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15888, metadata !DIExpression()) #26, !dbg !17209
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17212
  br i1 %21, label %22, label %12, !dbg !17211, !llvm.loop !17220

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17222
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #28, !dbg !17223
  br label %24, !dbg !17224

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17188
  call void @llvm.dbg.value(metadata i32 %25, metadata !15693, metadata !DIExpression()) #26, !dbg !17190
  call void @llvm.dbg.value(metadata i32 %25, metadata !15687, metadata !DIExpression()) #26, !dbg !17186
  call void @llvm.dbg.value(metadata i32 %25, metadata !17185, metadata !DIExpression()), !dbg !17191
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !17225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()) #26, !dbg !17226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16295, metadata !DIExpression()) #26, !dbg !17226
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #28, !dbg !17228
  ret void, !dbg !17229
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17230 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17234, metadata !DIExpression()), !dbg !17237
  %3 = icmp eq i64 %2, -1, !dbg !17238
  br i1 %3, label %4, label %6, !dbg !17240

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17241
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !17243
  br label %11, !dbg !17244

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17235, metadata !DIExpression()), !dbg !17237
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !17245
  %8 = sext i32 %7 to i64, !dbg !17245
  call void @llvm.dbg.value(metadata i64 %8, metadata !17235, metadata !DIExpression()), !dbg !17237
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !17246
  %10 = trunc i64 %9 to i32, !dbg !17246
  call void @llvm.dbg.value(metadata i32 %10, metadata !17236, metadata !DIExpression()), !dbg !17237
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17237
  ret i32 %12, !dbg !17247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17252, metadata !DIExpression()), !dbg !17253
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17254, !srcloc !17256
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !17257
  ret void, !dbg !17258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17259 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17263, metadata !DIExpression()), !dbg !17267
  %2 = icmp eq i64 %0, 0, !dbg !17268
  br i1 %2, label %3, label %4, !dbg !17270

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !17271
  br label %29, !dbg !17273

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17265, metadata !DIExpression()), !dbg !17267
  %5 = icmp sgt i64 %0, -3, !dbg !17274
  br i1 %5, label %6, label %10, !dbg !17276

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #28, !dbg !17277
  %8 = trunc i64 %0 to i32, !dbg !17279
  %9 = add i32 %7, %8, !dbg !17279
  call void @llvm.dbg.value(metadata i32 %9, metadata !17264, metadata !DIExpression()), !dbg !17267
  br label %13, !dbg !17280

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17281
  %12 = sub i32 -2, %11, !dbg !17281
  call void @llvm.dbg.value(metadata i32 %12, metadata !17264, metadata !DIExpression()), !dbg !17267
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17283
  call void @llvm.dbg.value(metadata i32 %14, metadata !17264, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !17284
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17286, !srcloc !15696
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17286
  call void @llvm.dbg.value(metadata i32 %16, metadata !15693, metadata !DIExpression()) #26, !dbg !17288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !17288
  call void @llvm.dbg.value(metadata i32 %16, metadata !15687, metadata !DIExpression()) #26, !dbg !17284
  call void @llvm.dbg.value(metadata i32 %16, metadata !17266, metadata !DIExpression()), !dbg !17267
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17289
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17290
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !17291
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17292
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17293
  tail call fastcc void @z_add_thread_timeout.243(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !17293
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17294
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !17295
  call void @llvm.dbg.value(metadata i32 %16, metadata !16290, metadata !DIExpression()) #26, !dbg !17296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16295, metadata !DIExpression()) #26, !dbg !17296
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #28, !dbg !17298
  %22 = zext i32 %14 to i64, !dbg !17299
  %23 = tail call i32 @sys_clock_tick_get_32() #28, !dbg !17300
  %24 = zext i32 %23 to i64, !dbg !17300
  %25 = sub nsw i64 %22, %24, !dbg !17301
  call void @llvm.dbg.value(metadata i64 %25, metadata !17263, metadata !DIExpression()), !dbg !17267
  %26 = icmp sgt i64 %25, 0, !dbg !17302
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17302
  %28 = trunc i64 %27 to i32, !dbg !17302
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17267
  ret i32 %30, !dbg !17303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17304 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17306, metadata !DIExpression()), !dbg !17307
  call void @llvm.dbg.value(metadata i64 %0, metadata !15728, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.value(metadata i32 10000, metadata !15731, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.value(metadata i32 1000, metadata !15732, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.value(metadata i8 1, metadata !15733, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.value(metadata i1 false, metadata !15734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17308
  call void @llvm.dbg.value(metadata i1 false, metadata !15735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17308
  call void @llvm.dbg.value(metadata i8 0, metadata !15736, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.value(metadata i1 false, metadata !15737, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17308
  call void @llvm.dbg.value(metadata i1 true, metadata !15738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17308
  call void @llvm.dbg.value(metadata i64 0, metadata !15739, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.value(metadata i64 0, metadata !15739, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.value(metadata i64 %0, metadata !15728, metadata !DIExpression()), !dbg !17308
  %2 = udiv i64 %0, 10, !dbg !17310
  ret i64 %2, !dbg !17314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17315 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17316, !srcloc !17318
  tail call void @z_impl_k_yield() #27, !dbg !17319
  ret void, !dbg !17320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17325, metadata !DIExpression()), !dbg !17327
  %2 = sext i32 %0 to i64, !dbg !17328
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !17329
  call void @llvm.dbg.value(metadata i64 %3, metadata !17326, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17327
  %4 = shl i64 %3, 32, !dbg !17330
  %5 = ashr exact i64 %4, 32, !dbg !17330
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !17331
  call void @llvm.dbg.value(metadata i32 %6, metadata !17326, metadata !DIExpression()), !dbg !17327
  %7 = sext i32 %6 to i64, !dbg !17332
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !17333
  %9 = trunc i64 %8 to i32, !dbg !17333
  ret i32 %9, !dbg !17334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17335 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17337, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata i64 %0, metadata !15728, metadata !DIExpression()), !dbg !17339
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15731, metadata !DIExpression()), !dbg !17339
  call void @llvm.dbg.value(metadata i32 10000, metadata !15732, metadata !DIExpression()), !dbg !17339
  call void @llvm.dbg.value(metadata i8 1, metadata !15733, metadata !DIExpression()), !dbg !17339
  call void @llvm.dbg.value(metadata i1 false, metadata !15734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17339
  call void @llvm.dbg.value(metadata i1 true, metadata !15735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17339
  call void @llvm.dbg.value(metadata i8 0, metadata !15736, metadata !DIExpression()), !dbg !17339
  call void @llvm.dbg.value(metadata i1 false, metadata !15737, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17339
  call void @llvm.dbg.value(metadata i1 true, metadata !15738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17339
  call void @llvm.dbg.value(metadata i64 0, metadata !15739, metadata !DIExpression()), !dbg !17339
  call void @llvm.dbg.value(metadata i64 0, metadata !15739, metadata !DIExpression()), !dbg !17339
  %2 = add i64 %0, 99, !dbg !17341
  call void @llvm.dbg.value(metadata i64 %2, metadata !15728, metadata !DIExpression()), !dbg !17339
  %3 = udiv i64 %2, 100, !dbg !17342
  ret i64 %3, !dbg !17343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17344 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17346, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i64 %0, metadata !15728, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i32 10000, metadata !15731, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15732, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i8 1, metadata !15733, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i1 false, metadata !15734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17348
  call void @llvm.dbg.value(metadata i1 false, metadata !15735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17348
  call void @llvm.dbg.value(metadata i8 0, metadata !15736, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i1 true, metadata !15737, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17348
  call void @llvm.dbg.value(metadata i1 false, metadata !15738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17348
  call void @llvm.dbg.value(metadata i64 0, metadata !15739, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i64 0, metadata !15739, metadata !DIExpression()), !dbg !17348
  %2 = mul i64 %0, 100, !dbg !17350
  ret i64 %2, !dbg !17352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17355, metadata !DIExpression()), !dbg !17356
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !17357
  br i1 %2, label %14, label %3, !dbg !17359

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17360
  %5 = icmp slt i32 %4, 0, !dbg !17362
  br i1 %5, label %6, label %10, !dbg !17363

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17364
  %8 = load i8, i8* %7, align 1, !dbg !17364
  %9 = icmp eq i8 %8, 16, !dbg !17367
  br i1 %9, label %10, label %14, !dbg !17368

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !17369
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17370
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17371, !srcloc !16330
  call void @llvm.dbg.value(metadata i32 %11, metadata !16326, metadata !DIExpression()) #26, !dbg !17375
  %12 = icmp eq i32 %11, 0, !dbg !17376
  br i1 %12, label %13, label %14, !dbg !17377

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17378
  br label %14, !dbg !17380

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !17382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17384, metadata !DIExpression()), !dbg !17385
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17386
  %3 = load i8, i8* %2, align 1, !dbg !17386
  %4 = and i8 %3, 2, !dbg !17387
  %5 = icmp ne i8 %4, 0, !dbg !17388
  ret i1 %5, !dbg !17389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #3 !dbg !17390 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17395
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17394, metadata !DIExpression()), !dbg !17396
  ret %struct.k_thread* %1, !dbg !17397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17398 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17399, !srcloc !16330
  call void @llvm.dbg.value(metadata i32 %1, metadata !16326, metadata !DIExpression()) #26, !dbg !17402
  %2 = icmp eq i32 %1, 0, !dbg !17403
  br i1 %2, label %3, label %8, !dbg !17404

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17405
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !17406
  %6 = icmp ne i32 %5, 0, !dbg !17404
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17408 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17410, metadata !DIExpression()), !dbg !17412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !17413
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17415, !srcloc !15696
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17415
  call void @llvm.dbg.value(metadata i32 %3, metadata !15693, metadata !DIExpression()) #26, !dbg !17417
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !17417
  call void @llvm.dbg.value(metadata i32 %3, metadata !15687, metadata !DIExpression()) #26, !dbg !17413
  call void @llvm.dbg.value(metadata i32 %3, metadata !17411, metadata !DIExpression()), !dbg !17412
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17418
  %5 = load i8, i8* %4, align 4, !dbg !17418
  %6 = and i8 %5, 1, !dbg !17420
  %7 = icmp eq i8 %6, 0, !dbg !17421
  br i1 %7, label %9, label %8, !dbg !17422

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !17423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !17423
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !17426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17428, !srcloc !15722
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !17429, !srcloc !17431
  br label %24, !dbg !17432

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17433
  %11 = load i8, i8* %10, align 1, !dbg !17433
  %12 = and i8 %11, 8, !dbg !17435
  %13 = icmp eq i8 %12, 0, !dbg !17436
  br i1 %13, label %15, label %14, !dbg !17437

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !17438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !17438
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !17441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17443, !srcloc !15722
  br label %24, !dbg !17444

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !17445
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17446
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17448
  br i1 %17, label %18, label %23, !dbg !17449

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17450, !srcloc !16330
  call void @llvm.dbg.value(metadata i32 %19, metadata !16326, metadata !DIExpression()) #26, !dbg !17453
  %20 = icmp eq i32 %19, 0, !dbg !17454
  br i1 %20, label %21, label %23, !dbg !17455

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16290, metadata !DIExpression()) #26, !dbg !17456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16295, metadata !DIExpression()) #26, !dbg !17456
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #28, !dbg !17459
  br label %23, !dbg !17460

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15708, metadata !DIExpression()) #26, !dbg !17461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !17461
  call void @llvm.dbg.value(metadata i32 %3, metadata !15716, metadata !DIExpression()) #26, !dbg !17463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17465, !srcloc !15722
  br label %24, !dbg !17466

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17469, metadata !DIExpression()), !dbg !17470
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17471
  %3 = load i8, i8* %2, align 1, !dbg !17471
  %4 = and i8 %3, 8, !dbg !17473
  %5 = icmp eq i8 %4, 0, !dbg !17474
  br i1 %5, label %6, label %20, !dbg !17475

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17476
  %8 = or i8 %7, 8, !dbg !17476
  store i8 %8, i8* %2, align 1, !dbg !17476
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !17478
  br i1 %9, label %10, label %12, !dbg !17480

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15850, metadata !DIExpression()) #26, !dbg !17481
  %11 = and i8 %8, 95, !dbg !17484
  store i8 %11, i8* %2, align 1, !dbg !17484
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15858, metadata !DIExpression()) #26, !dbg !17485
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #28, !dbg !17487
  br label %12, !dbg !17488

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17489
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17489
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17491
  br i1 %15, label %17, label %16, !dbg !17492

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !17493
  br label %17, !dbg !17495

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !17496
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17497
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #27, !dbg !17498
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !17499
  br label %20, !dbg !17500

20:                                               ; preds = %17, %1
  ret void, !dbg !17501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17502 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17506, metadata !DIExpression()), !dbg !17508
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.256(%struct._wait_q_t* noundef %0) #27, !dbg !17509
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17507, metadata !DIExpression()), !dbg !17508
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17510
  br i1 %3, label %10, label %4, !dbg !17511

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !17512
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !17514
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17515, metadata !DIExpression()), !dbg !17521
  call void @llvm.dbg.value(metadata i32 0, metadata !17520, metadata !DIExpression()), !dbg !17521
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17523
  store i32 0, i32* %7, align 4, !dbg !17524
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !17525
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.256(%struct._wait_q_t* noundef %0) #27, !dbg !17509
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17507, metadata !DIExpression()), !dbg !17508
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17510
  br i1 %9, label %10, label %4, !dbg !17511, !llvm.loop !17526

10:                                               ; preds = %4, %1
  ret void, !dbg !17528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17529 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17534, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17533, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !17538
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17540, !srcloc !15696
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17540
  call void @llvm.dbg.value(metadata i32 %4, metadata !15693, metadata !DIExpression()) #26, !dbg !17542
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !17542
  call void @llvm.dbg.value(metadata i32 %4, metadata !15687, metadata !DIExpression()) #26, !dbg !17538
  call void @llvm.dbg.value(metadata i32 %4, metadata !17535, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata i32 0, metadata !17536, metadata !DIExpression()), !dbg !17537
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17543
  %6 = load i8, i8* %5, align 1, !dbg !17543
  %7 = and i8 %6, 8, !dbg !17545
  %8 = icmp eq i8 %7, 0, !dbg !17546
  br i1 %8, label %9, label %24, !dbg !17547

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17534, metadata !DIExpression()), !dbg !17537
  %11 = icmp eq i64 %10, 0, !dbg !17548
  br i1 %11, label %24, label %12, !dbg !17550

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17551
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17553
  br i1 %14, label %24, label %15, !dbg !17554

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17555
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17555
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17556
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17557
  br i1 %19, label %24, label %20, !dbg !17558

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17559
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #27, !dbg !17561
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17562
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !17563
  call void @llvm.dbg.value(metadata i32 %4, metadata !16290, metadata !DIExpression()) #26, !dbg !17564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16295, metadata !DIExpression()) #26, !dbg !17564
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #28, !dbg !17566
  call void @llvm.dbg.value(metadata i32 %23, metadata !17536, metadata !DIExpression()), !dbg !17537
  br label %26, !dbg !17567

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17568
  call void @llvm.dbg.value(metadata i32 %25, metadata !17536, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata i32 %4, metadata !15708, metadata !DIExpression()) #26, !dbg !17569
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !17569
  call void @llvm.dbg.value(metadata i32 %4, metadata !15716, metadata !DIExpression()) #26, !dbg !17571
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !17573, !srcloc !15722
  br label %26, !dbg !17574

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17537
  ret i32 %27, !dbg !17575
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17576 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17580, metadata !DIExpression()), !dbg !17588
  call void @llvm.dbg.value(metadata i32 %1, metadata !17581, metadata !DIExpression()), !dbg !17588
  call void @llvm.dbg.value(metadata i8* %2, metadata !17582, metadata !DIExpression()), !dbg !17588
  call void @llvm.dbg.value(metadata i8 0, metadata !17584, metadata !DIExpression()), !dbg !17588
  call void @llvm.dbg.value(metadata i32 0, metadata !17585, metadata !DIExpression()), !dbg !17589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15681, metadata !DIExpression()) #26, !dbg !17590
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17592, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()) #26, !dbg !17594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()) #26, !dbg !17594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()) #26, !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17587, metadata !DIExpression()), !dbg !17589
  call void @llvm.dbg.value(metadata i8 poison, metadata !17584, metadata !DIExpression()), !dbg !17588
  call void @llvm.dbg.value(metadata i32 undef, metadata !17585, metadata !DIExpression()), !dbg !17589
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !17595
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17583, metadata !DIExpression()), !dbg !17588
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17598
  br i1 %7, label %12, label %8, !dbg !17600

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17601, metadata !DIExpression()), !dbg !17608
  call void @llvm.dbg.value(metadata i32 %1, metadata !17606, metadata !DIExpression()), !dbg !17608
  call void @llvm.dbg.value(metadata i8* %2, metadata !17607, metadata !DIExpression()), !dbg !17608
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17515, metadata !DIExpression()), !dbg !17611
  call void @llvm.dbg.value(metadata i32 %1, metadata !17520, metadata !DIExpression()), !dbg !17611
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17613
  store i32 %1, i32* %9, align 4, !dbg !17614
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17615
  store i8* %2, i8** %10, align 4, !dbg !17616
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !17617
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !17618
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !17619
  call void @llvm.dbg.value(metadata i8 1, metadata !17584, metadata !DIExpression()), !dbg !17588
  br label %12, !dbg !17620

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17592
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17592
  call void @llvm.dbg.value(metadata i32 %14, metadata !15693, metadata !DIExpression()) #26, !dbg !17594
  call void @llvm.dbg.value(metadata i32 %14, metadata !15687, metadata !DIExpression()) #26, !dbg !17590
  call void @llvm.dbg.value(metadata i32 %14, metadata !17587, metadata !DIExpression()), !dbg !17589
  call void @llvm.dbg.value(metadata i8 poison, metadata !17584, metadata !DIExpression()), !dbg !17588
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()) #26, !dbg !17621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15713, metadata !DIExpression()) #26, !dbg !17621
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()) #26, !dbg !17623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !17625, !srcloc !15722
  call void @llvm.dbg.value(metadata i32 undef, metadata !17585, metadata !DIExpression()), !dbg !17589
  ret i1 %13, !dbg !17626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17627 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17633, metadata !DIExpression()), !dbg !17638
  call void @llvm.dbg.value(metadata i64 undef, metadata !17635, metadata !DIExpression()), !dbg !17638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17632, metadata !DIExpression()), !dbg !17638
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17634, metadata !DIExpression()), !dbg !17638
  call void @llvm.dbg.value(metadata i8** %4, metadata !17636, metadata !DIExpression()), !dbg !17638
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !17639
  call void @llvm.dbg.value(metadata i32 %6, metadata !17637, metadata !DIExpression()), !dbg !17638
  %7 = icmp eq i8** %4, null, !dbg !17640
  br i1 %7, label %12, label %8, !dbg !17642

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17643
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17645
  %11 = load i8*, i8** %10, align 4, !dbg !17645
  store i8* %11, i8** %4, align 4, !dbg !17646
  br label %12, !dbg !17647

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17648
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17649 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #28, !dbg !17651
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #28, !dbg !17652
  ret void, !dbg !17653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17654 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17664, metadata !DIExpression()), !dbg !17681
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17662, metadata !DIExpression()), !dbg !17681
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17663, metadata !DIExpression()), !dbg !17681
  %5 = icmp eq i64 %4, -1, !dbg !17682
  br i1 %5, label %55, label %6, !dbg !17684

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17685
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17686
  call void @llvm.dbg.value(metadata i32 0, metadata !17665, metadata !DIExpression()), !dbg !17687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !17695
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17697, !srcloc !17703
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17697
  call void @llvm.dbg.value(metadata i32 %9, metadata !17700, metadata !DIExpression()) #26, !dbg !17704
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !17704
  call void @llvm.dbg.value(metadata i32 %9, metadata !17694, metadata !DIExpression()) #26, !dbg !17695
  call void @llvm.dbg.value(metadata i32 %9, metadata !17671, metadata !DIExpression()), !dbg !17687
  call void @llvm.dbg.value(metadata i32 undef, metadata !17665, metadata !DIExpression()), !dbg !17687
  %10 = icmp slt i64 %4, -1, !dbg !17705
  br i1 %10, label %11, label %17, !dbg !17706

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17707
  %13 = add i64 %4, %12, !dbg !17708
  %14 = sub i64 -2, %13, !dbg !17708
  call void @llvm.dbg.value(metadata i64 %14, metadata !17675, metadata !DIExpression()), !dbg !17709
  %15 = icmp sgt i64 %14, 1, !dbg !17710
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17710
  br label %22, !dbg !17711

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17712
  %19 = tail call fastcc i32 @elapsed.270() #27, !dbg !17714
  %20 = sext i32 %19 to i64, !dbg !17714
  %21 = add nsw i64 %18, %20, !dbg !17715
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17716
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17717
  store i64 %23, i64* %24, align 8, !dbg !17718
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !17719
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17672, metadata !DIExpression()), !dbg !17721
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17722
  br i1 %26, label %42, label %27, !dbg !17722

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17723
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17672, metadata !DIExpression()), !dbg !17721
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17727
  %31 = load i64, i64* %30, align 8, !dbg !17727
  %32 = icmp slt i64 %28, %31, !dbg !17728
  br i1 %32, label %33, label %38, !dbg !17729

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17727
  %35 = sub nsw i64 %31, %28, !dbg !17730
  store i64 %35, i64* %34, align 8, !dbg !17730
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17732
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17733
  tail call fastcc void @sys_dlist_insert.271(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !17734
  br label %44, !dbg !17735

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17736
  store i64 %39, i64* %24, align 8, !dbg !17736
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !17737
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17672, metadata !DIExpression()), !dbg !17721
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17722
  br i1 %41, label %42, label %27, !dbg !17722, !llvm.loop !17738

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17740
  tail call fastcc void @sys_dlist_append.272(%struct._dnode* noundef %43) #27, !dbg !17743
  br label %44, !dbg !17744

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !17745
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17746
  br i1 %46, label %47, label %54, !dbg !17747

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !17748
  call void @llvm.dbg.value(metadata i32 %48, metadata !17678, metadata !DIExpression()), !dbg !17749
  %49 = icmp ne i32 %48, 0, !dbg !17750
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17752
  br i1 %52, label %54, label %53, !dbg !17752

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #28, !dbg !17753
  br label %54, !dbg !17755

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17756, metadata !DIExpression()) #26, !dbg !17762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !17762
  call void @llvm.dbg.value(metadata i32 %9, metadata !17764, metadata !DIExpression()) #26, !dbg !17767
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17769, !srcloc !17770
  call void @llvm.dbg.value(metadata i32 undef, metadata !17665, metadata !DIExpression()), !dbg !17687
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17771
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.270() unnamed_addr #1 !dbg !17772 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17775
  %2 = icmp eq i32 %1, 0, !dbg !17776
  br i1 %2, label %3, label %5, !dbg !17775

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #28, !dbg !17777
  br label %5, !dbg !17775

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17775
  ret i32 %6, !dbg !17778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #3 !dbg !17779 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.275() #27, !dbg !17785
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17783, metadata !DIExpression()), !dbg !17786
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17787
  ret %struct._timeout* %2, !dbg !17788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.271(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !17789 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17793, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17794, metadata !DIExpression()), !dbg !17797
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17798
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17798
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17795, metadata !DIExpression()), !dbg !17797
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17799
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17800
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17801
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17802
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17803
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17804
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17805
  ret void, !dbg !17806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #3 !dbg !17807 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17811, metadata !DIExpression()), !dbg !17813
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17814
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.273(%struct._dnode* noundef %2) #27, !dbg !17815
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17812, metadata !DIExpression()), !dbg !17813
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17816
  ret %struct._timeout* %4, !dbg !17817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.272(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17818 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17823, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17824, metadata !DIExpression()), !dbg !17826
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17827
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17825, metadata !DIExpression()), !dbg !17826
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17828
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17829
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17830
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17831
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17832
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17833
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17834
  ret void, !dbg !17835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17836 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !17841
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17838, metadata !DIExpression()), !dbg !17842
  %2 = tail call fastcc i32 @elapsed.270() #27, !dbg !17843
  call void @llvm.dbg.value(metadata i32 %2, metadata !17839, metadata !DIExpression()), !dbg !17842
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17844
  br i1 %3, label %14, label %4, !dbg !17846

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17847
  %6 = load i64, i64* %5, align 8, !dbg !17847
  %7 = sext i32 %2 to i64, !dbg !17848
  %8 = sub nsw i64 %6, %7, !dbg !17849
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17850
  br i1 %9, label %14, label %10, !dbg !17851

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17852
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17852
  %13 = trunc i64 %12 to i32, !dbg !17852
  call void @llvm.dbg.value(metadata i32 %13, metadata !17840, metadata !DIExpression()), !dbg !17842
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17854
  call void @llvm.dbg.value(metadata i32 %15, metadata !17840, metadata !DIExpression()), !dbg !17842
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17855
  %17 = icmp ne i32 %16, 0, !dbg !17857
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17858
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17858
  call void @llvm.dbg.value(metadata i32 %20, metadata !17840, metadata !DIExpression()), !dbg !17842
  ret i32 %20, !dbg !17859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.273(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !17860 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17864, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17865, metadata !DIExpression()), !dbg !17866
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17867
  br i1 %2, label %5, label %3, !dbg !17868

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.274(%struct._dnode* noundef nonnull %0) #27, !dbg !17869
  br label %5, !dbg !17868

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17868
  ret %struct._dnode* %6, !dbg !17870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.274(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !17871 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17873, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17874, metadata !DIExpression()), !dbg !17875
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17876
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17877
  br i1 %3, label %7, label %4, !dbg !17878

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17879
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17879
  br label %7, !dbg !17878

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17878
  ret %struct._dnode* %8, !dbg !17880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.275() unnamed_addr #3 !dbg !17881 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17885, metadata !DIExpression()), !dbg !17886
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.276() #27, !dbg !17887
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17887
  ret %struct._dnode* %3, !dbg !17888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.276() unnamed_addr #3 !dbg !17889 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17893, metadata !DIExpression()), !dbg !17894
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17895
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17896
  ret i1 %2, !dbg !17897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17898 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17902, metadata !DIExpression()), !dbg !17907
  call void @llvm.dbg.value(metadata i32 -22, metadata !17903, metadata !DIExpression()), !dbg !17907
  call void @llvm.dbg.value(metadata i32 0, metadata !17904, metadata !DIExpression()), !dbg !17908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !17909
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17911, !srcloc !17703
  call void @llvm.dbg.value(metadata i32 undef, metadata !17700, metadata !DIExpression()) #26, !dbg !17913
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !17913
  call void @llvm.dbg.value(metadata i32 undef, metadata !17694, metadata !DIExpression()) #26, !dbg !17909
  call void @llvm.dbg.value(metadata i32 undef, metadata !17906, metadata !DIExpression()), !dbg !17908
  call void @llvm.dbg.value(metadata i32 -22, metadata !17903, metadata !DIExpression()), !dbg !17907
  call void @llvm.dbg.value(metadata i32 undef, metadata !17904, metadata !DIExpression()), !dbg !17908
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17903, metadata !DIExpression()), !dbg !17907
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.279(%struct._dnode* noundef %3) #27, !dbg !17914
  br i1 %4, label %5, label %6, !dbg !17918

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !17919
  call void @llvm.dbg.value(metadata i32 0, metadata !17903, metadata !DIExpression()), !dbg !17907
  br label %6, !dbg !17921

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17907
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17911
  call void @llvm.dbg.value(metadata i32 %8, metadata !17700, metadata !DIExpression()) #26, !dbg !17913
  call void @llvm.dbg.value(metadata i32 %8, metadata !17694, metadata !DIExpression()) #26, !dbg !17909
  call void @llvm.dbg.value(metadata i32 %8, metadata !17906, metadata !DIExpression()), !dbg !17908
  call void @llvm.dbg.value(metadata i32 %7, metadata !17903, metadata !DIExpression()), !dbg !17907
  call void @llvm.dbg.value(metadata i32 undef, metadata !17756, metadata !DIExpression()) #26, !dbg !17922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !17922
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #26, !dbg !17924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17926, !srcloc !17770
  call void @llvm.dbg.value(metadata i32 undef, metadata !17904, metadata !DIExpression()), !dbg !17908
  ret i32 %7, !dbg !17927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.279(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !17928 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17934, metadata !DIExpression()), !dbg !17935
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17936
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17936
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17937
  ret i1 %4, !dbg !17938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !17939 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17941, metadata !DIExpression()), !dbg !17942
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !17943
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17945
  br i1 %3, label %10, label %4, !dbg !17946

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17947
  %6 = load i64, i64* %5, align 8, !dbg !17947
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17949
  %8 = load i64, i64* %7, align 8, !dbg !17950
  %9 = add nsw i64 %8, %6, !dbg !17950
  store i64 %9, i64* %7, align 8, !dbg !17950
  br label %10, !dbg !17951

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17952
  tail call fastcc void @sys_dlist_remove.280(%struct._dnode* noundef %11) #27, !dbg !17953
  ret void, !dbg !17954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.280(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !17955 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17959, metadata !DIExpression()), !dbg !17962
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17963
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17963
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17960, metadata !DIExpression()), !dbg !17962
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17964
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17964
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17961, metadata !DIExpression()), !dbg !17962
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17965
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17966
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17967
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17968
  tail call fastcc void @sys_dnode_init.281(%struct._dnode* noundef %0) #27, !dbg !17969
  ret void, !dbg !17970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.281(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !17971 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17973, metadata !DIExpression()), !dbg !17974
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17975
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17976
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17977
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17978
  ret void, !dbg !17979
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17980 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17986, metadata !DIExpression()), !dbg !17991
  call void @llvm.dbg.value(metadata i64 0, metadata !17987, metadata !DIExpression()), !dbg !17991
  call void @llvm.dbg.value(metadata i32 0, metadata !17988, metadata !DIExpression()), !dbg !17992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !17993
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17995, !srcloc !17703
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17995
  call void @llvm.dbg.value(metadata i32 %3, metadata !17700, metadata !DIExpression()) #26, !dbg !17997
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !17997
  call void @llvm.dbg.value(metadata i32 %3, metadata !17694, metadata !DIExpression()) #26, !dbg !17993
  call void @llvm.dbg.value(metadata i32 %3, metadata !17990, metadata !DIExpression()), !dbg !17992
  call void @llvm.dbg.value(metadata i64 0, metadata !17987, metadata !DIExpression()), !dbg !17991
  call void @llvm.dbg.value(metadata i32 undef, metadata !17988, metadata !DIExpression()), !dbg !17992
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !17998
  call void @llvm.dbg.value(metadata i64 %4, metadata !17987, metadata !DIExpression()), !dbg !17991
  call void @llvm.dbg.value(metadata i32 %3, metadata !17756, metadata !DIExpression()) #26, !dbg !18001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !18001
  call void @llvm.dbg.value(metadata i32 %3, metadata !17764, metadata !DIExpression()) #26, !dbg !18003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18005, !srcloc !17770
  call void @llvm.dbg.value(metadata i32 undef, metadata !17988, metadata !DIExpression()), !dbg !17992
  ret i64 %4, !dbg !18006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18007 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18009, metadata !DIExpression()), !dbg !18013
  call void @llvm.dbg.value(metadata i64 0, metadata !18010, metadata !DIExpression()), !dbg !18013
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.282(%struct._timeout* noundef %0) #27, !dbg !18014
  br i1 %2, label %21, label %3, !dbg !18016

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !18017
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18011, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.value(metadata i64 0, metadata !18010, metadata !DIExpression()), !dbg !18013
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18019
  br i1 %5, label %16, label %6, !dbg !18021

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18011, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.value(metadata i64 %8, metadata !18010, metadata !DIExpression()), !dbg !18013
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18022
  %10 = load i64, i64* %9, align 8, !dbg !18022
  %11 = add nsw i64 %10, %8, !dbg !18024
  call void @llvm.dbg.value(metadata i64 %11, metadata !18010, metadata !DIExpression()), !dbg !18013
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18025
  br i1 %12, label %16, label %13, !dbg !18027

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !18028
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18011, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.value(metadata i64 %11, metadata !18010, metadata !DIExpression()), !dbg !18013
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18019
  br i1 %15, label %16, label %6, !dbg !18021, !llvm.loop !18029

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18013
  call void @llvm.dbg.value(metadata i64 %17, metadata !18010, metadata !DIExpression()), !dbg !18013
  %18 = tail call fastcc i32 @elapsed.270() #27, !dbg !18031
  %19 = sext i32 %18 to i64, !dbg !18031
  %20 = sub nsw i64 %17, %19, !dbg !18032
  br label %21, !dbg !18033

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18013
  ret i64 %22, !dbg !18034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.282(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #3 !dbg !18035 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18039, metadata !DIExpression()), !dbg !18040
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18041
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.279(%struct._dnode* noundef %2) #27, !dbg !18042
  %4 = xor i1 %3, true, !dbg !18043
  ret i1 %4, !dbg !18044
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18045 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18047, metadata !DIExpression()), !dbg !18052
  call void @llvm.dbg.value(metadata i64 0, metadata !18048, metadata !DIExpression()), !dbg !18052
  call void @llvm.dbg.value(metadata i32 0, metadata !18049, metadata !DIExpression()), !dbg !18053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !18054
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18056, !srcloc !17703
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18056
  call void @llvm.dbg.value(metadata i32 %3, metadata !17700, metadata !DIExpression()) #26, !dbg !18058
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !18058
  call void @llvm.dbg.value(metadata i32 %3, metadata !17694, metadata !DIExpression()) #26, !dbg !18054
  call void @llvm.dbg.value(metadata i32 %3, metadata !18051, metadata !DIExpression()), !dbg !18053
  call void @llvm.dbg.value(metadata i64 0, metadata !18048, metadata !DIExpression()), !dbg !18052
  call void @llvm.dbg.value(metadata i32 undef, metadata !18049, metadata !DIExpression()), !dbg !18053
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18059
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !18062
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18048, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18052
  call void @llvm.dbg.value(metadata i32 %3, metadata !17756, metadata !DIExpression()) #26, !dbg !18063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !18063
  call void @llvm.dbg.value(metadata i32 %3, metadata !17764, metadata !DIExpression()) #26, !dbg !18065
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18067, !srcloc !17770
  call void @llvm.dbg.value(metadata i32 undef, metadata !18049, metadata !DIExpression()), !dbg !18053
  %6 = add i64 %5, %4, !dbg !18068
  ret i64 %6, !dbg !18069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18070 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18072, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata i32 0, metadata !18073, metadata !DIExpression()), !dbg !18077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !18078
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18080, !srcloc !17703
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18080
  call void @llvm.dbg.value(metadata i32 %2, metadata !17700, metadata !DIExpression()) #26, !dbg !18082
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !18082
  call void @llvm.dbg.value(metadata i32 %2, metadata !17694, metadata !DIExpression()) #26, !dbg !18078
  call void @llvm.dbg.value(metadata i32 %2, metadata !18075, metadata !DIExpression()), !dbg !18077
  call void @llvm.dbg.value(metadata i32 -1, metadata !18072, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata i32 undef, metadata !18073, metadata !DIExpression()), !dbg !18077
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !18083
  call void @llvm.dbg.value(metadata i32 %3, metadata !18072, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata i32 %2, metadata !17756, metadata !DIExpression()) #26, !dbg !18086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !18086
  call void @llvm.dbg.value(metadata i32 %2, metadata !17764, metadata !DIExpression()) #26, !dbg !18088
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !18090, !srcloc !17770
  call void @llvm.dbg.value(metadata i32 undef, metadata !18073, metadata !DIExpression()), !dbg !18077
  ret i32 %3, !dbg !18091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18094, metadata !DIExpression()), !dbg !18104
  call void @llvm.dbg.value(metadata i1 %1, metadata !18095, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18104
  call void @llvm.dbg.value(metadata i32 0, metadata !18096, metadata !DIExpression()), !dbg !18105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !18106
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18108, !srcloc !17703
  call void @llvm.dbg.value(metadata i32 undef, metadata !17700, metadata !DIExpression()) #26, !dbg !18110
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !18110
  call void @llvm.dbg.value(metadata i32 undef, metadata !17694, metadata !DIExpression()) #26, !dbg !18106
  call void @llvm.dbg.value(metadata i32 undef, metadata !18098, metadata !DIExpression()), !dbg !18105
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()), !dbg !18105
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !18111
  call void @llvm.dbg.value(metadata i32 %4, metadata !18099, metadata !DIExpression()), !dbg !18112
  call void @llvm.dbg.value(metadata i1 undef, metadata !18102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18112
  %5 = icmp slt i32 %4, 2, !dbg !18113
  call void @llvm.dbg.value(metadata i1 %5, metadata !18103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18112
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18114
  call void @llvm.dbg.value(metadata i1 %6, metadata !18102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18112
  br i1 %7, label %11, label %8, !dbg !18114

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18116
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18116
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #28, !dbg !18118
  br label %11, !dbg !18119

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18108
  call void @llvm.dbg.value(metadata i32 %12, metadata !17700, metadata !DIExpression()) #26, !dbg !18110
  call void @llvm.dbg.value(metadata i32 %12, metadata !17694, metadata !DIExpression()) #26, !dbg !18106
  call void @llvm.dbg.value(metadata i32 %12, metadata !18098, metadata !DIExpression()), !dbg !18105
  call void @llvm.dbg.value(metadata i32 undef, metadata !17756, metadata !DIExpression()) #26, !dbg !18120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !18120
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #26, !dbg !18122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !18124, !srcloc !17770
  call void @llvm.dbg.value(metadata i32 1, metadata !18096, metadata !DIExpression()), !dbg !18105
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()), !dbg !18105
  ret void, !dbg !18125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18130, metadata !DIExpression()), !dbg !18135
  tail call void @z_time_slice(i32 noundef %0) #28, !dbg !18136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !18137
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18139, !srcloc !17703
  call void @llvm.dbg.value(metadata i32 undef, metadata !17700, metadata !DIExpression()) #26, !dbg !18141
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !18141
  call void @llvm.dbg.value(metadata i32 undef, metadata !17694, metadata !DIExpression()) #26, !dbg !18137
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()), !dbg !18135
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18135
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()), !dbg !18135
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !18142
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18143
  br i1 %4, label %28, label %5, !dbg !18144

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18145
  %10 = load i64, i64* %9, align 8, !dbg !18145
  %11 = sext i32 %8 to i64, !dbg !18146
  %12 = icmp sgt i64 %10, %11, !dbg !18147
  br i1 %12, label %26, label %13, !dbg !18148

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18135
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18132, metadata !DIExpression()), !dbg !18149
  %15 = trunc i64 %10 to i32, !dbg !18150
  call void @llvm.dbg.value(metadata i32 %15, metadata !18134, metadata !DIExpression()), !dbg !18149
  %16 = sext i32 %15 to i64, !dbg !18151
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18152
  %18 = add i64 %17, %16, !dbg !18152
  store i64 %18, i64* @curr_tick, align 8, !dbg !18152
  store i64 0, i64* %9, align 8, !dbg !18153
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !18154
  call void @llvm.dbg.value(metadata i32 %14, metadata !17756, metadata !DIExpression()) #26, !dbg !18155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !18155
  call void @llvm.dbg.value(metadata i32 %14, metadata !17764, metadata !DIExpression()) #26, !dbg !18157
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18159, !srcloc !17770
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18160
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18160
  tail call void %20(%struct._timeout* noundef nonnull %6) #28, !dbg !18161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !18162
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18164, !srcloc !17703
  call void @llvm.dbg.value(metadata i32 undef, metadata !17700, metadata !DIExpression()) #26, !dbg !18166
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !18166
  call void @llvm.dbg.value(metadata i32 undef, metadata !17694, metadata !DIExpression()) #26, !dbg !18162
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()), !dbg !18135
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18167
  %23 = sub nsw i32 %22, %15, !dbg !18167
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18135
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()), !dbg !18135
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !18142
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18143
  br i1 %25, label %28, label %5, !dbg !18144, !llvm.loop !18168

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18170
  store i64 %27, i64* %9, align 8, !dbg !18170
  br label %32, !dbg !18173

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18135
  %31 = sext i32 %30 to i64, !dbg !18174
  br label %32, !dbg !18174

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18174
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18135
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18175
  %37 = add i64 %36, %33, !dbg !18175
  store i64 %37, i64* @curr_tick, align 8, !dbg !18175
  store i32 0, i32* @announce_remaining, align 4, !dbg !18176
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !18177
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #28, !dbg !18178
  call void @llvm.dbg.value(metadata i32 %35, metadata !17756, metadata !DIExpression()) #26, !dbg !18179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !18179
  call void @llvm.dbg.value(metadata i32 %35, metadata !17764, metadata !DIExpression()) #26, !dbg !18181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #26, !dbg !18183, !srcloc !17770
  ret void, !dbg !18184
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18185 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18189, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.value(metadata i32 0, metadata !18190, metadata !DIExpression()), !dbg !18194
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17688, metadata !DIExpression()) #26, !dbg !18195
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18197, !srcloc !17703
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18197
  call void @llvm.dbg.value(metadata i32 %2, metadata !17700, metadata !DIExpression()) #26, !dbg !18199
  call void @llvm.dbg.value(metadata i32 undef, metadata !17701, metadata !DIExpression()) #26, !dbg !18199
  call void @llvm.dbg.value(metadata i32 %2, metadata !17694, metadata !DIExpression()) #26, !dbg !18195
  call void @llvm.dbg.value(metadata i32 %2, metadata !18192, metadata !DIExpression()), !dbg !18194
  call void @llvm.dbg.value(metadata i64 0, metadata !18189, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.value(metadata i32 undef, metadata !18190, metadata !DIExpression()), !dbg !18194
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18200
  %4 = tail call fastcc i32 @elapsed.270() #27, !dbg !18203
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18189, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18193
  call void @llvm.dbg.value(metadata i32 %2, metadata !17756, metadata !DIExpression()) #26, !dbg !18204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17761, metadata !DIExpression()) #26, !dbg !18204
  call void @llvm.dbg.value(metadata i32 %2, metadata !17764, metadata !DIExpression()) #26, !dbg !18206
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !18208, !srcloc !17770
  call void @llvm.dbg.value(metadata i32 undef, metadata !18190, metadata !DIExpression()), !dbg !18194
  %5 = sext i32 %4 to i64, !dbg !18203
  %6 = add i64 %3, %5, !dbg !18209
  ret i64 %6, !dbg !18210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18211 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !18212
  %2 = trunc i64 %1 to i32, !dbg !18213
  ret i32 %2, !dbg !18214
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18215 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !18216
  ret i64 %1, !dbg !18217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18220, metadata !DIExpression()), !dbg !18227
  %2 = icmp eq i32 %0, 0, !dbg !18228
  br i1 %2, label %10, label %3, !dbg !18230

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !18231
  call void @llvm.dbg.value(metadata i32 %4, metadata !18221, metadata !DIExpression()), !dbg !18227
  %5 = mul i32 %0, 84, !dbg !18232
  call void @llvm.dbg.value(metadata i32 %5, metadata !18222, metadata !DIExpression()), !dbg !18227
  br label %6, !dbg !18233

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !18234
  call void @llvm.dbg.value(metadata i32 %7, metadata !18223, metadata !DIExpression()), !dbg !18235
  %8 = sub i32 %7, %4, !dbg !18236
  %9 = icmp ult i32 %8, %5, !dbg !18238
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18240 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !18241
  ret i32 %1, !dbg !18242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18243 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #28, !dbg !18245
  ret i32 %1, !dbg !18246
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18247 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18251, metadata !DIExpression()), !dbg !18253
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18254

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !18255
  br label %14, !dbg !18259

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18252, metadata !DIExpression()), !dbg !18253
  %6 = icmp slt i64 %2, -1, !dbg !18260
  br i1 %6, label %7, label %9, !dbg !18263

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18264
  br label %14, !dbg !18265

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !18267
  %11 = icmp ugt i64 %2, 1, !dbg !18268
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18268
  %13 = add nsw i64 %10, %12, !dbg !18269
  br label %14, !dbg !18270

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18271
  ret i64 %15, !dbg !18272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #5 !dbg !18273 {
  ret void, !dbg !18275
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18276 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18278, metadata !DIExpression()), !dbg !18298
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18279, metadata !DIExpression()), !dbg !18299
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18300

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18301

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18279, metadata !DIExpression()), !dbg !18299
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18302
  %6 = load i8*, i8** %5, align 4, !dbg !18302
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18306
  %8 = load i32, i32* %7, align 4, !dbg !18306
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !18307
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18308
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18279, metadata !DIExpression()), !dbg !18299
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18309
  br i1 %10, label %3, label %2, !dbg !18300, !llvm.loop !18311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18313 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18317, metadata !DIExpression()), !dbg !18320
  call void @llvm.dbg.value(metadata i8* %1, metadata !18318, metadata !DIExpression()), !dbg !18320
  call void @llvm.dbg.value(metadata i32 %2, metadata !18319, metadata !DIExpression()), !dbg !18320
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18321
  tail call fastcc void @z_waitq_init.296(%struct._wait_q_t* noundef nonnull %4) #27, !dbg !18322
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18323
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #28, !dbg !18324
  ret void, !dbg !18325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.296(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !18326 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18331, metadata !DIExpression()), !dbg !18332
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18333
  tail call fastcc void @sys_dlist_init.297(%struct._dnode* noundef %2) #27, !dbg !18334
  ret void, !dbg !18335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.297(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !18336 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18341, metadata !DIExpression()), !dbg !18342
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18343
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18344
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18345
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18346
  ret void, !dbg !18347
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18348 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18359, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18356, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i32 %1, metadata !18357, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i32 %2, metadata !18358, metadata !DIExpression()), !dbg !18369
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #28, !dbg !18370
  call void @llvm.dbg.value(metadata i64 %6, metadata !18361, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i8* null, metadata !18362, metadata !DIExpression()), !dbg !18369
  %7 = icmp eq i64 %5, -1, !dbg !18371
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18371
  call void @llvm.dbg.value(metadata i64 %8, metadata !18361, metadata !DIExpression()), !dbg !18369
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18373, metadata !DIExpression()) #26, !dbg !18380
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18382, !srcloc !18388
  call void @llvm.dbg.value(metadata i32 undef, metadata !18385, metadata !DIExpression()) #26, !dbg !18389
  call void @llvm.dbg.value(metadata i32 undef, metadata !18386, metadata !DIExpression()) #26, !dbg !18389
  call void @llvm.dbg.value(metadata i32 undef, metadata !18379, metadata !DIExpression()) #26, !dbg !18380
  call void @llvm.dbg.value(metadata i32 undef, metadata !18363, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i8 0, metadata !18368, metadata !DIExpression()), !dbg !18369
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18362, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i8 0, metadata !18368, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i32 undef, metadata !18363, metadata !DIExpression()), !dbg !18369
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #28, !dbg !18390
  call void @llvm.dbg.value(metadata i8* %12, metadata !18362, metadata !DIExpression()), !dbg !18369
  %13 = tail call i64 @sys_clock_tick_get() #28, !dbg !18392
  call void @llvm.dbg.value(metadata i64 %13, metadata !18360, metadata !DIExpression()), !dbg !18369
  %14 = icmp eq i8* %12, null, !dbg !18393
  br i1 %14, label %15, label %31, !dbg !18395

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18363, metadata !DIExpression()), !dbg !18369
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18395

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18368, metadata !DIExpression()), !dbg !18369
  %20 = sub nsw i64 %8, %18, !dbg !18396
  %21 = icmp slt i64 %20, 1, !dbg !18397
  br i1 %21, label %31, label %22, !dbg !18398

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18369
  call void @llvm.dbg.value(metadata i8 undef, metadata !18368, metadata !DIExpression()), !dbg !18369
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18399
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18399
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #28, !dbg !18399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18373, metadata !DIExpression()) #26, !dbg !18400
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18402, !srcloc !18388
  call void @llvm.dbg.value(metadata i32 undef, metadata !18385, metadata !DIExpression()) #26, !dbg !18404
  call void @llvm.dbg.value(metadata i32 undef, metadata !18386, metadata !DIExpression()) #26, !dbg !18404
  call void @llvm.dbg.value(metadata i32 undef, metadata !18379, metadata !DIExpression()) #26, !dbg !18400
  call void @llvm.dbg.value(metadata i32 undef, metadata !18363, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i8* null, metadata !18362, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i32 undef, metadata !18363, metadata !DIExpression()), !dbg !18369
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #28, !dbg !18390
  call void @llvm.dbg.value(metadata i8* %28, metadata !18362, metadata !DIExpression()), !dbg !18369
  %29 = tail call i64 @sys_clock_tick_get() #28, !dbg !18392
  call void @llvm.dbg.value(metadata i64 %29, metadata !18360, metadata !DIExpression()), !dbg !18369
  %30 = icmp eq i8* %28, null, !dbg !18393
  br i1 %30, label %17, label %31, !dbg !18395, !llvm.loop !18405

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18390
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18369
  call void @llvm.dbg.value(metadata i8* %33, metadata !18362, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i32 %34, metadata !18408, metadata !DIExpression()) #26, !dbg !18414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18413, metadata !DIExpression()) #26, !dbg !18414
  call void @llvm.dbg.value(metadata i32 %34, metadata !18416, metadata !DIExpression()) #26, !dbg !18419
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #26, !dbg !18421, !srcloc !18422
  ret i8* %33, !dbg !18423
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18424 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18430, metadata !DIExpression()), !dbg !18432
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18428, metadata !DIExpression()), !dbg !18432
  call void @llvm.dbg.value(metadata i32 %1, metadata !18429, metadata !DIExpression()), !dbg !18432
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !18433
  call void @llvm.dbg.value(metadata i8* %4, metadata !18431, metadata !DIExpression()), !dbg !18432
  ret i8* %4, !dbg !18434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18435 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18439, metadata !DIExpression()), !dbg !18442
  call void @llvm.dbg.value(metadata i8* %1, metadata !18440, metadata !DIExpression()), !dbg !18442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18373, metadata !DIExpression()) #26, !dbg !18443
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18445, !srcloc !18388
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18445
  call void @llvm.dbg.value(metadata i32 %4, metadata !18385, metadata !DIExpression()) #26, !dbg !18447
  call void @llvm.dbg.value(metadata i32 undef, metadata !18386, metadata !DIExpression()) #26, !dbg !18447
  call void @llvm.dbg.value(metadata i32 %4, metadata !18379, metadata !DIExpression()) #26, !dbg !18443
  call void @llvm.dbg.value(metadata i32 %4, metadata !18441, metadata !DIExpression()), !dbg !18442
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18448
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #28, !dbg !18449
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18450
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #28, !dbg !18452
  %8 = icmp eq i32 %7, 0, !dbg !18453
  br i1 %8, label %12, label %9, !dbg !18454

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18455
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18456
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #28, !dbg !18456
  br label %13, !dbg !18458

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18408, metadata !DIExpression()) #26, !dbg !18459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18413, metadata !DIExpression()) #26, !dbg !18459
  call void @llvm.dbg.value(metadata i32 %4, metadata !18416, metadata !DIExpression()) #26, !dbg !18462
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !18464, !srcloc !18422
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18465
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!914, !2, !2615, !27, !388, !412, !2617, !2619, !2652, !2686, !422, !472, !2688, !2691, !2702, !2748, !2750, !2778, !2806, !2849, !2920, !2965, !501, !639, !2993, !675, !685, !710, !2998, !722, !944, !3000, !1080, !1146, !1454, !1678, !3038, !1789, !1879, !3040, !3125, !3189, !1928, !3192, !1935, !2302, !3210, !3212, !2322, !2430, !3316, !2545, !3319, !2584}
!llvm.ident = !{!3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321, !3321}
!llvm.module.flags = !{!3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !27, file: !114, line: 25, type: !141, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !107, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !103, line: 46, baseType: !104)
!103 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !105)
!105 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !295, !297, !299, !301, !303, !305, !307, !309, !340, !344, !349, !354, !356, !358, !365, !370, !377, !382, !384}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "version_chan", scope: !27, file: !114, line: 25, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !124, !128, !130, !131, !139, !264}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !116, file: !117, line: 32, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !127)
!127 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!136, !13, !137}
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !138, line: 214, baseType: !32)
!138 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!139 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !143)
!142 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !165, !262, !263}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !141, file: !142, line: 2722, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !148)
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !147, file: !146, line: 232, baseType: !150, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !153)
!153 = !{!154, !160}
!154 = !DIDerivedType(tag: DW_TAG_member, scope: !152, file: !151, line: 38, baseType: !155, size: 32)
!155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !152, file: !151, line: 38, size: 32, elements: !156)
!156 = !{!157, !159}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !155, file: !151, line: 39, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !155, file: !151, line: 40, baseType: !158, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, scope: !152, file: !151, line: 42, baseType: !161, size: 32, offset: 32)
!161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !152, file: !151, line: 42, size: 32, elements: !162)
!162 = !{!163, !164}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !161, file: !151, line: 43, baseType: !158, size: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !161, file: !151, line: 44, baseType: !158, size: 32)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !141, file: !142, line: 2724, baseType: !166, size: 32, offset: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170, !217, !230, !231, !232, !233, !239, !257}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !167, file: !168, line: 247, baseType: !171, size: 384)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !172)
!172 = !{!173, !187, !189, !192, !193, !204, !205, !206}
!173 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !168, line: 60, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !171, file: !168, line: 60, size: 64, elements: !175)
!175 = !{!176, !178}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !174, file: !168, line: 61, baseType: !177, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !152)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !174, file: !168, line: 62, baseType: !179, size: 64)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !181)
!180 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !179, file: !180, line: 50, baseType: !183, size: 64)
!183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 64, elements: !185)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!185 = !{!186}
!186 = !DISubrange(count: 2)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !171, file: !168, line: 68, baseType: !188, size: 32, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !171, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !191)
!191 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !171, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!193 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !168, line: 90, baseType: !194, size: 16, offset: 112)
!194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !171, file: !168, line: 90, size: 16, elements: !195)
!195 = !{!196, !203}
!196 = !DIDerivedType(tag: DW_TAG_member, scope: !194, file: !168, line: 91, baseType: !197, size: 16)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !194, file: !168, line: 91, size: 16, elements: !198)
!198 = !{!199, !202}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !197, file: !168, line: 96, baseType: !200, size: 8)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !201)
!201 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !197, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !194, file: !168, line: 100, baseType: !126, size: 16)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !171, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !171, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !171, file: !168, line: 131, baseType: !207, size: 192, offset: 192)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !208)
!208 = !{!209, !210, !216}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !207, file: !146, line: 245, baseType: !177, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !207, file: !146, line: 246, baseType: !211, size: 32, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{null, !215}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !207, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !167, file: !168, line: 250, baseType: !218, size: 288, offset: 384)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !220)
!219 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!220 = !{!221, !222, !223, !224, !225, !226, !227, !228, !229}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !218, file: !219, line: 26, baseType: !108, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !218, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !218, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !218, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !218, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !218, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !218, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !218, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !218, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !167, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !167, file: !168, line: 256, baseType: !145, size: 64, offset: 704)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !167, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !167, file: !168, line: 300, baseType: !234, size: 96, offset: 800)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !235)
!235 = !{!236, !237, !238}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !234, file: !168, line: 153, baseType: !22, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !234, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !234, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !167, file: !168, line: 325, baseType: !240, size: 32, offset: 896)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !242)
!242 = !{!243, !252, !253}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !241, file: !142, line: 5074, baseType: !244, size: 96)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 57, baseType: !248, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !245, line: 57, flags: DIFlagFwdDecl)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !244, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !244, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !241, file: !142, line: 5075, baseType: !145, size: 64, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !241, file: !142, line: 5076, baseType: !254, offset: 160)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!255 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!256 = !{}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !167, file: !168, line: 343, baseType: !258, size: 64, offset: 928)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !259)
!259 = !{!260, !261}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !258, file: !219, line: 63, baseType: !108, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !258, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !141, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !141, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !265, size: 32, offset: 192)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !270)
!270 = !{!271, !272, !273, !289}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !117, line: 88, baseType: !120, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !269, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !269, file: !117, line: 93, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !277)
!277 = !{!278, !279, !280, !281, !282, !284, !285, !286, !287, !288}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !276, file: !142, line: 4206, baseType: !145, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !276, file: !142, line: 4208, baseType: !254, offset: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !276, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !276, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !276, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !276, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !276, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !276, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !276, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !276, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !269, file: !117, line: 96, baseType: !290, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !294}
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_zbus_mutex_acc_data_chan", scope: !27, file: !114, line: 35, type: !141, isLocal: true, isDefinition: true, align: 32)
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "acc_data_chan", scope: !27, file: !114, line: 35, type: !115, isLocal: false, isDefinition: true, align: 32)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "_zbus_mutex_simple_chan", scope: !27, file: !114, line: 57, type: !141, isLocal: true, isDefinition: true, align: 32)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "simple_chan", scope: !27, file: !114, line: 57, type: !115, isLocal: false, isDefinition: true, align: 32)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "foo_lis", scope: !27, file: !114, line: 73, type: !269, isLocal: false, isDefinition: true, align: 32)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_bar_sub", scope: !27, file: !114, line: 75, type: !276, isLocal: false, isDefinition: true, align: 32)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "bar_sub", scope: !27, file: !114, line: 75, type: !269, isLocal: false, isDefinition: true, align: 32)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "_k_thread_data_subscriber_task_id", scope: !27, file: !114, line: 92, type: !311, isLocal: false, isDefinition: true, align: 32)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !142, line: 620, size: 384, elements: !312)
!312 = !{!313, !314, !322, !323, !328, !329, !330, !331, !332, !333, !335, !339}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !311, file: !142, line: 621, baseType: !166, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !311, file: !142, line: 622, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !318)
!317 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = !{!321}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !318, file: !319, line: 48, baseType: !123, size: 8)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !311, file: !142, line: 623, baseType: !32, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !311, file: !142, line: 624, baseType: !324, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !317, line: 46, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !106, !106, !106}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !311, file: !142, line: 625, baseType: !106, size: 32, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !311, file: !142, line: 626, baseType: !106, size: 32, offset: 160)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !311, file: !142, line: 627, baseType: !106, size: 32, offset: 192)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !311, file: !142, line: 628, baseType: !107, size: 32, offset: 224)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !311, file: !142, line: 629, baseType: !108, size: 32, offset: 256)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !311, file: !142, line: 630, baseType: !334, size: 32, offset: 288)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !311, file: !142, line: 631, baseType: !336, size: 32, offset: 320)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!337 = !DISubroutineType(types: !338)
!338 = !{null}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !311, file: !142, line: 632, baseType: !121, size: 32, offset: 352)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "subscriber_task_id", scope: !27, file: !114, line: 92, type: !342, isLocal: false, isDefinition: true)
!342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !166)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_bar_sub", scope: !27, file: !114, line: 75, type: !346, isLocal: true, isDefinition: true, align: 32)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 128, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 16)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "_k_thread_stack_subscriber_task_id", scope: !27, file: !114, line: 92, type: !351, isLocal: false, isDefinition: true, align: 512)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 4608, elements: !352)
!352 = !{!353}
!353 = !DISubrange(count: 576)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "_k_thread_obj_subscriber_task_id", scope: !27, file: !114, line: 92, type: !167, isLocal: false, isDefinition: true)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 95, type: !107, isLocal: true, isDefinition: true)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !27, file: !114, line: 25, type: !360, isLocal: true, isDefinition: true)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !114, line: 13, size: 32, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !360, file: !114, line: 14, baseType: !190, size: 8)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !360, file: !114, line: 15, baseType: !190, size: 8, offset: 8)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !360, file: !114, line: 16, baseType: !126, size: 16, offset: 16)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !27, file: !114, line: 25, type: !367, isLocal: true, isDefinition: true)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 32, elements: !368)
!368 = !{!369}
!369 = !DISubrange(count: 1)
!370 = !DIGlobalVariableExpression(var: !371, expr: !DIExpression())
!371 = distinct !DIGlobalVariable(name: "_zbus_message_acc_data_chan", scope: !27, file: !114, line: 35, type: !372, isLocal: true, isDefinition: true)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acc_msg", file: !114, line: 19, size: 96, elements: !373)
!373 = !{!374, !375, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !372, file: !114, line: 20, baseType: !107, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !372, file: !114, line: 21, baseType: !107, size: 32, offset: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !372, file: !114, line: 22, baseType: !107, size: 32, offset: 64)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "_zbus_observers_acc_data_chan", scope: !27, file: !114, line: 35, type: !379, isLocal: true, isDefinition: true)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 96, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 3)
!382 = !DIGlobalVariableExpression(var: !383, expr: !DIExpression())
!383 = distinct !DIGlobalVariable(name: "_zbus_message_simple_chan", scope: !27, file: !114, line: 57, type: !107, isLocal: true, isDefinition: true)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "_zbus_observers_simple_chan", scope: !27, file: !114, line: 57, type: !367, isLocal: true, isDefinition: true)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !388, file: !403, line: 18, type: !404, isLocal: false, isDefinition: true)
!388 = distinct !DICompileUnit(language: DW_LANG_C99, file: !389, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !390, globals: !402, splitDebugInlining: false, nameTableKind: None)
!389 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!390 = !{!22, !106, !24, !391, !393, !395, !137, !107, !396, !397, !399, !400, !283, !401, !126, !121}
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!392 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 32)
!394 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!402 = !{!386}
!403 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !405, file: !406, line: 17, baseType: !121, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !405, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "_char_out", scope: !412, file: !416, line: 54, type: !417, isLocal: false, isDefinition: true)
!412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !413, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, globals: !415, splitDebugInlining: false, nameTableKind: None)
!413 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!414 = !{!106, !107}
!415 = !{!410}
!416 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DISubroutineType(types: !419)
!419 = !{!107, !107}
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !422, file: !439, line: 56, type: !440, isLocal: true, isDefinition: true, align: 32)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !424, globals: !438, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !427, line: 379, baseType: !428)
!427 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 370, size: 224, elements: !429)
!429 = !{!430, !432, !433, !434, !435, !436, !437}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !428, file: !427, line: 372, baseType: !431, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !428, file: !427, line: 373, baseType: !431, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !428, file: !427, line: 374, baseType: !431, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !428, file: !427, line: 375, baseType: !431, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !428, file: !427, line: 376, baseType: !431, size: 32, offset: 128)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !428, file: !427, line: 377, baseType: !431, size: 32, offset: 160)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !428, file: !427, line: 378, baseType: !431, size: 32, offset: 192)
!438 = !{!420}
!439 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !443)
!442 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!443 = !{!444, !469}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !441, file: !442, line: 60, baseType: !445, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!446 = !DISubroutineType(types: !447)
!447 = !{!107, !448}
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !452)
!451 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!452 = !{!453, !454, !455, !456, !462, !463}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !450, file: !451, line: 380, baseType: !121, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !450, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !450, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !450, file: !451, line: 386, baseType: !457, size: 32, offset: 96)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !459)
!459 = !{!460, !461}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !458, file: !451, line: 359, baseType: !190, size: 8)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !458, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !450, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !450, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !451, line: 43, baseType: !467)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !468)
!468 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !441, file: !442, line: 65, baseType: !448, size: 32, offset: 32)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !472, file: !475, line: 71, type: !476, isLocal: true, isDefinition: true, align: 32)
!472 = distinct !DICompileUnit(language: DW_LANG_C99, file: !473, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !474, splitDebugInlining: false, nameTableKind: None)
!473 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!474 = !{!470}
!475 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !478)
!478 = !{!479, !498}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !477, file: !442, line: 60, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 32)
!481 = !DISubroutineType(types: !482)
!482 = !{!107, !483}
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !486)
!486 = !{!487, !488, !489, !490, !496, !497}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !485, file: !451, line: 380, baseType: !121, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !485, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !485, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !485, file: !451, line: 386, baseType: !491, size: 32, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !493)
!493 = !{!494, !495}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !492, file: !451, line: 359, baseType: !190, size: 8)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !492, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !485, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !485, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !477, file: !442, line: 65, baseType: !483, size: 32, offset: 32)
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !501, file: !508, line: 17, type: !632, isLocal: false, isDefinition: true)
!501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !502, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !503, globals: !504, splitDebugInlining: false, nameTableKind: None)
!502 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!503 = !{!137, !107, !108, !106}
!504 = !{!499, !505, !628}
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !507, file: !508, line: 198, type: !616, isLocal: true, isDefinition: true)
!507 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !508, file: !508, line: 175, type: !509, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !501, retainedNodes: !611)
!508 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!509 = !DISubroutineType(types: !510)
!510 = !{null, !511}
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !513)
!513 = !{!514, !572, !584, !585, !586, !587, !593, !606}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !512, file: !168, line: 247, baseType: !515, size: 384)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !516)
!516 = !{!517, !541, !548, !549, !550, !559, !560, !561}
!517 = !DIDerivedType(tag: DW_TAG_member, scope: !515, file: !168, line: 60, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !515, file: !168, line: 60, size: 64, elements: !519)
!519 = !{!520, !535}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !518, file: !168, line: 61, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !523)
!523 = !{!524, !530}
!524 = !DIDerivedType(tag: DW_TAG_member, scope: !522, file: !151, line: 38, baseType: !525, size: 32)
!525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !522, file: !151, line: 38, size: 32, elements: !526)
!526 = !{!527, !529}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !525, file: !151, line: 39, baseType: !528, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !525, file: !151, line: 40, baseType: !528, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, scope: !522, file: !151, line: 42, baseType: !531, size: 32, offset: 32)
!531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !522, file: !151, line: 42, size: 32, elements: !532)
!532 = !{!533, !534}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !531, file: !151, line: 43, baseType: !528, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !531, file: !151, line: 44, baseType: !528, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !518, file: !168, line: 62, baseType: !536, size: 64)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !536, file: !180, line: 50, baseType: !539, size: 64)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 64, elements: !185)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !515, file: !168, line: 68, baseType: !542, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !544)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !545)
!545 = !{!546}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !544, file: !146, line: 232, baseType: !547, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !522)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !515, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !515, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !515, file: !168, line: 90, baseType: !551, size: 16, offset: 112)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !515, file: !168, line: 90, size: 16, elements: !552)
!552 = !{!553, !558}
!553 = !DIDerivedType(tag: DW_TAG_member, scope: !551, file: !168, line: 91, baseType: !554, size: 16)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !551, file: !168, line: 91, size: 16, elements: !555)
!555 = !{!556, !557}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !554, file: !168, line: 96, baseType: !200, size: 8)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !554, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !551, file: !168, line: 100, baseType: !126, size: 16)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !515, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !515, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !515, file: !168, line: 131, baseType: !562, size: 192, offset: 192)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !563)
!563 = !{!564, !565, !571}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !562, file: !146, line: 245, baseType: !521, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !562, file: !146, line: 246, baseType: !566, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !567)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DISubroutineType(types: !569)
!569 = !{null, !570}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !562, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !512, file: !168, line: 250, baseType: !573, size: 288, offset: 384)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !574)
!574 = !{!575, !576, !577, !578, !579, !580, !581, !582, !583}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !573, file: !219, line: 26, baseType: !108, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !573, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !573, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !573, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !573, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !573, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !573, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !573, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !573, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !512, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !512, file: !168, line: 256, baseType: !543, size: 64, offset: 704)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !512, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !512, file: !168, line: 300, baseType: !588, size: 96, offset: 800)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !589)
!589 = !{!590, !591, !592}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !588, file: !168, line: 153, baseType: !22, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !588, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !588, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !512, file: !168, line: 325, baseType: !594, size: 32, offset: 896)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !596)
!596 = !{!597, !603, !604}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !595, file: !142, line: 5074, baseType: !598, size: 96)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !599)
!599 = !{!600, !601, !602}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !598, file: !245, line: 57, baseType: !248, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !598, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !598, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !595, file: !142, line: 5075, baseType: !543, size: 64, offset: 96)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !595, file: !142, line: 5076, baseType: !605, offset: 160)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !512, file: !168, line: 343, baseType: !607, size: 64, offset: 928)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !608)
!608 = !{!609, !610}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !607, file: !219, line: 63, baseType: !108, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !607, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!611 = !{!612, !613, !614, !615}
!612 = !DILocalVariable(name: "thread", arg: 1, scope: !507, file: !508, line: 175, type: !511)
!613 = !DILocalVariable(name: "region_num", scope: !507, file: !508, line: 200, type: !190)
!614 = !DILocalVariable(name: "guard_start", scope: !507, file: !508, line: 265, type: !22)
!615 = !DILocalVariable(name: "guard_size", scope: !507, file: !508, line: 266, type: !137)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !617, size: 96, elements: !368)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !618, line: 52, size: 96, elements: !619)
!618 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!619 = !{!620, !621, !622}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !617, file: !618, line: 53, baseType: !22, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !617, file: !618, line: 54, baseType: !137, size: 32, offset: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !617, file: !618, line: 55, baseType: !623, size: 32, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !624, line: 151, baseType: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 149, size: 32, elements: !626)
!626 = !{!627}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !625, file: !624, line: 150, baseType: !108, size: 32)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "static_regions", scope: !501, file: !508, line: 62, type: !630, isLocal: true, isDefinition: true)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 96, elements: !368)
!631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !633)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !634)
!634 = !{!635, !636}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !633, file: !406, line: 17, baseType: !121, size: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !633, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !639, file: !672, line: 39, type: !190, isLocal: true, isDefinition: true)
!639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !641, globals: !671, splitDebugInlining: false, nameTableKind: None)
!640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!641 = !{!642, !106, !107, !659, !190}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !644, line: 1226, baseType: !645)
!644 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 1213, size: 352, elements: !646)
!646 = !{!647, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !645, file: !644, line: 1215, baseType: !648, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !431)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !645, file: !644, line: 1216, baseType: !431, size: 32, offset: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !645, file: !644, line: 1217, baseType: !431, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !645, file: !644, line: 1218, baseType: !431, size: 32, offset: 96)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !645, file: !644, line: 1219, baseType: !431, size: 32, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !645, file: !644, line: 1220, baseType: !431, size: 32, offset: 160)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !645, file: !644, line: 1221, baseType: !431, size: 32, offset: 192)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !645, file: !644, line: 1222, baseType: !431, size: 32, offset: 224)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !645, file: !644, line: 1223, baseType: !431, size: 32, offset: 256)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !645, file: !644, line: 1224, baseType: !431, size: 32, offset: 288)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !645, file: !644, line: 1225, baseType: !431, size: 32, offset: 320)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !662, line: 27, size: 96, elements: !663)
!662 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!663 = !{!664, !665, !666}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !661, file: !662, line: 29, baseType: !108, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !661, file: !662, line: 31, baseType: !121, size: 32, offset: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !661, file: !662, line: 37, baseType: !667, size: 32, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !624, line: 146, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !624, line: 141, size: 32, elements: !669)
!669 = !{!670}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !668, file: !624, line: 143, baseType: !108, size: 32)
!671 = !{!637}
!672 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !675, file: !682, line: 21, type: !417, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !677, globals: !681, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!677 = !{!678, !107, !106}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !680, line: 22, baseType: !107)
!680 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = !{!673}
!682 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !685, file: !690, line: 13, type: !707, isLocal: true, isDefinition: true)
!685 = distinct !DICompileUnit(language: DW_LANG_C99, file: !686, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !687, splitDebugInlining: false, nameTableKind: None)
!686 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!687 = !{!688, !683}
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "mpu_config", scope: !685, file: !690, line: 37, type: !691, isLocal: false, isDefinition: true)
!690 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !662, line: 41, size: 64, elements: !693)
!693 = !{!694, !695}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !692, file: !662, line: 43, baseType: !108, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !692, file: !662, line: 45, baseType: !696, size: 32, offset: 32)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !662, line: 27, size: 96, elements: !699)
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !698, file: !662, line: 29, baseType: !108, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !662, line: 31, baseType: !121, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !698, file: !662, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !624, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !624, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !624, line: 143, baseType: !108, size: 32)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 192, elements: !185)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !710, file: !714, line: 10, type: !715, isLocal: false, isDefinition: true)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !712, globals: !713, splitDebugInlining: false, nameTableKind: None)
!711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!712 = !{!102, !106, !107}
!713 = !{!708}
!714 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !717)
!717 = !{!718, !719}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !716, file: !406, line: 17, baseType: !121, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !716, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !826, line: 72, type: !909, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !812, globals: !823, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !427, line: 65, baseType: !107, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!729 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!730 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!731 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!732 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!733 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!734 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!735 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!736 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!737 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!738 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!739 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!740 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!741 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!742 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!743 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!744 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!745 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!746 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!747 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!748 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!749 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!750 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!751 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!752 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!753 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!754 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!755 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!756 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!757 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!758 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!759 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!760 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!761 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!762 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!763 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!764 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!765 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!766 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!767 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!768 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!769 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!770 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!771 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!772 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!773 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!774 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!775 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!776 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!777 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!778 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!779 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!780 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!781 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!784 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!785 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!786 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!787 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!788 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!789 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!790 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!791 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!792 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!793 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!794 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!795 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!796 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!797 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!798 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!799 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!800 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!801 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!802 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!803 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!804 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!805 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!806 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!807 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!808 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!809 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!810 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!811 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!812 = !{!137, !107, !106, !813}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !427, line: 364, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 356, size: 192, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !815, file: !427, line: 358, baseType: !431, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !815, file: !427, line: 359, baseType: !431, size: 32, offset: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !815, file: !427, line: 360, baseType: !431, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !815, file: !427, line: 361, baseType: !431, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !815, file: !427, line: 362, baseType: !431, size: 32, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !815, file: !427, line: 363, baseType: !431, size: 32, offset: 160)
!823 = !{!824, !830, !846, !857, !874, !720, !876, !889, !891, !893, !895, !897, !899, !901, !903, !905, !907}
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !722, file: !826, line: 424, type: !827, isLocal: false, isDefinition: true, align: 16)
!826 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 64, elements: !828)
!828 = !{!829}
!829 = !DISubrange(count: 4)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !722, file: !826, line: 424, type: !832, isLocal: false, isDefinition: true, align: 32)
!832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !834)
!834 = !{!835, !836, !837, !838, !844, !845}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !833, file: !451, line: 380, baseType: !121, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !833, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !833, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !833, file: !451, line: 386, baseType: !839, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !840, file: !451, line: 359, baseType: !190, size: 8)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !840, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !833, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !833, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !722, file: !826, line: 424, type: !848, isLocal: true, isDefinition: true, align: 32)
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !850)
!850 = !{!851, !856}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !849, file: !442, line: 60, baseType: !852, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = !DISubroutineType(types: !854)
!854 = !{!107, !855}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !849, file: !442, line: 65, baseType: !855, size: 32, offset: 32)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !826, line: 423, type: !859, isLocal: true, isDefinition: true)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !826, line: 107, size: 1472, elements: !860)
!860 = !{!861}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !859, file: !826, line: 109, baseType: !862, size: 1472)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 1472, elements: !872)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !826, line: 101, size: 64, elements: !864)
!864 = !{!865, !871}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !863, file: !826, line: 102, baseType: !866, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !867, line: 63, baseType: !868)
!867 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !107, !106}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !863, file: !826, line: 103, baseType: !106, size: 32, offset: 32)
!872 = !{!873}
!873 = !DISubrange(count: 23)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !722, file: !826, line: 424, type: !840, isLocal: true, isDefinition: true, align: 8)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !878, file: !826, line: 493, type: !883, isLocal: true, isDefinition: true, align: 32)
!878 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !826, file: !826, line: 460, type: !879, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !881)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !855}
!881 = !{!882}
!882 = !DILocalVariable(name: "dev", arg: 1, scope: !878, file: !826, line: 460, type: !855)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !884)
!884 = !{!885, !886, !887, !888}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !883, file: !10, line: 55, baseType: !334, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !883, file: !10, line: 57, baseType: !334, size: 32, offset: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !883, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !883, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !878, file: !826, line: 497, type: !883, isLocal: true, isDefinition: true, align: 32)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !878, file: !826, line: 507, type: !883, isLocal: true, isDefinition: true, align: 32)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !878, file: !826, line: 512, type: !883, isLocal: true, isDefinition: true, align: 32)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !878, file: !826, line: 516, type: !883, isLocal: true, isDefinition: true, align: 32)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !878, file: !826, line: 523, type: !883, isLocal: true, isDefinition: true, align: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !878, file: !826, line: 527, type: !883, isLocal: true, isDefinition: true, align: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !878, file: !826, line: 581, type: !883, isLocal: true, isDefinition: true, align: 32)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !878, file: !826, line: 586, type: !883, isLocal: true, isDefinition: true, align: 32)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !878, file: !826, line: 591, type: !883, isLocal: true, isDefinition: true, align: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !878, file: !826, line: 595, type: !883, isLocal: true, isDefinition: true, align: 32)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 736, elements: !872)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !427, line: 154, baseType: !725)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !914, file: !919, line: 22, type: !941, isLocal: false, isDefinition: true, align: 16)
!914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !916, splitDebugInlining: false, nameTableKind: None)
!915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!916 = !{!917, !912, !923, !925, !927, !929, !931, !933, !935, !937, !939}
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !914, file: !919, line: 17, type: !920, isLocal: false, isDefinition: true, align: 16)
!919 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 192, elements: !921)
!921 = !{!922}
!922 = !DISubrange(count: 12)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !914, file: !919, line: 29, type: !827, isLocal: false, isDefinition: true, align: 16)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !914, file: !919, line: 36, type: !827, isLocal: false, isDefinition: true, align: 16)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !914, file: !919, line: 43, type: !827, isLocal: false, isDefinition: true, align: 16)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !914, file: !919, line: 50, type: !827, isLocal: false, isDefinition: true, align: 16)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !914, file: !919, line: 57, type: !827, isLocal: false, isDefinition: true, align: 16)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !914, file: !919, line: 64, type: !827, isLocal: false, isDefinition: true, align: 16)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !914, file: !919, line: 71, type: !827, isLocal: false, isDefinition: true, align: 16)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !914, file: !919, line: 78, type: !827, isLocal: false, isDefinition: true, align: 16)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !914, file: !919, line: 85, type: !827, isLocal: false, isDefinition: true, align: 16)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 48, elements: !380)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !944, file: !1006, line: 398, type: !1039, isLocal: true, isDefinition: true)
!944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !946, retainedTypes: !959, globals: !1003, splitDebugInlining: false, nameTableKind: None)
!945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!946 = !{!947, !30, !952}
!947 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !948, line: 197, baseType: !32, size: 32, elements: !949)
!948 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!949 = !{!950, !951}
!950 = !DIEnumerator(name: "SUCCESS", value: 0)
!951 = !DIEnumerator(name: "ERROR", value: 1)
!952 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !953, line: 44, baseType: !32, size: 32, elements: !954)
!953 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!954 = !{!955, !956, !957, !958}
!955 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!956 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!957 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!958 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!959 = !{!106, !107, !108, !960, !996, !1002}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 510, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 477, size: 1216, elements: !963)
!963 = !{!964, !965, !966, !967, !968, !969, !970, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !962, file: !427, line: 479, baseType: !431, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !962, file: !427, line: 480, baseType: !431, size: 32, offset: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !962, file: !427, line: 481, baseType: !431, size: 32, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !962, file: !427, line: 482, baseType: !431, size: 32, offset: 96)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !962, file: !427, line: 483, baseType: !431, size: 32, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !962, file: !427, line: 484, baseType: !431, size: 32, offset: 160)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !962, file: !427, line: 485, baseType: !971, size: 64, offset: 192)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !185)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !962, file: !427, line: 486, baseType: !431, size: 32, offset: 256)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !962, file: !427, line: 487, baseType: !431, size: 32, offset: 288)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !962, file: !427, line: 488, baseType: !971, size: 64, offset: 320)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !962, file: !427, line: 489, baseType: !431, size: 32, offset: 384)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !962, file: !427, line: 490, baseType: !431, size: 32, offset: 416)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !962, file: !427, line: 491, baseType: !971, size: 64, offset: 448)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !962, file: !427, line: 492, baseType: !431, size: 32, offset: 512)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !962, file: !427, line: 493, baseType: !431, size: 32, offset: 544)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !962, file: !427, line: 494, baseType: !971, size: 64, offset: 576)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !962, file: !427, line: 495, baseType: !431, size: 32, offset: 640)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !962, file: !427, line: 496, baseType: !431, size: 32, offset: 672)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !962, file: !427, line: 497, baseType: !971, size: 64, offset: 704)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !962, file: !427, line: 498, baseType: !431, size: 32, offset: 768)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !962, file: !427, line: 499, baseType: !431, size: 32, offset: 800)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !962, file: !427, line: 500, baseType: !971, size: 64, offset: 832)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !962, file: !427, line: 501, baseType: !431, size: 32, offset: 896)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !962, file: !427, line: 502, baseType: !431, size: 32, offset: 928)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !962, file: !427, line: 503, baseType: !971, size: 64, offset: 960)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !962, file: !427, line: 504, baseType: !431, size: 32, offset: 1024)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !962, file: !427, line: 505, baseType: !431, size: 32, offset: 1056)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !962, file: !427, line: 506, baseType: !108, size: 32, offset: 1088)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !962, file: !427, line: 507, baseType: !431, size: 32, offset: 1120)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !962, file: !427, line: 508, baseType: !431, size: 32, offset: 1152)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !962, file: !427, line: 509, baseType: !431, size: 32, offset: 1184)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !998, line: 343, size: 64, elements: !999)
!998 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!999 = !{!1000, !1001}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !997, file: !998, line: 344, baseType: !108, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !997, file: !998, line: 345, baseType: !108, size: 32, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1003 = !{!1004, !1010, !1026, !1037, !942}
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !944, file: !1006, line: 752, type: !1007, isLocal: false, isDefinition: true, align: 16)
!1006 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 848, elements: !1008)
!1008 = !{!1009}
!1009 = !DISubrange(count: 53)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !944, file: !1006, line: 752, type: !1012, isLocal: false, isDefinition: true, align: 32)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018, !1024, !1025}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1013, file: !451, line: 380, baseType: !121, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1013, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1013, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1013, file: !451, line: 386, baseType: !1019, size: 32, offset: 96)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1020, file: !451, line: 359, baseType: !190, size: 8)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1020, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1013, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1013, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !944, file: !1006, line: 752, type: !1028, isLocal: true, isDefinition: true, align: 32)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1030)
!1030 = !{!1031, !1036}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1029, file: !442, line: 60, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!107, !1035}
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1029, file: !442, line: 65, baseType: !1035, size: 32, offset: 32)
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !944, file: !1006, line: 752, type: !1020, isLocal: true, isDefinition: true, align: 8)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !953, line: 100, size: 224, elements: !1040)
!1040 = !{!1041, !1047, !1048, !1057, !1062, !1067, !1073}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1039, file: !953, line: 101, baseType: !1042, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !953, line: 76, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!107, !1035, !1046}
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !953, line: 56, baseType: !106)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1039, file: !953, line: 102, baseType: !1042, size: 32, offset: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1039, file: !953, line: 103, baseType: !1049, size: 32, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !953, line: 83, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!107, !1035, !1046, !1053, !106}
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !953, line: 72, baseType: !1054)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1035, !1046, !106}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1039, file: !953, line: 104, baseType: !1058, size: 32, offset: 96)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !953, line: 79, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!107, !1035, !1046, !1002}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1039, file: !953, line: 105, baseType: !1063, size: 32, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !953, line: 88, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!952, !1035, !1046}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1039, file: !953, line: 106, baseType: !1068, size: 32, offset: 160)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !953, line: 92, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!107, !1035, !1046, !1072}
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !953, line: 64, baseType: !106)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1039, file: !953, line: 107, baseType: !1074, size: 32, offset: 192)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !953, line: 96, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!107, !1035, !1046, !106}
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1080, file: !1137, line: 603, type: !1139, isLocal: true, isDefinition: true, align: 32)
!1080 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1081, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1082, globals: !1134, splitDebugInlining: false, nameTableKind: None)
!1081 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!1082 = !{!106, !107, !1083}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1086, line: 336, size: 160, elements: !1087)
!1086 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1087 = !{!1088, !1108, !1112, !1116, !1129}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1085, file: !1086, line: 365, baseType: !1089, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!107, !1092, !1107}
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1099, !1105, !1106}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1094, file: !451, line: 380, baseType: !121, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1094, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1094, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1094, file: !451, line: 386, baseType: !1100, size: 32, offset: 96)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1101, file: !451, line: 359, baseType: !190, size: 8)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1101, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1094, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1094, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1085, file: !1086, line: 366, baseType: !1109, size: 32, offset: 32)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1092, !191}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1085, file: !1086, line: 374, baseType: !1113, size: 32, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!107, !1092}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1085, file: !1086, line: 377, baseType: !1117, size: 32, offset: 96)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!107, !1092, !1120}
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1086, line: 122, size: 64, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1128}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1122, file: !1086, line: 123, baseType: !108, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1122, file: !1086, line: 124, baseType: !190, size: 8, offset: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1122, file: !1086, line: 125, baseType: !190, size: 8, offset: 40)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1122, file: !1086, line: 126, baseType: !190, size: 8, offset: 48)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1122, file: !1086, line: 127, baseType: !190, size: 8, offset: 56)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1085, file: !1086, line: 379, baseType: !1130, size: 32, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!107, !1092, !1133}
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1134 = !{!1078, !1135}
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1080, file: !1137, line: 38, type: !1138, isLocal: true, isDefinition: true)
!1137 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1092)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1141)
!1141 = !{!1142, !1143}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1140, file: !442, line: 60, baseType: !1113, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1140, file: !442, line: 65, baseType: !1092, size: 32, offset: 32)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1146, file: !1317, line: 762, type: !1429, isLocal: true, isDefinition: true)
!1146 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1147, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1148, retainedTypes: !1166, globals: !1314, splitDebugInlining: false, nameTableKind: None)
!1147 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!1148 = !{!30, !1149, !1155, !1160, !952}
!1149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1150, line: 506, baseType: !32, size: 32, elements: !1151)
!1150 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1151 = !{!1152, !1153, !1154}
!1152 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1153 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1154 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1150, line: 512, baseType: !32, size: 32, elements: !1156)
!1156 = !{!1157, !1158, !1159}
!1157 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1158 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1159 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !867, line: 43, baseType: !32, size: 32, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165}
!1162 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1163 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1164 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1165 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1166 = !{!106, !107, !1167, !1237, !1242, !1202, !1155, !1149, !1247, !1248, !108, !1262, !1217, !283, !1274, !1275}
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1150, line: 523, size: 288, elements: !1170)
!1170 = !{!1171, !1192, !1198, !1203, !1207, !1208, !1209, !1213, !1233}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1169, file: !1150, line: 524, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!107, !1175, !1190, !1191}
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1188, !1189}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1177, file: !451, line: 380, baseType: !121, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1177, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1177, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1177, file: !451, line: 386, baseType: !1183, size: 32, offset: 96)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1185)
!1185 = !{!1186, !1187}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1184, file: !451, line: 359, baseType: !190, size: 8)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1184, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1177, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1177, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1150, line: 237, baseType: !190)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1150, line: 257, baseType: !108)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1169, file: !1150, line: 530, baseType: !1193, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!107, !1175, !1196}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1150, line: 229, baseType: !108)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1169, file: !1150, line: 532, baseType: !1199, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!107, !1175, !1202, !1197}
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1150, line: 216, baseType: !108)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1169, file: !1150, line: 535, baseType: !1204, size: 32, offset: 96)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!107, !1175, !1202}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1169, file: !1150, line: 537, baseType: !1204, size: 32, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1169, file: !1150, line: 539, baseType: !1204, size: 32, offset: 160)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1169, file: !1150, line: 541, baseType: !1210, size: 32, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!107, !1175, !1190, !1149, !1155}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1169, file: !1150, line: 544, baseType: !1214, size: 32, offset: 224)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!107, !1175, !1217, !136}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1150, line: 478, size: 96, elements: !1219)
!1219 = !{!1220, !1227, !1232}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1218, file: !1150, line: 482, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1222, line: 33, baseType: !1223)
!1222 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1222, line: 29, size: 32, elements: !1224)
!1224 = !{!1225}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1223, file: !1222, line: 30, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1218, file: !1150, line: 485, baseType: !1228, size: 32, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1150, line: 464, baseType: !1229)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{null, !1175, !1217, !1202}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1218, file: !1150, line: 493, baseType: !1202, size: 32, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1169, file: !1150, line: 547, baseType: !1234, size: 32, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!108, !1175}
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1150, line: 428, size: 32, elements: !1240)
!1240 = !{!1241}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1239, file: !1150, line: 434, baseType: !1202, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1150, line: 441, size: 32, elements: !1245)
!1245 = !{!1246}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1244, file: !1150, line: 447, baseType: !1202, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !427, line: 396, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 385, size: 320, elements: !1251)
!1251 = !{!1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1250, file: !427, line: 387, baseType: !431, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1250, file: !427, line: 388, baseType: !431, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1250, file: !427, line: 389, baseType: !431, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1250, file: !427, line: 390, baseType: !431, size: 32, offset: 96)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1250, file: !427, line: 391, baseType: !431, size: 32, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1250, file: !427, line: 392, baseType: !431, size: 32, offset: 160)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1250, file: !427, line: 393, baseType: !431, size: 32, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1250, file: !427, line: 394, baseType: !431, size: 32, offset: 224)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1250, file: !427, line: 395, baseType: !1261, size: 64, offset: 256)
!1261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 64, elements: !185)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !427, line: 411, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 402, size: 320, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1270, !1271, !1272, !1273}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1264, file: !427, line: 404, baseType: !431, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1264, file: !427, line: 405, baseType: !431, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1264, file: !427, line: 406, baseType: !1269, size: 128, offset: 64)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 128, elements: !828)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1264, file: !427, line: 407, baseType: !108, size: 32, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1264, file: !427, line: 408, baseType: !431, size: 32, offset: 224)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1264, file: !427, line: 409, baseType: !431, size: 32, offset: 256)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1264, file: !427, line: 410, baseType: !431, size: 32, offset: 288)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !953, line: 100, size: 224, elements: !1278)
!1278 = !{!1279, !1284, !1285, !1294, !1299, !1304, !1309}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1277, file: !953, line: 101, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !953, line: 76, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!107, !1175, !1046}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1277, file: !953, line: 102, baseType: !1280, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1277, file: !953, line: 103, baseType: !1286, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !953, line: 83, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!107, !1175, !1046, !1290, !106}
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !953, line: 72, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !1175, !1046, !106}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1277, file: !953, line: 104, baseType: !1295, size: 32, offset: 96)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !953, line: 79, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!107, !1175, !1046, !1002}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1277, file: !953, line: 105, baseType: !1300, size: 32, offset: 128)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !953, line: 88, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!952, !1175, !1046}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1277, file: !953, line: 106, baseType: !1305, size: 32, offset: 160)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !953, line: 92, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!107, !1175, !1046, !1072}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1277, file: !953, line: 107, baseType: !1310, size: 32, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !953, line: 96, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!107, !1175, !1046, !106}
!1314 = !{!1315, !1321, !1323, !1333, !1335, !1337, !1339, !1344, !1346, !1348, !1353, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1144, !1425, !1427, !1440, !1442, !1444, !1446, !1448, !1450}
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1146, file: !1317, line: 762, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1317 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 112, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 7)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1146, file: !1317, line: 762, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1146, file: !1317, line: 762, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1327)
!1327 = !{!1328, !1332}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1326, file: !442, line: 60, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!107, !1175}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1326, file: !442, line: 65, baseType: !1175, size: 32, offset: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1146, file: !1317, line: 766, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1146, file: !1317, line: 766, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1146, file: !1317, line: 766, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1146, file: !1317, line: 770, type: !1341, isLocal: false, isDefinition: true, align: 16)
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 96, elements: !1342)
!1342 = !{!1343}
!1343 = !DISubrange(count: 6)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1146, file: !1317, line: 770, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1146, file: !1317, line: 770, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1146, file: !1317, line: 774, type: !1350, isLocal: false, isDefinition: true, align: 16)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 80, elements: !1351)
!1351 = !{!1352}
!1352 = !DISubrange(count: 5)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1146, file: !1317, line: 774, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1146, file: !1317, line: 774, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1146, file: !1317, line: 778, type: !1350, isLocal: false, isDefinition: true, align: 16)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1146, file: !1317, line: 778, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1146, file: !1317, line: 778, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1146, file: !1317, line: 782, type: !1350, isLocal: false, isDefinition: true, align: 16)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1146, file: !1317, line: 782, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1146, file: !1317, line: 782, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1146, file: !1317, line: 786, type: !1350, isLocal: false, isDefinition: true, align: 16)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1146, file: !1317, line: 786, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1146, file: !1317, line: 786, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1146, file: !1317, line: 790, type: !1350, isLocal: false, isDefinition: true, align: 16)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1146, file: !1317, line: 790, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1146, file: !1317, line: 790, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1146, file: !1317, line: 762, type: !1383, isLocal: true, isDefinition: true)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1384, line: 237, size: 128, elements: !1385)
!1384 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1385 = !{!1386, !1387, !1388}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1383, file: !1384, line: 239, baseType: !1244, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1383, file: !1384, line: 241, baseType: !1175, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1383, file: !1384, line: 243, baseType: !1389, size: 64, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1222, line: 40, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1222, line: 35, size: 64, elements: !1391)
!1391 = !{!1392, !1394}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1390, file: !1222, line: 36, baseType: !1393, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1390, file: !1222, line: 37, baseType: !1393, size: 32, offset: 32)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1146, file: !1317, line: 762, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1146, file: !1317, line: 766, type: !1383, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1146, file: !1317, line: 766, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1146, file: !1317, line: 770, type: !1383, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1146, file: !1317, line: 770, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1146, file: !1317, line: 774, type: !1383, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1146, file: !1317, line: 774, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1146, file: !1317, line: 778, type: !1383, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1146, file: !1317, line: 778, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1146, file: !1317, line: 782, type: !1383, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1146, file: !1317, line: 782, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1146, file: !1317, line: 786, type: !1383, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1146, file: !1317, line: 786, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1146, file: !1317, line: 790, type: !1383, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1146, file: !1317, line: 790, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1146, file: !1317, line: 656, type: !1168, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1146, file: !1317, line: 766, type: !1429, isLocal: true, isDefinition: true)
!1429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1384, line: 224, size: 160, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1430, file: !1384, line: 226, baseType: !1239, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1430, file: !1384, line: 228, baseType: !1002, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1430, file: !1384, line: 230, baseType: !107, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1430, file: !1384, line: 231, baseType: !1436, size: 64, offset: 96)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !998, line: 343, size: 64, elements: !1437)
!1437 = !{!1438, !1439}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1436, file: !998, line: 344, baseType: !108, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1436, file: !998, line: 345, baseType: !108, size: 32, offset: 32)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1146, file: !1317, line: 770, type: !1429, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1146, file: !1317, line: 774, type: !1429, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1146, file: !1317, line: 778, type: !1429, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1146, file: !1317, line: 782, type: !1429, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1146, file: !1317, line: 786, type: !1429, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1146, file: !1317, line: 790, type: !1429, isLocal: true, isDefinition: true)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1454, file: !1593, line: 44, type: !1671, isLocal: false, isDefinition: true)
!1454 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1455, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1456, retainedTypes: !1489, globals: !1590, splitDebugInlining: false, nameTableKind: None)
!1455 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!1456 = !{!30, !1457, !1464, !1471, !1478, !1484, !952}
!1457 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1086, line: 47, baseType: !32, size: 32, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463}
!1459 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1460 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1461 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1462 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1463 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1464 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1086, line: 75, baseType: !32, size: 32, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469, !1470}
!1466 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1467 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1468 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1469 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1470 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1471 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1086, line: 92, baseType: !32, size: 32, elements: !1472)
!1472 = !{!1473, !1474, !1475, !1476, !1477}
!1473 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1474 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1475 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1476 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1477 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1478 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1086, line: 84, baseType: !32, size: 32, elements: !1479)
!1479 = !{!1480, !1481, !1482, !1483}
!1480 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1481 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1482 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1483 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1086, line: 107, baseType: !32, size: 32, elements: !1485)
!1485 = !{!1486, !1487, !1488}
!1486 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1487 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1488 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1489 = !{!106, !107, !1490, !191, !190, !1539, !108, !1046, !1550, !126, !109, !1589}
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1086, line: 336, size: 160, elements: !1493)
!1493 = !{!1494, !1513, !1517, !1521, !1534}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1492, file: !1086, line: 365, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!107, !1498, !1107}
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1511, !1512}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1500, file: !451, line: 380, baseType: !121, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1500, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1500, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1500, file: !451, line: 386, baseType: !1506, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1508)
!1508 = !{!1509, !1510}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1507, file: !451, line: 359, baseType: !190, size: 8)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1507, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1500, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1500, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1492, file: !1086, line: 366, baseType: !1514, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{null, !1498, !191}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1492, file: !1086, line: 374, baseType: !1518, size: 32, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!107, !1498}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1492, file: !1086, line: 377, baseType: !1522, size: 32, offset: 96)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!107, !1498, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1086, line: 122, size: 64, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1527, file: !1086, line: 123, baseType: !108, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1527, file: !1086, line: 124, baseType: !190, size: 8, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1527, file: !1086, line: 125, baseType: !190, size: 8, offset: 40)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1527, file: !1086, line: 126, baseType: !190, size: 8, offset: 48)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1527, file: !1086, line: 127, baseType: !190, size: 8, offset: 56)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1492, file: !1086, line: 379, baseType: !1535, size: 32, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!107, !1498, !1538}
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !427, line: 648, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 639, size: 224, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1547, !1548, !1549}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1541, file: !427, line: 641, baseType: !431, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1541, file: !427, line: 642, baseType: !431, size: 32, offset: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1541, file: !427, line: 643, baseType: !431, size: 32, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1541, file: !427, line: 644, baseType: !431, size: 32, offset: 96)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1541, file: !427, line: 645, baseType: !431, size: 32, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1541, file: !427, line: 646, baseType: !431, size: 32, offset: 160)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1541, file: !427, line: 647, baseType: !431, size: 32, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !953, line: 100, size: 224, elements: !1553)
!1553 = !{!1554, !1559, !1560, !1569, !1574, !1579, !1584}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1552, file: !953, line: 101, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !953, line: 76, baseType: !1556)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!107, !1498, !1046}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1552, file: !953, line: 102, baseType: !1555, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1552, file: !953, line: 103, baseType: !1561, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !953, line: 83, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!107, !1498, !1046, !1565, !106}
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !953, line: 72, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{null, !1498, !1046, !106}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1552, file: !953, line: 104, baseType: !1570, size: 32, offset: 96)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !953, line: 79, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!107, !1498, !1046, !1002}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1552, file: !953, line: 105, baseType: !1575, size: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !953, line: 88, baseType: !1576)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!952, !1498, !1046}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1552, file: !953, line: 106, baseType: !1580, size: 32, offset: 160)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !953, line: 92, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!107, !1498, !1046, !1072}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1552, file: !953, line: 107, baseType: !1585, size: 32, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !953, line: 96, baseType: !1586)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!107, !1498, !1046, !106}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 32)
!1590 = !{!1452, !1591, !1597, !1599, !1606, !1608, !1652, !1655, !1657, !1660, !1663, !1665}
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1454, file: !1593, line: 1914, type: !1594, isLocal: false, isDefinition: true, align: 16)
!1593 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 128, elements: !1595)
!1595 = !{!1596}
!1596 = !DISubrange(count: 8)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1454, file: !1593, line: 1914, type: !1499, isLocal: false, isDefinition: true, align: 32)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1454, file: !1593, line: 1914, type: !1601, isLocal: true, isDefinition: true, align: 32)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1603)
!1603 = !{!1604, !1605}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1602, file: !442, line: 60, baseType: !1518, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1602, file: !442, line: 65, baseType: !1498, size: 32, offset: 32)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1454, file: !1593, line: 1914, type: !1507, isLocal: true, isDefinition: true, align: 8)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1454, file: !1593, line: 1914, type: !1610, isLocal: true, isDefinition: true)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1612, line: 22, size: 224, elements: !1613)
!1612 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1613 = !{!1614, !1615, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1611, file: !1612, line: 24, baseType: !1539, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1611, file: !1612, line: 26, baseType: !1616, size: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !998, line: 343, size: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1618, file: !998, line: 344, baseType: !108, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1618, file: !998, line: 345, baseType: !108, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1611, file: !1612, line: 28, baseType: !137, size: 32, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1611, file: !1612, line: 30, baseType: !136, size: 8, offset: 96)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1611, file: !1612, line: 32, baseType: !107, size: 32, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1611, file: !1612, line: 34, baseType: !136, size: 8, offset: 160)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1611, file: !1612, line: 36, baseType: !136, size: 8, offset: 168)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1611, file: !1612, line: 38, baseType: !136, size: 8, offset: 176)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1611, file: !1612, line: 40, baseType: !136, size: 8, offset: 184)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1611, file: !1612, line: 41, baseType: !1630, size: 32, offset: 192)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1633, line: 60, size: 64, elements: !1634)
!1633 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1634 = !{!1635, !1651}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1632, file: !1633, line: 69, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1633, line: 50, size: 64, elements: !1639)
!1639 = !{!1640, !1649, !1650}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1638, file: !1633, line: 52, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1644, line: 37, baseType: !1645)
!1644 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1644, line: 32, size: 64, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1645, file: !1644, line: 34, baseType: !108, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1645, file: !1644, line: 36, baseType: !108, size: 32, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1638, file: !1633, line: 54, baseType: !190, size: 8, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1638, file: !1633, line: 56, baseType: !190, size: 8, offset: 40)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1632, file: !1633, line: 71, baseType: !190, size: 8, offset: 32)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1454, file: !1593, line: 1914, type: !1654, isLocal: true, isDefinition: true)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1617, size: 64, elements: !368)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1454, file: !1593, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1454, file: !1593, line: 1914, type: !1659, isLocal: true, isDefinition: true)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 64, elements: !368)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1454, file: !1593, line: 1914, type: !1662, isLocal: true, isDefinition: true)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 128, elements: !185)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1454, file: !1593, line: 1539, type: !1491, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1454, file: !1593, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1612, line: 74, size: 64, elements: !1668)
!1668 = !{!1669, !1670}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1667, file: !1612, line: 76, baseType: !108, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1667, file: !1612, line: 78, baseType: !1498, size: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !1673)
!1673 = !{!1674, !1675}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1672, file: !406, line: 17, baseType: !121, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1672, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1678, file: !1754, line: 65, type: !431, isLocal: true, isDefinition: true)
!1678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1679, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1680, retainedTypes: !1681, globals: !1751, splitDebugInlining: false, nameTableKind: None)
!1679 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!1680 = !{!725}
!1681 = !{!102, !1682, !334, !190, !108, !1690, !1721}
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !644, line: 770, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 764, size: 128, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1684, file: !644, line: 766, baseType: !431, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1684, file: !644, line: 767, baseType: !431, size: 32, offset: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1684, file: !644, line: 768, baseType: !431, size: 32, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1684, file: !644, line: 769, baseType: !648, size: 32, offset: 96)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !1692)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !1693)
!1693 = !{!1694, !1696, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1711, !1716, !1720}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1692, file: !644, line: 413, baseType: !1695, size: 256)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 256, elements: !1595)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1692, file: !644, line: 414, baseType: !1697, size: 768, offset: 256)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 24)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1692, file: !644, line: 415, baseType: !1695, size: 256, offset: 1024)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1692, file: !644, line: 416, baseType: !1697, size: 768, offset: 1280)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1692, file: !644, line: 417, baseType: !1695, size: 256, offset: 2048)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1692, file: !644, line: 418, baseType: !1697, size: 768, offset: 2304)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1692, file: !644, line: 419, baseType: !1695, size: 256, offset: 3072)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1692, file: !644, line: 420, baseType: !1697, size: 768, offset: 3328)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1692, file: !644, line: 421, baseType: !1695, size: 256, offset: 4096)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1692, file: !644, line: 422, baseType: !1708, size: 1792, offset: 4352)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1709)
!1709 = !{!1710}
!1710 = !DISubrange(count: 56)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1692, file: !644, line: 423, baseType: !1712, size: 1920, offset: 6144)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 1920, elements: !1714)
!1713 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !190)
!1714 = !{!1715}
!1715 = !DISubrange(count: 240)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1692, file: !644, line: 424, baseType: !1717, size: 20608, offset: 8064)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1718)
!1718 = !{!1719}
!1719 = !DISubrange(count: 644)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1692, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1729, !1730, !1731, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1742, !1743, !1744, !1746, !1748, !1750}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1723, file: !644, line: 447, baseType: !648, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1723, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1723, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1723, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1723, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1723, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1723, file: !644, line: 453, baseType: !1732, size: 96, offset: 192)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 96, elements: !921)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1723, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1723, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1723, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1723, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1723, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1723, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1723, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1723, file: !644, line: 461, baseType: !1741, size: 64, offset: 512)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 64, elements: !185)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1723, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1723, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1723, file: !644, line: 464, baseType: !1745, size: 128, offset: 640)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 128, elements: !828)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1723, file: !644, line: 465, baseType: !1747, size: 160, offset: 768)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 160, elements: !1351)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1723, file: !644, line: 466, baseType: !1749, size: 160, offset: 928)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1351)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1723, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!1751 = !{!1752, !1778, !1781, !1783, !1785, !1676}
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1678, file: !1754, line: 285, type: !1755, isLocal: true, isDefinition: true, align: 32)
!1754 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1757)
!1757 = !{!1758, !1777}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1756, file: !442, line: 60, baseType: !1759, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!107, !1762}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1768, !1769, !1775, !1776}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1764, file: !451, line: 380, baseType: !121, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1764, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1764, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1764, file: !451, line: 386, baseType: !1770, size: 32, offset: 96)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1772)
!1772 = !{!1773, !1774}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1771, file: !451, line: 359, baseType: !190, size: 8)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1771, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1764, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1764, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1756, file: !442, line: 65, baseType: !1762, size: 32, offset: 32)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "lock", scope: !1678, file: !1754, line: 34, type: !1780, isLocal: true, isDefinition: true)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "last_load", scope: !1678, file: !1754, line: 36, type: !108, isLocal: true, isDefinition: true)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1678, file: !1754, line: 48, type: !108, isLocal: true, isDefinition: true)
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1678, file: !1754, line: 54, type: !108, isLocal: true, isDefinition: true)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1789, file: !1871, line: 22, type: !1873, isLocal: true, isDefinition: true)
!1789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1791, retainedTypes: !1792, globals: !1868, splitDebugInlining: false, nameTableKind: None)
!1790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!1791 = !{!1149, !1155}
!1792 = !{!1793, !1857, !1862, !1202, !1155, !1149, !1867, !106}
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1795)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1150, line: 523, size: 288, elements: !1796)
!1796 = !{!1797, !1816, !1820, !1824, !1828, !1829, !1830, !1834, !1853}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1795, file: !1150, line: 524, baseType: !1798, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!107, !1801, !1190, !1191}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1804)
!1804 = !{!1805, !1806, !1807, !1808, !1814, !1815}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1803, file: !451, line: 380, baseType: !121, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1803, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1803, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1803, file: !451, line: 386, baseType: !1809, size: 32, offset: 96)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1811)
!1811 = !{!1812, !1813}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1810, file: !451, line: 359, baseType: !190, size: 8)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1810, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1803, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1803, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1795, file: !1150, line: 530, baseType: !1817, size: 32, offset: 32)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!107, !1801, !1196}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1795, file: !1150, line: 532, baseType: !1821, size: 32, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!107, !1801, !1202, !1197}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1795, file: !1150, line: 535, baseType: !1825, size: 32, offset: 96)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!107, !1801, !1202}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1795, file: !1150, line: 537, baseType: !1825, size: 32, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1795, file: !1150, line: 539, baseType: !1825, size: 32, offset: 160)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1795, file: !1150, line: 541, baseType: !1831, size: 32, offset: 192)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!107, !1801, !1190, !1149, !1155}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1795, file: !1150, line: 544, baseType: !1835, size: 32, offset: 224)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!107, !1801, !1838, !136}
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1150, line: 478, size: 96, elements: !1840)
!1840 = !{!1841, !1847, !1852}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1839, file: !1150, line: 482, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1222, line: 33, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1222, line: 29, size: 32, elements: !1844)
!1844 = !{!1845}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1843, file: !1222, line: 30, baseType: !1846, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1839, file: !1150, line: 485, baseType: !1848, size: 32, offset: 32)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1150, line: 464, baseType: !1849)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{null, !1801, !1838, !1202}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1839, file: !1150, line: 493, baseType: !1202, size: 32, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1795, file: !1150, line: 547, baseType: !1854, size: 32, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!108, !1801}
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1150, line: 428, size: 32, elements: !1860)
!1860 = !{!1861}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1859, file: !1150, line: 434, baseType: !1202, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1150, line: 441, size: 32, elements: !1865)
!1865 = !{!1866}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1864, file: !1150, line: 447, baseType: !1202, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1868 = !{!1869, !1787}
!1869 = !DIGlobalVariableExpression(var: !1870, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1870 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1789, file: !1871, line: 37, type: !1872, isLocal: true, isDefinition: true)
!1871 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 352, elements: !1875)
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1801)
!1875 = !{!1876}
!1876 = !DISubrange(count: 11)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1879, file: !1920, line: 139, type: !1925, isLocal: false, isDefinition: true)
!1879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1881, globals: !1917, splitDebugInlining: false, nameTableKind: None)
!1880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!1881 = !{!1882}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 510, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 477, size: 1216, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1884, file: !427, line: 479, baseType: !431, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1884, file: !427, line: 480, baseType: !431, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1884, file: !427, line: 481, baseType: !431, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1884, file: !427, line: 482, baseType: !431, size: 32, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1884, file: !427, line: 483, baseType: !431, size: 32, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1884, file: !427, line: 484, baseType: !431, size: 32, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1884, file: !427, line: 485, baseType: !971, size: 64, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1884, file: !427, line: 486, baseType: !431, size: 32, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1884, file: !427, line: 487, baseType: !431, size: 32, offset: 288)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1884, file: !427, line: 488, baseType: !971, size: 64, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1884, file: !427, line: 489, baseType: !431, size: 32, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1884, file: !427, line: 490, baseType: !431, size: 32, offset: 416)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1884, file: !427, line: 491, baseType: !971, size: 64, offset: 448)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1884, file: !427, line: 492, baseType: !431, size: 32, offset: 512)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1884, file: !427, line: 493, baseType: !431, size: 32, offset: 544)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1884, file: !427, line: 494, baseType: !971, size: 64, offset: 576)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1884, file: !427, line: 495, baseType: !431, size: 32, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1884, file: !427, line: 496, baseType: !431, size: 32, offset: 672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1884, file: !427, line: 497, baseType: !971, size: 64, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1884, file: !427, line: 498, baseType: !431, size: 32, offset: 768)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1884, file: !427, line: 499, baseType: !431, size: 32, offset: 800)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1884, file: !427, line: 500, baseType: !971, size: 64, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1884, file: !427, line: 501, baseType: !431, size: 32, offset: 896)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1884, file: !427, line: 502, baseType: !431, size: 32, offset: 928)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1884, file: !427, line: 503, baseType: !971, size: 64, offset: 960)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1884, file: !427, line: 504, baseType: !431, size: 32, offset: 1024)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1884, file: !427, line: 505, baseType: !431, size: 32, offset: 1056)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1884, file: !427, line: 506, baseType: !108, size: 32, offset: 1088)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1884, file: !427, line: 507, baseType: !431, size: 32, offset: 1120)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1884, file: !427, line: 508, baseType: !431, size: 32, offset: 1152)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1884, file: !427, line: 509, baseType: !431, size: 32, offset: 1184)
!1917 = !{!1918, !1921, !1877}
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1879, file: !1920, line: 137, type: !108, isLocal: false, isDefinition: true)
!1920 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1879, file: !1920, line: 138, type: !1923, isLocal: false, isDefinition: true)
!1923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 128, elements: !347)
!1924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!1925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 64, elements: !1595)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1928, file: !1931, line: 23, type: !1932, isLocal: false, isDefinition: true)
!1928 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1929, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, globals: !1930, splitDebugInlining: false, nameTableKind: None)
!1929 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!1930 = !{!1926}
!1931 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1933 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression())
!1934 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1935, file: !1939, line: 37, type: !2190, isLocal: false, isDefinition: true)
!1935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1937, retainedTypes: !1946, globals: !2019, splitDebugInlining: false, nameTableKind: None)
!1936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!1937 = !{!1938, !30, !725}
!1938 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1939, line: 63, baseType: !32, size: 32, elements: !1940)
!1939 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1940 = !{!1941, !1942, !1943, !1944, !1945}
!1941 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1942 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1943 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1944 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1945 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1946 = !{!137, !106, !107, !1947, !283, !108, !1977, !334, !190, !2002}
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1949)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1950, line: 51, size: 64, elements: !1951)
!1950 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1951 = !{!1952, !1972}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1949, file: !1950, line: 52, baseType: !1953, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1950, line: 38, baseType: !1954)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!107, !1957, !401, !126}
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1960)
!1960 = !{!1961, !1962, !1963, !1964, !1970, !1971}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1959, file: !451, line: 380, baseType: !121, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1959, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1959, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1959, file: !451, line: 386, baseType: !1965, size: 32, offset: 96)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1967)
!1967 = !{!1968, !1969}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1966, file: !451, line: 359, baseType: !190, size: 8)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1966, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1959, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1959, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1949, file: !1950, line: 53, baseType: !1973, size: 32, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1950, line: 47, baseType: !1974)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!107, !1957, !401, !126, !108}
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !1979)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1979, file: !644, line: 447, baseType: !648, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1979, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1979, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1979, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1979, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1979, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1979, file: !644, line: 453, baseType: !1732, size: 96, offset: 192)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1979, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1979, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1979, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1979, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1979, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1979, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1979, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1979, file: !644, line: 461, baseType: !1741, size: 64, offset: 512)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1979, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1979, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1979, file: !644, line: 464, baseType: !1745, size: 128, offset: 640)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1979, file: !644, line: 465, baseType: !1747, size: 160, offset: 768)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1979, file: !644, line: 466, baseType: !1749, size: 160, offset: 928)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1979, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2004, file: !644, line: 413, baseType: !1695, size: 256)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2004, file: !644, line: 414, baseType: !1697, size: 768, offset: 256)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2004, file: !644, line: 415, baseType: !1695, size: 256, offset: 1024)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2004, file: !644, line: 416, baseType: !1697, size: 768, offset: 1280)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2004, file: !644, line: 417, baseType: !1695, size: 256, offset: 2048)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2004, file: !644, line: 418, baseType: !1697, size: 768, offset: 2304)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2004, file: !644, line: 419, baseType: !1695, size: 256, offset: 3072)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2004, file: !644, line: 420, baseType: !1697, size: 768, offset: 3328)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2004, file: !644, line: 421, baseType: !1695, size: 256, offset: 4096)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2004, file: !644, line: 422, baseType: !1708, size: 1792, offset: 4352)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2004, file: !644, line: 423, baseType: !1712, size: 1920, offset: 6144)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2004, file: !644, line: 424, baseType: !1717, size: 20608, offset: 8064)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2004, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!2019 = !{!1933, !2020, !2142, !2150, !2152, !2155, !2160, !2162, !2167}
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(name: "_kernel", scope: !1935, file: !1939, line: 40, type: !2022, isLocal: false, isDefinition: true)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !146, line: 158, size: 288, elements: !2023)
!2023 = !{!2024, !2137}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2022, file: !146, line: 159, baseType: !2025, size: 192)
!2025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 192, elements: !368)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !146, line: 100, size: 192, elements: !2027)
!2027 = !{!2028, !2029, !2030, !2131, !2132, !2133, !2134}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2026, file: !146, line: 102, baseType: !108, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2026, file: !146, line: 105, baseType: !283, size: 32, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2026, file: !146, line: 108, baseType: !2031, size: 32, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 32)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2033)
!2033 = !{!2034, !2092, !2104, !2105, !2106, !2107, !2113, !2126}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2032, file: !168, line: 247, baseType: !2035, size: 384)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2036)
!2036 = !{!2037, !2061, !2068, !2069, !2070, !2079, !2080, !2081}
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !2035, file: !168, line: 60, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2035, file: !168, line: 60, size: 64, elements: !2039)
!2039 = !{!2040, !2055}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2038, file: !168, line: 61, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2043)
!2043 = !{!2044, !2050}
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !151, line: 38, baseType: !2045, size: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2042, file: !151, line: 38, size: 32, elements: !2046)
!2046 = !{!2047, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2045, file: !151, line: 39, baseType: !2048, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !151, line: 40, baseType: !2048, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !151, line: 42, baseType: !2051, size: 32, offset: 32)
!2051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2042, file: !151, line: 42, size: 32, elements: !2052)
!2052 = !{!2053, !2054}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2051, file: !151, line: 43, baseType: !2048, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2051, file: !151, line: 44, baseType: !2048, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2038, file: !168, line: 62, baseType: !2056, size: 64)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2057)
!2057 = !{!2058}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2056, file: !180, line: 50, baseType: !2059, size: 64)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2060, size: 64, elements: !185)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2035, file: !168, line: 68, baseType: !2062, size: 32, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2065)
!2065 = !{!2066}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2064, file: !146, line: 232, baseType: !2067, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2042)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2035, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2035, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2070 = !DIDerivedType(tag: DW_TAG_member, scope: !2035, file: !168, line: 90, baseType: !2071, size: 16, offset: 112)
!2071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2035, file: !168, line: 90, size: 16, elements: !2072)
!2072 = !{!2073, !2078}
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !2071, file: !168, line: 91, baseType: !2074, size: 16)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2071, file: !168, line: 91, size: 16, elements: !2075)
!2075 = !{!2076, !2077}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2074, file: !168, line: 96, baseType: !200, size: 8)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2074, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2071, file: !168, line: 100, baseType: !126, size: 16)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2035, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2035, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2035, file: !168, line: 131, baseType: !2082, size: 192, offset: 192)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2083)
!2083 = !{!2084, !2085, !2091}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2082, file: !146, line: 245, baseType: !2041, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2082, file: !146, line: 246, baseType: !2086, size: 32, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2087)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !2090}
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2082, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2032, file: !168, line: 250, baseType: !2093, size: 288, offset: 384)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2094)
!2094 = !{!2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2093, file: !219, line: 26, baseType: !108, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2093, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2093, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2093, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2093, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2093, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2093, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2093, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2093, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2032, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2032, file: !168, line: 256, baseType: !2063, size: 64, offset: 704)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2032, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2032, file: !168, line: 300, baseType: !2108, size: 96, offset: 800)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2109)
!2109 = !{!2110, !2111, !2112}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2108, file: !168, line: 153, baseType: !22, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2108, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2108, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2032, file: !168, line: 325, baseType: !2114, size: 32, offset: 896)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2116)
!2116 = !{!2117, !2123, !2124}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2115, file: !142, line: 5074, baseType: !2118, size: 96)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2119)
!2119 = !{!2120, !2121, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2118, file: !245, line: 57, baseType: !248, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2118, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2118, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2115, file: !142, line: 5075, baseType: !2063, size: 64, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2115, file: !142, line: 5076, baseType: !2125, offset: 160)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2032, file: !168, line: 343, baseType: !2127, size: 64, offset: 928)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2128)
!2128 = !{!2129, !2130}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2127, file: !219, line: 63, baseType: !108, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2127, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2026, file: !146, line: 111, baseType: !2031, size: 32, offset: 96)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2026, file: !146, line: 124, baseType: !107, size: 32, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2026, file: !146, line: 127, baseType: !190, size: 8, offset: 160)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2026, file: !146, line: 153, baseType: !2135, offset: 168)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2136, line: 33, elements: !256)
!2136 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2022, file: !146, line: 170, baseType: !2138, size: 96, offset: 192)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !146, line: 83, size: 96, elements: !2139)
!2139 = !{!2140, !2141}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2138, file: !146, line: 86, baseType: !2031, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2138, file: !146, line: 90, baseType: !2067, size: 64, offset: 32)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1935, file: !1939, line: 43, type: !2144, isLocal: false, isDefinition: true, align: 512)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2145, size: 8704, elements: !2148)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !2146)
!2146 = !{!2147}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2145, file: !319, line: 48, baseType: !123, size: 8)
!2148 = !{!2149}
!2149 = !DISubrange(count: 1088)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1935, file: !1939, line: 44, type: !2032, isLocal: false, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1935, file: !1939, line: 48, type: !2154, isLocal: false, isDefinition: true)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 1024, elements: !368)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1935, file: !1939, line: 86, type: !2157, isLocal: false, isDefinition: true, align: 512)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2145, size: 16896, elements: !2158)
!2158 = !{!369, !2159}
!2159 = !DISubrange(count: 2112)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1935, file: !1939, line: 217, type: !136, isLocal: false, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1935, file: !1939, line: 50, type: !2164, isLocal: true, isDefinition: true, align: 512)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2145, size: 3072, elements: !2165)
!2165 = !{!369, !2166}
!2166 = !DISubrange(count: 384)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "levels", scope: !2169, file: !1939, line: 232, type: !2189, isLocal: true, isDefinition: true)
!2169 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1939, file: !1939, line: 230, type: !2170, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !2172)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{null, !1938}
!2172 = !{!2173, !2174, !2184, !2188}
!2173 = !DILocalVariable(name: "level", arg: 1, scope: !2169, file: !1939, line: 230, type: !1938)
!2174 = !DILocalVariable(name: "entry", scope: !2169, file: !1939, line: 244, type: !2175)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !2178)
!2178 = !{!2179, !2183}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2177, file: !442, line: 60, baseType: !2180, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!107, !1957}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2177, file: !442, line: 65, baseType: !1957, size: 32, offset: 32)
!2184 = !DILocalVariable(name: "dev", scope: !2185, file: !1939, line: 247, type: !1957)
!2185 = distinct !DILexicalBlock(scope: !2186, file: !1939, line: 246, column: 64)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !1939, line: 246, column: 2)
!2187 = distinct !DILexicalBlock(scope: !2169, file: !1939, line: 246, column: 2)
!2188 = !DILocalVariable(name: "rc", scope: !2185, file: !1939, line: 248, type: !107)
!2189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 192, elements: !1342)
!2190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2191)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !2192)
!2192 = !{!2193, !2194}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2191, file: !406, line: 17, baseType: !121, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2191, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "states_str", scope: !2197, file: !2198, line: 276, type: !2319, isLocal: true, isDefinition: true)
!2197 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2198, file: !2198, line: 271, type: !2199, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2310)
!2198 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!121, !2201, !283, !137}
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !2202)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2204)
!2204 = !{!2205, !2263, !2275, !2276, !2277, !2278, !2284, !2297}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2203, file: !168, line: 247, baseType: !2206, size: 384)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2207)
!2207 = !{!2208, !2232, !2239, !2240, !2241, !2250, !2251, !2252}
!2208 = !DIDerivedType(tag: DW_TAG_member, scope: !2206, file: !168, line: 60, baseType: !2209, size: 64)
!2209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2206, file: !168, line: 60, size: 64, elements: !2210)
!2210 = !{!2211, !2226}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2209, file: !168, line: 61, baseType: !2212, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2214)
!2214 = !{!2215, !2221}
!2215 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !151, line: 38, baseType: !2216, size: 32)
!2216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2213, file: !151, line: 38, size: 32, elements: !2217)
!2217 = !{!2218, !2220}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2216, file: !151, line: 39, baseType: !2219, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2216, file: !151, line: 40, baseType: !2219, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !151, line: 42, baseType: !2222, size: 32, offset: 32)
!2222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2213, file: !151, line: 42, size: 32, elements: !2223)
!2223 = !{!2224, !2225}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2222, file: !151, line: 43, baseType: !2219, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2222, file: !151, line: 44, baseType: !2219, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2209, file: !168, line: 62, baseType: !2227, size: 64)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2228)
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2227, file: !180, line: 50, baseType: !2230, size: 64)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2231, size: 64, elements: !185)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2206, file: !168, line: 68, baseType: !2233, size: 32, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2235)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2236)
!2236 = !{!2237}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2235, file: !146, line: 232, baseType: !2238, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2213)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2206, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2206, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2241 = !DIDerivedType(tag: DW_TAG_member, scope: !2206, file: !168, line: 90, baseType: !2242, size: 16, offset: 112)
!2242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2206, file: !168, line: 90, size: 16, elements: !2243)
!2243 = !{!2244, !2249}
!2244 = !DIDerivedType(tag: DW_TAG_member, scope: !2242, file: !168, line: 91, baseType: !2245, size: 16)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2242, file: !168, line: 91, size: 16, elements: !2246)
!2246 = !{!2247, !2248}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2245, file: !168, line: 96, baseType: !200, size: 8)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2245, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2242, file: !168, line: 100, baseType: !126, size: 16)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2206, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2206, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2206, file: !168, line: 131, baseType: !2253, size: 192, offset: 192)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2254)
!2254 = !{!2255, !2256, !2262}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2253, file: !146, line: 245, baseType: !2212, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2253, file: !146, line: 246, baseType: !2257, size: 32, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2258)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{null, !2261}
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2253, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2203, file: !168, line: 250, baseType: !2264, size: 288, offset: 384)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2265)
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2264, file: !219, line: 26, baseType: !108, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2264, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2264, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2264, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2264, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2264, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2264, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2264, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2264, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2203, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2203, file: !168, line: 256, baseType: !2234, size: 64, offset: 704)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2203, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2203, file: !168, line: 300, baseType: !2279, size: 96, offset: 800)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2280)
!2280 = !{!2281, !2282, !2283}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2279, file: !168, line: 153, baseType: !22, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2279, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2279, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2203, file: !168, line: 325, baseType: !2285, size: 32, offset: 896)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2287)
!2287 = !{!2288, !2294, !2295}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2286, file: !142, line: 5074, baseType: !2289, size: 96)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2290)
!2290 = !{!2291, !2292, !2293}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2289, file: !245, line: 57, baseType: !248, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2289, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2289, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2286, file: !142, line: 5075, baseType: !2234, size: 64, offset: 96)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2286, file: !142, line: 5076, baseType: !2296, offset: 160)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2203, file: !168, line: 343, baseType: !2298, size: 64, offset: 928)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2298, file: !219, line: 63, baseType: !108, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2298, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2303, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2304, globals: !2306, splitDebugInlining: false, nameTableKind: None)
!2303 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2304 = !{!106, !121, !102, !190, !107, !2305, !24, !137, !283, !22, !108, !109}
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2306 = !{!2195, !2307}
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(name: "states_sz", scope: !2197, file: !2198, line: 279, type: !2309, isLocal: true, isDefinition: true)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1872, size: 256, elements: !1595)
!2310 = !{!2311, !2312, !2313, !2314, !2315, !2316, !2317}
!2311 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2197, file: !2198, line: 271, type: !2201)
!2312 = !DILocalVariable(name: "buf", arg: 2, scope: !2197, file: !2198, line: 271, type: !283)
!2313 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2197, file: !2198, line: 271, type: !137)
!2314 = !DILocalVariable(name: "off", scope: !2197, file: !2198, line: 273, type: !137)
!2315 = !DILocalVariable(name: "bit", scope: !2197, file: !2198, line: 274, type: !190)
!2316 = !DILocalVariable(name: "thread_state", scope: !2197, file: !2198, line: 275, type: !190)
!2317 = !DILocalVariable(name: "index", scope: !2318, file: !2198, line: 293, type: !190)
!2318 = distinct !DILexicalBlock(scope: !2197, file: !2198, line: 293, column: 2)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 256, elements: !1595)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "lock", scope: !2322, file: !2427, line: 47, type: !2420, isLocal: true, isDefinition: true)
!2322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2323, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2324, globals: !2426, splitDebugInlining: false, nameTableKind: None)
!2323 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2324 = !{!136, !106, !107, !2325, !2340}
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2328)
!2328 = !{!2329, !2335}
!2329 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !151, line: 38, baseType: !2330, size: 32)
!2330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !151, line: 38, size: 32, elements: !2331)
!2331 = !{!2332, !2334}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2330, file: !151, line: 39, baseType: !2333, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2330, file: !151, line: 40, baseType: !2333, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !151, line: 42, baseType: !2336, size: 32, offset: 32)
!2336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !151, line: 42, size: 32, elements: !2337)
!2337 = !{!2338, !2339}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2336, file: !151, line: 43, baseType: !2333, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2336, file: !151, line: 44, baseType: !2333, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2342)
!2342 = !{!2343, !2387, !2399, !2400, !2401, !2402, !2408, !2421}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2341, file: !168, line: 247, baseType: !2344, size: 384)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2345)
!2345 = !{!2346, !2356, !2363, !2364, !2365, !2374, !2375, !2376}
!2346 = !DIDerivedType(tag: DW_TAG_member, scope: !2344, file: !168, line: 60, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2344, file: !168, line: 60, size: 64, elements: !2348)
!2348 = !{!2349, !2350}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2347, file: !168, line: 61, baseType: !2326, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2347, file: !168, line: 62, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2352)
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2351, file: !180, line: 50, baseType: !2354, size: 64)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2355, size: 64, elements: !185)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2344, file: !168, line: 68, baseType: !2357, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2360)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2359, file: !146, line: 232, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2327)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2344, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2344, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2344, file: !168, line: 90, baseType: !2366, size: 16, offset: 112)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2344, file: !168, line: 90, size: 16, elements: !2367)
!2367 = !{!2368, !2373}
!2368 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !168, line: 91, baseType: !2369, size: 16)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2366, file: !168, line: 91, size: 16, elements: !2370)
!2370 = !{!2371, !2372}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2369, file: !168, line: 96, baseType: !200, size: 8)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2369, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2366, file: !168, line: 100, baseType: !126, size: 16)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2344, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2344, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2344, file: !168, line: 131, baseType: !2377, size: 192, offset: 192)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2378)
!2378 = !{!2379, !2380, !2386}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2377, file: !146, line: 245, baseType: !2326, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2377, file: !146, line: 246, baseType: !2381, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2382)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{null, !2385}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2377, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2341, file: !168, line: 250, baseType: !2388, size: 288, offset: 384)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2389)
!2389 = !{!2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2388, file: !219, line: 26, baseType: !108, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2388, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2388, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2388, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2388, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2388, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2388, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2388, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2388, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2341, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2341, file: !168, line: 256, baseType: !2358, size: 64, offset: 704)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2341, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2341, file: !168, line: 300, baseType: !2403, size: 96, offset: 800)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2404)
!2404 = !{!2405, !2406, !2407}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2403, file: !168, line: 153, baseType: !22, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2403, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2403, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2341, file: !168, line: 325, baseType: !2409, size: 32, offset: 896)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2411)
!2411 = !{!2412, !2418, !2419}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2410, file: !142, line: 5074, baseType: !2413, size: 96)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2414)
!2414 = !{!2415, !2416, !2417}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2413, file: !245, line: 57, baseType: !248, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2413, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2413, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2410, file: !142, line: 5075, baseType: !2358, size: 64, offset: 96)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2410, file: !142, line: 5076, baseType: !2420, offset: 160)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2341, file: !168, line: 343, baseType: !2422, size: 64, offset: 928)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2423)
!2423 = !{!2424, !2425}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2422, file: !219, line: 63, baseType: !108, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2422, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2426 = !{!2320}
!2427 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2428 = !DIGlobalVariableExpression(var: !2429, expr: !DIExpression())
!2429 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2430, file: !2538, line: 56, type: !2527, isLocal: false, isDefinition: true)
!2430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2431, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2432, globals: !2535, splitDebugInlining: false, nameTableKind: None)
!2431 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2432 = !{!2433, !283, !106, !2533, !401, !102, !334, !107, !108, !109, !2534}
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2435)
!2435 = !{!2436, !2494, !2506, !2507, !2508, !2509, !2515, !2528}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2434, file: !168, line: 247, baseType: !2437, size: 384)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2438)
!2438 = !{!2439, !2463, !2470, !2471, !2472, !2481, !2482, !2483}
!2439 = !DIDerivedType(tag: DW_TAG_member, scope: !2437, file: !168, line: 60, baseType: !2440, size: 64)
!2440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2437, file: !168, line: 60, size: 64, elements: !2441)
!2441 = !{!2442, !2457}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2440, file: !168, line: 61, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2444)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2445)
!2445 = !{!2446, !2452}
!2446 = !DIDerivedType(tag: DW_TAG_member, scope: !2444, file: !151, line: 38, baseType: !2447, size: 32)
!2447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2444, file: !151, line: 38, size: 32, elements: !2448)
!2448 = !{!2449, !2451}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2447, file: !151, line: 39, baseType: !2450, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2447, file: !151, line: 40, baseType: !2450, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2444, file: !151, line: 42, baseType: !2453, size: 32, offset: 32)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2444, file: !151, line: 42, size: 32, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2453, file: !151, line: 43, baseType: !2450, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2453, file: !151, line: 44, baseType: !2450, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2440, file: !168, line: 62, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2459)
!2459 = !{!2460}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2458, file: !180, line: 50, baseType: !2461, size: 64)
!2461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2462, size: 64, elements: !185)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2437, file: !168, line: 68, baseType: !2464, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2467)
!2467 = !{!2468}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2466, file: !146, line: 232, baseType: !2469, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2444)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2437, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2437, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2472 = !DIDerivedType(tag: DW_TAG_member, scope: !2437, file: !168, line: 90, baseType: !2473, size: 16, offset: 112)
!2473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2437, file: !168, line: 90, size: 16, elements: !2474)
!2474 = !{!2475, !2480}
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2473, file: !168, line: 91, baseType: !2476, size: 16)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2473, file: !168, line: 91, size: 16, elements: !2477)
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2476, file: !168, line: 96, baseType: !200, size: 8)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2476, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2473, file: !168, line: 100, baseType: !126, size: 16)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2437, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2437, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2437, file: !168, line: 131, baseType: !2484, size: 192, offset: 192)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2485)
!2485 = !{!2486, !2487, !2493}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2484, file: !146, line: 245, baseType: !2443, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2484, file: !146, line: 246, baseType: !2488, size: 32, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2489)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{null, !2492}
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2484, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2434, file: !168, line: 250, baseType: !2495, size: 288, offset: 384)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2495, file: !219, line: 26, baseType: !108, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2495, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2495, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2495, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2495, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2495, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2495, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2495, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2495, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2434, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2434, file: !168, line: 256, baseType: !2465, size: 64, offset: 704)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2434, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2434, file: !168, line: 300, baseType: !2510, size: 96, offset: 800)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2511)
!2511 = !{!2512, !2513, !2514}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2510, file: !168, line: 153, baseType: !22, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2510, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2510, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2434, file: !168, line: 325, baseType: !2516, size: 32, offset: 896)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2518)
!2518 = !{!2519, !2525, !2526}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2517, file: !142, line: 5074, baseType: !2520, size: 96)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2521)
!2521 = !{!2522, !2523, !2524}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2520, file: !245, line: 57, baseType: !248, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2520, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2520, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2517, file: !142, line: 5075, baseType: !2465, size: 64, offset: 96)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2517, file: !142, line: 5076, baseType: !2527, offset: 160)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2434, file: !168, line: 343, baseType: !2529, size: 64, offset: 928)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2530)
!2530 = !{!2531, !2532}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2529, file: !219, line: 63, baseType: !108, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2529, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2535 = !{!2428, !2536, !2539, !2541}
!2536 = !DIGlobalVariableExpression(var: !2537, expr: !DIExpression())
!2537 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2430, file: !2538, line: 404, type: !107, isLocal: true, isDefinition: true)
!2538 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2430, file: !2538, line: 405, type: !107, isLocal: true, isDefinition: true)
!2541 = !DIGlobalVariableExpression(var: !2542, expr: !DIExpression())
!2542 = distinct !DIGlobalVariable(name: "pending_current", scope: !2430, file: !2538, line: 425, type: !2433, isLocal: true, isDefinition: true)
!2543 = !DIGlobalVariableExpression(var: !2544, expr: !DIExpression())
!2544 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2545, file: !2575, line: 15, type: !109, isLocal: true, isDefinition: true)
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2547, globals: !2572, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2547 = !{!102, !106, !334, !108, !109, !107, !2548, !283, !104}
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2550)
!2550 = !{!2551, !2566, !2571}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2549, file: !146, line: 245, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2553)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2554)
!2554 = !{!2555, !2561}
!2555 = !DIDerivedType(tag: DW_TAG_member, scope: !2553, file: !151, line: 38, baseType: !2556, size: 32)
!2556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2553, file: !151, line: 38, size: 32, elements: !2557)
!2557 = !{!2558, !2560}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2556, file: !151, line: 39, baseType: !2559, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2556, file: !151, line: 40, baseType: !2559, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, scope: !2553, file: !151, line: 42, baseType: !2562, size: 32, offset: 32)
!2562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2553, file: !151, line: 42, size: 32, elements: !2563)
!2563 = !{!2564, !2565}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2562, file: !151, line: 43, baseType: !2559, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2562, file: !151, line: 44, baseType: !2559, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2549, file: !146, line: 246, baseType: !2567, size: 32, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2568)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{null, !2548}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2549, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2572 = !{!2543, !2573, !2577, !2579}
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2545, file: !2575, line: 19, type: !2576, isLocal: true, isDefinition: true)
!2575 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2577 = !DIGlobalVariableExpression(var: !2578, expr: !DIExpression())
!2578 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2545, file: !2575, line: 25, type: !107, isLocal: true, isDefinition: true)
!2579 = !DIGlobalVariableExpression(var: !2580, expr: !DIExpression())
!2580 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2545, file: !2575, line: 17, type: !2581, isLocal: true, isDefinition: true)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2553)
!2582 = !DIGlobalVariableExpression(var: !2583, expr: !DIExpression())
!2583 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2584, file: !2603, line: 55, type: !2604, isLocal: true, isDefinition: true, align: 32)
!2584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2585, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2586, globals: !2602, splitDebugInlining: false, nameTableKind: None)
!2585 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2586 = !{!106, !102, !107, !2587}
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2590)
!2590 = !{!2591, !2597}
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !151, line: 38, baseType: !2592, size: 32)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !151, line: 38, size: 32, elements: !2593)
!2593 = !{!2594, !2596}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2592, file: !151, line: 39, baseType: !2595, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2592, file: !151, line: 40, baseType: !2595, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !151, line: 42, baseType: !2598, size: 32, offset: 32)
!2598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !151, line: 42, size: 32, elements: !2599)
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2598, file: !151, line: 43, baseType: !2595, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2598, file: !151, line: 44, baseType: !2595, size: 32)
!2602 = !{!2582}
!2603 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !2606)
!2606 = !{!2607, !2614}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2605, file: !442, line: 60, baseType: !2608, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!107, !2611}
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2613)
!2613 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 48, flags: DIFlagFwdDecl)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2605, file: !442, line: 65, baseType: !2611, size: 32, offset: 32)
!2615 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2616, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2616 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2618, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2618 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2621, retainedTypes: !2629, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2621 = !{!30, !2622}
!2622 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2623, line: 54, baseType: !32, size: 32, elements: !2624)
!2623 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2624 = !{!2625, !2626, !2627, !2628}
!2625 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2626 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2627 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2628 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2629 = !{!106, !137, !401, !24, !2630, !22, !2636, !107, !1002, !2651}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2623, line: 58, baseType: !2632)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2623, line: 58, size: 64, elements: !2633)
!2633 = !{!2634}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2632, file: !2623, line: 58, baseType: !2635, size: 64)
!2635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 64, elements: !1595)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 32)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2623, line: 68, size: 128, elements: !2638)
!2638 = !{!2639, !2642, !2643, !2644}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2637, file: !2623, line: 69, baseType: !2640, size: 64)
!2640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2641, size: 64, elements: !185)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2623, line: 61, baseType: !108)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2637, file: !2623, line: 70, baseType: !2641, size: 32, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2637, file: !2623, line: 71, baseType: !108, size: 32, offset: 96)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2637, file: !2623, line: 77, baseType: !2645, offset: 128)
!2645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2646, elements: !2649)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2623, line: 64, size: 32, elements: !2647)
!2647 = !{!2648}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2646, file: !2623, line: 65, baseType: !2641, size: 32)
!2649 = !{!2650}
!2650 = !DISubrange(count: 0)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2654, retainedTypes: !2674, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2654 = !{!2655, !2663}
!2655 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2656, line: 69, baseType: !32, size: 32, elements: !2657)
!2656 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2657 = !{!2658, !2659, !2660, !2661, !2662}
!2658 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2659 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2660 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2661 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2662 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2663 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2656, line: 56, baseType: !32, size: 32, elements: !2664)
!2664 = !{!2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673}
!2665 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2666 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2667 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2668 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2669 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2670 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2671 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2672 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2673 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2674 = !{!107, !2655, !2663, !2675, !201, !468, !2677, !2678, !191, !127, !121, !137, !106, !22, !32, !396, !2680, !2681, !398, !397, !105, !399, !2676, !2682, !2683, !2684, !2685}
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2656, line: 31, baseType: !2676)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !105)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !138, line: 329, baseType: !32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2656, line: 32, baseType: !2679)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !138, line: 145, baseType: !107)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 32)
!2686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2687, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2687 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2689, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2690, splitDebugInlining: false, nameTableKind: None)
!2689 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2690 = !{!121, !191, !107, !32}
!2691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2693, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2693 = !{!2694, !30}
!2694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2695, line: 27, baseType: !32, size: 32, elements: !2696)
!2695 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2696 = !{!2697, !2698, !2699, !2700, !2701}
!2697 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2698 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2699 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2700 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2701 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2704, retainedTypes: !2705, splitDebugInlining: false, nameTableKind: None)
!2703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2704 = !{!725, !2694, !30}
!2705 = !{!911, !2706, !106, !107, !334, !108, !190, !2723}
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !2708)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !2709)
!2709 = !{!2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2708, file: !644, line: 413, baseType: !1695, size: 256)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2708, file: !644, line: 414, baseType: !1697, size: 768, offset: 256)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2708, file: !644, line: 415, baseType: !1695, size: 256, offset: 1024)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2708, file: !644, line: 416, baseType: !1697, size: 768, offset: 1280)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2708, file: !644, line: 417, baseType: !1695, size: 256, offset: 2048)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2708, file: !644, line: 418, baseType: !1697, size: 768, offset: 2304)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2708, file: !644, line: 419, baseType: !1695, size: 256, offset: 3072)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2708, file: !644, line: 420, baseType: !1697, size: 768, offset: 3328)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2708, file: !644, line: 421, baseType: !1695, size: 256, offset: 4096)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2708, file: !644, line: 422, baseType: !1708, size: 1792, offset: 4352)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2708, file: !644, line: 423, baseType: !1712, size: 1920, offset: 6144)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2708, file: !644, line: 424, baseType: !1717, size: 20608, offset: 8064)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2708, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2725)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2726)
!2726 = !{!2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2725, file: !644, line: 447, baseType: !648, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2725, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2725, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2725, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2725, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2725, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2725, file: !644, line: 453, baseType: !1732, size: 96, offset: 192)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2725, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2725, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2725, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2725, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2725, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2725, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2725, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2725, file: !644, line: 461, baseType: !1741, size: 64, offset: 512)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2725, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2725, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2725, file: !644, line: 464, baseType: !1745, size: 128, offset: 640)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2725, file: !644, line: 465, baseType: !1747, size: 160, offset: 768)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2725, file: !644, line: 466, baseType: !1749, size: 160, offset: 928)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2725, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2749, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2749 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2752, splitDebugInlining: false, nameTableKind: None)
!2751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2752 = !{!106, !107, !22, !2753}
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2755)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2756)
!2756 = !{!2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2755, file: !644, line: 447, baseType: !648, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2755, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2755, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2755, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2755, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2755, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2755, file: !644, line: 453, baseType: !1732, size: 96, offset: 192)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2755, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2755, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2755, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2755, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2755, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2755, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2755, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2755, file: !644, line: 461, baseType: !1741, size: 64, offset: 512)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2755, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2755, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2755, file: !644, line: 464, baseType: !1745, size: 128, offset: 640)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2755, file: !644, line: 465, baseType: !1747, size: 160, offset: 768)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2755, file: !644, line: 466, baseType: !1749, size: 160, offset: 928)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2755, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2778 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2779, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2780, splitDebugInlining: false, nameTableKind: None)
!2779 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2780 = !{!2781, !106, !107}
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2783)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2784)
!2784 = !{!2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2783, file: !644, line: 447, baseType: !648, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2783, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2783, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2783, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2783, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2783, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2783, file: !644, line: 453, baseType: !1732, size: 96, offset: 192)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2783, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2783, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2783, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2783, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2783, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2783, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2783, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2783, file: !644, line: 461, baseType: !1741, size: 64, offset: 512)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2783, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2783, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2783, file: !644, line: 464, baseType: !1745, size: 128, offset: 640)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2783, file: !644, line: 465, baseType: !1747, size: 160, offset: 768)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2783, file: !644, line: 466, baseType: !1749, size: 160, offset: 928)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2783, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2808, splitDebugInlining: false, nameTableKind: None)
!2807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2808 = !{!2809, !108, !106, !107}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 32)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2811, line: 98, size: 256, elements: !2812)
!2811 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2812 = !{!2813, !2818, !2823, !2828, !2833, !2838, !2843, !2848}
!2813 = !DIDerivedType(tag: DW_TAG_member, scope: !2810, file: !2811, line: 99, baseType: !2814, size: 32)
!2814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2810, file: !2811, line: 99, size: 32, elements: !2815)
!2815 = !{!2816, !2817}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2814, file: !2811, line: 99, baseType: !108, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2814, file: !2811, line: 99, baseType: !108, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, scope: !2810, file: !2811, line: 100, baseType: !2819, size: 32, offset: 32)
!2819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2810, file: !2811, line: 100, size: 32, elements: !2820)
!2820 = !{!2821, !2822}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2819, file: !2811, line: 100, baseType: !108, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2819, file: !2811, line: 100, baseType: !108, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, scope: !2810, file: !2811, line: 101, baseType: !2824, size: 32, offset: 64)
!2824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2810, file: !2811, line: 101, size: 32, elements: !2825)
!2825 = !{!2826, !2827}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2824, file: !2811, line: 101, baseType: !108, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2824, file: !2811, line: 101, baseType: !108, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, scope: !2810, file: !2811, line: 102, baseType: !2829, size: 32, offset: 96)
!2829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2810, file: !2811, line: 102, size: 32, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2829, file: !2811, line: 102, baseType: !108, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2829, file: !2811, line: 102, baseType: !108, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, scope: !2810, file: !2811, line: 103, baseType: !2834, size: 32, offset: 128)
!2834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2810, file: !2811, line: 103, size: 32, elements: !2835)
!2835 = !{!2836, !2837}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2834, file: !2811, line: 103, baseType: !108, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2834, file: !2811, line: 103, baseType: !108, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, scope: !2810, file: !2811, line: 104, baseType: !2839, size: 32, offset: 160)
!2839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2810, file: !2811, line: 104, size: 32, elements: !2840)
!2840 = !{!2841, !2842}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2839, file: !2811, line: 104, baseType: !108, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2839, file: !2811, line: 104, baseType: !108, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, scope: !2810, file: !2811, line: 105, baseType: !2844, size: 32, offset: 192)
!2844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2810, file: !2811, line: 105, size: 32, elements: !2845)
!2845 = !{!2846, !2847}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2844, file: !2811, line: 105, baseType: !108, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2844, file: !2811, line: 105, baseType: !108, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2810, file: !2811, line: 106, baseType: !108, size: 32, offset: 224)
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2693, retainedTypes: !2851, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2851 = !{!2852, !106, !107, !2877, !2651, !108}
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2854)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2855)
!2855 = !{!2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2854, file: !644, line: 447, baseType: !648, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2854, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2854, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2854, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2854, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2854, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2854, file: !644, line: 453, baseType: !1732, size: 96, offset: 192)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2854, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2854, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2854, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2854, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2854, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2854, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2854, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2854, file: !644, line: 461, baseType: !1741, size: 64, offset: 512)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2854, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2854, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2854, file: !644, line: 464, baseType: !1745, size: 128, offset: 640)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2854, file: !644, line: 465, baseType: !1747, size: 160, offset: 768)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2854, file: !644, line: 466, baseType: !1749, size: 160, offset: 928)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2854, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2811, line: 141, baseType: !2879)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2811, line: 97, size: 256, elements: !2880)
!2880 = !{!2881}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2879, file: !2811, line: 107, baseType: !2882, size: 256)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2811, line: 98, size: 256, elements: !2883)
!2883 = !{!2884, !2889, !2894, !2899, !2904, !2909, !2914, !2919}
!2884 = !DIDerivedType(tag: DW_TAG_member, scope: !2882, file: !2811, line: 99, baseType: !2885, size: 32)
!2885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2882, file: !2811, line: 99, size: 32, elements: !2886)
!2886 = !{!2887, !2888}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2885, file: !2811, line: 99, baseType: !108, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2885, file: !2811, line: 99, baseType: !108, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, scope: !2882, file: !2811, line: 100, baseType: !2890, size: 32, offset: 32)
!2890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2882, file: !2811, line: 100, size: 32, elements: !2891)
!2891 = !{!2892, !2893}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2890, file: !2811, line: 100, baseType: !108, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2890, file: !2811, line: 100, baseType: !108, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, scope: !2882, file: !2811, line: 101, baseType: !2895, size: 32, offset: 64)
!2895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2882, file: !2811, line: 101, size: 32, elements: !2896)
!2896 = !{!2897, !2898}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2895, file: !2811, line: 101, baseType: !108, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2895, file: !2811, line: 101, baseType: !108, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !2882, file: !2811, line: 102, baseType: !2900, size: 32, offset: 96)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2882, file: !2811, line: 102, size: 32, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2900, file: !2811, line: 102, baseType: !108, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2900, file: !2811, line: 102, baseType: !108, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2882, file: !2811, line: 103, baseType: !2905, size: 32, offset: 128)
!2905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2882, file: !2811, line: 103, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2905, file: !2811, line: 103, baseType: !108, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2905, file: !2811, line: 103, baseType: !108, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, scope: !2882, file: !2811, line: 104, baseType: !2910, size: 32, offset: 160)
!2910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2882, file: !2811, line: 104, size: 32, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2910, file: !2811, line: 104, baseType: !108, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2910, file: !2811, line: 104, baseType: !108, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, scope: !2882, file: !2811, line: 105, baseType: !2915, size: 32, offset: 192)
!2915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2882, file: !2811, line: 105, size: 32, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2915, file: !2811, line: 105, baseType: !108, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2915, file: !2811, line: 105, baseType: !108, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2882, file: !2811, line: 106, baseType: !108, size: 32, offset: 224)
!2920 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2921, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1680, retainedTypes: !2922, splitDebugInlining: false, nameTableKind: None)
!2921 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2922 = !{!911, !334, !190, !108, !2923, !2940}
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !2925)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !2926)
!2926 = !{!2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2925, file: !644, line: 413, baseType: !1695, size: 256)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2925, file: !644, line: 414, baseType: !1697, size: 768, offset: 256)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2925, file: !644, line: 415, baseType: !1695, size: 256, offset: 1024)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2925, file: !644, line: 416, baseType: !1697, size: 768, offset: 1280)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2925, file: !644, line: 417, baseType: !1695, size: 256, offset: 2048)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2925, file: !644, line: 418, baseType: !1697, size: 768, offset: 2304)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2925, file: !644, line: 419, baseType: !1695, size: 256, offset: 3072)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2925, file: !644, line: 420, baseType: !1697, size: 768, offset: 3328)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2925, file: !644, line: 421, baseType: !1695, size: 256, offset: 4096)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2925, file: !644, line: 422, baseType: !1708, size: 1792, offset: 4352)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2925, file: !644, line: 423, baseType: !1712, size: 1920, offset: 6144)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2925, file: !644, line: 424, baseType: !1717, size: 20608, offset: 8064)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2925, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2942)
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2943)
!2943 = !{!2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2942, file: !644, line: 447, baseType: !648, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2942, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2942, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2942, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2942, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2942, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2942, file: !644, line: 453, baseType: !1732, size: 96, offset: 192)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2942, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2942, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2942, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2942, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2942, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2942, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2942, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2942, file: !644, line: 461, baseType: !1741, size: 64, offset: 512)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2942, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2942, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2942, file: !644, line: 464, baseType: !1745, size: 128, offset: 640)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2942, file: !644, line: 465, baseType: !1747, size: 160, offset: 768)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2942, file: !644, line: 466, baseType: !1749, size: 160, offset: 928)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2942, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2965 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2966, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2967, splitDebugInlining: false, nameTableKind: None)
!2966 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2967 = !{!2968, !106, !107}
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2970, file: !644, line: 447, baseType: !648, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2970, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2970, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2970, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2970, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2970, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2970, file: !644, line: 453, baseType: !1732, size: 96, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2970, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2970, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2970, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2970, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2970, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2970, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2970, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2970, file: !644, line: 461, baseType: !1741, size: 64, offset: 512)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2970, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2970, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2970, file: !644, line: 464, baseType: !1745, size: 128, offset: 640)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2970, file: !644, line: 465, baseType: !1747, size: 160, offset: 768)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2970, file: !644, line: 466, baseType: !1749, size: 160, offset: 928)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2970, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2993 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2994, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2995, splitDebugInlining: false, nameTableKind: None)
!2994 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!2995 = !{!123, !283, !137, !1107, !2996, !191, !106}
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!2998 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2999, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2999 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus_iterable_sections.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3002, splitDebugInlining: false, nameTableKind: None)
!3001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3002 = !{!3003}
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 510, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 477, size: 1216, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3005, file: !427, line: 479, baseType: !431, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3005, file: !427, line: 480, baseType: !431, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3005, file: !427, line: 481, baseType: !431, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3005, file: !427, line: 482, baseType: !431, size: 32, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3005, file: !427, line: 483, baseType: !431, size: 32, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3005, file: !427, line: 484, baseType: !431, size: 32, offset: 160)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3005, file: !427, line: 485, baseType: !971, size: 64, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3005, file: !427, line: 486, baseType: !431, size: 32, offset: 256)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3005, file: !427, line: 487, baseType: !431, size: 32, offset: 288)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3005, file: !427, line: 488, baseType: !971, size: 64, offset: 320)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3005, file: !427, line: 489, baseType: !431, size: 32, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3005, file: !427, line: 490, baseType: !431, size: 32, offset: 416)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3005, file: !427, line: 491, baseType: !971, size: 64, offset: 448)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3005, file: !427, line: 492, baseType: !431, size: 32, offset: 512)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3005, file: !427, line: 493, baseType: !431, size: 32, offset: 544)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3005, file: !427, line: 494, baseType: !971, size: 64, offset: 576)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3005, file: !427, line: 495, baseType: !431, size: 32, offset: 640)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3005, file: !427, line: 496, baseType: !431, size: 32, offset: 672)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3005, file: !427, line: 497, baseType: !971, size: 64, offset: 704)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3005, file: !427, line: 498, baseType: !431, size: 32, offset: 768)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3005, file: !427, line: 499, baseType: !431, size: 32, offset: 800)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3005, file: !427, line: 500, baseType: !971, size: 64, offset: 832)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3005, file: !427, line: 501, baseType: !431, size: 32, offset: 896)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3005, file: !427, line: 502, baseType: !431, size: 32, offset: 928)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3005, file: !427, line: 503, baseType: !971, size: 64, offset: 960)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3005, file: !427, line: 504, baseType: !431, size: 32, offset: 1024)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3005, file: !427, line: 505, baseType: !431, size: 32, offset: 1056)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3005, file: !427, line: 506, baseType: !108, size: 32, offset: 1088)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3005, file: !427, line: 507, baseType: !431, size: 32, offset: 1120)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3005, file: !427, line: 508, baseType: !431, size: 32, offset: 1152)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3005, file: !427, line: 509, baseType: !431, size: 32, offset: 1184)
!3038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3039, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3039 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3040 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3042, retainedTypes: !3058, splitDebugInlining: false, nameTableKind: None)
!3041 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3042 = !{!3043, !3050, !3054}
!3043 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3044, line: 38, baseType: !32, size: 32, elements: !3045)
!3044 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3045 = !{!3046, !3047, !3048, !3049}
!3046 = !DIEnumerator(name: "HAL_OK", value: 0)
!3047 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3048 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3049 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3050 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !948, line: 184, baseType: !32, size: 32, elements: !3051)
!3051 = !{!3052, !3053}
!3052 = !DIEnumerator(name: "RESET", value: 0)
!3053 = !DIEnumerator(name: "SET", value: 1)
!3054 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !948, line: 190, baseType: !32, size: 32, elements: !3055)
!3055 = !{!3056, !3057}
!3056 = !DIEnumerator(name: "DISABLE", value: 0)
!3057 = !DIEnumerator(name: "ENABLE", value: 1)
!3058 = !{!106, !3059, !190, !108, !1589, !3094, !3100, !3111, !126, !3112, !109}
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 510, baseType: !3061)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 477, size: 1216, elements: !3062)
!3062 = !{!3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3061, file: !427, line: 479, baseType: !431, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3061, file: !427, line: 480, baseType: !431, size: 32, offset: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3061, file: !427, line: 481, baseType: !431, size: 32, offset: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3061, file: !427, line: 482, baseType: !431, size: 32, offset: 96)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3061, file: !427, line: 483, baseType: !431, size: 32, offset: 128)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3061, file: !427, line: 484, baseType: !431, size: 32, offset: 160)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3061, file: !427, line: 485, baseType: !971, size: 64, offset: 192)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3061, file: !427, line: 486, baseType: !431, size: 32, offset: 256)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3061, file: !427, line: 487, baseType: !431, size: 32, offset: 288)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3061, file: !427, line: 488, baseType: !971, size: 64, offset: 320)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3061, file: !427, line: 489, baseType: !431, size: 32, offset: 384)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3061, file: !427, line: 490, baseType: !431, size: 32, offset: 416)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3061, file: !427, line: 491, baseType: !971, size: 64, offset: 448)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3061, file: !427, line: 492, baseType: !431, size: 32, offset: 512)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3061, file: !427, line: 493, baseType: !431, size: 32, offset: 544)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3061, file: !427, line: 494, baseType: !971, size: 64, offset: 576)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3061, file: !427, line: 495, baseType: !431, size: 32, offset: 640)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3061, file: !427, line: 496, baseType: !431, size: 32, offset: 672)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3061, file: !427, line: 497, baseType: !971, size: 64, offset: 704)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3061, file: !427, line: 498, baseType: !431, size: 32, offset: 768)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3061, file: !427, line: 499, baseType: !431, size: 32, offset: 800)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3061, file: !427, line: 500, baseType: !971, size: 64, offset: 832)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3061, file: !427, line: 501, baseType: !431, size: 32, offset: 896)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3061, file: !427, line: 502, baseType: !431, size: 32, offset: 928)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3061, file: !427, line: 503, baseType: !971, size: 64, offset: 960)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3061, file: !427, line: 504, baseType: !431, size: 32, offset: 1024)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3061, file: !427, line: 505, baseType: !431, size: 32, offset: 1056)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3061, file: !427, line: 506, baseType: !108, size: 32, offset: 1088)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3061, file: !427, line: 507, baseType: !431, size: 32, offset: 1120)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3061, file: !427, line: 508, baseType: !431, size: 32, offset: 1152)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3061, file: !427, line: 509, baseType: !431, size: 32, offset: 1184)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !427, line: 471, baseType: !3096)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 467, size: 64, elements: !3097)
!3097 = !{!3098, !3099}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3096, file: !427, line: 469, baseType: !431, size: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3096, file: !427, line: 470, baseType: !431, size: 32, offset: 32)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !427, line: 379, baseType: !3102)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 370, size: 224, elements: !3103)
!3103 = !{!3104, !3105, !3106, !3107, !3108, !3109, !3110}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3102, file: !427, line: 372, baseType: !431, size: 32)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3102, file: !427, line: 373, baseType: !431, size: 32, offset: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3102, file: !427, line: 374, baseType: !431, size: 32, offset: 64)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3102, file: !427, line: 375, baseType: !431, size: 32, offset: 96)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3102, file: !427, line: 376, baseType: !431, size: 32, offset: 128)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3102, file: !427, line: 377, baseType: !431, size: 32, offset: 160)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3102, file: !427, line: 378, baseType: !431, size: 32, offset: 192)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !427, line: 396, baseType: !3114)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 385, size: 320, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3114, file: !427, line: 387, baseType: !431, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3114, file: !427, line: 388, baseType: !431, size: 32, offset: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3114, file: !427, line: 389, baseType: !431, size: 32, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3114, file: !427, line: 390, baseType: !431, size: 32, offset: 96)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3114, file: !427, line: 391, baseType: !431, size: 32, offset: 128)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3114, file: !427, line: 392, baseType: !431, size: 32, offset: 160)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3114, file: !427, line: 393, baseType: !431, size: 32, offset: 192)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3114, file: !427, line: 394, baseType: !431, size: 32, offset: 224)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3114, file: !427, line: 395, baseType: !1261, size: 64, offset: 256)
!3125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3126, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3127, retainedTypes: !3128, splitDebugInlining: false, nameTableKind: None)
!3126 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3127 = !{!947}
!3128 = !{!3129, !108, !3137, !3143, !3154}
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 32)
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !644, line: 770, baseType: !3131)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 764, size: 128, elements: !3132)
!3132 = !{!3133, !3134, !3135, !3136}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3131, file: !644, line: 766, baseType: !431, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3131, file: !644, line: 767, baseType: !431, size: 32, offset: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3131, file: !644, line: 768, baseType: !431, size: 32, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3131, file: !644, line: 769, baseType: !648, size: 32, offset: 96)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !427, line: 471, baseType: !3139)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 467, size: 64, elements: !3140)
!3140 = !{!3141, !3142}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3139, file: !427, line: 469, baseType: !431, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3139, file: !427, line: 470, baseType: !431, size: 32, offset: 32)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 32)
!3144 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !427, line: 379, baseType: !3145)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 370, size: 224, elements: !3146)
!3146 = !{!3147, !3148, !3149, !3150, !3151, !3152, !3153}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3145, file: !427, line: 372, baseType: !431, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3145, file: !427, line: 373, baseType: !431, size: 32, offset: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3145, file: !427, line: 374, baseType: !431, size: 32, offset: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3145, file: !427, line: 375, baseType: !431, size: 32, offset: 96)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3145, file: !427, line: 376, baseType: !431, size: 32, offset: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3145, file: !427, line: 377, baseType: !431, size: 32, offset: 160)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3145, file: !427, line: 378, baseType: !431, size: 32, offset: 192)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 510, baseType: !3156)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 477, size: 1216, elements: !3157)
!3157 = !{!3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3156, file: !427, line: 479, baseType: !431, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3156, file: !427, line: 480, baseType: !431, size: 32, offset: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3156, file: !427, line: 481, baseType: !431, size: 32, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3156, file: !427, line: 482, baseType: !431, size: 32, offset: 96)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3156, file: !427, line: 483, baseType: !431, size: 32, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3156, file: !427, line: 484, baseType: !431, size: 32, offset: 160)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3156, file: !427, line: 485, baseType: !971, size: 64, offset: 192)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3156, file: !427, line: 486, baseType: !431, size: 32, offset: 256)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3156, file: !427, line: 487, baseType: !431, size: 32, offset: 288)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3156, file: !427, line: 488, baseType: !971, size: 64, offset: 320)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3156, file: !427, line: 489, baseType: !431, size: 32, offset: 384)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3156, file: !427, line: 490, baseType: !431, size: 32, offset: 416)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3156, file: !427, line: 491, baseType: !971, size: 64, offset: 448)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3156, file: !427, line: 492, baseType: !431, size: 32, offset: 512)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3156, file: !427, line: 493, baseType: !431, size: 32, offset: 544)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3156, file: !427, line: 494, baseType: !971, size: 64, offset: 576)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3156, file: !427, line: 495, baseType: !431, size: 32, offset: 640)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3156, file: !427, line: 496, baseType: !431, size: 32, offset: 672)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3156, file: !427, line: 497, baseType: !971, size: 64, offset: 704)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3156, file: !427, line: 498, baseType: !431, size: 32, offset: 768)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3156, file: !427, line: 499, baseType: !431, size: 32, offset: 800)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3156, file: !427, line: 500, baseType: !971, size: 64, offset: 832)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3156, file: !427, line: 501, baseType: !431, size: 32, offset: 896)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3156, file: !427, line: 502, baseType: !431, size: 32, offset: 928)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3156, file: !427, line: 503, baseType: !971, size: 64, offset: 960)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3156, file: !427, line: 504, baseType: !431, size: 32, offset: 1024)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3156, file: !427, line: 505, baseType: !431, size: 32, offset: 1056)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3156, file: !427, line: 506, baseType: !108, size: 32, offset: 1088)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3156, file: !427, line: 507, baseType: !431, size: 32, offset: 1120)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3156, file: !427, line: 508, baseType: !431, size: 32, offset: 1152)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3156, file: !427, line: 509, baseType: !431, size: 32, offset: 1184)
!3189 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3190, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3191, splitDebugInlining: false, nameTableKind: None)
!3190 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3191 = !{!106, !137}
!3192 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3193, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3194, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3193 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3194 = !{!3195, !3202, !30}
!3195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3196, line: 14, baseType: !32, size: 32, elements: !3197)
!3196 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3197 = !{!3198, !3199, !3200, !3201}
!3198 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3199 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3200 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3201 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3202 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3196, line: 42, baseType: !32, size: 32, elements: !3203)
!3203 = !{!3204, !3205, !3206, !3207, !3208, !3209}
!3204 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3205 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3206 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3207 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3208 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3209 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3211, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3211 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3213, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3214, splitDebugInlining: false, nameTableKind: None)
!3213 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3214 = !{!106, !107, !3215, !3230}
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !3217)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !3218)
!3218 = !{!3219, !3225}
!3219 = !DIDerivedType(tag: DW_TAG_member, scope: !3217, file: !151, line: 38, baseType: !3220, size: 32)
!3220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3217, file: !151, line: 38, size: 32, elements: !3221)
!3221 = !{!3222, !3224}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3220, file: !151, line: 39, baseType: !3223, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3220, file: !151, line: 40, baseType: !3223, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_member, scope: !3217, file: !151, line: 42, baseType: !3226, size: 32, offset: 32)
!3226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3217, file: !151, line: 42, size: 32, elements: !3227)
!3227 = !{!3228, !3229}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3226, file: !151, line: 43, baseType: !3223, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3226, file: !151, line: 44, baseType: !3223, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 32)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !3232)
!3232 = !{!3233, !3277, !3289, !3290, !3291, !3292, !3298, !3311}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3231, file: !168, line: 247, baseType: !3234, size: 384)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !3235)
!3235 = !{!3236, !3246, !3253, !3254, !3255, !3264, !3265, !3266}
!3236 = !DIDerivedType(tag: DW_TAG_member, scope: !3234, file: !168, line: 60, baseType: !3237, size: 64)
!3237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3234, file: !168, line: 60, size: 64, elements: !3238)
!3238 = !{!3239, !3240}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3237, file: !168, line: 61, baseType: !3216, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3237, file: !168, line: 62, baseType: !3241, size: 64)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !3242)
!3242 = !{!3243}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3241, file: !180, line: 50, baseType: !3244, size: 64)
!3244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3245, size: 64, elements: !185)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3234, file: !168, line: 68, baseType: !3247, size: 32, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 32)
!3248 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !3249)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !3250)
!3250 = !{!3251}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3249, file: !146, line: 232, baseType: !3252, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !3217)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3234, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3234, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!3255 = !DIDerivedType(tag: DW_TAG_member, scope: !3234, file: !168, line: 90, baseType: !3256, size: 16, offset: 112)
!3256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3234, file: !168, line: 90, size: 16, elements: !3257)
!3257 = !{!3258, !3263}
!3258 = !DIDerivedType(tag: DW_TAG_member, scope: !3256, file: !168, line: 91, baseType: !3259, size: 16)
!3259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3256, file: !168, line: 91, size: 16, elements: !3260)
!3260 = !{!3261, !3262}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3259, file: !168, line: 96, baseType: !200, size: 8)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3259, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3256, file: !168, line: 100, baseType: !126, size: 16)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3234, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3234, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3234, file: !168, line: 131, baseType: !3267, size: 192, offset: 192)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !3268)
!3268 = !{!3269, !3270, !3276}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3267, file: !146, line: 245, baseType: !3216, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3267, file: !146, line: 246, baseType: !3271, size: 32, offset: 64)
!3271 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !3272)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 32)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{null, !3275}
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3267, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3231, file: !168, line: 250, baseType: !3278, size: 288, offset: 384)
!3278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !3279)
!3279 = !{!3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3278, file: !219, line: 26, baseType: !108, size: 32)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3278, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3278, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3278, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3278, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3278, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3278, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3278, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3278, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3231, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3231, file: !168, line: 256, baseType: !3248, size: 64, offset: 704)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3231, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3231, file: !168, line: 300, baseType: !3293, size: 96, offset: 800)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !3294)
!3294 = !{!3295, !3296, !3297}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3293, file: !168, line: 153, baseType: !22, size: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3293, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3293, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3231, file: !168, line: 325, baseType: !3299, size: 32, offset: 896)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 32)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !3301)
!3301 = !{!3302, !3308, !3309}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3300, file: !142, line: 5074, baseType: !3303, size: 96)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !3304)
!3304 = !{!3305, !3306, !3307}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3303, file: !245, line: 57, baseType: !248, size: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3303, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3303, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3300, file: !142, line: 5075, baseType: !3248, size: 64, offset: 96)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3300, file: !142, line: 5076, baseType: !3310, offset: 160)
!3310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3231, file: !168, line: 343, baseType: !3312, size: 64, offset: 928)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !3313)
!3313 = !{!3314, !3315}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3312, file: !219, line: 63, baseType: !108, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3312, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!3316 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3317, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3318, splitDebugInlining: false, nameTableKind: None)
!3317 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3318 = !{!22, !106, !107}
!3319 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3320, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3320 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3321 = !{!"Ubuntu clang version 14.0.6"}
!3322 = !{i32 7, !"Dwarf Version", i32 4}
!3323 = !{i32 2, !"Debug Info Version", i32 3}
!3324 = !{i32 1, !"wchar_size", i32 4}
!3325 = !{i32 1, !"min_enum_size", i32 4}
!3326 = !{i32 1, !"branch-target-enforcement", i32 0}
!3327 = !{i32 1, !"sign-return-address", i32 0}
!3328 = !{i32 1, !"sign-return-address-all", i32 0}
!3329 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3330 = !{i32 7, !"frame-pointer", i32 2}
!3331 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3332, file: !3332, line: 26, type: !337, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2615, retainedNodes: !256)
!3332 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3333 = !DILocation(line: 28, column: 1, scope: !3331)
!3334 = !{i64 2155027076, i64 2155027096, i64 2155027159}
!3335 = !DILocation(line: 29, column: 1, scope: !3331)
!3336 = !{i64 2155027491, i64 2155027511, i64 2155027574}
!3337 = !DILocation(line: 30, column: 1, scope: !3331)
!3338 = !{i64 2155027910, i64 2155027930, i64 2155027993}
!3339 = !DILocation(line: 31, column: 1, scope: !3331)
!3340 = !{i64 2155028329, i64 2155028349, i64 2155028412}
!3341 = !DILocation(line: 33, column: 1, scope: !3331)
!3342 = !{i64 2155028621, i64 2155028641, i64 2155028704}
!3343 = !DILocation(line: 35, column: 1, scope: !3331)
!3344 = !{i64 2155028946, i64 2155028966, i64 2155029029}
!3345 = !DILocation(line: 50, column: 1, scope: !3331)
!3346 = !{i64 2155029373, i64 2155029393, i64 2155029456}
!3347 = !DILocation(line: 54, column: 1, scope: !3331)
!3348 = !{i64 2155029812, i64 2155029832, i64 2155029895}
!3349 = !DILocation(line: 61, column: 1, scope: !3331)
!3350 = !{i64 2155030129, i64 2155030149, i64 2155030212}
!3351 = !DILocation(line: 63, column: 1, scope: !3331)
!3352 = !{i64 2155030509, i64 2155030529, i64 2155030592}
!3353 = !DILocation(line: 64, column: 1, scope: !3331)
!3354 = !{i64 2155031031, i64 2155031051, i64 2155031114}
!3355 = !DILocation(line: 65, column: 1, scope: !3331)
!3356 = !{i64 2155031529, i64 2155031549, i64 2155031612}
!3357 = !DILocation(line: 66, column: 1, scope: !3331)
!3358 = !{i64 2155032011, i64 2155032031, i64 2155032094}
!3359 = !DILocation(line: 67, column: 1, scope: !3331)
!3360 = !{i64 2155032518, i64 2155032538, i64 2155032601}
!3361 = !DILocation(line: 68, column: 1, scope: !3331)
!3362 = !{i64 2155033006, i64 2155033026, i64 2155033089}
!3363 = !DILocation(line: 70, column: 1, scope: !3331)
!3364 = !{i64 2155033474, i64 2155033494, i64 2155033557}
!3365 = !DILocation(line: 71, column: 1, scope: !3331)
!3366 = !{i64 2155037977, i64 2155037997, i64 2155038060}
!3367 = !DILocation(line: 72, column: 1, scope: !3331)
!3368 = !{i64 2155038435, i64 2155038455, i64 2155038518}
!3369 = !DILocation(line: 79, column: 1, scope: !3331)
!3370 = !{i64 2155038889, i64 2155038909, i64 2155038972}
!3371 = !DILocation(line: 80, column: 1, scope: !3331)
!3372 = !{i64 2155039400, i64 2155039420, i64 2155039483}
!3373 = !DILocation(line: 82, column: 1, scope: !3331)
!3374 = !{i64 2155039891, i64 2155039911, i64 2155039974}
!3375 = !DILocation(line: 97, column: 1, scope: !3331)
!3376 = !{i64 2155040228, i64 2155040248, i64 2155040311}
!3377 = !DILocation(line: 99, column: 1, scope: !3331)
!3378 = !{i64 2155040446, i64 2155040466, i64 2155040529}
!3379 = !DILocation(line: 102, column: 1, scope: !3331)
!3380 = !{i64 2155040703, i64 2155040723, i64 2155040786}
!3381 = !DILocation(line: 105, column: 1, scope: !3331)
!3382 = !{i64 2155040943, i64 2155040963, i64 2155041026}
!3383 = !DILocation(line: 115, column: 1, scope: !3331)
!3384 = !{i64 2155041282, i64 2155041302, i64 2155041365}
!3385 = !DILocation(line: 118, column: 1, scope: !3331)
!3386 = !{i64 2155041626, i64 2155041646, i64 2155041709}
!3387 = !DILocation(line: 32, column: 1, scope: !3388)
!3388 = !DILexicalBlockFile(scope: !3331, file: !3389, discriminator: 0)
!3389 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3390 = !{i64 2155041982, i64 2155042002, i64 2155042065}
!3391 = !DILocation(line: 33, column: 1, scope: !3388)
!3392 = !{i64 2155042494, i64 2155042514, i64 2155042577}
!3393 = !DILocation(line: 53, column: 1, scope: !3388)
!3394 = !{i64 2155043002, i64 2155043022, i64 2155043085}
!3395 = !DILocation(line: 54, column: 1, scope: !3388)
!3396 = !{i64 2155043420, i64 2155043440, i64 2155043503}
!3397 = !DILocation(line: 55, column: 1, scope: !3388)
!3398 = !{i64 2155043838, i64 2155043858, i64 2155043921}
!3399 = !DILocation(line: 56, column: 1, scope: !3388)
!3400 = !{i64 2155044256, i64 2155044276, i64 2155044339}
!3401 = !DILocation(line: 57, column: 1, scope: !3388)
!3402 = !{i64 2155044674, i64 2155044694, i64 2155044757}
!3403 = !DILocation(line: 58, column: 1, scope: !3388)
!3404 = !{i64 2155045092, i64 2155045112, i64 2155045175}
!3405 = !DILocation(line: 59, column: 1, scope: !3388)
!3406 = !{i64 2155045510, i64 2155045530, i64 2155045593}
!3407 = !DILocation(line: 60, column: 1, scope: !3388)
!3408 = !{i64 2155045934, i64 2155045954, i64 2155046017}
!3409 = !DILocation(line: 61, column: 1, scope: !3388)
!3410 = !{i64 2155046251, i64 2155046271, i64 2155046334}
!3411 = !DILocation(line: 70, column: 1, scope: !3388)
!3412 = !{i64 2155046480, i64 2155046500, i64 2155046563}
!3413 = !DILocation(line: 72, column: 1, scope: !3388)
!3414 = !{i64 2155046812, i64 2155046832, i64 2155046895}
!3415 = !DILocation(line: 73, column: 1, scope: !3388)
!3416 = !{i64 2155047262, i64 2155047282, i64 2155047345}
!3417 = !DILocation(line: 74, column: 1, scope: !3388)
!3418 = !{i64 2155051773, i64 2155051793, i64 2155051856}
!3419 = !DILocation(line: 75, column: 1, scope: !3388)
!3420 = !{i64 2155052223, i64 2155052243, i64 2155052306}
!3421 = !DILocation(line: 76, column: 1, scope: !3388)
!3422 = !{i64 2155052673, i64 2155052693, i64 2155052756}
!3423 = !DILocation(line: 77, column: 1, scope: !3388)
!3424 = !{i64 2155053123, i64 2155053143, i64 2155053206}
!3425 = !DILocation(line: 78, column: 1, scope: !3388)
!3426 = !{i64 2155053573, i64 2155053593, i64 2155053656}
!3427 = !DILocation(line: 79, column: 1, scope: !3388)
!3428 = !{i64 2155054023, i64 2155054043, i64 2155054106}
!3429 = !DILocation(line: 80, column: 1, scope: !3388)
!3430 = !{i64 2155054476, i64 2155054496, i64 2155054559}
!3431 = !DILocation(line: 84, column: 1, scope: !3388)
!3432 = !{i64 2155054808, i64 2155054828, i64 2155054891}
!3433 = !DILocation(line: 91, column: 1, scope: !3388)
!3434 = !{i64 2155055205, i64 2155055225, i64 2155055288}
!3435 = !DILocation(line: 93, column: 1, scope: !3388)
!3436 = !{i64 2155055572, i64 2155055592, i64 2155055655}
!3437 = !DILocation(line: 106, column: 1, scope: !3388)
!3438 = !{i64 2155055842, i64 2155055862, i64 2155055925}
!3439 = !DILocation(line: 11, column: 1, scope: !3440)
!3440 = !DILexicalBlockFile(scope: !3331, file: !3441, discriminator: 0)
!3441 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3442 = distinct !DISubprogram(name: "listener_callback_example", scope: !114, file: !114, line: 66, type: !292, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3443)
!3443 = !{!3444, !3445}
!3444 = !DILocalVariable(name: "chan", arg: 1, scope: !3442, file: !114, line: 66, type: !294)
!3445 = !DILocalVariable(name: "acc", scope: !3442, file: !114, line: 68, type: !3446)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 32)
!3447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!3448 = !DILocation(line: 0, scope: !3442)
!3449 = !DILocation(line: 68, column: 30, scope: !3442)
!3450 = !DILocation(line: 70, column: 2, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !114, line: 70, column: 2)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !114, line: 70, column: 2)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !114, line: 70, column: 2)
!3454 = distinct !DILexicalBlock(scope: !3442, file: !114, line: 70, column: 2)
!3455 = !DILocation(line: 71, column: 1, scope: !3442)
!3456 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3457, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3459)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!13, !294}
!3459 = !{!3460}
!3460 = !DILocalVariable(name: "chan", arg: 1, scope: !3456, file: !117, line: 416, type: !294)
!3461 = !DILocation(line: 0, scope: !3456)
!3462 = !DILocation(line: 420, column: 15, scope: !3456)
!3463 = !DILocation(line: 420, column: 2, scope: !3456)
!3464 = distinct !DISubprogram(name: "simple_chan_validator", scope: !114, file: !114, line: 44, type: !134, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3465)
!3465 = !{!3466, !3467, !3468}
!3466 = !DILocalVariable(name: "msg", arg: 1, scope: !3464, file: !114, line: 44, type: !13)
!3467 = !DILocalVariable(name: "msg_size", arg: 2, scope: !3464, file: !114, line: 44, type: !137)
!3468 = !DILocalVariable(name: "simple", scope: !3464, file: !114, line: 48, type: !3469)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!3470 = !DILocation(line: 0, scope: !3464)
!3471 = !DILocation(line: 48, column: 22, scope: !3464)
!3472 = !DILocation(line: 50, column: 7, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3464, file: !114, line: 50, column: 6)
!3474 = !DILocation(line: 50, column: 21, scope: !3473)
!3475 = !DILocation(line: 55, column: 1, scope: !3464)
!3476 = distinct !DISubprogram(name: "subscriber_task", scope: !114, file: !114, line: 77, type: !337, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3477)
!3477 = !{!3478, !3479}
!3478 = !DILocalVariable(name: "chan", scope: !3476, file: !114, line: 79, type: !294)
!3479 = !DILocalVariable(name: "acc", scope: !3480, file: !114, line: 82, type: !372)
!3480 = distinct !DILexicalBlock(scope: !3476, file: !114, line: 81, column: 53)
!3481 = !DILocation(line: 79, column: 2, scope: !3476)
!3482 = !DILocation(line: 0, scope: !3476)
!3483 = !DILocation(line: 81, column: 10, scope: !3476)
!3484 = !DILocation(line: 81, column: 9, scope: !3476)
!3485 = !DILocation(line: 81, column: 2, scope: !3476)
!3486 = !DILocation(line: 82, column: 3, scope: !3480)
!3487 = !DILocation(line: 82, column: 18, scope: !3480)
!3488 = !DILocation(line: 84, column: 25, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3480, file: !114, line: 84, column: 7)
!3490 = !DILocation(line: 84, column: 22, scope: !3489)
!3491 = !DILocation(line: 84, column: 7, scope: !3480)
!3492 = !DILocation(line: 85, column: 41, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3489, file: !114, line: 84, column: 31)
!3494 = !DILocation(line: 85, column: 4, scope: !3493)
!3495 = !DILocation(line: 87, column: 4, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !114, line: 87, column: 4)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !114, line: 87, column: 4)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !114, line: 87, column: 4)
!3499 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 87, column: 4)
!3500 = !DILocation(line: 88, column: 3, scope: !3493)
!3501 = !DILocation(line: 89, column: 2, scope: !3476)
!3502 = distinct !{!3502, !3485, !3501}
!3503 = !DILocation(line: 90, column: 1, scope: !3476)
!3504 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3505, file: !3505, line: 403, type: !3506, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3508)
!3505 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3506 = !DISubroutineType(types: !3507)
!3507 = !{!109, !109}
!3508 = !{!3509}
!3509 = !DILocalVariable(name: "t", arg: 1, scope: !3504, file: !3505, line: 403, type: !109)
!3510 = !DILocation(line: 0, scope: !3504)
!3511 = !DILocalVariable(name: "t", arg: 1, scope: !3512, file: !3505, line: 102, type: !109)
!3512 = distinct !DISubprogram(name: "z_tmcvt", scope: !3505, file: !3505, line: 102, type: !3513, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3515)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!109, !109, !108, !108, !136, !136, !136, !136}
!3515 = !{!3511, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525}
!3516 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3512, file: !3505, line: 102, type: !108)
!3517 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3512, file: !3505, line: 103, type: !108)
!3518 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3512, file: !3505, line: 103, type: !136)
!3519 = !DILocalVariable(name: "result32", arg: 5, scope: !3512, file: !3505, line: 104, type: !136)
!3520 = !DILocalVariable(name: "round_up", arg: 6, scope: !3512, file: !3505, line: 104, type: !136)
!3521 = !DILocalVariable(name: "round_off", arg: 7, scope: !3512, file: !3505, line: 105, type: !136)
!3522 = !DILocalVariable(name: "mul_ratio", scope: !3512, file: !3505, line: 107, type: !136)
!3523 = !DILocalVariable(name: "div_ratio", scope: !3512, file: !3505, line: 109, type: !136)
!3524 = !DILocalVariable(name: "off", scope: !3512, file: !3505, line: 116, type: !109)
!3525 = !DILocalVariable(name: "rdivisor", scope: !3526, file: !3505, line: 119, type: !108)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !3505, line: 118, column: 18)
!3527 = distinct !DILexicalBlock(scope: !3512, file: !3505, line: 118, column: 6)
!3528 = !DILocation(line: 0, scope: !3512, inlinedAt: !3529)
!3529 = distinct !DILocation(line: 406, column: 9, scope: !3504)
!3530 = !DILocation(line: 145, column: 13, scope: !3531, inlinedAt: !3529)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !3505, line: 144, column: 10)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !3505, line: 142, column: 7)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !3505, line: 141, column: 24)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !3505, line: 141, column: 13)
!3535 = distinct !DILexicalBlock(scope: !3512, file: !3505, line: 134, column: 6)
!3536 = !DILocation(line: 406, column: 2, scope: !3504)
!3537 = distinct !DISubprogram(name: "main", scope: !114, file: !114, line: 120, type: !337, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3538)
!3538 = !{!3539, !3540, !3541, !3542}
!3539 = !DILocalVariable(name: "err", scope: !3537, file: !114, line: 122, type: !107)
!3540 = !DILocalVariable(name: "value", scope: !3537, file: !114, line: 122, type: !107)
!3541 = !DILocalVariable(name: "acc1", scope: !3537, file: !114, line: 123, type: !372)
!3542 = !DILocalVariable(name: "v", scope: !3537, file: !114, line: 124, type: !3543)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 32)
!3544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !360)
!3545 = !DILocation(line: 122, column: 2, scope: !3537)
!3546 = !DILocation(line: 123, column: 2, scope: !3537)
!3547 = !DILocation(line: 123, column: 17, scope: !3537)
!3548 = !DILocation(line: 124, column: 32, scope: !3537)
!3549 = !DILocation(line: 0, scope: !3537)
!3550 = !DILocation(line: 126, column: 2, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !114, line: 126, column: 2)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !114, line: 126, column: 2)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !114, line: 126, column: 2)
!3554 = distinct !DILexicalBlock(scope: !3537, file: !114, line: 126, column: 2)
!3555 = !DILocation(line: 130, column: 8, scope: !3537)
!3556 = !DILocation(line: 132, column: 2, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !114, line: 132, column: 2)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !114, line: 132, column: 2)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !114, line: 132, column: 2)
!3560 = distinct !DILexicalBlock(scope: !3537, file: !114, line: 132, column: 2)
!3561 = !DILocation(line: 133, column: 2, scope: !3537)
!3562 = !DILocation(line: 135, column: 8, scope: !3537)
!3563 = !DILocation(line: 137, column: 2, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !114, line: 137, column: 2)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !114, line: 137, column: 2)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !114, line: 137, column: 2)
!3567 = distinct !DILexicalBlock(scope: !3537, file: !114, line: 137, column: 2)
!3568 = !DILocation(line: 138, column: 2, scope: !3537)
!3569 = !DILocation(line: 140, column: 39, scope: !3537)
!3570 = !DILocation(line: 140, column: 2, scope: !3537)
!3571 = !DILocation(line: 142, column: 2, scope: !3537)
!3572 = !DILocation(line: 144, column: 7, scope: !3537)
!3573 = !DILocation(line: 144, column: 9, scope: !3537)
!3574 = !DILocation(line: 145, column: 7, scope: !3537)
!3575 = !DILocation(line: 145, column: 9, scope: !3537)
!3576 = !DILocation(line: 146, column: 7, scope: !3537)
!3577 = !DILocation(line: 146, column: 9, scope: !3537)
!3578 = !DILocation(line: 147, column: 2, scope: !3537)
!3579 = !DILocation(line: 149, column: 8, scope: !3537)
!3580 = !DILocation(line: 150, column: 44, scope: !3537)
!3581 = !DILocation(line: 150, column: 8, scope: !3537)
!3582 = !DILocation(line: 152, column: 10, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3537, file: !114, line: 152, column: 6)
!3584 = !DILocation(line: 152, column: 6, scope: !3537)
!3585 = !DILocation(line: 153, column: 3, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !114, line: 153, column: 3)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !114, line: 153, column: 3)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !114, line: 153, column: 3)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !114, line: 153, column: 3)
!3590 = distinct !DILexicalBlock(scope: !3583, file: !114, line: 152, column: 16)
!3591 = !DILocation(line: 154, column: 2, scope: !3590)
!3592 = !DILocation(line: 156, column: 8, scope: !3537)
!3593 = !DILocation(line: 157, column: 8, scope: !3537)
!3594 = !DILocation(line: 159, column: 10, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3537, file: !114, line: 159, column: 6)
!3596 = !DILocation(line: 159, column: 6, scope: !3537)
!3597 = !DILocation(line: 160, column: 3, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !114, line: 160, column: 3)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !114, line: 160, column: 3)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !114, line: 160, column: 3)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !114, line: 160, column: 3)
!3602 = distinct !DILexicalBlock(scope: !3595, file: !114, line: 159, column: 22)
!3603 = !DILocation(line: 161, column: 2, scope: !3602)
!3604 = !DILocation(line: 162, column: 1, scope: !3537)
!3605 = distinct !DISubprogram(name: "print_channel_data_iterator", scope: !114, file: !114, line: 97, type: !3606, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3608)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!136, !294}
!3608 = !{!3609, !3610}
!3609 = !DILocalVariable(name: "chan", arg: 1, scope: !3605, file: !114, line: 97, type: !294)
!3610 = !DILocalVariable(name: "obs", scope: !3611, file: !114, line: 103, type: !265)
!3611 = distinct !DILexicalBlock(scope: !3605, file: !114, line: 103, column: 2)
!3612 = !DILocation(line: 0, scope: !3605)
!3613 = !DILocation(line: 99, column: 2, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !114, line: 99, column: 2)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !114, line: 99, column: 2)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !114, line: 99, column: 2)
!3617 = distinct !DILexicalBlock(scope: !3605, file: !114, line: 99, column: 2)
!3618 = !DILocation(line: 100, column: 2, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !114, line: 100, column: 2)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !114, line: 100, column: 2)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !114, line: 100, column: 2)
!3622 = distinct !DILexicalBlock(scope: !3605, file: !114, line: 100, column: 2)
!3623 = !DILocation(line: 101, column: 2, scope: !3605)
!3624 = !DILocation(line: 102, column: 2, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !114, line: 102, column: 2)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !114, line: 102, column: 2)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !114, line: 102, column: 2)
!3628 = distinct !DILexicalBlock(scope: !3605, file: !114, line: 102, column: 2)
!3629 = !DILocation(line: 103, column: 54, scope: !3611)
!3630 = !DILocation(line: 0, scope: !3611)
!3631 = !DILocation(line: 103, column: 65, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3611, file: !114, line: 103, column: 2)
!3633 = !DILocation(line: 103, column: 70, scope: !3632)
!3634 = !DILocation(line: 103, column: 2, scope: !3611)
!3635 = !DILocation(line: 107, column: 2, scope: !3605)
!3636 = !DILocation(line: 104, column: 3, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !114, line: 104, column: 3)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !114, line: 104, column: 3)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !114, line: 104, column: 3)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !114, line: 104, column: 3)
!3641 = distinct !DILexicalBlock(scope: !3632, file: !114, line: 103, column: 86)
!3642 = !DILocation(line: 103, column: 79, scope: !3632)
!3643 = distinct !{!3643, !3634, !3644}
!3644 = !DILocation(line: 105, column: 2, scope: !3611)
!3645 = distinct !DISubprogram(name: "print_observer_data_iterator", scope: !114, file: !114, line: 110, type: !3646, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3648)
!3646 = !DISubroutineType(types: !3647)
!3647 = !{!136, !267}
!3648 = !{!3649}
!3649 = !DILocalVariable(name: "obs", arg: 1, scope: !3645, file: !114, line: 110, type: !267)
!3650 = !DILocation(line: 0, scope: !3645)
!3651 = !DILocation(line: 112, column: 2, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !114, line: 112, column: 2)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !114, line: 112, column: 2)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !114, line: 112, column: 2)
!3655 = distinct !DILexicalBlock(scope: !3645, file: !114, line: 112, column: 2)
!3656 = !DILocation(line: 114, column: 2, scope: !3645)
!3657 = !DILocation(line: 116, column: 2, scope: !3645)
!3658 = distinct !DISubprogram(name: "k_msleep", scope: !142, file: !142, line: 439, type: !3659, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3661)
!3659 = !DISubroutineType(types: !3660)
!3660 = !{!334, !334}
!3661 = !{!3662}
!3662 = !DILocalVariable(name: "ms", arg: 1, scope: !3658, file: !142, line: 439, type: !334)
!3663 = !DILocation(line: 0, scope: !3658)
!3664 = !DILocation(line: 441, column: 17, scope: !3658)
!3665 = !DILocation(line: 441, column: 9, scope: !3658)
!3666 = !DILocation(line: 441, column: 2, scope: !3658)
!3667 = distinct !DISubprogram(name: "k_sleep", scope: !3668, file: !3668, line: 91, type: !3669, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3675)
!3668 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!334, !3671}
!3671 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !3672)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !3673)
!3673 = !{!3674}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3672, file: !103, line: 66, baseType: !102, size: 64)
!3675 = !{!3676}
!3676 = !DILocalVariable(name: "timeout", arg: 1, scope: !3667, file: !3668, line: 91, type: !3671)
!3677 = !DILocation(line: 0, scope: !3667)
!3678 = !DILocation(line: 99, column: 2, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3667, file: !3668, line: 99, column: 2)
!3680 = !{i64 2154741637}
!3681 = !DILocation(line: 100, column: 9, scope: !3667)
!3682 = !DILocation(line: 100, column: 2, scope: !3667)
!3683 = distinct !DISubprogram(name: "zbus_obs_name", scope: !117, file: !117, line: 549, type: !3684, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3686)
!3684 = !DISubroutineType(types: !3685)
!3685 = !{!121, !267}
!3686 = !{!3687}
!3687 = !DILocalVariable(name: "obs", arg: 1, scope: !3683, file: !117, line: 549, type: !267)
!3688 = !DILocation(line: 0, scope: !3683)
!3689 = !DILocation(line: 553, column: 14, scope: !3683)
!3690 = !DILocation(line: 553, column: 2, scope: !3683)
!3691 = distinct !DISubprogram(name: "zbus_chan_name", scope: !117, file: !117, line: 374, type: !3692, scopeLine: 375, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3694)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!121, !294}
!3694 = !{!3695}
!3695 = !DILocalVariable(name: "chan", arg: 1, scope: !3691, file: !117, line: 374, type: !294)
!3696 = !DILocation(line: 0, scope: !3691)
!3697 = !DILocation(line: 378, column: 15, scope: !3691)
!3698 = !DILocation(line: 378, column: 2, scope: !3691)
!3699 = distinct !DISubprogram(name: "zbus_chan_msg_size", scope: !117, file: !117, line: 432, type: !3700, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3702)
!3700 = !DISubroutineType(types: !3701)
!3701 = !{!126, !294}
!3702 = !{!3703}
!3703 = !DILocalVariable(name: "chan", arg: 1, scope: !3699, file: !117, line: 432, type: !294)
!3704 = !DILocation(line: 0, scope: !3699)
!3705 = !DILocation(line: 436, column: 15, scope: !3699)
!3706 = !DILocation(line: 436, column: 2, scope: !3699)
!3707 = distinct !DISubprogram(name: "cbvprintf_package", scope: !403, file: !403, line: 233, type: !3708, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !3717)
!3708 = !DISubroutineType(types: !3709)
!3709 = !{!107, !106, !137, !108, !121, !3710}
!3710 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3711, line: 99, baseType: !3712)
!3711 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3712 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3711, line: 40, baseType: !3713)
!3713 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !403, baseType: !3714)
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3715)
!3715 = !{!3716}
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3714, file: !403, line: 18, baseType: !106, size: 32)
!3717 = !{!3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3753, !3762, !3765, !3766, !3769, !3772, !3775, !3778, !3784}
!3718 = !DILocalVariable(name: "packaged", arg: 1, scope: !3707, file: !403, line: 233, type: !106)
!3719 = !DILocalVariable(name: "len", arg: 2, scope: !3707, file: !403, line: 233, type: !137)
!3720 = !DILocalVariable(name: "flags", arg: 3, scope: !3707, file: !403, line: 233, type: !108)
!3721 = !DILocalVariable(name: "fmt", arg: 4, scope: !3707, file: !403, line: 234, type: !121)
!3722 = !DILocalVariable(name: "ap", arg: 5, scope: !3707, file: !403, line: 234, type: !3710)
!3723 = !DILocalVariable(name: "buf0", scope: !3707, file: !403, line: 247, type: !401)
!3724 = !DILocalVariable(name: "buf", scope: !3707, file: !403, line: 248, type: !401)
!3725 = !DILocalVariable(name: "size", scope: !3707, file: !403, line: 249, type: !32)
!3726 = !DILocalVariable(name: "align", scope: !3707, file: !403, line: 250, type: !32)
!3727 = !DILocalVariable(name: "str_ptr_pos", scope: !3707, file: !403, line: 251, type: !3728)
!3728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 128, elements: !347)
!3729 = !DILocalVariable(name: "str_ptr_arg", scope: !3707, file: !403, line: 252, type: !3728)
!3730 = !DILocalVariable(name: "s_idx", scope: !3707, file: !403, line: 253, type: !32)
!3731 = !DILocalVariable(name: "s_rw_cnt", scope: !3707, file: !403, line: 254, type: !32)
!3732 = !DILocalVariable(name: "s_ro_cnt", scope: !3707, file: !403, line: 255, type: !32)
!3733 = !DILocalVariable(name: "arg_idx", scope: !3707, file: !403, line: 256, type: !107)
!3734 = !DILocalVariable(name: "i", scope: !3707, file: !403, line: 257, type: !32)
!3735 = !DILocalVariable(name: "s", scope: !3707, file: !403, line: 258, type: !121)
!3736 = !DILocalVariable(name: "parsing", scope: !3707, file: !403, line: 259, type: !136)
!3737 = !DILocalVariable(name: "rws_pos_en", scope: !3707, file: !403, line: 263, type: !136)
!3738 = !DILocalVariable(name: "fros_cnt", scope: !3707, file: !403, line: 268, type: !107)
!3739 = !DILocalVariable(name: "is_str_arg", scope: !3707, file: !403, line: 269, type: !136)
!3740 = !DILocalVariable(name: "pkg_hdr", scope: !3707, file: !403, line: 270, type: !3741)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 32)
!3742 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3743, line: 78, size: 32, elements: !3744)
!3743 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3744 = !{!3745, !3752}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3742, file: !3743, line: 80, baseType: !3746, size: 32)
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3743, line: 45, size: 32, elements: !3747)
!3747 = !{!3748, !3749, !3750, !3751}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3746, file: !3743, line: 47, baseType: !190, size: 8)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3746, file: !3743, line: 50, baseType: !190, size: 8, offset: 8)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3746, file: !3743, line: 53, baseType: !190, size: 8, offset: 16)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3746, file: !3743, line: 56, baseType: !190, size: 8, offset: 24)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3742, file: !3743, line: 82, baseType: !106, size: 32)
!3753 = !DILocalVariable(name: "v", scope: !3754, file: !403, line: 567, type: !3758)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !403, line: 562, column: 14)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !403, line: 481, column: 18)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !403, line: 466, column: 3)
!3757 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 343, column: 15)
!3758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3707, file: !403, line: 567, size: 64, elements: !3759)
!3759 = !{!3760, !3761}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3758, file: !403, line: 567, baseType: !394, size: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3758, file: !403, line: 567, baseType: !392, size: 64)
!3762 = !DILocalVariable(name: "is_ro", scope: !3763, file: !403, line: 620, type: !136)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !403, line: 613, column: 19)
!3764 = distinct !DILexicalBlock(scope: !3757, file: !403, line: 613, column: 7)
!3765 = !DILocalVariable(name: "do_ro", scope: !3763, file: !403, line: 621, type: !136)
!3766 = !DILocalVariable(name: "s_ptr_idx", scope: !3767, file: !403, line: 626, type: !108)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !403, line: 625, column: 11)
!3768 = distinct !DILexicalBlock(scope: !3763, file: !403, line: 623, column: 8)
!3769 = !DILocalVariable(name: "v", scope: !3770, file: !403, line: 684, type: !107)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !403, line: 683, column: 35)
!3771 = distinct !DILexicalBlock(scope: !3764, file: !403, line: 683, column: 14)
!3772 = !DILocalVariable(name: "v", scope: !3773, file: !403, line: 691, type: !398)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !403, line: 690, column: 36)
!3774 = distinct !DILexicalBlock(scope: !3771, file: !403, line: 690, column: 14)
!3775 = !DILocalVariable(name: "v", scope: !3776, file: !403, line: 698, type: !105)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !403, line: 697, column: 41)
!3777 = distinct !DILexicalBlock(scope: !3774, file: !403, line: 697, column: 14)
!3778 = !DILocalVariable(name: "pos", scope: !3779, file: !403, line: 762, type: !190)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !403, line: 757, column: 31)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !403, line: 757, column: 3)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !403, line: 757, column: 3)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !403, line: 756, column: 16)
!3783 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 756, column: 6)
!3784 = !DILabel(scope: !3763, name: "process_string", file: !403, line: 615)
!3785 = !DILocation(line: 0, scope: !3707)
!3786 = !DILocation(line: 251, column: 2, scope: !3707)
!3787 = !DILocation(line: 251, column: 10, scope: !3707)
!3788 = !DILocation(line: 252, column: 2, scope: !3707)
!3789 = !DILocation(line: 252, column: 10, scope: !3707)
!3790 = !DILocation(line: 263, column: 29, scope: !3707)
!3791 = !DILocation(line: 263, column: 21, scope: !3707)
!3792 = !DILocation(line: 268, column: 21, scope: !3707)
!3793 = !DILocation(line: 268, column: 19, scope: !3707)
!3794 = !DILocation(line: 273, column: 6, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 273, column: 6)
!3796 = !DILocation(line: 273, column: 26, scope: !3795)
!3797 = !DILocation(line: 273, column: 6, scope: !3707)
!3798 = !DILocation(line: 297, column: 6, scope: !3707)
!3799 = !DILocation(line: 305, column: 11, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 305, column: 6)
!3801 = !DILocation(line: 305, column: 6, scope: !3707)
!3802 = !DILocation(line: 327, column: 19, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 327, column: 6)
!3804 = !DILocation(line: 327, column: 22, scope: !3803)
!3805 = !DILocation(line: 327, column: 33, scope: !3803)
!3806 = !DILocation(line: 327, column: 50, scope: !3803)
!3807 = !DILocation(line: 327, column: 6, scope: !3707)
!3808 = !DILocation(line: 338, column: 9, scope: !3707)
!3809 = !DILocation(line: 341, column: 2, scope: !3707)
!3810 = !DILocation(line: 472, column: 8, scope: !3756)
!3811 = !DILocation(line: 473, column: 14, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !403, line: 473, column: 9)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !403, line: 472, column: 18)
!3814 = distinct !DILexicalBlock(scope: !3756, file: !403, line: 472, column: 8)
!3815 = !DILocation(line: 473, column: 9, scope: !3813)
!3816 = !DILocation(line: 479, column: 5, scope: !3813)
!3817 = !DILocation(line: 468, column: 9, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3756, file: !403, line: 468, column: 8)
!3819 = !DILocation(line: 468, column: 8, scope: !3818)
!3820 = !DILocation(line: 468, column: 15, scope: !3818)
!3821 = !DILocation(line: 468, column: 8, scope: !3756)
!3822 = distinct !{!3822, !3823, !3824}
!3823 = !DILocation(line: 343, column: 2, scope: !3707)
!3824 = !DILocation(line: 712, column: 2, scope: !3707)
!3825 = !DILocation(line: 481, column: 4, scope: !3756)
!3826 = !DILocation(line: 484, column: 12, scope: !3755)
!3827 = !DILocation(line: 485, column: 5, scope: !3755)
!3828 = !DILocation(line: 505, column: 5, scope: !3755)
!3829 = !DILocation(line: 518, column: 5, scope: !3755)
!3830 = !DILocation(line: 523, column: 5, scope: !3755)
!3831 = !DILocation(line: 532, column: 9, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3755, file: !403, line: 532, column: 9)
!3833 = !DILocation(line: 532, column: 17, scope: !3832)
!3834 = !DILocation(line: 532, column: 9, scope: !3755)
!3835 = !DILocation(line: 533, column: 10, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !403, line: 533, column: 10)
!3837 = distinct !DILexicalBlock(scope: !3832, file: !403, line: 532, column: 25)
!3838 = !DILocation(line: 533, column: 18, scope: !3836)
!3839 = !DILocation(line: 0, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3754, file: !403, line: 569, column: 9)
!3841 = !DILocation(line: 0, scope: !3754)
!3842 = !DILocation(line: 579, column: 20, scope: !3754)
!3843 = !DILocation(line: 579, column: 11, scope: !3754)
!3844 = !DILocation(line: 580, column: 9, scope: !3754)
!3845 = !DILocation(line: 582, column: 21, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !403, line: 582, column: 10)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !403, line: 580, column: 23)
!3848 = distinct !DILexicalBlock(scope: !3754, file: !403, line: 580, column: 9)
!3849 = !DILocation(line: 582, column: 28, scope: !3846)
!3850 = !DILocation(line: 582, column: 10, scope: !3847)
!3851 = !DILocation(line: 0, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !403, line: 587, column: 17)
!3853 = distinct !DILexicalBlock(scope: !3847, file: !403, line: 585, column: 10)
!3854 = !DILocation(line: 593, column: 9, scope: !3754)
!3855 = !DILocation(line: 600, column: 5, scope: !3755)
!3856 = !DILocation(line: 605, column: 18, scope: !3757)
!3857 = !DILocation(line: 605, column: 9, scope: !3757)
!3858 = !DILocation(line: 608, column: 20, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3757, file: !403, line: 608, column: 7)
!3860 = !DILocation(line: 608, column: 23, scope: !3859)
!3861 = !DILocation(line: 608, column: 34, scope: !3859)
!3862 = !DILocation(line: 608, column: 41, scope: !3859)
!3863 = !DILocation(line: 608, column: 7, scope: !3757)
!3864 = !DILocation(line: 613, column: 7, scope: !3757)
!3865 = !DILocation(line: 614, column: 8, scope: !3763)
!3866 = !DILocation(line: 614, column: 4, scope: !3763)
!3867 = !DILocation(line: 255, column: 15, scope: !3707)
!3868 = !DILocation(line: 256, column: 6, scope: !3707)
!3869 = !DILocation(line: 254, column: 15, scope: !3707)
!3870 = !DILocation(line: 253, column: 15, scope: !3707)
!3871 = !DILocation(line: 320, column: 7, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3800, file: !403, line: 305, column: 20)
!3873 = !DILocation(line: 615, column: 1, scope: !3763)
!3874 = !DILocation(line: 616, column: 8, scope: !3763)
!3875 = !DILocation(line: 617, column: 5, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !403, line: 616, column: 22)
!3877 = distinct !DILexicalBlock(scope: !3763, file: !403, line: 616, column: 8)
!3878 = !DILocation(line: 617, column: 25, scope: !3876)
!3879 = !DILocation(line: 618, column: 4, scope: !3876)
!3880 = !DILocation(line: 620, column: 26, scope: !3763)
!3881 = !DILocation(line: 620, column: 29, scope: !3763)
!3882 = !DILocation(line: 620, column: 17, scope: !3763)
!3883 = !DILocation(line: 620, column: 43, scope: !3763)
!3884 = !DILocation(line: 0, scope: !3763)
!3885 = !DILocation(line: 623, column: 14, scope: !3768)
!3886 = !DILocation(line: 626, column: 26, scope: !3767)
!3887 = !DILocation(line: 626, column: 37, scope: !3767)
!3888 = !DILocation(line: 0, scope: !3767)
!3889 = !DILocation(line: 634, column: 15, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3767, file: !403, line: 634, column: 9)
!3891 = !DILocation(line: 644, column: 9, scope: !3767)
!3892 = !DILocation(line: 649, column: 27, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !403, line: 644, column: 23)
!3894 = distinct !DILexicalBlock(scope: !3767, file: !403, line: 644, column: 9)
!3895 = !DILocation(line: 649, column: 6, scope: !3893)
!3896 = !DILocation(line: 649, column: 25, scope: !3893)
!3897 = !DILocation(line: 650, column: 27, scope: !3893)
!3898 = !DILocation(line: 650, column: 6, scope: !3893)
!3899 = !DILocation(line: 650, column: 25, scope: !3893)
!3900 = !DILocation(line: 651, column: 10, scope: !3893)
!3901 = !DILocation(line: 653, column: 26, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !403, line: 651, column: 17)
!3903 = distinct !DILexicalBlock(scope: !3893, file: !403, line: 651, column: 10)
!3904 = !DILocation(line: 654, column: 15, scope: !3902)
!3905 = !DILocation(line: 655, column: 6, scope: !3902)
!3906 = !DILocation(line: 656, column: 15, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3903, file: !403, line: 655, column: 13)
!3908 = !DILocation(line: 658, column: 16, scope: !3894)
!3909 = !DILocation(line: 663, column: 10, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !403, line: 658, column: 23)
!3911 = distinct !DILexicalBlock(scope: !3894, file: !403, line: 658, column: 16)
!3912 = !DILocation(line: 664, column: 5, scope: !3910)
!3913 = !DILocation(line: 664, column: 16, scope: !3911)
!3914 = !DILocation(line: 669, column: 10, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !403, line: 664, column: 28)
!3916 = distinct !DILexicalBlock(scope: !3911, file: !403, line: 664, column: 16)
!3917 = !DILocation(line: 670, column: 5, scope: !3915)
!3918 = !DILocation(line: 675, column: 13, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !403, line: 670, column: 12)
!3920 = !DILocation(line: 675, column: 27, scope: !3919)
!3921 = !DILocation(line: 675, column: 10, scope: !3919)
!3922 = !DILocation(line: 678, column: 10, scope: !3767)
!3923 = !DILocation(line: 680, column: 8, scope: !3763)
!3924 = !DILocation(line: 683, column: 14, scope: !3764)
!3925 = !DILocation(line: 684, column: 12, scope: !3770)
!3926 = !DILocation(line: 0, scope: !3770)
!3927 = !DILocation(line: 686, column: 8, scope: !3770)
!3928 = !DILocation(line: 687, column: 5, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !403, line: 686, column: 22)
!3930 = distinct !DILexicalBlock(scope: !3770, file: !403, line: 686, column: 8)
!3931 = !DILocation(line: 687, column: 17, scope: !3929)
!3932 = !DILocation(line: 688, column: 4, scope: !3929)
!3933 = !DILocation(line: 698, column: 18, scope: !3776)
!3934 = !DILocation(line: 0, scope: !3776)
!3935 = !DILocation(line: 700, column: 8, scope: !3776)
!3936 = !DILocation(line: 704, column: 6, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !403, line: 703, column: 12)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !403, line: 701, column: 9)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !403, line: 700, column: 22)
!3940 = distinct !DILexicalBlock(scope: !3776, file: !403, line: 700, column: 8)
!3941 = !DILocation(line: 704, column: 24, scope: !3937)
!3942 = !DILocation(line: 706, column: 4, scope: !3939)
!3943 = !DILocation(line: 0, scope: !3771)
!3944 = !DILocation(line: 0, scope: !3757)
!3945 = !DILocation(line: 720, column: 6, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 720, column: 6)
!3947 = !DILocation(line: 720, column: 17, scope: !3946)
!3948 = !DILocation(line: 720, column: 31, scope: !3946)
!3949 = !DILocation(line: 720, column: 6, scope: !3707)
!3950 = !DILocation(line: 729, column: 6, scope: !3707)
!3951 = !DILocation(line: 730, column: 21, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !403, line: 729, column: 20)
!3953 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 729, column: 6)
!3954 = !DILocation(line: 730, column: 27, scope: !3952)
!3955 = !DILocation(line: 730, column: 3, scope: !3952)
!3956 = !DILocation(line: 737, column: 22, scope: !3707)
!3957 = !DILocation(line: 737, column: 20, scope: !3707)
!3958 = !DILocation(line: 0, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 739, column: 6)
!3960 = !DILocation(line: 745, column: 17, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3959, file: !403, line: 743, column: 9)
!3962 = !DILocation(line: 745, column: 25, scope: !3961)
!3963 = !DILocation(line: 746, column: 17, scope: !3961)
!3964 = !DILocation(line: 746, column: 28, scope: !3961)
!3965 = !DILocation(line: 749, column: 29, scope: !3707)
!3966 = !DILocation(line: 749, column: 16, scope: !3707)
!3967 = !DILocation(line: 749, column: 27, scope: !3707)
!3968 = !DILocation(line: 756, column: 6, scope: !3783)
!3969 = !DILocation(line: 756, column: 6, scope: !3707)
!3970 = !DILocation(line: 757, column: 3, scope: !3781)
!3971 = !DILocation(line: 758, column: 10, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3779, file: !403, line: 758, column: 8)
!3973 = !DILocation(line: 758, column: 25, scope: !3972)
!3974 = !DILocation(line: 758, column: 8, scope: !3779)
!3975 = !DILocation(line: 0, scope: !3779)
!3976 = !DILocation(line: 765, column: 8, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3779, file: !403, line: 765, column: 8)
!3978 = !DILocation(line: 765, column: 19, scope: !3977)
!3979 = !DILocation(line: 765, column: 23, scope: !3977)
!3980 = !DILocation(line: 765, column: 8, scope: !3779)
!3981 = !DILocation(line: 762, column: 33, scope: !3779)
!3982 = !DILocation(line: 769, column: 8, scope: !3779)
!3983 = !DILocation(line: 769, column: 11, scope: !3779)
!3984 = !DILocation(line: 757, column: 27, scope: !3780)
!3985 = !DILocation(line: 757, column: 17, scope: !3780)
!3986 = distinct !{!3986, !3970, !3987}
!3987 = !DILocation(line: 770, column: 3, scope: !3781)
!3988 = !DILocation(line: 774, column: 16, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !403, line: 774, column: 2)
!3990 = distinct !DILexicalBlock(scope: !3707, file: !403, line: 774, column: 2)
!3991 = !DILocation(line: 774, column: 2, scope: !3990)
!3992 = !DILocation(line: 776, column: 16, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !403, line: 776, column: 7)
!3994 = distinct !DILexicalBlock(scope: !3989, file: !403, line: 774, column: 30)
!3995 = !DILocation(line: 776, column: 19, scope: !3993)
!3996 = !DILocation(line: 776, column: 34, scope: !3993)
!3997 = !DILocation(line: 776, column: 7, scope: !3994)
!3998 = !DILocation(line: 780, column: 7, scope: !3994)
!3999 = !DILocation(line: 782, column: 13, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !403, line: 780, column: 19)
!4001 = distinct !DILexicalBlock(scope: !3994, file: !403, line: 780, column: 7)
!4002 = !DILocation(line: 782, column: 8, scope: !4000)
!4003 = !DILocation(line: 782, column: 11, scope: !4000)
!4004 = !DILocation(line: 783, column: 3, scope: !4000)
!4005 = !DILocation(line: 785, column: 26, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4001, file: !403, line: 783, column: 10)
!4007 = !DILocation(line: 785, column: 41, scope: !4006)
!4008 = !DILocation(line: 785, column: 24, scope: !4006)
!4009 = !DILocation(line: 785, column: 8, scope: !4006)
!4010 = !DILocation(line: 787, column: 52, scope: !4006)
!4011 = !DILocation(line: 789, column: 11, scope: !4006)
!4012 = !DILocation(line: 789, column: 21, scope: !4006)
!4013 = !DILocation(line: 0, scope: !4001)
!4014 = !DILocation(line: 793, column: 7, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3994, file: !403, line: 793, column: 7)
!4016 = !DILocation(line: 793, column: 18, scope: !4015)
!4017 = !DILocation(line: 793, column: 22, scope: !4015)
!4018 = !DILocation(line: 793, column: 29, scope: !4015)
!4019 = !DILocation(line: 793, column: 7, scope: !3994)
!4020 = !DILocation(line: 797, column: 12, scope: !3994)
!4021 = !DILocation(line: 797, column: 7, scope: !3994)
!4022 = !DILocation(line: 797, column: 10, scope: !3994)
!4023 = !DILocation(line: 799, column: 3, scope: !3994)
!4024 = !DILocation(line: 800, column: 7, scope: !3994)
!4025 = !DILocation(line: 801, column: 2, scope: !3994)
!4026 = !DILocation(line: 338, column: 4, scope: !3707)
!4027 = !DILocation(line: 774, column: 26, scope: !3989)
!4028 = distinct !{!4028, !3991, !4029}
!4029 = !DILocation(line: 801, column: 2, scope: !3990)
!4030 = !DILocation(line: 808, column: 9, scope: !3707)
!4031 = !DILocation(line: 808, column: 2, scope: !3707)
!4032 = !DILocation(line: 813, column: 1, scope: !3707)
!4033 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !403, file: !403, line: 33, type: !4034, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4036)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!136, !121}
!4036 = !{!4037}
!4037 = !DILocalVariable(name: "addr", arg: 1, scope: !4033, file: !403, line: 33, type: !121)
!4038 = !DILocation(line: 0, scope: !4033)
!4039 = !DILocation(line: 41, column: 9, scope: !4033)
!4040 = !DILocation(line: 41, column: 2, scope: !4033)
!4041 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4042, file: !4042, line: 24, type: !4043, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4045)
!4042 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!136, !13}
!4045 = !{!4046}
!4046 = !DILocalVariable(name: "addr", arg: 1, scope: !4041, file: !4042, line: 24, type: !13)
!4047 = !DILocation(line: 0, scope: !4041)
!4048 = !DILocation(line: 49, column: 30, scope: !4041)
!4049 = !DILocation(line: 49, column: 57, scope: !4041)
!4050 = !DILocation(line: 49, column: 2, scope: !4041)
!4051 = distinct !DISubprogram(name: "cbprintf_package", scope: !403, file: !403, line: 815, type: !4052, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4054)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!107, !106, !137, !108, !121, null}
!4054 = !{!4055, !4056, !4057, !4058, !4059, !4060}
!4055 = !DILocalVariable(name: "packaged", arg: 1, scope: !4051, file: !403, line: 815, type: !106)
!4056 = !DILocalVariable(name: "len", arg: 2, scope: !4051, file: !403, line: 815, type: !137)
!4057 = !DILocalVariable(name: "flags", arg: 3, scope: !4051, file: !403, line: 815, type: !108)
!4058 = !DILocalVariable(name: "format", arg: 4, scope: !4051, file: !403, line: 816, type: !121)
!4059 = !DILocalVariable(name: "ap", scope: !4051, file: !403, line: 818, type: !3710)
!4060 = !DILocalVariable(name: "ret", scope: !4051, file: !403, line: 819, type: !107)
!4061 = !DILocation(line: 0, scope: !4051)
!4062 = !DILocation(line: 818, column: 2, scope: !4051)
!4063 = !DILocation(line: 818, column: 10, scope: !4051)
!4064 = !DILocation(line: 821, column: 2, scope: !4051)
!4065 = !DILocation(line: 822, column: 8, scope: !4051)
!4066 = !DILocation(line: 823, column: 2, scope: !4051)
!4067 = !DILocation(line: 825, column: 1, scope: !4051)
!4068 = !DILocation(line: 824, column: 2, scope: !4051)
!4069 = distinct !DISubprogram(name: "cbpprintf_external", scope: !403, file: !403, line: 827, type: !4070, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4080)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!107, !4072, !4076, !106, !106}
!4072 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3743, line: 297, baseType: !4073)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 32)
!4074 = !DISubroutineType(types: !4075)
!4075 = !{!107, null}
!4076 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3743, line: 328, baseType: !4077)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 32)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!107, !4072, !106, !121, !3710}
!4080 = !{!4081, !4082, !4083, !4084, !4085, !4086, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099}
!4081 = !DILocalVariable(name: "out", arg: 1, scope: !4069, file: !403, line: 827, type: !4072)
!4082 = !DILocalVariable(name: "formatter", arg: 2, scope: !4069, file: !403, line: 828, type: !4076)
!4083 = !DILocalVariable(name: "ctx", arg: 3, scope: !4069, file: !403, line: 829, type: !106)
!4084 = !DILocalVariable(name: "packaged", arg: 4, scope: !4069, file: !403, line: 829, type: !106)
!4085 = !DILocalVariable(name: "buf", scope: !4069, file: !403, line: 831, type: !401)
!4086 = !DILocalVariable(name: "hdr", scope: !4069, file: !403, line: 832, type: !4087)
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 32)
!4088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3743, line: 96, size: 64, elements: !4089)
!4089 = !{!4090, !4091}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4088, file: !3743, line: 98, baseType: !3742, size: 32)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4088, file: !3743, line: 101, baseType: !283, size: 32, offset: 32)
!4092 = !DILocalVariable(name: "s", scope: !4069, file: !403, line: 833, type: !283)
!4093 = !DILocalVariable(name: "ps", scope: !4069, file: !403, line: 833, type: !400)
!4094 = !DILocalVariable(name: "i", scope: !4069, file: !403, line: 834, type: !32)
!4095 = !DILocalVariable(name: "args_size", scope: !4069, file: !403, line: 834, type: !32)
!4096 = !DILocalVariable(name: "s_nbr", scope: !4069, file: !403, line: 834, type: !32)
!4097 = !DILocalVariable(name: "ros_nbr", scope: !4069, file: !403, line: 834, type: !32)
!4098 = !DILocalVariable(name: "rws_nbr", scope: !4069, file: !403, line: 834, type: !32)
!4099 = !DILocalVariable(name: "s_idx", scope: !4069, file: !403, line: 834, type: !32)
!4100 = !DILocation(line: 0, scope: !4069)
!4101 = !DILocation(line: 836, column: 10, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4069, file: !403, line: 836, column: 6)
!4103 = !DILocation(line: 836, column: 6, scope: !4069)
!4104 = !DILocation(line: 842, column: 28, scope: !4069)
!4105 = !DILocation(line: 842, column: 14, scope: !4069)
!4106 = !DILocation(line: 852, column: 16, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !403, line: 852, column: 2)
!4108 = distinct !DILexicalBlock(scope: !4069, file: !403, line: 852, column: 2)
!4109 = !DILocation(line: 852, column: 2, scope: !4108)
!4110 = !DILocation(line: 841, column: 28, scope: !4069)
!4111 = !DILocation(line: 841, column: 14, scope: !4069)
!4112 = !DILocation(line: 841, column: 32, scope: !4069)
!4113 = !DILocation(line: 847, column: 19, scope: !4069)
!4114 = !DILocation(line: 843, column: 28, scope: !4069)
!4115 = !DILocation(line: 843, column: 14, scope: !4069)
!4116 = !DILocation(line: 847, column: 31, scope: !4069)
!4117 = !DILocation(line: 844, column: 28, scope: !4069)
!4118 = !DILocation(line: 844, column: 14, scope: !4069)
!4119 = !DILocation(line: 847, column: 45, scope: !4069)
!4120 = !DILocation(line: 847, column: 41, scope: !4069)
!4121 = !DILocation(line: 854, column: 24, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4107, file: !403, line: 852, column: 30)
!4123 = !DILocation(line: 854, column: 11, scope: !4122)
!4124 = !DILocation(line: 855, column: 30, scope: !4122)
!4125 = !DILocation(line: 855, column: 22, scope: !4122)
!4126 = !DILocation(line: 855, column: 8, scope: !4122)
!4127 = !DILocation(line: 857, column: 7, scope: !4122)
!4128 = !DILocation(line: 859, column: 8, scope: !4122)
!4129 = !DILocation(line: 859, column: 18, scope: !4122)
!4130 = !DILocation(line: 859, column: 5, scope: !4122)
!4131 = !DILocation(line: 852, column: 26, scope: !4107)
!4132 = distinct !{!4132, !4109, !4133}
!4133 = !DILocation(line: 860, column: 2, scope: !4108)
!4134 = !DILocation(line: 863, column: 6, scope: !4069)
!4135 = !DILocation(line: 866, column: 56, scope: !4069)
!4136 = !DILocation(line: 866, column: 9, scope: !4069)
!4137 = !DILocation(line: 866, column: 2, scope: !4069)
!4138 = !DILocation(line: 867, column: 1, scope: !4069)
!4139 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !403, file: !403, line: 179, type: !4140, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4142)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!107, !4072, !4076, !106, !121, !106}
!4142 = !{!4143, !4144, !4145, !4146, !4147, !4148}
!4143 = !DILocalVariable(name: "out", arg: 1, scope: !4139, file: !403, line: 179, type: !4072)
!4144 = !DILocalVariable(name: "formatter", arg: 2, scope: !4139, file: !403, line: 180, type: !4076)
!4145 = !DILocalVariable(name: "ctx", arg: 3, scope: !4139, file: !403, line: 181, type: !106)
!4146 = !DILocalVariable(name: "fmt", arg: 4, scope: !4139, file: !403, line: 182, type: !121)
!4147 = !DILocalVariable(name: "buf", arg: 5, scope: !4139, file: !403, line: 182, type: !106)
!4148 = !DILocalVariable(name: "u", scope: !4139, file: !403, line: 187, type: !4149)
!4149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4139, file: !403, line: 184, size: 32, elements: !4150)
!4150 = !{!4151, !4152}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4149, file: !403, line: 185, baseType: !3710, size: 32)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4149, file: !403, line: 186, baseType: !106, size: 32)
!4153 = !DILocation(line: 0, scope: !4139)
!4154 = !DILocation(line: 191, column: 9, scope: !4139)
!4155 = !DILocation(line: 191, column: 2, scope: !4139)
!4156 = distinct !DISubprogram(name: "is_ptr", scope: !403, file: !403, line: 881, type: !4157, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4159)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{!136, !121, !107}
!4159 = !{!4160, !4161, !4162, !4163, !4164}
!4160 = !DILocalVariable(name: "fmt", arg: 1, scope: !4156, file: !403, line: 881, type: !121)
!4161 = !DILocalVariable(name: "n", arg: 2, scope: !4156, file: !403, line: 881, type: !107)
!4162 = !DILocalVariable(name: "c", scope: !4156, file: !403, line: 883, type: !123)
!4163 = !DILocalVariable(name: "mod", scope: !4156, file: !403, line: 884, type: !136)
!4164 = !DILocalVariable(name: "cnt", scope: !4156, file: !403, line: 885, type: !107)
!4165 = !DILocation(line: 0, scope: !4156)
!4166 = !DILocation(line: 887, column: 14, scope: !4156)
!4167 = !DILocation(line: 887, column: 22, scope: !4156)
!4168 = !DILocation(line: 887, column: 2, scope: !4156)
!4169 = !DILocation(line: 887, column: 18, scope: !4156)
!4170 = !DILocation(line: 888, column: 7, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4156, file: !403, line: 887, column: 31)
!4172 = !DILocation(line: 889, column: 12, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !403, line: 889, column: 8)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !403, line: 888, column: 12)
!4175 = distinct !DILexicalBlock(scope: !4171, file: !403, line: 888, column: 7)
!4176 = !DILocation(line: 889, column: 8, scope: !4174)
!4177 = !DILocation(line: 890, column: 11, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !403, line: 890, column: 9)
!4179 = distinct !DILexicalBlock(scope: !4173, file: !403, line: 889, column: 18)
!4180 = !DILocation(line: 890, column: 9, scope: !4179)
!4181 = !DILocation(line: 892, column: 16, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4178, file: !403, line: 892, column: 16)
!4183 = !DILocation(line: 892, column: 16, scope: !4178)
!4184 = !DILocation(line: 895, column: 15, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4173, file: !403, line: 895, column: 15)
!4186 = !DILocation(line: 895, column: 15, scope: !4173)
!4187 = !DILocation(line: 900, column: 9, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4171, file: !403, line: 900, column: 7)
!4189 = !DILocation(line: 900, column: 7, scope: !4171)
!4190 = distinct !{!4190, !4168, !4191}
!4191 = !DILocation(line: 903, column: 2, scope: !4156)
!4192 = !DILocation(line: 906, column: 1, scope: !4156)
!4193 = distinct !DISubprogram(name: "is_fmt_spec", scope: !403, file: !403, line: 873, type: !4194, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4196)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!136, !123}
!4196 = !{!4197}
!4197 = !DILocalVariable(name: "c", arg: 1, scope: !4193, file: !403, line: 873, type: !123)
!4198 = !DILocation(line: 0, scope: !4193)
!4199 = !DILocation(line: 875, column: 19, scope: !4193)
!4200 = !DILocation(line: 875, column: 2, scope: !4193)
!4201 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !403, file: !403, line: 908, type: !4202, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4208)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!107, !106, !137, !4204, !106, !108, !2651, !137}
!4204 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3743, line: 308, baseType: !4205)
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 32)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{!107, !13, !137, !106}
!4208 = !{!4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4226, !4227, !4228, !4229, !4230, !4236, !4239, !4240, !4241, !4243, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4259, !4262, !4263, !4264, !4265, !4266, !4267, !4269, !4272, !4273, !4274}
!4209 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4201, file: !403, line: 908, type: !106)
!4210 = !DILocalVariable(name: "in_len", arg: 2, scope: !4201, file: !403, line: 909, type: !137)
!4211 = !DILocalVariable(name: "cb", arg: 3, scope: !4201, file: !403, line: 910, type: !4204)
!4212 = !DILocalVariable(name: "ctx", arg: 4, scope: !4201, file: !403, line: 911, type: !106)
!4213 = !DILocalVariable(name: "flags", arg: 5, scope: !4201, file: !403, line: 912, type: !108)
!4214 = !DILocalVariable(name: "strl", arg: 6, scope: !4201, file: !403, line: 913, type: !2651)
!4215 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4201, file: !403, line: 914, type: !137)
!4216 = !DILocalVariable(name: "buf", scope: !4201, file: !403, line: 918, type: !401)
!4217 = !DILocalVariable(name: "buf32", scope: !4201, file: !403, line: 919, type: !1002)
!4218 = !DILocalVariable(name: "args_size", scope: !4201, file: !403, line: 920, type: !32)
!4219 = !DILocalVariable(name: "ros_nbr", scope: !4201, file: !403, line: 920, type: !32)
!4220 = !DILocalVariable(name: "rws_nbr", scope: !4201, file: !403, line: 920, type: !32)
!4221 = !DILocalVariable(name: "fmt_present", scope: !4201, file: !403, line: 921, type: !136)
!4222 = !DILocalVariable(name: "rw_cpy", scope: !4201, file: !403, line: 922, type: !136)
!4223 = !DILocalVariable(name: "ro_cpy", scope: !4201, file: !403, line: 923, type: !136)
!4224 = !DILocalVariable(name: "in_desc", scope: !4201, file: !403, line: 924, type: !4225)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 32)
!4226 = !DILocalVariable(name: "out_len", scope: !4201, file: !403, line: 960, type: !107)
!4227 = !DILocalVariable(name: "fmt", scope: !4201, file: !403, line: 965, type: !121)
!4228 = !DILocalVariable(name: "str_pos", scope: !4201, file: !403, line: 966, type: !401)
!4229 = !DILocalVariable(name: "strl_cnt", scope: !4201, file: !403, line: 967, type: !137)
!4230 = !DILocalVariable(name: "i", scope: !4231, file: !403, line: 973, type: !107)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !403, line: 973, column: 4)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !403, line: 972, column: 15)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !403, line: 972, column: 7)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !403, line: 970, column: 18)
!4235 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 970, column: 6)
!4236 = !DILocalVariable(name: "str", scope: !4237, file: !403, line: 974, type: !121)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !403, line: 973, column: 38)
!4238 = distinct !DILexicalBlock(scope: !4231, file: !403, line: 973, column: 4)
!4239 = !DILocalVariable(name: "len", scope: !4237, file: !403, line: 975, type: !107)
!4240 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4234, file: !403, line: 990, type: !136)
!4241 = !DILocalVariable(name: "i", scope: !4242, file: !403, line: 995, type: !107)
!4242 = distinct !DILexicalBlock(scope: !4234, file: !403, line: 995, column: 3)
!4243 = !DILocalVariable(name: "arg_idx", scope: !4244, file: !403, line: 996, type: !190)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !403, line: 995, column: 37)
!4245 = distinct !DILexicalBlock(scope: !4242, file: !403, line: 995, column: 3)
!4246 = !DILocalVariable(name: "arg_pos", scope: !4244, file: !403, line: 997, type: !190)
!4247 = !DILocalVariable(name: "str", scope: !4244, file: !403, line: 998, type: !121)
!4248 = !DILocalVariable(name: "is_ro", scope: !4244, file: !403, line: 999, type: !136)
!4249 = !DILocalVariable(name: "len", scope: !4244, file: !403, line: 1000, type: !107)
!4250 = !DILocalVariable(name: "out_desc", scope: !4201, file: !403, line: 1038, type: !3746)
!4251 = !DILocalVariable(name: "cpy_str_pos", scope: !4201, file: !403, line: 1040, type: !3728)
!4252 = !DILocalVariable(name: "keep_str_pos", scope: !4201, file: !403, line: 1042, type: !3728)
!4253 = !DILocalVariable(name: "scpy_cnt", scope: !4201, file: !403, line: 1043, type: !190)
!4254 = !DILocalVariable(name: "keep_cnt", scope: !4201, file: !403, line: 1044, type: !190)
!4255 = !DILocalVariable(name: "dst", scope: !4201, file: !403, line: 1045, type: !401)
!4256 = !DILocalVariable(name: "rv", scope: !4201, file: !403, line: 1046, type: !107)
!4257 = !DILocalVariable(name: "i", scope: !4258, file: !403, line: 1074, type: !107)
!4258 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 1074, column: 2)
!4259 = !DILocalVariable(name: "arg_idx", scope: !4260, file: !403, line: 1075, type: !190)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !403, line: 1074, column: 36)
!4261 = distinct !DILexicalBlock(scope: !4258, file: !403, line: 1074, column: 2)
!4262 = !DILocalVariable(name: "arg_pos", scope: !4260, file: !403, line: 1076, type: !190)
!4263 = !DILocalVariable(name: "str", scope: !4260, file: !403, line: 1077, type: !121)
!4264 = !DILocalVariable(name: "is_ro", scope: !4260, file: !403, line: 1078, type: !136)
!4265 = !DILocalVariable(name: "in_desc_backup", scope: !4201, file: !403, line: 1114, type: !3746)
!4266 = !DILocalVariable(name: "strs_len", scope: !4201, file: !403, line: 1134, type: !137)
!4267 = !DILocalVariable(name: "i", scope: !4268, file: !403, line: 1143, type: !107)
!4268 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 1143, column: 2)
!4269 = !DILocalVariable(name: "loc", scope: !4270, file: !403, line: 1144, type: !190)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !403, line: 1143, column: 37)
!4271 = distinct !DILexicalBlock(scope: !4268, file: !403, line: 1143, column: 2)
!4272 = !DILocalVariable(name: "str", scope: !4270, file: !403, line: 1145, type: !121)
!4273 = !DILocalVariable(name: "str_len", scope: !4270, file: !403, line: 1146, type: !126)
!4274 = !DILabel(scope: !4275, name: "calculate_string_length", file: !403, line: 1021)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !403, line: 1020, column: 56)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !403, line: 1020, column: 15)
!4277 = distinct !DILexicalBlock(scope: !4244, file: !403, line: 1014, column: 8)
!4278 = !DILocation(line: 0, scope: !4201)
!4279 = !DILocation(line: 919, column: 20, scope: !4201)
!4280 = !DILocation(line: 921, column: 27, scope: !4201)
!4281 = !DILocation(line: 921, column: 21, scope: !4201)
!4282 = !DILocation(line: 926, column: 18, scope: !4201)
!4283 = !DILocation(line: 926, column: 11, scope: !4201)
!4284 = !DILocation(line: 926, column: 34, scope: !4201)
!4285 = !DILocation(line: 931, column: 21, scope: !4201)
!4286 = !DILocation(line: 931, column: 12, scope: !4201)
!4287 = !DILocation(line: 932, column: 11, scope: !4201)
!4288 = !DILocation(line: 932, column: 19, scope: !4201)
!4289 = !DILocation(line: 938, column: 21, scope: !4201)
!4290 = !DILocation(line: 938, column: 12, scope: !4201)
!4291 = !DILocation(line: 939, column: 19, scope: !4201)
!4292 = !DILocation(line: 939, column: 23, scope: !4201)
!4293 = !DILocation(line: 946, column: 14, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 946, column: 6)
!4295 = !DILocation(line: 947, column: 7, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !403, line: 947, column: 7)
!4297 = distinct !DILexicalBlock(scope: !4294, file: !403, line: 946, column: 26)
!4298 = !DILocation(line: 947, column: 7, scope: !4297)
!4299 = !DILocation(line: 948, column: 4, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4296, file: !403, line: 947, column: 11)
!4301 = !DILocation(line: 949, column: 3, scope: !4300)
!4302 = !DILocation(line: 958, column: 23, scope: !4201)
!4303 = !DILocation(line: 958, column: 14, scope: !4201)
!4304 = !DILocation(line: 958, column: 27, scope: !4201)
!4305 = !DILocation(line: 965, column: 41, scope: !4201)
!4306 = !DILocation(line: 965, column: 20, scope: !4201)
!4307 = !DILocation(line: 966, column: 22, scope: !4201)
!4308 = !DILocation(line: 970, column: 9, scope: !4235)
!4309 = !DILocation(line: 970, column: 6, scope: !4201)
!4310 = !DILocation(line: 972, column: 7, scope: !4234)
!4311 = !DILocation(line: 0, scope: !4231)
!4312 = !DILocation(line: 973, column: 4, scope: !4231)
!4313 = !DILocation(line: 974, column: 46, scope: !4237)
!4314 = !DILocation(line: 974, column: 40, scope: !4237)
!4315 = !DILocation(line: 974, column: 23, scope: !4237)
!4316 = !DILocation(line: 0, scope: !4237)
!4317 = !DILocation(line: 975, column: 15, scope: !4237)
!4318 = !DILocation(line: 978, column: 14, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4237, file: !403, line: 978, column: 9)
!4320 = !DILocation(line: 979, column: 25, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4319, file: !403, line: 978, column: 38)
!4322 = !DILocation(line: 979, column: 19, scope: !4321)
!4323 = !DILocation(line: 979, column: 6, scope: !4321)
!4324 = !DILocation(line: 979, column: 23, scope: !4321)
!4325 = !DILocation(line: 980, column: 5, scope: !4321)
!4326 = !DILocation(line: 981, column: 13, scope: !4237)
!4327 = !DILocation(line: 982, column: 12, scope: !4237)
!4328 = !DILocation(line: 973, column: 34, scope: !4238)
!4329 = !DILocation(line: 973, column: 22, scope: !4238)
!4330 = distinct !{!4330, !4312, !4331}
!4331 = !DILocation(line: 983, column: 4, scope: !4231)
!4332 = !DILocation(line: 985, column: 16, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !403, line: 985, column: 8)
!4334 = distinct !DILexicalBlock(scope: !4233, file: !403, line: 984, column: 10)
!4335 = !DILocation(line: 967, column: 9, scope: !4201)
!4336 = !DILocation(line: 971, column: 11, scope: !4234)
!4337 = !DILocation(line: 0, scope: !4234)
!4338 = !DILocation(line: 0, scope: !4242)
!4339 = !DILocation(line: 995, column: 21, scope: !4245)
!4340 = !DILocation(line: 995, column: 3, scope: !4242)
!4341 = !DILocation(line: 990, column: 34, scope: !4234)
!4342 = !DILocation(line: 990, column: 26, scope: !4234)
!4343 = !DILocation(line: 996, column: 30, scope: !4244)
!4344 = !DILocation(line: 0, scope: !4244)
!4345 = !DILocation(line: 997, column: 30, scope: !4244)
!4346 = !DILocation(line: 997, column: 22, scope: !4244)
!4347 = !DILocation(line: 998, column: 39, scope: !4244)
!4348 = !DILocation(line: 998, column: 22, scope: !4244)
!4349 = !DILocation(line: 999, column: 17, scope: !4244)
!4350 = !DILocation(line: 1002, column: 20, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4244, file: !403, line: 1002, column: 8)
!4352 = !DILocation(line: 996, column: 22, scope: !4244)
!4353 = !DILocation(line: 1002, column: 35, scope: !4351)
!4354 = !DILocation(line: 1002, column: 23, scope: !4351)
!4355 = !DILocation(line: 1002, column: 8, scope: !4244)
!4356 = !DILocation(line: 1003, column: 5, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !403, line: 1003, column: 5)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !403, line: 1003, column: 5)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !403, line: 1003, column: 5)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !403, line: 1003, column: 5)
!4361 = distinct !DILexicalBlock(scope: !4351, file: !403, line: 1002, column: 45)
!4362 = !DILocation(line: 1010, column: 13, scope: !4361)
!4363 = !DILocation(line: 1011, column: 5, scope: !4361)
!4364 = !DILocation(line: 1014, column: 8, scope: !4244)
!4365 = !DILocation(line: 1015, column: 9, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4277, file: !403, line: 1014, column: 15)
!4367 = !DILocation(line: 1018, column: 14, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !403, line: 1017, column: 12)
!4369 = distinct !DILexicalBlock(scope: !4366, file: !403, line: 1015, column: 9)
!4370 = !DILocation(line: 1020, column: 4, scope: !4366)
!4371 = !DILocation(line: 1020, column: 15, scope: !4277)
!4372 = !DILocation(line: 1021, column: 1, scope: !4275)
!4373 = !DILocation(line: 1022, column: 11, scope: !4275)
!4374 = !DILocation(line: 1025, column: 14, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4275, file: !403, line: 1025, column: 9)
!4376 = !DILocation(line: 1026, column: 25, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4375, file: !403, line: 1025, column: 38)
!4378 = !DILocation(line: 1026, column: 19, scope: !4377)
!4379 = !DILocation(line: 1026, column: 6, scope: !4377)
!4380 = !DILocation(line: 1026, column: 23, scope: !4377)
!4381 = !DILocation(line: 1027, column: 5, scope: !4377)
!4382 = !DILocation(line: 1031, column: 21, scope: !4275)
!4383 = !DILocation(line: 1031, column: 13, scope: !4275)
!4384 = !DILocation(line: 1032, column: 4, scope: !4275)
!4385 = !DILocation(line: 995, column: 33, scope: !4245)
!4386 = distinct !{!4386, !4340, !4387}
!4387 = !DILocation(line: 1033, column: 3, scope: !4242)
!4388 = !DILocation(line: 1040, column: 10, scope: !4201)
!4389 = !DILocation(line: 1042, column: 10, scope: !4201)
!4390 = !DILocation(line: 1052, column: 6, scope: !4201)
!4391 = !DILocation(line: 1055, column: 9, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !403, line: 1052, column: 14)
!4393 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 1052, column: 6)
!4394 = !DILocation(line: 1056, column: 2, scope: !4392)
!4395 = !DILocation(line: 1056, column: 21, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4393, file: !403, line: 1056, column: 13)
!4397 = !DILocation(line: 1066, column: 3, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !403, line: 1065, column: 11)
!4399 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 1065, column: 6)
!4400 = !DILocation(line: 1067, column: 2, scope: !4398)
!4401 = !DILocation(line: 1068, column: 10, scope: !4201)
!4402 = !DILocation(line: 0, scope: !4258)
!4403 = !DILocation(line: 1074, column: 20, scope: !4261)
!4404 = !DILocation(line: 1074, column: 2, scope: !4258)
!4405 = !DILocation(line: 1110, column: 24, scope: !4201)
!4406 = !DILocation(line: 1053, column: 12, scope: !4392)
!4407 = !DILocation(line: 1054, column: 12, scope: !4392)
!4408 = !DILocation(line: 1108, column: 30, scope: !4201)
!4409 = !DILocation(line: 1108, column: 40, scope: !4201)
!4410 = !DILocation(line: 1108, column: 38, scope: !4201)
!4411 = !DILocation(line: 1109, column: 31, scope: !4201)
!4412 = !DILocation(line: 1109, column: 24, scope: !4201)
!4413 = !DILocation(line: 1110, column: 31, scope: !4201)
!4414 = !DILocation(line: 1114, column: 31, scope: !4201)
!4415 = !DILocation(line: 1114, column: 48, scope: !4201)
!4416 = !DILocation(line: 1115, column: 13, scope: !4201)
!4417 = !DILocation(line: 1118, column: 7, scope: !4201)
!4418 = !DILocation(line: 1119, column: 9, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 1119, column: 6)
!4420 = !DILocation(line: 1119, column: 6, scope: !4201)
!4421 = !DILocation(line: 1075, column: 29, scope: !4260)
!4422 = !DILocation(line: 1075, column: 21, scope: !4260)
!4423 = !DILocation(line: 0, scope: !4260)
!4424 = !DILocation(line: 1076, column: 29, scope: !4260)
!4425 = !DILocation(line: 1076, column: 21, scope: !4260)
!4426 = !DILocation(line: 1077, column: 38, scope: !4260)
!4427 = !DILocation(line: 1077, column: 21, scope: !4260)
!4428 = !DILocation(line: 1078, column: 16, scope: !4260)
!4429 = !DILocation(line: 1080, column: 19, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4260, file: !403, line: 1080, column: 7)
!4431 = !DILocation(line: 1080, column: 34, scope: !4430)
!4432 = !DILocation(line: 1080, column: 22, scope: !4430)
!4433 = !DILocation(line: 1080, column: 7, scope: !4260)
!4434 = !DILocation(line: 1084, column: 7, scope: !4260)
!4435 = !DILocation(line: 1085, column: 8, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4437, file: !403, line: 1084, column: 14)
!4437 = distinct !DILexicalBlock(scope: !4260, file: !403, line: 1084, column: 7)
!4438 = !DILocation(line: 1087, column: 25, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4440, file: !403, line: 1085, column: 49)
!4440 = distinct !DILexicalBlock(scope: !4436, file: !403, line: 1085, column: 8)
!4441 = !DILocation(line: 1088, column: 4, scope: !4439)
!4442 = !DILocation(line: 1088, column: 15, scope: !4440)
!4443 = !DILocation(line: 1090, column: 26, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !403, line: 1088, column: 61)
!4445 = distinct !DILexicalBlock(scope: !4440, file: !403, line: 1088, column: 15)
!4446 = !DILocation(line: 1091, column: 4, scope: !4444)
!4447 = !DILocation(line: 1095, column: 8, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4437, file: !403, line: 1094, column: 10)
!4449 = !DILocation(line: 1097, column: 25, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4451, file: !403, line: 1095, column: 49)
!4451 = distinct !DILexicalBlock(scope: !4448, file: !403, line: 1095, column: 8)
!4452 = !DILocation(line: 1098, column: 4, scope: !4450)
!4453 = !DILocation(line: 1100, column: 26, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4451, file: !403, line: 1098, column: 11)
!4455 = !DILocation(line: 1100, column: 5, scope: !4454)
!4456 = !DILocation(line: 1100, column: 30, scope: !4454)
!4457 = !DILocation(line: 1101, column: 26, scope: !4454)
!4458 = !DILocation(line: 0, scope: !4437)
!4459 = !DILocation(line: 1074, column: 32, scope: !4261)
!4460 = distinct !{!4460, !4404, !4461}
!4461 = !DILocation(line: 1104, column: 2, scope: !4258)
!4462 = !DILocation(line: 1124, column: 13, scope: !4201)
!4463 = !DILocation(line: 1127, column: 10, scope: !4201)
!4464 = !DILocation(line: 1127, column: 7, scope: !4201)
!4465 = !DILocation(line: 1128, column: 9, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 1128, column: 6)
!4467 = !DILocation(line: 1128, column: 6, scope: !4201)
!4468 = !DILocation(line: 1134, column: 27, scope: !4201)
!4469 = !DILocation(line: 1136, column: 7, scope: !4201)
!4470 = !DILocation(line: 1137, column: 9, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4201, file: !403, line: 1137, column: 6)
!4472 = !DILocation(line: 1137, column: 6, scope: !4201)
!4473 = !DILocation(line: 1131, column: 10, scope: !4201)
!4474 = !DILocation(line: 1140, column: 10, scope: !4201)
!4475 = !DILocation(line: 0, scope: !4268)
!4476 = !DILocation(line: 1143, column: 20, scope: !4271)
!4477 = !DILocation(line: 1143, column: 2, scope: !4268)
!4478 = !DILocation(line: 1144, column: 3, scope: !4270)
!4479 = !DILocation(line: 1144, column: 17, scope: !4270)
!4480 = !DILocation(line: 0, scope: !4270)
!4481 = !DILocation(line: 1144, column: 11, scope: !4270)
!4482 = !DILocation(line: 1145, column: 38, scope: !4270)
!4483 = !DILocation(line: 1145, column: 21, scope: !4270)
!4484 = !DILocation(line: 1146, column: 22, scope: !4270)
!4485 = !DILocation(line: 1146, column: 29, scope: !4270)
!4486 = !DILocation(line: 1148, column: 8, scope: !4270)
!4487 = !DILocation(line: 1149, column: 10, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4270, file: !403, line: 1149, column: 7)
!4489 = !DILocation(line: 1149, column: 7, scope: !4270)
!4490 = !DILocation(line: 1154, column: 8, scope: !4270)
!4491 = !DILocation(line: 1155, column: 10, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4270, file: !403, line: 1155, column: 7)
!4493 = !DILocation(line: 1155, column: 7, scope: !4270)
!4494 = !DILocation(line: 1159, column: 2, scope: !4271)
!4495 = !DILocation(line: 1152, column: 11, scope: !4270)
!4496 = !DILocation(line: 1158, column: 11, scope: !4270)
!4497 = !DILocation(line: 1143, column: 33, scope: !4271)
!4498 = distinct !{!4498, !4477, !4499}
!4499 = !DILocation(line: 1159, column: 2, scope: !4268)
!4500 = !DILocation(line: 1162, column: 8, scope: !4201)
!4501 = !DILocation(line: 1164, column: 2, scope: !4201)
!4502 = !DILocation(line: 1165, column: 1, scope: !4201)
!4503 = distinct !DISubprogram(name: "get_package_len", scope: !403, file: !403, line: 196, type: !4504, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4506)
!4504 = !DISubroutineType(types: !4505)
!4505 = !{!137, !106}
!4506 = !{!4507, !4508, !4509, !4510, !4511, !4512, !4513}
!4507 = !DILocalVariable(name: "packaged", arg: 1, scope: !4503, file: !403, line: 196, type: !106)
!4508 = !DILocalVariable(name: "buf", scope: !4503, file: !403, line: 200, type: !401)
!4509 = !DILocalVariable(name: "start", scope: !4503, file: !403, line: 201, type: !401)
!4510 = !DILocalVariable(name: "args_size", scope: !4503, file: !403, line: 202, type: !32)
!4511 = !DILocalVariable(name: "s_nbr", scope: !4503, file: !403, line: 202, type: !32)
!4512 = !DILocalVariable(name: "ros_nbr", scope: !4503, file: !403, line: 202, type: !32)
!4513 = !DILocalVariable(name: "i", scope: !4514, file: !403, line: 215, type: !107)
!4514 = distinct !DILexicalBlock(scope: !4503, file: !403, line: 215, column: 2)
!4515 = !DILocation(line: 0, scope: !4503)
!4516 = !DILocation(line: 204, column: 14, scope: !4503)
!4517 = !DILocation(line: 204, column: 21, scope: !4503)
!4518 = !DILocation(line: 205, column: 14, scope: !4503)
!4519 = !DILocation(line: 206, column: 14, scope: !4503)
!4520 = !DILocation(line: 209, column: 6, scope: !4503)
!4521 = !DILocation(line: 212, column: 6, scope: !4503)
!4522 = !DILocation(line: 0, scope: !4514)
!4523 = !DILocation(line: 215, column: 20, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4514, file: !403, line: 215, column: 2)
!4525 = !DILocation(line: 215, column: 2, scope: !4514)
!4526 = !DILocation(line: 220, column: 33, scope: !4503)
!4527 = !DILocation(line: 220, column: 2, scope: !4503)
!4528 = !DILocation(line: 216, column: 6, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4524, file: !403, line: 215, column: 34)
!4530 = !DILocation(line: 217, column: 10, scope: !4529)
!4531 = !DILocation(line: 217, column: 36, scope: !4529)
!4532 = !DILocation(line: 217, column: 7, scope: !4529)
!4533 = !DILocation(line: 215, column: 30, scope: !4524)
!4534 = distinct !{!4534, !4525, !4535}
!4535 = !DILocation(line: 218, column: 2, scope: !4514)
!4536 = distinct !DISubprogram(name: "append_string", scope: !403, file: !403, line: 223, type: !4537, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4539)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!107, !4204, !106, !121, !126}
!4539 = !{!4540, !4541, !4542, !4543}
!4540 = !DILocalVariable(name: "cb", arg: 1, scope: !4536, file: !403, line: 223, type: !4204)
!4541 = !DILocalVariable(name: "ctx", arg: 2, scope: !4536, file: !403, line: 223, type: !106)
!4542 = !DILocalVariable(name: "str", arg: 3, scope: !4536, file: !403, line: 223, type: !121)
!4543 = !DILocalVariable(name: "strl", arg: 4, scope: !4536, file: !403, line: 223, type: !126)
!4544 = !DILocation(line: 0, scope: !4536)
!4545 = !DILocation(line: 225, column: 9, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4536, file: !403, line: 225, column: 6)
!4547 = !DILocation(line: 225, column: 6, scope: !4536)
!4548 = !DILocation(line: 226, column: 14, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4546, file: !403, line: 225, column: 18)
!4550 = !DILocation(line: 226, column: 12, scope: !4549)
!4551 = !DILocation(line: 226, column: 3, scope: !4549)
!4552 = !DILocation(line: 229, column: 14, scope: !4536)
!4553 = !DILocation(line: 229, column: 9, scope: !4536)
!4554 = !DILocation(line: 229, column: 27, scope: !4536)
!4555 = !DILocation(line: 229, column: 39, scope: !4536)
!4556 = !DILocation(line: 230, column: 17, scope: !4536)
!4557 = !DILocation(line: 230, column: 9, scope: !4536)
!4558 = !DILocation(line: 230, column: 2, scope: !4536)
!4559 = !DILocation(line: 231, column: 1, scope: !4536)
!4560 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !416, file: !416, line: 45, type: !418, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4561)
!4561 = !{!4562}
!4562 = !DILocalVariable(name: "c", arg: 1, scope: !4560, file: !416, line: 45, type: !107)
!4563 = !DILocation(line: 0, scope: !4560)
!4564 = !DILocation(line: 50, column: 2, scope: !4560)
!4565 = distinct !DISubprogram(name: "__printk_hook_install", scope: !416, file: !416, line: 63, type: !4566, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4568)
!4566 = !DISubroutineType(types: !4567)
!4567 = !{null, !417}
!4568 = !{!4569}
!4569 = !DILocalVariable(name: "fn", arg: 1, scope: !4565, file: !416, line: 63, type: !417)
!4570 = !DILocation(line: 0, scope: !4565)
!4571 = !DILocation(line: 65, column: 12, scope: !4565)
!4572 = !DILocation(line: 66, column: 1, scope: !4565)
!4573 = distinct !DISubprogram(name: "__printk_get_hook", scope: !416, file: !416, line: 76, type: !4574, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !256)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{!106}
!4576 = !DILocation(line: 78, column: 9, scope: !4573)
!4577 = !DILocation(line: 78, column: 2, scope: !4573)
!4578 = distinct !DISubprogram(name: "vprintk", scope: !416, file: !416, line: 113, type: !4579, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4587)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{null, !121, !4581}
!4581 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3711, line: 99, baseType: !4582)
!4582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3711, line: 40, baseType: !4583)
!4583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !416, baseType: !4584)
!4584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4585)
!4585 = !{!4586}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4584, file: !416, line: 79, baseType: !106, size: 32)
!4587 = !{!4588, !4589, !4590}
!4588 = !DILocalVariable(name: "fmt", arg: 1, scope: !4578, file: !416, line: 113, type: !121)
!4589 = !DILocalVariable(name: "ap", arg: 2, scope: !4578, file: !416, line: 113, type: !4581)
!4590 = !DILocalVariable(name: "ctx", scope: !4591, file: !416, line: 121, type: !4593)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !416, line: 120, column: 27)
!4592 = distinct !DILexicalBlock(scope: !4578, file: !416, line: 120, column: 6)
!4593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !416, line: 81, size: 32, elements: !4594)
!4594 = !{!4595, !4596}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4593, file: !416, line: 85, baseType: !32, size: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4593, file: !416, line: 86, baseType: !4597, offset: 32)
!4597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, elements: !2649)
!4598 = !DILocation(line: 0, scope: !4578)
!4599 = !DILocation(line: 148, column: 3, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4592, file: !416, line: 138, column: 9)
!4601 = !DILocation(line: 155, column: 1, scope: !4578)
!4602 = distinct !DISubprogram(name: "char_out", scope: !416, file: !416, line: 107, type: !4603, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4605)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!107, !107, !106}
!4605 = !{!4606, !4607}
!4606 = !DILocalVariable(name: "c", arg: 1, scope: !4602, file: !416, line: 107, type: !107)
!4607 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4602, file: !416, line: 107, type: !106)
!4608 = !DILocation(line: 0, scope: !4602)
!4609 = !DILocation(line: 110, column: 9, scope: !4602)
!4610 = !DILocation(line: 110, column: 2, scope: !4602)
!4611 = distinct !DISubprogram(name: "cbvprintf", scope: !3743, file: !3743, line: 739, type: !4612, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4614)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!107, !4072, !106, !121, !4581}
!4614 = !{!4615, !4616, !4617, !4618}
!4615 = !DILocalVariable(name: "out", arg: 1, scope: !4611, file: !3743, line: 739, type: !4072)
!4616 = !DILocalVariable(name: "ctx", arg: 2, scope: !4611, file: !3743, line: 739, type: !106)
!4617 = !DILocalVariable(name: "format", arg: 3, scope: !4611, file: !3743, line: 739, type: !121)
!4618 = !DILocalVariable(name: "ap", arg: 4, scope: !4611, file: !3743, line: 739, type: !4581)
!4619 = !DILocation(line: 0, scope: !4611)
!4620 = !DILocation(line: 741, column: 9, scope: !4611)
!4621 = !DILocation(line: 741, column: 2, scope: !4611)
!4622 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !416, file: !416, line: 157, type: !4623, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4625)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{null, !283, !137}
!4625 = !{!4626, !4627, !4628}
!4626 = !DILocalVariable(name: "c", arg: 1, scope: !4622, file: !416, line: 157, type: !283)
!4627 = !DILocalVariable(name: "n", arg: 2, scope: !4622, file: !416, line: 157, type: !137)
!4628 = !DILocalVariable(name: "i", scope: !4622, file: !416, line: 159, type: !137)
!4629 = !DILocation(line: 0, scope: !4622)
!4630 = !DILocation(line: 164, column: 16, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !416, line: 164, column: 2)
!4632 = distinct !DILexicalBlock(scope: !4622, file: !416, line: 164, column: 2)
!4633 = !DILocation(line: 164, column: 2, scope: !4632)
!4634 = !DILocation(line: 165, column: 3, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4631, file: !416, line: 164, column: 26)
!4636 = !DILocation(line: 165, column: 13, scope: !4635)
!4637 = !DILocation(line: 164, column: 22, scope: !4631)
!4638 = distinct !{!4638, !4633, !4639}
!4639 = !DILocation(line: 166, column: 2, scope: !4632)
!4640 = !DILocation(line: 171, column: 1, scope: !4622)
!4641 = distinct !DISubprogram(name: "printk", scope: !416, file: !416, line: 203, type: !4642, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4644)
!4642 = !DISubroutineType(types: !4643)
!4643 = !{null, !121, null}
!4644 = !{!4645, !4646}
!4645 = !DILocalVariable(name: "fmt", arg: 1, scope: !4641, file: !416, line: 203, type: !121)
!4646 = !DILocalVariable(name: "ap", scope: !4641, file: !416, line: 205, type: !4581)
!4647 = !DILocation(line: 0, scope: !4641)
!4648 = !DILocation(line: 205, column: 2, scope: !4641)
!4649 = !DILocation(line: 205, column: 10, scope: !4641)
!4650 = !DILocation(line: 207, column: 2, scope: !4641)
!4651 = !DILocation(line: 209, column: 2, scope: !4641)
!4652 = !DILocation(line: 211, column: 2, scope: !4641)
!4653 = !DILocation(line: 212, column: 1, scope: !4641)
!4654 = distinct !DISubprogram(name: "snprintk", scope: !416, file: !416, line: 239, type: !4655, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4657)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{!107, !283, !137, !121, null}
!4657 = !{!4658, !4659, !4660, !4661, !4662}
!4658 = !DILocalVariable(name: "str", arg: 1, scope: !4654, file: !416, line: 239, type: !283)
!4659 = !DILocalVariable(name: "size", arg: 2, scope: !4654, file: !416, line: 239, type: !137)
!4660 = !DILocalVariable(name: "fmt", arg: 3, scope: !4654, file: !416, line: 239, type: !121)
!4661 = !DILocalVariable(name: "ap", scope: !4654, file: !416, line: 241, type: !4581)
!4662 = !DILocalVariable(name: "ret", scope: !4654, file: !416, line: 242, type: !107)
!4663 = !DILocation(line: 0, scope: !4654)
!4664 = !DILocation(line: 241, column: 2, scope: !4654)
!4665 = !DILocation(line: 241, column: 10, scope: !4654)
!4666 = !DILocation(line: 244, column: 2, scope: !4654)
!4667 = !DILocation(line: 245, column: 8, scope: !4654)
!4668 = !DILocation(line: 246, column: 2, scope: !4654)
!4669 = !DILocation(line: 249, column: 1, scope: !4654)
!4670 = !DILocation(line: 248, column: 2, scope: !4654)
!4671 = distinct !DISubprogram(name: "vsnprintk", scope: !416, file: !416, line: 251, type: !4672, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4674)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!107, !283, !137, !121, !4581}
!4674 = !{!4675, !4676, !4677, !4678, !4679}
!4675 = !DILocalVariable(name: "str", arg: 1, scope: !4671, file: !416, line: 251, type: !283)
!4676 = !DILocalVariable(name: "size", arg: 2, scope: !4671, file: !416, line: 251, type: !137)
!4677 = !DILocalVariable(name: "fmt", arg: 3, scope: !4671, file: !416, line: 251, type: !121)
!4678 = !DILocalVariable(name: "ap", arg: 4, scope: !4671, file: !416, line: 251, type: !4581)
!4679 = !DILocalVariable(name: "ctx", scope: !4671, file: !416, line: 253, type: !4680)
!4680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !416, line: 217, size: 96, elements: !4681)
!4681 = !{!4682, !4683, !4684}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4680, file: !416, line: 218, baseType: !283, size: 32)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4680, file: !416, line: 219, baseType: !107, size: 32, offset: 32)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4680, file: !416, line: 220, baseType: !107, size: 32, offset: 64)
!4685 = !DILocation(line: 0, scope: !4671)
!4686 = !DILocation(line: 253, column: 2, scope: !4671)
!4687 = !DILocation(line: 253, column: 21, scope: !4671)
!4688 = !DILocation(line: 253, column: 27, scope: !4671)
!4689 = !DILocation(line: 255, column: 2, scope: !4671)
!4690 = !DILocation(line: 257, column: 10, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4671, file: !416, line: 257, column: 6)
!4692 = !DILocation(line: 257, column: 22, scope: !4691)
!4693 = !DILocation(line: 257, column: 16, scope: !4691)
!4694 = !DILocation(line: 257, column: 6, scope: !4671)
!4695 = !DILocation(line: 258, column: 3, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4691, file: !416, line: 257, column: 27)
!4697 = !DILocation(line: 258, column: 18, scope: !4696)
!4698 = !DILocation(line: 259, column: 2, scope: !4696)
!4699 = !DILocation(line: 262, column: 1, scope: !4671)
!4700 = !DILocation(line: 261, column: 2, scope: !4671)
!4701 = distinct !DISubprogram(name: "str_out", scope: !416, file: !416, line: 223, type: !4702, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4705)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!107, !107, !4704}
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4680, size: 32)
!4705 = !{!4706, !4707}
!4706 = !DILocalVariable(name: "c", arg: 1, scope: !4701, file: !416, line: 223, type: !107)
!4707 = !DILocalVariable(name: "ctx", arg: 2, scope: !4701, file: !416, line: 223, type: !4704)
!4708 = !DILocation(line: 0, scope: !4701)
!4709 = !DILocation(line: 225, column: 11, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4701, file: !416, line: 225, column: 6)
!4711 = !DILocation(line: 225, column: 15, scope: !4710)
!4712 = !DILocation(line: 0, scope: !4710)
!4713 = !DILocation(line: 225, column: 23, scope: !4710)
!4714 = !DILocation(line: 225, column: 45, scope: !4710)
!4715 = !DILocation(line: 225, column: 37, scope: !4710)
!4716 = !DILocation(line: 225, column: 6, scope: !4701)
!4717 = !DILocation(line: 226, column: 8, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4710, file: !416, line: 225, column: 50)
!4719 = !DILocation(line: 226, column: 13, scope: !4718)
!4720 = !DILocation(line: 227, column: 3, scope: !4718)
!4721 = !DILocation(line: 230, column: 29, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4701, file: !416, line: 230, column: 6)
!4723 = !DILocation(line: 230, column: 17, scope: !4722)
!4724 = !DILocation(line: 230, column: 6, scope: !4701)
!4725 = !DILocation(line: 231, column: 22, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4722, file: !416, line: 230, column: 34)
!4727 = !DILocation(line: 231, column: 3, scope: !4726)
!4728 = !DILocation(line: 231, column: 26, scope: !4726)
!4729 = !DILocation(line: 232, column: 2, scope: !4726)
!4730 = !DILocation(line: 233, column: 28, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4722, file: !416, line: 232, column: 9)
!4732 = !DILocation(line: 233, column: 22, scope: !4731)
!4733 = !DILocation(line: 233, column: 3, scope: !4731)
!4734 = !DILocation(line: 233, column: 26, scope: !4731)
!4735 = !DILocation(line: 237, column: 1, scope: !4701)
!4736 = distinct !DISubprogram(name: "z_thread_entry", scope: !4737, file: !4737, line: 30, type: !4738, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !4740)
!4737 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4738 = !DISubroutineType(types: !4739)
!4739 = !{null, !324, !106, !106, !106}
!4740 = !{!4741, !4742, !4743, !4744}
!4741 = !DILocalVariable(name: "entry", arg: 1, scope: !4736, file: !4737, line: 30, type: !324)
!4742 = !DILocalVariable(name: "p1", arg: 2, scope: !4736, file: !4737, line: 31, type: !106)
!4743 = !DILocalVariable(name: "p2", arg: 3, scope: !4736, file: !4737, line: 31, type: !106)
!4744 = !DILocalVariable(name: "p3", arg: 4, scope: !4736, file: !4737, line: 31, type: !106)
!4745 = !DILocation(line: 0, scope: !4736)
!4746 = !DILocation(line: 36, column: 2, scope: !4736)
!4747 = !DILocation(line: 38, column: 17, scope: !4736)
!4748 = !DILocation(line: 38, column: 2, scope: !4736)
!4749 = !DILocation(line: 45, column: 2, scope: !4736)
!4750 = distinct !DISubprogram(name: "k_current_get", scope: !142, file: !142, line: 530, type: !4751, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !256)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{!4753}
!4753 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !4754)
!4754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4755, size: 32)
!4755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !4756)
!4756 = !{!4757, !4815, !4827, !4828, !4829, !4830, !4836, !4849}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4755, file: !168, line: 247, baseType: !4758, size: 384)
!4758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !4759)
!4759 = !{!4760, !4784, !4791, !4792, !4793, !4802, !4803, !4804}
!4760 = !DIDerivedType(tag: DW_TAG_member, scope: !4758, file: !168, line: 60, baseType: !4761, size: 64)
!4761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4758, file: !168, line: 60, size: 64, elements: !4762)
!4762 = !{!4763, !4778}
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4761, file: !168, line: 61, baseType: !4764, size: 64)
!4764 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !4765)
!4765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !4766)
!4766 = !{!4767, !4773}
!4767 = !DIDerivedType(tag: DW_TAG_member, scope: !4765, file: !151, line: 38, baseType: !4768, size: 32)
!4768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4765, file: !151, line: 38, size: 32, elements: !4769)
!4769 = !{!4770, !4772}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4768, file: !151, line: 39, baseType: !4771, size: 32)
!4771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4765, size: 32)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4768, file: !151, line: 40, baseType: !4771, size: 32)
!4773 = !DIDerivedType(tag: DW_TAG_member, scope: !4765, file: !151, line: 42, baseType: !4774, size: 32, offset: 32)
!4774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4765, file: !151, line: 42, size: 32, elements: !4775)
!4775 = !{!4776, !4777}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4774, file: !151, line: 43, baseType: !4771, size: 32)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4774, file: !151, line: 44, baseType: !4771, size: 32)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4761, file: !168, line: 62, baseType: !4779, size: 64)
!4779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !4780)
!4780 = !{!4781}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4779, file: !180, line: 50, baseType: !4782, size: 64)
!4782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4783, size: 64, elements: !185)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 32)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4758, file: !168, line: 68, baseType: !4785, size: 32, offset: 64)
!4785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4786, size: 32)
!4786 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !4787)
!4787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !4788)
!4788 = !{!4789}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4787, file: !146, line: 232, baseType: !4790, size: 64)
!4790 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !4765)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4758, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4758, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!4793 = !DIDerivedType(tag: DW_TAG_member, scope: !4758, file: !168, line: 90, baseType: !4794, size: 16, offset: 112)
!4794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4758, file: !168, line: 90, size: 16, elements: !4795)
!4795 = !{!4796, !4801}
!4796 = !DIDerivedType(tag: DW_TAG_member, scope: !4794, file: !168, line: 91, baseType: !4797, size: 16)
!4797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4794, file: !168, line: 91, size: 16, elements: !4798)
!4798 = !{!4799, !4800}
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4797, file: !168, line: 96, baseType: !200, size: 8)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4797, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4794, file: !168, line: 100, baseType: !126, size: 16)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4758, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4758, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4758, file: !168, line: 131, baseType: !4805, size: 192, offset: 192)
!4805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !4806)
!4806 = !{!4807, !4808, !4814}
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4805, file: !146, line: 245, baseType: !4764, size: 64)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4805, file: !146, line: 246, baseType: !4809, size: 32, offset: 64)
!4809 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !4810)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 32)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{null, !4813}
!4813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 32)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4805, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4755, file: !168, line: 250, baseType: !4816, size: 288, offset: 384)
!4816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !4817)
!4817 = !{!4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4816, file: !219, line: 26, baseType: !108, size: 32)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4816, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4816, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4816, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4816, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4816, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4816, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4816, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4816, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4755, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4755, file: !168, line: 256, baseType: !4786, size: 64, offset: 704)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4755, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4755, file: !168, line: 300, baseType: !4831, size: 96, offset: 800)
!4831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !4832)
!4832 = !{!4833, !4834, !4835}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4831, file: !168, line: 153, baseType: !22, size: 32)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4831, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4831, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4755, file: !168, line: 325, baseType: !4837, size: 32, offset: 896)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 32)
!4838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !4839)
!4839 = !{!4840, !4846, !4847}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4838, file: !142, line: 5074, baseType: !4841, size: 96)
!4841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !4842)
!4842 = !{!4843, !4844, !4845}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4841, file: !245, line: 57, baseType: !248, size: 32)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4841, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4841, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4838, file: !142, line: 5075, baseType: !4786, size: 64, offset: 96)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4838, file: !142, line: 5076, baseType: !4848, offset: 160)
!4848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4755, file: !168, line: 343, baseType: !4850, size: 64, offset: 928)
!4850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !4851)
!4851 = !{!4852, !4853}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4850, file: !219, line: 63, baseType: !108, size: 32)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4850, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!4854 = !DILocation(line: 535, column: 9, scope: !4750)
!4855 = !DILocation(line: 535, column: 2, scope: !4750)
!4856 = distinct !DISubprogram(name: "k_thread_abort", scope: !3668, file: !3668, line: 188, type: !4857, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !4859)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{null, !4753}
!4859 = !{!4860}
!4860 = !DILocalVariable(name: "thread", arg: 1, scope: !4856, file: !3668, line: 188, type: !4753)
!4861 = !DILocation(line: 0, scope: !4856)
!4862 = !DILocation(line: 197, column: 2, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4856, file: !3668, line: 197, column: 2)
!4864 = !{i64 2154739354}
!4865 = !DILocation(line: 198, column: 2, scope: !4856)
!4866 = !DILocation(line: 199, column: 1, scope: !4856)
!4867 = distinct !DISubprogram(name: "z_current_get", scope: !3668, file: !3668, line: 173, type: !4751, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !256)
!4868 = !DILocation(line: 180, column: 2, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4867, file: !3668, line: 180, column: 2)
!4870 = !{i64 2154739286}
!4871 = !DILocation(line: 181, column: 9, scope: !4867)
!4872 = !DILocation(line: 181, column: 2, scope: !4867)
!4873 = distinct !DISubprogram(name: "sys_heap_free", scope: !4874, file: !4874, line: 163, type: !4875, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4883)
!4874 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4875 = !DISubroutineType(types: !4876)
!4876 = !{null, !4877, !106}
!4877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4878, size: 32)
!4878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !4879)
!4879 = !{!4880, !4881, !4882}
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4878, file: !245, line: 57, baseType: !2636, size: 32)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4878, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4878, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!4883 = !{!4884, !4885, !4886, !4887}
!4884 = !DILocalVariable(name: "heap", arg: 1, scope: !4873, file: !4874, line: 163, type: !4877)
!4885 = !DILocalVariable(name: "mem", arg: 2, scope: !4873, file: !4874, line: 163, type: !106)
!4886 = !DILocalVariable(name: "h", scope: !4873, file: !4874, line: 168, type: !2636)
!4887 = !DILocalVariable(name: "c", scope: !4873, file: !4874, line: 169, type: !2641)
!4888 = !DILocation(line: 0, scope: !4873)
!4889 = !DILocation(line: 165, column: 10, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4873, file: !4874, line: 165, column: 6)
!4891 = !DILocation(line: 165, column: 6, scope: !4873)
!4892 = !DILocation(line: 168, column: 27, scope: !4873)
!4893 = !DILocation(line: 169, column: 16, scope: !4873)
!4894 = !{i32 0, i32 536870912}
!4895 = !DILocation(line: 187, column: 2, scope: !4873)
!4896 = !DILocation(line: 197, column: 2, scope: !4873)
!4897 = !DILocation(line: 198, column: 1, scope: !4873)
!4898 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4874, file: !4874, line: 157, type: !4899, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4901)
!4899 = !DISubroutineType(types: !4900)
!4900 = !{!2641, !2636, !106}
!4901 = !{!4902, !4903, !4904, !4905}
!4902 = !DILocalVariable(name: "h", arg: 1, scope: !4898, file: !4874, line: 157, type: !2636)
!4903 = !DILocalVariable(name: "p", arg: 2, scope: !4898, file: !4874, line: 157, type: !106)
!4904 = !DILocalVariable(name: "mem", scope: !4898, file: !4874, line: 159, type: !401)
!4905 = !DILocalVariable(name: "base", scope: !4898, file: !4874, line: 159, type: !401)
!4906 = !DILocation(line: 0, scope: !4898)
!4907 = !DILocation(line: 159, column: 39, scope: !4898)
!4908 = !DILocation(line: 160, column: 14, scope: !4898)
!4909 = !DILocation(line: 160, column: 38, scope: !4898)
!4910 = !DILocation(line: 160, column: 46, scope: !4898)
!4911 = !DILocation(line: 160, column: 2, scope: !4898)
!4912 = distinct !DISubprogram(name: "set_chunk_used", scope: !2623, file: !2623, line: 147, type: !4913, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4915)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{null, !2636, !2641, !136}
!4915 = !{!4916, !4917, !4918, !4919, !4920}
!4916 = !DILocalVariable(name: "h", arg: 1, scope: !4912, file: !2623, line: 147, type: !2636)
!4917 = !DILocalVariable(name: "c", arg: 2, scope: !4912, file: !2623, line: 147, type: !2641)
!4918 = !DILocalVariable(name: "used", arg: 3, scope: !4912, file: !2623, line: 147, type: !136)
!4919 = !DILocalVariable(name: "buf", scope: !4912, file: !2623, line: 149, type: !2630)
!4920 = !DILocalVariable(name: "cmem", scope: !4912, file: !2623, line: 150, type: !106)
!4921 = !DILocation(line: 0, scope: !4912)
!4922 = !DILocation(line: 149, column: 22, scope: !4912)
!4923 = !DILocation(line: 0, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !2623, line: 159, column: 7)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !2623, line: 158, column: 9)
!4926 = distinct !DILexicalBlock(scope: !4912, file: !2623, line: 152, column: 6)
!4927 = !DILocation(line: 159, column: 7, scope: !4925)
!4928 = !DILocation(line: 165, column: 1, scope: !4912)
!4929 = distinct !DISubprogram(name: "free_chunk", scope: !4874, file: !4874, line: 133, type: !4930, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4932)
!4930 = !DISubroutineType(types: !4931)
!4931 = !{null, !2636, !2641}
!4932 = !{!4933, !4934}
!4933 = !DILocalVariable(name: "h", arg: 1, scope: !4929, file: !4874, line: 133, type: !2636)
!4934 = !DILocalVariable(name: "c", arg: 2, scope: !4929, file: !4874, line: 133, type: !2641)
!4935 = !DILocation(line: 0, scope: !4929)
!4936 = !DILocation(line: 136, column: 21, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4929, file: !4874, line: 136, column: 6)
!4938 = !DILocation(line: 136, column: 7, scope: !4937)
!4939 = !DILocation(line: 136, column: 6, scope: !4929)
!4940 = !DILocation(line: 137, column: 3, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4937, file: !4874, line: 136, column: 41)
!4942 = !DILocation(line: 138, column: 22, scope: !4941)
!4943 = !DILocation(line: 138, column: 3, scope: !4941)
!4944 = !DILocation(line: 139, column: 2, scope: !4941)
!4945 = !DILocation(line: 142, column: 21, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4929, file: !4874, line: 142, column: 6)
!4947 = !{i32 -65535, i32 536903678}
!4948 = !DILocation(line: 142, column: 7, scope: !4946)
!4949 = !DILocation(line: 142, column: 6, scope: !4929)
!4950 = !DILocation(line: 143, column: 3, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4946, file: !4874, line: 142, column: 40)
!4952 = !DILocation(line: 144, column: 19, scope: !4951)
!4953 = !DILocation(line: 144, column: 3, scope: !4951)
!4954 = !DILocation(line: 145, column: 7, scope: !4951)
!4955 = !DILocation(line: 146, column: 2, scope: !4951)
!4956 = !DILocation(line: 148, column: 2, scope: !4929)
!4957 = !DILocation(line: 149, column: 1, scope: !4929)
!4958 = distinct !DISubprogram(name: "right_chunk", scope: !2623, file: !2623, line: 204, type: !4959, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4961)
!4959 = !DISubroutineType(types: !4960)
!4960 = !{!2641, !2636, !2641}
!4961 = !{!4962, !4963}
!4962 = !DILocalVariable(name: "h", arg: 1, scope: !4958, file: !2623, line: 204, type: !2636)
!4963 = !DILocalVariable(name: "c", arg: 2, scope: !4958, file: !2623, line: 204, type: !2641)
!4964 = !DILocation(line: 0, scope: !4958)
!4965 = !DILocation(line: 206, column: 13, scope: !4958)
!4966 = !DILocation(line: 206, column: 11, scope: !4958)
!4967 = !DILocation(line: 206, column: 2, scope: !4958)
!4968 = distinct !DISubprogram(name: "chunk_used", scope: !2623, file: !2623, line: 137, type: !4969, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4971)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!136, !2636, !2641}
!4971 = !{!4972, !4973}
!4972 = !DILocalVariable(name: "h", arg: 1, scope: !4968, file: !2623, line: 137, type: !2636)
!4973 = !DILocalVariable(name: "c", arg: 2, scope: !4968, file: !2623, line: 137, type: !2641)
!4974 = !DILocation(line: 0, scope: !4968)
!4975 = !DILocation(line: 139, column: 9, scope: !4968)
!4976 = !DILocation(line: 139, column: 42, scope: !4968)
!4977 = !DILocation(line: 139, column: 2, scope: !4968)
!4978 = distinct !DISubprogram(name: "free_list_remove", scope: !4874, file: !4874, line: 60, type: !4930, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4979)
!4979 = !{!4980, !4981, !4982}
!4980 = !DILocalVariable(name: "h", arg: 1, scope: !4978, file: !4874, line: 60, type: !2636)
!4981 = !DILocalVariable(name: "c", arg: 2, scope: !4978, file: !4874, line: 60, type: !2641)
!4982 = !DILocalVariable(name: "bidx", scope: !4983, file: !4874, line: 63, type: !107)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !4874, line: 62, column: 31)
!4984 = distinct !DILexicalBlock(scope: !4978, file: !4874, line: 62, column: 6)
!4985 = !DILocation(line: 0, scope: !4978)
!4986 = !DILocation(line: 63, column: 28, scope: !4983)
!4987 = !{i32 0, i32 32768}
!4988 = !DILocation(line: 63, column: 14, scope: !4983)
!4989 = !DILocation(line: 0, scope: !4983)
!4990 = !DILocation(line: 64, column: 3, scope: !4983)
!4991 = !DILocation(line: 66, column: 1, scope: !4978)
!4992 = distinct !DISubprogram(name: "merge_chunks", scope: !4874, file: !4874, line: 125, type: !4993, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !4995)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{null, !2636, !2641, !2641}
!4995 = !{!4996, !4997, !4998, !4999}
!4996 = !DILocalVariable(name: "h", arg: 1, scope: !4992, file: !4874, line: 125, type: !2636)
!4997 = !DILocalVariable(name: "lc", arg: 2, scope: !4992, file: !4874, line: 125, type: !2641)
!4998 = !DILocalVariable(name: "rc", arg: 3, scope: !4992, file: !4874, line: 125, type: !2641)
!4999 = !DILocalVariable(name: "newsz", scope: !4992, file: !4874, line: 127, type: !5000)
!5000 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2623, line: 62, baseType: !108)
!5001 = !DILocation(line: 0, scope: !4992)
!5002 = !DILocation(line: 127, column: 20, scope: !4992)
!5003 = !DILocation(line: 127, column: 40, scope: !4992)
!5004 = !DILocation(line: 127, column: 38, scope: !4992)
!5005 = !DILocation(line: 129, column: 2, scope: !4992)
!5006 = !DILocation(line: 130, column: 25, scope: !4992)
!5007 = !DILocation(line: 130, column: 2, scope: !4992)
!5008 = !DILocation(line: 131, column: 1, scope: !4992)
!5009 = distinct !DISubprogram(name: "left_chunk", scope: !2623, file: !2623, line: 199, type: !4959, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5010)
!5010 = !{!5011, !5012}
!5011 = !DILocalVariable(name: "h", arg: 1, scope: !5009, file: !2623, line: 199, type: !2636)
!5012 = !DILocalVariable(name: "c", arg: 2, scope: !5009, file: !2623, line: 199, type: !2641)
!5013 = !DILocation(line: 0, scope: !5009)
!5014 = !DILocation(line: 201, column: 13, scope: !5009)
!5015 = !DILocation(line: 201, column: 11, scope: !5009)
!5016 = !DILocation(line: 201, column: 2, scope: !5009)
!5017 = distinct !DISubprogram(name: "free_list_add", scope: !4874, file: !4874, line: 98, type: !4930, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5018)
!5018 = !{!5019, !5020, !5021}
!5019 = !DILocalVariable(name: "h", arg: 1, scope: !5017, file: !4874, line: 98, type: !2636)
!5020 = !DILocalVariable(name: "c", arg: 2, scope: !5017, file: !4874, line: 98, type: !2641)
!5021 = !DILocalVariable(name: "bidx", scope: !5022, file: !4874, line: 101, type: !107)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !4874, line: 100, column: 31)
!5023 = distinct !DILexicalBlock(scope: !5017, file: !4874, line: 100, column: 6)
!5024 = !DILocation(line: 0, scope: !5017)
!5025 = !DILocation(line: 101, column: 28, scope: !5022)
!5026 = !DILocation(line: 101, column: 14, scope: !5022)
!5027 = !DILocation(line: 0, scope: !5022)
!5028 = !DILocation(line: 102, column: 3, scope: !5022)
!5029 = !DILocation(line: 104, column: 1, scope: !5017)
!5030 = distinct !DISubprogram(name: "chunk_size", scope: !2623, file: !2623, line: 142, type: !5031, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5033)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!5000, !2636, !2641}
!5033 = !{!5034, !5035}
!5034 = !DILocalVariable(name: "h", arg: 1, scope: !5030, file: !2623, line: 142, type: !2636)
!5035 = !DILocalVariable(name: "c", arg: 2, scope: !5030, file: !2623, line: 142, type: !2641)
!5036 = !DILocation(line: 0, scope: !5030)
!5037 = !DILocation(line: 144, column: 9, scope: !5030)
!5038 = !DILocation(line: 144, column: 42, scope: !5030)
!5039 = !DILocation(line: 144, column: 2, scope: !5030)
!5040 = distinct !DISubprogram(name: "bucket_idx", scope: !2623, file: !2623, line: 250, type: !5041, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5043)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!107, !2636, !5000}
!5043 = !{!5044, !5045, !5046}
!5044 = !DILocalVariable(name: "h", arg: 1, scope: !5040, file: !2623, line: 250, type: !2636)
!5045 = !DILocalVariable(name: "sz", arg: 2, scope: !5040, file: !2623, line: 250, type: !5000)
!5046 = !DILocalVariable(name: "usable_sz", scope: !5040, file: !2623, line: 252, type: !32)
!5047 = !DILocation(line: 0, scope: !5040)
!5048 = !DILocation(line: 252, column: 32, scope: !5040)
!5049 = !DILocation(line: 252, column: 30, scope: !5040)
!5050 = !DILocation(line: 252, column: 50, scope: !5040)
!5051 = !DILocation(line: 253, column: 14, scope: !5040)
!5052 = !{i32 0, i32 33}
!5053 = !DILocation(line: 253, column: 12, scope: !5040)
!5054 = !DILocation(line: 253, column: 2, scope: !5040)
!5055 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4874, file: !4874, line: 68, type: !5056, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5058)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{null, !2636, !2641, !107}
!5058 = !{!5059, !5060, !5061, !5062, !5064, !5067}
!5059 = !DILocalVariable(name: "h", arg: 1, scope: !5055, file: !4874, line: 68, type: !2636)
!5060 = !DILocalVariable(name: "c", arg: 2, scope: !5055, file: !4874, line: 68, type: !2641)
!5061 = !DILocalVariable(name: "bidx", arg: 3, scope: !5055, file: !4874, line: 68, type: !107)
!5062 = !DILocalVariable(name: "b", scope: !5055, file: !4874, line: 70, type: !5063)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!5064 = !DILocalVariable(name: "second", scope: !5065, file: !4874, line: 84, type: !2641)
!5065 = distinct !DILexicalBlock(scope: !5066, file: !4874, line: 80, column: 9)
!5066 = distinct !DILexicalBlock(scope: !5055, file: !4874, line: 72, column: 6)
!5067 = !DILocalVariable(name: "first", scope: !5065, file: !4874, line: 85, type: !2641)
!5068 = !DILocation(line: 0, scope: !5055)
!5069 = !DILocation(line: 72, column: 9, scope: !5066)
!5070 = !DILocation(line: 72, column: 14, scope: !5066)
!5071 = !DILocation(line: 72, column: 6, scope: !5055)
!5072 = !DILocation(line: 76, column: 23, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5066, file: !4874, line: 72, column: 21)
!5074 = !DILocation(line: 76, column: 6, scope: !5073)
!5075 = !DILocation(line: 76, column: 20, scope: !5073)
!5076 = !DILocation(line: 77, column: 11, scope: !5073)
!5077 = !DILocation(line: 78, column: 3, scope: !5073)
!5078 = !DILocation(line: 79, column: 3, scope: !5073)
!5079 = !DILocation(line: 80, column: 2, scope: !5073)
!5080 = !DILocation(line: 0, scope: !5065)
!5081 = !DILocation(line: 85, column: 21, scope: !5065)
!5082 = !{i32 0, i32 65536}
!5083 = !DILocation(line: 87, column: 3, scope: !5065)
!5084 = !DILocation(line: 88, column: 3, scope: !5065)
!5085 = !DILocation(line: 89, column: 3, scope: !5065)
!5086 = !DILocation(line: 90, column: 3, scope: !5065)
!5087 = !DILocation(line: 96, column: 1, scope: !5055)
!5088 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2623, file: !2623, line: 187, type: !4993, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5089)
!5089 = !{!5090, !5091, !5092}
!5090 = !DILocalVariable(name: "h", arg: 1, scope: !5088, file: !2623, line: 187, type: !2636)
!5091 = !DILocalVariable(name: "c", arg: 2, scope: !5088, file: !2623, line: 187, type: !2641)
!5092 = !DILocalVariable(name: "prev", arg: 3, scope: !5088, file: !2623, line: 188, type: !2641)
!5093 = !DILocation(line: 0, scope: !5088)
!5094 = !DILocation(line: 190, column: 2, scope: !5088)
!5095 = !DILocation(line: 191, column: 1, scope: !5088)
!5096 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2623, file: !2623, line: 193, type: !4993, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5097)
!5097 = !{!5098, !5099, !5100}
!5098 = !DILocalVariable(name: "h", arg: 1, scope: !5096, file: !2623, line: 193, type: !2636)
!5099 = !DILocalVariable(name: "c", arg: 2, scope: !5096, file: !2623, line: 193, type: !2641)
!5100 = !DILocalVariable(name: "next", arg: 3, scope: !5096, file: !2623, line: 194, type: !2641)
!5101 = !DILocation(line: 0, scope: !5096)
!5102 = !DILocation(line: 196, column: 2, scope: !5096)
!5103 = !DILocation(line: 197, column: 1, scope: !5096)
!5104 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2623, file: !2623, line: 177, type: !4959, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5105)
!5105 = !{!5106, !5107}
!5106 = !DILocalVariable(name: "h", arg: 1, scope: !5104, file: !2623, line: 177, type: !2636)
!5107 = !DILocalVariable(name: "c", arg: 2, scope: !5104, file: !2623, line: 177, type: !2641)
!5108 = !DILocation(line: 0, scope: !5104)
!5109 = !DILocation(line: 179, column: 9, scope: !5104)
!5110 = !DILocation(line: 179, column: 2, scope: !5104)
!5111 = distinct !DISubprogram(name: "chunk_field", scope: !2623, file: !2623, line: 107, type: !5112, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5114)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!2641, !2636, !2641, !2622}
!5114 = !{!5115, !5116, !5117, !5118, !5119}
!5115 = !DILocalVariable(name: "h", arg: 1, scope: !5111, file: !2623, line: 107, type: !2636)
!5116 = !DILocalVariable(name: "c", arg: 2, scope: !5111, file: !2623, line: 107, type: !2641)
!5117 = !DILocalVariable(name: "f", arg: 3, scope: !5111, file: !2623, line: 108, type: !2622)
!5118 = !DILocalVariable(name: "buf", scope: !5111, file: !2623, line: 110, type: !2630)
!5119 = !DILocalVariable(name: "cmem", scope: !5111, file: !2623, line: 111, type: !106)
!5120 = !DILocation(line: 0, scope: !5111)
!5121 = !DILocation(line: 110, column: 22, scope: !5111)
!5122 = !DILocation(line: 111, column: 15, scope: !5111)
!5123 = !DILocation(line: 116, column: 11, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5125, file: !2623, line: 115, column: 9)
!5125 = distinct !DILexicalBlock(scope: !5111, file: !2623, line: 113, column: 6)
!5126 = !DILocation(line: 116, column: 10, scope: !5124)
!5127 = !DILocation(line: 118, column: 1, scope: !5111)
!5128 = distinct !DISubprogram(name: "chunk_buf", scope: !2623, file: !2623, line: 101, type: !5129, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5131)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!2630, !2636}
!5131 = !{!5132}
!5132 = !DILocalVariable(name: "h", arg: 1, scope: !5128, file: !2623, line: 101, type: !2636)
!5133 = !DILocation(line: 0, scope: !5128)
!5134 = !DILocation(line: 104, column: 9, scope: !5128)
!5135 = !DILocation(line: 104, column: 2, scope: !5128)
!5136 = distinct !DISubprogram(name: "chunk_set", scope: !2623, file: !2623, line: 120, type: !5137, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5139)
!5137 = !DISubroutineType(types: !5138)
!5138 = !{null, !2636, !2641, !2622, !2641}
!5139 = !{!5140, !5141, !5142, !5143, !5144, !5145}
!5140 = !DILocalVariable(name: "h", arg: 1, scope: !5136, file: !2623, line: 120, type: !2636)
!5141 = !DILocalVariable(name: "c", arg: 2, scope: !5136, file: !2623, line: 120, type: !2641)
!5142 = !DILocalVariable(name: "f", arg: 3, scope: !5136, file: !2623, line: 121, type: !2622)
!5143 = !DILocalVariable(name: "val", arg: 4, scope: !5136, file: !2623, line: 121, type: !2641)
!5144 = !DILocalVariable(name: "buf", scope: !5136, file: !2623, line: 125, type: !2630)
!5145 = !DILocalVariable(name: "cmem", scope: !5136, file: !2623, line: 126, type: !106)
!5146 = !DILocation(line: 0, scope: !5136)
!5147 = !DILocation(line: 125, column: 22, scope: !5136)
!5148 = !DILocation(line: 126, column: 15, scope: !5136)
!5149 = !DILocation(line: 133, column: 27, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5151, file: !2623, line: 131, column: 9)
!5151 = distinct !DILexicalBlock(scope: !5136, file: !2623, line: 128, column: 6)
!5152 = !DILocation(line: 133, column: 4, scope: !5150)
!5153 = !DILocation(line: 133, column: 3, scope: !5150)
!5154 = !DILocation(line: 133, column: 25, scope: !5150)
!5155 = !DILocation(line: 135, column: 1, scope: !5136)
!5156 = distinct !DISubprogram(name: "min_chunk_size", scope: !2623, file: !2623, line: 240, type: !5157, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5159)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!5000, !2636}
!5159 = !{!5160}
!5160 = !DILocalVariable(name: "h", arg: 1, scope: !5156, file: !2623, line: 240, type: !2636)
!5161 = !DILocation(line: 0, scope: !5156)
!5162 = !DILocation(line: 242, column: 9, scope: !5156)
!5163 = !DILocation(line: 242, column: 2, scope: !5156)
!5164 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2623, file: !2623, line: 235, type: !5165, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5167)
!5165 = !DISubroutineType(types: !5166)
!5166 = !{!5000, !2636, !137}
!5167 = !{!5168, !5169}
!5168 = !DILocalVariable(name: "h", arg: 1, scope: !5164, file: !2623, line: 235, type: !2636)
!5169 = !DILocalVariable(name: "bytes", arg: 2, scope: !5164, file: !2623, line: 235, type: !137)
!5170 = !DILocation(line: 0, scope: !5164)
!5171 = !DILocation(line: 237, column: 39, scope: !5164)
!5172 = !DILocation(line: 237, column: 9, scope: !5164)
!5173 = !DILocation(line: 237, column: 2, scope: !5164)
!5174 = distinct !DISubprogram(name: "chunksz", scope: !2623, file: !2623, line: 230, type: !5175, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5177)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{!5000, !137}
!5177 = !{!5178}
!5178 = !DILocalVariable(name: "bytes", arg: 1, scope: !5174, file: !2623, line: 230, type: !137)
!5179 = !DILocation(line: 0, scope: !5174)
!5180 = !DILocation(line: 232, column: 29, scope: !5174)
!5181 = !DILocation(line: 232, column: 35, scope: !5174)
!5182 = !DILocation(line: 232, column: 2, scope: !5174)
!5183 = distinct !DISubprogram(name: "set_chunk_size", scope: !2623, file: !2623, line: 172, type: !5184, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5186)
!5184 = !DISubroutineType(types: !5185)
!5185 = !{null, !2636, !2641, !5000}
!5186 = !{!5187, !5188, !5189}
!5187 = !DILocalVariable(name: "h", arg: 1, scope: !5183, file: !2623, line: 172, type: !2636)
!5188 = !DILocalVariable(name: "c", arg: 2, scope: !5183, file: !2623, line: 172, type: !2641)
!5189 = !DILocalVariable(name: "size", arg: 3, scope: !5183, file: !2623, line: 172, type: !5000)
!5190 = !DILocation(line: 0, scope: !5183)
!5191 = !DILocation(line: 174, column: 38, scope: !5183)
!5192 = !DILocation(line: 174, column: 2, scope: !5183)
!5193 = !DILocation(line: 175, column: 1, scope: !5183)
!5194 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2623, file: !2623, line: 209, type: !5184, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5195)
!5195 = !{!5196, !5197, !5198}
!5196 = !DILocalVariable(name: "h", arg: 1, scope: !5194, file: !2623, line: 209, type: !2636)
!5197 = !DILocalVariable(name: "c", arg: 2, scope: !5194, file: !2623, line: 209, type: !2641)
!5198 = !DILocalVariable(name: "size", arg: 3, scope: !5194, file: !2623, line: 210, type: !5000)
!5199 = !DILocation(line: 0, scope: !5194)
!5200 = !DILocation(line: 212, column: 2, scope: !5194)
!5201 = !DILocation(line: 213, column: 1, scope: !5194)
!5202 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4874, file: !4874, line: 34, type: !5056, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5203)
!5203 = !{!5204, !5205, !5206, !5207, !5208, !5211}
!5204 = !DILocalVariable(name: "h", arg: 1, scope: !5202, file: !4874, line: 34, type: !2636)
!5205 = !DILocalVariable(name: "c", arg: 2, scope: !5202, file: !4874, line: 34, type: !2641)
!5206 = !DILocalVariable(name: "bidx", arg: 3, scope: !5202, file: !4874, line: 34, type: !107)
!5207 = !DILocalVariable(name: "b", scope: !5202, file: !4874, line: 36, type: !5063)
!5208 = !DILocalVariable(name: "first", scope: !5209, file: !4874, line: 47, type: !2641)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !4874, line: 46, column: 9)
!5210 = distinct !DILexicalBlock(scope: !5202, file: !4874, line: 42, column: 6)
!5211 = !DILocalVariable(name: "second", scope: !5209, file: !4874, line: 48, type: !2641)
!5212 = !DILocation(line: 0, scope: !5202)
!5213 = !DILocation(line: 36, column: 29, scope: !5202)
!5214 = !DILocation(line: 42, column: 6, scope: !5210)
!5215 = !DILocation(line: 42, column: 28, scope: !5210)
!5216 = !DILocation(line: 42, column: 6, scope: !5202)
!5217 = !DILocation(line: 44, column: 24, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5210, file: !4874, line: 42, column: 34)
!5219 = !DILocation(line: 44, column: 23, scope: !5218)
!5220 = !DILocation(line: 44, column: 6, scope: !5218)
!5221 = !DILocation(line: 44, column: 20, scope: !5218)
!5222 = !DILocation(line: 45, column: 6, scope: !5218)
!5223 = !DILocation(line: 45, column: 11, scope: !5218)
!5224 = !DILocation(line: 46, column: 2, scope: !5218)
!5225 = !DILocation(line: 47, column: 21, scope: !5209)
!5226 = !DILocation(line: 0, scope: !5209)
!5227 = !DILocation(line: 50, column: 6, scope: !5209)
!5228 = !DILocation(line: 50, column: 11, scope: !5209)
!5229 = !DILocation(line: 51, column: 3, scope: !5209)
!5230 = !DILocation(line: 52, column: 3, scope: !5209)
!5231 = !DILocation(line: 58, column: 1, scope: !5202)
!5232 = distinct !DISubprogram(name: "next_free_chunk", scope: !2623, file: !2623, line: 182, type: !4959, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5233)
!5233 = !{!5234, !5235}
!5234 = !DILocalVariable(name: "h", arg: 1, scope: !5232, file: !2623, line: 182, type: !2636)
!5235 = !DILocalVariable(name: "c", arg: 2, scope: !5232, file: !2623, line: 182, type: !2641)
!5236 = !DILocation(line: 0, scope: !5232)
!5237 = !DILocation(line: 184, column: 9, scope: !5232)
!5238 = !DILocation(line: 184, column: 2, scope: !5232)
!5239 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4874, file: !4874, line: 200, type: !5240, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5242)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!137, !4877, !106}
!5242 = !{!5243, !5244, !5245, !5246, !5247, !5248, !5249}
!5243 = !DILocalVariable(name: "heap", arg: 1, scope: !5239, file: !4874, line: 200, type: !4877)
!5244 = !DILocalVariable(name: "mem", arg: 2, scope: !5239, file: !4874, line: 200, type: !106)
!5245 = !DILocalVariable(name: "h", scope: !5239, file: !4874, line: 202, type: !2636)
!5246 = !DILocalVariable(name: "c", scope: !5239, file: !4874, line: 203, type: !2641)
!5247 = !DILocalVariable(name: "addr", scope: !5239, file: !4874, line: 204, type: !137)
!5248 = !DILocalVariable(name: "chunk_base", scope: !5239, file: !4874, line: 205, type: !137)
!5249 = !DILocalVariable(name: "chunk_sz", scope: !5239, file: !4874, line: 206, type: !137)
!5250 = !DILocation(line: 0, scope: !5239)
!5251 = !DILocation(line: 202, column: 27, scope: !5239)
!5252 = !DILocation(line: 203, column: 16, scope: !5239)
!5253 = !DILocation(line: 204, column: 16, scope: !5239)
!5254 = !DILocation(line: 205, column: 31, scope: !5239)
!5255 = !DILocation(line: 205, column: 22, scope: !5239)
!5256 = !DILocation(line: 206, column: 20, scope: !5239)
!5257 = !DILocation(line: 206, column: 37, scope: !5239)
!5258 = !DILocation(line: 208, column: 26, scope: !5239)
!5259 = !DILocation(line: 208, column: 18, scope: !5239)
!5260 = !DILocation(line: 208, column: 2, scope: !5239)
!5261 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4874, file: !4874, line: 263, type: !5262, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5264)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!106, !4877, !137}
!5264 = !{!5265, !5266, !5267, !5268, !5269, !5270}
!5265 = !DILocalVariable(name: "heap", arg: 1, scope: !5261, file: !4874, line: 263, type: !4877)
!5266 = !DILocalVariable(name: "bytes", arg: 2, scope: !5261, file: !4874, line: 263, type: !137)
!5267 = !DILocalVariable(name: "h", scope: !5261, file: !4874, line: 265, type: !2636)
!5268 = !DILocalVariable(name: "mem", scope: !5261, file: !4874, line: 266, type: !106)
!5269 = !DILocalVariable(name: "chunk_sz", scope: !5261, file: !4874, line: 272, type: !5000)
!5270 = !DILocalVariable(name: "c", scope: !5261, file: !4874, line: 273, type: !2641)
!5271 = !DILocation(line: 0, scope: !5261)
!5272 = !DILocation(line: 265, column: 27, scope: !5261)
!5273 = !DILocation(line: 268, column: 12, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5261, file: !4874, line: 268, column: 6)
!5275 = !DILocation(line: 268, column: 18, scope: !5274)
!5276 = !DILocation(line: 268, column: 21, scope: !5274)
!5277 = !DILocation(line: 268, column: 6, scope: !5261)
!5278 = !DILocation(line: 272, column: 23, scope: !5261)
!5279 = !DILocation(line: 273, column: 16, scope: !5261)
!5280 = !DILocation(line: 274, column: 8, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5261, file: !4874, line: 274, column: 6)
!5282 = !DILocation(line: 274, column: 6, scope: !5261)
!5283 = !DILocation(line: 279, column: 6, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5261, file: !4874, line: 279, column: 6)
!5285 = !DILocation(line: 279, column: 23, scope: !5284)
!5286 = !DILocation(line: 279, column: 6, scope: !5261)
!5287 = !DILocation(line: 280, column: 24, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5284, file: !4874, line: 279, column: 35)
!5289 = !DILocation(line: 280, column: 3, scope: !5288)
!5290 = !DILocation(line: 281, column: 3, scope: !5288)
!5291 = !DILocation(line: 282, column: 2, scope: !5288)
!5292 = !DILocation(line: 284, column: 2, scope: !5261)
!5293 = !DILocation(line: 286, column: 8, scope: !5261)
!5294 = !DILocation(line: 298, column: 2, scope: !5261)
!5295 = !DILocation(line: 299, column: 1, scope: !5261)
!5296 = distinct !DISubprogram(name: "size_too_big", scope: !2623, file: !2623, line: 256, type: !5297, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5299)
!5297 = !DISubroutineType(types: !5298)
!5298 = !{!136, !2636, !137}
!5299 = !{!5300, !5301}
!5300 = !DILocalVariable(name: "h", arg: 1, scope: !5296, file: !2623, line: 256, type: !2636)
!5301 = !DILocalVariable(name: "bytes", arg: 2, scope: !5296, file: !2623, line: 256, type: !137)
!5302 = !DILocation(line: 0, scope: !5296)
!5303 = !DILocation(line: 262, column: 16, scope: !5296)
!5304 = !DILocation(line: 262, column: 36, scope: !5296)
!5305 = !DILocation(line: 262, column: 30, scope: !5296)
!5306 = !DILocation(line: 262, column: 2, scope: !5296)
!5307 = distinct !DISubprogram(name: "alloc_chunk", scope: !4874, file: !4874, line: 211, type: !5308, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5310)
!5308 = !DISubroutineType(types: !5309)
!5309 = !{!2641, !2636, !5000}
!5310 = !{!5311, !5312, !5313, !5314, !5315, !5318, !5319, !5321, !5322, !5325}
!5311 = !DILocalVariable(name: "h", arg: 1, scope: !5307, file: !4874, line: 211, type: !2636)
!5312 = !DILocalVariable(name: "sz", arg: 2, scope: !5307, file: !4874, line: 211, type: !5000)
!5313 = !DILocalVariable(name: "bi", scope: !5307, file: !4874, line: 213, type: !107)
!5314 = !DILocalVariable(name: "b", scope: !5307, file: !4874, line: 214, type: !5063)
!5315 = !DILocalVariable(name: "first", scope: !5316, file: !4874, line: 233, type: !2641)
!5316 = distinct !DILexicalBlock(scope: !5317, file: !4874, line: 232, column: 15)
!5317 = distinct !DILexicalBlock(scope: !5307, file: !4874, line: 232, column: 6)
!5318 = !DILocalVariable(name: "i", scope: !5316, file: !4874, line: 234, type: !107)
!5319 = !DILocalVariable(name: "c", scope: !5320, file: !4874, line: 236, type: !2641)
!5320 = distinct !DILexicalBlock(scope: !5316, file: !4874, line: 235, column: 6)
!5321 = !DILocalVariable(name: "bmask", scope: !5307, file: !4874, line: 249, type: !108)
!5322 = !DILocalVariable(name: "minbucket", scope: !5323, file: !4874, line: 252, type: !107)
!5323 = distinct !DILexicalBlock(scope: !5324, file: !4874, line: 251, column: 19)
!5324 = distinct !DILexicalBlock(scope: !5307, file: !4874, line: 251, column: 6)
!5325 = !DILocalVariable(name: "c", scope: !5323, file: !4874, line: 253, type: !2641)
!5326 = !DILocation(line: 0, scope: !5307)
!5327 = !DILocation(line: 213, column: 11, scope: !5307)
!5328 = !DILocation(line: 232, column: 9, scope: !5317)
!5329 = !DILocation(line: 232, column: 6, scope: !5317)
!5330 = !DILocation(line: 232, column: 6, scope: !5307)
!5331 = !DILocation(line: 236, column: 21, scope: !5320)
!5332 = !DILocation(line: 0, scope: !5316)
!5333 = !DILocation(line: 0, scope: !5320)
!5334 = !DILocation(line: 237, column: 8, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5320, file: !4874, line: 237, column: 8)
!5336 = !DILocation(line: 237, column: 25, scope: !5335)
!5337 = !DILocation(line: 237, column: 8, scope: !5320)
!5338 = !DILocation(line: 238, column: 5, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5335, file: !4874, line: 237, column: 32)
!5340 = !DILocation(line: 241, column: 14, scope: !5320)
!5341 = !DILocation(line: 241, column: 12, scope: !5320)
!5342 = !DILocation(line: 243, column: 12, scope: !5316)
!5343 = !DILocation(line: 243, column: 16, scope: !5316)
!5344 = distinct !{!5344, !5345, !5346}
!5345 = !DILocation(line: 235, column: 3, scope: !5316)
!5346 = !DILocation(line: 243, column: 35, scope: !5316)
!5347 = !DILocation(line: 249, column: 22, scope: !5307)
!5348 = !DILocation(line: 249, column: 39, scope: !5307)
!5349 = !DILocation(line: 249, column: 36, scope: !5307)
!5350 = !DILocation(line: 251, column: 12, scope: !5324)
!5351 = !DILocation(line: 251, column: 6, scope: !5307)
!5352 = !DILocation(line: 252, column: 19, scope: !5323)
!5353 = !DILocation(line: 0, scope: !5323)
!5354 = !DILocation(line: 253, column: 39, scope: !5323)
!5355 = !DILocation(line: 255, column: 3, scope: !5323)
!5356 = !DILocation(line: 261, column: 1, scope: !5307)
!5357 = distinct !DISubprogram(name: "split_chunks", scope: !4874, file: !4874, line: 109, type: !4993, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5358)
!5358 = !{!5359, !5360, !5361, !5362, !5363, !5364}
!5359 = !DILocalVariable(name: "h", arg: 1, scope: !5357, file: !4874, line: 109, type: !2636)
!5360 = !DILocalVariable(name: "lc", arg: 2, scope: !5357, file: !4874, line: 109, type: !2641)
!5361 = !DILocalVariable(name: "rc", arg: 3, scope: !5357, file: !4874, line: 109, type: !2641)
!5362 = !DILocalVariable(name: "sz0", scope: !5357, file: !4874, line: 114, type: !5000)
!5363 = !DILocalVariable(name: "lsz", scope: !5357, file: !4874, line: 115, type: !5000)
!5364 = !DILocalVariable(name: "rsz", scope: !5357, file: !4874, line: 116, type: !5000)
!5365 = !DILocation(line: 0, scope: !5357)
!5366 = !DILocation(line: 114, column: 18, scope: !5357)
!5367 = !DILocation(line: 115, column: 21, scope: !5357)
!5368 = !DILocation(line: 116, column: 22, scope: !5357)
!5369 = !DILocation(line: 118, column: 2, scope: !5357)
!5370 = !DILocation(line: 119, column: 2, scope: !5357)
!5371 = !DILocation(line: 120, column: 2, scope: !5357)
!5372 = !DILocation(line: 121, column: 25, scope: !5357)
!5373 = !DILocation(line: 121, column: 2, scope: !5357)
!5374 = !DILocation(line: 122, column: 1, scope: !5357)
!5375 = distinct !DISubprogram(name: "chunk_mem", scope: !4874, file: !4874, line: 24, type: !5376, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5378)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{!106, !2636, !2641}
!5378 = !{!5379, !5380, !5381, !5382}
!5379 = !DILocalVariable(name: "h", arg: 1, scope: !5375, file: !4874, line: 24, type: !2636)
!5380 = !DILocalVariable(name: "c", arg: 2, scope: !5375, file: !4874, line: 24, type: !2641)
!5381 = !DILocalVariable(name: "buf", scope: !5375, file: !4874, line: 26, type: !2630)
!5382 = !DILocalVariable(name: "ret", scope: !5375, file: !4874, line: 27, type: !401)
!5383 = !DILocation(line: 0, scope: !5375)
!5384 = !DILocation(line: 26, column: 22, scope: !5375)
!5385 = !DILocation(line: 27, column: 38, scope: !5375)
!5386 = !DILocation(line: 31, column: 2, scope: !5375)
!5387 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4874, file: !4874, line: 301, type: !5388, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5390)
!5388 = !DISubroutineType(types: !5389)
!5389 = !{!106, !4877, !137, !137}
!5390 = !{!5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402}
!5391 = !DILocalVariable(name: "heap", arg: 1, scope: !5387, file: !4874, line: 301, type: !4877)
!5392 = !DILocalVariable(name: "align", arg: 2, scope: !5387, file: !4874, line: 301, type: !137)
!5393 = !DILocalVariable(name: "bytes", arg: 3, scope: !5387, file: !4874, line: 301, type: !137)
!5394 = !DILocalVariable(name: "h", scope: !5387, file: !4874, line: 303, type: !2636)
!5395 = !DILocalVariable(name: "gap", scope: !5387, file: !4874, line: 304, type: !137)
!5396 = !DILocalVariable(name: "rew", scope: !5387, file: !4874, line: 304, type: !137)
!5397 = !DILocalVariable(name: "padded_sz", scope: !5387, file: !4874, line: 335, type: !5000)
!5398 = !DILocalVariable(name: "c0", scope: !5387, file: !4874, line: 336, type: !2641)
!5399 = !DILocalVariable(name: "mem", scope: !5387, file: !4874, line: 341, type: !401)
!5400 = !DILocalVariable(name: "end", scope: !5387, file: !4874, line: 345, type: !2630)
!5401 = !DILocalVariable(name: "c", scope: !5387, file: !4874, line: 348, type: !2641)
!5402 = !DILocalVariable(name: "c_end", scope: !5387, file: !4874, line: 349, type: !2641)
!5403 = !DILocation(line: 0, scope: !5387)
!5404 = !DILocation(line: 303, column: 27, scope: !5387)
!5405 = !DILocation(line: 313, column: 16, scope: !5387)
!5406 = !DILocation(line: 313, column: 14, scope: !5387)
!5407 = !DILocation(line: 314, column: 12, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5387, file: !4874, line: 314, column: 6)
!5409 = !DILocation(line: 314, column: 6, scope: !5387)
!5410 = !DILocation(line: 315, column: 9, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5408, file: !4874, line: 314, column: 20)
!5412 = !DILocation(line: 316, column: 9, scope: !5411)
!5413 = !DILocation(line: 318, column: 13, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !4874, line: 318, column: 7)
!5415 = distinct !DILexicalBlock(scope: !5408, file: !4874, line: 317, column: 9)
!5416 = !DILocation(line: 318, column: 7, scope: !5415)
!5417 = !DILocation(line: 319, column: 11, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5414, file: !4874, line: 318, column: 39)
!5419 = !DILocation(line: 319, column: 4, scope: !5418)
!5420 = !DILocation(line: 0, scope: !5408)
!5421 = !DILocation(line: 326, column: 12, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5387, file: !4874, line: 326, column: 6)
!5423 = !DILocation(line: 326, column: 17, scope: !5422)
!5424 = !DILocation(line: 326, column: 20, scope: !5422)
!5425 = !DILocation(line: 326, column: 6, scope: !5387)
!5426 = !DILocation(line: 335, column: 50, scope: !5387)
!5427 = !DILocation(line: 335, column: 58, scope: !5387)
!5428 = !DILocation(line: 335, column: 24, scope: !5387)
!5429 = !DILocation(line: 336, column: 17, scope: !5387)
!5430 = !DILocation(line: 338, column: 9, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5387, file: !4874, line: 338, column: 6)
!5432 = !DILocation(line: 338, column: 6, scope: !5387)
!5433 = !DILocation(line: 341, column: 17, scope: !5387)
!5434 = !DILocation(line: 344, column: 20, scope: !5387)
!5435 = !DILocation(line: 344, column: 8, scope: !5387)
!5436 = !DILocation(line: 344, column: 47, scope: !5387)
!5437 = !DILocation(line: 345, column: 39, scope: !5387)
!5438 = !DILocation(line: 348, column: 16, scope: !5387)
!5439 = !DILocation(line: 349, column: 26, scope: !5387)
!5440 = !DILocation(line: 349, column: 24, scope: !5387)
!5441 = !DILocation(line: 353, column: 8, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5387, file: !4874, line: 353, column: 6)
!5443 = !DILocation(line: 353, column: 6, scope: !5387)
!5444 = !DILocation(line: 354, column: 3, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5442, file: !4874, line: 353, column: 14)
!5446 = !DILocation(line: 355, column: 3, scope: !5445)
!5447 = !DILocation(line: 356, column: 2, scope: !5445)
!5448 = !DILocation(line: 359, column: 6, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5387, file: !4874, line: 359, column: 6)
!5450 = !DILocation(line: 359, column: 24, scope: !5449)
!5451 = !DILocation(line: 359, column: 6, scope: !5387)
!5452 = !DILocation(line: 360, column: 3, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5449, file: !4874, line: 359, column: 33)
!5454 = !DILocation(line: 361, column: 3, scope: !5453)
!5455 = !DILocation(line: 362, column: 2, scope: !5453)
!5456 = !DILocation(line: 364, column: 2, scope: !5387)
!5457 = !DILocation(line: 377, column: 1, scope: !5387)
!5458 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4874, file: !4874, line: 379, type: !5459, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5461)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!106, !4877, !106, !137, !137}
!5461 = !{!5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5477, !5478}
!5462 = !DILocalVariable(name: "heap", arg: 1, scope: !5458, file: !4874, line: 379, type: !4877)
!5463 = !DILocalVariable(name: "ptr", arg: 2, scope: !5458, file: !4874, line: 379, type: !106)
!5464 = !DILocalVariable(name: "align", arg: 3, scope: !5458, file: !4874, line: 380, type: !137)
!5465 = !DILocalVariable(name: "bytes", arg: 4, scope: !5458, file: !4874, line: 380, type: !137)
!5466 = !DILocalVariable(name: "h", scope: !5458, file: !4874, line: 382, type: !2636)
!5467 = !DILocalVariable(name: "c", scope: !5458, file: !4874, line: 399, type: !2641)
!5468 = !DILocalVariable(name: "rc", scope: !5458, file: !4874, line: 400, type: !2641)
!5469 = !DILocalVariable(name: "align_gap", scope: !5458, file: !4874, line: 401, type: !137)
!5470 = !DILocalVariable(name: "chunks_need", scope: !5458, file: !4874, line: 402, type: !5000)
!5471 = !DILocalVariable(name: "split_size", scope: !5472, file: !4874, line: 435, type: !5000)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !4874, line: 433, column: 61)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !4874, line: 432, column: 13)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !4874, line: 409, column: 13)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !4874, line: 406, column: 13)
!5476 = distinct !DILexicalBlock(scope: !5458, file: !4874, line: 404, column: 6)
!5477 = !DILocalVariable(name: "ptr2", scope: !5458, file: !4874, line: 474, type: !106)
!5478 = !DILocalVariable(name: "prev_size", scope: !5479, file: !4874, line: 477, type: !137)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !4874, line: 476, column: 20)
!5480 = distinct !DILexicalBlock(scope: !5458, file: !4874, line: 476, column: 6)
!5481 = !DILocation(line: 0, scope: !5458)
!5482 = !DILocation(line: 382, column: 27, scope: !5458)
!5483 = !DILocation(line: 385, column: 10, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5458, file: !4874, line: 385, column: 6)
!5485 = !DILocation(line: 385, column: 6, scope: !5458)
!5486 = !DILocation(line: 386, column: 10, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5484, file: !4874, line: 385, column: 19)
!5488 = !DILocation(line: 386, column: 3, scope: !5487)
!5489 = !DILocation(line: 388, column: 12, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5458, file: !4874, line: 388, column: 6)
!5491 = !DILocation(line: 388, column: 6, scope: !5458)
!5492 = !DILocation(line: 389, column: 3, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5490, file: !4874, line: 388, column: 18)
!5494 = !DILocation(line: 390, column: 3, scope: !5493)
!5495 = !DILocation(line: 395, column: 6, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5458, file: !4874, line: 395, column: 6)
!5497 = !DILocation(line: 395, column: 6, scope: !5458)
!5498 = !DILocation(line: 399, column: 16, scope: !5458)
!5499 = !DILocation(line: 400, column: 17, scope: !5458)
!5500 = !DILocation(line: 401, column: 49, scope: !5458)
!5501 = !DILocation(line: 401, column: 36, scope: !5458)
!5502 = !DILocation(line: 402, column: 52, scope: !5458)
!5503 = !DILocation(line: 402, column: 26, scope: !5458)
!5504 = !DILocation(line: 404, column: 6, scope: !5476)
!5505 = !DILocation(line: 404, column: 12, scope: !5476)
!5506 = !DILocation(line: 404, column: 40, scope: !5476)
!5507 = !DILocation(line: 404, column: 31, scope: !5476)
!5508 = !DILocation(line: 404, column: 6, scope: !5458)
!5509 = !DILocation(line: 406, column: 13, scope: !5475)
!5510 = !DILocation(line: 406, column: 30, scope: !5475)
!5511 = !DILocation(line: 406, column: 13, scope: !5476)
!5512 = !DILocation(line: 409, column: 30, scope: !5474)
!5513 = !DILocation(line: 409, column: 13, scope: !5475)
!5514 = !DILocation(line: 420, column: 24, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5474, file: !4874, line: 409, column: 45)
!5516 = !DILocation(line: 420, column: 3, scope: !5515)
!5517 = !DILocation(line: 421, column: 3, scope: !5515)
!5518 = !DILocation(line: 422, column: 3, scope: !5515)
!5519 = !DILocation(line: 431, column: 3, scope: !5515)
!5520 = !DILocation(line: 432, column: 14, scope: !5473)
!5521 = !DILocation(line: 432, column: 32, scope: !5473)
!5522 = !DILocation(line: 433, column: 26, scope: !5473)
!5523 = !DILocation(line: 433, column: 24, scope: !5473)
!5524 = !DILocation(line: 433, column: 44, scope: !5473)
!5525 = !DILocation(line: 432, column: 13, scope: !5474)
!5526 = !DILocation(line: 435, column: 38, scope: !5472)
!5527 = !DILocation(line: 0, scope: !5472)
!5528 = !DILocation(line: 445, column: 3, scope: !5472)
!5529 = !DILocation(line: 447, column: 20, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5472, file: !4874, line: 447, column: 7)
!5531 = !DILocation(line: 447, column: 18, scope: !5530)
!5532 = !DILocation(line: 447, column: 7, scope: !5472)
!5533 = !DILocation(line: 448, column: 27, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5530, file: !4874, line: 447, column: 39)
!5535 = !DILocation(line: 448, column: 4, scope: !5534)
!5536 = !DILocation(line: 449, column: 4, scope: !5534)
!5537 = !DILocation(line: 450, column: 3, scope: !5534)
!5538 = !DILocation(line: 452, column: 3, scope: !5472)
!5539 = !DILocation(line: 453, column: 3, scope: !5472)
!5540 = !DILocation(line: 474, column: 15, scope: !5458)
!5541 = !DILocation(line: 476, column: 11, scope: !5480)
!5542 = !DILocation(line: 476, column: 6, scope: !5458)
!5543 = !DILocation(line: 477, column: 42, scope: !5479)
!5544 = !DILocation(line: 477, column: 22, scope: !5479)
!5545 = !DILocation(line: 477, column: 60, scope: !5479)
!5546 = !DILocation(line: 0, scope: !5479)
!5547 = !DILocation(line: 479, column: 21, scope: !5479)
!5548 = !DILocation(line: 479, column: 3, scope: !5479)
!5549 = !DILocation(line: 480, column: 3, scope: !5479)
!5550 = !DILocation(line: 481, column: 2, scope: !5479)
!5551 = !DILocation(line: 483, column: 1, scope: !5458)
!5552 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2623, file: !2623, line: 245, type: !5553, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5555)
!5553 = !DISubroutineType(types: !5554)
!5554 = !{!137, !2636, !5000}
!5555 = !{!5556, !5557}
!5556 = !DILocalVariable(name: "h", arg: 1, scope: !5552, file: !2623, line: 245, type: !2636)
!5557 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5552, file: !2623, line: 245, type: !5000)
!5558 = !DILocation(line: 0, scope: !5552)
!5559 = !DILocation(line: 247, column: 20, scope: !5552)
!5560 = !DILocation(line: 247, column: 33, scope: !5552)
!5561 = !DILocation(line: 247, column: 2, scope: !5552)
!5562 = distinct !DISubprogram(name: "sys_heap_init", scope: !4874, file: !4874, line: 485, type: !5563, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{null, !4877, !106, !137}
!5565 = !{!5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575}
!5566 = !DILocalVariable(name: "heap", arg: 1, scope: !5562, file: !4874, line: 485, type: !4877)
!5567 = !DILocalVariable(name: "mem", arg: 2, scope: !5562, file: !4874, line: 485, type: !106)
!5568 = !DILocalVariable(name: "bytes", arg: 3, scope: !5562, file: !4874, line: 485, type: !137)
!5569 = !DILocalVariable(name: "addr", scope: !5562, file: !4874, line: 502, type: !22)
!5570 = !DILocalVariable(name: "end", scope: !5562, file: !4874, line: 503, type: !22)
!5571 = !DILocalVariable(name: "heap_sz", scope: !5562, file: !4874, line: 504, type: !5000)
!5572 = !DILocalVariable(name: "h", scope: !5562, file: !4874, line: 509, type: !2636)
!5573 = !DILocalVariable(name: "nb_buckets", scope: !5562, file: !4874, line: 520, type: !107)
!5574 = !DILocalVariable(name: "chunk0_size", scope: !5562, file: !4874, line: 521, type: !5000)
!5575 = !DILocalVariable(name: "i", scope: !5576, file: !4874, line: 526, type: !107)
!5576 = distinct !DILexicalBlock(scope: !5562, file: !4874, line: 526, column: 2)
!5577 = !DILocation(line: 0, scope: !5562)
!5578 = !DILocation(line: 499, column: 8, scope: !5562)
!5579 = !DILocation(line: 502, column: 19, scope: !5562)
!5580 = !DILocation(line: 503, column: 18, scope: !5562)
!5581 = !DILocation(line: 504, column: 27, scope: !5562)
!5582 = !DILocation(line: 504, column: 35, scope: !5562)
!5583 = !DILocation(line: 509, column: 21, scope: !5562)
!5584 = !DILocation(line: 510, column: 8, scope: !5562)
!5585 = !DILocation(line: 510, column: 13, scope: !5562)
!5586 = !DILocation(line: 511, column: 5, scope: !5562)
!5587 = !DILocation(line: 511, column: 15, scope: !5562)
!5588 = !DILocation(line: 512, column: 5, scope: !5562)
!5589 = !DILocation(line: 512, column: 19, scope: !5562)
!5590 = !DILocation(line: 520, column: 19, scope: !5562)
!5591 = !DILocation(line: 522, column: 21, scope: !5562)
!5592 = !DILocation(line: 521, column: 56, scope: !5562)
!5593 = !DILocation(line: 521, column: 26, scope: !5562)
!5594 = !DILocation(line: 0, scope: !5576)
!5595 = !DILocation(line: 526, column: 20, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5576, file: !4874, line: 526, column: 2)
!5597 = !DILocation(line: 526, column: 2, scope: !5576)
!5598 = !DILocation(line: 531, column: 2, scope: !5562)
!5599 = !DILocation(line: 532, column: 2, scope: !5562)
!5600 = !DILocation(line: 533, column: 2, scope: !5562)
!5601 = !DILocation(line: 536, column: 41, scope: !5562)
!5602 = !DILocation(line: 536, column: 2, scope: !5562)
!5603 = !DILocation(line: 537, column: 2, scope: !5562)
!5604 = !DILocation(line: 540, column: 2, scope: !5562)
!5605 = !DILocation(line: 541, column: 2, scope: !5562)
!5606 = !DILocation(line: 542, column: 2, scope: !5562)
!5607 = !DILocation(line: 544, column: 2, scope: !5562)
!5608 = !DILocation(line: 545, column: 1, scope: !5562)
!5609 = !DILocation(line: 527, column: 17, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5596, file: !4874, line: 526, column: 39)
!5611 = !DILocation(line: 527, column: 22, scope: !5610)
!5612 = !DILocation(line: 526, column: 35, scope: !5596)
!5613 = distinct !{!5613, !5597, !5614}
!5614 = !DILocation(line: 528, column: 2, scope: !5576)
!5615 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2656, file: !2656, line: 1338, type: !5616, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !5624)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{!107, !4072, !106, !121, !5618, !108}
!5618 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3711, line: 99, baseType: !5619)
!5619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3711, line: 40, baseType: !5620)
!5620 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2656, baseType: !5621)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5622)
!5622 = !{!5623}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5621, file: !2656, baseType: !106, size: 32)
!5624 = !{!5625, !5626, !5627, !5628, !5629, !5630, !5634, !5635, !5636, !5638, !5643, !5686, !5689, !5692, !5693, !5694, !5695, !5696, !5697, !5698, !5701, !5702, !5703, !5707, !5710, !5712, !5715, !5716, !5717, !5722, !5728, !5731, !5735, !5741, !5745, !5748, !5750, !5753}
!5625 = !DILocalVariable(name: "out", arg: 1, scope: !5615, file: !2656, line: 1338, type: !4072)
!5626 = !DILocalVariable(name: "ctx", arg: 2, scope: !5615, file: !2656, line: 1338, type: !106)
!5627 = !DILocalVariable(name: "fp", arg: 3, scope: !5615, file: !2656, line: 1338, type: !121)
!5628 = !DILocalVariable(name: "ap", arg: 4, scope: !5615, file: !2656, line: 1339, type: !5618)
!5629 = !DILocalVariable(name: "flags", arg: 5, scope: !5615, file: !2656, line: 1339, type: !108)
!5630 = !DILocalVariable(name: "buf", scope: !5615, file: !2656, line: 1341, type: !5631)
!5631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 176, elements: !5632)
!5632 = !{!5633}
!5633 = !DISubrange(count: 22)
!5634 = !DILocalVariable(name: "count", scope: !5615, file: !2656, line: 1342, type: !137)
!5635 = !DILocalVariable(name: "sint", scope: !5615, file: !2656, line: 1343, type: !2675)
!5636 = !DILocalVariable(name: "tagged_ap", scope: !5615, file: !2656, line: 1345, type: !5637)
!5637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!5638 = !DILocalVariable(name: "rc", scope: !5639, file: !2656, line: 1377, type: !107)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !2656, line: 1377, column: 4)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !2656, line: 1376, column: 19)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1376, column: 7)
!5642 = distinct !DILexicalBlock(scope: !5615, file: !2656, line: 1375, column: 19)
!5643 = !DILocalVariable(name: "state", scope: !5642, file: !2656, line: 1395, type: !5644)
!5644 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5615, file: !2656, line: 1392, size: 192, elements: !5645)
!5645 = !{!5646, !5654}
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5644, file: !2656, line: 1393, baseType: !5647, size: 64)
!5647 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2656, line: 166, size: 64, elements: !5648)
!5648 = !{!5649, !5650, !5651, !5652, !5653}
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5647, file: !2656, line: 168, baseType: !2675, size: 64)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5647, file: !2656, line: 171, baseType: !2678, size: 64)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5647, file: !2656, line: 174, baseType: !394, size: 64)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5647, file: !2656, line: 177, baseType: !392, size: 64)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5647, file: !2656, line: 180, baseType: !106, size: 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5644, file: !2656, line: 1394, baseType: !5655, size: 96, offset: 64)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2656, line: 189, size: 96, elements: !5656)
!5656 = !{!5657, !5658, !5659, !5660, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671, !5672, !5673, !5674, !5675, !5676, !5681}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5655, file: !2656, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5655, file: !2656, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5655, file: !2656, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5655, file: !2656, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5655, file: !2656, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5655, file: !2656, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5655, file: !2656, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5655, file: !2656, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5655, file: !2656, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5655, file: !2656, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5655, file: !2656, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5655, file: !2656, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5655, file: !2656, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5655, file: !2656, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5655, file: !2656, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5655, file: !2656, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5655, file: !2656, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5655, file: !2656, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5655, file: !2656, line: 260, baseType: !191, size: 8, offset: 24)
!5676 = !DIDerivedType(tag: DW_TAG_member, scope: !5655, file: !2656, line: 262, baseType: !5677, size: 32, offset: 32)
!5677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5655, file: !2656, line: 262, size: 32, elements: !5678)
!5678 = !{!5679, !5680}
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5677, file: !2656, line: 267, baseType: !107, size: 32)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5677, file: !2656, line: 289, baseType: !107, size: 32)
!5681 = !DIDerivedType(tag: DW_TAG_member, scope: !5655, file: !2656, line: 292, baseType: !5682, size: 32, offset: 64)
!5682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5655, file: !2656, line: 292, size: 32, elements: !5683)
!5683 = !{!5684, !5685}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5682, file: !2656, line: 297, baseType: !107, size: 32)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5682, file: !2656, line: 306, baseType: !107, size: 32)
!5686 = !DILocalVariable(name: "conv", scope: !5642, file: !2656, line: 1400, type: !5687)
!5687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5688)
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5655, size: 32)
!5689 = !DILocalVariable(name: "value", scope: !5642, file: !2656, line: 1401, type: !5690)
!5690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5691)
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5647, size: 32)
!5692 = !DILocalVariable(name: "sp", scope: !5642, file: !2656, line: 1402, type: !121)
!5693 = !DILocalVariable(name: "width", scope: !5642, file: !2656, line: 1403, type: !107)
!5694 = !DILocalVariable(name: "precision", scope: !5642, file: !2656, line: 1404, type: !107)
!5695 = !DILocalVariable(name: "bps", scope: !5642, file: !2656, line: 1405, type: !121)
!5696 = !DILocalVariable(name: "bpe", scope: !5642, file: !2656, line: 1406, type: !121)
!5697 = !DILocalVariable(name: "sign", scope: !5642, file: !2656, line: 1407, type: !123)
!5698 = !DILocalVariable(name: "arg", scope: !5699, file: !2656, line: 1432, type: !107)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !2656, line: 1431, column: 24)
!5700 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1431, column: 7)
!5701 = !DILocalVariable(name: "specifier_cat", scope: !5642, file: !2656, line: 1468, type: !2655)
!5702 = !DILocalVariable(name: "length_mod", scope: !5642, file: !2656, line: 1470, type: !2663)
!5703 = !DILocalVariable(name: "rc", scope: !5704, file: !2656, line: 1575, type: !107)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !2656, line: 1575, column: 4)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !2656, line: 1574, column: 43)
!5706 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1574, column: 7)
!5707 = !DILocalVariable(name: "rc", scope: !5708, file: !2656, line: 1584, type: !107)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !2656, line: 1584, column: 4)
!5709 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1582, column: 28)
!5710 = !DILocalVariable(name: "len", scope: !5711, file: !2656, line: 1589, type: !137)
!5711 = distinct !DILexicalBlock(scope: !5709, file: !2656, line: 1586, column: 13)
!5712 = !DILocalVariable(name: "len", scope: !5713, file: !2656, line: 1641, type: !137)
!5713 = distinct !DILexicalBlock(scope: !5714, file: !2656, line: 1640, column: 24)
!5714 = distinct !DILexicalBlock(scope: !5709, file: !2656, line: 1640, column: 8)
!5715 = !DILocalVariable(name: "nj_len", scope: !5642, file: !2656, line: 1722, type: !137)
!5716 = !DILocalVariable(name: "pad_len", scope: !5642, file: !2656, line: 1723, type: !107)
!5717 = !DILocalVariable(name: "pad", scope: !5718, file: !2656, line: 1751, type: !123)
!5718 = distinct !DILexicalBlock(scope: !5719, file: !2656, line: 1750, column: 26)
!5719 = distinct !DILexicalBlock(scope: !5720, file: !2656, line: 1750, column: 8)
!5720 = distinct !DILexicalBlock(scope: !5721, file: !2656, line: 1747, column: 18)
!5721 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1747, column: 7)
!5722 = !DILocalVariable(name: "rc", scope: !5723, file: !2656, line: 1758, type: !107)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !2656, line: 1758, column: 7)
!5724 = distinct !DILexicalBlock(scope: !5725, file: !2656, line: 1757, column: 21)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !2656, line: 1757, column: 10)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !2656, line: 1756, column: 26)
!5727 = distinct !DILexicalBlock(scope: !5718, file: !2656, line: 1756, column: 9)
!5728 = !DILocalVariable(name: "rc", scope: !5729, file: !2656, line: 1765, type: !107)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !2656, line: 1765, column: 6)
!5730 = distinct !DILexicalBlock(scope: !5718, file: !2656, line: 1764, column: 25)
!5731 = !DILocalVariable(name: "rc", scope: !5732, file: !2656, line: 1774, type: !107)
!5732 = distinct !DILexicalBlock(scope: !5733, file: !2656, line: 1774, column: 4)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !2656, line: 1773, column: 18)
!5734 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1773, column: 7)
!5735 = !DILocalVariable(name: "rc", scope: !5736, file: !2656, line: 1819, type: !107)
!5736 = distinct !DILexicalBlock(scope: !5737, file: !2656, line: 1819, column: 5)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !2656, line: 1818, column: 44)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !2656, line: 1818, column: 8)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !2656, line: 1817, column: 10)
!5740 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1777, column: 7)
!5741 = !DILocalVariable(name: "rc", scope: !5742, file: !2656, line: 1823, type: !107)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !2656, line: 1823, column: 5)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !2656, line: 1822, column: 26)
!5744 = distinct !DILexicalBlock(scope: !5739, file: !2656, line: 1822, column: 8)
!5745 = !DILocalVariable(name: "rc", scope: !5746, file: !2656, line: 1828, type: !107)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !2656, line: 1828, column: 5)
!5747 = distinct !DILexicalBlock(scope: !5739, file: !2656, line: 1827, column: 26)
!5748 = !DILocalVariable(name: "rc", scope: !5749, file: !2656, line: 1831, type: !107)
!5749 = distinct !DILexicalBlock(scope: !5739, file: !2656, line: 1831, column: 4)
!5750 = !DILocalVariable(name: "rc", scope: !5751, file: !2656, line: 1836, type: !107)
!5751 = distinct !DILexicalBlock(scope: !5752, file: !2656, line: 1836, column: 4)
!5752 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1835, column: 21)
!5753 = !DILabel(scope: !5709, name: "prec_int_pad0", file: !2656, line: 1634)
!5754 = !DILocation(line: 0, scope: !5615)
!5755 = !DILocation(line: 1341, column: 2, scope: !5615)
!5756 = !DILocation(line: 1341, column: 7, scope: !5615)
!5757 = !DILocation(line: 1375, column: 2, scope: !5615)
!5758 = !DILocation(line: 1342, column: 9, scope: !5615)
!5759 = !DILocation(line: 1375, column: 9, scope: !5615)
!5760 = !DILocation(line: 1377, column: 4, scope: !5639)
!5761 = !DILocation(line: 0, scope: !5639)
!5762 = !DILocation(line: 1377, column: 4, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5639, file: !2656, line: 1377, column: 4)
!5764 = distinct !{!5764, !5757, !5765}
!5765 = !DILocation(line: 1839, column: 2, scope: !5615)
!5766 = !DILocation(line: 1392, column: 3, scope: !5642)
!5767 = !DILocation(line: 1395, column: 5, scope: !5642)
!5768 = !DILocation(line: 0, scope: !5642)
!5769 = !DILocation(line: 1409, column: 8, scope: !5642)
!5770 = !DILocation(line: 1414, column: 13, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1414, column: 7)
!5772 = !DILocation(line: 1414, column: 7, scope: !5642)
!5773 = !DILocation(line: 1415, column: 12, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5771, file: !2656, line: 1414, column: 25)
!5775 = !DILocation(line: 1417, column: 14, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5774, file: !2656, line: 1417, column: 8)
!5777 = !DILocation(line: 1417, column: 8, scope: !5774)
!5778 = !DILocation(line: 1418, column: 21, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5776, file: !2656, line: 1417, column: 19)
!5780 = !DILocation(line: 1419, column: 13, scope: !5779)
!5781 = !DILocation(line: 1420, column: 4, scope: !5779)
!5782 = !DILocation(line: 1421, column: 20, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5771, file: !2656, line: 1421, column: 14)
!5784 = !DILocation(line: 1421, column: 14, scope: !5771)
!5785 = !DILocation(line: 1431, column: 13, scope: !5700)
!5786 = !DILocation(line: 1431, column: 7, scope: !5642)
!5787 = !DILocation(line: 1432, column: 14, scope: !5699)
!5788 = !DILocation(line: 0, scope: !5699)
!5789 = !DILocation(line: 1434, column: 12, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5699, file: !2656, line: 1434, column: 8)
!5791 = !DILocation(line: 1434, column: 8, scope: !5699)
!5792 = !DILocation(line: 1435, column: 24, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5790, file: !2656, line: 1434, column: 17)
!5794 = !DILocation(line: 1436, column: 4, scope: !5793)
!5795 = !DILocation(line: 1439, column: 20, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5700, file: !2656, line: 1439, column: 14)
!5797 = !DILocation(line: 1439, column: 14, scope: !5700)
!5798 = !DILocation(line: 1469, column: 37, scope: !5642)
!5799 = !DILocation(line: 1448, column: 20, scope: !5642)
!5800 = !DILocation(line: 1449, column: 22, scope: !5642)
!5801 = !DILocation(line: 1471, column: 34, scope: !5642)
!5802 = !DILocation(line: 1478, column: 7, scope: !5642)
!5803 = !DILocation(line: 1479, column: 4, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !2656, line: 1478, column: 40)
!5805 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1478, column: 7)
!5806 = !DILocation(line: 1484, column: 19, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5804, file: !2656, line: 1479, column: 24)
!5808 = !DILocation(line: 1484, column: 17, scope: !5807)
!5809 = !DILocation(line: 1485, column: 5, scope: !5807)
!5810 = !DILocation(line: 1492, column: 20, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !2656, line: 1491, column: 12)
!5812 = distinct !DILexicalBlock(scope: !5807, file: !2656, line: 1487, column: 9)
!5813 = !DILocation(line: 1492, column: 18, scope: !5811)
!5814 = !DILocation(line: 1494, column: 5, scope: !5807)
!5815 = !DILocation(line: 1497, column: 23, scope: !5807)
!5816 = !DILocation(line: 1496, column: 17, scope: !5807)
!5817 = !DILocation(line: 1498, column: 5, scope: !5807)
!5818 = !DILocation(line: 1501, column: 23, scope: !5807)
!5819 = !DILocation(line: 1500, column: 17, scope: !5807)
!5820 = !DILocation(line: 1502, column: 5, scope: !5807)
!5821 = !DILocation(line: 1513, column: 23, scope: !5807)
!5822 = !DILocation(line: 1513, column: 6, scope: !5807)
!5823 = !DILocation(line: 1512, column: 17, scope: !5807)
!5824 = !DILocation(line: 1514, column: 5, scope: !5807)
!5825 = !DILocation(line: 0, scope: !5807)
!5826 = !DILocation(line: 1516, column: 8, scope: !5804)
!5827 = !DILocation(line: 1517, column: 19, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !2656, line: 1516, column: 33)
!5829 = distinct !DILexicalBlock(scope: !5804, file: !2656, line: 1516, column: 8)
!5830 = !DILocation(line: 1517, column: 17, scope: !5828)
!5831 = !DILocation(line: 1518, column: 4, scope: !5828)
!5832 = !DILocation(line: 1519, column: 19, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !2656, line: 1518, column: 39)
!5834 = distinct !DILexicalBlock(scope: !5829, file: !2656, line: 1518, column: 15)
!5835 = !DILocation(line: 1519, column: 17, scope: !5833)
!5836 = !DILocation(line: 1520, column: 4, scope: !5833)
!5837 = !DILocation(line: 1522, column: 4, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5839, file: !2656, line: 1521, column: 47)
!5839 = distinct !DILexicalBlock(scope: !5805, file: !2656, line: 1521, column: 14)
!5840 = !DILocation(line: 1527, column: 19, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5838, file: !2656, line: 1522, column: 24)
!5842 = !DILocation(line: 1527, column: 17, scope: !5841)
!5843 = !DILocation(line: 1528, column: 5, scope: !5841)
!5844 = !DILocation(line: 0, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5841, file: !2656, line: 1530, column: 9)
!5846 = !DILocation(line: 1540, column: 23, scope: !5841)
!5847 = !DILocation(line: 1539, column: 17, scope: !5841)
!5848 = !DILocation(line: 1542, column: 5, scope: !5841)
!5849 = !DILocation(line: 1545, column: 23, scope: !5841)
!5850 = !DILocation(line: 1544, column: 17, scope: !5841)
!5851 = !DILocation(line: 1547, column: 5, scope: !5841)
!5852 = !DILocation(line: 1551, column: 23, scope: !5841)
!5853 = !DILocation(line: 1551, column: 6, scope: !5841)
!5854 = !DILocation(line: 1550, column: 17, scope: !5841)
!5855 = !DILocation(line: 1552, column: 5, scope: !5841)
!5856 = !DILocation(line: 0, scope: !5841)
!5857 = !DILocation(line: 1554, column: 8, scope: !5838)
!5858 = !DILocation(line: 1555, column: 19, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5860, file: !2656, line: 1554, column: 33)
!5860 = distinct !DILexicalBlock(scope: !5838, file: !2656, line: 1554, column: 8)
!5861 = !DILocation(line: 1555, column: 17, scope: !5859)
!5862 = !DILocation(line: 1556, column: 4, scope: !5859)
!5863 = !DILocation(line: 1557, column: 19, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !2656, line: 1556, column: 39)
!5865 = distinct !DILexicalBlock(scope: !5860, file: !2656, line: 1556, column: 15)
!5866 = !DILocation(line: 1557, column: 17, scope: !5864)
!5867 = !DILocation(line: 1558, column: 4, scope: !5864)
!5868 = !DILocation(line: 0, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !2656, line: 1560, column: 8)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !2656, line: 1559, column: 45)
!5871 = distinct !DILexicalBlock(scope: !5839, file: !2656, line: 1559, column: 14)
!5872 = !DILocation(line: 1566, column: 17, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !2656, line: 1565, column: 46)
!5874 = distinct !DILexicalBlock(scope: !5871, file: !2656, line: 1565, column: 14)
!5875 = !DILocation(line: 1566, column: 15, scope: !5873)
!5876 = !DILocation(line: 1567, column: 3, scope: !5873)
!5877 = !DILocation(line: 1574, column: 21, scope: !5706)
!5878 = !DILocation(line: 1575, column: 4, scope: !5704)
!5879 = !DILocation(line: 0, scope: !5704)
!5880 = !DILocation(line: 1575, column: 4, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5704, file: !2656, line: 1575, column: 4)
!5882 = !DILocation(line: 1582, column: 17, scope: !5642)
!5883 = !DILocation(line: 1582, column: 3, scope: !5642)
!5884 = !DILocation(line: 1584, column: 4, scope: !5708)
!5885 = !DILocation(line: 0, scope: !5708)
!5886 = !DILocation(line: 1584, column: 4, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5708, file: !2656, line: 1584, column: 4)
!5888 = !DILocation(line: 1587, column: 31, scope: !5711)
!5889 = !DILocation(line: 1591, column: 18, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5711, file: !2656, line: 1591, column: 8)
!5891 = !DILocation(line: 1591, column: 8, scope: !5711)
!5892 = !DILocation(line: 1592, column: 11, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5890, file: !2656, line: 1591, column: 24)
!5894 = !DILocation(line: 0, scope: !5711)
!5895 = !DILocation(line: 1593, column: 4, scope: !5893)
!5896 = !DILocation(line: 1594, column: 11, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5890, file: !2656, line: 1593, column: 11)
!5898 = !DILocation(line: 1604, column: 51, scope: !5709)
!5899 = !DILocation(line: 1604, column: 13, scope: !5709)
!5900 = !DILocation(line: 1604, column: 11, scope: !5709)
!5901 = !DILocation(line: 1606, column: 4, scope: !5709)
!5902 = !DILocation(line: 1609, column: 14, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5709, file: !2656, line: 1609, column: 8)
!5904 = !DILocation(line: 1609, column: 8, scope: !5709)
!5905 = !DILocation(line: 1619, column: 18, scope: !5709)
!5906 = !DILocation(line: 1620, column: 13, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5709, file: !2656, line: 1620, column: 8)
!5908 = !DILocation(line: 1620, column: 8, scope: !5709)
!5909 = !DILocation(line: 1622, column: 36, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5907, file: !2656, line: 1620, column: 18)
!5911 = !DILocation(line: 1622, column: 17, scope: !5910)
!5912 = !DILocation(line: 1623, column: 4, scope: !5910)
!5913 = !DILocation(line: 1632, column: 29, scope: !5709)
!5914 = !DILocation(line: 1632, column: 10, scope: !5709)
!5915 = !DILocation(line: 1632, column: 4, scope: !5709)
!5916 = !DILocation(line: 1407, column: 8, scope: !5642)
!5917 = !DILocation(line: 0, scope: !5709)
!5918 = !DILocation(line: 1634, column: 3, scope: !5709)
!5919 = !DILocation(line: 1640, column: 18, scope: !5714)
!5920 = !DILocation(line: 1640, column: 8, scope: !5709)
!5921 = !DILocation(line: 1729, column: 13, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1729, column: 7)
!5923 = !DILocation(line: 1641, column: 22, scope: !5713)
!5924 = !DILocation(line: 0, scope: !5713)
!5925 = !DILocation(line: 1646, column: 21, scope: !5713)
!5926 = !DILocation(line: 1649, column: 13, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5713, file: !2656, line: 1649, column: 9)
!5928 = !DILocation(line: 1649, column: 9, scope: !5713)
!5929 = !DILocation(line: 1650, column: 35, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5927, file: !2656, line: 1649, column: 34)
!5931 = !DILocation(line: 1650, column: 23, scope: !5930)
!5932 = !DILocation(line: 1651, column: 5, scope: !5930)
!5933 = !DILocation(line: 1660, column: 15, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5709, file: !2656, line: 1660, column: 8)
!5935 = !DILocation(line: 1660, column: 19, scope: !5934)
!5936 = !DILocation(line: 1660, column: 8, scope: !5709)
!5937 = !DILocation(line: 1661, column: 23, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5934, file: !2656, line: 1660, column: 28)
!5939 = !DILocation(line: 1661, column: 11, scope: !5938)
!5940 = !DILocation(line: 1665, column: 22, scope: !5938)
!5941 = !DILocation(line: 1666, column: 21, scope: !5938)
!5942 = !DILocation(line: 1668, column: 5, scope: !5938)
!5943 = !DILocation(line: 1677, column: 30, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !2656, line: 1676, column: 49)
!5945 = distinct !DILexicalBlock(scope: !5709, file: !2656, line: 1676, column: 8)
!5946 = !DILocation(line: 1677, column: 5, scope: !5944)
!5947 = !DILocation(line: 1680, column: 4, scope: !5709)
!5948 = !DILocation(line: 0, scope: !5890)
!5949 = !DILocation(line: 1597, column: 14, scope: !5711)
!5950 = !DILocation(line: 1699, column: 11, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1699, column: 7)
!5952 = !DILocation(line: 1699, column: 7, scope: !5642)
!5953 = !DILocation(line: 1725, column: 7, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1725, column: 7)
!5955 = !DILocation(line: 1725, column: 12, scope: !5954)
!5956 = !DILocation(line: 1747, column: 13, scope: !5721)
!5957 = !DILocation(line: 1747, column: 7, scope: !5642)
!5958 = !DILocation(line: 1722, column: 24, scope: !5642)
!5959 = !DILocation(line: 1725, column: 7, scope: !5642)
!5960 = !DILocation(line: 1729, column: 7, scope: !5642)
!5961 = !DILocation(line: 1736, column: 13, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5642, file: !2656, line: 1736, column: 7)
!5963 = !DILocation(line: 1735, column: 19, scope: !5642)
!5964 = !DILocation(line: 1736, column: 7, scope: !5642)
!5965 = !DILocation(line: 1748, column: 10, scope: !5720)
!5966 = !DILocation(line: 1750, column: 15, scope: !5719)
!5967 = !DILocation(line: 1750, column: 8, scope: !5720)
!5968 = !DILocation(line: 0, scope: !5718)
!5969 = !DILocation(line: 1756, column: 15, scope: !5727)
!5970 = !DILocation(line: 1756, column: 9, scope: !5718)
!5971 = !DILocation(line: 1758, column: 7, scope: !5723)
!5972 = !DILocation(line: 0, scope: !5723)
!5973 = !DILocation(line: 1758, column: 7, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5723, file: !2656, line: 1758, column: 7)
!5975 = !DILocation(line: 1764, column: 5, scope: !5718)
!5976 = !DILocation(line: 0, scope: !5720)
!5977 = !DILocation(line: 1764, column: 20, scope: !5718)
!5978 = !DILocation(line: 1764, column: 17, scope: !5718)
!5979 = !DILocation(line: 1765, column: 6, scope: !5729)
!5980 = !DILocation(line: 0, scope: !5729)
!5981 = !DILocation(line: 1765, column: 6, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5729, file: !2656, line: 1765, column: 6)
!5983 = distinct !{!5983, !5975, !5984}
!5984 = !DILocation(line: 1766, column: 5, scope: !5718)
!5985 = !DILocation(line: 1773, column: 12, scope: !5734)
!5986 = !DILocation(line: 1773, column: 7, scope: !5642)
!5987 = !DILocation(line: 1773, column: 7, scope: !5734)
!5988 = !DILocation(line: 1774, column: 4, scope: !5732)
!5989 = !DILocation(line: 0, scope: !5732)
!5990 = !DILocation(line: 1774, column: 4, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5732, file: !2656, line: 1774, column: 4)
!5992 = !DILocation(line: 1818, column: 8, scope: !5738)
!5993 = !DILocation(line: 1818, column: 27, scope: !5738)
!5994 = !DILocation(line: 1818, column: 25, scope: !5738)
!5995 = !DILocation(line: 1818, column: 8, scope: !5739)
!5996 = !DILocation(line: 1819, column: 5, scope: !5736)
!5997 = !DILocation(line: 0, scope: !5736)
!5998 = !DILocation(line: 1819, column: 5, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5736, file: !2656, line: 1819, column: 5)
!6000 = !DILocation(line: 1822, column: 14, scope: !5744)
!6001 = !DILocation(line: 1822, column: 8, scope: !5739)
!6002 = !DILocation(line: 1823, column: 5, scope: !5742)
!6003 = !DILocation(line: 0, scope: !5742)
!6004 = !DILocation(line: 1823, column: 5, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5742, file: !2656, line: 1823, column: 5)
!6006 = !DILocation(line: 1826, column: 20, scope: !5739)
!6007 = !DILocation(line: 1827, column: 4, scope: !5739)
!6008 = !DILocation(line: 0, scope: !5739)
!6009 = !DILocation(line: 1827, column: 21, scope: !5739)
!6010 = !DILocation(line: 1827, column: 18, scope: !5739)
!6011 = !DILocation(line: 1828, column: 5, scope: !5746)
!6012 = !DILocation(line: 0, scope: !5746)
!6013 = !DILocation(line: 1828, column: 5, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5746, file: !2656, line: 1828, column: 5)
!6015 = distinct !{!6015, !6007, !6016}
!6016 = !DILocation(line: 1829, column: 4, scope: !5739)
!6017 = !DILocation(line: 1831, column: 4, scope: !5749)
!6018 = !DILocation(line: 0, scope: !5749)
!6019 = !DILocation(line: 1831, column: 4, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5749, file: !2656, line: 1831, column: 4)
!6021 = !DILocation(line: 1835, column: 16, scope: !5642)
!6022 = !DILocation(line: 1835, column: 3, scope: !5642)
!6023 = !DILocation(line: 1836, column: 4, scope: !5751)
!6024 = !DILocation(line: 0, scope: !5751)
!6025 = !DILocation(line: 1836, column: 4, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !5751, file: !2656, line: 1836, column: 4)
!6027 = !DILocation(line: 1837, column: 4, scope: !5752)
!6028 = distinct !{!6028, !6022, !6029}
!6029 = !DILocation(line: 1838, column: 3, scope: !5642)
!6030 = !DILocation(line: 1844, column: 1, scope: !5615)
!6031 = distinct !DISubprogram(name: "extract_conversion", scope: !2656, file: !2656, line: 642, type: !6032, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6034)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{!121, !5688, !121}
!6034 = !{!6035, !6036}
!6035 = !DILocalVariable(name: "conv", arg: 1, scope: !6031, file: !2656, line: 642, type: !5688)
!6036 = !DILocalVariable(name: "sp", arg: 2, scope: !6031, file: !2656, line: 643, type: !121)
!6037 = !DILocation(line: 0, scope: !6031)
!6038 = !DILocation(line: 645, column: 10, scope: !6031)
!6039 = !DILocation(line: 653, column: 2, scope: !6031)
!6040 = !DILocation(line: 654, column: 6, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6031, file: !2656, line: 654, column: 6)
!6042 = !DILocation(line: 654, column: 10, scope: !6041)
!6043 = !DILocation(line: 654, column: 6, scope: !6031)
!6044 = !DILocation(line: 655, column: 24, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6041, file: !2656, line: 654, column: 18)
!6046 = !DILocation(line: 655, column: 19, scope: !6045)
!6047 = !DILocation(line: 656, column: 3, scope: !6045)
!6048 = !DILocation(line: 659, column: 7, scope: !6031)
!6049 = !DILocation(line: 660, column: 7, scope: !6031)
!6050 = !DILocation(line: 661, column: 7, scope: !6031)
!6051 = !DILocation(line: 662, column: 7, scope: !6031)
!6052 = !DILocation(line: 663, column: 7, scope: !6031)
!6053 = !DILocation(line: 665, column: 2, scope: !6031)
!6054 = !DILocation(line: 666, column: 1, scope: !6031)
!6055 = distinct !DISubprogram(name: "outs", scope: !2656, file: !2656, line: 1319, type: !6056, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6058)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!107, !4072, !106, !121, !121}
!6058 = !{!6059, !6060, !6061, !6062, !6063, !6064}
!6059 = !DILocalVariable(name: "out", arg: 1, scope: !6055, file: !2656, line: 1319, type: !4072)
!6060 = !DILocalVariable(name: "ctx", arg: 2, scope: !6055, file: !2656, line: 1320, type: !106)
!6061 = !DILocalVariable(name: "sp", arg: 3, scope: !6055, file: !2656, line: 1321, type: !121)
!6062 = !DILocalVariable(name: "ep", arg: 4, scope: !6055, file: !2656, line: 1322, type: !121)
!6063 = !DILocalVariable(name: "count", scope: !6055, file: !2656, line: 1324, type: !137)
!6064 = !DILocalVariable(name: "rc", scope: !6065, file: !2656, line: 1327, type: !107)
!6065 = distinct !DILexicalBlock(scope: !6055, file: !2656, line: 1326, column: 45)
!6066 = !DILocation(line: 0, scope: !6055)
!6067 = !DILocation(line: 1326, column: 2, scope: !6055)
!6068 = !DILocation(line: 1324, column: 9, scope: !6055)
!6069 = !DILocation(line: 1326, column: 13, scope: !6055)
!6070 = !DILocation(line: 1326, column: 19, scope: !6055)
!6071 = !DILocation(line: 1327, column: 21, scope: !6065)
!6072 = !DILocation(line: 1326, column: 36, scope: !6055)
!6073 = !DILocation(line: 1326, column: 39, scope: !6055)
!6074 = !DILocation(line: 1327, column: 24, scope: !6065)
!6075 = !DILocation(line: 1327, column: 16, scope: !6065)
!6076 = !DILocation(line: 1327, column: 12, scope: !6065)
!6077 = !DILocation(line: 0, scope: !6065)
!6078 = !DILocation(line: 1329, column: 10, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6065, file: !2656, line: 1329, column: 7)
!6080 = !DILocation(line: 1329, column: 7, scope: !6065)
!6081 = distinct !{!6081, !6067, !6082}
!6082 = !DILocation(line: 1333, column: 2, scope: !6055)
!6083 = !DILocation(line: 1336, column: 1, scope: !6055)
!6084 = distinct !DISubprogram(name: "encode_uint", scope: !2656, file: !2656, line: 788, type: !6085, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6087)
!6085 = !DISubroutineType(types: !6086)
!6086 = !{!283, !2678, !5688, !283, !121}
!6087 = !{!6088, !6089, !6090, !6091, !6092, !6093, !6095, !6096}
!6088 = !DILocalVariable(name: "value", arg: 1, scope: !6084, file: !2656, line: 788, type: !2678)
!6089 = !DILocalVariable(name: "conv", arg: 2, scope: !6084, file: !2656, line: 789, type: !5688)
!6090 = !DILocalVariable(name: "bps", arg: 3, scope: !6084, file: !2656, line: 790, type: !283)
!6091 = !DILocalVariable(name: "bpe", arg: 4, scope: !6084, file: !2656, line: 791, type: !121)
!6092 = !DILocalVariable(name: "upcase", scope: !6084, file: !2656, line: 793, type: !136)
!6093 = !DILocalVariable(name: "radix", scope: !6084, file: !2656, line: 794, type: !6094)
!6094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6095 = !DILocalVariable(name: "bp", scope: !6084, file: !2656, line: 795, type: !283)
!6096 = !DILocalVariable(name: "lsv", scope: !6097, file: !2656, line: 798, type: !32)
!6097 = distinct !DILexicalBlock(scope: !6084, file: !2656, line: 797, column: 5)
!6098 = !DILocation(line: 0, scope: !6084)
!6099 = !DILocation(line: 793, column: 35, scope: !6084)
!6100 = !DILocation(line: 793, column: 24, scope: !6084)
!6101 = !DILocation(line: 793, column: 16, scope: !6084)
!6102 = !DILocation(line: 794, column: 29, scope: !6084)
!6103 = !DILocation(line: 795, column: 24, scope: !6084)
!6104 = !DILocation(line: 795, column: 17, scope: !6084)
!6105 = !DILocation(line: 797, column: 2, scope: !6084)
!6106 = !DILocation(line: 802, column: 9, scope: !6097)
!6107 = !DILocation(line: 798, column: 22, scope: !6097)
!6108 = !DILocation(line: 0, scope: !6097)
!6109 = !DILocation(line: 800, column: 16, scope: !6097)
!6110 = !DILocation(line: 800, column: 11, scope: !6097)
!6111 = !DILocation(line: 800, column: 4, scope: !6097)
!6112 = !DILocation(line: 800, column: 9, scope: !6097)
!6113 = !DILocation(line: 803, column: 18, scope: !6084)
!6114 = !DILocation(line: 803, column: 24, scope: !6084)
!6115 = !DILocation(line: 803, column: 2, scope: !6097)
!6116 = distinct !{!6116, !6105, !6117}
!6117 = !DILocation(line: 803, column: 37, scope: !6084)
!6118 = !DILocation(line: 808, column: 12, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6084, file: !2656, line: 808, column: 6)
!6120 = !DILocation(line: 808, column: 6, scope: !6084)
!6121 = !DILocation(line: 809, column: 7, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6119, file: !2656, line: 808, column: 23)
!6123 = !DILocation(line: 813, column: 3, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !2656, line: 811, column: 27)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !2656, line: 811, column: 14)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !2656, line: 809, column: 7)
!6127 = !DILocation(line: 0, scope: !6126)
!6128 = !DILocation(line: 818, column: 2, scope: !6084)
!6129 = distinct !DISubprogram(name: "store_count", scope: !2656, file: !2656, line: 1280, type: !6130, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6134)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{null, !6132, !106, !107}
!6132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6133, size: 32)
!6133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5655)
!6134 = !{!6135, !6136, !6137}
!6135 = !DILocalVariable(name: "conv", arg: 1, scope: !6129, file: !2656, line: 1280, type: !6132)
!6136 = !DILocalVariable(name: "dp", arg: 2, scope: !6129, file: !2656, line: 1281, type: !106)
!6137 = !DILocalVariable(name: "count", arg: 3, scope: !6129, file: !2656, line: 1282, type: !107)
!6138 = !DILocation(line: 0, scope: !6129)
!6139 = !DILocation(line: 1284, column: 38, scope: !6129)
!6140 = !DILocation(line: 1284, column: 2, scope: !6129)
!6141 = !DILocation(line: 1286, column: 4, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6129, file: !2656, line: 1284, column: 50)
!6143 = !DILocation(line: 1286, column: 14, scope: !6142)
!6144 = !DILocation(line: 1287, column: 3, scope: !6142)
!6145 = !DILocation(line: 1289, column: 24, scope: !6142)
!6146 = !DILocation(line: 1289, column: 22, scope: !6142)
!6147 = !DILocation(line: 1290, column: 3, scope: !6142)
!6148 = !DILocation(line: 1292, column: 18, scope: !6142)
!6149 = !DILocation(line: 1292, column: 4, scope: !6142)
!6150 = !DILocation(line: 1292, column: 16, scope: !6142)
!6151 = !DILocation(line: 1293, column: 3, scope: !6142)
!6152 = !DILocation(line: 1295, column: 4, scope: !6142)
!6153 = !DILocation(line: 1295, column: 15, scope: !6142)
!6154 = !DILocation(line: 1296, column: 3, scope: !6142)
!6155 = !DILocation(line: 1298, column: 22, scope: !6142)
!6156 = !DILocation(line: 1298, column: 4, scope: !6142)
!6157 = !DILocation(line: 1298, column: 20, scope: !6142)
!6158 = !DILocation(line: 1299, column: 3, scope: !6142)
!6159 = !DILocation(line: 1301, column: 21, scope: !6142)
!6160 = !DILocation(line: 1301, column: 4, scope: !6142)
!6161 = !DILocation(line: 1301, column: 19, scope: !6142)
!6162 = !DILocation(line: 1302, column: 3, scope: !6142)
!6163 = !DILocation(line: 1304, column: 4, scope: !6142)
!6164 = !DILocation(line: 1304, column: 17, scope: !6142)
!6165 = !DILocation(line: 1305, column: 3, scope: !6142)
!6166 = !DILocation(line: 1307, column: 4, scope: !6142)
!6167 = !DILocation(line: 1307, column: 20, scope: !6142)
!6168 = !DILocation(line: 1308, column: 3, scope: !6142)
!6169 = !DILocation(line: 1316, column: 1, scope: !6129)
!6170 = distinct !DISubprogram(name: "isupper", scope: !6171, file: !6171, line: 16, type: !418, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6172)
!6171 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6172 = !{!6173}
!6173 = !DILocalVariable(name: "a", arg: 1, scope: !6170, file: !6171, line: 16, type: !107)
!6174 = !DILocation(line: 0, scope: !6170)
!6175 = !DILocation(line: 18, column: 29, scope: !6170)
!6176 = !DILocation(line: 18, column: 45, scope: !6170)
!6177 = !DILocation(line: 18, column: 2, scope: !6170)
!6178 = distinct !DISubprogram(name: "conversion_radix", scope: !2656, file: !2656, line: 761, type: !6179, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6181)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{!137, !123}
!6181 = !{!6182}
!6182 = !DILocalVariable(name: "specifier", arg: 1, scope: !6178, file: !2656, line: 761, type: !123)
!6183 = !DILocation(line: 0, scope: !6178)
!6184 = !DILocation(line: 763, column: 2, scope: !6178)
!6185 = !DILocation(line: 770, column: 3, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6178, file: !2656, line: 763, column: 21)
!6187 = !DILocation(line: 774, column: 3, scope: !6186)
!6188 = !DILocation(line: 0, scope: !6186)
!6189 = !DILocation(line: 776, column: 1, scope: !6178)
!6190 = distinct !DISubprogram(name: "extract_flags", scope: !2656, file: !2656, line: 339, type: !6032, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6191)
!6191 = !{!6192, !6193, !6194}
!6192 = !DILocalVariable(name: "conv", arg: 1, scope: !6190, file: !2656, line: 339, type: !5688)
!6193 = !DILocalVariable(name: "sp", arg: 2, scope: !6190, file: !2656, line: 340, type: !121)
!6194 = !DILocalVariable(name: "loop", scope: !6190, file: !2656, line: 342, type: !136)
!6195 = !DILocation(line: 0, scope: !6190)
!6196 = !DILocation(line: 344, column: 2, scope: !6190)
!6197 = !DILocation(line: 345, column: 11, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6190, file: !2656, line: 344, column: 5)
!6199 = !DILocation(line: 345, column: 3, scope: !6198)
!6200 = !DILocation(line: 351, column: 4, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6198, file: !2656, line: 345, column: 16)
!6202 = !DILocation(line: 354, column: 4, scope: !6201)
!6203 = !DILocation(line: 357, column: 4, scope: !6201)
!6204 = !DILocation(line: 360, column: 4, scope: !6201)
!6205 = !DILocation(line: 0, scope: !6201)
!6206 = !DILocation(line: 370, column: 12, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6190, file: !2656, line: 370, column: 6)
!6208 = !DILocation(line: 370, column: 22, scope: !6207)
!6209 = !DILocation(line: 371, column: 19, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6207, file: !2656, line: 370, column: 42)
!6211 = !DILocation(line: 372, column: 2, scope: !6210)
!6212 = !DILocation(line: 376, column: 2, scope: !6190)
!6213 = distinct !DISubprogram(name: "extract_width", scope: !2656, file: !2656, line: 388, type: !6032, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6214)
!6214 = !{!6215, !6216, !6217, !6218}
!6215 = !DILocalVariable(name: "conv", arg: 1, scope: !6213, file: !2656, line: 388, type: !5688)
!6216 = !DILocalVariable(name: "sp", arg: 2, scope: !6213, file: !2656, line: 389, type: !121)
!6217 = !DILocalVariable(name: "wp", scope: !6213, file: !2656, line: 398, type: !121)
!6218 = !DILocalVariable(name: "width", scope: !6213, file: !2656, line: 399, type: !137)
!6219 = !DILocation(line: 0, scope: !6213)
!6220 = !DILocation(line: 391, column: 8, scope: !6213)
!6221 = !DILocation(line: 391, column: 22, scope: !6213)
!6222 = !DILocation(line: 393, column: 6, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6213, file: !2656, line: 393, column: 6)
!6224 = !DILocation(line: 393, column: 10, scope: !6223)
!6225 = !DILocation(line: 393, column: 6, scope: !6213)
!6226 = !DILocation(line: 394, column: 20, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6223, file: !2656, line: 393, column: 18)
!6228 = !DILocation(line: 395, column: 10, scope: !6227)
!6229 = !DILocation(line: 395, column: 3, scope: !6227)
!6230 = !DILocation(line: 399, column: 17, scope: !6213)
!6231 = !DILocation(line: 401, column: 6, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6213, file: !2656, line: 401, column: 6)
!6233 = !DILocation(line: 401, column: 9, scope: !6232)
!6234 = !DILocation(line: 401, column: 6, scope: !6213)
!6235 = !DILocation(line: 402, column: 23, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6232, file: !2656, line: 401, column: 16)
!6237 = !DILocation(line: 403, column: 9, scope: !6236)
!6238 = !DILocation(line: 403, column: 21, scope: !6236)
!6239 = !DILocation(line: 405, column: 11, scope: !6236)
!6240 = !DILocation(line: 404, column: 21, scope: !6236)
!6241 = !DILocation(line: 406, column: 2, scope: !6236)
!6242 = !DILocation(line: 409, column: 1, scope: !6213)
!6243 = distinct !DISubprogram(name: "extract_prec", scope: !2656, file: !2656, line: 420, type: !6032, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6244)
!6244 = !{!6245, !6246, !6247}
!6245 = !DILocalVariable(name: "conv", arg: 1, scope: !6243, file: !2656, line: 420, type: !5688)
!6246 = !DILocalVariable(name: "sp", arg: 2, scope: !6243, file: !2656, line: 421, type: !121)
!6247 = !DILocalVariable(name: "prec", scope: !6243, file: !2656, line: 435, type: !137)
!6248 = !DILocation(line: 0, scope: !6243)
!6249 = !DILocation(line: 423, column: 24, scope: !6243)
!6250 = !DILocation(line: 423, column: 28, scope: !6243)
!6251 = !DILocation(line: 423, column: 8, scope: !6243)
!6252 = !DILocation(line: 423, column: 21, scope: !6243)
!6253 = !DILocation(line: 425, column: 6, scope: !6243)
!6254 = !DILocation(line: 428, column: 2, scope: !6243)
!6255 = !DILocation(line: 430, column: 6, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6243, file: !2656, line: 430, column: 6)
!6257 = !DILocation(line: 430, column: 10, scope: !6256)
!6258 = !DILocation(line: 430, column: 6, scope: !6243)
!6259 = !DILocation(line: 431, column: 19, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6256, file: !2656, line: 430, column: 18)
!6261 = !DILocation(line: 432, column: 10, scope: !6260)
!6262 = !DILocation(line: 432, column: 3, scope: !6260)
!6263 = !DILocation(line: 435, column: 16, scope: !6243)
!6264 = !DILocation(line: 437, column: 8, scope: !6243)
!6265 = !DILocation(line: 437, column: 19, scope: !6243)
!6266 = !DILocation(line: 439, column: 10, scope: !6243)
!6267 = !DILocation(line: 438, column: 20, scope: !6243)
!6268 = !DILocation(line: 441, column: 9, scope: !6243)
!6269 = !DILocation(line: 442, column: 1, scope: !6243)
!6270 = distinct !DISubprogram(name: "extract_length", scope: !2656, file: !2656, line: 453, type: !6032, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6271)
!6271 = !{!6272, !6273}
!6272 = !DILocalVariable(name: "conv", arg: 1, scope: !6270, file: !2656, line: 453, type: !5688)
!6273 = !DILocalVariable(name: "sp", arg: 2, scope: !6270, file: !2656, line: 454, type: !121)
!6274 = !DILocation(line: 0, scope: !6270)
!6275 = !DILocation(line: 456, column: 10, scope: !6270)
!6276 = !DILocation(line: 456, column: 2, scope: !6270)
!6277 = !DILocation(line: 458, column: 8, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !2656, line: 458, column: 7)
!6279 = distinct !DILexicalBlock(scope: !6270, file: !2656, line: 456, column: 15)
!6280 = !DILocation(line: 458, column: 7, scope: !6278)
!6281 = !DILocation(line: 458, column: 13, scope: !6278)
!6282 = !DILocation(line: 0, scope: !6278)
!6283 = !DILocation(line: 458, column: 7, scope: !6279)
!6284 = !DILocation(line: 459, column: 21, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6278, file: !2656, line: 458, column: 21)
!6286 = !DILocation(line: 460, column: 4, scope: !6285)
!6287 = !DILocation(line: 461, column: 3, scope: !6285)
!6288 = !DILocation(line: 462, column: 21, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6278, file: !2656, line: 461, column: 10)
!6290 = !DILocation(line: 466, column: 8, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6279, file: !2656, line: 466, column: 7)
!6292 = !DILocation(line: 466, column: 7, scope: !6291)
!6293 = !DILocation(line: 466, column: 13, scope: !6291)
!6294 = !DILocation(line: 0, scope: !6291)
!6295 = !DILocation(line: 466, column: 7, scope: !6279)
!6296 = !DILocation(line: 467, column: 21, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6291, file: !2656, line: 466, column: 21)
!6298 = !DILocation(line: 468, column: 4, scope: !6297)
!6299 = !DILocation(line: 469, column: 3, scope: !6297)
!6300 = !DILocation(line: 470, column: 21, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6291, file: !2656, line: 469, column: 10)
!6302 = !DILocation(line: 474, column: 9, scope: !6279)
!6303 = !DILocation(line: 474, column: 20, scope: !6279)
!6304 = !DILocation(line: 475, column: 3, scope: !6279)
!6305 = !DILocation(line: 476, column: 3, scope: !6279)
!6306 = !DILocation(line: 478, column: 9, scope: !6279)
!6307 = !DILocation(line: 478, column: 20, scope: !6279)
!6308 = !DILocation(line: 479, column: 3, scope: !6279)
!6309 = !DILocation(line: 480, column: 3, scope: !6279)
!6310 = !DILocation(line: 482, column: 9, scope: !6279)
!6311 = !DILocation(line: 482, column: 20, scope: !6279)
!6312 = !DILocation(line: 483, column: 3, scope: !6279)
!6313 = !DILocation(line: 484, column: 3, scope: !6279)
!6314 = !DILocation(line: 486, column: 9, scope: !6279)
!6315 = !DILocation(line: 486, column: 20, scope: !6279)
!6316 = !DILocation(line: 487, column: 3, scope: !6279)
!6317 = !DILocation(line: 492, column: 21, scope: !6279)
!6318 = !DILocation(line: 493, column: 3, scope: !6279)
!6319 = !DILocation(line: 495, column: 9, scope: !6279)
!6320 = !DILocation(line: 495, column: 20, scope: !6279)
!6321 = !DILocation(line: 496, column: 3, scope: !6279)
!6322 = !DILocation(line: 498, column: 2, scope: !6270)
!6323 = distinct !DISubprogram(name: "extract_specifier", scope: !2656, file: !2656, line: 513, type: !6032, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6324)
!6324 = !{!6325, !6326, !6327, !6328}
!6325 = !DILocalVariable(name: "conv", arg: 1, scope: !6323, file: !2656, line: 513, type: !5688)
!6326 = !DILocalVariable(name: "sp", arg: 2, scope: !6323, file: !2656, line: 514, type: !121)
!6327 = !DILocalVariable(name: "unsupported", scope: !6323, file: !2656, line: 516, type: !136)
!6328 = !DILabel(scope: !6329, name: "int_conv", file: !2656, line: 526)
!6329 = distinct !DILexicalBlock(scope: !6323, file: !2656, line: 520, column: 27)
!6330 = !DILocation(line: 0, scope: !6323)
!6331 = !DILocation(line: 518, column: 20, scope: !6323)
!6332 = !DILocation(line: 518, column: 8, scope: !6323)
!6333 = !DILocation(line: 518, column: 18, scope: !6323)
!6334 = !DILocation(line: 520, column: 2, scope: !6323)
!6335 = !DILocation(line: 525, column: 3, scope: !6329)
!6336 = !DILocation(line: 0, scope: !6329)
!6337 = !DILocation(line: 526, column: 1, scope: !6329)
!6338 = !DILocation(line: 528, column: 24, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6329, file: !2656, line: 528, column: 7)
!6340 = !DILocation(line: 528, column: 7, scope: !6329)
!6341 = !DILocation(line: 535, column: 23, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6329, file: !2656, line: 535, column: 7)
!6343 = !DILocation(line: 535, column: 7, scope: !6329)
!6344 = !DILocation(line: 536, column: 36, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6342, file: !2656, line: 535, column: 31)
!6346 = !DILocation(line: 537, column: 3, scope: !6345)
!6347 = !DILocation(line: 570, column: 9, scope: !6329)
!6348 = !DILocation(line: 570, column: 23, scope: !6329)
!6349 = !DILocation(line: 575, column: 4, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !2656, line: 573, column: 48)
!6351 = distinct !DILexicalBlock(scope: !6329, file: !2656, line: 573, column: 7)
!6352 = !DILocation(line: 603, column: 9, scope: !6329)
!6353 = !DILocation(line: 603, column: 23, scope: !6329)
!6354 = !DILocation(line: 605, column: 24, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6329, file: !2656, line: 605, column: 7)
!6356 = !DILocation(line: 605, column: 7, scope: !6329)
!6357 = !DILocation(line: 612, column: 9, scope: !6329)
!6358 = !DILocation(line: 612, column: 23, scope: !6329)
!6359 = !DILocation(line: 619, column: 24, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6329, file: !2656, line: 619, column: 7)
!6361 = !DILocation(line: 619, column: 7, scope: !6329)
!6362 = !DILocation(line: 625, column: 9, scope: !6329)
!6363 = !DILocation(line: 625, column: 17, scope: !6329)
!6364 = !DILocation(line: 626, column: 3, scope: !6329)
!6365 = !DILocation(line: 629, column: 20, scope: !6323)
!6366 = !DILocation(line: 629, column: 8, scope: !6323)
!6367 = !DILocation(line: 518, column: 23, scope: !6323)
!6368 = !DILocation(line: 631, column: 2, scope: !6323)
!6369 = distinct !DISubprogram(name: "extract_decimal", scope: !2656, file: !2656, line: 318, type: !6370, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6372)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{!137, !395}
!6372 = !{!6373, !6374, !6375}
!6373 = !DILocalVariable(name: "str", arg: 1, scope: !6369, file: !2656, line: 318, type: !395)
!6374 = !DILocalVariable(name: "sp", scope: !6369, file: !2656, line: 320, type: !121)
!6375 = !DILocalVariable(name: "val", scope: !6369, file: !2656, line: 321, type: !137)
!6376 = !DILocation(line: 0, scope: !6369)
!6377 = !DILocation(line: 320, column: 19, scope: !6369)
!6378 = !DILocation(line: 323, column: 37, scope: !6369)
!6379 = !DILocation(line: 323, column: 17, scope: !6369)
!6380 = !DILocation(line: 323, column: 9, scope: !6369)
!6381 = !DILocation(line: 323, column: 2, scope: !6369)
!6382 = !DILocation(line: 324, column: 13, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6369, file: !2656, line: 323, column: 43)
!6384 = !DILocation(line: 324, column: 24, scope: !6383)
!6385 = !DILocation(line: 324, column: 19, scope: !6383)
!6386 = !DILocation(line: 324, column: 27, scope: !6383)
!6387 = distinct !{!6387, !6381, !6388}
!6388 = !DILocation(line: 325, column: 2, scope: !6369)
!6389 = !DILocation(line: 326, column: 7, scope: !6369)
!6390 = !DILocation(line: 327, column: 2, scope: !6369)
!6391 = distinct !DISubprogram(name: "isdigit", scope: !6171, file: !6171, line: 43, type: !418, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6392)
!6392 = !{!6393}
!6393 = !DILocalVariable(name: "a", arg: 1, scope: !6391, file: !6171, line: 43, type: !107)
!6394 = !DILocation(line: 0, scope: !6391)
!6395 = !DILocation(line: 45, column: 29, scope: !6391)
!6396 = !DILocation(line: 45, column: 45, scope: !6391)
!6397 = !DILocation(line: 45, column: 2, scope: !6391)
!6398 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6399, file: !6399, line: 9, type: !337, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !256)
!6399 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!6400 = !DILocation(line: 11, column: 1, scope: !6398)
!6401 = !{i64 2147565352, i64 2147565395, i64 2147565435}
!6402 = !DILocation(line: 12, column: 1, scope: !6398)
!6403 = !{i64 2147569579, i64 2147569622, i64 2147569662}
!6404 = !DILocation(line: 13, column: 1, scope: !6398)
!6405 = !{i64 2147569788, i64 2147569831, i64 2147569871}
!6406 = !DILocation(line: 14, column: 1, scope: !6398)
!6407 = !{i64 2147569957, i64 2147570000, i64 2147570040}
!6408 = !DILocation(line: 15, column: 1, scope: !6398)
!6409 = !{i64 2147570120, i64 2147570163, i64 2147570203}
!6410 = !DILocation(line: 16, column: 1, scope: !6398)
!6411 = !{i64 2147570304, i64 2147570347, i64 2147570387}
!6412 = !DILocation(line: 17, column: 1, scope: !6398)
!6413 = !{i64 2147570483, i64 2147570526, i64 2147570566}
!6414 = !DILocation(line: 18, column: 1, scope: !6398)
!6415 = !{i64 2147570725, i64 2147570768, i64 2147570808}
!6416 = !DILocation(line: 19, column: 1, scope: !6398)
!6417 = !{i64 2147570960, i64 2147571003, i64 2147571043}
!6418 = !DILocation(line: 20, column: 1, scope: !6398)
!6419 = !{i64 2147571147, i64 2147571190, i64 2147571230}
!6420 = !DILocation(line: 21, column: 1, scope: !6398)
!6421 = !{i64 2147571363, i64 2147571406, i64 2147571446}
!6422 = !DILocation(line: 22, column: 1, scope: !6398)
!6423 = !{i64 2147571566, i64 2147571609, i64 2147571649}
!6424 = !DILocation(line: 23, column: 1, scope: !6398)
!6425 = !{i64 2147571769, i64 2147571812, i64 2147571852}
!6426 = !DILocation(line: 24, column: 1, scope: !6398)
!6427 = !{i64 2147571944, i64 2147571987, i64 2147572027}
!6428 = !DILocation(line: 25, column: 1, scope: !6398)
!6429 = !{i64 2147572152, i64 2147572195, i64 2147572235}
!6430 = !DILocation(line: 26, column: 1, scope: !6398)
!6431 = !{i64 2147572356, i64 2147572399, i64 2147572439}
!6432 = !DILocation(line: 27, column: 1, scope: !6398)
!6433 = !{i64 2147572549, i64 2147572592, i64 2147572632}
!6434 = !DILocation(line: 28, column: 1, scope: !6398)
!6435 = !{i64 2147572751, i64 2147572794, i64 2147572834}
!6436 = !DILocation(line: 29, column: 1, scope: !6398)
!6437 = !{i64 2147572950, i64 2147572993, i64 2147573033}
!6438 = !DILocation(line: 30, column: 1, scope: !6398)
!6439 = !{i64 2147573177, i64 2147573220, i64 2147573260}
!6440 = !DILocation(line: 31, column: 1, scope: !6398)
!6441 = !{i64 2147573379, i64 2147573422, i64 2147573462}
!6442 = !DILocation(line: 32, column: 1, scope: !6398)
!6443 = !{i64 2147573594, i64 2147573637, i64 2147573677}
!6444 = !DILocation(line: 33, column: 1, scope: !6398)
!6445 = !{i64 2147573766, i64 2147573809, i64 2147573849}
!6446 = !DILocation(line: 34, column: 1, scope: !6398)
!6447 = !{i64 2147573968, i64 2147574011, i64 2147574051}
!6448 = !DILocation(line: 35, column: 1, scope: !6398)
!6449 = !{i64 2147574194, i64 2147574237, i64 2147574277}
!6450 = !DILocation(line: 36, column: 1, scope: !6398)
!6451 = !{i64 2147574393, i64 2147574436, i64 2147574476}
!6452 = !DILocation(line: 37, column: 1, scope: !6398)
!6453 = !{i64 2147574568, i64 2147574611, i64 2147574651}
!6454 = !DILocation(line: 38, column: 1, scope: !6398)
!6455 = !{i64 2147574821, i64 2147574864, i64 2147574904}
!6456 = !DILocation(line: 39, column: 1, scope: !6398)
!6457 = !{i64 2147575062, i64 2147575105, i64 2147575145}
!6458 = !DILocation(line: 40, column: 1, scope: !6398)
!6459 = !{i64 2147575297, i64 2147575340, i64 2147575380}
!6460 = !DILocation(line: 41, column: 1, scope: !6398)
!6461 = !{i64 2147575529, i64 2147575572, i64 2147575612}
!6462 = !DILocation(line: 42, column: 1, scope: !6398)
!6463 = !{i64 2147575755, i64 2147575798, i64 2147575838}
!6464 = !DILocation(line: 43, column: 1, scope: !6398)
!6465 = !{i64 2147575981, i64 2147576024, i64 2147576064}
!6466 = !DILocation(line: 44, column: 1, scope: !6398)
!6467 = !{i64 2147576207, i64 2147576250, i64 2147576290}
!6468 = !DILocation(line: 45, column: 1, scope: !6398)
!6469 = !{i64 2147576442, i64 2147576485, i64 2147576525}
!6470 = !DILocation(line: 46, column: 1, scope: !6398)
!6471 = !{i64 2147576668, i64 2147576711, i64 2147576751}
!6472 = !DILocation(line: 47, column: 1, scope: !6398)
!6473 = !{i64 2147576915, i64 2147576958, i64 2147576998}
!6474 = !DILocation(line: 48, column: 1, scope: !6398)
!6475 = !{i64 2147577144, i64 2147577187, i64 2147577227}
!6476 = !DILocation(line: 49, column: 1, scope: !6398)
!6477 = !{i64 2147577376, i64 2147577419, i64 2147577459}
!6478 = !DILocation(line: 50, column: 1, scope: !6398)
!6479 = !{i64 2147577620, i64 2147577663, i64 2147577703}
!6480 = !DILocation(line: 51, column: 1, scope: !6398)
!6481 = !{i64 2147577858, i64 2147577901, i64 2147577941}
!6482 = !DILocation(line: 52, column: 1, scope: !6398)
!6483 = !{i64 2147578132, i64 2147578175, i64 2147578215}
!6484 = !DILocation(line: 53, column: 1, scope: !6398)
!6485 = !{i64 2147582431, i64 2147582474, i64 2147582514}
!6486 = !DILocation(line: 54, column: 1, scope: !6398)
!6487 = !{i64 2147582684, i64 2147582727, i64 2147582767}
!6488 = !DILocation(line: 55, column: 1, scope: !6398)
!6489 = !{i64 2147582928, i64 2147582971, i64 2147583011}
!6490 = !DILocation(line: 56, column: 1, scope: !6398)
!6491 = !{i64 2147583163, i64 2147583206, i64 2147583246}
!6492 = !DILocation(line: 57, column: 1, scope: !6398)
!6493 = !{i64 2147583413, i64 2147583456, i64 2147583496}
!6494 = !DILocation(line: 58, column: 1, scope: !6398)
!6495 = !{i64 2147583660, i64 2147583703, i64 2147583743}
!6496 = !DILocation(line: 59, column: 1, scope: !6398)
!6497 = !{i64 2147583895, i64 2147583938, i64 2147583978}
!6498 = !DILocation(line: 60, column: 1, scope: !6398)
!6499 = !{i64 2147584130, i64 2147584173, i64 2147584213}
!6500 = !DILocation(line: 61, column: 1, scope: !6398)
!6501 = !{i64 2147584365, i64 2147584408, i64 2147584448}
!6502 = !DILocation(line: 62, column: 1, scope: !6398)
!6503 = !{i64 2147584603, i64 2147584646, i64 2147584686}
!6504 = !DILocation(line: 63, column: 1, scope: !6398)
!6505 = !{i64 2147584844, i64 2147584887, i64 2147584927}
!6506 = !DILocation(line: 64, column: 1, scope: !6398)
!6507 = !{i64 2147585124, i64 2147585167, i64 2147585207}
!6508 = !DILocation(line: 65, column: 1, scope: !6398)
!6509 = !{i64 2147585383, i64 2147585426, i64 2147585466}
!6510 = !DILocation(line: 66, column: 1, scope: !6398)
!6511 = !{i64 2147585612, i64 2147585655, i64 2147585695}
!6512 = !DILocation(line: 67, column: 1, scope: !6398)
!6513 = !{i64 2147585838, i64 2147585881, i64 2147585921}
!6514 = !DILocation(line: 68, column: 1, scope: !6398)
!6515 = !{i64 2147586076, i64 2147586119, i64 2147586159}
!6516 = !DILocation(line: 69, column: 1, scope: !6398)
!6517 = !{i64 2147586305, i64 2147586348, i64 2147586388}
!6518 = !DILocation(line: 70, column: 1, scope: !6398)
!6519 = !{i64 2147586513, i64 2147586556, i64 2147586596}
!6520 = !DILocation(line: 71, column: 1, scope: !6398)
!6521 = !{i64 2147586724, i64 2147586767, i64 2147586807}
!6522 = !DILocation(line: 72, column: 1, scope: !6398)
!6523 = !{i64 2147586959, i64 2147587002, i64 2147587042}
!6524 = !DILocation(line: 73, column: 1, scope: !6398)
!6525 = !{i64 2147587188, i64 2147587231, i64 2147587271}
!6526 = !DILocation(line: 74, column: 1, scope: !6398)
!6527 = !{i64 2147587405, i64 2147587448, i64 2147587488}
!6528 = !DILocation(line: 75, column: 1, scope: !6398)
!6529 = !{i64 2147587634, i64 2147587677, i64 2147587717}
!6530 = !DILocation(line: 76, column: 1, scope: !6398)
!6531 = !{i64 2147587872, i64 2147587915, i64 2147587955}
!6532 = !DILocation(line: 77, column: 1, scope: !6398)
!6533 = !{i64 2147588104, i64 2147588147, i64 2147588187}
!6534 = !DILocation(line: 78, column: 1, scope: !6398)
!6535 = !{i64 2147588330, i64 2147588373, i64 2147588413}
!6536 = !DILocation(line: 79, column: 1, scope: !6398)
!6537 = !{i64 2147588547, i64 2147588590, i64 2147588630}
!6538 = !DILocation(line: 80, column: 1, scope: !6398)
!6539 = !{i64 2147588779, i64 2147588822, i64 2147588862}
!6540 = !DILocation(line: 81, column: 1, scope: !6398)
!6541 = !{i64 2147589005, i64 2147589048, i64 2147589088}
!6542 = !DILocation(line: 82, column: 1, scope: !6398)
!6543 = !{i64 2147589219, i64 2147589262, i64 2147589302}
!6544 = !DILocation(line: 83, column: 1, scope: !6398)
!6545 = !{i64 2147589439, i64 2147589482, i64 2147589522}
!6546 = !DILocation(line: 84, column: 1, scope: !6398)
!6547 = !{i64 2147589671, i64 2147589714, i64 2147589754}
!6548 = !DILocation(line: 85, column: 1, scope: !6398)
!6549 = !{i64 2147589879, i64 2147589922, i64 2147589962}
!6550 = !DILocation(line: 86, column: 1, scope: !6398)
!6551 = !{i64 2147590084, i64 2147590127, i64 2147590167}
!6552 = !DILocation(line: 87, column: 1, scope: !6398)
!6553 = !{i64 2147590301, i64 2147590344, i64 2147590384}
!6554 = !DILocation(line: 88, column: 1, scope: !6398)
!6555 = !{i64 2147594576, i64 2147594619, i64 2147594659}
!6556 = !DILocation(line: 89, column: 1, scope: !6398)
!6557 = !{i64 2147594802, i64 2147594845, i64 2147594885}
!6558 = !DILocation(line: 90, column: 1, scope: !6398)
!6559 = !{i64 2147595022, i64 2147595065, i64 2147595105}
!6560 = !DILocation(line: 91, column: 1, scope: !6398)
!6561 = !{i64 2147595227, i64 2147595270, i64 2147595310}
!6562 = !DILocation(line: 92, column: 1, scope: !6398)
!6563 = !{i64 2147595459, i64 2147595502, i64 2147595542}
!6564 = !DILocation(line: 93, column: 1, scope: !6398)
!6565 = !{i64 2147595694, i64 2147595737, i64 2147595777}
!6566 = !DILocation(line: 94, column: 1, scope: !6398)
!6567 = !{i64 2147595944, i64 2147595987, i64 2147596027}
!6568 = !DILocation(line: 95, column: 1, scope: !6398)
!6569 = !{i64 2147596194, i64 2147596237, i64 2147596277}
!6570 = !DILocation(line: 96, column: 1, scope: !6398)
!6571 = !{i64 2147596432, i64 2147596475, i64 2147596515}
!6572 = !DILocation(line: 97, column: 1, scope: !6398)
!6573 = !{i64 2147596643, i64 2147596686, i64 2147596726}
!6574 = !DILocation(line: 98, column: 1, scope: !6398)
!6575 = !{i64 2147596860, i64 2147596903, i64 2147596943}
!6576 = !DILocation(line: 99, column: 1, scope: !6398)
!6577 = !{i64 2147597056, i64 2147597099, i64 2147597139}
!6578 = !DILocation(line: 100, column: 1, scope: !6398)
!6579 = !{i64 2147597258, i64 2147597301, i64 2147597341}
!6580 = !DILocation(line: 101, column: 1, scope: !6398)
!6581 = !{i64 2147597451, i64 2147597494, i64 2147597534}
!6582 = !DILocation(line: 102, column: 1, scope: !6398)
!6583 = !{i64 2147597659, i64 2147597702, i64 2147597742}
!6584 = !DILocation(line: 103, column: 1, scope: !6398)
!6585 = !{i64 2147597855, i64 2147597898, i64 2147597938}
!6586 = !DILocation(line: 104, column: 1, scope: !6398)
!6587 = !{i64 2147598063, i64 2147598106, i64 2147598146}
!6588 = !DILocation(line: 105, column: 1, scope: !6398)
!6589 = !{i64 2147598274, i64 2147598317, i64 2147598357}
!6590 = !DILocation(line: 106, column: 1, scope: !6398)
!6591 = !{i64 2147598473, i64 2147598516, i64 2147598556}
!6592 = !DILocation(line: 107, column: 1, scope: !6398)
!6593 = !{i64 2147598648, i64 2147598691, i64 2147598731}
!6594 = !DILocation(line: 108, column: 1, scope: !6398)
!6595 = !{i64 2147598832, i64 2147598875, i64 2147598915}
!6596 = !DILocation(line: 109, column: 1, scope: !6398)
!6597 = !{i64 2147599034, i64 2147599077, i64 2147599117}
!6598 = !DILocation(line: 110, column: 1, scope: !6398)
!6599 = !{i64 2147599233, i64 2147599276, i64 2147599316}
!6600 = !DILocation(line: 111, column: 1, scope: !6398)
!6601 = !{i64 2147599438, i64 2147599481, i64 2147599521}
!6602 = !DILocation(line: 112, column: 1, scope: !6398)
!6603 = !{i64 2147599631, i64 2147599674, i64 2147599714}
!6604 = !DILocation(line: 113, column: 1, scope: !6398)
!6605 = !{i64 2147599797, i64 2147599840, i64 2147599880}
!6606 = !DILocation(line: 114, column: 1, scope: !6398)
!6607 = !{i64 2147599981, i64 2147600024, i64 2147600064}
!6608 = !DILocation(line: 115, column: 1, scope: !6398)
!6609 = !{i64 2147600171, i64 2147600214, i64 2147600254}
!6610 = !DILocation(line: 116, column: 1, scope: !6398)
!6611 = !{i64 2147600355, i64 2147600398, i64 2147600438}
!6612 = !DILocation(line: 117, column: 1, scope: !6398)
!6613 = !{i64 2147600569, i64 2147600612, i64 2147600652}
!6614 = !DILocation(line: 118, column: 1, scope: !6398)
!6615 = !{i64 2147600780, i64 2147600823, i64 2147600863}
!6616 = !DILocation(line: 119, column: 1, scope: !6398)
!6617 = !{i64 2147601003, i64 2147601046, i64 2147601086}
!6618 = !DILocation(line: 120, column: 1, scope: !6398)
!6619 = !{i64 2147601187, i64 2147601230, i64 2147601270}
!6620 = !DILocation(line: 121, column: 1, scope: !6398)
!6621 = !{i64 2147601401, i64 2147601444, i64 2147601484}
!6622 = !DILocation(line: 122, column: 1, scope: !6398)
!6623 = !{i64 2147601567, i64 2147601610, i64 2147601650}
!6624 = !DILocation(line: 123, column: 1, scope: !6398)
!6625 = !{i64 2147601748, i64 2147601791, i64 2147601831}
!6626 = !DILocation(line: 124, column: 1, scope: !6398)
!6627 = !{i64 2147601941, i64 2147601984, i64 2147602024}
!6628 = !DILocation(line: 125, column: 1, scope: !6398)
!6629 = !{i64 2147602167, i64 2147602210, i64 2147602250}
!6630 = !DILocation(line: 126, column: 1, scope: !6398)
!6631 = !{i64 2147602381, i64 2147602424, i64 2147602464}
!6632 = !DILocation(line: 127, column: 1, scope: !6398)
!6633 = !{i64 2147602607, i64 2147602650, i64 2147602690}
!6634 = !DILocation(line: 128, column: 1, scope: !6398)
!6635 = !{i64 2147602824, i64 2147602867, i64 2147602907}
!6636 = !DILocation(line: 129, column: 1, scope: !6398)
!6637 = !{i64 2147603101, i64 2147603144, i64 2147603184}
!6638 = !DILocation(line: 130, column: 1, scope: !6398)
!6639 = !{i64 2147603327, i64 2147603370, i64 2147603410}
!6640 = !DILocation(line: 131, column: 1, scope: !6398)
!6641 = !{i64 2147603535, i64 2147603578, i64 2147603618}
!6642 = !DILocation(line: 132, column: 1, scope: !6398)
!6643 = !{i64 2147607792, i64 2147607835, i64 2147607875}
!6644 = !DILocation(line: 133, column: 1, scope: !6398)
!6645 = !{i64 2147608057, i64 2147608100, i64 2147608140}
!6646 = !DILocation(line: 134, column: 1, scope: !6398)
!6647 = !{i64 2147608271, i64 2147608314, i64 2147608354}
!6648 = !DILocation(line: 135, column: 1, scope: !6398)
!6649 = !{i64 2147608446, i64 2147608489, i64 2147608529}
!6650 = !DILocation(line: 136, column: 1, scope: !6398)
!6651 = !{i64 2147608700, i64 2147608743, i64 2147608783}
!6652 = !DILocation(line: 137, column: 1, scope: !6398)
!6653 = !{i64 2147608899, i64 2147608942, i64 2147608982}
!6654 = !DILocation(line: 138, column: 1, scope: !6398)
!6655 = !{i64 2147609141, i64 2147609184, i64 2147609224}
!6656 = !DILocation(line: 139, column: 1, scope: !6398)
!6657 = !{i64 2147609304, i64 2147609347, i64 2147609387}
!6658 = !DILocation(line: 140, column: 1, scope: !6398)
!6659 = !{i64 2147609491, i64 2147609534, i64 2147609574}
!6660 = !DILocation(line: 141, column: 1, scope: !6398)
!6661 = !{i64 2147609699, i64 2147609742, i64 2147609782}
!6662 = !DILocation(line: 142, column: 1, scope: !6398)
!6663 = !{i64 2147609895, i64 2147609938, i64 2147609978}
!6664 = !DILocation(line: 143, column: 1, scope: !6398)
!6665 = !{i64 2147610088, i64 2147610131, i64 2147610171}
!6666 = !DILocation(line: 144, column: 1, scope: !6398)
!6667 = !{i64 2147610271, i64 2147610314, i64 2147610354}
!6668 = !DILocation(line: 145, column: 1, scope: !6398)
!6669 = !{i64 2147610485, i64 2147610528, i64 2147610568}
!6670 = !DILocation(line: 146, column: 1, scope: !6398)
!6671 = !{i64 2147610696, i64 2147610739, i64 2147610779}
!6672 = !DILocation(line: 147, column: 1, scope: !6398)
!6673 = !{i64 2147610916, i64 2147610959, i64 2147610999}
!6674 = !DILocation(line: 148, column: 1, scope: !6398)
!6675 = !{i64 2147611123, i64 2147611166, i64 2147611206}
!6676 = !DILocation(line: 149, column: 1, scope: !6398)
!6677 = !{i64 2147611396, i64 2147611439, i64 2147611479}
!6678 = !DILocation(line: 150, column: 1, scope: !6398)
!6679 = !{i64 2147611644, i64 2147611687, i64 2147611727}
!6680 = !DILocation(line: 151, column: 1, scope: !6398)
!6681 = !{i64 2147611843, i64 2147611886, i64 2147611926}
!6682 = !DILocation(line: 152, column: 1, scope: !6398)
!6683 = !{i64 2147612078, i64 2147612121, i64 2147612161}
!6684 = !DILocation(line: 153, column: 1, scope: !6398)
!6685 = !{i64 2147612328, i64 2147612371, i64 2147612411}
!6686 = !DILocation(line: 154, column: 1, scope: !6398)
!6687 = !{i64 2147612530, i64 2147612573, i64 2147612613}
!6688 = !DILocation(line: 155, column: 1, scope: !6398)
!6689 = !{i64 2147612753, i64 2147612796, i64 2147612836}
!6690 = !DILocation(line: 156, column: 1, scope: !6398)
!6691 = !{i64 2147612967, i64 2147613010, i64 2147613050}
!6692 = !DILocation(line: 157, column: 1, scope: !6398)
!6693 = !{i64 2147613211, i64 2147613254, i64 2147613294}
!6694 = !DILocation(line: 158, column: 1, scope: !6398)
!6695 = !{i64 2147613440, i64 2147613483, i64 2147613523}
!6696 = !DILocation(line: 159, column: 1, scope: !6398)
!6697 = !{i64 2147613669, i64 2147613712, i64 2147613752}
!6698 = !DILocation(line: 160, column: 1, scope: !6398)
!6699 = !{i64 2147613877, i64 2147613920, i64 2147613960}
!6700 = !DILocation(line: 161, column: 1, scope: !6398)
!6701 = !{i64 2147614115, i64 2147614158, i64 2147614198}
!6702 = !DILocation(line: 162, column: 1, scope: !6398)
!6703 = !{i64 2147614341, i64 2147614384, i64 2147614424}
!6704 = !DILocation(line: 163, column: 1, scope: !6398)
!6705 = !{i64 2147614600, i64 2147614643, i64 2147614683}
!6706 = !DILocation(line: 164, column: 1, scope: !6398)
!6707 = !{i64 2147614820, i64 2147614863, i64 2147614903}
!6708 = !DILocation(line: 165, column: 1, scope: !6398)
!6709 = !{i64 2147615052, i64 2147615095, i64 2147615135}
!6710 = !DILocation(line: 166, column: 1, scope: !6398)
!6711 = !{i64 2147615293, i64 2147615336, i64 2147615376}
!6712 = !DILocation(line: 167, column: 1, scope: !6398)
!6713 = !{i64 2147615534, i64 2147615577, i64 2147615617}
!6714 = !DILocation(line: 168, column: 1, scope: !6398)
!6715 = !{i64 2147615757, i64 2147615800, i64 2147615840}
!6716 = !DILocation(line: 169, column: 1, scope: !6398)
!6717 = !{i64 2147615974, i64 2147616017, i64 2147616057}
!6718 = !DILocation(line: 170, column: 1, scope: !6398)
!6719 = !{i64 2147616215, i64 2147616258, i64 2147616298}
!6720 = !DILocation(line: 171, column: 1, scope: !6398)
!6721 = !{i64 2147620463, i64 2147620506, i64 2147620546}
!6722 = !DILocation(line: 172, column: 1, scope: !6398)
!6723 = !{i64 2147620650, i64 2147620693, i64 2147620733}
!6724 = !DILocation(line: 173, column: 1, scope: !6398)
!6725 = !{i64 2147620813, i64 2147620856, i64 2147620896}
!6726 = !DILocation(line: 174, column: 1, scope: !6398)
!6727 = !{i64 2147621018, i64 2147621061, i64 2147621101}
!6728 = !DILocation(line: 175, column: 1, scope: !6398)
!6729 = !{i64 2147621211, i64 2147621254, i64 2147621294}
!6730 = !DILocation(line: 176, column: 1, scope: !6398)
!6731 = !{i64 2147621470, i64 2147621513, i64 2147621553}
!6732 = !DILocation(line: 177, column: 1, scope: !6398)
!6733 = !{i64 2147621693, i64 2147621736, i64 2147621776}
!6734 = !DILocation(line: 178, column: 1, scope: !6398)
!6735 = !{i64 2147621922, i64 2147621965, i64 2147622005}
!6736 = !DILocation(line: 179, column: 1, scope: !6398)
!6737 = !{i64 2147622136, i64 2147622179, i64 2147622219}
!6738 = !DILocation(line: 180, column: 1, scope: !6398)
!6739 = !{i64 2147622338, i64 2147622381, i64 2147622421}
!6740 = !DILocation(line: 181, column: 1, scope: !6398)
!6741 = !{i64 2147622534, i64 2147622577, i64 2147622617}
!6742 = !DILocation(line: 182, column: 1, scope: !6398)
!6743 = !{i64 2147622746, i64 2147622789, i64 2147622829}
!6744 = !DILocation(line: 183, column: 1, scope: !6398)
!6745 = !{i64 2147622967, i64 2147623010, i64 2147623050}
!6746 = !DILocation(line: 184, column: 1, scope: !6398)
!6747 = !{i64 2147623181, i64 2147623224, i64 2147623264}
!6748 = !DILocation(line: 185, column: 1, scope: !6398)
!6749 = !{i64 2147623371, i64 2147623414, i64 2147623454}
!6750 = !DILocation(line: 186, column: 1, scope: !6398)
!6751 = !{i64 2147623570, i64 2147623613, i64 2147623653}
!6752 = !DILocation(line: 187, column: 1, scope: !6398)
!6753 = !{i64 2147623775, i64 2147623818, i64 2147623858}
!6754 = !DILocation(line: 188, column: 1, scope: !6398)
!6755 = !{i64 2147623995, i64 2147624038, i64 2147624078}
!6756 = !DILocation(line: 189, column: 1, scope: !6398)
!6757 = !{i64 2147624196, i64 2147624239, i64 2147624279}
!6758 = !DILocation(line: 190, column: 1, scope: !6398)
!6759 = !{i64 2147624395, i64 2147624438, i64 2147624478}
!6760 = !DILocation(line: 191, column: 1, scope: !6398)
!6761 = !{i64 2147624600, i64 2147624643, i64 2147624683}
!6762 = !DILocation(line: 192, column: 1, scope: !6398)
!6763 = !{i64 2147624769, i64 2147624812, i64 2147624852}
!6764 = !DILocation(line: 193, column: 1, scope: !6398)
!6765 = !{i64 2147624953, i64 2147624996, i64 2147625036}
!6766 = !DILocation(line: 194, column: 1, scope: !6398)
!6767 = !{i64 2147625137, i64 2147625180, i64 2147625220}
!6768 = !DILocation(line: 195, column: 1, scope: !6398)
!6769 = !{i64 2147625321, i64 2147625364, i64 2147625404}
!6770 = !DILocation(line: 196, column: 1, scope: !6398)
!6771 = !{i64 2147625559, i64 2147625602, i64 2147625642}
!6772 = !DILocation(line: 197, column: 1, scope: !6398)
!6773 = !{i64 2147625789, i64 2147625832, i64 2147625872}
!6774 = !DILocation(line: 198, column: 1, scope: !6398)
!6775 = !{i64 2147626018, i64 2147626061, i64 2147626101}
!6776 = !DILocation(line: 199, column: 1, scope: !6398)
!6777 = !{i64 2147626205, i64 2147626248, i64 2147626288}
!6778 = !DILocation(line: 200, column: 1, scope: !6398)
!6779 = !{i64 2147626401, i64 2147626444, i64 2147626484}
!6780 = !DILocation(line: 201, column: 1, scope: !6398)
!6781 = !{i64 2147626609, i64 2147626652, i64 2147626692}
!6782 = !DILocation(line: 202, column: 1, scope: !6398)
!6783 = !{i64 2147626821, i64 2147626864, i64 2147626904}
!6784 = !DILocation(line: 203, column: 1, scope: !6398)
!6785 = !{i64 2147627020, i64 2147627063, i64 2147627103}
!6786 = !DILocation(line: 204, column: 1, scope: !6398)
!6787 = !{i64 2147627258, i64 2147627301, i64 2147627341}
!6788 = !DILocation(line: 205, column: 1, scope: !6398)
!6789 = !{i64 2147627454, i64 2147627497, i64 2147627537}
!6790 = !DILocation(line: 206, column: 1, scope: !6398)
!6791 = !{i64 2147627656, i64 2147627699, i64 2147627739}
!6792 = !DILocation(line: 207, column: 1, scope: !6398)
!6793 = !{i64 2147627849, i64 2147627892, i64 2147627932}
!6794 = !DILocation(line: 208, column: 1, scope: !6398)
!6795 = !{i64 2147628083, i64 2147628126, i64 2147628166}
!6796 = !DILocation(line: 209, column: 1, scope: !6398)
!6797 = !{i64 2147628246, i64 2147628289, i64 2147628329}
!6798 = !DILocation(line: 210, column: 1, scope: !6398)
!6799 = !{i64 2147628485, i64 2147628528, i64 2147628568}
!6800 = !DILocation(line: 211, column: 1, scope: !6398)
!6801 = !{i64 2147628724, i64 2147628767, i64 2147628807}
!6802 = !DILocation(line: 212, column: 1, scope: !6398)
!6803 = !{i64 2147628960, i64 2147629003, i64 2147629043}
!6804 = !DILocation(line: 213, column: 1, scope: !6398)
!6805 = !{i64 2147629190, i64 2147629233, i64 2147629273}
!6806 = !DILocation(line: 214, column: 1, scope: !6398)
!6807 = !{i64 2147629377, i64 2147629420, i64 2147629460}
!6808 = !DILocation(line: 215, column: 1, scope: !6398)
!6809 = !{i64 2147633637, i64 2147633680, i64 2147633720}
!6810 = !DILocation(line: 216, column: 1, scope: !6398)
!6811 = !{i64 2147633908, i64 2147633951, i64 2147633991}
!6812 = !DILocation(line: 217, column: 1, scope: !6398)
!6813 = !{i64 2147634083, i64 2147634126, i64 2147634166}
!6814 = !DILocation(line: 218, column: 1, scope: !6398)
!6815 = !{i64 2147634317, i64 2147634360, i64 2147634400}
!6816 = !DILocation(line: 219, column: 1, scope: !6398)
!6817 = !{i64 2147634525, i64 2147634568, i64 2147634608}
!6818 = !DILocation(line: 220, column: 1, scope: !6398)
!6819 = !{i64 2147634743, i64 2147634786, i64 2147634826}
!6820 = !DILocation(line: 221, column: 1, scope: !6398)
!6821 = !{i64 2147634933, i64 2147634976, i64 2147635016}
!6822 = !DILocation(line: 222, column: 1, scope: !6398)
!6823 = !{i64 2147635165, i64 2147635208, i64 2147635248}
!6824 = !DILocation(line: 223, column: 1, scope: !6398)
!6825 = !{i64 2147635385, i64 2147635428, i64 2147635468}
!6826 = !DILocation(line: 224, column: 1, scope: !6398)
!6827 = !{i64 2147635581, i64 2147635624, i64 2147635664}
!6828 = !DILocation(line: 225, column: 1, scope: !6398)
!6829 = !{i64 2147635787, i64 2147635830, i64 2147635870}
!6830 = !DILocation(line: 226, column: 1, scope: !6398)
!6831 = !{i64 2147635992, i64 2147636035, i64 2147636075}
!6832 = !DILocation(line: 227, column: 1, scope: !6398)
!6833 = !{i64 2147636206, i64 2147636249, i64 2147636289}
!6834 = !DILocation(line: 228, column: 1, scope: !6398)
!6835 = !{i64 2147636432, i64 2147636475, i64 2147636515}
!6836 = !DILocation(line: 229, column: 1, scope: !6398)
!6837 = !{i64 2147636640, i64 2147636683, i64 2147636723}
!6838 = !DILocation(line: 230, column: 1, scope: !6398)
!6839 = !{i64 2147636836, i64 2147636879, i64 2147636919}
!6840 = !DILocation(line: 231, column: 1, scope: !6398)
!6841 = !{i64 2147637068, i64 2147637111, i64 2147637151}
!6842 = !DILocation(line: 232, column: 1, scope: !6398)
!6843 = !{i64 2147637252, i64 2147637295, i64 2147637335}
!6844 = !DILocation(line: 233, column: 1, scope: !6398)
!6845 = !{i64 2147637461, i64 2147637504, i64 2147637544}
!6846 = !DILocation(line: 234, column: 1, scope: !6398)
!6847 = !{i64 2147637669, i64 2147637712, i64 2147637752}
!6848 = !DILocation(line: 235, column: 1, scope: !6398)
!6849 = !{i64 2147637865, i64 2147637908, i64 2147637948}
!6850 = !DILocation(line: 236, column: 1, scope: !6398)
!6851 = !{i64 2147638049, i64 2147638092, i64 2147638132}
!6852 = !DILocation(line: 237, column: 1, scope: !6398)
!6853 = !{i64 2147638275, i64 2147638318, i64 2147638358}
!6854 = !DILocation(line: 238, column: 1, scope: !6398)
!6855 = !{i64 2147638501, i64 2147638544, i64 2147638584}
!6856 = !DILocation(line: 239, column: 1, scope: !6398)
!6857 = !{i64 2147638727, i64 2147638770, i64 2147638810}
!6858 = !DILocation(line: 240, column: 1, scope: !6398)
!6859 = !{i64 2147638953, i64 2147638996, i64 2147639036}
!6860 = !DILocation(line: 241, column: 1, scope: !6398)
!6861 = !{i64 2147639179, i64 2147639222, i64 2147639262}
!6862 = !DILocation(line: 242, column: 1, scope: !6398)
!6863 = !{i64 2147639411, i64 2147639454, i64 2147639494}
!6864 = !DILocation(line: 243, column: 1, scope: !6398)
!6865 = !{i64 2147639649, i64 2147639692, i64 2147639732}
!6866 = !DILocation(line: 244, column: 1, scope: !6398)
!6867 = !{i64 2147639869, i64 2147639912, i64 2147639952}
!6868 = !DILocation(line: 245, column: 1, scope: !6398)
!6869 = !{i64 2147640113, i64 2147640156, i64 2147640196}
!6870 = !DILocation(line: 246, column: 1, scope: !6398)
!6871 = !{i64 2147640354, i64 2147640397, i64 2147640437}
!6872 = !DILocation(line: 247, column: 1, scope: !6398)
!6873 = !{i64 2147640589, i64 2147640632, i64 2147640672}
!6874 = !DILocation(line: 248, column: 1, scope: !6398)
!6875 = !{i64 2147640821, i64 2147640864, i64 2147640904}
!6876 = !DILocation(line: 249, column: 1, scope: !6398)
!6877 = !{i64 2147641023, i64 2147641066, i64 2147641106}
!6878 = !DILocation(line: 250, column: 1, scope: !6398)
!6879 = !{i64 2147641273, i64 2147641316, i64 2147641356}
!6880 = !DILocation(line: 251, column: 1, scope: !6398)
!6881 = !{i64 2147641511, i64 2147641554, i64 2147641594}
!6882 = !DILocation(line: 252, column: 1, scope: !6398)
!6883 = !{i64 2147641719, i64 2147641762, i64 2147641802}
!6884 = !DILocation(line: 253, column: 1, scope: !6398)
!6885 = !{i64 2147641915, i64 2147641958, i64 2147641998}
!6886 = !DILocation(line: 254, column: 1, scope: !6398)
!6887 = !{i64 2147642099, i64 2147642142, i64 2147642182}
!6888 = !DILocation(line: 255, column: 1, scope: !6398)
!6889 = !{i64 2147646377, i64 2147646420, i64 2147646460}
!6890 = !DILocation(line: 256, column: 1, scope: !6398)
!6891 = !{i64 2147646582, i64 2147646625, i64 2147646665}
!6892 = !DILocation(line: 257, column: 1, scope: !6398)
!6893 = !{i64 2147646817, i64 2147646860, i64 2147646900}
!6894 = !DILocation(line: 258, column: 1, scope: !6398)
!6895 = !{i64 2147647040, i64 2147647083, i64 2147647123}
!6896 = !DILocation(line: 259, column: 1, scope: !6398)
!6897 = !{i64 2147647264, i64 2147647307, i64 2147647347}
!6898 = !DILocation(line: 260, column: 1, scope: !6398)
!6899 = !{i64 2147647502, i64 2147647545, i64 2147647585}
!6900 = !DILocation(line: 261, column: 1, scope: !6398)
!6901 = !{i64 2147647740, i64 2147647783, i64 2147647823}
!6902 = !DILocation(line: 262, column: 1, scope: !6398)
!6903 = !{i64 2147647957, i64 2147648000, i64 2147648040}
!6904 = !DILocation(line: 263, column: 1, scope: !6398)
!6905 = !{i64 2147648162, i64 2147648205, i64 2147648245}
!6906 = !DILocation(line: 264, column: 1, scope: !6398)
!6907 = !{i64 2147648355, i64 2147648398, i64 2147648438}
!6908 = !DILocation(line: 265, column: 1, scope: !6398)
!6909 = !{i64 2147648608, i64 2147648651, i64 2147648691}
!6910 = !DILocation(line: 266, column: 1, scope: !6398)
!6911 = !{i64 2147648816, i64 2147648859, i64 2147648899}
!6912 = !DILocation(line: 267, column: 1, scope: !6398)
!6913 = !{i64 2147649012, i64 2147649055, i64 2147649095}
!6914 = !DILocation(line: 268, column: 1, scope: !6398)
!6915 = !{i64 2147649226, i64 2147649269, i64 2147649309}
!6916 = !DILocation(line: 269, column: 1, scope: !6398)
!6917 = !{i64 2147649434, i64 2147649477, i64 2147649517}
!6918 = !DILocation(line: 270, column: 1, scope: !6398)
!6919 = !{i64 2147649624, i64 2147649667, i64 2147649707}
!6920 = !DILocation(line: 271, column: 1, scope: !6398)
!6921 = !{i64 2147649838, i64 2147649881, i64 2147649921}
!6922 = !DILocation(line: 272, column: 1, scope: !6398)
!6923 = !{i64 2147650100, i64 2147650143, i64 2147650183}
!6924 = !DILocation(line: 273, column: 1, scope: !6398)
!6925 = !{i64 2147650311, i64 2147650354, i64 2147650394}
!6926 = !DILocation(line: 274, column: 1, scope: !6398)
!6927 = !{i64 2147650555, i64 2147650598, i64 2147650638}
!6928 = !DILocation(line: 275, column: 1, scope: !6398)
!6929 = !{i64 2147650766, i64 2147650809, i64 2147650849}
!6930 = !DILocation(line: 276, column: 1, scope: !6398)
!6931 = !{i64 2147650995, i64 2147651038, i64 2147651078}
!6932 = !DILocation(line: 277, column: 1, scope: !6398)
!6933 = !{i64 2147651260, i64 2147651303, i64 2147651343}
!6934 = !DILocation(line: 278, column: 1, scope: !6398)
!6935 = !{i64 2147651465, i64 2147651508, i64 2147651548}
!6936 = !DILocation(line: 279, column: 1, scope: !6398)
!6937 = !{i64 2147651661, i64 2147651704, i64 2147651744}
!6938 = !DILocation(line: 280, column: 1, scope: !6398)
!6939 = !{i64 2147651884, i64 2147651927, i64 2147651967}
!6940 = !DILocation(line: 281, column: 1, scope: !6398)
!6941 = !{i64 2147652047, i64 2147652090, i64 2147652130}
!6942 = !DILocation(line: 282, column: 1, scope: !6398)
!6943 = !{i64 2147652252, i64 2147652295, i64 2147652335}
!6944 = !DILocation(line: 283, column: 1, scope: !6398)
!6945 = !{i64 2147652472, i64 2147652515, i64 2147652555}
!6946 = !DILocation(line: 284, column: 1, scope: !6398)
!6947 = !{i64 2147652686, i64 2147652729, i64 2147652769}
!6948 = !DILocation(line: 285, column: 1, scope: !6398)
!6949 = !{i64 2147652930, i64 2147652973, i64 2147653013}
!6950 = !DILocation(line: 286, column: 1, scope: !6398)
!6951 = !{i64 2147653162, i64 2147653205, i64 2147653245}
!6952 = !DILocation(line: 287, column: 1, scope: !6398)
!6953 = !{i64 2147653376, i64 2147653419, i64 2147653459}
!6954 = !DILocation(line: 288, column: 1, scope: !6398)
!6955 = !{i64 2147653587, i64 2147653630, i64 2147653670}
!6956 = !DILocation(line: 289, column: 1, scope: !6398)
!6957 = !{i64 2147653780, i64 2147653823, i64 2147653863}
!6958 = !DILocation(line: 290, column: 1, scope: !6398)
!6959 = !{i64 2147653979, i64 2147654022, i64 2147654062}
!6960 = !DILocation(line: 291, column: 1, scope: !6398)
!6961 = !{i64 2147654151, i64 2147654194, i64 2147654234}
!6962 = !DILocation(line: 292, column: 1, scope: !6398)
!6963 = !{i64 2147654347, i64 2147654390, i64 2147654430}
!6964 = !DILocation(line: 293, column: 1, scope: !6398)
!6965 = !{i64 2147654510, i64 2147654553, i64 2147654593}
!6966 = !DILocation(line: 294, column: 1, scope: !6398)
!6967 = !{i64 2147654712, i64 2147654755, i64 2147654795}
!6968 = !DILocation(line: 295, column: 1, scope: !6398)
!6969 = !{i64 2147654917, i64 2147654960, i64 2147655000}
!6970 = !DILocation(line: 296, column: 1, scope: !6398)
!6971 = !{i64 2147655125, i64 2147655168, i64 2147655208}
!6972 = !DILocation(line: 297, column: 1, scope: !6398)
!6973 = !{i64 2147659379, i64 2147659422, i64 2147659462}
!6974 = !DILocation(line: 298, column: 1, scope: !6398)
!6975 = !{i64 2147659566, i64 2147659609, i64 2147659649}
!6976 = !DILocation(line: 299, column: 1, scope: !6398)
!6977 = !{i64 2147659793, i64 2147659836, i64 2147659876}
!6978 = !DILocation(line: 300, column: 1, scope: !6398)
!6979 = !{i64 2147659959, i64 2147660002, i64 2147660042}
!6980 = !DILocation(line: 301, column: 1, scope: !6398)
!6981 = !{i64 2147660197, i64 2147660240, i64 2147660280}
!6982 = !DILocation(line: 302, column: 1, scope: !6398)
!6983 = !{i64 2147660402, i64 2147660445, i64 2147660485}
!6984 = !DILocation(line: 303, column: 1, scope: !6398)
!6985 = !{i64 2147660610, i64 2147660653, i64 2147660693}
!6986 = !DILocation(line: 304, column: 1, scope: !6398)
!6987 = !{i64 2147660860, i64 2147660903, i64 2147660943}
!6988 = !DILocation(line: 305, column: 1, scope: !6398)
!6989 = !{i64 2147661068, i64 2147661111, i64 2147661151}
!6990 = !DILocation(line: 306, column: 1, scope: !6398)
!6991 = !{i64 2147661264, i64 2147661307, i64 2147661347}
!6992 = !DILocation(line: 307, column: 1, scope: !6398)
!6993 = !{i64 2147661481, i64 2147661524, i64 2147661564}
!6994 = !DILocation(line: 308, column: 1, scope: !6398)
!6995 = !{i64 2147661773, i64 2147661816, i64 2147661856}
!6996 = !DILocation(line: 309, column: 1, scope: !6398)
!6997 = !{i64 2147662005, i64 2147662048, i64 2147662088}
!6998 = !DILocation(line: 310, column: 1, scope: !6398)
!6999 = !{i64 2147662222, i64 2147662265, i64 2147662305}
!7000 = !DILocation(line: 311, column: 1, scope: !6398)
!7001 = !{i64 2147662429, i64 2147662472, i64 2147662512}
!7002 = !DILocation(line: 312, column: 1, scope: !6398)
!7003 = !{i64 2147662630, i64 2147662673, i64 2147662713}
!7004 = !DILocation(line: 313, column: 1, scope: !6398)
!7005 = !{i64 2147662862, i64 2147662905, i64 2147662945}
!7006 = !DILocation(line: 314, column: 1, scope: !6398)
!7007 = !{i64 2147663070, i64 2147663113, i64 2147663153}
!7008 = !DILocation(line: 315, column: 1, scope: !6398)
!7009 = !{i64 2147663260, i64 2147663303, i64 2147663343}
!7010 = !DILocation(line: 316, column: 1, scope: !6398)
!7011 = !{i64 2147663486, i64 2147663529, i64 2147663569}
!7012 = !DILocation(line: 317, column: 1, scope: !6398)
!7013 = !{i64 2147663675, i64 2147663718, i64 2147663758}
!7014 = !DILocation(line: 318, column: 1, scope: !6398)
!7015 = !{i64 2147663946, i64 2147663989, i64 2147664029}
!7016 = !DILocation(line: 319, column: 1, scope: !6398)
!7017 = !{i64 2147664166, i64 2147664209, i64 2147664249}
!7018 = !DILocation(line: 320, column: 1, scope: !6398)
!7019 = !{i64 2147664419, i64 2147664462, i64 2147664502}
!7020 = !DILocation(line: 321, column: 1, scope: !6398)
!7021 = !{i64 2147664627, i64 2147664670, i64 2147664710}
!7022 = !DILocation(line: 322, column: 1, scope: !6398)
!7023 = !{i64 2147664859, i64 2147664902, i64 2147664942}
!7024 = !DILocation(line: 323, column: 1, scope: !6398)
!7025 = !{i64 2147665070, i64 2147665113, i64 2147665153}
!7026 = !DILocation(line: 324, column: 1, scope: !6398)
!7027 = !{i64 2147665260, i64 2147665303, i64 2147665343}
!7028 = !DILocation(line: 325, column: 1, scope: !6398)
!7029 = !{i64 2147665474, i64 2147665517, i64 2147665557}
!7030 = !DILocation(line: 326, column: 1, scope: !6398)
!7031 = !{i64 2147665673, i64 2147665716, i64 2147665756}
!7032 = !DILocation(line: 327, column: 1, scope: !6398)
!7033 = !{i64 2147665860, i64 2147665903, i64 2147665943}
!7034 = !DILocation(line: 328, column: 1, scope: !6398)
!7035 = !{i64 2147666068, i64 2147666111, i64 2147666151}
!7036 = !DILocation(line: 329, column: 1, scope: !6398)
!7037 = !{i64 2147666297, i64 2147666340, i64 2147666380}
!7038 = !DILocation(line: 330, column: 1, scope: !6398)
!7039 = !{i64 2147666499, i64 2147666542, i64 2147666582}
!7040 = !DILocation(line: 331, column: 1, scope: !6398)
!7041 = !{i64 2147666698, i64 2147666741, i64 2147666781}
!7042 = !DILocation(line: 332, column: 1, scope: !6398)
!7043 = !{i64 2147666915, i64 2147666958, i64 2147666998}
!7044 = !DILocation(line: 334, column: 1, scope: !6398)
!7045 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !439, file: !439, line: 30, type: !446, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7046)
!7046 = !{!7047, !7048}
!7047 = !DILocalVariable(name: "arg", arg: 1, scope: !7045, file: !439, line: 30, type: !448)
!7048 = !DILocalVariable(name: "key", scope: !7045, file: !439, line: 32, type: !108)
!7049 = !DILocation(line: 0, scope: !7045)
!7050 = !DILocation(line: 37, column: 2, scope: !7045)
!7051 = !DILocation(line: 38, column: 2, scope: !7045)
!7052 = !DILocation(line: 55, column: 2, scope: !7053, inlinedAt: !7060)
!7053 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7057)
!7054 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7055 = !DISubroutineType(types: !7056)
!7056 = !{!32}
!7057 = !{!7058, !7059}
!7058 = !DILocalVariable(name: "key", scope: !7053, file: !7054, line: 44, type: !32)
!7059 = !DILocalVariable(name: "tmp", scope: !7053, file: !7054, line: 53, type: !32)
!7060 = distinct !DILocation(line: 40, column: 8, scope: !7045)
!7061 = !{i64 2132029}
!7062 = !DILocation(line: 0, scope: !7053, inlinedAt: !7060)
!7063 = !DILocalVariable(name: "key", arg: 1, scope: !7064, file: !7054, line: 84, type: !32)
!7064 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7067)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{null, !32}
!7067 = !{!7063}
!7068 = !DILocation(line: 0, scope: !7064, inlinedAt: !7069)
!7069 = distinct !DILocation(line: 47, column: 2, scope: !7045)
!7070 = !DILocation(line: 95, column: 2, scope: !7064, inlinedAt: !7069)
!7071 = !{i64 2132846}
!7072 = !DILocation(line: 51, column: 18, scope: !7045)
!7073 = !DILocation(line: 53, column: 2, scope: !7045)
!7074 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7075, file: !7075, line: 1609, type: !337, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !256)
!7075 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7076 = !DILocation(line: 1611, column: 3, scope: !7074)
!7077 = !DILocation(line: 1612, column: 1, scope: !7074)
!7078 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7075, file: !7075, line: 1629, type: !337, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !256)
!7079 = !DILocation(line: 1631, column: 3, scope: !7078)
!7080 = !DILocation(line: 1632, column: 1, scope: !7078)
!7081 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !475, file: !475, line: 26, type: !481, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !472, retainedNodes: !7082)
!7082 = !{!7083}
!7083 = !DILocalVariable(name: "dev", arg: 1, scope: !7081, file: !475, line: 26, type: !483)
!7084 = !DILocation(line: 0, scope: !7081)
!7085 = !DILocation(line: 68, column: 2, scope: !7081)
!7086 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7087, file: !7087, line: 14, type: !4642, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7088)
!7087 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7088 = !{!7089, !7090}
!7089 = !DILocalVariable(name: "fmt", arg: 1, scope: !7086, file: !7087, line: 14, type: !121)
!7090 = !DILocalVariable(name: "ap", scope: !7086, file: !7087, line: 16, type: !7091)
!7091 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3711, line: 99, baseType: !7092)
!7092 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3711, line: 40, baseType: !7093)
!7093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7087, baseType: !7094)
!7094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7095)
!7095 = !{!7096}
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7094, file: !7087, line: 16, baseType: !106, size: 32)
!7097 = !DILocation(line: 0, scope: !7086)
!7098 = !DILocation(line: 16, column: 2, scope: !7086)
!7099 = !DILocation(line: 16, column: 10, scope: !7086)
!7100 = !DILocation(line: 18, column: 2, scope: !7086)
!7101 = !DILocation(line: 19, column: 2, scope: !7086)
!7102 = !DILocation(line: 20, column: 2, scope: !7086)
!7103 = !DILocation(line: 21, column: 1, scope: !7086)
!7104 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7087, file: !7087, line: 23, type: !7105, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7107)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{null, !121, !7091}
!7107 = !{!7108, !7109}
!7108 = !DILocalVariable(name: "fmt", arg: 1, scope: !7104, file: !7087, line: 23, type: !121)
!7109 = !DILocalVariable(name: "ap", arg: 2, scope: !7104, file: !7087, line: 23, type: !7091)
!7110 = !DILocation(line: 0, scope: !7104)
!7111 = !DILocation(line: 25, column: 2, scope: !7104)
!7112 = !DILocation(line: 26, column: 1, scope: !7104)
!7113 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7087, file: !7087, line: 52, type: !7114, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7116)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{null, !107, !13, !137}
!7116 = !{!7117, !7118, !7119, !7120}
!7117 = !DILocalVariable(name: "level", arg: 1, scope: !7113, file: !7087, line: 52, type: !107)
!7118 = !DILocalVariable(name: "data", arg: 2, scope: !7113, file: !7087, line: 52, type: !13)
!7119 = !DILocalVariable(name: "size", arg: 3, scope: !7113, file: !7087, line: 52, type: !137)
!7120 = !DILocalVariable(name: "data_buffer", scope: !7113, file: !7087, line: 54, type: !121)
!7121 = !DILocation(line: 0, scope: !7113)
!7122 = !DILocation(line: 55, column: 14, scope: !7113)
!7123 = !DILocation(line: 55, column: 2, scope: !7113)
!7124 = !DILocation(line: 56, column: 3, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7113, file: !7087, line: 55, column: 20)
!7126 = !DILocation(line: 57, column: 3, scope: !7125)
!7127 = !DILocation(line: 59, column: 7, scope: !7125)
!7128 = distinct !{!7128, !7123, !7129}
!7129 = !DILocation(line: 65, column: 2, scope: !7113)
!7130 = !DILocation(line: 66, column: 1, scope: !7113)
!7131 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7132, file: !7132, line: 175, type: !7133, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7135)
!7132 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7133 = !DISubroutineType(types: !7134)
!7134 = !{!123, !107}
!7135 = !{!7136}
!7136 = !DILocalVariable(name: "level", arg: 1, scope: !7131, file: !7132, line: 175, type: !107)
!7137 = !DILocation(line: 0, scope: !7131)
!7138 = !DILocation(line: 177, column: 2, scope: !7131)
!7139 = !DILocation(line: 189, column: 1, scope: !7131)
!7140 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7087, file: !7087, line: 28, type: !7141, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7143)
!7141 = !DISubroutineType(types: !7142)
!7142 = !{null, !121, !137}
!7143 = !{!7144, !7145, !7146, !7148, !7150}
!7144 = !DILocalVariable(name: "data", arg: 1, scope: !7140, file: !7087, line: 28, type: !121)
!7145 = !DILocalVariable(name: "length", arg: 2, scope: !7140, file: !7087, line: 28, type: !137)
!7146 = !DILocalVariable(name: "i", scope: !7147, file: !7087, line: 30, type: !137)
!7147 = distinct !DILexicalBlock(scope: !7140, file: !7087, line: 30, column: 2)
!7148 = !DILocalVariable(name: "i", scope: !7149, file: !7087, line: 40, type: !137)
!7149 = distinct !DILexicalBlock(scope: !7140, file: !7087, line: 40, column: 2)
!7150 = !DILocalVariable(name: "c", scope: !7151, file: !7087, line: 42, type: !191)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !7087, line: 41, column: 19)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !7087, line: 41, column: 7)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !7087, line: 40, column: 54)
!7154 = distinct !DILexicalBlock(scope: !7149, file: !7087, line: 40, column: 2)
!7155 = !DILocation(line: 0, scope: !7140)
!7156 = !DILocation(line: 0, scope: !7147)
!7157 = !DILocation(line: 30, column: 2, scope: !7147)
!7158 = !DILocation(line: 38, column: 2, scope: !7140)
!7159 = !DILocation(line: 0, scope: !7149)
!7160 = !DILocation(line: 40, column: 2, scope: !7149)
!7161 = !DILocation(line: 31, column: 9, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !7087, line: 31, column: 7)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !7087, line: 30, column: 54)
!7164 = distinct !DILexicalBlock(scope: !7147, file: !7087, line: 30, column: 2)
!7165 = !DILocation(line: 31, column: 7, scope: !7163)
!7166 = !DILocation(line: 32, column: 35, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7162, file: !7087, line: 31, column: 19)
!7168 = !DILocation(line: 32, column: 20, scope: !7167)
!7169 = !DILocation(line: 32, column: 4, scope: !7167)
!7170 = !DILocation(line: 33, column: 3, scope: !7167)
!7171 = !DILocation(line: 34, column: 4, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7162, file: !7087, line: 33, column: 10)
!7173 = !DILocation(line: 30, column: 50, scope: !7164)
!7174 = !DILocation(line: 30, column: 24, scope: !7164)
!7175 = distinct !{!7175, !7157, !7176}
!7176 = !DILocation(line: 36, column: 2, scope: !7147)
!7177 = !DILocation(line: 49, column: 2, scope: !7140)
!7178 = !DILocation(line: 50, column: 1, scope: !7140)
!7179 = !DILocation(line: 41, column: 9, scope: !7152)
!7180 = !DILocation(line: 41, column: 7, scope: !7153)
!7181 = !DILocation(line: 42, column: 22, scope: !7151)
!7182 = !DILocation(line: 0, scope: !7151)
!7183 = !DILocation(line: 44, column: 25, scope: !7151)
!7184 = !DILocation(line: 44, column: 17, scope: !7151)
!7185 = !DILocation(line: 44, column: 33, scope: !7151)
!7186 = !DILocation(line: 44, column: 4, scope: !7151)
!7187 = !DILocation(line: 45, column: 3, scope: !7151)
!7188 = !DILocation(line: 46, column: 4, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7152, file: !7087, line: 45, column: 10)
!7190 = !DILocation(line: 40, column: 50, scope: !7154)
!7191 = !DILocation(line: 40, column: 24, scope: !7154)
!7192 = distinct !{!7192, !7160, !7193}
!7193 = !DILocation(line: 48, column: 2, scope: !7149)
!7194 = distinct !DISubprogram(name: "isprint", scope: !6171, file: !6171, line: 37, type: !418, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7195)
!7195 = !{!7196}
!7196 = !DILocalVariable(name: "c", arg: 1, scope: !7194, file: !6171, line: 37, type: !107)
!7197 = !DILocation(line: 0, scope: !7194)
!7198 = !DILocation(line: 39, column: 38, scope: !7194)
!7199 = !DILocation(line: 39, column: 2, scope: !7194)
!7200 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7201, file: !7201, line: 57, type: !7202, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !7248)
!7201 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7202 = !DISubroutineType(types: !7203)
!7203 = !{null, !32, !7204}
!7204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7205, size: 32)
!7205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7206)
!7206 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2811, line: 141, baseType: !7207)
!7207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2811, line: 97, size: 256, elements: !7208)
!7208 = !{!7209}
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7207, file: !2811, line: 107, baseType: !7210, size: 256)
!7210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2811, line: 98, size: 256, elements: !7211)
!7211 = !{!7212, !7217, !7222, !7227, !7232, !7237, !7242, !7247}
!7212 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !2811, line: 99, baseType: !7213, size: 32)
!7213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !2811, line: 99, size: 32, elements: !7214)
!7214 = !{!7215, !7216}
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7213, file: !2811, line: 99, baseType: !108, size: 32)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7213, file: !2811, line: 99, baseType: !108, size: 32)
!7217 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !2811, line: 100, baseType: !7218, size: 32, offset: 32)
!7218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !2811, line: 100, size: 32, elements: !7219)
!7219 = !{!7220, !7221}
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7218, file: !2811, line: 100, baseType: !108, size: 32)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7218, file: !2811, line: 100, baseType: !108, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !2811, line: 101, baseType: !7223, size: 32, offset: 64)
!7223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !2811, line: 101, size: 32, elements: !7224)
!7224 = !{!7225, !7226}
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7223, file: !2811, line: 101, baseType: !108, size: 32)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7223, file: !2811, line: 101, baseType: !108, size: 32)
!7227 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !2811, line: 102, baseType: !7228, size: 32, offset: 96)
!7228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !2811, line: 102, size: 32, elements: !7229)
!7229 = !{!7230, !7231}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7228, file: !2811, line: 102, baseType: !108, size: 32)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7228, file: !2811, line: 102, baseType: !108, size: 32)
!7232 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !2811, line: 103, baseType: !7233, size: 32, offset: 128)
!7233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !2811, line: 103, size: 32, elements: !7234)
!7234 = !{!7235, !7236}
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7233, file: !2811, line: 103, baseType: !108, size: 32)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7233, file: !2811, line: 103, baseType: !108, size: 32)
!7237 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !2811, line: 104, baseType: !7238, size: 32, offset: 160)
!7238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !2811, line: 104, size: 32, elements: !7239)
!7239 = !{!7240, !7241}
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7238, file: !2811, line: 104, baseType: !108, size: 32)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7238, file: !2811, line: 104, baseType: !108, size: 32)
!7242 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !2811, line: 105, baseType: !7243, size: 32, offset: 192)
!7243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !2811, line: 105, size: 32, elements: !7244)
!7244 = !{!7245, !7246}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7243, file: !2811, line: 105, baseType: !108, size: 32)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7243, file: !2811, line: 105, baseType: !108, size: 32)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7210, file: !2811, line: 106, baseType: !108, size: 32, offset: 224)
!7248 = !{!7249, !7250}
!7249 = !DILocalVariable(name: "reason", arg: 1, scope: !7200, file: !7201, line: 57, type: !32)
!7250 = !DILocalVariable(name: "esf", arg: 2, scope: !7200, file: !7201, line: 57, type: !7204)
!7251 = !DILocation(line: 0, scope: !7200)
!7252 = !DILocation(line: 60, column: 10, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7200, file: !7201, line: 60, column: 6)
!7254 = !DILocation(line: 60, column: 6, scope: !7200)
!7255 = !DILocation(line: 61, column: 3, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7253, file: !7201, line: 60, column: 19)
!7257 = !DILocation(line: 62, column: 2, scope: !7256)
!7258 = !DILocation(line: 63, column: 2, scope: !7200)
!7259 = !DILocation(line: 64, column: 1, scope: !7200)
!7260 = distinct !DISubprogram(name: "esf_dump", scope: !7201, file: !7201, line: 20, type: !7261, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !7263)
!7261 = !DISubroutineType(types: !7262)
!7262 = !{null, !7204}
!7263 = !{!7264}
!7264 = !DILocalVariable(name: "esf", arg: 1, scope: !7260, file: !7201, line: 20, type: !7204)
!7265 = !DILocation(line: 0, scope: !7260)
!7266 = !DILocation(line: 22, column: 2, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !7201, line: 22, column: 2)
!7268 = distinct !DILexicalBlock(scope: !7269, file: !7201, line: 22, column: 2)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !7201, line: 22, column: 2)
!7270 = distinct !DILexicalBlock(scope: !7260, file: !7201, line: 22, column: 2)
!7271 = !DILocation(line: 24, column: 2, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7273, file: !7201, line: 24, column: 2)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !7201, line: 24, column: 2)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !7201, line: 24, column: 2)
!7275 = distinct !DILexicalBlock(scope: !7260, file: !7201, line: 24, column: 2)
!7276 = !DILocation(line: 26, column: 2, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !7201, line: 26, column: 2)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !7201, line: 26, column: 2)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !7201, line: 26, column: 2)
!7280 = distinct !DILexicalBlock(scope: !7260, file: !7201, line: 26, column: 2)
!7281 = !DILocation(line: 53, column: 2, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !7201, line: 53, column: 2)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !7201, line: 53, column: 2)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !7201, line: 53, column: 2)
!7285 = distinct !DILexicalBlock(scope: !7260, file: !7201, line: 53, column: 2)
!7286 = !DILocation(line: 55, column: 1, scope: !7260)
!7287 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7201, file: !7201, line: 82, type: !7288, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !7303)
!7288 = !DISubroutineType(types: !7289)
!7289 = !{null, !7204, !7290}
!7290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7291, size: 32)
!7291 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !219, line: 37, baseType: !7292)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7293)
!7293 = !{!7294, !7295, !7296, !7297, !7298, !7299, !7300, !7301, !7302}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7292, file: !219, line: 26, baseType: !108, size: 32)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7292, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7292, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7292, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7292, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7292, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7292, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7292, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7292, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7303 = !{!7304, !7305, !7306}
!7304 = !DILocalVariable(name: "esf", arg: 1, scope: !7287, file: !7201, line: 82, type: !7204)
!7305 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7287, file: !7201, line: 82, type: !7290)
!7306 = !DILocalVariable(name: "reason", scope: !7287, file: !7201, line: 88, type: !32)
!7307 = !DILocation(line: 0, scope: !7287)
!7308 = !DILocation(line: 88, column: 35, scope: !7287)
!7309 = !DILocation(line: 108, column: 2, scope: !7287)
!7310 = !DILocation(line: 131, column: 1, scope: !7287)
!7311 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7201, file: !7201, line: 133, type: !7312, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !7314)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{null, !106}
!7314 = !{!7315, !7316, !7317}
!7315 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7311, file: !7201, line: 133, type: !106)
!7316 = !DILocalVariable(name: "ssf_contents", scope: !7311, file: !7201, line: 135, type: !1002)
!7317 = !DILocalVariable(name: "oops_esf", scope: !7311, file: !7201, line: 136, type: !7206)
!7318 = !DILocation(line: 0, scope: !7311)
!7319 = !DILocation(line: 136, column: 2, scope: !7311)
!7320 = !DILocation(line: 136, column: 15, scope: !7311)
!7321 = !DILocation(line: 139, column: 22, scope: !7311)
!7322 = !DILocation(line: 139, column: 17, scope: !7311)
!7323 = !DILocation(line: 139, column: 20, scope: !7311)
!7324 = !DILocation(line: 141, column: 2, scope: !7311)
!7325 = !DILocation(line: 142, column: 2, scope: !7311)
!7326 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7327, file: !7327, line: 40, type: !7065, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7328)
!7327 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7328 = !{!7329}
!7329 = !DILocalVariable(name: "irq", arg: 1, scope: !7326, file: !7327, line: 40, type: !32)
!7330 = !DILocation(line: 0, scope: !7326)
!7331 = !DILocation(line: 42, column: 2, scope: !7326)
!7332 = !DILocation(line: 43, column: 1, scope: !7326)
!7333 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !644, file: !644, line: 1684, type: !7334, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7336)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{null, !911}
!7336 = !{!7337}
!7337 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7333, file: !644, line: 1684, type: !911)
!7338 = !DILocation(line: 0, scope: !7333)
!7339 = !DILocation(line: 1686, column: 23, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7333, file: !644, line: 1686, column: 7)
!7341 = !DILocation(line: 1686, column: 7, scope: !7333)
!7342 = !DILocation(line: 1688, column: 5, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7340, file: !644, line: 1687, column: 3)
!7344 = !{i64 2151025001}
!7345 = !DILocation(line: 1689, column: 81, scope: !7343)
!7346 = !DILocation(line: 1689, column: 60, scope: !7343)
!7347 = !DILocation(line: 1689, column: 34, scope: !7343)
!7348 = !DILocation(line: 1689, column: 5, scope: !7343)
!7349 = !DILocation(line: 1689, column: 43, scope: !7343)
!7350 = !DILocation(line: 1690, column: 5, scope: !7343)
!7351 = !{i64 2151025115}
!7352 = !DILocation(line: 1691, column: 3, scope: !7343)
!7353 = !DILocation(line: 1692, column: 1, scope: !7333)
!7354 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7327, file: !7327, line: 45, type: !7065, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7355)
!7355 = !{!7356}
!7356 = !DILocalVariable(name: "irq", arg: 1, scope: !7354, file: !7327, line: 45, type: !32)
!7357 = !DILocation(line: 0, scope: !7354)
!7358 = !DILocation(line: 47, column: 2, scope: !7354)
!7359 = !DILocation(line: 48, column: 1, scope: !7354)
!7360 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !644, file: !644, line: 1722, type: !7334, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7361)
!7361 = !{!7362}
!7362 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7360, file: !644, line: 1722, type: !911)
!7363 = !DILocation(line: 0, scope: !7360)
!7364 = !DILocation(line: 1724, column: 23, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7360, file: !644, line: 1724, column: 7)
!7366 = !DILocation(line: 1724, column: 7, scope: !7360)
!7367 = !DILocation(line: 1726, column: 81, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7365, file: !644, line: 1725, column: 3)
!7369 = !DILocation(line: 1726, column: 60, scope: !7368)
!7370 = !DILocation(line: 1726, column: 34, scope: !7368)
!7371 = !DILocation(line: 1726, column: 5, scope: !7368)
!7372 = !DILocation(line: 1726, column: 43, scope: !7368)
!7373 = !DILocation(line: 271, column: 3, scope: !7374, inlinedAt: !7376)
!7374 = distinct !DISubprogram(name: "__DSB", scope: !7375, file: !7375, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !256)
!7375 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7376 = distinct !DILocation(line: 1727, column: 5, scope: !7368)
!7377 = !{i64 3479384}
!7378 = !DILocation(line: 260, column: 3, scope: !7379, inlinedAt: !7380)
!7379 = distinct !DISubprogram(name: "__ISB", scope: !7375, file: !7375, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !256)
!7380 = distinct !DILocation(line: 1728, column: 5, scope: !7368)
!7381 = !{i64 3479101}
!7382 = !DILocation(line: 1729, column: 3, scope: !7368)
!7383 = !DILocation(line: 1730, column: 1, scope: !7360)
!7384 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7327, file: !7327, line: 50, type: !7385, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7387)
!7385 = !DISubroutineType(types: !7386)
!7386 = !{!107, !32}
!7387 = !{!7388}
!7388 = !DILocalVariable(name: "irq", arg: 1, scope: !7384, file: !7327, line: 50, type: !32)
!7389 = !DILocation(line: 0, scope: !7384)
!7390 = !DILocation(line: 52, column: 20, scope: !7384)
!7391 = !DILocation(line: 52, column: 9, scope: !7384)
!7392 = !DILocation(line: 52, column: 41, scope: !7384)
!7393 = !DILocation(line: 52, column: 39, scope: !7384)
!7394 = !DILocation(line: 52, column: 2, scope: !7384)
!7395 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7327, file: !7327, line: 64, type: !7396, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7398)
!7396 = !DISubroutineType(types: !7397)
!7397 = !{null, !32, !32, !108}
!7398 = !{!7399, !7400, !7401}
!7399 = !DILocalVariable(name: "irq", arg: 1, scope: !7395, file: !7327, line: 64, type: !32)
!7400 = !DILocalVariable(name: "prio", arg: 2, scope: !7395, file: !7327, line: 64, type: !32)
!7401 = !DILocalVariable(name: "flags", arg: 3, scope: !7395, file: !7327, line: 64, type: !108)
!7402 = !DILocation(line: 0, scope: !7395)
!7403 = !DILocation(line: 83, column: 8, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !7327, line: 82, column: 9)
!7405 = distinct !DILexicalBlock(scope: !7395, file: !7327, line: 76, column: 6)
!7406 = !DILocation(line: 95, column: 2, scope: !7395)
!7407 = !DILocation(line: 96, column: 1, scope: !7395)
!7408 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7409, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7411)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{null, !911, !108}
!7411 = !{!7412, !7413}
!7412 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7408, file: !644, line: 1814, type: !911)
!7413 = !DILocalVariable(name: "priority", arg: 2, scope: !7408, file: !644, line: 1814, type: !108)
!7414 = !DILocation(line: 0, scope: !7408)
!7415 = !DILocation(line: 0, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7408, file: !644, line: 1816, column: 7)
!7417 = !DILocation(line: 1816, column: 7, scope: !7408)
!7418 = !DILocation(line: 1824, column: 1, scope: !7408)
!7419 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7327, file: !7327, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7420)
!7420 = !{!7421}
!7421 = !DILocalVariable(name: "unused", arg: 1, scope: !7419, file: !7327, line: 155, type: !13)
!7422 = !DILocation(line: 0, scope: !7419)
!7423 = !DILocation(line: 159, column: 2, scope: !7419)
!7424 = !DILocation(line: 160, column: 1, scope: !7419)
!7425 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7426, file: !7426, line: 87, type: !337, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2748, retainedNodes: !256)
!7426 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7427 = !DILocation(line: 89, column: 2, scope: !7425)
!7428 = !DILocation(line: 90, column: 2, scope: !7425)
!7429 = !DILocation(line: 91, column: 1, scope: !7425)
!7430 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7426, file: !7426, line: 23, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!7431 = !DISubprogram(name: "z_arm_int_exit", scope: !7432, file: !7432, line: 153, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!7432 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7433 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7434, file: !7434, line: 256, type: !337, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !256)
!7434 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7435 = !DILocation(line: 258, column: 2, scope: !7433)
!7436 = !DILocation(line: 260, column: 2, scope: !7433)
!7437 = !DILocation(line: 262, column: 2, scope: !7433)
!7438 = !DILocation(line: 263, column: 2, scope: !7433)
!7439 = !DILocation(line: 267, column: 2, scope: !7433)
!7440 = !DILocation(line: 268, column: 2, scope: !7433)
!7441 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7434, file: !7434, line: 53, type: !337, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !256)
!7442 = !DILocation(line: 55, column: 12, scope: !7441)
!7443 = !DILocation(line: 271, column: 3, scope: !7444, inlinedAt: !7445)
!7444 = distinct !DISubprogram(name: "__DSB", scope: !7375, file: !7375, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !256)
!7445 = distinct !DILocation(line: 56, column: 2, scope: !7441)
!7446 = !{i64 3478055}
!7447 = !DILocation(line: 260, column: 3, scope: !7448, inlinedAt: !7449)
!7448 = distinct !DISubprogram(name: "__ISB", scope: !7375, file: !7375, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !256)
!7449 = distinct !DILocation(line: 57, column: 2, scope: !7441)
!7450 = !{i64 3477772}
!7451 = !DILocation(line: 58, column: 1, scope: !7441)
!7452 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7434, file: !7434, line: 96, type: !337, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !256)
!7453 = !DILocation(line: 103, column: 13, scope: !7452)
!7454 = !DILocation(line: 975, column: 3, scope: !7455, inlinedAt: !7460)
!7455 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7375, file: !7375, line: 971, type: !7456, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7458)
!7456 = !DISubroutineType(types: !7457)
!7457 = !{!108}
!7458 = !{!7459}
!7459 = !DILocalVariable(name: "result", scope: !7455, file: !7375, line: 973, type: !108)
!7460 = distinct !DILocation(line: 189, column: 16, scope: !7452)
!7461 = !{i64 3498885}
!7462 = !DILocation(line: 0, scope: !7455, inlinedAt: !7460)
!7463 = !DILocation(line: 189, column: 32, scope: !7452)
!7464 = !DILocalVariable(name: "control", arg: 1, scope: !7465, file: !7375, line: 1001, type: !108)
!7465 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7375, file: !7375, line: 1001, type: !7466, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7468)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{null, !108}
!7468 = !{!7464}
!7469 = !DILocation(line: 0, scope: !7465, inlinedAt: !7470)
!7470 = distinct !DILocation(line: 189, column: 2, scope: !7452)
!7471 = !DILocation(line: 1003, column: 3, scope: !7465, inlinedAt: !7470)
!7472 = !{i64 3499605}
!7473 = !DILocation(line: 260, column: 3, scope: !7448, inlinedAt: !7474)
!7474 = distinct !DILocation(line: 1004, column: 3, scope: !7465, inlinedAt: !7470)
!7475 = !DILocation(line: 191, column: 1, scope: !7452)
!7476 = distinct !DISubprogram(name: "arch_swap", scope: !7477, file: !7477, line: 33, type: !7385, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !7478)
!7477 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7478 = !{!7479}
!7479 = !DILocalVariable(name: "key", arg: 1, scope: !7476, file: !7477, line: 33, type: !32)
!7480 = !DILocation(line: 0, scope: !7476)
!7481 = !DILocation(line: 36, column: 2, scope: !7476)
!7482 = !DILocation(line: 36, column: 17, scope: !7476)
!7483 = !DILocation(line: 36, column: 25, scope: !7476)
!7484 = !DILocation(line: 37, column: 37, scope: !7476)
!7485 = !DILocation(line: 37, column: 17, scope: !7476)
!7486 = !DILocation(line: 37, column: 35, scope: !7476)
!7487 = !DILocation(line: 41, column: 12, scope: !7476)
!7488 = !DILocalVariable(name: "key", arg: 1, scope: !7489, file: !7054, line: 84, type: !32)
!7489 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !7490)
!7490 = !{!7488}
!7491 = !DILocation(line: 0, scope: !7489, inlinedAt: !7492)
!7492 = distinct !DILocation(line: 44, column: 2, scope: !7476)
!7493 = !DILocation(line: 95, column: 2, scope: !7489, inlinedAt: !7492)
!7494 = !{i64 2240119}
!7495 = !DILocation(line: 53, column: 9, scope: !7476)
!7496 = !DILocation(line: 53, column: 24, scope: !7476)
!7497 = !DILocation(line: 53, column: 2, scope: !7476)
!7498 = distinct !DISubprogram(name: "arch_new_thread", scope: !7499, file: !7499, line: 56, type: !7500, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !7607)
!7499 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7500 = !DISubroutineType(types: !7501)
!7501 = !{null, !7502, !7602, !283, !324, !106, !106, !106}
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7503, size: 32)
!7503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !7504)
!7504 = !{!7505, !7563, !7575, !7576, !7577, !7578, !7584, !7597}
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7503, file: !168, line: 247, baseType: !7506, size: 384)
!7506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !7507)
!7507 = !{!7508, !7532, !7539, !7540, !7541, !7550, !7551, !7552}
!7508 = !DIDerivedType(tag: DW_TAG_member, scope: !7506, file: !168, line: 60, baseType: !7509, size: 64)
!7509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7506, file: !168, line: 60, size: 64, elements: !7510)
!7510 = !{!7511, !7526}
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7509, file: !168, line: 61, baseType: !7512, size: 64)
!7512 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !7513)
!7513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !7514)
!7514 = !{!7515, !7521}
!7515 = !DIDerivedType(tag: DW_TAG_member, scope: !7513, file: !151, line: 38, baseType: !7516, size: 32)
!7516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7513, file: !151, line: 38, size: 32, elements: !7517)
!7517 = !{!7518, !7520}
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7516, file: !151, line: 39, baseType: !7519, size: 32)
!7519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7513, size: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7516, file: !151, line: 40, baseType: !7519, size: 32)
!7521 = !DIDerivedType(tag: DW_TAG_member, scope: !7513, file: !151, line: 42, baseType: !7522, size: 32, offset: 32)
!7522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7513, file: !151, line: 42, size: 32, elements: !7523)
!7523 = !{!7524, !7525}
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7522, file: !151, line: 43, baseType: !7519, size: 32)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7522, file: !151, line: 44, baseType: !7519, size: 32)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7509, file: !168, line: 62, baseType: !7527, size: 64)
!7527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !7528)
!7528 = !{!7529}
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7527, file: !180, line: 50, baseType: !7530, size: 64)
!7530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7531, size: 64, elements: !185)
!7531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7527, size: 32)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7506, file: !168, line: 68, baseType: !7533, size: 32, offset: 64)
!7533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7534, size: 32)
!7534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !7535)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !7536)
!7536 = !{!7537}
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7535, file: !146, line: 232, baseType: !7538, size: 64)
!7538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !7513)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7506, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7506, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!7541 = !DIDerivedType(tag: DW_TAG_member, scope: !7506, file: !168, line: 90, baseType: !7542, size: 16, offset: 112)
!7542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7506, file: !168, line: 90, size: 16, elements: !7543)
!7543 = !{!7544, !7549}
!7544 = !DIDerivedType(tag: DW_TAG_member, scope: !7542, file: !168, line: 91, baseType: !7545, size: 16)
!7545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7542, file: !168, line: 91, size: 16, elements: !7546)
!7546 = !{!7547, !7548}
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7545, file: !168, line: 96, baseType: !200, size: 8)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7545, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7542, file: !168, line: 100, baseType: !126, size: 16)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7506, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7506, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7506, file: !168, line: 131, baseType: !7553, size: 192, offset: 192)
!7553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !7554)
!7554 = !{!7555, !7556, !7562}
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7553, file: !146, line: 245, baseType: !7512, size: 64)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7553, file: !146, line: 246, baseType: !7557, size: 32, offset: 64)
!7557 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !7558)
!7558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7559, size: 32)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{null, !7561}
!7561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7553, size: 32)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7553, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7503, file: !168, line: 250, baseType: !7564, size: 288, offset: 384)
!7564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7565)
!7565 = !{!7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574}
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7564, file: !219, line: 26, baseType: !108, size: 32)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7564, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7564, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7564, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7564, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7564, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7564, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7564, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7564, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7503, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7503, file: !168, line: 256, baseType: !7534, size: 64, offset: 704)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7503, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7503, file: !168, line: 300, baseType: !7579, size: 96, offset: 800)
!7579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !7580)
!7580 = !{!7581, !7582, !7583}
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7579, file: !168, line: 153, baseType: !22, size: 32)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7579, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7579, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7503, file: !168, line: 325, baseType: !7585, size: 32, offset: 896)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 32)
!7586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !7587)
!7587 = !{!7588, !7594, !7595}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7586, file: !142, line: 5074, baseType: !7589, size: 96)
!7589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !7590)
!7590 = !{!7591, !7592, !7593}
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7589, file: !245, line: 57, baseType: !248, size: 32)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7589, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7589, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7586, file: !142, line: 5075, baseType: !7534, size: 64, offset: 96)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7586, file: !142, line: 5076, baseType: !7596, offset: 160)
!7596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7503, file: !168, line: 343, baseType: !7598, size: 64, offset: 928)
!7598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !7599)
!7599 = !{!7600, !7601}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7598, file: !219, line: 63, baseType: !108, size: 32)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7598, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7603, size: 32)
!7603 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !7604)
!7604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !7605)
!7605 = !{!7606}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7604, file: !319, line: 48, baseType: !123, size: 8)
!7607 = !{!7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615}
!7608 = !DILocalVariable(name: "thread", arg: 1, scope: !7498, file: !7499, line: 56, type: !7502)
!7609 = !DILocalVariable(name: "stack", arg: 2, scope: !7498, file: !7499, line: 56, type: !7602)
!7610 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7498, file: !7499, line: 57, type: !283)
!7611 = !DILocalVariable(name: "entry", arg: 4, scope: !7498, file: !7499, line: 57, type: !324)
!7612 = !DILocalVariable(name: "p1", arg: 5, scope: !7498, file: !7499, line: 58, type: !106)
!7613 = !DILocalVariable(name: "p2", arg: 6, scope: !7498, file: !7499, line: 58, type: !106)
!7614 = !DILocalVariable(name: "p3", arg: 7, scope: !7498, file: !7499, line: 58, type: !106)
!7615 = !DILocalVariable(name: "iframe", scope: !7498, file: !7499, line: 60, type: !2809)
!7616 = !DILocation(line: 0, scope: !7498)
!7617 = !DILocation(line: 85, column: 11, scope: !7498)
!7618 = !DILocation(line: 93, column: 10, scope: !7498)
!7619 = !DILocation(line: 98, column: 13, scope: !7498)
!7620 = !DILocation(line: 100, column: 15, scope: !7498)
!7621 = !DILocation(line: 100, column: 10, scope: !7498)
!7622 = !DILocation(line: 100, column: 13, scope: !7498)
!7623 = !DILocation(line: 101, column: 15, scope: !7498)
!7624 = !DILocation(line: 101, column: 10, scope: !7498)
!7625 = !DILocation(line: 101, column: 13, scope: !7498)
!7626 = !DILocation(line: 102, column: 15, scope: !7498)
!7627 = !DILocation(line: 102, column: 10, scope: !7498)
!7628 = !DILocation(line: 102, column: 13, scope: !7498)
!7629 = !DILocation(line: 103, column: 15, scope: !7498)
!7630 = !DILocation(line: 103, column: 10, scope: !7498)
!7631 = !DILocation(line: 103, column: 13, scope: !7498)
!7632 = !DILocation(line: 106, column: 10, scope: !7498)
!7633 = !DILocation(line: 106, column: 15, scope: !7498)
!7634 = !DILocation(line: 122, column: 29, scope: !7498)
!7635 = !DILocation(line: 122, column: 23, scope: !7498)
!7636 = !DILocation(line: 122, column: 27, scope: !7498)
!7637 = !DILocation(line: 123, column: 15, scope: !7498)
!7638 = !DILocation(line: 123, column: 23, scope: !7498)
!7639 = !DILocation(line: 143, column: 1, scope: !7498)
!7640 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7499, file: !7499, line: 385, type: !7641, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !7644)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{!108, !7643, !7643}
!7643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7644 = !{!7645, !7646, !7647, !7650}
!7645 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7640, file: !7499, line: 385, type: !7643)
!7646 = !DILocalVariable(name: "psp", arg: 2, scope: !7640, file: !7499, line: 385, type: !7643)
!7647 = !DILocalVariable(name: "thread", scope: !7640, file: !7499, line: 388, type: !7648)
!7648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7649, size: 32)
!7649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7503)
!7650 = !DILocalVariable(name: "guard_len", scope: !7640, file: !7499, line: 405, type: !108)
!7651 = !DILocation(line: 0, scope: !7640)
!7652 = !DILocation(line: 388, column: 34, scope: !7640)
!7653 = !DILocation(line: 390, column: 13, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7640, file: !7499, line: 390, column: 6)
!7655 = !DILocation(line: 390, column: 6, scope: !7640)
!7656 = !DILocation(line: 438, column: 6, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7640, file: !7499, line: 438, column: 6)
!7658 = !DILocation(line: 438, column: 6, scope: !7640)
!7659 = !DILocation(line: 442, column: 3, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7657, file: !7499, line: 440, column: 22)
!7661 = !DILocation(line: 455, column: 1, scope: !7640)
!7662 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7499, file: !7499, line: 530, type: !7663, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !7665)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{null, !7502, !283, !324}
!7665 = !{!7666, !7667, !7668}
!7666 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7662, file: !7499, line: 530, type: !7502)
!7667 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7662, file: !7499, line: 530, type: !283)
!7668 = !DILocalVariable(name: "_main", arg: 3, scope: !7662, file: !7499, line: 531, type: !324)
!7669 = !DILocation(line: 0, scope: !7662)
!7670 = !DILocation(line: 535, column: 11, scope: !7662)
!7671 = !DILocation(line: 560, column: 2, scope: !7662)
!7672 = !DILocation(line: 576, column: 2, scope: !7662)
!7673 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7674 = !DILocation(line: 603, column: 2, scope: !7662)
!7675 = distinct !DISubprogram(name: "z_arm_fault", scope: !7676, file: !7676, line: 1036, type: !7677, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7692)
!7676 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7677 = !DISubroutineType(types: !7678)
!7678 = !{null, !108, !108, !108, !7679}
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7680, size: 32)
!7680 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !219, line: 37, baseType: !7681)
!7681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7682)
!7682 = !{!7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691}
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7681, file: !219, line: 26, baseType: !108, size: 32)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7681, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7681, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7681, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7681, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7681, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7681, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7681, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7681, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7692 = !{!7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700, !7701, !7702}
!7693 = !DILocalVariable(name: "msp", arg: 1, scope: !7675, file: !7676, line: 1036, type: !108)
!7694 = !DILocalVariable(name: "psp", arg: 2, scope: !7675, file: !7676, line: 1036, type: !108)
!7695 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7675, file: !7676, line: 1036, type: !108)
!7696 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7675, file: !7676, line: 1037, type: !7679)
!7697 = !DILocalVariable(name: "reason", scope: !7675, file: !7676, line: 1039, type: !108)
!7698 = !DILocalVariable(name: "fault", scope: !7675, file: !7676, line: 1040, type: !107)
!7699 = !DILocalVariable(name: "recoverable", scope: !7675, file: !7676, line: 1041, type: !136)
!7700 = !DILocalVariable(name: "nested_exc", scope: !7675, file: !7676, line: 1041, type: !136)
!7701 = !DILocalVariable(name: "esf", scope: !7675, file: !7676, line: 1042, type: !2877)
!7702 = !DILocalVariable(name: "esf_copy", scope: !7675, file: !7676, line: 1047, type: !2878)
!7703 = !DILocation(line: 0, scope: !7675)
!7704 = !DILocation(line: 1040, column: 19, scope: !7675)
!7705 = !DILocation(line: 1040, column: 24, scope: !7675)
!7706 = !DILocation(line: 1041, column: 2, scope: !7675)
!7707 = !DILocation(line: 1047, column: 2, scope: !7675)
!7708 = !DILocation(line: 1047, column: 15, scope: !7675)
!7709 = !DILocalVariable(name: "key", arg: 1, scope: !7710, file: !7054, line: 84, type: !32)
!7710 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7711)
!7711 = !{!7709}
!7712 = !DILocation(line: 0, scope: !7710, inlinedAt: !7713)
!7713 = distinct !DILocation(line: 1050, column: 2, scope: !7675)
!7714 = !DILocation(line: 95, column: 2, scope: !7710, inlinedAt: !7713)
!7715 = !{i64 2273363}
!7716 = !DILocation(line: 1055, column: 9, scope: !7675)
!7717 = !DILocation(line: 1063, column: 11, scope: !7675)
!7718 = !DILocation(line: 1064, column: 6, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7675, file: !7676, line: 1064, column: 6)
!7720 = !{i8 0, i8 2}
!7721 = !DILocation(line: 1064, column: 6, scope: !7675)
!7722 = !DILocation(line: 1070, column: 20, scope: !7675)
!7723 = !DILocation(line: 1070, column: 2, scope: !7675)
!7724 = !DILocation(line: 1089, column: 6, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7675, file: !7676, line: 1089, column: 6)
!7726 = !DILocation(line: 0, scope: !7725)
!7727 = !DILocation(line: 1089, column: 6, scope: !7675)
!7728 = !DILocation(line: 1090, column: 28, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !7676, line: 1090, column: 7)
!7730 = distinct !DILexicalBlock(scope: !7725, file: !7676, line: 1089, column: 18)
!7731 = !DILocation(line: 1090, column: 44, scope: !7729)
!7732 = !DILocation(line: 1090, column: 7, scope: !7730)
!7733 = !DILocation(line: 1091, column: 24, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7729, file: !7676, line: 1090, column: 50)
!7735 = !DILocation(line: 1092, column: 3, scope: !7734)
!7736 = !DILocation(line: 1094, column: 23, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7725, file: !7676, line: 1093, column: 9)
!7738 = !DILocation(line: 1097, column: 2, scope: !7675)
!7739 = !DILocation(line: 1098, column: 1, scope: !7675)
!7740 = distinct !DISubprogram(name: "get_esf", scope: !7676, file: !7676, line: 894, type: !7741, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7744)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!2877, !108, !108, !108, !7743}
!7743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!7744 = !{!7745, !7746, !7747, !7748, !7749, !7750}
!7745 = !DILocalVariable(name: "msp", arg: 1, scope: !7740, file: !7676, line: 894, type: !108)
!7746 = !DILocalVariable(name: "psp", arg: 2, scope: !7740, file: !7676, line: 894, type: !108)
!7747 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7740, file: !7676, line: 894, type: !108)
!7748 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7740, file: !7676, line: 895, type: !7743)
!7749 = !DILocalVariable(name: "alternative_state_exc", scope: !7740, file: !7676, line: 897, type: !136)
!7750 = !DILocalVariable(name: "ptr_esf", scope: !7740, file: !7676, line: 898, type: !2877)
!7751 = !DILocation(line: 0, scope: !7740)
!7752 = !DILocation(line: 900, column: 14, scope: !7740)
!7753 = !DILocation(line: 902, column: 49, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7740, file: !7676, line: 902, column: 6)
!7755 = !DILocation(line: 902, column: 6, scope: !7740)
!7756 = !DILocation(line: 983, column: 44, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7740, file: !7676, line: 983, column: 6)
!7758 = !DILocation(line: 985, column: 3, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7676, line: 985, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !7676, line: 985, column: 3)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !7676, line: 985, column: 3)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !7676, line: 985, column: 3)
!7763 = distinct !DILexicalBlock(scope: !7757, file: !7676, line: 984, column: 47)
!7764 = !DILocation(line: 986, column: 3, scope: !7763)
!7765 = !DILocation(line: 983, column: 18, scope: !7757)
!7766 = !DILocation(line: 991, column: 7, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7676, line: 990, column: 30)
!7768 = distinct !DILexicalBlock(scope: !7740, file: !7676, line: 990, column: 6)
!7769 = !DILocation(line: 998, column: 16, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7676, line: 995, column: 10)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !7676, line: 991, column: 7)
!7772 = !DILocation(line: 1002, column: 2, scope: !7740)
!7773 = !DILocation(line: 1003, column: 1, scope: !7740)
!7774 = distinct !DISubprogram(name: "fault_handle", scope: !7676, file: !7676, line: 786, type: !7775, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7777)
!7775 = !DISubroutineType(types: !7776)
!7776 = !{!108, !2877, !107, !7743}
!7777 = !{!7778, !7779, !7780, !7781}
!7778 = !DILocalVariable(name: "esf", arg: 1, scope: !7774, file: !7676, line: 786, type: !2877)
!7779 = !DILocalVariable(name: "fault", arg: 2, scope: !7774, file: !7676, line: 786, type: !107)
!7780 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7774, file: !7676, line: 786, type: !7743)
!7781 = !DILocalVariable(name: "reason", scope: !7774, file: !7676, line: 788, type: !108)
!7782 = !DILocation(line: 0, scope: !7774)
!7783 = !DILocation(line: 790, column: 15, scope: !7774)
!7784 = !DILocation(line: 792, column: 2, scope: !7774)
!7785 = !DILocation(line: 794, column: 12, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7774, file: !7676, line: 792, column: 17)
!7787 = !DILocation(line: 795, column: 3, scope: !7786)
!7788 = !DILocation(line: 800, column: 12, scope: !7786)
!7789 = !DILocation(line: 801, column: 3, scope: !7786)
!7790 = !DILocation(line: 803, column: 12, scope: !7786)
!7791 = !DILocation(line: 804, column: 3, scope: !7786)
!7792 = !DILocation(line: 806, column: 12, scope: !7786)
!7793 = !DILocation(line: 807, column: 3, scope: !7786)
!7794 = !DILocation(line: 814, column: 3, scope: !7786)
!7795 = !DILocation(line: 815, column: 3, scope: !7786)
!7796 = !DILocation(line: 820, column: 3, scope: !7786)
!7797 = !DILocation(line: 821, column: 3, scope: !7786)
!7798 = !DILocation(line: 829, column: 2, scope: !7774)
!7799 = distinct !DISubprogram(name: "hard_fault", scope: !7676, file: !7676, line: 709, type: !7800, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7802)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{!108, !2877, !7743}
!7802 = !{!7803, !7804, !7805}
!7803 = !DILocalVariable(name: "esf", arg: 1, scope: !7799, file: !7676, line: 709, type: !2877)
!7804 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7799, file: !7676, line: 709, type: !7743)
!7805 = !DILocalVariable(name: "reason", scope: !7799, file: !7676, line: 711, type: !108)
!7806 = !DILocation(line: 0, scope: !7799)
!7807 = !DILocation(line: 713, column: 2, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !7676, line: 713, column: 2)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !7676, line: 713, column: 2)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !7676, line: 713, column: 2)
!7811 = distinct !DILexicalBlock(scope: !7799, file: !7676, line: 713, column: 2)
!7812 = !DILocation(line: 732, column: 15, scope: !7799)
!7813 = !DILocation(line: 734, column: 12, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7799, file: !7676, line: 734, column: 6)
!7815 = !DILocation(line: 734, column: 17, scope: !7814)
!7816 = !DILocation(line: 734, column: 41, scope: !7814)
!7817 = !DILocation(line: 734, column: 6, scope: !7799)
!7818 = !DILocation(line: 735, column: 3, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7820, file: !7676, line: 735, column: 3)
!7820 = distinct !DILexicalBlock(scope: !7821, file: !7676, line: 735, column: 3)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7676, line: 735, column: 3)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7676, line: 735, column: 3)
!7823 = distinct !DILexicalBlock(scope: !7814, file: !7676, line: 734, column: 47)
!7824 = !DILocation(line: 736, column: 2, scope: !7823)
!7825 = !DILocation(line: 736, column: 19, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7814, file: !7676, line: 736, column: 13)
!7827 = !DILocation(line: 736, column: 49, scope: !7826)
!7828 = !DILocation(line: 736, column: 13, scope: !7814)
!7829 = !DILocation(line: 737, column: 3, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !7676, line: 737, column: 3)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !7676, line: 737, column: 3)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7676, line: 737, column: 3)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !7676, line: 737, column: 3)
!7834 = distinct !DILexicalBlock(scope: !7826, file: !7676, line: 736, column: 55)
!7835 = !DILocation(line: 738, column: 2, scope: !7834)
!7836 = !DILocation(line: 738, column: 19, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7826, file: !7676, line: 738, column: 13)
!7838 = !DILocation(line: 738, column: 24, scope: !7837)
!7839 = !DILocation(line: 738, column: 47, scope: !7837)
!7840 = !DILocation(line: 738, column: 13, scope: !7826)
!7841 = !DILocation(line: 739, column: 3, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !7676, line: 739, column: 3)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !7676, line: 739, column: 3)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !7676, line: 739, column: 3)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !7676, line: 739, column: 3)
!7846 = distinct !DILexicalBlock(scope: !7837, file: !7676, line: 738, column: 53)
!7847 = !DILocation(line: 740, column: 7, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7846, file: !7676, line: 740, column: 7)
!7849 = !DILocation(line: 740, column: 7, scope: !7846)
!7850 = !DILocation(line: 741, column: 4, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !7676, line: 741, column: 4)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !7676, line: 741, column: 4)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !7676, line: 741, column: 4)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !7676, line: 741, column: 4)
!7855 = distinct !DILexicalBlock(scope: !7848, file: !7676, line: 740, column: 38)
!7856 = !DILocation(line: 742, column: 24, scope: !7855)
!7857 = !DILocation(line: 743, column: 3, scope: !7855)
!7858 = !DILocation(line: 743, column: 20, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7848, file: !7676, line: 743, column: 14)
!7860 = !DILocation(line: 743, column: 25, scope: !7859)
!7861 = !DILocation(line: 743, column: 52, scope: !7859)
!7862 = !DILocation(line: 743, column: 14, scope: !7848)
!7863 = !DILocation(line: 744, column: 13, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7859, file: !7676, line: 743, column: 58)
!7865 = !DILocation(line: 745, column: 3, scope: !7864)
!7866 = !DILocation(line: 745, column: 20, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7859, file: !7676, line: 745, column: 14)
!7868 = !DILocation(line: 745, column: 25, scope: !7867)
!7869 = !DILocation(line: 745, column: 52, scope: !7867)
!7870 = !DILocation(line: 745, column: 14, scope: !7859)
!7871 = !DILocation(line: 746, column: 13, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7867, file: !7676, line: 745, column: 58)
!7873 = !DILocation(line: 747, column: 3, scope: !7872)
!7874 = !DILocation(line: 747, column: 20, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7867, file: !7676, line: 747, column: 14)
!7876 = !DILocation(line: 747, column: 52, scope: !7875)
!7877 = !DILocation(line: 747, column: 14, scope: !7867)
!7878 = !DILocation(line: 748, column: 13, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7875, file: !7676, line: 747, column: 58)
!7880 = !DILocation(line: 753, column: 3, scope: !7879)
!7881 = !DILocation(line: 766, column: 2, scope: !7799)
!7882 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7676, file: !7676, line: 229, type: !7775, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7883)
!7883 = !{!7884, !7885, !7886, !7887, !7888, !7889, !7892}
!7884 = !DILocalVariable(name: "esf", arg: 1, scope: !7882, file: !7676, line: 229, type: !2877)
!7885 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7882, file: !7676, line: 229, type: !107)
!7886 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7882, file: !7676, line: 230, type: !7743)
!7887 = !DILocalVariable(name: "reason", scope: !7882, file: !7676, line: 232, type: !108)
!7888 = !DILocalVariable(name: "mmfar", scope: !7882, file: !7676, line: 233, type: !108)
!7889 = !DILocalVariable(name: "temp", scope: !7890, file: !7676, line: 254, type: !108)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7676, line: 244, column: 48)
!7891 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 244, column: 6)
!7892 = !DILocalVariable(name: "min_stack_ptr", scope: !7893, file: !7676, line: 309, type: !108)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7676, line: 308, column: 43)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !7676, line: 308, column: 7)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !7676, line: 289, column: 40)
!7896 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 288, column: 6)
!7897 = !DILocation(line: 0, scope: !7882)
!7898 = !DILocation(line: 235, column: 2, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !7676, line: 235, column: 2)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !7676, line: 235, column: 2)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7676, line: 235, column: 2)
!7902 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 235, column: 2)
!7903 = !DILocation(line: 237, column: 12, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 237, column: 6)
!7905 = !DILocation(line: 237, column: 17, scope: !7904)
!7906 = !DILocation(line: 237, column: 41, scope: !7904)
!7907 = !DILocation(line: 237, column: 6, scope: !7882)
!7908 = !DILocation(line: 238, column: 3, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !7676, line: 238, column: 3)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !7676, line: 238, column: 3)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !7676, line: 238, column: 3)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !7676, line: 238, column: 3)
!7913 = distinct !DILexicalBlock(scope: !7904, file: !7676, line: 237, column: 47)
!7914 = !DILocation(line: 240, column: 2, scope: !7913)
!7915 = !DILocation(line: 241, column: 12, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 241, column: 6)
!7917 = !DILocation(line: 241, column: 17, scope: !7916)
!7918 = !DILocation(line: 241, column: 43, scope: !7916)
!7919 = !DILocation(line: 241, column: 6, scope: !7882)
!7920 = !DILocation(line: 242, column: 3, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !7676, line: 242, column: 3)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !7676, line: 242, column: 3)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !7676, line: 242, column: 3)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !7676, line: 242, column: 3)
!7925 = distinct !DILexicalBlock(scope: !7916, file: !7676, line: 241, column: 49)
!7926 = !DILocation(line: 243, column: 2, scope: !7925)
!7927 = !DILocation(line: 244, column: 12, scope: !7891)
!7928 = !DILocation(line: 244, column: 17, scope: !7891)
!7929 = !DILocation(line: 244, column: 42, scope: !7891)
!7930 = !DILocation(line: 244, column: 6, scope: !7882)
!7931 = !DILocation(line: 245, column: 3, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !7676, line: 245, column: 3)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !7676, line: 245, column: 3)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !7676, line: 245, column: 3)
!7935 = distinct !DILexicalBlock(scope: !7890, file: !7676, line: 245, column: 3)
!7936 = !DILocation(line: 254, column: 24, scope: !7890)
!7937 = !DILocation(line: 0, scope: !7890)
!7938 = !DILocation(line: 256, column: 13, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7890, file: !7676, line: 256, column: 7)
!7940 = !DILocation(line: 256, column: 18, scope: !7939)
!7941 = !DILocation(line: 256, column: 44, scope: !7939)
!7942 = !DILocation(line: 256, column: 7, scope: !7890)
!7943 = !DILocation(line: 258, column: 4, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !7676, line: 258, column: 4)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !7676, line: 258, column: 4)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !7676, line: 258, column: 4)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !7676, line: 258, column: 4)
!7948 = distinct !DILexicalBlock(scope: !7939, file: !7676, line: 256, column: 50)
!7949 = !DILocation(line: 259, column: 24, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7948, file: !7676, line: 259, column: 8)
!7951 = !DILocation(line: 259, column: 8, scope: !7948)
!7952 = !DILocation(line: 261, column: 15, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !7676, line: 259, column: 30)
!7954 = !DILocation(line: 262, column: 4, scope: !7953)
!7955 = !DILocation(line: 265, column: 12, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 265, column: 6)
!7957 = !DILocation(line: 265, column: 17, scope: !7956)
!7958 = !DILocation(line: 265, column: 42, scope: !7956)
!7959 = !DILocation(line: 265, column: 6, scope: !7882)
!7960 = !DILocation(line: 266, column: 3, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !7676, line: 266, column: 3)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7676, line: 266, column: 3)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !7676, line: 266, column: 3)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !7676, line: 266, column: 3)
!7965 = distinct !DILexicalBlock(scope: !7956, file: !7676, line: 265, column: 48)
!7966 = !DILocation(line: 267, column: 2, scope: !7965)
!7967 = !DILocation(line: 269, column: 12, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 269, column: 6)
!7969 = !DILocation(line: 269, column: 17, scope: !7968)
!7970 = !DILocation(line: 269, column: 41, scope: !7968)
!7971 = !DILocation(line: 269, column: 6, scope: !7882)
!7972 = !DILocation(line: 270, column: 3, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7676, line: 270, column: 3)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7676, line: 270, column: 3)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7676, line: 270, column: 3)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !7676, line: 270, column: 3)
!7977 = distinct !DILexicalBlock(scope: !7968, file: !7676, line: 269, column: 47)
!7978 = !DILocation(line: 272, column: 2, scope: !7977)
!7979 = !DILocation(line: 288, column: 12, scope: !7896)
!7980 = !DILocation(line: 288, column: 17, scope: !7896)
!7981 = !DILocation(line: 288, column: 41, scope: !7896)
!7982 = !DILocation(line: 289, column: 9, scope: !7896)
!7983 = !DILocation(line: 289, column: 14, scope: !7896)
!7984 = !DILocation(line: 288, column: 6, scope: !7882)
!7985 = !DILocation(line: 308, column: 12, scope: !7894)
!7986 = !DILocation(line: 308, column: 17, scope: !7894)
!7987 = !DILocation(line: 308, column: 7, scope: !7895)
!7988 = !DILocation(line: 310, column: 6, scope: !7893)
!7989 = !DILocation(line: 309, column: 29, scope: !7893)
!7990 = !DILocation(line: 0, scope: !7893)
!7991 = !DILocation(line: 312, column: 8, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7893, file: !7676, line: 312, column: 8)
!7993 = !DILocation(line: 312, column: 8, scope: !7893)
!7994 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7995, file: !7375, line: 1099, type: !108)
!7995 = distinct !DISubprogram(name: "__set_PSP", scope: !7375, file: !7375, line: 1099, type: !7466, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !7996)
!7996 = !{!7994}
!7997 = !DILocation(line: 0, scope: !7995, inlinedAt: !7998)
!7998 = distinct !DILocation(line: 338, column: 5, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7992, file: !7676, line: 312, column: 23)
!8000 = !DILocation(line: 1101, column: 3, scope: !7995, inlinedAt: !7998)
!8001 = !{i64 3529024}
!8002 = !DILocation(line: 341, column: 4, scope: !7999)
!8003 = !DILocation(line: 360, column: 12, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 360, column: 6)
!8005 = !DILocation(line: 360, column: 17, scope: !8004)
!8006 = !DILocation(line: 360, column: 41, scope: !8004)
!8007 = !DILocation(line: 360, column: 6, scope: !7882)
!8008 = !DILocation(line: 361, column: 14, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8004, file: !7676, line: 360, column: 47)
!8010 = !DILocation(line: 362, column: 2, scope: !8009)
!8011 = !DILocation(line: 366, column: 12, scope: !7882)
!8012 = !DILocation(line: 369, column: 15, scope: !7882)
!8013 = !DILocation(line: 371, column: 2, scope: !7882)
!8014 = distinct !DISubprogram(name: "bus_fault", scope: !7676, file: !7676, line: 383, type: !8015, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !8017)
!8015 = !DISubroutineType(types: !8016)
!8016 = !{!107, !2877, !107, !7743}
!8017 = !{!8018, !8019, !8020, !8021, !8022}
!8018 = !DILocalVariable(name: "esf", arg: 1, scope: !8014, file: !7676, line: 383, type: !2877)
!8019 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8014, file: !7676, line: 383, type: !107)
!8020 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8014, file: !7676, line: 383, type: !7743)
!8021 = !DILocalVariable(name: "reason", scope: !8014, file: !7676, line: 385, type: !108)
!8022 = !DILocalVariable(name: "bfar", scope: !8023, file: !7676, line: 405, type: !108)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !7676, line: 395, column: 42)
!8024 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 395, column: 6)
!8025 = !DILocation(line: 0, scope: !8014)
!8026 = !DILocation(line: 387, column: 2, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7676, line: 387, column: 2)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7676, line: 387, column: 2)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !7676, line: 387, column: 2)
!8030 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 387, column: 2)
!8031 = !DILocation(line: 389, column: 11, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 389, column: 6)
!8033 = !DILocation(line: 389, column: 16, scope: !8032)
!8034 = !DILocation(line: 389, column: 6, scope: !8014)
!8035 = !DILocation(line: 390, column: 3, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8037, file: !7676, line: 390, column: 3)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !7676, line: 390, column: 3)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7676, line: 390, column: 3)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !7676, line: 390, column: 3)
!8040 = distinct !DILexicalBlock(scope: !8032, file: !7676, line: 389, column: 39)
!8041 = !DILocation(line: 391, column: 2, scope: !8040)
!8042 = !DILocation(line: 392, column: 11, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 392, column: 6)
!8044 = !DILocation(line: 392, column: 16, scope: !8043)
!8045 = !DILocation(line: 392, column: 6, scope: !8014)
!8046 = !DILocation(line: 393, column: 3, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !7676, line: 393, column: 3)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !7676, line: 393, column: 3)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !7676, line: 393, column: 3)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !7676, line: 393, column: 3)
!8051 = distinct !DILexicalBlock(scope: !8043, file: !7676, line: 392, column: 41)
!8052 = !DILocation(line: 394, column: 2, scope: !8051)
!8053 = !DILocation(line: 395, column: 11, scope: !8024)
!8054 = !DILocation(line: 395, column: 16, scope: !8024)
!8055 = !DILocation(line: 395, column: 6, scope: !8014)
!8056 = !DILocation(line: 396, column: 3, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !7676, line: 396, column: 3)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !7676, line: 396, column: 3)
!8059 = distinct !DILexicalBlock(scope: !8060, file: !7676, line: 396, column: 3)
!8060 = distinct !DILexicalBlock(scope: !8023, file: !7676, line: 396, column: 3)
!8061 = !DILocation(line: 405, column: 3, scope: !8023)
!8062 = !DILocation(line: 0, scope: !8023)
!8063 = !DILocation(line: 407, column: 13, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8023, file: !7676, line: 407, column: 7)
!8065 = !DILocation(line: 407, column: 18, scope: !8064)
!8066 = !DILocation(line: 407, column: 44, scope: !8064)
!8067 = !DILocation(line: 407, column: 7, scope: !8023)
!8068 = !DILocation(line: 408, column: 4, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !7676, line: 408, column: 4)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !7676, line: 408, column: 4)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !7676, line: 408, column: 4)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !7676, line: 408, column: 4)
!8073 = distinct !DILexicalBlock(scope: !8064, file: !7676, line: 407, column: 50)
!8074 = !DILocation(line: 409, column: 24, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8073, file: !7676, line: 409, column: 8)
!8076 = !DILocation(line: 409, column: 8, scope: !8073)
!8077 = !DILocation(line: 411, column: 15, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8075, file: !7676, line: 409, column: 30)
!8079 = !DILocation(line: 412, column: 4, scope: !8078)
!8080 = !DILocation(line: 415, column: 11, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 415, column: 6)
!8082 = !DILocation(line: 415, column: 16, scope: !8081)
!8083 = !DILocation(line: 415, column: 6, scope: !8014)
!8084 = !DILocation(line: 416, column: 3, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !7676, line: 416, column: 3)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !7676, line: 416, column: 3)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7676, line: 416, column: 3)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !7676, line: 416, column: 3)
!8089 = distinct !DILexicalBlock(scope: !8081, file: !7676, line: 415, column: 44)
!8090 = !DILocation(line: 417, column: 2, scope: !8089)
!8091 = !DILocation(line: 418, column: 12, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 418, column: 6)
!8093 = !DILocation(line: 418, column: 17, scope: !8092)
!8094 = !DILocation(line: 418, column: 41, scope: !8092)
!8095 = !DILocation(line: 418, column: 6, scope: !8014)
!8096 = !DILocation(line: 423, column: 18, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8092, file: !7676, line: 423, column: 13)
!8098 = !DILocation(line: 423, column: 23, scope: !8097)
!8099 = !DILocation(line: 423, column: 13, scope: !8092)
!8100 = !DILocation(line: 0, scope: !8092)
!8101 = !DILocation(line: 524, column: 12, scope: !8014)
!8102 = !DILocation(line: 526, column: 15, scope: !8014)
!8103 = !DILocation(line: 528, column: 2, scope: !8014)
!8104 = distinct !DISubprogram(name: "usage_fault", scope: !7676, file: !7676, line: 539, type: !8105, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !8109)
!8105 = !DISubroutineType(types: !8106)
!8106 = !{!108, !8107}
!8107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8108, size: 32)
!8108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2878)
!8109 = !{!8110, !8111}
!8110 = !DILocalVariable(name: "esf", arg: 1, scope: !8104, file: !7676, line: 539, type: !8107)
!8111 = !DILocalVariable(name: "reason", scope: !8104, file: !7676, line: 541, type: !108)
!8112 = !DILocation(line: 0, scope: !8104)
!8113 = !DILocation(line: 543, column: 2, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !7676, line: 543, column: 2)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !7676, line: 543, column: 2)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !7676, line: 543, column: 2)
!8117 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 543, column: 2)
!8118 = !DILocation(line: 546, column: 12, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 546, column: 6)
!8120 = !DILocation(line: 546, column: 17, scope: !8119)
!8121 = !DILocation(line: 546, column: 43, scope: !8119)
!8122 = !DILocation(line: 546, column: 6, scope: !8104)
!8123 = !DILocation(line: 547, column: 3, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !7676, line: 547, column: 3)
!8125 = distinct !DILexicalBlock(scope: !8126, file: !7676, line: 547, column: 3)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !7676, line: 547, column: 3)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !7676, line: 547, column: 3)
!8128 = distinct !DILexicalBlock(scope: !8119, file: !7676, line: 546, column: 49)
!8129 = !DILocation(line: 548, column: 2, scope: !8128)
!8130 = !DILocation(line: 549, column: 12, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 549, column: 6)
!8132 = !DILocation(line: 549, column: 17, scope: !8131)
!8133 = !DILocation(line: 549, column: 43, scope: !8131)
!8134 = !DILocation(line: 549, column: 6, scope: !8104)
!8135 = !DILocation(line: 550, column: 3, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !7676, line: 550, column: 3)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !7676, line: 550, column: 3)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !7676, line: 550, column: 3)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !7676, line: 550, column: 3)
!8140 = distinct !DILexicalBlock(scope: !8131, file: !7676, line: 549, column: 49)
!8141 = !DILocation(line: 551, column: 2, scope: !8140)
!8142 = !DILocation(line: 567, column: 12, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 567, column: 6)
!8144 = !DILocation(line: 567, column: 17, scope: !8143)
!8145 = !DILocation(line: 567, column: 38, scope: !8143)
!8146 = !DILocation(line: 567, column: 6, scope: !8104)
!8147 = !DILocation(line: 568, column: 3, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !7676, line: 568, column: 3)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !7676, line: 568, column: 3)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !7676, line: 568, column: 3)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !7676, line: 568, column: 3)
!8152 = distinct !DILexicalBlock(scope: !8143, file: !7676, line: 567, column: 44)
!8153 = !DILocation(line: 569, column: 2, scope: !8152)
!8154 = !DILocation(line: 570, column: 12, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 570, column: 6)
!8156 = !DILocation(line: 570, column: 17, scope: !8155)
!8157 = !DILocation(line: 570, column: 39, scope: !8155)
!8158 = !DILocation(line: 570, column: 6, scope: !8104)
!8159 = !DILocation(line: 571, column: 3, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !7676, line: 571, column: 3)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !7676, line: 571, column: 3)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !7676, line: 571, column: 3)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !7676, line: 571, column: 3)
!8164 = distinct !DILexicalBlock(scope: !8155, file: !7676, line: 570, column: 45)
!8165 = !DILocation(line: 572, column: 2, scope: !8164)
!8166 = !DILocation(line: 573, column: 12, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 573, column: 6)
!8168 = !DILocation(line: 573, column: 17, scope: !8167)
!8169 = !DILocation(line: 573, column: 42, scope: !8167)
!8170 = !DILocation(line: 573, column: 6, scope: !8104)
!8171 = !DILocation(line: 574, column: 3, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !7676, line: 574, column: 3)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !7676, line: 574, column: 3)
!8174 = distinct !DILexicalBlock(scope: !8175, file: !7676, line: 574, column: 3)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !7676, line: 574, column: 3)
!8176 = distinct !DILexicalBlock(scope: !8167, file: !7676, line: 573, column: 48)
!8177 = !DILocation(line: 575, column: 2, scope: !8176)
!8178 = !DILocation(line: 576, column: 12, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 576, column: 6)
!8180 = !DILocation(line: 576, column: 17, scope: !8179)
!8181 = !DILocation(line: 576, column: 44, scope: !8179)
!8182 = !DILocation(line: 576, column: 6, scope: !8104)
!8183 = !DILocation(line: 577, column: 3, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !7676, line: 577, column: 3)
!8185 = distinct !DILexicalBlock(scope: !8186, file: !7676, line: 577, column: 3)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !7676, line: 577, column: 3)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !7676, line: 577, column: 3)
!8188 = distinct !DILexicalBlock(scope: !8179, file: !7676, line: 576, column: 50)
!8189 = !DILocation(line: 578, column: 2, scope: !8188)
!8190 = !DILocation(line: 581, column: 12, scope: !8104)
!8191 = !DILocation(line: 583, column: 2, scope: !8104)
!8192 = distinct !DISubprogram(name: "debug_monitor", scope: !7676, file: !7676, line: 632, type: !8193, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !8195)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{null, !2877, !7743}
!8195 = !{!8196, !8197}
!8196 = !DILocalVariable(name: "esf", arg: 1, scope: !8192, file: !7676, line: 632, type: !2877)
!8197 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8192, file: !7676, line: 632, type: !7743)
!8198 = !DILocation(line: 0, scope: !8192)
!8199 = !DILocation(line: 634, column: 15, scope: !8192)
!8200 = !DILocation(line: 636, column: 2, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !7676, line: 636, column: 2)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !7676, line: 636, column: 2)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !7676, line: 636, column: 2)
!8204 = distinct !DILexicalBlock(scope: !8192, file: !7676, line: 636, column: 2)
!8205 = !DILocation(line: 652, column: 1, scope: !8192)
!8206 = distinct !DISubprogram(name: "reserved_exception", scope: !7676, file: !7676, line: 776, type: !8207, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !8209)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{null, !8107, !107}
!8209 = !{!8210, !8211}
!8210 = !DILocalVariable(name: "esf", arg: 1, scope: !8206, file: !7676, line: 776, type: !8107)
!8211 = !DILocalVariable(name: "fault", arg: 2, scope: !8206, file: !7676, line: 776, type: !107)
!8212 = !DILocation(line: 0, scope: !8206)
!8213 = !DILocation(line: 780, column: 2, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !7676, line: 780, column: 2)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !7676, line: 780, column: 2)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !7676, line: 780, column: 2)
!8217 = distinct !DILexicalBlock(scope: !8206, file: !7676, line: 780, column: 2)
!8218 = !DILocation(line: 783, column: 1, scope: !8206)
!8219 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7676, file: !7676, line: 658, type: !8220, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !8222)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!136, !2877}
!8222 = !{!8223, !8224, !8225}
!8223 = !DILocalVariable(name: "esf", arg: 1, scope: !8219, file: !7676, line: 658, type: !2877)
!8224 = !DILocalVariable(name: "ret_addr", scope: !8219, file: !7676, line: 660, type: !2651)
!8225 = !DILocalVariable(name: "fault_insn", scope: !8219, file: !7676, line: 686, type: !126)
!8226 = !DILocation(line: 0, scope: !8219)
!8227 = !DILocation(line: 660, column: 46, scope: !8219)
!8228 = !DILocation(line: 660, column: 23, scope: !8219)
!8229 = !DILocation(line: 682, column: 11, scope: !8219)
!8230 = !DILocation(line: 271, column: 3, scope: !8231, inlinedAt: !8232)
!8231 = distinct !DISubprogram(name: "__DSB", scope: !7375, file: !7375, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !256)
!8232 = distinct !DILocation(line: 683, column: 2, scope: !8219)
!8233 = !{i64 3505159}
!8234 = !DILocation(line: 260, column: 3, scope: !8235, inlinedAt: !8236)
!8235 = distinct !DISubprogram(name: "__ISB", scope: !7375, file: !7375, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !256)
!8236 = distinct !DILocation(line: 684, column: 2, scope: !8219)
!8237 = !{i64 3504876}
!8238 = !DILocation(line: 686, column: 35, scope: !8219)
!8239 = !DILocation(line: 686, column: 24, scope: !8219)
!8240 = !DILocation(line: 688, column: 11, scope: !8219)
!8241 = !DILocation(line: 271, column: 3, scope: !8231, inlinedAt: !8242)
!8242 = distinct !DILocation(line: 689, column: 2, scope: !8219)
!8243 = !DILocation(line: 260, column: 3, scope: !8235, inlinedAt: !8244)
!8244 = distinct !DILocation(line: 690, column: 2, scope: !8219)
!8245 = !DILocation(line: 693, column: 45, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8219, file: !7676, line: 693, column: 6)
!8247 = !DILocation(line: 699, column: 1, scope: !8219)
!8248 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7676, file: !7676, line: 1107, type: !337, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !256)
!8249 = !DILocation(line: 1111, column: 11, scope: !8248)
!8250 = !DILocation(line: 1136, column: 1, scope: !8248)
!8251 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8252, file: !8252, line: 26, type: !337, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !8253)
!8252 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8253 = !{!8254}
!8254 = !DILocalVariable(name: "irq", scope: !8251, file: !8252, line: 28, type: !107)
!8255 = !DILocation(line: 0, scope: !8251)
!8256 = !DILocation(line: 30, column: 2, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8251, file: !8252, line: 30, column: 2)
!8258 = !DILocation(line: 31, column: 3, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !8252, line: 30, column: 39)
!8260 = distinct !DILexicalBlock(scope: !8257, file: !8252, line: 30, column: 2)
!8261 = !DILocation(line: 30, column: 35, scope: !8260)
!8262 = !DILocation(line: 30, column: 13, scope: !8260)
!8263 = distinct !{!8263, !8256, !8264}
!8264 = !DILocation(line: 32, column: 2, scope: !8257)
!8265 = !DILocation(line: 33, column: 1, scope: !8251)
!8266 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7409, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !8267)
!8267 = !{!8268, !8269}
!8268 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8266, file: !644, line: 1814, type: !911)
!8269 = !DILocalVariable(name: "priority", arg: 2, scope: !8266, file: !644, line: 1814, type: !108)
!8270 = !DILocation(line: 0, scope: !8266)
!8271 = !DILocation(line: 1816, column: 7, scope: !8266)
!8272 = !DILocation(line: 0, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8266, file: !644, line: 1816, column: 7)
!8274 = !DILocation(line: 1824, column: 1, scope: !8266)
!8275 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8276, file: !8276, line: 27, type: !8277, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !8380)
!8276 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8277 = !DISubroutineType(types: !8278)
!8278 = !{null, !8279}
!8279 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !8280)
!8280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8281, size: 32)
!8281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !8282)
!8282 = !{!8283, !8341, !8353, !8354, !8355, !8356, !8362, !8375}
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8281, file: !168, line: 247, baseType: !8284, size: 384)
!8284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !8285)
!8285 = !{!8286, !8310, !8317, !8318, !8319, !8328, !8329, !8330}
!8286 = !DIDerivedType(tag: DW_TAG_member, scope: !8284, file: !168, line: 60, baseType: !8287, size: 64)
!8287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8284, file: !168, line: 60, size: 64, elements: !8288)
!8288 = !{!8289, !8304}
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8287, file: !168, line: 61, baseType: !8290, size: 64)
!8290 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !8291)
!8291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !8292)
!8292 = !{!8293, !8299}
!8293 = !DIDerivedType(tag: DW_TAG_member, scope: !8291, file: !151, line: 38, baseType: !8294, size: 32)
!8294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8291, file: !151, line: 38, size: 32, elements: !8295)
!8295 = !{!8296, !8298}
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8294, file: !151, line: 39, baseType: !8297, size: 32)
!8297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8291, size: 32)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8294, file: !151, line: 40, baseType: !8297, size: 32)
!8299 = !DIDerivedType(tag: DW_TAG_member, scope: !8291, file: !151, line: 42, baseType: !8300, size: 32, offset: 32)
!8300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8291, file: !151, line: 42, size: 32, elements: !8301)
!8301 = !{!8302, !8303}
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8300, file: !151, line: 43, baseType: !8297, size: 32)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8300, file: !151, line: 44, baseType: !8297, size: 32)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8287, file: !168, line: 62, baseType: !8305, size: 64)
!8305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !8306)
!8306 = !{!8307}
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8305, file: !180, line: 50, baseType: !8308, size: 64)
!8308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8309, size: 64, elements: !185)
!8309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8305, size: 32)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8284, file: !168, line: 68, baseType: !8311, size: 32, offset: 64)
!8311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8312, size: 32)
!8312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !8313)
!8313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !8314)
!8314 = !{!8315}
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8313, file: !146, line: 232, baseType: !8316, size: 64)
!8316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !8291)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8284, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8284, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!8319 = !DIDerivedType(tag: DW_TAG_member, scope: !8284, file: !168, line: 90, baseType: !8320, size: 16, offset: 112)
!8320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8284, file: !168, line: 90, size: 16, elements: !8321)
!8321 = !{!8322, !8327}
!8322 = !DIDerivedType(tag: DW_TAG_member, scope: !8320, file: !168, line: 91, baseType: !8323, size: 16)
!8323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8320, file: !168, line: 91, size: 16, elements: !8324)
!8324 = !{!8325, !8326}
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8323, file: !168, line: 96, baseType: !200, size: 8)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8323, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8320, file: !168, line: 100, baseType: !126, size: 16)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8284, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8284, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8284, file: !168, line: 131, baseType: !8331, size: 192, offset: 192)
!8331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !8332)
!8332 = !{!8333, !8334, !8340}
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8331, file: !146, line: 245, baseType: !8290, size: 64)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8331, file: !146, line: 246, baseType: !8335, size: 32, offset: 64)
!8335 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !8336)
!8336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8337, size: 32)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{null, !8339}
!8339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8331, size: 32)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8331, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8281, file: !168, line: 250, baseType: !8342, size: 288, offset: 384)
!8342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !8343)
!8343 = !{!8344, !8345, !8346, !8347, !8348, !8349, !8350, !8351, !8352}
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8342, file: !219, line: 26, baseType: !108, size: 32)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8342, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8342, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8342, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8342, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8342, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8342, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8342, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8342, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8281, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8281, file: !168, line: 256, baseType: !8312, size: 64, offset: 704)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8281, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8281, file: !168, line: 300, baseType: !8357, size: 96, offset: 800)
!8357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !8358)
!8358 = !{!8359, !8360, !8361}
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8357, file: !168, line: 153, baseType: !22, size: 32)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8357, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8357, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8281, file: !168, line: 325, baseType: !8363, size: 32, offset: 896)
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8364, size: 32)
!8364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !8365)
!8365 = !{!8366, !8372, !8373}
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8364, file: !142, line: 5074, baseType: !8367, size: 96)
!8367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !8368)
!8368 = !{!8369, !8370, !8371}
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8367, file: !245, line: 57, baseType: !248, size: 32)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8367, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8367, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8364, file: !142, line: 5075, baseType: !8312, size: 64, offset: 96)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8364, file: !142, line: 5076, baseType: !8374, offset: 160)
!8374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8281, file: !168, line: 343, baseType: !8376, size: 64, offset: 928)
!8376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !8377)
!8377 = !{!8378, !8379}
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8376, file: !219, line: 63, baseType: !108, size: 32)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8376, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!8380 = !{!8381}
!8381 = !DILocalVariable(name: "thread", arg: 1, scope: !8275, file: !8276, line: 27, type: !8279)
!8382 = !DILocation(line: 0, scope: !8275)
!8383 = !DILocation(line: 29, column: 6, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8275, file: !8276, line: 29, column: 6)
!8385 = !DILocation(line: 29, column: 15, scope: !8384)
!8386 = !DILocation(line: 29, column: 6, scope: !8275)
!8387 = !DILocation(line: 1031, column: 3, scope: !8388, inlinedAt: !8391)
!8388 = distinct !DISubprogram(name: "__get_IPSR", scope: !7375, file: !7375, line: 1027, type: !7456, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !8389)
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "result", scope: !8388, file: !7375, line: 1029, type: !108)
!8391 = distinct !DILocation(line: 48, column: 10, scope: !8392, inlinedAt: !8396)
!8392 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8393, file: !8393, line: 46, type: !8394, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !256)
!8393 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8394 = !DISubroutineType(types: !8395)
!8395 = !{!136}
!8396 = distinct !DILocation(line: 30, column: 7, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8398, file: !8276, line: 30, column: 7)
!8398 = distinct !DILexicalBlock(scope: !8384, file: !8276, line: 29, column: 26)
!8399 = !{i64 3494007}
!8400 = !DILocation(line: 0, scope: !8388, inlinedAt: !8391)
!8401 = !DILocation(line: 48, column: 9, scope: !8392, inlinedAt: !8396)
!8402 = !DILocation(line: 30, column: 7, scope: !8398)
!8403 = !DILocation(line: 42, column: 14, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8397, file: !8276, line: 30, column: 25)
!8405 = !DILocation(line: 48, column: 15, scope: !8404)
!8406 = !DILocation(line: 49, column: 3, scope: !8404)
!8407 = !DILocation(line: 52, column: 2, scope: !8275)
!8408 = !DILocation(line: 53, column: 1, scope: !8275)
!8409 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !508, file: !508, line: 127, type: !337, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !501, retainedNodes: !256)
!8410 = !DILocation(line: 134, column: 2, scope: !8409)
!8411 = !DILocation(line: 156, column: 1, scope: !8409)
!8412 = !DILocation(line: 0, scope: !507)
!8413 = !DILocation(line: 289, column: 36, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !507, file: !508, line: 285, column: 2)
!8415 = !DILocation(line: 289, column: 42, scope: !8414)
!8416 = !DILocation(line: 300, column: 36, scope: !507)
!8417 = !DILocation(line: 301, column: 35, scope: !507)
!8418 = !DILocation(line: 302, column: 37, scope: !507)
!8419 = !DILocation(line: 311, column: 2, scope: !507)
!8420 = !DILocation(line: 316, column: 1, scope: !507)
!8421 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !672, file: !672, line: 180, type: !337, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8422 = !DILocation(line: 188, column: 12, scope: !8421)
!8423 = !DILocation(line: 271, column: 3, scope: !8424, inlinedAt: !8425)
!8424 = distinct !DISubprogram(name: "__DSB", scope: !7375, file: !7375, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8425 = distinct !DILocation(line: 192, column: 2, scope: !8421)
!8426 = !{i64 3662835}
!8427 = !DILocation(line: 260, column: 3, scope: !8428, inlinedAt: !8429)
!8428 = distinct !DISubprogram(name: "__ISB", scope: !7375, file: !7375, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8429 = distinct !DILocation(line: 193, column: 2, scope: !8421)
!8430 = !{i64 3662552}
!8431 = !DILocation(line: 194, column: 1, scope: !8421)
!8432 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !672, file: !672, line: 199, type: !337, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8433 = !DILocation(line: 282, column: 3, scope: !8434, inlinedAt: !8435)
!8434 = distinct !DISubprogram(name: "__DMB", scope: !7375, file: !7375, line: 280, type: !337, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8435 = distinct !DILocation(line: 202, column: 2, scope: !8432)
!8436 = !{i64 3663111}
!8437 = !DILocation(line: 205, column: 12, scope: !8432)
!8438 = !DILocation(line: 206, column: 1, scope: !8432)
!8439 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !672, file: !672, line: 275, type: !8440, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8453)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{null, !8442, !1924, !7643, !7643}
!8442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8443, size: 32)
!8443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8444)
!8444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !618, line: 52, size: 96, elements: !8445)
!8445 = !{!8446, !8447, !8448}
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8444, file: !618, line: 53, baseType: !22, size: 32)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8444, file: !618, line: 54, baseType: !137, size: 32, offset: 32)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8444, file: !618, line: 55, baseType: !8449, size: 32, offset: 64)
!8449 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !624, line: 151, baseType: !8450)
!8450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 149, size: 32, elements: !8451)
!8451 = !{!8452}
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8450, file: !624, line: 150, baseType: !108, size: 32)
!8453 = !{!8454, !8455, !8456, !8457}
!8454 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8439, file: !672, line: 276, type: !8442)
!8455 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8439, file: !672, line: 276, type: !1924)
!8456 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8439, file: !672, line: 277, type: !7643)
!8457 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8439, file: !672, line: 277, type: !7643)
!8458 = !DILocation(line: 0, scope: !8439)
!8459 = !DILocation(line: 279, column: 6, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8439, file: !672, line: 279, column: 6)
!8461 = !DILocation(line: 285, column: 1, scope: !8439)
!8462 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8463, file: !8463, line: 220, type: !8464, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8466)
!8463 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8464 = !DISubroutineType(types: !8465)
!8465 = !{!107, !8442, !1924, !7643, !7643}
!8466 = !{!8467, !8468, !8469, !8470, !8471}
!8467 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8462, file: !8463, line: 221, type: !8442)
!8468 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8462, file: !8463, line: 221, type: !1924)
!8469 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8462, file: !8463, line: 222, type: !7643)
!8470 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8462, file: !8463, line: 223, type: !7643)
!8471 = !DILocalVariable(name: "mpu_reg_index", scope: !8462, file: !8463, line: 225, type: !107)
!8472 = !DILocation(line: 0, scope: !8462)
!8473 = !DILocation(line: 225, column: 22, scope: !8462)
!8474 = !DILocation(line: 233, column: 18, scope: !8462)
!8475 = !DILocation(line: 236, column: 23, scope: !8462)
!8476 = !DILocation(line: 236, column: 21, scope: !8462)
!8477 = !DILocation(line: 238, column: 2, scope: !8462)
!8478 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !672, file: !672, line: 105, type: !8479, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8481)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{!107, !8442, !190, !190, !136}
!8481 = !{!8482, !8483, !8484, !8485, !8486, !8487}
!8482 = !DILocalVariable(name: "regions", arg: 1, scope: !8478, file: !672, line: 106, type: !8442)
!8483 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8478, file: !672, line: 106, type: !190)
!8484 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8478, file: !672, line: 106, type: !190)
!8485 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8478, file: !672, line: 107, type: !136)
!8486 = !DILocalVariable(name: "i", scope: !8478, file: !672, line: 109, type: !107)
!8487 = !DILocalVariable(name: "reg_index", scope: !8478, file: !672, line: 110, type: !107)
!8488 = !DILocation(line: 0, scope: !8478)
!8489 = !DILocation(line: 110, column: 18, scope: !8478)
!8490 = !DILocation(line: 112, column: 16, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !672, line: 112, column: 2)
!8492 = distinct !DILexicalBlock(scope: !8478, file: !672, line: 112, column: 2)
!8493 = !DILocation(line: 112, column: 2, scope: !8492)
!8494 = !DILocation(line: 113, column: 7, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !672, line: 113, column: 7)
!8496 = distinct !DILexicalBlock(scope: !8491, file: !672, line: 112, column: 36)
!8497 = !DILocation(line: 113, column: 18, scope: !8495)
!8498 = !DILocation(line: 113, column: 23, scope: !8495)
!8499 = !DILocation(line: 113, column: 7, scope: !8496)
!8500 = !DILocation(line: 118, column: 23, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8496, file: !672, line: 118, column: 7)
!8502 = !DILocation(line: 119, column: 7, scope: !8501)
!8503 = !DILocation(line: 118, column: 7, scope: !8496)
!8504 = !DILocation(line: 120, column: 4, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !672, line: 120, column: 4)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !672, line: 120, column: 4)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !672, line: 120, column: 4)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !672, line: 120, column: 4)
!8509 = distinct !DILexicalBlock(scope: !8501, file: !672, line: 119, column: 45)
!8510 = !DILocation(line: 121, column: 4, scope: !8509)
!8511 = !DILocation(line: 124, column: 36, scope: !8496)
!8512 = !DILocation(line: 124, column: 15, scope: !8496)
!8513 = !DILocation(line: 126, column: 17, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8496, file: !672, line: 126, column: 7)
!8515 = !DILocation(line: 126, column: 7, scope: !8496)
!8516 = !DILocation(line: 131, column: 12, scope: !8496)
!8517 = !DILocation(line: 132, column: 2, scope: !8496)
!8518 = !DILocation(line: 112, column: 32, scope: !8491)
!8519 = distinct !{!8519, !8493, !8520}
!8520 = !DILocation(line: 132, column: 2, scope: !8492)
!8521 = !DILocation(line: 135, column: 1, scope: !8478)
!8522 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8463, file: !8463, line: 63, type: !8523, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8525)
!8523 = !DISubroutineType(types: !8524)
!8524 = !{!107, !8442}
!8525 = !{!8526, !8527}
!8526 = !DILocalVariable(name: "part", arg: 1, scope: !8522, file: !8463, line: 63, type: !8442)
!8527 = !DILocalVariable(name: "partition_is_valid", scope: !8522, file: !8463, line: 70, type: !107)
!8528 = !DILocation(line: 0, scope: !8522)
!8529 = !DILocation(line: 71, column: 11, scope: !8522)
!8530 = !DILocation(line: 71, column: 37, scope: !8522)
!8531 = !DILocation(line: 72, column: 3, scope: !8522)
!8532 = !DILocation(line: 71, column: 30, scope: !8522)
!8533 = !DILocation(line: 75, column: 11, scope: !8522)
!8534 = !DILocation(line: 75, column: 17, scope: !8522)
!8535 = !DILocation(line: 75, column: 38, scope: !8522)
!8536 = !DILocation(line: 77, column: 2, scope: !8522)
!8537 = distinct !DISubprogram(name: "mpu_configure_region", scope: !672, file: !672, line: 79, type: !8538, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8540)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!107, !1924, !8442}
!8540 = !{!8541, !8542, !8543}
!8541 = !DILocalVariable(name: "index", arg: 1, scope: !8537, file: !672, line: 79, type: !1924)
!8542 = !DILocalVariable(name: "new_region", arg: 2, scope: !8537, file: !672, line: 80, type: !8442)
!8543 = !DILocalVariable(name: "region_conf", scope: !8537, file: !672, line: 82, type: !661)
!8544 = !DILocation(line: 0, scope: !8537)
!8545 = !DILocation(line: 82, column: 2, scope: !8537)
!8546 = !DILocation(line: 82, column: 24, scope: !8537)
!8547 = !DILocation(line: 87, column: 33, scope: !8537)
!8548 = !DILocation(line: 87, column: 14, scope: !8537)
!8549 = !DILocation(line: 87, column: 19, scope: !8537)
!8550 = !DILocation(line: 91, column: 55, scope: !8537)
!8551 = !DILocation(line: 92, column: 16, scope: !8537)
!8552 = !DILocation(line: 92, column: 53, scope: !8537)
!8553 = !DILocation(line: 91, column: 2, scope: !8537)
!8554 = !DILocation(line: 95, column: 9, scope: !8537)
!8555 = !DILocation(line: 97, column: 1, scope: !8537)
!8556 = !DILocation(line: 95, column: 2, scope: !8537)
!8557 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8463, file: !8463, line: 113, type: !8558, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8563)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{null, !8560, !8561, !108, !108}
!8560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!8561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8562, size: 32)
!8562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8449)
!8563 = !{!8564, !8565, !8566, !8567}
!8564 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8557, file: !8463, line: 114, type: !8560)
!8565 = !DILocalVariable(name: "attr", arg: 2, scope: !8557, file: !8463, line: 115, type: !8561)
!8566 = !DILocalVariable(name: "base", arg: 3, scope: !8557, file: !8463, line: 115, type: !108)
!8567 = !DILocalVariable(name: "size", arg: 4, scope: !8557, file: !8463, line: 115, type: !108)
!8568 = !DILocation(line: 0, scope: !8557)
!8569 = !DILocation(line: 127, column: 23, scope: !8557)
!8570 = !DILocation(line: 127, column: 35, scope: !8557)
!8571 = !DILocation(line: 127, column: 33, scope: !8557)
!8572 = !DILocation(line: 127, column: 10, scope: !8557)
!8573 = !DILocation(line: 127, column: 15, scope: !8557)
!8574 = !DILocation(line: 129, column: 1, scope: !8557)
!8575 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !672, file: !672, line: 57, type: !8576, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8578)
!8576 = !DISubroutineType(types: !8577)
!8577 = !{!107, !1924, !659}
!8578 = !{!8579, !8580}
!8579 = !DILocalVariable(name: "index", arg: 1, scope: !8575, file: !672, line: 57, type: !1924)
!8580 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8575, file: !672, line: 58, type: !659)
!8581 = !DILocation(line: 0, scope: !8575)
!8582 = !DILocation(line: 61, column: 6, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8575, file: !672, line: 61, column: 6)
!8584 = !DILocation(line: 61, column: 12, scope: !8583)
!8585 = !DILocation(line: 61, column: 6, scope: !8575)
!8586 = !DILocation(line: 64, column: 3, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !672, line: 64, column: 3)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !672, line: 64, column: 3)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !672, line: 64, column: 3)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !672, line: 64, column: 3)
!8591 = distinct !DILexicalBlock(scope: !8583, file: !672, line: 61, column: 40)
!8592 = !DILocation(line: 65, column: 3, scope: !8591)
!8593 = !DILocation(line: 71, column: 2, scope: !8575)
!8594 = !DILocation(line: 73, column: 2, scope: !8575)
!8595 = !DILocation(line: 74, column: 1, scope: !8575)
!8596 = distinct !DISubprogram(name: "region_init", scope: !8463, file: !8463, line: 29, type: !8597, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8599)
!8597 = !DISubroutineType(types: !8598)
!8598 = !{null, !7643, !659}
!8599 = !{!8600, !8601}
!8600 = !DILocalVariable(name: "index", arg: 1, scope: !8596, file: !8463, line: 29, type: !7643)
!8601 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8596, file: !8463, line: 30, type: !659)
!8602 = !DILocation(line: 0, scope: !8596)
!8603 = !DILocation(line: 33, column: 2, scope: !8596)
!8604 = !DILocation(line: 47, column: 28, scope: !8596)
!8605 = !DILocation(line: 47, column: 33, scope: !8596)
!8606 = !DILocation(line: 48, column: 26, scope: !8596)
!8607 = !DILocation(line: 47, column: 12, scope: !8596)
!8608 = !DILocation(line: 49, column: 32, scope: !8596)
!8609 = !DILocation(line: 49, column: 37, scope: !8596)
!8610 = !DILocation(line: 49, column: 12, scope: !8596)
!8611 = !DILocation(line: 53, column: 1, scope: !8596)
!8612 = distinct !DISubprogram(name: "set_region_number", scope: !8613, file: !8613, line: 32, type: !7466, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8614)
!8613 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8614 = !{!8615}
!8615 = !DILocalVariable(name: "index", arg: 1, scope: !8612, file: !8613, line: 32, type: !108)
!8616 = !DILocation(line: 0, scope: !8612)
!8617 = !DILocation(line: 34, column: 11, scope: !8612)
!8618 = !DILocation(line: 35, column: 1, scope: !8612)
!8619 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8463, file: !8463, line: 88, type: !8620, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8622)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{!108, !108}
!8622 = !{!8623}
!8623 = !DILocalVariable(name: "size", arg: 1, scope: !8619, file: !8463, line: 88, type: !108)
!8624 = !DILocation(line: 0, scope: !8619)
!8625 = !DILocation(line: 91, column: 11, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8619, file: !8463, line: 91, column: 6)
!8627 = !DILocation(line: 91, column: 6, scope: !8619)
!8628 = !DILocation(line: 100, column: 11, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8619, file: !8463, line: 100, column: 6)
!8630 = !DILocation(line: 100, column: 6, scope: !8619)
!8631 = !DILocation(line: 104, column: 35, scope: !8619)
!8632 = !DILocation(line: 104, column: 16, scope: !8619)
!8633 = !DILocation(line: 104, column: 50, scope: !8619)
!8634 = !DILocation(line: 104, column: 72, scope: !8619)
!8635 = !DILocation(line: 104, column: 2, scope: !8619)
!8636 = !DILocation(line: 106, column: 1, scope: !8619)
!8637 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !672, file: !672, line: 307, type: !8638, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8640)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{null, !8442, !190}
!8640 = !{!8641, !8642}
!8641 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8637, file: !672, line: 308, type: !8442)
!8642 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8637, file: !672, line: 308, type: !190)
!8643 = !DILocation(line: 0, scope: !8637)
!8644 = !DILocation(line: 310, column: 6, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8637, file: !672, line: 310, column: 6)
!8646 = !DILocation(line: 316, column: 1, scope: !8637)
!8647 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8463, file: !8463, line: 249, type: !8648, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8650)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{!107, !8442, !190}
!8650 = !{!8651, !8652, !8653, !8654}
!8651 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8647, file: !8463, line: 250, type: !8442)
!8652 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8647, file: !8463, line: 250, type: !190)
!8653 = !DILocalVariable(name: "mpu_reg_index", scope: !8647, file: !8463, line: 252, type: !107)
!8654 = !DILocalVariable(name: "i", scope: !8655, file: !8463, line: 264, type: !107)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !8463, line: 264, column: 3)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !8463, line: 261, column: 32)
!8657 = distinct !DILexicalBlock(scope: !8647, file: !8463, line: 261, column: 6)
!8658 = !DILocation(line: 0, scope: !8647)
!8659 = !DILocation(line: 252, column: 22, scope: !8647)
!8660 = !DILocation(line: 258, column: 18, scope: !8647)
!8661 = !DILocation(line: 261, column: 20, scope: !8657)
!8662 = !DILocation(line: 261, column: 6, scope: !8647)
!8663 = !DILocation(line: 0, scope: !8655)
!8664 = !DILocation(line: 265, column: 4, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8666, file: !8463, line: 264, column: 59)
!8666 = distinct !DILexicalBlock(scope: !8655, file: !8463, line: 264, column: 3)
!8667 = !DILocation(line: 264, column: 55, scope: !8666)
!8668 = !DILocation(line: 264, column: 33, scope: !8666)
!8669 = !DILocation(line: 264, column: 3, scope: !8655)
!8670 = distinct !{!8670, !8669, !8671}
!8671 = !DILocation(line: 266, column: 3, scope: !8655)
!8672 = !DILocation(line: 269, column: 2, scope: !8647)
!8673 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8674, file: !8674, line: 218, type: !7466, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8675)
!8674 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8675 = !{!8676}
!8676 = !DILocalVariable(name: "rnr", arg: 1, scope: !8673, file: !8674, line: 218, type: !108)
!8677 = !DILocation(line: 0, scope: !8673)
!8678 = !DILocation(line: 220, column: 12, scope: !8673)
!8679 = !DILocation(line: 221, column: 13, scope: !8673)
!8680 = !DILocation(line: 222, column: 1, scope: !8673)
!8681 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !672, file: !672, line: 326, type: !8682, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8684)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!107}
!8684 = !{!8685}
!8685 = !DILocalVariable(name: "r_index", scope: !8681, file: !672, line: 328, type: !108)
!8686 = !DILocation(line: 330, column: 17, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8681, file: !672, line: 330, column: 6)
!8688 = !DILocation(line: 330, column: 29, scope: !8687)
!8689 = !DILocation(line: 330, column: 6, scope: !8681)
!8690 = !DILocation(line: 347, column: 2, scope: !8681)
!8691 = !DILocation(line: 0, scope: !8681)
!8692 = !DILocation(line: 364, column: 29, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !672, line: 364, column: 2)
!8694 = distinct !DILexicalBlock(scope: !8681, file: !672, line: 364, column: 2)
!8695 = !DILocation(line: 364, column: 2, scope: !8694)
!8696 = !DILocation(line: 365, column: 25, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8693, file: !672, line: 364, column: 66)
!8698 = !DILocation(line: 365, column: 3, scope: !8697)
!8699 = !DILocation(line: 364, column: 62, scope: !8693)
!8700 = distinct !{!8700, !8695, !8701}
!8701 = !DILocation(line: 366, column: 2, scope: !8694)
!8702 = !DILocation(line: 369, column: 23, scope: !8681)
!8703 = !DILocation(line: 369, column: 21, scope: !8681)
!8704 = !DILocation(line: 372, column: 2, scope: !8681)
!8705 = !DILocation(line: 443, column: 2, scope: !8681)
!8706 = !DILocation(line: 444, column: 1, scope: !8681)
!8707 = distinct !DISubprogram(name: "strcpy", scope: !8708, file: !8708, line: 20, type: !8709, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8713)
!8708 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!283, !8711, !8712}
!8711 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !283)
!8712 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !121)
!8713 = !{!8714, !8715, !8716}
!8714 = !DILocalVariable(name: "d", arg: 1, scope: !8707, file: !8708, line: 20, type: !8711)
!8715 = !DILocalVariable(name: "s", arg: 2, scope: !8707, file: !8708, line: 20, type: !8712)
!8716 = !DILocalVariable(name: "dest", scope: !8707, file: !8708, line: 22, type: !283)
!8717 = !DILocation(line: 0, scope: !8707)
!8718 = !DILocation(line: 24, column: 9, scope: !8707)
!8719 = !DILocation(line: 24, column: 12, scope: !8707)
!8720 = !DILocation(line: 24, column: 2, scope: !8707)
!8721 = !DILocation(line: 25, column: 6, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8707, file: !8708, line: 24, column: 21)
!8723 = !DILocation(line: 26, column: 4, scope: !8722)
!8724 = !DILocation(line: 27, column: 4, scope: !8722)
!8725 = distinct !{!8725, !8720, !8726}
!8726 = !DILocation(line: 28, column: 2, scope: !8707)
!8727 = !DILocation(line: 30, column: 5, scope: !8707)
!8728 = !DILocation(line: 32, column: 2, scope: !8707)
!8729 = distinct !DISubprogram(name: "strncpy", scope: !8708, file: !8708, line: 42, type: !8730, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8732)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!283, !8711, !8712, !137}
!8732 = !{!8733, !8734, !8735, !8736}
!8733 = !DILocalVariable(name: "d", arg: 1, scope: !8729, file: !8708, line: 42, type: !8711)
!8734 = !DILocalVariable(name: "s", arg: 2, scope: !8729, file: !8708, line: 42, type: !8712)
!8735 = !DILocalVariable(name: "n", arg: 3, scope: !8729, file: !8708, line: 42, type: !137)
!8736 = !DILocalVariable(name: "dest", scope: !8729, file: !8708, line: 44, type: !283)
!8737 = !DILocation(line: 0, scope: !8729)
!8738 = !DILocation(line: 46, column: 12, scope: !8729)
!8739 = !DILocation(line: 46, column: 17, scope: !8729)
!8740 = !DILocation(line: 46, column: 20, scope: !8729)
!8741 = !DILocation(line: 46, column: 23, scope: !8729)
!8742 = !DILocation(line: 46, column: 2, scope: !8729)
!8743 = !DILocation(line: 47, column: 6, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8729, file: !8708, line: 46, column: 32)
!8745 = !DILocation(line: 48, column: 4, scope: !8744)
!8746 = !DILocation(line: 49, column: 4, scope: !8744)
!8747 = !DILocation(line: 50, column: 4, scope: !8744)
!8748 = distinct !{!8748, !8742, !8749}
!8749 = !DILocation(line: 51, column: 2, scope: !8729)
!8750 = !DILocation(line: 54, column: 6, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8729, file: !8708, line: 53, column: 16)
!8752 = !DILocation(line: 55, column: 4, scope: !8751)
!8753 = !DILocation(line: 56, column: 4, scope: !8751)
!8754 = !DILocation(line: 53, column: 11, scope: !8729)
!8755 = !DILocation(line: 53, column: 2, scope: !8729)
!8756 = distinct !{!8756, !8755, !8757}
!8757 = !DILocation(line: 57, column: 2, scope: !8729)
!8758 = !DILocation(line: 59, column: 2, scope: !8729)
!8759 = distinct !DISubprogram(name: "strchr", scope: !8708, file: !8708, line: 69, type: !8760, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8762)
!8760 = !DISubroutineType(types: !8761)
!8761 = !{!283, !121, !107}
!8762 = !{!8763, !8764, !8765}
!8763 = !DILocalVariable(name: "s", arg: 1, scope: !8759, file: !8708, line: 69, type: !121)
!8764 = !DILocalVariable(name: "c", arg: 2, scope: !8759, file: !8708, line: 69, type: !107)
!8765 = !DILocalVariable(name: "tmp", scope: !8759, file: !8708, line: 71, type: !123)
!8766 = !DILocation(line: 0, scope: !8759)
!8767 = !DILocation(line: 73, column: 2, scope: !8759)
!8768 = !DILocation(line: 73, column: 10, scope: !8759)
!8769 = !DILocation(line: 73, column: 13, scope: !8759)
!8770 = !DILocation(line: 73, column: 21, scope: !8759)
!8771 = !DILocation(line: 74, column: 4, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8759, file: !8708, line: 73, column: 38)
!8773 = distinct !{!8773, !8767, !8774}
!8774 = !DILocation(line: 75, column: 2, scope: !8759)
!8775 = !DILocation(line: 77, column: 9, scope: !8759)
!8776 = !DILocation(line: 77, column: 2, scope: !8759)
!8777 = distinct !DISubprogram(name: "strrchr", scope: !8708, file: !8708, line: 87, type: !8760, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8778)
!8778 = !{!8779, !8780, !8781}
!8779 = !DILocalVariable(name: "s", arg: 1, scope: !8777, file: !8708, line: 87, type: !121)
!8780 = !DILocalVariable(name: "c", arg: 2, scope: !8777, file: !8708, line: 87, type: !107)
!8781 = !DILocalVariable(name: "match", scope: !8777, file: !8708, line: 89, type: !283)
!8782 = !DILocation(line: 0, scope: !8777)
!8783 = !DILocation(line: 91, column: 2, scope: !8777)
!8784 = !DILocation(line: 92, column: 7, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8786, file: !8708, line: 92, column: 7)
!8786 = distinct !DILexicalBlock(scope: !8777, file: !8708, line: 91, column: 5)
!8787 = !DILocation(line: 92, column: 10, scope: !8785)
!8788 = !DILocation(line: 92, column: 7, scope: !8786)
!8789 = !DILocation(line: 95, column: 13, scope: !8777)
!8790 = !DILocation(line: 95, column: 2, scope: !8786)
!8791 = distinct !{!8791, !8783, !8792}
!8792 = !DILocation(line: 95, column: 15, scope: !8777)
!8793 = !DILocation(line: 97, column: 2, scope: !8777)
!8794 = distinct !DISubprogram(name: "strlen", scope: !8708, file: !8708, line: 107, type: !8795, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8797)
!8795 = !DISubroutineType(types: !8796)
!8796 = !{!137, !121}
!8797 = !{!8798, !8799}
!8798 = !DILocalVariable(name: "s", arg: 1, scope: !8794, file: !8708, line: 107, type: !121)
!8799 = !DILocalVariable(name: "n", scope: !8794, file: !8708, line: 109, type: !137)
!8800 = !DILocation(line: 0, scope: !8794)
!8801 = !DILocation(line: 111, column: 9, scope: !8794)
!8802 = !DILocation(line: 111, column: 12, scope: !8794)
!8803 = !DILocation(line: 111, column: 2, scope: !8794)
!8804 = !DILocation(line: 112, column: 4, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8794, file: !8708, line: 111, column: 21)
!8806 = !DILocation(line: 113, column: 4, scope: !8805)
!8807 = distinct !{!8807, !8803, !8808}
!8808 = !DILocation(line: 114, column: 2, scope: !8794)
!8809 = !DILocation(line: 116, column: 2, scope: !8794)
!8810 = distinct !DISubprogram(name: "strnlen", scope: !8708, file: !8708, line: 126, type: !8811, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8813)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{!137, !121, !137}
!8813 = !{!8814, !8815, !8816}
!8814 = !DILocalVariable(name: "s", arg: 1, scope: !8810, file: !8708, line: 126, type: !121)
!8815 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8810, file: !8708, line: 126, type: !137)
!8816 = !DILocalVariable(name: "n", scope: !8810, file: !8708, line: 128, type: !137)
!8817 = !DILocation(line: 0, scope: !8810)
!8818 = !DILocation(line: 130, column: 9, scope: !8810)
!8819 = !DILocation(line: 130, column: 12, scope: !8810)
!8820 = !DILocation(line: 130, column: 20, scope: !8810)
!8821 = !DILocation(line: 130, column: 2, scope: !8810)
!8822 = !DILocation(line: 131, column: 4, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8810, file: !8708, line: 130, column: 35)
!8824 = !DILocation(line: 132, column: 4, scope: !8823)
!8825 = distinct !{!8825, !8821, !8826}
!8826 = !DILocation(line: 133, column: 2, scope: !8810)
!8827 = !DILocation(line: 135, column: 2, scope: !8810)
!8828 = distinct !DISubprogram(name: "strcmp", scope: !8708, file: !8708, line: 145, type: !8829, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!107, !121, !121}
!8831 = !{!8832, !8833}
!8832 = !DILocalVariable(name: "s1", arg: 1, scope: !8828, file: !8708, line: 145, type: !121)
!8833 = !DILocalVariable(name: "s2", arg: 2, scope: !8828, file: !8708, line: 145, type: !121)
!8834 = !DILocation(line: 0, scope: !8828)
!8835 = !DILocation(line: 147, column: 10, scope: !8828)
!8836 = !DILocation(line: 147, column: 17, scope: !8828)
!8837 = !DILocation(line: 147, column: 14, scope: !8828)
!8838 = !DILocation(line: 147, column: 22, scope: !8828)
!8839 = !DILocation(line: 148, column: 5, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8828, file: !8708, line: 147, column: 40)
!8841 = !DILocation(line: 149, column: 5, scope: !8840)
!8842 = distinct !{!8842, !8843, !8844}
!8843 = !DILocation(line: 147, column: 2, scope: !8828)
!8844 = !DILocation(line: 150, column: 2, scope: !8828)
!8845 = !DILocation(line: 152, column: 9, scope: !8828)
!8846 = !DILocation(line: 152, column: 15, scope: !8828)
!8847 = !DILocation(line: 152, column: 13, scope: !8828)
!8848 = !DILocation(line: 152, column: 2, scope: !8828)
!8849 = distinct !DISubprogram(name: "strncmp", scope: !8708, file: !8708, line: 162, type: !8850, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8852)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{!107, !121, !121, !137}
!8852 = !{!8853, !8854, !8855}
!8853 = !DILocalVariable(name: "s1", arg: 1, scope: !8849, file: !8708, line: 162, type: !121)
!8854 = !DILocalVariable(name: "s2", arg: 2, scope: !8849, file: !8708, line: 162, type: !121)
!8855 = !DILocalVariable(name: "n", arg: 3, scope: !8849, file: !8708, line: 162, type: !137)
!8856 = !DILocation(line: 0, scope: !8849)
!8857 = !DILocation(line: 164, column: 17, scope: !8849)
!8858 = !DILocation(line: 164, column: 21, scope: !8849)
!8859 = !DILocation(line: 164, column: 28, scope: !8849)
!8860 = !DILocation(line: 164, column: 25, scope: !8849)
!8861 = !DILocation(line: 164, column: 33, scope: !8849)
!8862 = !DILocation(line: 165, column: 5, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8849, file: !8708, line: 164, column: 51)
!8864 = !DILocation(line: 166, column: 5, scope: !8863)
!8865 = !DILocation(line: 167, column: 4, scope: !8863)
!8866 = distinct !{!8866, !8867, !8868}
!8867 = !DILocation(line: 164, column: 2, scope: !8849)
!8868 = !DILocation(line: 168, column: 2, scope: !8849)
!8869 = !DILocation(line: 170, column: 25, scope: !8849)
!8870 = !DILocation(line: 170, column: 31, scope: !8849)
!8871 = !DILocation(line: 170, column: 29, scope: !8849)
!8872 = !DILocation(line: 170, column: 9, scope: !8849)
!8873 = !DILocation(line: 170, column: 2, scope: !8849)
!8874 = distinct !DISubprogram(name: "strtok_r", scope: !8708, file: !8708, line: 180, type: !8875, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!283, !283, !121, !400}
!8877 = !{!8878, !8879, !8880, !8881, !8882}
!8878 = !DILocalVariable(name: "str", arg: 1, scope: !8874, file: !8708, line: 180, type: !283)
!8879 = !DILocalVariable(name: "sep", arg: 2, scope: !8874, file: !8708, line: 180, type: !121)
!8880 = !DILocalVariable(name: "state", arg: 3, scope: !8874, file: !8708, line: 180, type: !400)
!8881 = !DILocalVariable(name: "start", scope: !8874, file: !8708, line: 182, type: !283)
!8882 = !DILocalVariable(name: "end", scope: !8874, file: !8708, line: 182, type: !283)
!8883 = !DILocation(line: 0, scope: !8874)
!8884 = !DILocation(line: 184, column: 10, scope: !8874)
!8885 = !DILocation(line: 184, column: 22, scope: !8874)
!8886 = !DILocation(line: 187, column: 9, scope: !8874)
!8887 = !DILocation(line: 187, column: 16, scope: !8874)
!8888 = !DILocation(line: 187, column: 19, scope: !8874)
!8889 = !DILocation(line: 187, column: 2, scope: !8874)
!8890 = !DILocation(line: 188, column: 8, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8874, file: !8708, line: 187, column: 40)
!8892 = distinct !{!8892, !8889, !8893}
!8893 = !DILocation(line: 189, column: 2, scope: !8874)
!8894 = !DILocation(line: 198, column: 9, scope: !8874)
!8895 = !DILocation(line: 198, column: 18, scope: !8874)
!8896 = !DILocation(line: 198, column: 17, scope: !8874)
!8897 = !DILocation(line: 198, column: 2, scope: !8874)
!8898 = !DILocation(line: 199, column: 6, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8874, file: !8708, line: 198, column: 37)
!8900 = !DILocation(line: 198, column: 14, scope: !8874)
!8901 = distinct !{!8901, !8897, !8902}
!8902 = !DILocation(line: 200, column: 2, scope: !8874)
!8903 = !DILocation(line: 203, column: 8, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !8708, line: 202, column: 20)
!8905 = distinct !DILexicalBlock(scope: !8874, file: !8708, line: 202, column: 6)
!8906 = !DILocation(line: 204, column: 16, scope: !8904)
!8907 = !DILocation(line: 205, column: 2, scope: !8904)
!8908 = !DILocation(line: 210, column: 1, scope: !8874)
!8909 = distinct !DISubprogram(name: "strcat", scope: !8708, file: !8708, line: 212, type: !8709, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8910)
!8910 = !{!8911, !8912}
!8911 = !DILocalVariable(name: "dest", arg: 1, scope: !8909, file: !8708, line: 212, type: !8711)
!8912 = !DILocalVariable(name: "src", arg: 2, scope: !8909, file: !8708, line: 212, type: !8712)
!8913 = !DILocation(line: 0, scope: !8909)
!8914 = !DILocation(line: 214, column: 16, scope: !8909)
!8915 = !DILocation(line: 214, column: 14, scope: !8909)
!8916 = !DILocation(line: 214, column: 2, scope: !8909)
!8917 = !DILocation(line: 215, column: 2, scope: !8909)
!8918 = distinct !DISubprogram(name: "strncat", scope: !8708, file: !8708, line: 218, type: !8730, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8919)
!8919 = !{!8920, !8921, !8922, !8923, !8924}
!8920 = !DILocalVariable(name: "dest", arg: 1, scope: !8918, file: !8708, line: 218, type: !8711)
!8921 = !DILocalVariable(name: "src", arg: 2, scope: !8918, file: !8708, line: 218, type: !8712)
!8922 = !DILocalVariable(name: "n", arg: 3, scope: !8918, file: !8708, line: 219, type: !137)
!8923 = !DILocalVariable(name: "orig_dest", scope: !8918, file: !8708, line: 221, type: !283)
!8924 = !DILocalVariable(name: "len", scope: !8918, file: !8708, line: 222, type: !137)
!8925 = !DILocation(line: 0, scope: !8918)
!8926 = !DILocation(line: 222, column: 15, scope: !8918)
!8927 = !DILocation(line: 224, column: 7, scope: !8918)
!8928 = !DILocation(line: 225, column: 14, scope: !8918)
!8929 = !DILocation(line: 225, column: 19, scope: !8918)
!8930 = !DILocation(line: 225, column: 11, scope: !8918)
!8931 = !DILocation(line: 225, column: 23, scope: !8918)
!8932 = !DILocation(line: 225, column: 28, scope: !8918)
!8933 = !DILocation(line: 225, column: 2, scope: !8918)
!8934 = !DILocation(line: 226, column: 17, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8918, file: !8708, line: 225, column: 38)
!8936 = !DILocation(line: 226, column: 8, scope: !8935)
!8937 = !DILocation(line: 226, column: 11, scope: !8935)
!8938 = distinct !{!8938, !8933, !8939}
!8939 = !DILocation(line: 227, column: 2, scope: !8918)
!8940 = !DILocation(line: 228, column: 8, scope: !8918)
!8941 = !DILocation(line: 230, column: 2, scope: !8918)
!8942 = distinct !DISubprogram(name: "memcmp", scope: !8708, file: !8708, line: 239, type: !8943, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8945)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!107, !13, !13, !137}
!8945 = !{!8946, !8947, !8948, !8949, !8950}
!8946 = !DILocalVariable(name: "m1", arg: 1, scope: !8942, file: !8708, line: 239, type: !13)
!8947 = !DILocalVariable(name: "m2", arg: 2, scope: !8942, file: !8708, line: 239, type: !13)
!8948 = !DILocalVariable(name: "n", arg: 3, scope: !8942, file: !8708, line: 239, type: !137)
!8949 = !DILocalVariable(name: "c1", scope: !8942, file: !8708, line: 241, type: !121)
!8950 = !DILocalVariable(name: "c2", scope: !8942, file: !8708, line: 242, type: !121)
!8951 = !DILocation(line: 0, scope: !8942)
!8952 = !DILocation(line: 244, column: 7, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8942, file: !8708, line: 244, column: 6)
!8954 = !DILocation(line: 244, column: 6, scope: !8942)
!8955 = !DILocation(line: 248, column: 10, scope: !8942)
!8956 = !DILocation(line: 248, column: 14, scope: !8942)
!8957 = !DILocation(line: 248, column: 19, scope: !8942)
!8958 = !DILocation(line: 248, column: 2, scope: !8942)
!8959 = !DILocation(line: 248, column: 23, scope: !8942)
!8960 = !DILocation(line: 248, column: 30, scope: !8942)
!8961 = !DILocation(line: 248, column: 27, scope: !8942)
!8962 = !DILocation(line: 249, column: 5, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8942, file: !8708, line: 248, column: 36)
!8964 = !DILocation(line: 250, column: 5, scope: !8963)
!8965 = distinct !{!8965, !8958, !8966}
!8966 = !DILocation(line: 251, column: 2, scope: !8942)
!8967 = !DILocation(line: 253, column: 9, scope: !8942)
!8968 = !DILocation(line: 253, column: 15, scope: !8942)
!8969 = !DILocation(line: 253, column: 13, scope: !8942)
!8970 = !DILocation(line: 253, column: 2, scope: !8942)
!8971 = !DILocation(line: 254, column: 1, scope: !8942)
!8972 = distinct !DISubprogram(name: "memmove", scope: !8708, file: !8708, line: 263, type: !8973, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !8975)
!8973 = !DISubroutineType(types: !8974)
!8974 = !{!106, !106, !13, !137}
!8975 = !{!8976, !8977, !8978, !8979, !8980}
!8976 = !DILocalVariable(name: "d", arg: 1, scope: !8972, file: !8708, line: 263, type: !106)
!8977 = !DILocalVariable(name: "s", arg: 2, scope: !8972, file: !8708, line: 263, type: !13)
!8978 = !DILocalVariable(name: "n", arg: 3, scope: !8972, file: !8708, line: 263, type: !137)
!8979 = !DILocalVariable(name: "dest", scope: !8972, file: !8708, line: 265, type: !283)
!8980 = !DILocalVariable(name: "src", scope: !8972, file: !8708, line: 266, type: !121)
!8981 = !DILocation(line: 0, scope: !8972)
!8982 = !DILocation(line: 268, column: 21, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8972, file: !8708, line: 268, column: 6)
!8984 = !DILocation(line: 268, column: 28, scope: !8983)
!8985 = !DILocation(line: 268, column: 6, scope: !8972)
!8986 = !DILocation(line: 280, column: 12, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8983, file: !8708, line: 278, column: 9)
!8988 = !DILocation(line: 280, column: 3, scope: !8987)
!8989 = !DILocation(line: 275, column: 5, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !8708, line: 274, column: 17)
!8991 = distinct !DILexicalBlock(scope: !8983, file: !8708, line: 268, column: 33)
!8992 = !DILocation(line: 276, column: 14, scope: !8990)
!8993 = !DILocation(line: 276, column: 4, scope: !8990)
!8994 = !DILocation(line: 276, column: 12, scope: !8990)
!8995 = !DILocation(line: 274, column: 12, scope: !8991)
!8996 = !DILocation(line: 274, column: 3, scope: !8991)
!8997 = distinct !{!8997, !8996, !8998}
!8998 = !DILocation(line: 277, column: 3, scope: !8991)
!8999 = !DILocation(line: 281, column: 12, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8987, file: !8708, line: 280, column: 17)
!9001 = !DILocation(line: 281, column: 10, scope: !9000)
!9002 = !DILocation(line: 282, column: 8, scope: !9000)
!9003 = !DILocation(line: 283, column: 7, scope: !9000)
!9004 = !DILocation(line: 284, column: 5, scope: !9000)
!9005 = distinct !{!9005, !8988, !9006}
!9006 = !DILocation(line: 285, column: 3, scope: !8987)
!9007 = !DILocation(line: 288, column: 2, scope: !8972)
!9008 = distinct !DISubprogram(name: "memcpy", scope: !8708, file: !8708, line: 298, type: !9009, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !9013)
!9009 = !DISubroutineType(types: !9010)
!9010 = !{!106, !9011, !9012, !137}
!9011 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!9012 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9013 = !{!9014, !9015, !9016, !9017, !9018}
!9014 = !DILocalVariable(name: "d", arg: 1, scope: !9008, file: !8708, line: 298, type: !9011)
!9015 = !DILocalVariable(name: "s", arg: 2, scope: !9008, file: !8708, line: 298, type: !9012)
!9016 = !DILocalVariable(name: "n", arg: 3, scope: !9008, file: !8708, line: 298, type: !137)
!9017 = !DILocalVariable(name: "d_byte", scope: !9008, file: !8708, line: 302, type: !1107)
!9018 = !DILocalVariable(name: "s_byte", scope: !9008, file: !8708, line: 303, type: !2996)
!9019 = !DILocation(line: 0, scope: !9008)
!9020 = !DILocation(line: 337, column: 11, scope: !9008)
!9021 = !DILocation(line: 337, column: 2, scope: !9008)
!9022 = !DILocation(line: 338, column: 25, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9008, file: !8708, line: 337, column: 16)
!9024 = !DILocation(line: 338, column: 17, scope: !9023)
!9025 = !DILocation(line: 338, column: 11, scope: !9023)
!9026 = !DILocation(line: 338, column: 15, scope: !9023)
!9027 = !DILocation(line: 339, column: 4, scope: !9023)
!9028 = distinct !{!9028, !9021, !9029}
!9029 = !DILocation(line: 340, column: 2, scope: !9008)
!9030 = !DILocation(line: 342, column: 2, scope: !9008)
!9031 = distinct !DISubprogram(name: "memset", scope: !8708, file: !8708, line: 352, type: !9032, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !9034)
!9032 = !DISubroutineType(types: !9033)
!9033 = !{!106, !106, !107, !137}
!9034 = !{!9035, !9036, !9037, !9038, !9039}
!9035 = !DILocalVariable(name: "buf", arg: 1, scope: !9031, file: !8708, line: 352, type: !106)
!9036 = !DILocalVariable(name: "c", arg: 2, scope: !9031, file: !8708, line: 352, type: !107)
!9037 = !DILocalVariable(name: "n", arg: 3, scope: !9031, file: !8708, line: 352, type: !137)
!9038 = !DILocalVariable(name: "d_byte", scope: !9031, file: !8708, line: 356, type: !1107)
!9039 = !DILocalVariable(name: "c_byte", scope: !9031, file: !8708, line: 357, type: !191)
!9040 = !DILocation(line: 0, scope: !9031)
!9041 = !DILocation(line: 357, column: 25, scope: !9031)
!9042 = !DILocation(line: 389, column: 11, scope: !9031)
!9043 = !DILocation(line: 389, column: 2, scope: !9031)
!9044 = !DILocation(line: 390, column: 11, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9031, file: !8708, line: 389, column: 16)
!9046 = !DILocation(line: 390, column: 15, scope: !9045)
!9047 = !DILocation(line: 391, column: 4, scope: !9045)
!9048 = distinct !{!9048, !9043, !9049}
!9049 = !DILocation(line: 392, column: 2, scope: !9031)
!9050 = !DILocation(line: 394, column: 2, scope: !9031)
!9051 = distinct !DISubprogram(name: "memchr", scope: !8708, file: !8708, line: 404, type: !9052, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !9054)
!9052 = !DISubroutineType(types: !9053)
!9053 = !{!106, !13, !107, !137}
!9054 = !{!9055, !9056, !9057, !9058}
!9055 = !DILocalVariable(name: "s", arg: 1, scope: !9051, file: !8708, line: 404, type: !13)
!9056 = !DILocalVariable(name: "c", arg: 2, scope: !9051, file: !8708, line: 404, type: !107)
!9057 = !DILocalVariable(name: "n", arg: 3, scope: !9051, file: !8708, line: 404, type: !137)
!9058 = !DILocalVariable(name: "p", scope: !9059, file: !8708, line: 407, type: !2996)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !8708, line: 406, column: 14)
!9060 = distinct !DILexicalBlock(scope: !9051, file: !8708, line: 406, column: 6)
!9061 = !DILocation(line: 0, scope: !9051)
!9062 = !DILocation(line: 406, column: 8, scope: !9060)
!9063 = !DILocation(line: 406, column: 6, scope: !9051)
!9064 = !DILocation(line: 409, column: 3, scope: !9059)
!9065 = !DILocation(line: 0, scope: !9059)
!9066 = !DILocation(line: 410, column: 8, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !8708, line: 410, column: 8)
!9068 = distinct !DILexicalBlock(scope: !9059, file: !8708, line: 409, column: 6)
!9069 = !DILocation(line: 410, column: 13, scope: !9067)
!9070 = !DILocation(line: 410, column: 8, scope: !9068)
!9071 = distinct !{!9071, !9064, !9072}
!9072 = !DILocation(line: 414, column: 20, scope: !9059)
!9073 = !DILocation(line: 417, column: 2, scope: !9051)
!9074 = !DILocation(line: 418, column: 1, scope: !9051)
!9075 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !682, file: !682, line: 23, type: !4566, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9076)
!9076 = !{!9077}
!9077 = !DILocalVariable(name: "hook", arg: 1, scope: !9075, file: !682, line: 23, type: !417)
!9078 = !DILocation(line: 0, scope: !9075)
!9079 = !DILocation(line: 25, column: 15, scope: !9075)
!9080 = !DILocation(line: 26, column: 1, scope: !9075)
!9081 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !682, file: !682, line: 14, type: !418, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9082)
!9082 = !{!9083}
!9083 = !DILocalVariable(name: "c", arg: 1, scope: !9081, file: !682, line: 14, type: !107)
!9084 = !DILocation(line: 0, scope: !9081)
!9085 = !DILocation(line: 18, column: 2, scope: !9081)
!9086 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !682, file: !682, line: 28, type: !9087, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9089)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!107, !107, !678}
!9089 = !{!9090, !9091}
!9090 = !DILocalVariable(name: "c", arg: 1, scope: !9086, file: !682, line: 28, type: !107)
!9091 = !DILocalVariable(name: "stream", arg: 2, scope: !9086, file: !682, line: 28, type: !678)
!9092 = !DILocation(line: 0, scope: !9086)
!9093 = !DILocation(line: 30, column: 27, scope: !9086)
!9094 = !DILocation(line: 30, column: 50, scope: !9086)
!9095 = !DILocation(line: 30, column: 9, scope: !9086)
!9096 = !DILocation(line: 30, column: 2, scope: !9086)
!9097 = distinct !DISubprogram(name: "fputc", scope: !682, file: !682, line: 41, type: !9087, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9098)
!9098 = !{!9099, !9100}
!9099 = !DILocalVariable(name: "c", arg: 1, scope: !9097, file: !682, line: 41, type: !107)
!9100 = !DILocalVariable(name: "stream", arg: 2, scope: !9097, file: !682, line: 41, type: !678)
!9101 = !DILocation(line: 0, scope: !9097)
!9102 = !DILocation(line: 43, column: 9, scope: !9097)
!9103 = !DILocation(line: 43, column: 2, scope: !9097)
!9104 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9105, file: !9105, line: 72, type: !9087, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9106)
!9105 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!9106 = !{!9107, !9108}
!9107 = !DILocalVariable(name: "c", arg: 1, scope: !9104, file: !9105, line: 72, type: !107)
!9108 = !DILocalVariable(name: "stream", arg: 2, scope: !9104, file: !9105, line: 72, type: !678)
!9109 = !DILocation(line: 0, scope: !9104)
!9110 = !DILocation(line: 81, column: 2, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9104, file: !9105, line: 81, column: 2)
!9112 = !{i64 2154804903}
!9113 = !DILocation(line: 82, column: 9, scope: !9104)
!9114 = !DILocation(line: 82, column: 2, scope: !9104)
!9115 = distinct !DISubprogram(name: "fputs", scope: !682, file: !682, line: 46, type: !9116, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9119)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{!107, !8712, !9118}
!9118 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !678)
!9119 = !{!9120, !9121, !9122, !9123}
!9120 = !DILocalVariable(name: "s", arg: 1, scope: !9115, file: !682, line: 46, type: !8712)
!9121 = !DILocalVariable(name: "stream", arg: 2, scope: !9115, file: !682, line: 46, type: !9118)
!9122 = !DILocalVariable(name: "len", scope: !9115, file: !682, line: 48, type: !107)
!9123 = !DILocalVariable(name: "ret", scope: !9115, file: !682, line: 49, type: !107)
!9124 = !DILocation(line: 0, scope: !9115)
!9125 = !DILocation(line: 48, column: 12, scope: !9115)
!9126 = !DILocation(line: 51, column: 8, scope: !9115)
!9127 = !DILocation(line: 53, column: 13, scope: !9115)
!9128 = !DILocation(line: 53, column: 9, scope: !9115)
!9129 = !DILocation(line: 53, column: 2, scope: !9115)
!9130 = distinct !DISubprogram(name: "fwrite", scope: !682, file: !682, line: 99, type: !9131, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!137, !9012, !137, !137, !9118}
!9133 = !{!9134, !9135, !9136, !9137}
!9134 = !DILocalVariable(name: "ptr", arg: 1, scope: !9130, file: !682, line: 99, type: !9012)
!9135 = !DILocalVariable(name: "size", arg: 2, scope: !9130, file: !682, line: 99, type: !137)
!9136 = !DILocalVariable(name: "nitems", arg: 3, scope: !9130, file: !682, line: 99, type: !137)
!9137 = !DILocalVariable(name: "stream", arg: 4, scope: !9130, file: !682, line: 100, type: !9118)
!9138 = !DILocation(line: 0, scope: !9130)
!9139 = !DILocation(line: 102, column: 9, scope: !9130)
!9140 = !DILocation(line: 102, column: 2, scope: !9130)
!9141 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9105, file: !9105, line: 96, type: !9131, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9142)
!9142 = !{!9143, !9144, !9145, !9146}
!9143 = !DILocalVariable(name: "ptr", arg: 1, scope: !9141, file: !9105, line: 96, type: !9012)
!9144 = !DILocalVariable(name: "size", arg: 2, scope: !9141, file: !9105, line: 96, type: !137)
!9145 = !DILocalVariable(name: "nitems", arg: 3, scope: !9141, file: !9105, line: 96, type: !137)
!9146 = !DILocalVariable(name: "stream", arg: 4, scope: !9141, file: !9105, line: 96, type: !9118)
!9147 = !DILocation(line: 0, scope: !9141)
!9148 = !DILocation(line: 107, column: 2, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9141, file: !9105, line: 107, column: 2)
!9150 = !{i64 2154805007}
!9151 = !DILocation(line: 108, column: 9, scope: !9141)
!9152 = !DILocation(line: 108, column: 2, scope: !9141)
!9153 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !682, file: !682, line: 56, type: !9131, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9154)
!9154 = !{!9155, !9156, !9157, !9158, !9159, !9160, !9161, !9162}
!9155 = !DILocalVariable(name: "ptr", arg: 1, scope: !9153, file: !682, line: 56, type: !9012)
!9156 = !DILocalVariable(name: "size", arg: 2, scope: !9153, file: !682, line: 56, type: !137)
!9157 = !DILocalVariable(name: "nitems", arg: 3, scope: !9153, file: !682, line: 57, type: !137)
!9158 = !DILocalVariable(name: "stream", arg: 4, scope: !9153, file: !682, line: 57, type: !9118)
!9159 = !DILocalVariable(name: "i", scope: !9153, file: !682, line: 59, type: !137)
!9160 = !DILocalVariable(name: "j", scope: !9153, file: !682, line: 60, type: !137)
!9161 = !DILocalVariable(name: "p", scope: !9153, file: !682, line: 61, type: !2996)
!9162 = !DILabel(scope: !9153, name: "done", file: !682, line: 82)
!9163 = !DILocation(line: 0, scope: !9153)
!9164 = !DILocation(line: 63, column: 14, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9153, file: !682, line: 63, column: 6)
!9166 = !DILocation(line: 63, column: 24, scope: !9165)
!9167 = !DILocation(line: 72, column: 3, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9153, file: !682, line: 70, column: 5)
!9169 = !DILocation(line: 0, scope: !9168)
!9170 = !DILocation(line: 73, column: 8, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9172, file: !682, line: 73, column: 8)
!9172 = distinct !DILexicalBlock(scope: !9168, file: !682, line: 72, column: 6)
!9173 = !DILocation(line: 73, column: 29, scope: !9171)
!9174 = !DILocation(line: 73, column: 27, scope: !9171)
!9175 = !DILocation(line: 73, column: 21, scope: !9171)
!9176 = !DILocation(line: 73, column: 33, scope: !9171)
!9177 = !DILocation(line: 73, column: 8, scope: !9172)
!9178 = !DILocation(line: 76, column: 5, scope: !9172)
!9179 = !DILocation(line: 77, column: 14, scope: !9168)
!9180 = !DILocation(line: 77, column: 3, scope: !9172)
!9181 = distinct !{!9181, !9167, !9182}
!9182 = !DILocation(line: 77, column: 17, scope: !9168)
!9183 = !DILocation(line: 79, column: 4, scope: !9168)
!9184 = !DILocation(line: 80, column: 13, scope: !9153)
!9185 = !DILocation(line: 80, column: 2, scope: !9168)
!9186 = distinct !{!9186, !9187, !9188}
!9187 = !DILocation(line: 70, column: 2, scope: !9153)
!9188 = !DILocation(line: 80, column: 16, scope: !9153)
!9189 = !DILocation(line: 82, column: 1, scope: !9153)
!9190 = !DILocation(line: 83, column: 17, scope: !9153)
!9191 = !DILocation(line: 83, column: 2, scope: !9153)
!9192 = !DILocation(line: 84, column: 1, scope: !9153)
!9193 = distinct !DISubprogram(name: "puts", scope: !682, file: !682, line: 106, type: !9194, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9196)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!107, !121}
!9196 = !{!9197}
!9197 = !DILocalVariable(name: "s", arg: 1, scope: !9193, file: !682, line: 106, type: !121)
!9198 = !DILocation(line: 0, scope: !9193)
!9199 = !DILocation(line: 108, column: 6, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9193, file: !682, line: 108, column: 6)
!9201 = !DILocation(line: 108, column: 23, scope: !9200)
!9202 = !DILocation(line: 108, column: 6, scope: !9193)
!9203 = !DILocation(line: 112, column: 9, scope: !9193)
!9204 = !DILocation(line: 112, column: 29, scope: !9193)
!9205 = !DILocation(line: 112, column: 2, scope: !9193)
!9206 = !DILocation(line: 113, column: 1, scope: !9193)
!9207 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !714, file: !714, line: 12, type: !9208, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9214)
!9208 = !DISubroutineType(types: !9209)
!9209 = !{!9210, !109}
!9210 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !9211)
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !9212)
!9212 = !{!9213}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9211, file: !103, line: 66, baseType: !102, size: 64)
!9214 = !{!9215, !9216}
!9215 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9207, file: !714, line: 12, type: !109)
!9216 = !DILocalVariable(name: "now_ticks", scope: !9207, file: !714, line: 14, type: !104)
!9217 = !DILocation(line: 0, scope: !9207)
!9218 = !DILocation(line: 14, column: 22, scope: !9207)
!9219 = !DILocation(line: 16, column: 9, scope: !9207)
!9220 = !DILocation(line: 17, column: 1, scope: !9207)
!9221 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !714, file: !714, line: 103, type: !9222, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9370)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{!107, !9224, !13, !9210}
!9224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9225, size: 32)
!9225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9226)
!9226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !9227)
!9227 = !{!9228, !9229, !9230, !9231, !9232, !9233, !9341}
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9226, file: !117, line: 32, baseType: !120, size: 32)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9226, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9226, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9226, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9226, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9226, file: !117, line: 56, baseType: !9234, size: 32, offset: 160)
!9234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9235, size: 32)
!9235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !9236)
!9236 = !{!9237, !9256, !9339, !9340}
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9235, file: !142, line: 2722, baseType: !9238, size: 64)
!9238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !9239)
!9239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !9240)
!9240 = !{!9241}
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9239, file: !146, line: 232, baseType: !9242, size: 64)
!9242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !9243)
!9243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !9244)
!9244 = !{!9245, !9251}
!9245 = !DIDerivedType(tag: DW_TAG_member, scope: !9243, file: !151, line: 38, baseType: !9246, size: 32)
!9246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9243, file: !151, line: 38, size: 32, elements: !9247)
!9247 = !{!9248, !9250}
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9246, file: !151, line: 39, baseType: !9249, size: 32)
!9249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9243, size: 32)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9246, file: !151, line: 40, baseType: !9249, size: 32)
!9251 = !DIDerivedType(tag: DW_TAG_member, scope: !9243, file: !151, line: 42, baseType: !9252, size: 32, offset: 32)
!9252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9243, file: !151, line: 42, size: 32, elements: !9253)
!9253 = !{!9254, !9255}
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9252, file: !151, line: 43, baseType: !9249, size: 32)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9252, file: !151, line: 44, baseType: !9249, size: 32)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9235, file: !142, line: 2724, baseType: !9257, size: 32, offset: 64)
!9257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9258, size: 32)
!9258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !9259)
!9259 = !{!9260, !9300, !9312, !9313, !9314, !9315, !9321, !9334}
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9258, file: !168, line: 247, baseType: !9261, size: 384)
!9261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !9262)
!9262 = !{!9263, !9274, !9276, !9277, !9278, !9287, !9288, !9289}
!9263 = !DIDerivedType(tag: DW_TAG_member, scope: !9261, file: !168, line: 60, baseType: !9264, size: 64)
!9264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9261, file: !168, line: 60, size: 64, elements: !9265)
!9265 = !{!9266, !9268}
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9264, file: !168, line: 61, baseType: !9267, size: 64)
!9267 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !9243)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9264, file: !168, line: 62, baseType: !9269, size: 64)
!9269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !9270)
!9270 = !{!9271}
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9269, file: !180, line: 50, baseType: !9272, size: 64)
!9272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9273, size: 64, elements: !185)
!9273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9269, size: 32)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9261, file: !168, line: 68, baseType: !9275, size: 32, offset: 64)
!9275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9238, size: 32)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9261, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9261, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!9278 = !DIDerivedType(tag: DW_TAG_member, scope: !9261, file: !168, line: 90, baseType: !9279, size: 16, offset: 112)
!9279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9261, file: !168, line: 90, size: 16, elements: !9280)
!9280 = !{!9281, !9286}
!9281 = !DIDerivedType(tag: DW_TAG_member, scope: !9279, file: !168, line: 91, baseType: !9282, size: 16)
!9282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9279, file: !168, line: 91, size: 16, elements: !9283)
!9283 = !{!9284, !9285}
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9282, file: !168, line: 96, baseType: !200, size: 8)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9282, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9279, file: !168, line: 100, baseType: !126, size: 16)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9261, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9261, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9261, file: !168, line: 131, baseType: !9290, size: 192, offset: 192)
!9290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !9291)
!9291 = !{!9292, !9293, !9299}
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9290, file: !146, line: 245, baseType: !9267, size: 64)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9290, file: !146, line: 246, baseType: !9294, size: 32, offset: 64)
!9294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !9295)
!9295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9296, size: 32)
!9296 = !DISubroutineType(types: !9297)
!9297 = !{null, !9298}
!9298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9290, size: 32)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9290, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9258, file: !168, line: 250, baseType: !9301, size: 288, offset: 384)
!9301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !9302)
!9302 = !{!9303, !9304, !9305, !9306, !9307, !9308, !9309, !9310, !9311}
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9301, file: !219, line: 26, baseType: !108, size: 32)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9301, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9301, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9301, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9301, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9301, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9301, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9301, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9301, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9258, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9258, file: !168, line: 256, baseType: !9238, size: 64, offset: 704)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9258, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9258, file: !168, line: 300, baseType: !9316, size: 96, offset: 800)
!9316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !9317)
!9317 = !{!9318, !9319, !9320}
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9316, file: !168, line: 153, baseType: !22, size: 32)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9316, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9316, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9258, file: !168, line: 325, baseType: !9322, size: 32, offset: 896)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9323, size: 32)
!9323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !9324)
!9324 = !{!9325, !9331, !9332}
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9323, file: !142, line: 5074, baseType: !9326, size: 96)
!9326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !9327)
!9327 = !{!9328, !9329, !9330}
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9326, file: !245, line: 57, baseType: !248, size: 32)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9326, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9326, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9323, file: !142, line: 5075, baseType: !9238, size: 64, offset: 96)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9323, file: !142, line: 5076, baseType: !9333, offset: 160)
!9333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9258, file: !168, line: 343, baseType: !9335, size: 64, offset: 928)
!9335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !9336)
!9336 = !{!9337, !9338}
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9335, file: !219, line: 63, baseType: !108, size: 32)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9335, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9235, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9235, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9226, file: !117, line: 67, baseType: !9342, size: 32, offset: 192)
!9342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9343, size: 32)
!9343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9344)
!9344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9345, size: 32)
!9345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9346)
!9346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !9347)
!9347 = !{!9348, !9349, !9350, !9365}
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9346, file: !117, line: 88, baseType: !120, size: 32)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9346, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9346, file: !117, line: 93, baseType: !9351, size: 32, offset: 64)
!9351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9352)
!9352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9353, size: 32)
!9353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !9354)
!9354 = !{!9355, !9356, !9357, !9358, !9359, !9360, !9361, !9362, !9363, !9364}
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9353, file: !142, line: 4206, baseType: !9238, size: 64)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9353, file: !142, line: 4208, baseType: !9333, offset: 64)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9353, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9353, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9353, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9353, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9353, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9353, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9353, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9353, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9346, file: !117, line: 96, baseType: !9366, size: 32, offset: 96)
!9366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9367)
!9367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9368, size: 32)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{null, !9224}
!9370 = !{!9371, !9372, !9373, !9374, !9375}
!9371 = !DILocalVariable(name: "chan", arg: 1, scope: !9221, file: !714, line: 103, type: !9224)
!9372 = !DILocalVariable(name: "msg", arg: 2, scope: !9221, file: !714, line: 103, type: !13)
!9373 = !DILocalVariable(name: "timeout", arg: 3, scope: !9221, file: !714, line: 103, type: !9210)
!9374 = !DILocalVariable(name: "err", scope: !9221, file: !714, line: 105, type: !107)
!9375 = !DILocalVariable(name: "end_ticks", scope: !9221, file: !714, line: 106, type: !109)
!9376 = !DILocation(line: 0, scope: !9221)
!9377 = !DILocation(line: 106, column: 23, scope: !9221)
!9378 = !DILocation(line: 112, column: 12, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9221, file: !714, line: 112, column: 6)
!9380 = !DILocation(line: 112, column: 22, scope: !9379)
!9381 = !DILocation(line: 112, column: 30, scope: !9379)
!9382 = !DILocation(line: 112, column: 61, scope: !9379)
!9383 = !DILocation(line: 112, column: 55, scope: !9379)
!9384 = !DILocation(line: 112, column: 34, scope: !9379)
!9385 = !DILocation(line: 112, column: 6, scope: !9221)
!9386 = !DILocation(line: 116, column: 27, scope: !9221)
!9387 = !DILocation(line: 116, column: 8, scope: !9221)
!9388 = !DILocation(line: 117, column: 6, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9221, file: !714, line: 117, column: 6)
!9390 = !DILocation(line: 117, column: 6, scope: !9221)
!9391 = !DILocation(line: 121, column: 15, scope: !9221)
!9392 = !DILocation(line: 121, column: 35, scope: !9221)
!9393 = !DILocation(line: 121, column: 29, scope: !9221)
!9394 = !DILocation(line: 121, column: 2, scope: !9221)
!9395 = !DILocation(line: 123, column: 8, scope: !9221)
!9396 = !DILocation(line: 125, column: 23, scope: !9221)
!9397 = !DILocation(line: 125, column: 2, scope: !9221)
!9398 = !DILocation(line: 127, column: 2, scope: !9221)
!9399 = !DILocation(line: 128, column: 1, scope: !9221)
!9400 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3668, file: !3668, line: 927, type: !9401, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9403)
!9401 = !DISubroutineType(types: !9402)
!9402 = !{!107, !9234, !9210}
!9403 = !{!9404, !9405}
!9404 = !DILocalVariable(name: "mutex", arg: 1, scope: !9400, file: !3668, line: 927, type: !9234)
!9405 = !DILocalVariable(name: "timeout", arg: 2, scope: !9400, file: !3668, line: 927, type: !9210)
!9406 = !DILocation(line: 0, scope: !9400)
!9407 = !DILocation(line: 936, column: 2, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9400, file: !3668, line: 936, column: 2)
!9409 = !{i64 2154746464}
!9410 = !DILocation(line: 937, column: 9, scope: !9400)
!9411 = !DILocation(line: 937, column: 2, scope: !9400)
!9412 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !714, file: !714, line: 66, type: !9413, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9415)
!9413 = !DISubroutineType(types: !9414)
!9414 = !{!107, !9224, !109}
!9415 = !{!9416, !9417, !9418, !9419, !9420, !9422}
!9416 = !DILocalVariable(name: "chan", arg: 1, scope: !9412, file: !714, line: 66, type: !9224)
!9417 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9412, file: !714, line: 66, type: !109)
!9418 = !DILocalVariable(name: "last_error", scope: !9412, file: !714, line: 68, type: !107)
!9419 = !DILocalVariable(name: "err", scope: !9412, file: !714, line: 68, type: !107)
!9420 = !DILocalVariable(name: "obs", scope: !9421, file: !714, line: 70, type: !9342)
!9421 = distinct !DILexicalBlock(scope: !9412, file: !714, line: 70, column: 2)
!9422 = !DILocalVariable(name: "obs", scope: !9423, file: !714, line: 81, type: !9342)
!9423 = distinct !DILexicalBlock(scope: !9412, file: !714, line: 81, column: 2)
!9424 = !DILocation(line: 0, scope: !9412)
!9425 = !DILocation(line: 70, column: 54, scope: !9421)
!9426 = !DILocation(line: 0, scope: !9421)
!9427 = !DILocation(line: 70, column: 65, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9421, file: !714, line: 70, column: 2)
!9429 = !DILocation(line: 70, column: 70, scope: !9428)
!9430 = !DILocation(line: 70, column: 2, scope: !9421)
!9431 = !DILocation(line: 81, column: 54, scope: !9423)
!9432 = !DILocation(line: 81, column: 65, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9423, file: !714, line: 81, column: 2)
!9434 = !DILocation(line: 0, scope: !9423)
!9435 = !DILocation(line: 81, column: 70, scope: !9433)
!9436 = !DILocation(line: 81, column: 2, scope: !9423)
!9437 = !DILocation(line: 71, column: 15, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !714, line: 71, column: 7)
!9439 = distinct !DILexicalBlock(scope: !9428, file: !714, line: 70, column: 86)
!9440 = !DILocation(line: 71, column: 23, scope: !9438)
!9441 = !DILocation(line: 71, column: 35, scope: !9438)
!9442 = !DILocation(line: 71, column: 44, scope: !9438)
!9443 = !DILocation(line: 71, column: 7, scope: !9439)
!9444 = !DILocation(line: 72, column: 4, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9438, file: !714, line: 71, column: 54)
!9446 = !DILocation(line: 73, column: 3, scope: !9445)
!9447 = !DILocation(line: 70, column: 79, scope: !9428)
!9448 = distinct !{!9448, !9430, !9449}
!9449 = !DILocation(line: 74, column: 2, scope: !9421)
!9450 = !DILocation(line: 100, column: 2, scope: !9412)
!9451 = !DILocation(line: 82, column: 15, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !714, line: 82, column: 7)
!9453 = distinct !DILexicalBlock(scope: !9433, file: !714, line: 81, column: 86)
!9454 = !DILocation(line: 82, column: 23, scope: !9452)
!9455 = !DILocation(line: 82, column: 35, scope: !9452)
!9456 = !DILocation(line: 82, column: 41, scope: !9452)
!9457 = !DILocation(line: 82, column: 7, scope: !9453)
!9458 = !DILocation(line: 83, column: 43, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9452, file: !714, line: 82, column: 51)
!9460 = !DILocation(line: 83, column: 10, scope: !9459)
!9461 = !DILocation(line: 86, column: 8, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9459, file: !714, line: 86, column: 8)
!9463 = !DILocation(line: 86, column: 8, scope: !9459)
!9464 = !DILocation(line: 87, column: 5, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !714, line: 87, column: 5)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !714, line: 87, column: 5)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !714, line: 87, column: 5)
!9468 = distinct !DILexicalBlock(scope: !9469, file: !714, line: 87, column: 5)
!9469 = distinct !DILexicalBlock(scope: !9462, file: !714, line: 86, column: 13)
!9470 = !DILocation(line: 90, column: 4, scope: !9469)
!9471 = !DILocation(line: 81, column: 79, scope: !9433)
!9472 = distinct !{!9472, !9436, !9473}
!9473 = !DILocation(line: 92, column: 2, scope: !9423)
!9474 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3668, file: !3668, line: 944, type: !9475, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9477)
!9475 = !DISubroutineType(types: !9476)
!9476 = !{!107, !9234}
!9477 = !{!9478}
!9478 = !DILocalVariable(name: "mutex", arg: 1, scope: !9474, file: !3668, line: 944, type: !9234)
!9479 = !DILocation(line: 0, scope: !9474)
!9480 = !DILocation(line: 952, column: 2, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9474, file: !3668, line: 952, column: 2)
!9482 = !{i64 2154746532}
!9483 = !DILocation(line: 953, column: 9, scope: !9474)
!9484 = !DILocation(line: 953, column: 2, scope: !9474)
!9485 = distinct !DISubprogram(name: "k_msgq_put", scope: !3668, file: !3668, line: 1129, type: !9486, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9488)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!107, !9352, !13, !9210}
!9488 = !{!9489, !9490, !9491}
!9489 = !DILocalVariable(name: "msgq", arg: 1, scope: !9485, file: !3668, line: 1129, type: !9352)
!9490 = !DILocalVariable(name: "data", arg: 2, scope: !9485, file: !3668, line: 1129, type: !13)
!9491 = !DILocalVariable(name: "timeout", arg: 3, scope: !9485, file: !3668, line: 1129, type: !9210)
!9492 = !DILocation(line: 0, scope: !9485)
!9493 = !DILocation(line: 1139, column: 2, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9485, file: !3668, line: 1139, column: 2)
!9495 = !{i64 2154747280}
!9496 = !DILocation(line: 1140, column: 9, scope: !9485)
!9497 = !DILocation(line: 1140, column: 2, scope: !9485)
!9498 = distinct !DISubprogram(name: "zbus_chan_read", scope: !714, file: !714, line: 130, type: !9499, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9501)
!9499 = !DISubroutineType(types: !9500)
!9500 = !{!107, !9224, !106, !9210}
!9501 = !{!9502, !9503, !9504, !9505}
!9502 = !DILocalVariable(name: "chan", arg: 1, scope: !9498, file: !714, line: 130, type: !9224)
!9503 = !DILocalVariable(name: "msg", arg: 2, scope: !9498, file: !714, line: 130, type: !106)
!9504 = !DILocalVariable(name: "timeout", arg: 3, scope: !9498, file: !714, line: 130, type: !9210)
!9505 = !DILocalVariable(name: "err", scope: !9498, file: !714, line: 132, type: !107)
!9506 = !DILocation(line: 0, scope: !9498)
!9507 = !DILocation(line: 138, column: 27, scope: !9498)
!9508 = !DILocation(line: 138, column: 8, scope: !9498)
!9509 = !DILocation(line: 139, column: 6, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9498, file: !714, line: 139, column: 6)
!9511 = !DILocation(line: 139, column: 6, scope: !9498)
!9512 = !DILocation(line: 143, column: 20, scope: !9498)
!9513 = !DILocation(line: 143, column: 35, scope: !9498)
!9514 = !DILocation(line: 143, column: 29, scope: !9498)
!9515 = !DILocation(line: 143, column: 2, scope: !9498)
!9516 = !DILocation(line: 145, column: 30, scope: !9498)
!9517 = !DILocation(line: 145, column: 9, scope: !9498)
!9518 = !DILocation(line: 145, column: 2, scope: !9498)
!9519 = !DILocation(line: 146, column: 1, scope: !9498)
!9520 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !714, file: !714, line: 148, type: !9521, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9523)
!9521 = !DISubroutineType(types: !9522)
!9522 = !{!107, !9224, !9210}
!9523 = !{!9524, !9525, !9526, !9527}
!9524 = !DILocalVariable(name: "chan", arg: 1, scope: !9520, file: !714, line: 148, type: !9224)
!9525 = !DILocalVariable(name: "timeout", arg: 2, scope: !9520, file: !714, line: 148, type: !9210)
!9526 = !DILocalVariable(name: "err", scope: !9520, file: !714, line: 150, type: !107)
!9527 = !DILocalVariable(name: "end_ticks", scope: !9520, file: !714, line: 151, type: !109)
!9528 = !DILocation(line: 0, scope: !9520)
!9529 = !DILocation(line: 151, column: 23, scope: !9520)
!9530 = !DILocation(line: 156, column: 27, scope: !9520)
!9531 = !DILocation(line: 156, column: 8, scope: !9520)
!9532 = !DILocation(line: 157, column: 6, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9520, file: !714, line: 157, column: 6)
!9534 = !DILocation(line: 157, column: 6, scope: !9520)
!9535 = !DILocation(line: 161, column: 8, scope: !9520)
!9536 = !DILocation(line: 163, column: 23, scope: !9520)
!9537 = !DILocation(line: 163, column: 2, scope: !9520)
!9538 = !DILocation(line: 165, column: 2, scope: !9520)
!9539 = !DILocation(line: 166, column: 1, scope: !9520)
!9540 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !714, file: !714, line: 168, type: !9521, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9541)
!9541 = !{!9542, !9543, !9544}
!9542 = !DILocalVariable(name: "chan", arg: 1, scope: !9540, file: !714, line: 168, type: !9224)
!9543 = !DILocalVariable(name: "timeout", arg: 2, scope: !9540, file: !714, line: 168, type: !9210)
!9544 = !DILocalVariable(name: "err", scope: !9540, file: !714, line: 173, type: !107)
!9545 = !DILocation(line: 0, scope: !9540)
!9546 = !DILocation(line: 173, column: 31, scope: !9540)
!9547 = !DILocation(line: 173, column: 12, scope: !9540)
!9548 = !DILocation(line: 180, column: 1, scope: !9540)
!9549 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !714, file: !714, line: 182, type: !9550, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9552)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!107, !9224}
!9552 = !{!9553, !9554}
!9553 = !DILocalVariable(name: "chan", arg: 1, scope: !9549, file: !714, line: 182, type: !9224)
!9554 = !DILocalVariable(name: "err", scope: !9549, file: !714, line: 187, type: !107)
!9555 = !DILocation(line: 0, scope: !9549)
!9556 = !DILocation(line: 187, column: 33, scope: !9549)
!9557 = !DILocation(line: 187, column: 12, scope: !9549)
!9558 = !DILocation(line: 189, column: 2, scope: !9549)
!9559 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !714, file: !714, line: 192, type: !9560, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9563)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!107, !9344, !9562, !9210}
!9562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9224, size: 32)
!9563 = !{!9564, !9565, !9566}
!9564 = !DILocalVariable(name: "sub", arg: 1, scope: !9559, file: !714, line: 192, type: !9344)
!9565 = !DILocalVariable(name: "chan", arg: 2, scope: !9559, file: !714, line: 192, type: !9562)
!9566 = !DILocalVariable(name: "timeout", arg: 3, scope: !9559, file: !714, line: 193, type: !9210)
!9567 = !DILocation(line: 0, scope: !9559)
!9568 = !DILocation(line: 199, column: 11, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9559, file: !714, line: 199, column: 6)
!9570 = !DILocation(line: 199, column: 17, scope: !9569)
!9571 = !DILocation(line: 199, column: 6, scope: !9559)
!9572 = !DILocation(line: 203, column: 32, scope: !9559)
!9573 = !DILocation(line: 203, column: 9, scope: !9559)
!9574 = !DILocation(line: 203, column: 2, scope: !9559)
!9575 = !DILocation(line: 204, column: 1, scope: !9559)
!9576 = distinct !DISubprogram(name: "k_msgq_get", scope: !3668, file: !3668, line: 1147, type: !9577, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9579)
!9577 = !DISubroutineType(types: !9578)
!9578 = !{!107, !9352, !106, !9210}
!9579 = !{!9580, !9581, !9582}
!9580 = !DILocalVariable(name: "msgq", arg: 1, scope: !9576, file: !3668, line: 1147, type: !9352)
!9581 = !DILocalVariable(name: "data", arg: 2, scope: !9576, file: !3668, line: 1147, type: !106)
!9582 = !DILocalVariable(name: "timeout", arg: 3, scope: !9576, file: !3668, line: 1147, type: !9210)
!9583 = !DILocation(line: 0, scope: !9576)
!9584 = !DILocation(line: 1157, column: 2, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9576, file: !3668, line: 1157, column: 2)
!9586 = !{i64 2154747348}
!9587 = !DILocation(line: 1158, column: 9, scope: !9576)
!9588 = !DILocation(line: 1158, column: 2, scope: !9576)
!9589 = distinct !DISubprogram(name: "zbus_iterate_over_channels", scope: !9590, file: !9590, line: 9, type: !9591, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !9742)
!9590 = !DIFile(filename: "zephyr/subsys/zbus/zbus_iterable_sections.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9591 = !DISubroutineType(types: !9592)
!9592 = !{!136, !9593}
!9593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9594, size: 32)
!9594 = !DISubroutineType(types: !9595)
!9595 = !{!136, !9596}
!9596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9597, size: 32)
!9597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9598)
!9598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !9599)
!9599 = !{!9600, !9601, !9602, !9603, !9604, !9605, !9713}
!9600 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9598, file: !117, line: 32, baseType: !120, size: 32)
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9598, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9598, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9598, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9598, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9598, file: !117, line: 56, baseType: !9606, size: 32, offset: 160)
!9606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9607, size: 32)
!9607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !9608)
!9608 = !{!9609, !9628, !9711, !9712}
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9607, file: !142, line: 2722, baseType: !9610, size: 64)
!9610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !9611)
!9611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !9612)
!9612 = !{!9613}
!9613 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9611, file: !146, line: 232, baseType: !9614, size: 64)
!9614 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !9615)
!9615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !9616)
!9616 = !{!9617, !9623}
!9617 = !DIDerivedType(tag: DW_TAG_member, scope: !9615, file: !151, line: 38, baseType: !9618, size: 32)
!9618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9615, file: !151, line: 38, size: 32, elements: !9619)
!9619 = !{!9620, !9622}
!9620 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9618, file: !151, line: 39, baseType: !9621, size: 32)
!9621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9615, size: 32)
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9618, file: !151, line: 40, baseType: !9621, size: 32)
!9623 = !DIDerivedType(tag: DW_TAG_member, scope: !9615, file: !151, line: 42, baseType: !9624, size: 32, offset: 32)
!9624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9615, file: !151, line: 42, size: 32, elements: !9625)
!9625 = !{!9626, !9627}
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9624, file: !151, line: 43, baseType: !9621, size: 32)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9624, file: !151, line: 44, baseType: !9621, size: 32)
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9607, file: !142, line: 2724, baseType: !9629, size: 32, offset: 64)
!9629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9630, size: 32)
!9630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !9631)
!9631 = !{!9632, !9672, !9684, !9685, !9686, !9687, !9693, !9706}
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9630, file: !168, line: 247, baseType: !9633, size: 384)
!9633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !9634)
!9634 = !{!9635, !9646, !9648, !9649, !9650, !9659, !9660, !9661}
!9635 = !DIDerivedType(tag: DW_TAG_member, scope: !9633, file: !168, line: 60, baseType: !9636, size: 64)
!9636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9633, file: !168, line: 60, size: 64, elements: !9637)
!9637 = !{!9638, !9640}
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9636, file: !168, line: 61, baseType: !9639, size: 64)
!9639 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !9615)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9636, file: !168, line: 62, baseType: !9641, size: 64)
!9641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !9642)
!9642 = !{!9643}
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9641, file: !180, line: 50, baseType: !9644, size: 64)
!9644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9645, size: 64, elements: !185)
!9645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9641, size: 32)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9633, file: !168, line: 68, baseType: !9647, size: 32, offset: 64)
!9647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9610, size: 32)
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9633, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9633, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!9650 = !DIDerivedType(tag: DW_TAG_member, scope: !9633, file: !168, line: 90, baseType: !9651, size: 16, offset: 112)
!9651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9633, file: !168, line: 90, size: 16, elements: !9652)
!9652 = !{!9653, !9658}
!9653 = !DIDerivedType(tag: DW_TAG_member, scope: !9651, file: !168, line: 91, baseType: !9654, size: 16)
!9654 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9651, file: !168, line: 91, size: 16, elements: !9655)
!9655 = !{!9656, !9657}
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9654, file: !168, line: 96, baseType: !200, size: 8)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9654, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9651, file: !168, line: 100, baseType: !126, size: 16)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9633, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9633, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9633, file: !168, line: 131, baseType: !9662, size: 192, offset: 192)
!9662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !9663)
!9663 = !{!9664, !9665, !9671}
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9662, file: !146, line: 245, baseType: !9639, size: 64)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9662, file: !146, line: 246, baseType: !9666, size: 32, offset: 64)
!9666 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !9667)
!9667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9668, size: 32)
!9668 = !DISubroutineType(types: !9669)
!9669 = !{null, !9670}
!9670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9662, size: 32)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9662, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9630, file: !168, line: 250, baseType: !9673, size: 288, offset: 384)
!9673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !9674)
!9674 = !{!9675, !9676, !9677, !9678, !9679, !9680, !9681, !9682, !9683}
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9673, file: !219, line: 26, baseType: !108, size: 32)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9673, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9673, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9673, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9673, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9673, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9673, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9673, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9673, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9630, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9630, file: !168, line: 256, baseType: !9610, size: 64, offset: 704)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9630, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9630, file: !168, line: 300, baseType: !9688, size: 96, offset: 800)
!9688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !9689)
!9689 = !{!9690, !9691, !9692}
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9688, file: !168, line: 153, baseType: !22, size: 32)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9688, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9688, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9630, file: !168, line: 325, baseType: !9694, size: 32, offset: 896)
!9694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9695, size: 32)
!9695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !9696)
!9696 = !{!9697, !9703, !9704}
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9695, file: !142, line: 5074, baseType: !9698, size: 96)
!9698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !9699)
!9699 = !{!9700, !9701, !9702}
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9698, file: !245, line: 57, baseType: !248, size: 32)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9698, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9698, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9695, file: !142, line: 5075, baseType: !9610, size: 64, offset: 96)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9695, file: !142, line: 5076, baseType: !9705, offset: 160)
!9705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9630, file: !168, line: 343, baseType: !9707, size: 64, offset: 928)
!9707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !9708)
!9708 = !{!9709, !9710}
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9707, file: !219, line: 63, baseType: !108, size: 32)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9707, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9607, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9607, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9598, file: !117, line: 67, baseType: !9714, size: 32, offset: 192)
!9714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9715, size: 32)
!9715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9716)
!9716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9717, size: 32)
!9717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9718)
!9718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !9719)
!9719 = !{!9720, !9721, !9722, !9737}
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9718, file: !117, line: 88, baseType: !120, size: 32)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9718, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9718, file: !117, line: 93, baseType: !9723, size: 32, offset: 64)
!9723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9724)
!9724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9725, size: 32)
!9725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !9726)
!9726 = !{!9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734, !9735, !9736}
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9725, file: !142, line: 4206, baseType: !9610, size: 64)
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9725, file: !142, line: 4208, baseType: !9705, offset: 64)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9725, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9725, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9725, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9725, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9725, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9725, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9725, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9725, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!9737 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9718, file: !117, line: 96, baseType: !9738, size: 32, offset: 96)
!9738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9739)
!9739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9740, size: 32)
!9740 = !DISubroutineType(types: !9741)
!9741 = !{null, !9596}
!9742 = !{!9743, !9744}
!9743 = !DILocalVariable(name: "iterator_func", arg: 1, scope: !9589, file: !9590, line: 9, type: !9593)
!9744 = !DILocalVariable(name: "chan", scope: !9745, file: !9590, line: 11, type: !9746)
!9745 = distinct !DILexicalBlock(scope: !9589, file: !9590, line: 11, column: 2)
!9746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9598, size: 32)
!9747 = !DILocation(line: 0, scope: !9589)
!9748 = !DILocation(line: 0, scope: !9745)
!9749 = !DILocation(line: 11, column: 2, scope: !9745)
!9750 = !DILocation(line: 12, column: 8, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !9590, line: 12, column: 7)
!9752 = distinct !DILexicalBlock(scope: !9753, file: !9590, line: 11, column: 45)
!9753 = distinct !DILexicalBlock(scope: !9745, file: !9590, line: 11, column: 2)
!9754 = !DILocation(line: 12, column: 7, scope: !9752)
!9755 = !DILocation(line: 11, column: 2, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9753, file: !9590, line: 11, column: 2)
!9757 = distinct !{!9757, !9749, !9758}
!9758 = !DILocation(line: 15, column: 2, scope: !9745)
!9759 = !DILocation(line: 11, column: 2, scope: !9753)
!9760 = !DILocation(line: 17, column: 1, scope: !9589)
!9761 = distinct !DISubprogram(name: "zbus_iterate_over_observers", scope: !9590, file: !9590, line: 19, type: !9762, scopeLine: 20, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2998, retainedNodes: !9767)
!9762 = !DISubroutineType(types: !9763)
!9763 = !{!136, !9764}
!9764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9765, size: 32)
!9765 = !DISubroutineType(types: !9766)
!9766 = !{!136, !9716}
!9767 = !{!9768, !9769}
!9768 = !DILocalVariable(name: "iterator_func", arg: 1, scope: !9761, file: !9590, line: 19, type: !9764)
!9769 = !DILocalVariable(name: "obs", scope: !9770, file: !9590, line: 21, type: !9771)
!9770 = distinct !DILexicalBlock(scope: !9761, file: !9590, line: 21, column: 2)
!9771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9718, size: 32)
!9772 = !DILocation(line: 0, scope: !9761)
!9773 = !DILocation(line: 0, scope: !9770)
!9774 = !DILocation(line: 21, column: 2, scope: !9770)
!9775 = !DILocation(line: 22, column: 8, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !9590, line: 22, column: 7)
!9777 = distinct !DILexicalBlock(scope: !9778, file: !9590, line: 21, column: 45)
!9778 = distinct !DILexicalBlock(scope: !9770, file: !9590, line: 21, column: 2)
!9779 = !DILocation(line: 22, column: 7, scope: !9777)
!9780 = !DILocation(line: 21, column: 2, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9778, file: !9590, line: 21, column: 2)
!9782 = distinct !{!9782, !9774, !9783}
!9783 = !DILocation(line: 25, column: 2, scope: !9770)
!9784 = !DILocation(line: 21, column: 2, scope: !9778)
!9785 = !DILocation(line: 27, column: 1, scope: !9761)
!9786 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !826, file: !826, line: 368, type: !879, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9787)
!9787 = !{!9788}
!9788 = !DILocalVariable(name: "dev", arg: 1, scope: !9786, file: !826, line: 368, type: !855)
!9789 = !DILocation(line: 0, scope: !9786)
!9790 = !DILocation(line: 370, column: 2, scope: !9786)
!9791 = !DILocation(line: 371, column: 1, scope: !9786)
!9792 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !826, file: !826, line: 243, type: !9793, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9795)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{null, !107, !107, !855}
!9795 = !{!9796, !9797, !9798, !9799, !9801}
!9796 = !DILocalVariable(name: "min", arg: 1, scope: !9792, file: !826, line: 243, type: !107)
!9797 = !DILocalVariable(name: "max", arg: 2, scope: !9792, file: !826, line: 243, type: !107)
!9798 = !DILocalVariable(name: "dev", arg: 3, scope: !9792, file: !826, line: 243, type: !855)
!9799 = !DILocalVariable(name: "data", scope: !9792, file: !826, line: 245, type: !9800)
!9800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!9801 = !DILocalVariable(name: "line", scope: !9792, file: !826, line: 246, type: !107)
!9802 = !DILocation(line: 0, scope: !9792)
!9803 = !DILocation(line: 245, column: 38, scope: !9792)
!9804 = !DILocation(line: 249, column: 24, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !826, line: 249, column: 2)
!9806 = distinct !DILexicalBlock(scope: !9792, file: !826, line: 249, column: 2)
!9807 = !DILocation(line: 249, column: 2, scope: !9806)
!9808 = !DILocation(line: 251, column: 7, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9810, file: !826, line: 251, column: 7)
!9810 = distinct !DILexicalBlock(scope: !9805, file: !826, line: 249, column: 39)
!9811 = !DILocation(line: 251, column: 7, scope: !9810)
!9812 = !DILocation(line: 253, column: 4, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9809, file: !826, line: 251, column: 36)
!9814 = !DILocation(line: 256, column: 24, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9813, file: !826, line: 256, column: 8)
!9816 = !DILocation(line: 256, column: 9, scope: !9815)
!9817 = !DILocation(line: 256, column: 8, scope: !9813)
!9818 = !DILocation(line: 260, column: 43, scope: !9813)
!9819 = !DILocation(line: 260, column: 4, scope: !9813)
!9820 = !DILocation(line: 261, column: 3, scope: !9813)
!9821 = !DILocation(line: 249, column: 35, scope: !9805)
!9822 = distinct !{!9822, !9807, !9823}
!9823 = !DILocation(line: 262, column: 2, scope: !9806)
!9824 = !DILocation(line: 263, column: 1, scope: !9792)
!9825 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !826, file: !826, line: 158, type: !418, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9826)
!9826 = !{!9827}
!9827 = !DILocalVariable(name: "line", arg: 1, scope: !9825, file: !826, line: 158, type: !107)
!9828 = !DILocation(line: 0, scope: !9825)
!9829 = !DILocation(line: 170, column: 38, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9831, file: !826, line: 160, column: 17)
!9831 = distinct !DILexicalBlock(scope: !9825, file: !826, line: 160, column: 6)
!9832 = !DILocation(line: 170, column: 10, scope: !9830)
!9833 = !DILocation(line: 176, column: 1, scope: !9825)
!9834 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !826, file: !826, line: 183, type: !9835, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9837)
!9835 = !DISubroutineType(types: !9836)
!9836 = !{null, !107}
!9837 = !{!9838}
!9838 = !DILocalVariable(name: "line", arg: 1, scope: !9834, file: !826, line: 183, type: !107)
!9839 = !DILocation(line: 0, scope: !9834)
!9840 = !DILocation(line: 195, column: 28, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9842, file: !826, line: 185, column: 17)
!9842 = distinct !DILexicalBlock(scope: !9834, file: !826, line: 185, column: 6)
!9843 = !DILocation(line: 195, column: 3, scope: !9841)
!9844 = !DILocation(line: 200, column: 1, scope: !9834)
!9845 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9846, file: !9846, line: 910, type: !7466, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9847)
!9846 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9847 = !{!9848}
!9848 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9845, file: !9846, line: 910, type: !108)
!9849 = !DILocation(line: 0, scope: !9845)
!9850 = !DILocation(line: 912, column: 3, scope: !9845)
!9851 = !DILocation(line: 913, column: 1, scope: !9845)
!9852 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9846, file: !9846, line: 834, type: !8620, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9853)
!9853 = !{!9854}
!9854 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9852, file: !9846, line: 834, type: !108)
!9855 = !DILocation(line: 0, scope: !9852)
!9856 = !DILocation(line: 836, column: 11, scope: !9852)
!9857 = !DILocation(line: 836, column: 40, scope: !9852)
!9858 = !DILocation(line: 836, column: 3, scope: !9852)
!9859 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !826, file: !826, line: 304, type: !879, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9860)
!9860 = !{!9861}
!9861 = !DILocalVariable(name: "dev", arg: 1, scope: !9859, file: !826, line: 304, type: !855)
!9862 = !DILocation(line: 0, scope: !9859)
!9863 = !DILocation(line: 306, column: 2, scope: !9859)
!9864 = !DILocation(line: 307, column: 1, scope: !9859)
!9865 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !826, file: !826, line: 299, type: !879, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9866)
!9866 = !{!9867}
!9867 = !DILocalVariable(name: "dev", arg: 1, scope: !9865, file: !826, line: 299, type: !855)
!9868 = !DILocation(line: 0, scope: !9865)
!9869 = !DILocation(line: 301, column: 2, scope: !9865)
!9870 = !DILocation(line: 302, column: 1, scope: !9865)
!9871 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !826, file: !826, line: 294, type: !879, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9872)
!9872 = !{!9873}
!9873 = !DILocalVariable(name: "dev", arg: 1, scope: !9871, file: !826, line: 294, type: !855)
!9874 = !DILocation(line: 0, scope: !9871)
!9875 = !DILocation(line: 296, column: 2, scope: !9871)
!9876 = !DILocation(line: 297, column: 1, scope: !9871)
!9877 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !826, file: !826, line: 397, type: !879, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9878)
!9878 = !{!9879}
!9879 = !DILocalVariable(name: "dev", arg: 1, scope: !9877, file: !826, line: 397, type: !855)
!9880 = !DILocation(line: 0, scope: !9877)
!9881 = !DILocation(line: 399, column: 2, scope: !9877)
!9882 = !DILocation(line: 400, column: 1, scope: !9877)
!9883 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !826, file: !826, line: 392, type: !879, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9884)
!9884 = !{!9885}
!9885 = !DILocalVariable(name: "dev", arg: 1, scope: !9883, file: !826, line: 392, type: !855)
!9886 = !DILocation(line: 0, scope: !9883)
!9887 = !DILocation(line: 394, column: 2, scope: !9883)
!9888 = !DILocation(line: 395, column: 1, scope: !9883)
!9889 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !826, file: !826, line: 289, type: !879, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9890)
!9890 = !{!9891}
!9891 = !DILocalVariable(name: "dev", arg: 1, scope: !9889, file: !826, line: 289, type: !855)
!9892 = !DILocation(line: 0, scope: !9889)
!9893 = !DILocation(line: 291, column: 2, scope: !9889)
!9894 = !DILocation(line: 292, column: 1, scope: !9889)
!9895 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !826, file: !826, line: 387, type: !879, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9896)
!9896 = !{!9897}
!9897 = !DILocalVariable(name: "dev", arg: 1, scope: !9895, file: !826, line: 387, type: !855)
!9898 = !DILocation(line: 0, scope: !9895)
!9899 = !DILocation(line: 389, column: 2, scope: !9895)
!9900 = !DILocation(line: 390, column: 1, scope: !9895)
!9901 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !826, file: !826, line: 382, type: !879, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9902)
!9902 = !{!9903}
!9903 = !DILocalVariable(name: "dev", arg: 1, scope: !9901, file: !826, line: 382, type: !855)
!9904 = !DILocation(line: 0, scope: !9901)
!9905 = !DILocation(line: 384, column: 2, scope: !9901)
!9906 = !DILocation(line: 385, column: 1, scope: !9901)
!9907 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !826, file: !826, line: 373, type: !879, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9908)
!9908 = !{!9909}
!9909 = !DILocalVariable(name: "dev", arg: 1, scope: !9907, file: !826, line: 373, type: !855)
!9910 = !DILocation(line: 0, scope: !9907)
!9911 = !DILocation(line: 375, column: 2, scope: !9907)
!9912 = !DILocation(line: 376, column: 1, scope: !9907)
!9913 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !826, file: !826, line: 284, type: !879, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9914)
!9914 = !{!9915}
!9915 = !DILocalVariable(name: "dev", arg: 1, scope: !9913, file: !826, line: 284, type: !855)
!9916 = !DILocation(line: 0, scope: !9913)
!9917 = !DILocation(line: 286, column: 2, scope: !9913)
!9918 = !DILocation(line: 287, column: 1, scope: !9913)
!9919 = distinct !DISubprogram(name: "stm32_exti_init", scope: !826, file: !826, line: 416, type: !853, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9920)
!9920 = !{!9921}
!9921 = !DILocalVariable(name: "dev", arg: 1, scope: !9919, file: !826, line: 416, type: !855)
!9922 = !DILocation(line: 0, scope: !9919)
!9923 = !DILocation(line: 418, column: 2, scope: !9919)
!9924 = !DILocation(line: 420, column: 2, scope: !9919)
!9925 = !DILocation(line: 0, scope: !878)
!9926 = !DILocation(line: 493, column: 2, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !878, file: !826, line: 493, column: 2)
!9928 = !DILocation(line: 497, column: 2, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !878, file: !826, line: 497, column: 2)
!9930 = !DILocation(line: 507, column: 2, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !878, file: !826, line: 507, column: 2)
!9932 = !DILocation(line: 512, column: 2, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !878, file: !826, line: 512, column: 2)
!9934 = !DILocation(line: 516, column: 2, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !878, file: !826, line: 516, column: 2)
!9936 = !DILocation(line: 523, column: 2, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !878, file: !826, line: 523, column: 2)
!9938 = !DILocation(line: 527, column: 2, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !878, file: !826, line: 527, column: 2)
!9940 = !DILocation(line: 581, column: 2, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !878, file: !826, line: 581, column: 2)
!9942 = !DILocation(line: 586, column: 2, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !878, file: !826, line: 586, column: 2)
!9944 = !DILocation(line: 591, column: 2, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !878, file: !826, line: 591, column: 2)
!9946 = !DILocation(line: 595, column: 2, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !878, file: !826, line: 595, column: 2)
!9948 = !DILocation(line: 607, column: 1, scope: !878)
!9949 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !826, file: !826, line: 112, type: !9835, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9950)
!9950 = !{!9951, !9952}
!9951 = !DILocalVariable(name: "line", arg: 1, scope: !9949, file: !826, line: 112, type: !107)
!9952 = !DILocalVariable(name: "irqnum", scope: !9949, file: !826, line: 114, type: !107)
!9953 = !DILocation(line: 0, scope: !9949)
!9954 = !DILocation(line: 121, column: 11, scope: !9949)
!9955 = !DILocation(line: 130, column: 26, scope: !9949)
!9956 = !DILocation(line: 130, column: 2, scope: !9949)
!9957 = !DILocation(line: 134, column: 2, scope: !9949)
!9958 = !DILocation(line: 135, column: 1, scope: !9949)
!9959 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9846, file: !9846, line: 268, type: !7466, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9960)
!9960 = !{!9961}
!9961 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9959, file: !9846, line: 268, type: !108)
!9962 = !DILocation(line: 0, scope: !9959)
!9963 = !DILocation(line: 270, column: 3, scope: !9959)
!9964 = !DILocation(line: 271, column: 1, scope: !9959)
!9965 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !826, file: !826, line: 137, type: !9835, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9966)
!9966 = !{!9967}
!9967 = !DILocalVariable(name: "line", arg: 1, scope: !9965, file: !826, line: 137, type: !107)
!9968 = !DILocation(line: 0, scope: !9965)
!9969 = !DILocation(line: 141, column: 11, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9965, file: !826, line: 141, column: 6)
!9971 = !DILocation(line: 141, column: 6, scope: !9965)
!9972 = !DILocation(line: 145, column: 28, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9970, file: !826, line: 141, column: 17)
!9974 = !DILocation(line: 145, column: 3, scope: !9973)
!9975 = !DILocation(line: 147, column: 2, scope: !9973)
!9976 = !DILocation(line: 151, column: 1, scope: !9965)
!9977 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9846, file: !9846, line: 309, type: !7466, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9978)
!9978 = !{!9979}
!9979 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9977, file: !9846, line: 309, type: !108)
!9980 = !DILocation(line: 0, scope: !9977)
!9981 = !DILocation(line: 311, column: 3, scope: !9977)
!9982 = !DILocation(line: 312, column: 1, scope: !9977)
!9983 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !826, file: !826, line: 202, type: !9984, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9986)
!9984 = !DISubroutineType(types: !9985)
!9985 = !{null, !107, !107}
!9986 = !{!9987, !9988}
!9987 = !DILocalVariable(name: "line", arg: 1, scope: !9983, file: !826, line: 202, type: !107)
!9988 = !DILocalVariable(name: "trigger", arg: 2, scope: !9983, file: !826, line: 202, type: !107)
!9989 = !DILocation(line: 0, scope: !9983)
!9990 = !DILocation(line: 211, column: 2, scope: !9983)
!9991 = !DILocation(line: 213, column: 36, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9983, file: !826, line: 211, column: 19)
!9993 = !DILocation(line: 213, column: 3, scope: !9992)
!9994 = !DILocation(line: 214, column: 3, scope: !9992)
!9995 = !DILocation(line: 215, column: 3, scope: !9992)
!9996 = !DILocation(line: 217, column: 35, scope: !9992)
!9997 = !DILocation(line: 217, column: 3, scope: !9992)
!9998 = !DILocation(line: 218, column: 3, scope: !9992)
!9999 = !DILocation(line: 219, column: 3, scope: !9992)
!10000 = !DILocation(line: 221, column: 36, scope: !9992)
!10001 = !DILocation(line: 221, column: 3, scope: !9992)
!10002 = !DILocation(line: 222, column: 3, scope: !9992)
!10003 = !DILocation(line: 223, column: 3, scope: !9992)
!10004 = !DILocation(line: 225, column: 35, scope: !9992)
!10005 = !DILocation(line: 225, column: 3, scope: !9992)
!10006 = !DILocation(line: 226, column: 3, scope: !9992)
!10007 = !DILocation(line: 227, column: 3, scope: !9992)
!10008 = !DILocation(line: 232, column: 1, scope: !9983)
!10009 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9846, file: !9846, line: 573, type: !7466, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10010)
!10010 = !{!10011}
!10011 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10009, file: !9846, line: 573, type: !108)
!10012 = !DILocation(line: 0, scope: !10009)
!10013 = !DILocation(line: 575, column: 3, scope: !10009)
!10014 = !DILocation(line: 577, column: 1, scope: !10009)
!10015 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9846, file: !9846, line: 703, type: !7466, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10016)
!10016 = !{!10017}
!10017 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10015, file: !9846, line: 703, type: !108)
!10018 = !DILocation(line: 0, scope: !10015)
!10019 = !DILocation(line: 705, column: 3, scope: !10015)
!10020 = !DILocation(line: 706, column: 1, scope: !10015)
!10021 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9846, file: !9846, line: 529, type: !7466, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10022)
!10022 = !{!10023}
!10023 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10021, file: !9846, line: 529, type: !108)
!10024 = !DILocation(line: 0, scope: !10021)
!10025 = !DILocation(line: 531, column: 3, scope: !10021)
!10026 = !DILocation(line: 533, column: 1, scope: !10021)
!10027 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9846, file: !9846, line: 661, type: !7466, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10028)
!10028 = !{!10029}
!10029 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10027, file: !9846, line: 661, type: !108)
!10030 = !DILocation(line: 0, scope: !10027)
!10031 = !DILocation(line: 663, column: 3, scope: !10027)
!10032 = !DILocation(line: 664, column: 1, scope: !10027)
!10033 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !826, file: !826, line: 433, type: !10034, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10036)
!10034 = !DISubroutineType(types: !10035)
!10035 = !{!107, !107, !866, !106}
!10036 = !{!10037, !10038, !10039, !10040, !10042}
!10037 = !DILocalVariable(name: "line", arg: 1, scope: !10033, file: !826, line: 433, type: !107)
!10038 = !DILocalVariable(name: "cb", arg: 2, scope: !10033, file: !826, line: 433, type: !866)
!10039 = !DILocalVariable(name: "arg", arg: 3, scope: !10033, file: !826, line: 433, type: !106)
!10040 = !DILocalVariable(name: "dev", scope: !10033, file: !826, line: 435, type: !10041)
!10041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!10042 = !DILocalVariable(name: "data", scope: !10033, file: !826, line: 436, type: !9800)
!10043 = !DILocation(line: 0, scope: !10033)
!10044 = !DILocation(line: 438, column: 21, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10033, file: !826, line: 438, column: 6)
!10046 = !DILocation(line: 438, column: 6, scope: !10045)
!10047 = !DILocation(line: 438, column: 6, scope: !10033)
!10048 = !DILocation(line: 442, column: 20, scope: !10033)
!10049 = !DILocation(line: 443, column: 17, scope: !10033)
!10050 = !DILocation(line: 443, column: 22, scope: !10033)
!10051 = !DILocation(line: 445, column: 2, scope: !10033)
!10052 = !DILocation(line: 446, column: 1, scope: !10033)
!10053 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !826, file: !826, line: 448, type: !9835, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10054)
!10054 = !{!10055, !10056, !10057}
!10055 = !DILocalVariable(name: "line", arg: 1, scope: !10053, file: !826, line: 448, type: !107)
!10056 = !DILocalVariable(name: "dev", scope: !10053, file: !826, line: 450, type: !10041)
!10057 = !DILocalVariable(name: "data", scope: !10053, file: !826, line: 451, type: !9800)
!10058 = !DILocation(line: 0, scope: !10053)
!10059 = !DILocation(line: 453, column: 17, scope: !10053)
!10060 = !DILocation(line: 453, column: 20, scope: !10053)
!10061 = !DILocation(line: 454, column: 17, scope: !10053)
!10062 = !DILocation(line: 454, column: 22, scope: !10053)
!10063 = !DILocation(line: 455, column: 1, scope: !10053)
!10064 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1006, file: !1006, line: 183, type: !1044, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10065)
!10065 = !{!10066, !10067, !10068, !10069, !10070}
!10066 = !DILocalVariable(name: "dev", arg: 1, scope: !10064, file: !1006, line: 183, type: !1035)
!10067 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10064, file: !1006, line: 184, type: !1046)
!10068 = !DILocalVariable(name: "pclken", scope: !10064, file: !1006, line: 186, type: !996)
!10069 = !DILocalVariable(name: "reg", scope: !10064, file: !1006, line: 187, type: !1589)
!10070 = !DILocalVariable(name: "reg_val", scope: !10064, file: !1006, line: 188, type: !108)
!10071 = !DILocation(line: 0, scope: !10064)
!10072 = !DILocation(line: 192, column: 6, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10064, file: !1006, line: 192, column: 6)
!10074 = !DILocation(line: 192, column: 6, scope: !10064)
!10075 = !DILocation(line: 197, column: 52, scope: !10064)
!10076 = !DILocation(line: 197, column: 8, scope: !10064)
!10077 = !DILocation(line: 198, column: 12, scope: !10064)
!10078 = !DILocation(line: 199, column: 21, scope: !10064)
!10079 = !DILocation(line: 199, column: 10, scope: !10064)
!10080 = !DILocation(line: 200, column: 7, scope: !10064)
!10081 = !DILocation(line: 202, column: 2, scope: !10064)
!10082 = !DILocation(line: 203, column: 1, scope: !10064)
!10083 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1006, file: !1006, line: 205, type: !1044, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10084)
!10084 = !{!10085, !10086, !10087, !10088, !10089}
!10085 = !DILocalVariable(name: "dev", arg: 1, scope: !10083, file: !1006, line: 205, type: !1035)
!10086 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10083, file: !1006, line: 206, type: !1046)
!10087 = !DILocalVariable(name: "pclken", scope: !10083, file: !1006, line: 208, type: !996)
!10088 = !DILocalVariable(name: "reg", scope: !10083, file: !1006, line: 209, type: !1589)
!10089 = !DILocalVariable(name: "reg_val", scope: !10083, file: !1006, line: 210, type: !108)
!10090 = !DILocation(line: 0, scope: !10083)
!10091 = !DILocation(line: 214, column: 6, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10083, file: !1006, line: 214, column: 6)
!10093 = !DILocation(line: 214, column: 6, scope: !10083)
!10094 = !DILocation(line: 219, column: 52, scope: !10083)
!10095 = !DILocation(line: 219, column: 8, scope: !10083)
!10096 = !DILocation(line: 220, column: 12, scope: !10083)
!10097 = !DILocation(line: 221, column: 22, scope: !10083)
!10098 = !DILocation(line: 221, column: 13, scope: !10083)
!10099 = !DILocation(line: 221, column: 10, scope: !10083)
!10100 = !DILocation(line: 222, column: 7, scope: !10083)
!10101 = !DILocation(line: 224, column: 2, scope: !10083)
!10102 = !DILocation(line: 225, column: 1, scope: !10083)
!10103 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1006, file: !1006, line: 262, type: !1060, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10104)
!10104 = !{!10105, !10106, !10107, !10108, !10109, !10110, !10111, !10112}
!10105 = !DILocalVariable(name: "clock", arg: 1, scope: !10103, file: !1006, line: 262, type: !1035)
!10106 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10103, file: !1006, line: 263, type: !1046)
!10107 = !DILocalVariable(name: "rate", arg: 3, scope: !10103, file: !1006, line: 264, type: !1002)
!10108 = !DILocalVariable(name: "pclken", scope: !10103, file: !1006, line: 266, type: !996)
!10109 = !DILocalVariable(name: "ahb_clock", scope: !10103, file: !1006, line: 273, type: !108)
!10110 = !DILocalVariable(name: "apb1_clock", scope: !10103, file: !1006, line: 274, type: !108)
!10111 = !DILocalVariable(name: "apb2_clock", scope: !10103, file: !1006, line: 276, type: !108)
!10112 = !DILocalVariable(name: "ahb3_clock", scope: !10103, file: !1006, line: 286, type: !108)
!10113 = !DILocation(line: 0, scope: !10103)
!10114 = !DILocation(line: 273, column: 23, scope: !10103)
!10115 = !DILocation(line: 274, column: 24, scope: !10103)
!10116 = !DILocation(line: 299, column: 18, scope: !10103)
!10117 = !DILocation(line: 299, column: 2, scope: !10103)
!10118 = !DILocation(line: 319, column: 3, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10103, file: !1006, line: 299, column: 23)
!10120 = !DILocation(line: 323, column: 3, scope: !10119)
!10121 = !DILocation(line: 346, column: 33, scope: !10119)
!10122 = !DILocation(line: 346, column: 11, scope: !10119)
!10123 = !DILocation(line: 350, column: 3, scope: !10119)
!10124 = !DILocation(line: 354, column: 33, scope: !10119)
!10125 = !DILocation(line: 354, column: 11, scope: !10119)
!10126 = !DILocation(line: 358, column: 3, scope: !10119)
!10127 = !DILocation(line: 374, column: 3, scope: !10119)
!10128 = !DILocation(line: 379, column: 3, scope: !10119)
!10129 = !DILocation(line: 0, scope: !10119)
!10130 = !DILocation(line: 396, column: 1, scope: !10103)
!10131 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1006, file: !1006, line: 227, type: !1076, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10132)
!10132 = !{!10133, !10134, !10135, !10136, !10137, !10138, !10139, !10140}
!10133 = !DILocalVariable(name: "dev", arg: 1, scope: !10131, file: !1006, line: 227, type: !1035)
!10134 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10131, file: !1006, line: 228, type: !1046)
!10135 = !DILocalVariable(name: "data", arg: 3, scope: !10131, file: !1006, line: 229, type: !106)
!10136 = !DILocalVariable(name: "pclken", scope: !10131, file: !1006, line: 233, type: !996)
!10137 = !DILocalVariable(name: "reg", scope: !10131, file: !1006, line: 234, type: !1589)
!10138 = !DILocalVariable(name: "reg_val", scope: !10131, file: !1006, line: 235, type: !108)
!10139 = !DILocalVariable(name: "dt_val", scope: !10131, file: !1006, line: 235, type: !108)
!10140 = !DILocalVariable(name: "err", scope: !10131, file: !1006, line: 236, type: !107)
!10141 = !DILocation(line: 0, scope: !10131)
!10142 = !DILocation(line: 241, column: 30, scope: !10131)
!10143 = !DILocation(line: 241, column: 8, scope: !10131)
!10144 = !DILocation(line: 242, column: 10, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10131, file: !1006, line: 242, column: 6)
!10146 = !DILocation(line: 242, column: 6, scope: !10131)
!10147 = !DILocation(line: 247, column: 11, scope: !10131)
!10148 = !DILocation(line: 248, column: 6, scope: !10131)
!10149 = !DILocation(line: 247, column: 44, scope: !10131)
!10150 = !DILocation(line: 250, column: 6, scope: !10131)
!10151 = !DILocation(line: 249, column: 52, scope: !10131)
!10152 = !DILocation(line: 249, column: 8, scope: !10131)
!10153 = !DILocation(line: 251, column: 12, scope: !10131)
!10154 = !DILocation(line: 252, column: 10, scope: !10131)
!10155 = !DILocation(line: 253, column: 7, scope: !10131)
!10156 = !DILocation(line: 255, column: 2, scope: !10131)
!10157 = !DILocation(line: 260, column: 1, scope: !10131)
!10158 = distinct !DISubprogram(name: "enabled_clock", scope: !1006, file: !1006, line: 100, type: !10159, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10161)
!10159 = !DISubroutineType(types: !10160)
!10160 = !{!107, !108}
!10161 = !{!10162, !10163}
!10162 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10158, file: !1006, line: 100, type: !108)
!10163 = !DILocalVariable(name: "r", scope: !10158, file: !1006, line: 102, type: !107)
!10164 = !DILocation(line: 0, scope: !10158)
!10165 = !DILocation(line: 104, column: 2, scope: !10158)
!10166 = !DILocation(line: 180, column: 2, scope: !10158)
!10167 = !DILocation(line: 181, column: 1, scope: !10158)
!10168 = distinct !DISubprogram(name: "get_bus_clock", scope: !1006, file: !1006, line: 79, type: !10169, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{!108, !108, !108}
!10171 = !{!10172, !10173}
!10172 = !DILocalVariable(name: "clock", arg: 1, scope: !10168, file: !1006, line: 79, type: !108)
!10173 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10168, file: !1006, line: 79, type: !108)
!10174 = !DILocation(line: 0, scope: !10168)
!10175 = !DILocation(line: 81, column: 15, scope: !10168)
!10176 = !DILocation(line: 81, column: 2, scope: !10168)
!10177 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1006, file: !1006, line: 68, type: !10178, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10180)
!10178 = !DISubroutineType(types: !10179)
!10179 = !{!108, !108, !107, !107, !107}
!10180 = !{!10181, !10182, !10183, !10184}
!10181 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10177, file: !1006, line: 68, type: !108)
!10182 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10177, file: !1006, line: 69, type: !107)
!10183 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10177, file: !1006, line: 70, type: !107)
!10184 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10177, file: !1006, line: 71, type: !107)
!10185 = !DILocation(line: 0, scope: !10177)
!10186 = !DILocation(line: 75, column: 22, scope: !10177)
!10187 = !DILocation(line: 76, column: 13, scope: !10177)
!10188 = !DILocation(line: 75, column: 34, scope: !10177)
!10189 = !DILocation(line: 75, column: 2, scope: !10177)
!10190 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1006, file: !1006, line: 641, type: !1033, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10191)
!10191 = !{!10192, !10193, !10194}
!10192 = !DILocalVariable(name: "dev", arg: 1, scope: !10190, file: !1006, line: 641, type: !1035)
!10193 = !DILocalVariable(name: "old_flash_freq", scope: !10190, file: !1006, line: 664, type: !108)
!10194 = !DILocalVariable(name: "new_flash_freq", scope: !10190, file: !1006, line: 665, type: !108)
!10195 = !DILocation(line: 0, scope: !10190)
!10196 = !DILocation(line: 646, column: 2, scope: !10190)
!10197 = !DILocation(line: 667, column: 19, scope: !10190)
!10198 = !DILocation(line: 674, column: 21, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10190, file: !1006, line: 674, column: 6)
!10200 = !DILocation(line: 674, column: 6, scope: !10190)
!10201 = !DILocation(line: 675, column: 3, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10199, file: !1006, line: 674, column: 59)
!10203 = !DILocation(line: 676, column: 2, scope: !10202)
!10204 = !DILocation(line: 680, column: 2, scope: !10190)
!10205 = !DILocation(line: 683, column: 2, scope: !10190)
!10206 = !DILocation(line: 690, column: 3, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !1006, line: 689, column: 9)
!10208 = distinct !DILexicalBlock(scope: !10190, file: !1006, line: 685, column: 6)
!10209 = !DILocation(line: 695, column: 2, scope: !10190)
!10210 = !DILocation(line: 696, column: 2, scope: !10190)
!10211 = !DILocation(line: 696, column: 9, scope: !10190)
!10212 = !DILocation(line: 696, column: 34, scope: !10190)
!10213 = distinct !{!10213, !10210, !10214}
!10214 = !DILocation(line: 697, column: 2, scope: !10190)
!10215 = !DILocation(line: 720, column: 21, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10190, file: !1006, line: 720, column: 6)
!10217 = !DILocation(line: 720, column: 6, scope: !10190)
!10218 = !DILocation(line: 721, column: 3, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10216, file: !1006, line: 720, column: 60)
!10220 = !DILocation(line: 722, column: 2, scope: !10219)
!10221 = !DILocation(line: 725, column: 18, scope: !10190)
!10222 = !DILocation(line: 728, column: 2, scope: !10190)
!10223 = !DILocation(line: 730, column: 2, scope: !10190)
!10224 = !DILocation(line: 745, column: 2, scope: !10190)
!10225 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10226, file: !10226, line: 3275, type: !7456, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10226 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10227 = !DILocation(line: 3277, column: 21, scope: !10225)
!10228 = !DILocation(line: 3277, column: 3, scope: !10225)
!10229 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1006, file: !1006, line: 507, type: !337, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10230 = !DILocation(line: 516, column: 4, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !1006, line: 515, column: 10)
!10232 = distinct !DILexicalBlock(scope: !10233, file: !1006, line: 513, column: 7)
!10233 = distinct !DILexicalBlock(scope: !10234, file: !1006, line: 510, column: 37)
!10234 = distinct !DILexicalBlock(scope: !10229, file: !1006, line: 510, column: 6)
!10235 = !DILocation(line: 526, column: 3, scope: !10233)
!10236 = !DILocation(line: 527, column: 3, scope: !10233)
!10237 = !DILocation(line: 527, column: 10, scope: !10233)
!10238 = !DILocation(line: 527, column: 31, scope: !10233)
!10239 = distinct !{!10239, !10236, !10240}
!10240 = !DILocation(line: 529, column: 3, scope: !10233)
!10241 = !DILocation(line: 583, column: 3, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !1006, line: 577, column: 37)
!10243 = distinct !DILexicalBlock(scope: !10229, file: !1006, line: 577, column: 6)
!10244 = !DILocation(line: 584, column: 3, scope: !10242)
!10245 = !DILocation(line: 584, column: 10, scope: !10242)
!10246 = !DILocation(line: 584, column: 31, scope: !10242)
!10247 = distinct !{!10247, !10244, !10248}
!10248 = !DILocation(line: 585, column: 3, scope: !10242)
!10249 = !DILocation(line: 627, column: 1, scope: !10229)
!10250 = distinct !DISubprogram(name: "set_up_plls", scope: !1006, file: !1006, line: 448, type: !337, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10251 = !DILocation(line: 460, column: 6, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10250, file: !1006, line: 460, column: 6)
!10253 = !DILocation(line: 460, column: 31, scope: !10252)
!10254 = !DILocation(line: 460, column: 6, scope: !10250)
!10255 = !DILocation(line: 461, column: 3, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10252, file: !1006, line: 460, column: 67)
!10257 = !DILocation(line: 462, column: 3, scope: !10256)
!10258 = !DILocation(line: 463, column: 2, scope: !10256)
!10259 = !DILocation(line: 464, column: 2, scope: !10250)
!10260 = !DILocation(line: 488, column: 2, scope: !10250)
!10261 = !DILocation(line: 492, column: 2, scope: !10250)
!10262 = !DILocation(line: 496, column: 2, scope: !10250)
!10263 = !DILocation(line: 499, column: 2, scope: !10250)
!10264 = !DILocation(line: 500, column: 2, scope: !10250)
!10265 = !DILocation(line: 500, column: 9, scope: !10250)
!10266 = !DILocation(line: 500, column: 30, scope: !10250)
!10267 = distinct !{!10267, !10264, !10268}
!10268 = !DILocation(line: 502, column: 2, scope: !10250)
!10269 = !DILocation(line: 505, column: 1, scope: !10250)
!10270 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10226, file: !10226, line: 3224, type: !7466, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10271)
!10271 = !{!10272}
!10272 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10270, file: !10226, line: 3224, type: !108)
!10273 = !DILocation(line: 0, scope: !10270)
!10274 = !DILocation(line: 3226, column: 3, scope: !10270)
!10275 = !DILocation(line: 3227, column: 1, scope: !10270)
!10276 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10226, file: !10226, line: 3188, type: !7466, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10277)
!10277 = !{!10278}
!10278 = !DILocalVariable(name: "Source", arg: 1, scope: !10276, file: !10226, line: 3188, type: !108)
!10279 = !DILocation(line: 0, scope: !10276)
!10280 = !DILocation(line: 3190, column: 3, scope: !10276)
!10281 = !DILocation(line: 3191, column: 1, scope: !10276)
!10282 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10226, file: !10226, line: 3204, type: !7456, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10283 = !DILocation(line: 3206, column: 21, scope: !10282)
!10284 = !DILocation(line: 3206, column: 3, scope: !10282)
!10285 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10226, file: !10226, line: 3240, type: !7466, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10286)
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10285, file: !10226, line: 3240, type: !108)
!10288 = !DILocation(line: 0, scope: !10285)
!10289 = !DILocation(line: 3242, column: 3, scope: !10285)
!10290 = !DILocation(line: 3243, column: 1, scope: !10285)
!10291 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10226, file: !10226, line: 3256, type: !7466, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !10292)
!10292 = !{!10293}
!10293 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10291, file: !10226, line: 3256, type: !108)
!10294 = !DILocation(line: 0, scope: !10291)
!10295 = !DILocation(line: 3258, column: 3, scope: !10291)
!10296 = !DILocation(line: 3259, column: 1, scope: !10291)
!10297 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1006, file: !1006, line: 409, type: !337, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10298 = !DILocation(line: 412, column: 6, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10297, file: !1006, line: 412, column: 6)
!10300 = !DILocation(line: 412, column: 27, scope: !10299)
!10301 = !DILocation(line: 412, column: 6, scope: !10297)
!10302 = !DILocation(line: 414, column: 3, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10299, file: !1006, line: 412, column: 33)
!10304 = !DILocation(line: 415, column: 3, scope: !10303)
!10305 = !DILocation(line: 415, column: 10, scope: !10303)
!10306 = !DILocation(line: 415, column: 31, scope: !10303)
!10307 = distinct !{!10307, !10304, !10308}
!10308 = !DILocation(line: 417, column: 3, scope: !10303)
!10309 = !DILocation(line: 421, column: 2, scope: !10297)
!10310 = !DILocation(line: 422, column: 2, scope: !10297)
!10311 = !DILocation(line: 422, column: 9, scope: !10297)
!10312 = !DILocation(line: 422, column: 34, scope: !10297)
!10313 = distinct !{!10313, !10310, !10314}
!10314 = !DILocation(line: 423, column: 2, scope: !10297)
!10315 = !DILocation(line: 424, column: 1, scope: !10297)
!10316 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10226, file: !10226, line: 4195, type: !337, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10317 = !DILocation(line: 4197, column: 3, scope: !10316)
!10318 = !DILocation(line: 4198, column: 1, scope: !10316)
!10319 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10226, file: !10226, line: 4184, type: !337, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10320 = !DILocation(line: 4186, column: 3, scope: !10319)
!10321 = !DILocation(line: 4187, column: 1, scope: !10319)
!10322 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10226, file: !10226, line: 4205, type: !7456, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10323 = !DILocation(line: 4207, column: 11, scope: !10322)
!10324 = !DILocation(line: 4207, column: 44, scope: !10322)
!10325 = !DILocation(line: 4207, column: 3, scope: !10322)
!10326 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10226, file: !10226, line: 3007, type: !7456, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10327 = !DILocation(line: 3009, column: 11, scope: !10326)
!10328 = !DILocation(line: 3009, column: 44, scope: !10326)
!10329 = !DILocation(line: 3009, column: 3, scope: !10326)
!10330 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10226, file: !10226, line: 2987, type: !337, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10331 = !DILocation(line: 2989, column: 3, scope: !10330)
!10332 = !DILocation(line: 2990, column: 1, scope: !10330)
!10333 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10226, file: !10226, line: 2939, type: !337, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10334 = !DILocation(line: 2941, column: 3, scope: !10333)
!10335 = !DILocation(line: 2942, column: 1, scope: !10333)
!10336 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10226, file: !10226, line: 2949, type: !337, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10337 = !DILocation(line: 2951, column: 3, scope: !10336)
!10338 = !DILocation(line: 2952, column: 1, scope: !10336)
!10339 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10226, file: !10226, line: 2969, type: !7456, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10340 = !DILocation(line: 2971, column: 11, scope: !10339)
!10341 = !DILocation(line: 2971, column: 44, scope: !10339)
!10342 = !DILocation(line: 2971, column: 3, scope: !10339)
!10343 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10226, file: !10226, line: 3143, type: !337, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10344 = !DILocation(line: 3145, column: 3, scope: !10343)
!10345 = !DILocation(line: 3146, column: 1, scope: !10343)
!10346 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10226, file: !10226, line: 3163, type: !7456, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !256)
!10347 = !DILocation(line: 3165, column: 11, scope: !10346)
!10348 = !DILocation(line: 3165, column: 46, scope: !10346)
!10349 = !DILocation(line: 3165, column: 3, scope: !10346)
!10350 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10351, file: !10351, line: 40, type: !7456, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !256)
!10351 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10352 = !DILocation(line: 45, column: 3, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !10351, line: 44, column: 44)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !10351, line: 44, column: 13)
!10355 = distinct !DILexicalBlock(scope: !10350, file: !10351, line: 42, column: 6)
!10356 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10351, file: !10351, line: 56, type: !337, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !256)
!10357 = !DILocation(line: 58, column: 2, scope: !10356)
!10358 = !DILocation(line: 62, column: 1, scope: !10356)
!10359 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10226, file: !10226, line: 4304, type: !10360, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !10362)
!10360 = !DISubroutineType(types: !10361)
!10361 = !{null, !108, !108, !108, !108}
!10362 = !{!10363, !10364, !10365, !10366}
!10363 = !DILocalVariable(name: "Source", arg: 1, scope: !10359, file: !10226, line: 4304, type: !108)
!10364 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10359, file: !10226, line: 4304, type: !108)
!10365 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10359, file: !10226, line: 4304, type: !108)
!10366 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10359, file: !10226, line: 4304, type: !108)
!10367 = !DILocation(line: 0, scope: !10359)
!10368 = !DILocation(line: 4306, column: 3, scope: !10359)
!10369 = !DILocation(line: 4308, column: 3, scope: !10359)
!10370 = !DILocation(line: 4312, column: 1, scope: !10359)
!10371 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10351, file: !10351, line: 69, type: !337, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !256)
!10372 = !DILocation(line: 72, column: 2, scope: !10371)
!10373 = !DILocation(line: 73, column: 1, scope: !10371)
!10374 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10375, file: !10375, line: 1185, type: !7466, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !10376)
!10375 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10376 = !{!10377, !10378}
!10377 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10374, file: !10375, line: 1185, type: !108)
!10378 = !DILocalVariable(name: "tmpreg", scope: !10374, file: !10375, line: 1187, type: !431)
!10379 = !DILocation(line: 0, scope: !10374)
!10380 = !DILocation(line: 1187, column: 3, scope: !10374)
!10381 = !DILocation(line: 1187, column: 17, scope: !10374)
!10382 = !DILocation(line: 1188, column: 3, scope: !10374)
!10383 = !DILocation(line: 1190, column: 12, scope: !10374)
!10384 = !DILocation(line: 1190, column: 10, scope: !10374)
!10385 = !DILocation(line: 1191, column: 9, scope: !10374)
!10386 = !DILocation(line: 1192, column: 1, scope: !10374)
!10387 = distinct !DISubprogram(name: "uart_console_init", scope: !1137, file: !1137, line: 588, type: !1114, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10388)
!10388 = !{!10389}
!10389 = !DILocalVariable(name: "arg", arg: 1, scope: !10387, file: !1137, line: 588, type: !1092)
!10390 = !DILocation(line: 0, scope: !10387)
!10391 = !DILocation(line: 593, column: 7, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10387, file: !1137, line: 593, column: 6)
!10393 = !DILocation(line: 593, column: 6, scope: !10387)
!10394 = !DILocation(line: 597, column: 2, scope: !10387)
!10395 = !DILocation(line: 599, column: 2, scope: !10387)
!10396 = !DILocation(line: 600, column: 1, scope: !10387)
!10397 = distinct !DISubprogram(name: "device_is_ready", scope: !10398, file: !10398, line: 47, type: !10399, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10401)
!10398 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!10399 = !DISubroutineType(types: !10400)
!10400 = !{!136, !1092}
!10401 = !{!10402}
!10402 = !DILocalVariable(name: "dev", arg: 1, scope: !10397, file: !10398, line: 47, type: !1092)
!10403 = !DILocation(line: 0, scope: !10397)
!10404 = !DILocation(line: 55, column: 2, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10397, file: !10398, line: 55, column: 2)
!10406 = !{i64 2154952983}
!10407 = !DILocation(line: 56, column: 9, scope: !10397)
!10408 = !DILocation(line: 56, column: 2, scope: !10397)
!10409 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1137, file: !1137, line: 573, type: !337, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !256)
!10410 = !DILocation(line: 576, column: 2, scope: !10409)
!10411 = !DILocation(line: 579, column: 2, scope: !10409)
!10412 = !DILocation(line: 581, column: 1, scope: !10409)
!10413 = distinct !DISubprogram(name: "console_out", scope: !1137, file: !1137, line: 77, type: !418, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10414)
!10414 = !{!10415}
!10415 = !DILocalVariable(name: "c", arg: 1, scope: !10413, file: !1137, line: 77, type: !107)
!10416 = !DILocation(line: 0, scope: !10413)
!10417 = !DILocation(line: 89, column: 11, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10413, file: !1137, line: 89, column: 6)
!10419 = !DILocation(line: 89, column: 6, scope: !10413)
!10420 = !DILocation(line: 90, column: 3, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10418, file: !1137, line: 89, column: 17)
!10422 = !DILocation(line: 91, column: 2, scope: !10421)
!10423 = !DILocation(line: 92, column: 34, scope: !10413)
!10424 = !DILocation(line: 92, column: 2, scope: !10413)
!10425 = !DILocation(line: 94, column: 2, scope: !10413)
!10426 = distinct !DISubprogram(name: "uart_poll_out", scope: !10427, file: !10427, line: 95, type: !1110, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10428)
!10427 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/zbus/hello_world")
!10428 = !{!10429, !10430}
!10429 = !DILocalVariable(name: "dev", arg: 1, scope: !10426, file: !10427, line: 95, type: !1092)
!10430 = !DILocalVariable(name: "out_char", arg: 2, scope: !10426, file: !10427, line: 95, type: !191)
!10431 = !DILocation(line: 0, scope: !10426)
!10432 = !DILocation(line: 105, column: 2, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10426, file: !10427, line: 105, column: 2)
!10434 = !{i64 2155036374}
!10435 = !DILocation(line: 106, column: 2, scope: !10426)
!10436 = !DILocation(line: 107, column: 1, scope: !10426)
!10437 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1086, file: !1086, line: 574, type: !1110, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10438)
!10438 = !{!10439, !10440, !10441}
!10439 = !DILocalVariable(name: "dev", arg: 1, scope: !10437, file: !1086, line: 574, type: !1092)
!10440 = !DILocalVariable(name: "out_char", arg: 2, scope: !10437, file: !1086, line: 575, type: !191)
!10441 = !DILocalVariable(name: "api", scope: !10437, file: !1086, line: 577, type: !1083)
!10442 = !DILocation(line: 0, scope: !10437)
!10443 = !DILocation(line: 578, column: 40, scope: !10437)
!10444 = !DILocation(line: 580, column: 7, scope: !10437)
!10445 = !DILocation(line: 580, column: 2, scope: !10437)
!10446 = !DILocation(line: 581, column: 1, scope: !10437)
!10447 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !10399, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10448)
!10448 = !{!10449}
!10449 = !DILocalVariable(name: "dev", arg: 1, scope: !10447, file: !451, line: 730, type: !1092)
!10450 = !DILocation(line: 0, scope: !10447)
!10451 = !DILocation(line: 732, column: 9, scope: !10447)
!10452 = !DILocation(line: 732, column: 2, scope: !10447)
!10453 = distinct !DISubprogram(name: "uart_register_input", scope: !1137, file: !1137, line: 560, type: !10454, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10499)
!10454 = !DISubroutineType(types: !10455)
!10455 = !{null, !10456, !10456, !10496}
!10456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10457, size: 32)
!10457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !142, line: 2208, size: 128, elements: !10458)
!10458 = !{!10459}
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10457, file: !142, line: 2209, baseType: !10460, size: 128)
!10460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !142, line: 1709, size: 128, elements: !10461)
!10461 = !{!10462, !10475, !10477}
!10462 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10460, file: !142, line: 1710, baseType: !10463, size: 64)
!10463 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10464, line: 46, baseType: !10465)
!10464 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10464, line: 41, size: 64, elements: !10466)
!10466 = !{!10467, !10474}
!10467 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10465, file: !10464, line: 42, baseType: !10468, size: 32)
!10468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10469, size: 32)
!10469 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10464, line: 39, baseType: !10470)
!10470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10464, line: 35, size: 32, elements: !10471)
!10471 = !{!10472}
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10470, file: !10464, line: 36, baseType: !10473, size: 32)
!10473 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10464, line: 32, baseType: !108)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10465, file: !10464, line: 43, baseType: !10468, size: 32, offset: 32)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10460, file: !142, line: 1711, baseType: !10476, offset: 64)
!10476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10460, file: !142, line: 1712, baseType: !10478, size: 64, offset: 64)
!10478 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !10479)
!10479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !10480)
!10480 = !{!10481}
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10479, file: !146, line: 232, baseType: !10482, size: 64)
!10482 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !10483)
!10483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !10484)
!10484 = !{!10485, !10491}
!10485 = !DIDerivedType(tag: DW_TAG_member, scope: !10483, file: !151, line: 38, baseType: !10486, size: 32)
!10486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10483, file: !151, line: 38, size: 32, elements: !10487)
!10487 = !{!10488, !10490}
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10486, file: !151, line: 39, baseType: !10489, size: 32)
!10489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10483, size: 32)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10486, file: !151, line: 40, baseType: !10489, size: 32)
!10491 = !DIDerivedType(tag: DW_TAG_member, scope: !10483, file: !151, line: 42, baseType: !10492, size: 32, offset: 32)
!10492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10483, file: !151, line: 42, size: 32, elements: !10493)
!10493 = !{!10494, !10495}
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10492, file: !151, line: 43, baseType: !10489, size: 32)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10492, file: !151, line: 44, baseType: !10489, size: 32)
!10496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10497, size: 32)
!10497 = !DISubroutineType(types: !10498)
!10498 = !{!190, !283, !190}
!10499 = !{!10500, !10501, !10502}
!10500 = !DILocalVariable(name: "avail", arg: 1, scope: !10453, file: !1137, line: 560, type: !10456)
!10501 = !DILocalVariable(name: "lines", arg: 2, scope: !10453, file: !1137, line: 560, type: !10456)
!10502 = !DILocalVariable(name: "completion", arg: 3, scope: !10453, file: !1137, line: 561, type: !10496)
!10503 = !DILocation(line: 0, scope: !10453)
!10504 = !DILocation(line: 566, column: 1, scope: !10453)
!10505 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1317, file: !1317, line: 523, type: !1173, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10506)
!10506 = !{!10507, !10508, !10509, !10510, !10511}
!10507 = !DILocalVariable(name: "dev", arg: 1, scope: !10505, file: !1317, line: 523, type: !1175)
!10508 = !DILocalVariable(name: "pin", arg: 2, scope: !10505, file: !1317, line: 524, type: !1190)
!10509 = !DILocalVariable(name: "flags", arg: 3, scope: !10505, file: !1317, line: 524, type: !1191)
!10510 = !DILocalVariable(name: "err", scope: !10505, file: !1317, line: 526, type: !107)
!10511 = !DILocalVariable(name: "pincfg", scope: !10505, file: !1317, line: 527, type: !107)
!10512 = !DILocation(line: 0, scope: !10505)
!10513 = !DILocation(line: 527, column: 2, scope: !10505)
!10514 = !DILocation(line: 532, column: 8, scope: !10505)
!10515 = !DILocation(line: 533, column: 10, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10505, file: !1317, line: 533, column: 6)
!10517 = !DILocation(line: 533, column: 6, scope: !10505)
!10518 = !DILocation(line: 543, column: 13, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10505, file: !1317, line: 543, column: 6)
!10520 = !DILocation(line: 543, column: 28, scope: !10519)
!10521 = !DILocation(line: 543, column: 6, scope: !10505)
!10522 = !DILocation(line: 544, column: 14, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !1317, line: 544, column: 7)
!10524 = distinct !DILexicalBlock(scope: !10519, file: !1317, line: 543, column: 34)
!10525 = !DILocation(line: 544, column: 39, scope: !10523)
!10526 = !DILocation(line: 544, column: 7, scope: !10524)
!10527 = !DILocation(line: 545, column: 38, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10523, file: !1317, line: 544, column: 45)
!10529 = !DILocation(line: 545, column: 4, scope: !10528)
!10530 = !DILocation(line: 546, column: 3, scope: !10528)
!10531 = !DILocation(line: 546, column: 21, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10523, file: !1317, line: 546, column: 14)
!10533 = !DILocation(line: 546, column: 45, scope: !10532)
!10534 = !DILocation(line: 546, column: 14, scope: !10523)
!10535 = !DILocation(line: 547, column: 40, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10532, file: !1317, line: 546, column: 51)
!10537 = !DILocation(line: 547, column: 4, scope: !10536)
!10538 = !DILocation(line: 548, column: 3, scope: !10536)
!10539 = !DILocation(line: 551, column: 32, scope: !10505)
!10540 = !DILocation(line: 551, column: 37, scope: !10505)
!10541 = !DILocation(line: 551, column: 2, scope: !10505)
!10542 = !DILocation(line: 554, column: 6, scope: !10505)
!10543 = !DILocation(line: 562, column: 1, scope: !10505)
!10544 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1317, file: !1317, line: 410, type: !10545, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10547)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!107, !1175, !1002}
!10547 = !{!10548, !10549, !10550, !10552}
!10548 = !DILocalVariable(name: "dev", arg: 1, scope: !10544, file: !1317, line: 410, type: !1175)
!10549 = !DILocalVariable(name: "value", arg: 2, scope: !10544, file: !1317, line: 410, type: !1002)
!10550 = !DILocalVariable(name: "cfg", scope: !10544, file: !1317, line: 412, type: !10551)
!10551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!10552 = !DILocalVariable(name: "gpio", scope: !10544, file: !1317, line: 413, type: !1248)
!10553 = !DILocation(line: 0, scope: !10544)
!10554 = !DILocation(line: 412, column: 45, scope: !10544)
!10555 = !DILocation(line: 413, column: 44, scope: !10544)
!10556 = !DILocation(line: 415, column: 11, scope: !10544)
!10557 = !DILocation(line: 415, column: 9, scope: !10544)
!10558 = !DILocation(line: 417, column: 2, scope: !10544)
!10559 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1317, file: !1317, line: 420, type: !1200, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10560)
!10560 = !{!10561, !10562, !10563, !10564, !10565, !10566}
!10561 = !DILocalVariable(name: "dev", arg: 1, scope: !10559, file: !1317, line: 420, type: !1175)
!10562 = !DILocalVariable(name: "mask", arg: 2, scope: !10559, file: !1317, line: 421, type: !1202)
!10563 = !DILocalVariable(name: "value", arg: 3, scope: !10559, file: !1317, line: 422, type: !1197)
!10564 = !DILocalVariable(name: "cfg", scope: !10559, file: !1317, line: 424, type: !10551)
!10565 = !DILocalVariable(name: "gpio", scope: !10559, file: !1317, line: 425, type: !1248)
!10566 = !DILocalVariable(name: "port_value", scope: !10559, file: !1317, line: 426, type: !108)
!10567 = !DILocation(line: 0, scope: !10559)
!10568 = !DILocation(line: 424, column: 45, scope: !10559)
!10569 = !DILocation(line: 425, column: 44, scope: !10559)
!10570 = !DILocation(line: 430, column: 15, scope: !10559)
!10571 = !DILocation(line: 431, column: 46, scope: !10559)
!10572 = !DILocation(line: 431, column: 44, scope: !10559)
!10573 = !DILocation(line: 431, column: 61, scope: !10559)
!10574 = !DILocation(line: 431, column: 53, scope: !10559)
!10575 = !DILocation(line: 431, column: 2, scope: !10559)
!10576 = !DILocation(line: 435, column: 2, scope: !10559)
!10577 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1317, file: !1317, line: 438, type: !1205, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10578)
!10578 = !{!10579, !10580, !10581, !10582}
!10579 = !DILocalVariable(name: "dev", arg: 1, scope: !10577, file: !1317, line: 438, type: !1175)
!10580 = !DILocalVariable(name: "pins", arg: 2, scope: !10577, file: !1317, line: 439, type: !1202)
!10581 = !DILocalVariable(name: "cfg", scope: !10577, file: !1317, line: 441, type: !10551)
!10582 = !DILocalVariable(name: "gpio", scope: !10577, file: !1317, line: 442, type: !1248)
!10583 = !DILocation(line: 0, scope: !10577)
!10584 = !DILocation(line: 441, column: 45, scope: !10577)
!10585 = !DILocation(line: 442, column: 44, scope: !10577)
!10586 = !DILocation(line: 448, column: 2, scope: !10577)
!10587 = !DILocation(line: 450, column: 2, scope: !10577)
!10588 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1317, file: !1317, line: 453, type: !1205, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10589)
!10589 = !{!10590, !10591, !10592, !10593}
!10590 = !DILocalVariable(name: "dev", arg: 1, scope: !10588, file: !1317, line: 453, type: !1175)
!10591 = !DILocalVariable(name: "pins", arg: 2, scope: !10588, file: !1317, line: 454, type: !1202)
!10592 = !DILocalVariable(name: "cfg", scope: !10588, file: !1317, line: 456, type: !10551)
!10593 = !DILocalVariable(name: "gpio", scope: !10588, file: !1317, line: 457, type: !1248)
!10594 = !DILocation(line: 0, scope: !10588)
!10595 = !DILocation(line: 456, column: 45, scope: !10588)
!10596 = !DILocation(line: 457, column: 44, scope: !10588)
!10597 = !DILocation(line: 467, column: 2, scope: !10588)
!10598 = !DILocation(line: 470, column: 2, scope: !10588)
!10599 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1317, file: !1317, line: 473, type: !1205, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10600)
!10600 = !{!10601, !10602, !10603, !10604}
!10601 = !DILocalVariable(name: "dev", arg: 1, scope: !10599, file: !1317, line: 473, type: !1175)
!10602 = !DILocalVariable(name: "pins", arg: 2, scope: !10599, file: !1317, line: 474, type: !1202)
!10603 = !DILocalVariable(name: "cfg", scope: !10599, file: !1317, line: 476, type: !10551)
!10604 = !DILocalVariable(name: "gpio", scope: !10599, file: !1317, line: 477, type: !1248)
!10605 = !DILocation(line: 0, scope: !10599)
!10606 = !DILocation(line: 476, column: 45, scope: !10599)
!10607 = !DILocation(line: 477, column: 44, scope: !10599)
!10608 = !DILocation(line: 484, column: 2, scope: !10599)
!10609 = !DILocation(line: 487, column: 2, scope: !10599)
!10610 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1317, file: !1317, line: 594, type: !1211, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10611)
!10611 = !{!10612, !10613, !10614, !10615, !10616, !10617, !10619, !10620, !10621}
!10612 = !DILocalVariable(name: "dev", arg: 1, scope: !10610, file: !1317, line: 594, type: !1175)
!10613 = !DILocalVariable(name: "pin", arg: 2, scope: !10610, file: !1317, line: 595, type: !1190)
!10614 = !DILocalVariable(name: "mode", arg: 3, scope: !10610, file: !1317, line: 596, type: !1149)
!10615 = !DILocalVariable(name: "trig", arg: 4, scope: !10610, file: !1317, line: 597, type: !1155)
!10616 = !DILocalVariable(name: "cfg", scope: !10610, file: !1317, line: 599, type: !10551)
!10617 = !DILocalVariable(name: "data", scope: !10610, file: !1317, line: 600, type: !10618)
!10618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!10619 = !DILocalVariable(name: "edge", scope: !10610, file: !1317, line: 601, type: !107)
!10620 = !DILocalVariable(name: "err", scope: !10610, file: !1317, line: 602, type: !107)
!10621 = !DILabel(scope: !10610, name: "exit", file: !1317, line: 643)
!10622 = !DILocation(line: 0, scope: !10610)
!10623 = !DILocation(line: 599, column: 45, scope: !10610)
!10624 = !DILocation(line: 604, column: 6, scope: !10610)
!10625 = !DILocation(line: 605, column: 34, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !1317, line: 605, column: 7)
!10627 = distinct !DILexicalBlock(scope: !10628, file: !1317, line: 604, column: 38)
!10628 = distinct !DILexicalBlock(scope: !10610, file: !1317, line: 604, column: 6)
!10629 = !DILocation(line: 605, column: 7, scope: !10626)
!10630 = !DILocation(line: 605, column: 47, scope: !10626)
!10631 = !DILocation(line: 605, column: 39, scope: !10626)
!10632 = !DILocation(line: 605, column: 7, scope: !10627)
!10633 = !DILocation(line: 606, column: 4, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10626, file: !1317, line: 605, column: 53)
!10635 = !DILocation(line: 607, column: 4, scope: !10634)
!10636 = !DILocation(line: 608, column: 4, scope: !10634)
!10637 = !DILocation(line: 609, column: 3, scope: !10634)
!10638 = !DILocation(line: 600, column: 38, scope: !10610)
!10639 = !DILocation(line: 620, column: 30, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10610, file: !1317, line: 620, column: 6)
!10641 = !DILocation(line: 620, column: 6, scope: !10640)
!10642 = !DILocation(line: 620, column: 57, scope: !10640)
!10643 = !DILocation(line: 620, column: 6, scope: !10610)
!10644 = !DILocation(line: 625, column: 29, scope: !10610)
!10645 = !DILocation(line: 625, column: 2, scope: !10610)
!10646 = !DILocation(line: 627, column: 2, scope: !10610)
!10647 = !DILocation(line: 630, column: 3, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10610, file: !1317, line: 627, column: 16)
!10649 = !DILocation(line: 633, column: 3, scope: !10648)
!10650 = !DILocation(line: 636, column: 3, scope: !10648)
!10651 = !DILocation(line: 639, column: 2, scope: !10610)
!10652 = !DILocation(line: 641, column: 2, scope: !10610)
!10653 = !DILocation(line: 643, column: 1, scope: !10610)
!10654 = !DILocation(line: 644, column: 2, scope: !10610)
!10655 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1317, file: !1317, line: 647, type: !1215, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10656)
!10656 = !{!10657, !10658, !10659, !10660}
!10657 = !DILocalVariable(name: "dev", arg: 1, scope: !10655, file: !1317, line: 647, type: !1175)
!10658 = !DILocalVariable(name: "callback", arg: 2, scope: !10655, file: !1317, line: 648, type: !1217)
!10659 = !DILocalVariable(name: "set", arg: 3, scope: !10655, file: !1317, line: 649, type: !136)
!10660 = !DILocalVariable(name: "data", scope: !10655, file: !1317, line: 651, type: !10618)
!10661 = !DILocation(line: 0, scope: !10655)
!10662 = !DILocation(line: 651, column: 38, scope: !10655)
!10663 = !DILocation(line: 653, column: 37, scope: !10655)
!10664 = !DILocation(line: 653, column: 9, scope: !10655)
!10665 = !DILocation(line: 653, column: 2, scope: !10655)
!10666 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10667, file: !10667, line: 38, type: !10668, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10671)
!10667 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10668 = !DISubroutineType(types: !10669)
!10669 = !{!107, !10670, !1217, !136}
!10670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!10671 = !{!10672, !10673, !10674}
!10672 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10666, file: !10667, line: 38, type: !10670)
!10673 = !DILocalVariable(name: "callback", arg: 2, scope: !10666, file: !10667, line: 39, type: !1217)
!10674 = !DILocalVariable(name: "set", arg: 3, scope: !10666, file: !10667, line: 40, type: !136)
!10675 = !DILocation(line: 0, scope: !10666)
!10676 = !DILocation(line: 45, column: 7, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10666, file: !10667, line: 45, column: 6)
!10678 = !DILocation(line: 45, column: 6, scope: !10666)
!10679 = !DILocation(line: 46, column: 56, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !10667, line: 46, column: 7)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !10667, line: 45, column: 38)
!10682 = !DILocation(line: 46, column: 8, scope: !10680)
!10683 = !DILocation(line: 46, column: 7, scope: !10681)
!10684 = !DILocation(line: 51, column: 13, scope: !10677)
!10685 = !DILocation(line: 56, column: 43, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !10667, line: 55, column: 11)
!10687 = distinct !DILexicalBlock(scope: !10666, file: !10667, line: 55, column: 6)
!10688 = !DILocation(line: 56, column: 3, scope: !10686)
!10689 = !DILocation(line: 57, column: 2, scope: !10686)
!10690 = !DILocation(line: 60, column: 1, scope: !10666)
!10691 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1222, file: !1222, line: 261, type: !10692, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10694)
!10692 = !DISubroutineType(types: !10693)
!10693 = !{!136, !10670}
!10694 = !{!10695}
!10695 = !DILocalVariable(name: "list", arg: 1, scope: !10691, file: !1222, line: 261, type: !10670)
!10696 = !DILocation(line: 0, scope: !10691)
!10697 = !DILocation(line: 261, column: 1, scope: !10691)
!10698 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1222, file: !1222, line: 417, type: !10699, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10701)
!10699 = !DISubroutineType(types: !10700)
!10700 = !{!136, !10670, !1393}
!10701 = !{!10702, !10703, !10704, !10705}
!10702 = !DILocalVariable(name: "list", arg: 1, scope: !10698, file: !1222, line: 417, type: !10670)
!10703 = !DILocalVariable(name: "node", arg: 2, scope: !10698, file: !1222, line: 417, type: !1393)
!10704 = !DILocalVariable(name: "prev", scope: !10698, file: !1222, line: 417, type: !1393)
!10705 = !DILocalVariable(name: "test", scope: !10698, file: !1222, line: 417, type: !1393)
!10706 = !DILocation(line: 0, scope: !10698)
!10707 = !DILocation(line: 417, column: 1, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10698, file: !1222, line: 417, column: 1)
!10709 = !DILocation(line: 417, column: 1, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10708, file: !1222, line: 417, column: 1)
!10711 = !DILocation(line: 417, column: 1, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !1222, line: 417, column: 1)
!10713 = distinct !DILexicalBlock(scope: !10710, file: !1222, line: 417, column: 1)
!10714 = !DILocation(line: 417, column: 1, scope: !10713)
!10715 = distinct !{!10715, !10707, !10707}
!10716 = !DILocation(line: 417, column: 1, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10712, file: !1222, line: 417, column: 1)
!10718 = !DILocation(line: 417, column: 1, scope: !10698)
!10719 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1222, file: !1222, line: 298, type: !10720, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10722)
!10720 = !DISubroutineType(types: !10721)
!10721 = !{null, !10670, !1393}
!10722 = !{!10723, !10724}
!10723 = !DILocalVariable(name: "list", arg: 1, scope: !10719, file: !1222, line: 298, type: !10670)
!10724 = !DILocalVariable(name: "node", arg: 2, scope: !10719, file: !1222, line: 298, type: !1393)
!10725 = !DILocation(line: 0, scope: !10719)
!10726 = !DILocation(line: 298, column: 1, scope: !10719)
!10727 = !DILocation(line: 298, column: 1, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10719, file: !1222, line: 298, column: 1)
!10729 = !DILocation(line: 298, column: 1, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10728, file: !1222, line: 298, column: 1)
!10731 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1222, file: !1222, line: 231, type: !10732, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10734)
!10732 = !DISubroutineType(types: !10733)
!10733 = !{!1393, !10670}
!10734 = !{!10735}
!10735 = !DILocalVariable(name: "list", arg: 1, scope: !10731, file: !1222, line: 231, type: !10670)
!10736 = !DILocation(line: 0, scope: !10731)
!10737 = !DILocation(line: 233, column: 15, scope: !10731)
!10738 = !DILocation(line: 233, column: 2, scope: !10731)
!10739 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1222, file: !1222, line: 209, type: !10740, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10742)
!10740 = !DISubroutineType(types: !10741)
!10741 = !{null, !1393, !1393}
!10742 = !{!10743, !10744}
!10743 = !DILocalVariable(name: "parent", arg: 1, scope: !10739, file: !1222, line: 209, type: !1393)
!10744 = !DILocalVariable(name: "child", arg: 2, scope: !10739, file: !1222, line: 209, type: !1393)
!10745 = !DILocation(line: 0, scope: !10739)
!10746 = !DILocation(line: 211, column: 10, scope: !10739)
!10747 = !DILocation(line: 211, column: 15, scope: !10739)
!10748 = !DILocation(line: 212, column: 1, scope: !10739)
!10749 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1222, file: !1222, line: 214, type: !10720, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10750)
!10750 = !{!10751, !10752}
!10751 = !DILocalVariable(name: "list", arg: 1, scope: !10749, file: !1222, line: 214, type: !10670)
!10752 = !DILocalVariable(name: "node", arg: 2, scope: !10749, file: !1222, line: 214, type: !1393)
!10753 = !DILocation(line: 0, scope: !10749)
!10754 = !DILocation(line: 216, column: 8, scope: !10749)
!10755 = !DILocation(line: 216, column: 13, scope: !10749)
!10756 = !DILocation(line: 217, column: 1, scope: !10749)
!10757 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1222, file: !1222, line: 243, type: !10732, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10758)
!10758 = !{!10759}
!10759 = !DILocalVariable(name: "list", arg: 1, scope: !10757, file: !1222, line: 243, type: !10670)
!10760 = !DILocation(line: 0, scope: !10757)
!10761 = !DILocation(line: 245, column: 15, scope: !10757)
!10762 = !DILocation(line: 245, column: 2, scope: !10757)
!10763 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1222, file: !1222, line: 219, type: !10720, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10764)
!10764 = !{!10765, !10766}
!10765 = !DILocalVariable(name: "list", arg: 1, scope: !10763, file: !1222, line: 219, type: !10670)
!10766 = !DILocalVariable(name: "node", arg: 2, scope: !10763, file: !1222, line: 219, type: !1393)
!10767 = !DILocation(line: 0, scope: !10763)
!10768 = !DILocation(line: 221, column: 8, scope: !10763)
!10769 = !DILocation(line: 221, column: 13, scope: !10763)
!10770 = !DILocation(line: 222, column: 1, scope: !10763)
!10771 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1222, file: !1222, line: 401, type: !10772, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10774)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{null, !10670, !1393, !1393}
!10774 = !{!10775, !10776, !10777}
!10775 = !DILocalVariable(name: "list", arg: 1, scope: !10771, file: !1222, line: 401, type: !10670)
!10776 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10771, file: !1222, line: 401, type: !1393)
!10777 = !DILocalVariable(name: "node", arg: 3, scope: !10771, file: !1222, line: 401, type: !1393)
!10778 = !DILocation(line: 0, scope: !10771)
!10779 = !DILocation(line: 401, column: 1, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10771, file: !1222, line: 401, column: 1)
!10781 = !DILocation(line: 0, scope: !10780)
!10782 = !DILocation(line: 401, column: 1, scope: !10771)
!10783 = !DILocation(line: 401, column: 1, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10780, file: !1222, line: 401, column: 1)
!10785 = !DILocation(line: 401, column: 1, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10784, file: !1222, line: 401, column: 1)
!10787 = !DILocation(line: 401, column: 1, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10786, file: !1222, line: 401, column: 1)
!10789 = !DILocation(line: 401, column: 1, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10780, file: !1222, line: 401, column: 1)
!10791 = !DILocation(line: 401, column: 1, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10790, file: !1222, line: 401, column: 1)
!10793 = !DILocation(line: 401, column: 1, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10792, file: !1222, line: 401, column: 1)
!10795 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1222, file: !1222, line: 285, type: !10796, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10798)
!10796 = !DISubroutineType(types: !10797)
!10797 = !{!1393, !1393}
!10798 = !{!10799}
!10799 = !DILocalVariable(name: "node", arg: 1, scope: !10795, file: !1222, line: 285, type: !1393)
!10800 = !DILocation(line: 0, scope: !10795)
!10801 = !DILocation(line: 285, column: 1, scope: !10795)
!10802 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1222, file: !1222, line: 274, type: !10796, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10803)
!10803 = !{!10804}
!10804 = !DILocalVariable(name: "node", arg: 1, scope: !10802, file: !1222, line: 274, type: !1393)
!10805 = !DILocation(line: 0, scope: !10802)
!10806 = !DILocation(line: 274, column: 1, scope: !10802)
!10807 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1222, file: !1222, line: 204, type: !10796, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10808)
!10808 = !{!10809}
!10809 = !DILocalVariable(name: "node", arg: 1, scope: !10807, file: !1222, line: 204, type: !1393)
!10810 = !DILocation(line: 0, scope: !10807)
!10811 = !DILocation(line: 206, column: 15, scope: !10807)
!10812 = !DILocation(line: 206, column: 2, scope: !10807)
!10813 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1317, file: !1317, line: 342, type: !418, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10814)
!10814 = !{!10815, !10816, !10817}
!10815 = !DILocalVariable(name: "pin", arg: 1, scope: !10813, file: !1317, line: 342, type: !107)
!10816 = !DILocalVariable(name: "line", scope: !10813, file: !1317, line: 344, type: !108)
!10817 = !DILocalVariable(name: "port", scope: !10813, file: !1317, line: 345, type: !107)
!10818 = !DILocation(line: 0, scope: !10813)
!10819 = !DILocation(line: 344, column: 18, scope: !10813)
!10820 = !{i32 983040, i32 0}
!10821 = !DILocation(line: 356, column: 9, scope: !10813)
!10822 = !DILocation(line: 370, column: 2, scope: !10813)
!10823 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1317, file: !1317, line: 37, type: !869, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10824)
!10824 = !{!10825, !10826, !10827}
!10825 = !DILocalVariable(name: "line", arg: 1, scope: !10823, file: !1317, line: 37, type: !107)
!10826 = !DILocalVariable(name: "arg", arg: 2, scope: !10823, file: !1317, line: 37, type: !106)
!10827 = !DILocalVariable(name: "data", scope: !10823, file: !1317, line: 39, type: !10618)
!10828 = !DILocation(line: 0, scope: !10823)
!10829 = !DILocation(line: 41, column: 29, scope: !10823)
!10830 = !DILocation(line: 41, column: 39, scope: !10823)
!10831 = !DILocation(line: 41, column: 44, scope: !10823)
!10832 = !DILocation(line: 41, column: 2, scope: !10823)
!10833 = !DILocation(line: 42, column: 1, scope: !10823)
!10834 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1317, file: !1317, line: 376, type: !10835, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10837)
!10835 = !DISubroutineType(types: !10836)
!10836 = !{!107, !107, !107}
!10837 = !{!10838, !10839, !10840, !10842, !10843}
!10838 = !DILocalVariable(name: "port", arg: 1, scope: !10834, file: !1317, line: 376, type: !107)
!10839 = !DILocalVariable(name: "pin", arg: 2, scope: !10834, file: !1317, line: 376, type: !107)
!10840 = !DILocalVariable(name: "clk", scope: !10834, file: !1317, line: 386, type: !10841)
!10841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1175)
!10842 = !DILocalVariable(name: "pclken", scope: !10834, file: !1317, line: 387, type: !1436)
!10843 = !DILocalVariable(name: "ret", scope: !10834, file: !1317, line: 396, type: !107)
!10844 = !DILocation(line: 0, scope: !10834)
!10845 = !DILocation(line: 387, column: 2, scope: !10834)
!10846 = !DILocation(line: 387, column: 22, scope: !10834)
!10847 = !DILocation(line: 399, column: 8, scope: !10834)
!10848 = !DILocation(line: 400, column: 10, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10834, file: !1317, line: 400, column: 6)
!10850 = !DILocation(line: 400, column: 6, scope: !10834)
!10851 = !DILocation(line: 405, column: 2, scope: !10834)
!10852 = !DILocation(line: 407, column: 2, scope: !10834)
!10853 = !DILocation(line: 408, column: 1, scope: !10834)
!10854 = distinct !DISubprogram(name: "clock_control_on", scope: !953, file: !953, line: 123, type: !1282, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10855)
!10855 = !{!10856, !10857, !10858}
!10856 = !DILocalVariable(name: "dev", arg: 1, scope: !10854, file: !953, line: 123, type: !1175)
!10857 = !DILocalVariable(name: "sys", arg: 2, scope: !10854, file: !953, line: 124, type: !1046)
!10858 = !DILocalVariable(name: "api", scope: !10854, file: !953, line: 126, type: !1275)
!10859 = !DILocation(line: 0, scope: !10854)
!10860 = !DILocation(line: 127, column: 49, scope: !10854)
!10861 = !DILocation(line: 129, column: 14, scope: !10854)
!10862 = !DILocation(line: 129, column: 9, scope: !10854)
!10863 = !DILocation(line: 129, column: 2, scope: !10854)
!10864 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1317, file: !1317, line: 311, type: !9984, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10865)
!10865 = !{!10866, !10867, !10868}
!10866 = !DILocalVariable(name: "port", arg: 1, scope: !10864, file: !1317, line: 311, type: !107)
!10867 = !DILocalVariable(name: "pin", arg: 2, scope: !10864, file: !1317, line: 311, type: !107)
!10868 = !DILocalVariable(name: "line", scope: !10864, file: !1317, line: 313, type: !108)
!10869 = !DILocation(line: 0, scope: !10864)
!10870 = !DILocation(line: 313, column: 18, scope: !10864)
!10871 = !DILocation(line: 337, column: 2, scope: !10864)
!10872 = !DILocation(line: 340, column: 1, scope: !10864)
!10873 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1317, file: !1317, line: 295, type: !10874, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10876)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{!108, !107}
!10876 = !{!10877}
!10877 = !DILocalVariable(name: "pin", arg: 1, scope: !10873, file: !1317, line: 295, type: !107)
!10878 = !DILocation(line: 0, scope: !10873)
!10879 = !DILocation(line: 307, column: 46, scope: !10873)
!10880 = !DILocation(line: 307, column: 27, scope: !10873)
!10881 = !DILocation(line: 307, column: 32, scope: !10873)
!10882 = !DILocation(line: 307, column: 14, scope: !10873)
!10883 = !DILocation(line: 307, column: 39, scope: !10873)
!10884 = !DILocation(line: 307, column: 2, scope: !10873)
!10885 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7075, file: !7075, line: 671, type: !10886, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10888)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{null, !108, !108}
!10888 = !{!10889, !10890}
!10889 = !DILocalVariable(name: "Port", arg: 1, scope: !10885, file: !7075, line: 671, type: !108)
!10890 = !DILocalVariable(name: "Line", arg: 2, scope: !10885, file: !7075, line: 671, type: !108)
!10891 = !DILocation(line: 0, scope: !10885)
!10892 = !DILocation(line: 673, column: 3, scope: !10885)
!10893 = !DILocalVariable(name: "value", arg: 1, scope: !10894, file: !7375, line: 373, type: !108)
!10894 = distinct !DISubprogram(name: "__RBIT", scope: !7375, file: !7375, line: 373, type: !8620, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10895)
!10895 = !{!10893, !10896}
!10896 = !DILocalVariable(name: "result", scope: !10894, file: !7375, line: 375, type: !108)
!10897 = !DILocation(line: 0, scope: !10894, inlinedAt: !10898)
!10898 = distinct !DILocation(line: 673, column: 3, scope: !10885)
!10899 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !10898)
!10900 = !{i64 3501307}
!10901 = !DILocalVariable(name: "value", arg: 1, scope: !10902, file: !7375, line: 403, type: !108)
!10902 = distinct !DISubprogram(name: "__CLZ", scope: !7375, file: !7375, line: 403, type: !10903, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10905)
!10903 = !DISubroutineType(types: !10904)
!10904 = !{!190, !108}
!10905 = !{!10901}
!10906 = !DILocation(line: 0, scope: !10902, inlinedAt: !10907)
!10907 = distinct !DILocation(line: 673, column: 3, scope: !10885)
!10908 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !10907)
!10909 = !DILocation(line: 674, column: 1, scope: !10885)
!10910 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10667, file: !10667, line: 69, type: !10911, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10913)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{null, !10670, !1175, !108}
!10913 = !{!10914, !10915, !10916, !10917, !10918}
!10914 = !DILocalVariable(name: "list", arg: 1, scope: !10910, file: !10667, line: 69, type: !10670)
!10915 = !DILocalVariable(name: "port", arg: 2, scope: !10910, file: !10667, line: 70, type: !1175)
!10916 = !DILocalVariable(name: "pins", arg: 3, scope: !10910, file: !10667, line: 71, type: !108)
!10917 = !DILocalVariable(name: "cb", scope: !10910, file: !10667, line: 73, type: !1217)
!10918 = !DILocalVariable(name: "tmp", scope: !10910, file: !10667, line: 73, type: !1217)
!10919 = !DILocation(line: 0, scope: !10910)
!10920 = !DILocation(line: 75, column: 2, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10910, file: !10667, line: 75, column: 2)
!10922 = !DILocation(line: 0, scope: !10921)
!10923 = !DILocation(line: 76, column: 11, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !10667, line: 76, column: 7)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !10667, line: 75, column: 57)
!10926 = distinct !DILexicalBlock(scope: !10921, file: !10667, line: 75, column: 2)
!10927 = !DILocation(line: 76, column: 20, scope: !10924)
!10928 = !DILocation(line: 76, column: 7, scope: !10925)
!10929 = !DILocation(line: 78, column: 8, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10924, file: !10667, line: 76, column: 28)
!10931 = !DILocation(line: 78, column: 4, scope: !10930)
!10932 = !DILocation(line: 79, column: 3, scope: !10930)
!10933 = !DILocation(line: 75, column: 2, scope: !10926)
!10934 = !DILocation(line: 81, column: 1, scope: !10910)
!10935 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7075, file: !7075, line: 710, type: !8620, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10936)
!10936 = !{!10937}
!10937 = !DILocalVariable(name: "Line", arg: 1, scope: !10935, file: !7075, line: 710, type: !108)
!10938 = !DILocation(line: 0, scope: !10935)
!10939 = !DILocation(line: 712, column: 21, scope: !10935)
!10940 = !DILocation(line: 0, scope: !10894, inlinedAt: !10941)
!10941 = distinct !DILocation(line: 712, column: 76, scope: !10935)
!10942 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !10941)
!10943 = !DILocation(line: 0, scope: !10902, inlinedAt: !10944)
!10944 = distinct !DILocation(line: 712, column: 76, scope: !10935)
!10945 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !10944)
!10946 = !DILocation(line: 712, column: 73, scope: !10935)
!10947 = !DILocation(line: 712, column: 3, scope: !10935)
!10948 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10949, file: !10949, line: 910, type: !10950, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10952)
!10949 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10950 = !DISubroutineType(types: !10951)
!10951 = !{null, !1248, !108}
!10952 = !{!10953, !10954}
!10953 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10948, file: !10949, line: 910, type: !1248)
!10954 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10948, file: !10949, line: 910, type: !108)
!10955 = !DILocation(line: 0, scope: !10948)
!10956 = !DILocation(line: 912, column: 3, scope: !10948)
!10957 = !DILocation(line: 913, column: 1, scope: !10948)
!10958 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10949, file: !10949, line: 823, type: !10959, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10961)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{!108, !1248}
!10961 = !{!10962}
!10962 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10958, file: !10949, line: 823, type: !1248)
!10963 = !DILocation(line: 0, scope: !10958)
!10964 = !DILocation(line: 825, column: 21, scope: !10958)
!10965 = !DILocation(line: 825, column: 3, scope: !10958)
!10966 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10949, file: !10949, line: 812, type: !10950, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10967)
!10967 = !{!10968, !10969}
!10968 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10966, file: !10949, line: 812, type: !1248)
!10969 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10966, file: !10949, line: 812, type: !108)
!10970 = !DILocation(line: 0, scope: !10966)
!10971 = !DILocation(line: 814, column: 3, scope: !10966)
!10972 = !DILocation(line: 815, column: 1, scope: !10966)
!10973 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10949, file: !10949, line: 771, type: !10959, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10974)
!10974 = !{!10975}
!10975 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10973, file: !10949, line: 771, type: !1248)
!10976 = !DILocation(line: 0, scope: !10973)
!10977 = !DILocation(line: 773, column: 21, scope: !10973)
!10978 = !DILocation(line: 773, column: 3, scope: !10973)
!10979 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1317, file: !1317, line: 47, type: !10980, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10982)
!10980 = !DISubroutineType(types: !10981)
!10981 = !{!107, !1191, !396}
!10982 = !{!10983, !10984}
!10983 = !DILocalVariable(name: "flags", arg: 1, scope: !10979, file: !1317, line: 47, type: !1191)
!10984 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10979, file: !1317, line: 47, type: !396)
!10985 = !DILocation(line: 0, scope: !10979)
!10986 = !DILocation(line: 50, column: 13, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10979, file: !1317, line: 50, column: 6)
!10988 = !DILocation(line: 50, column: 28, scope: !10987)
!10989 = !DILocation(line: 50, column: 6, scope: !10979)
!10990 = !DILocation(line: 53, column: 11, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10987, file: !1317, line: 50, column: 34)
!10992 = !DILocation(line: 55, column: 14, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10991, file: !1317, line: 55, column: 7)
!10994 = !DILocation(line: 55, column: 35, scope: !10993)
!10995 = !DILocation(line: 55, column: 7, scope: !10991)
!10996 = !DILocation(line: 56, column: 14, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !1317, line: 56, column: 8)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !1317, line: 55, column: 41)
!10999 = !DILocation(line: 56, column: 8, scope: !10998)
!11000 = !DILocation(line: 0, scope: !10993)
!11001 = !DILocation(line: 66, column: 14, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10991, file: !1317, line: 66, column: 7)
!11003 = !DILocation(line: 66, column: 30, scope: !11002)
!11004 = !DILocation(line: 66, column: 7, scope: !10991)
!11005 = !DILocation(line: 67, column: 12, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !1317, line: 66, column: 36)
!11007 = !DILocation(line: 68, column: 3, scope: !11006)
!11008 = !DILocation(line: 68, column: 21, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11002, file: !1317, line: 68, column: 14)
!11010 = !DILocation(line: 68, column: 39, scope: !11009)
!11011 = !DILocation(line: 68, column: 14, scope: !11002)
!11012 = !DILocation(line: 69, column: 12, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11009, file: !1317, line: 68, column: 45)
!11014 = !DILocation(line: 70, column: 3, scope: !11013)
!11015 = !DILocation(line: 72, column: 21, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10987, file: !1317, line: 72, column: 14)
!11017 = !DILocation(line: 72, column: 35, scope: !11016)
!11018 = !DILocation(line: 72, column: 14, scope: !10987)
!11019 = !DILocation(line: 77, column: 14, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !1317, line: 77, column: 7)
!11021 = distinct !DILexicalBlock(scope: !11016, file: !1317, line: 72, column: 41)
!11022 = !DILocation(line: 77, column: 30, scope: !11020)
!11023 = !DILocation(line: 77, column: 7, scope: !11021)
!11024 = !DILocation(line: 0, scope: !10987)
!11025 = !DILocation(line: 90, column: 1, scope: !10979)
!11026 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1317, file: !1317, line: 157, type: !11027, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11029)
!11027 = !DISubroutineType(types: !11028)
!11028 = !{null, !1175, !107, !107, !107}
!11029 = !{!11030, !11031, !11032, !11033, !11034, !11035, !11036, !11037, !11038, !11039, !11040}
!11030 = !DILocalVariable(name: "dev", arg: 1, scope: !11026, file: !1317, line: 157, type: !1175)
!11031 = !DILocalVariable(name: "pin", arg: 2, scope: !11026, file: !1317, line: 157, type: !107)
!11032 = !DILocalVariable(name: "conf", arg: 3, scope: !11026, file: !1317, line: 158, type: !107)
!11033 = !DILocalVariable(name: "func", arg: 4, scope: !11026, file: !1317, line: 158, type: !107)
!11034 = !DILocalVariable(name: "cfg", scope: !11026, file: !1317, line: 160, type: !10551)
!11035 = !DILocalVariable(name: "gpio", scope: !11026, file: !1317, line: 161, type: !1248)
!11036 = !DILocalVariable(name: "pin_ll", scope: !11026, file: !1317, line: 163, type: !107)
!11037 = !DILocalVariable(name: "mode", scope: !11026, file: !1317, line: 227, type: !32)
!11038 = !DILocalVariable(name: "otype", scope: !11026, file: !1317, line: 227, type: !32)
!11039 = !DILocalVariable(name: "ospeed", scope: !11026, file: !1317, line: 227, type: !32)
!11040 = !DILocalVariable(name: "pupd", scope: !11026, file: !1317, line: 227, type: !32)
!11041 = !DILocation(line: 0, scope: !11026)
!11042 = !DILocation(line: 160, column: 45, scope: !11026)
!11043 = !DILocation(line: 161, column: 44, scope: !11026)
!11044 = !DILocation(line: 163, column: 15, scope: !11026)
!11045 = !DILocation(line: 229, column: 14, scope: !11026)
!11046 = !DILocation(line: 246, column: 47, scope: !11026)
!11047 = !DILocation(line: 246, column: 2, scope: !11026)
!11048 = !DILocation(line: 248, column: 43, scope: !11026)
!11049 = !DILocation(line: 248, column: 2, scope: !11026)
!11050 = !DILocation(line: 250, column: 40, scope: !11026)
!11051 = !DILocation(line: 250, column: 2, scope: !11026)
!11052 = !DILocation(line: 252, column: 11, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11026, file: !1317, line: 252, column: 6)
!11054 = !DILocation(line: 252, column: 6, scope: !11026)
!11055 = !DILocation(line: 253, column: 11, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1317, line: 253, column: 7)
!11057 = distinct !DILexicalBlock(scope: !11053, file: !1317, line: 252, column: 36)
!11058 = !DILocation(line: 253, column: 7, scope: !11057)
!11059 = !DILocation(line: 254, column: 4, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11056, file: !1317, line: 253, column: 16)
!11061 = !DILocation(line: 255, column: 3, scope: !11060)
!11062 = !DILocation(line: 256, column: 4, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11056, file: !1317, line: 255, column: 10)
!11064 = !DILocation(line: 260, column: 40, scope: !11026)
!11065 = !DILocation(line: 260, column: 2, scope: !11026)
!11066 = !DILocation(line: 265, column: 1, scope: !11026)
!11067 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1317, file: !1317, line: 137, type: !10874, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11068)
!11068 = !{!11069, !11070}
!11069 = !DILocalVariable(name: "pin", arg: 1, scope: !11067, file: !1317, line: 137, type: !107)
!11070 = !DILocalVariable(name: "pinval", scope: !11067, file: !1317, line: 139, type: !108)
!11071 = !DILocation(line: 0, scope: !11067)
!11072 = !DILocation(line: 149, column: 13, scope: !11067)
!11073 = !DILocation(line: 151, column: 2, scope: !11067)
!11074 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10949, file: !10949, line: 342, type: !11075, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11077)
!11075 = !DISubroutineType(types: !11076)
!11076 = !{null, !1248, !108, !108}
!11077 = !{!11078, !11079, !11080}
!11078 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11074, file: !10949, line: 342, type: !1248)
!11079 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11074, file: !10949, line: 342, type: !108)
!11080 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11074, file: !10949, line: 342, type: !108)
!11081 = !DILocation(line: 0, scope: !11074)
!11082 = !DILocation(line: 344, column: 3, scope: !11074)
!11083 = !DILocation(line: 345, column: 1, scope: !11074)
!11084 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10949, file: !10949, line: 413, type: !11075, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11085)
!11085 = !{!11086, !11087, !11088}
!11086 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11084, file: !10949, line: 413, type: !1248)
!11087 = !DILocalVariable(name: "Pin", arg: 2, scope: !11084, file: !10949, line: 413, type: !108)
!11088 = !DILocalVariable(name: "Speed", arg: 3, scope: !11084, file: !10949, line: 413, type: !108)
!11089 = !DILocation(line: 0, scope: !11084)
!11090 = !DILocation(line: 415, column: 3, scope: !11084)
!11091 = !DILocation(line: 0, scope: !10894, inlinedAt: !11092)
!11092 = distinct !DILocation(line: 415, column: 3, scope: !11084)
!11093 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11092)
!11094 = !DILocation(line: 0, scope: !10902, inlinedAt: !11095)
!11095 = distinct !DILocation(line: 415, column: 3, scope: !11084)
!11096 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11095)
!11097 = !DILocation(line: 0, scope: !10894, inlinedAt: !11098)
!11098 = distinct !DILocation(line: 415, column: 3, scope: !11084)
!11099 = !DILocation(line: 0, scope: !10902, inlinedAt: !11100)
!11100 = distinct !DILocation(line: 415, column: 3, scope: !11084)
!11101 = !DILocation(line: 417, column: 1, scope: !11084)
!11102 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10949, file: !10949, line: 484, type: !11075, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11103)
!11103 = !{!11104, !11105, !11106}
!11104 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11102, file: !10949, line: 484, type: !1248)
!11105 = !DILocalVariable(name: "Pin", arg: 2, scope: !11102, file: !10949, line: 484, type: !108)
!11106 = !DILocalVariable(name: "Pull", arg: 3, scope: !11102, file: !10949, line: 484, type: !108)
!11107 = !DILocation(line: 0, scope: !11102)
!11108 = !DILocation(line: 486, column: 3, scope: !11102)
!11109 = !DILocation(line: 0, scope: !10894, inlinedAt: !11110)
!11110 = distinct !DILocation(line: 486, column: 3, scope: !11102)
!11111 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11110)
!11112 = !DILocation(line: 0, scope: !10902, inlinedAt: !11113)
!11113 = distinct !DILocation(line: 486, column: 3, scope: !11102)
!11114 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11113)
!11115 = !DILocation(line: 0, scope: !10894, inlinedAt: !11116)
!11116 = distinct !DILocation(line: 486, column: 3, scope: !11102)
!11117 = !DILocation(line: 0, scope: !10902, inlinedAt: !11118)
!11118 = distinct !DILocation(line: 486, column: 3, scope: !11102)
!11119 = !DILocation(line: 487, column: 1, scope: !11102)
!11120 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10949, file: !10949, line: 556, type: !11075, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11121)
!11121 = !{!11122, !11123, !11124}
!11122 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11120, file: !10949, line: 556, type: !1248)
!11123 = !DILocalVariable(name: "Pin", arg: 2, scope: !11120, file: !10949, line: 556, type: !108)
!11124 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11120, file: !10949, line: 556, type: !108)
!11125 = !DILocation(line: 0, scope: !11120)
!11126 = !DILocation(line: 558, column: 3, scope: !11120)
!11127 = !DILocation(line: 0, scope: !10894, inlinedAt: !11128)
!11128 = distinct !DILocation(line: 558, column: 3, scope: !11120)
!11129 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11128)
!11130 = !DILocation(line: 0, scope: !10902, inlinedAt: !11131)
!11131 = distinct !DILocation(line: 558, column: 3, scope: !11120)
!11132 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11131)
!11133 = !DILocation(line: 0, scope: !10894, inlinedAt: !11134)
!11134 = distinct !DILocation(line: 558, column: 3, scope: !11120)
!11135 = !DILocation(line: 0, scope: !10902, inlinedAt: !11136)
!11136 = distinct !DILocation(line: 558, column: 3, scope: !11120)
!11137 = !DILocation(line: 560, column: 1, scope: !11120)
!11138 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10949, file: !10949, line: 633, type: !11075, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11139)
!11139 = !{!11140, !11141, !11142}
!11140 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11138, file: !10949, line: 633, type: !1248)
!11141 = !DILocalVariable(name: "Pin", arg: 2, scope: !11138, file: !10949, line: 633, type: !108)
!11142 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11138, file: !10949, line: 633, type: !108)
!11143 = !DILocation(line: 0, scope: !11138)
!11144 = !DILocation(line: 635, column: 3, scope: !11138)
!11145 = !DILocation(line: 0, scope: !10894, inlinedAt: !11146)
!11146 = distinct !DILocation(line: 635, column: 3, scope: !11138)
!11147 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11146)
!11148 = !DILocation(line: 0, scope: !10902, inlinedAt: !11149)
!11149 = distinct !DILocation(line: 635, column: 3, scope: !11138)
!11150 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11149)
!11151 = !DILocation(line: 0, scope: !10894, inlinedAt: !11152)
!11152 = distinct !DILocation(line: 635, column: 3, scope: !11138)
!11153 = !DILocation(line: 0, scope: !10902, inlinedAt: !11154)
!11154 = distinct !DILocation(line: 635, column: 3, scope: !11138)
!11155 = !DILocation(line: 637, column: 1, scope: !11138)
!11156 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10949, file: !10949, line: 273, type: !11075, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11157)
!11157 = !{!11158, !11159, !11160}
!11158 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11156, file: !10949, line: 273, type: !1248)
!11159 = !DILocalVariable(name: "Pin", arg: 2, scope: !11156, file: !10949, line: 273, type: !108)
!11160 = !DILocalVariable(name: "Mode", arg: 3, scope: !11156, file: !10949, line: 273, type: !108)
!11161 = !DILocation(line: 0, scope: !11156)
!11162 = !DILocation(line: 275, column: 3, scope: !11156)
!11163 = !DILocation(line: 0, scope: !10894, inlinedAt: !11164)
!11164 = distinct !DILocation(line: 275, column: 3, scope: !11156)
!11165 = !DILocation(line: 380, column: 4, scope: !10894, inlinedAt: !11164)
!11166 = !DILocation(line: 0, scope: !10902, inlinedAt: !11167)
!11167 = distinct !DILocation(line: 275, column: 3, scope: !11156)
!11168 = !DILocation(line: 414, column: 7, scope: !10902, inlinedAt: !11167)
!11169 = !DILocation(line: 0, scope: !10894, inlinedAt: !11170)
!11170 = distinct !DILocation(line: 275, column: 3, scope: !11156)
!11171 = !DILocation(line: 0, scope: !10902, inlinedAt: !11172)
!11172 = distinct !DILocation(line: 275, column: 3, scope: !11156)
!11173 = !DILocation(line: 276, column: 1, scope: !11156)
!11174 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1317, file: !1317, line: 698, type: !1330, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11175)
!11175 = !{!11176, !11177, !11178}
!11176 = !DILocalVariable(name: "dev", arg: 1, scope: !11174, file: !1317, line: 698, type: !1175)
!11177 = !DILocalVariable(name: "data", scope: !11174, file: !1317, line: 700, type: !10618)
!11178 = !DILocalVariable(name: "ret", scope: !11174, file: !1317, line: 701, type: !107)
!11179 = !DILocation(line: 0, scope: !11174)
!11180 = !DILocation(line: 700, column: 38, scope: !11174)
!11181 = !DILocation(line: 703, column: 8, scope: !11174)
!11182 = !DILocation(line: 703, column: 12, scope: !11174)
!11183 = !DILocation(line: 705, column: 7, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11174, file: !1317, line: 705, column: 6)
!11185 = !DILocation(line: 705, column: 6, scope: !11174)
!11186 = !DILocation(line: 722, column: 8, scope: !11174)
!11187 = !DILocation(line: 723, column: 10, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11174, file: !1317, line: 723, column: 6)
!11189 = !DILocation(line: 723, column: 6, scope: !11174)
!11190 = !DILocation(line: 731, column: 1, scope: !11174)
!11191 = distinct !DISubprogram(name: "device_is_ready", scope: !10398, file: !10398, line: 47, type: !11192, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11194)
!11192 = !DISubroutineType(types: !11193)
!11193 = !{!136, !1175}
!11194 = !{!11195}
!11195 = !DILocalVariable(name: "dev", arg: 1, scope: !11191, file: !10398, line: 47, type: !1175)
!11196 = !DILocation(line: 0, scope: !11191)
!11197 = !DILocation(line: 55, column: 2, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11191, file: !10398, line: 55, column: 2)
!11199 = !{i64 2154944190}
!11200 = !DILocation(line: 56, column: 9, scope: !11191)
!11201 = !DILocation(line: 56, column: 2, scope: !11191)
!11202 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1317, file: !1317, line: 270, type: !11203, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11205)
!11203 = !DISubroutineType(types: !11204)
!11204 = !{!107, !1175, !136}
!11205 = !{!11206, !11207, !11208, !11209, !11210}
!11206 = !DILocalVariable(name: "dev", arg: 1, scope: !11202, file: !1317, line: 270, type: !1175)
!11207 = !DILocalVariable(name: "on", arg: 2, scope: !11202, file: !1317, line: 270, type: !136)
!11208 = !DILocalVariable(name: "cfg", scope: !11202, file: !1317, line: 272, type: !10551)
!11209 = !DILocalVariable(name: "ret", scope: !11202, file: !1317, line: 273, type: !107)
!11210 = !DILocalVariable(name: "clk", scope: !11202, file: !1317, line: 278, type: !10841)
!11211 = !DILocation(line: 0, scope: !11202)
!11212 = !DILocation(line: 272, column: 45, scope: !11202)
!11213 = !DILocation(line: 282, column: 38, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !1317, line: 280, column: 10)
!11215 = distinct !DILexicalBlock(scope: !11202, file: !1317, line: 280, column: 6)
!11216 = !DILocation(line: 282, column: 6, scope: !11214)
!11217 = !DILocation(line: 281, column: 9, scope: !11214)
!11218 = !DILocation(line: 293, column: 1, scope: !11202)
!11219 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !11192, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11220)
!11220 = !{!11221}
!11221 = !DILocalVariable(name: "dev", arg: 1, scope: !11219, file: !451, line: 730, type: !1175)
!11222 = !DILocation(line: 0, scope: !11219)
!11223 = !DILocation(line: 732, column: 9, scope: !11219)
!11224 = !DILocation(line: 732, column: 2, scope: !11219)
!11225 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1317, file: !1317, line: 496, type: !11226, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11228)
!11226 = !DISubroutineType(types: !11227)
!11227 = !{!107, !1175, !107, !107, !107}
!11228 = !{!11229, !11230, !11231, !11232, !11233, !11234}
!11229 = !DILocalVariable(name: "dev", arg: 1, scope: !11225, file: !1317, line: 496, type: !1175)
!11230 = !DILocalVariable(name: "pin", arg: 2, scope: !11225, file: !1317, line: 496, type: !107)
!11231 = !DILocalVariable(name: "conf", arg: 3, scope: !11225, file: !1317, line: 496, type: !107)
!11232 = !DILocalVariable(name: "func", arg: 4, scope: !11225, file: !1317, line: 496, type: !107)
!11233 = !DILocalVariable(name: "ret", scope: !11225, file: !1317, line: 498, type: !107)
!11234 = !DILocalVariable(name: "gpio_out", scope: !11235, file: !1317, line: 508, type: !108)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !1317, line: 507, column: 27)
!11236 = distinct !DILexicalBlock(scope: !11225, file: !1317, line: 507, column: 6)
!11237 = !DILocation(line: 0, scope: !11225)
!11238 = !DILocation(line: 505, column: 2, scope: !11225)
!11239 = !DILocation(line: 507, column: 11, scope: !11236)
!11240 = !DILocation(line: 507, column: 6, scope: !11225)
!11241 = !DILocation(line: 508, column: 28, scope: !11235)
!11242 = !DILocation(line: 0, scope: !11235)
!11243 = !DILocation(line: 510, column: 16, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11235, file: !1317, line: 510, column: 7)
!11245 = !DILocation(line: 0, scope: !11244)
!11246 = !DILocation(line: 510, column: 7, scope: !11235)
!11247 = !DILocation(line: 511, column: 4, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11244, file: !1317, line: 510, column: 32)
!11249 = !DILocation(line: 512, column: 3, scope: !11248)
!11250 = !DILocation(line: 513, column: 4, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !1317, line: 512, column: 39)
!11252 = distinct !DILexicalBlock(scope: !11244, file: !1317, line: 512, column: 14)
!11253 = !DILocation(line: 514, column: 3, scope: !11251)
!11254 = !DILocation(line: 518, column: 1, scope: !11225)
!11255 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1593, file: !1593, line: 526, type: !1496, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11256)
!11256 = !{!11257, !11258, !11259}
!11257 = !DILocalVariable(name: "dev", arg: 1, scope: !11255, file: !1593, line: 526, type: !1498)
!11258 = !DILocalVariable(name: "c", arg: 2, scope: !11255, file: !1593, line: 526, type: !1107)
!11259 = !DILocalVariable(name: "config", scope: !11255, file: !1593, line: 528, type: !11260)
!11260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!11261 = !DILocation(line: 0, scope: !11255)
!11262 = !DILocation(line: 528, column: 48, scope: !11255)
!11263 = !DILocation(line: 531, column: 40, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11255, file: !1593, line: 531, column: 6)
!11265 = !DILocation(line: 531, column: 6, scope: !11264)
!11266 = !DILocation(line: 531, column: 6, scope: !11255)
!11267 = !DILocation(line: 532, column: 34, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11264, file: !1593, line: 531, column: 48)
!11269 = !DILocation(line: 532, column: 3, scope: !11268)
!11270 = !DILocation(line: 533, column: 2, scope: !11268)
!11271 = !DILocation(line: 539, column: 42, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11255, file: !1593, line: 539, column: 6)
!11273 = !DILocation(line: 539, column: 7, scope: !11272)
!11274 = !DILocation(line: 539, column: 6, scope: !11255)
!11275 = !DILocation(line: 543, column: 52, scope: !11255)
!11276 = !DILocation(line: 543, column: 22, scope: !11255)
!11277 = !DILocation(line: 543, column: 5, scope: !11255)
!11278 = !DILocation(line: 545, column: 2, scope: !11255)
!11279 = !DILocation(line: 546, column: 1, scope: !11255)
!11280 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1593, file: !1593, line: 548, type: !1515, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11281)
!11281 = !{!11282, !11283, !11284, !11285}
!11282 = !DILocalVariable(name: "dev", arg: 1, scope: !11280, file: !1593, line: 548, type: !1498)
!11283 = !DILocalVariable(name: "c", arg: 2, scope: !11280, file: !1593, line: 549, type: !191)
!11284 = !DILocalVariable(name: "config", scope: !11280, file: !1593, line: 551, type: !11260)
!11285 = !DILocalVariable(name: "key", scope: !11280, file: !1593, line: 555, type: !32)
!11286 = !DILocation(line: 0, scope: !11280)
!11287 = !DILocation(line: 551, column: 48, scope: !11280)
!11288 = !DILocation(line: 562, column: 2, scope: !11280)
!11289 = !DILocation(line: 563, column: 41, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !1593, line: 563, column: 7)
!11291 = distinct !DILexicalBlock(scope: !11280, file: !1593, line: 562, column: 12)
!11292 = !DILocation(line: 563, column: 7, scope: !11290)
!11293 = !DILocation(line: 563, column: 7, scope: !11291)
!11294 = !DILocation(line: 55, column: 2, scope: !11295, inlinedAt: !11299)
!11295 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11296)
!11296 = !{!11297, !11298}
!11297 = !DILocalVariable(name: "key", scope: !11295, file: !7054, line: 44, type: !32)
!11298 = !DILocalVariable(name: "tmp", scope: !11295, file: !7054, line: 53, type: !32)
!11299 = distinct !DILocation(line: 564, column: 10, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11290, file: !1593, line: 563, column: 49)
!11301 = !{i64 2289720}
!11302 = !DILocation(line: 0, scope: !11295, inlinedAt: !11299)
!11303 = !DILocation(line: 565, column: 42, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11300, file: !1593, line: 565, column: 8)
!11305 = !DILocation(line: 565, column: 8, scope: !11304)
!11306 = !DILocation(line: 565, column: 8, scope: !11300)
!11307 = !DILocalVariable(name: "key", arg: 1, scope: !11308, file: !7054, line: 84, type: !32)
!11308 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11309)
!11309 = !{!11307}
!11310 = !DILocation(line: 0, scope: !11308, inlinedAt: !11311)
!11311 = distinct !DILocation(line: 568, column: 4, scope: !11300)
!11312 = !DILocation(line: 95, column: 2, scope: !11308, inlinedAt: !11311)
!11313 = !{i64 2290537}
!11314 = !DILocation(line: 569, column: 3, scope: !11300)
!11315 = distinct !{!11315, !11288, !11316}
!11316 = !DILocation(line: 570, column: 2, scope: !11280)
!11317 = !DILocation(line: 592, column: 33, scope: !11280)
!11318 = !DILocation(line: 592, column: 2, scope: !11280)
!11319 = !DILocation(line: 0, scope: !11308, inlinedAt: !11320)
!11320 = distinct !DILocation(line: 593, column: 2, scope: !11280)
!11321 = !DILocation(line: 95, column: 2, scope: !11308, inlinedAt: !11320)
!11322 = !DILocation(line: 594, column: 1, scope: !11280)
!11323 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1593, file: !1593, line: 596, type: !1519, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11324)
!11324 = !{!11325, !11326, !11327}
!11325 = !DILocalVariable(name: "dev", arg: 1, scope: !11323, file: !1593, line: 596, type: !1498)
!11326 = !DILocalVariable(name: "config", scope: !11323, file: !1593, line: 598, type: !11260)
!11327 = !DILocalVariable(name: "err", scope: !11323, file: !1593, line: 599, type: !108)
!11328 = !DILocation(line: 0, scope: !11323)
!11329 = !DILocation(line: 598, column: 48, scope: !11323)
!11330 = !DILocation(line: 606, column: 40, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11323, file: !1593, line: 606, column: 6)
!11332 = !DILocation(line: 606, column: 6, scope: !11331)
!11333 = !DILocation(line: 606, column: 6, scope: !11323)
!11334 = !DILocation(line: 610, column: 39, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11323, file: !1593, line: 610, column: 6)
!11336 = !DILocation(line: 610, column: 6, scope: !11335)
!11337 = !DILocation(line: 610, column: 6, scope: !11323)
!11338 = !DILocation(line: 614, column: 39, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11323, file: !1593, line: 614, column: 6)
!11340 = !DILocation(line: 614, column: 6, scope: !11339)
!11341 = !DILocation(line: 614, column: 6, scope: !11323)
!11342 = !DILocation(line: 619, column: 40, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11323, file: !1593, line: 619, column: 6)
!11344 = !DILocation(line: 619, column: 6, scope: !11343)
!11345 = !DILocation(line: 619, column: 6, scope: !11323)
!11346 = !DILocation(line: 623, column: 10, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11323, file: !1593, line: 623, column: 6)
!11348 = !DILocation(line: 623, column: 6, scope: !11323)
!11349 = !DILocation(line: 624, column: 34, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11347, file: !1593, line: 623, column: 24)
!11351 = !DILocation(line: 624, column: 3, scope: !11350)
!11352 = !DILocation(line: 625, column: 2, scope: !11350)
!11353 = !DILocation(line: 632, column: 10, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11323, file: !1593, line: 632, column: 6)
!11355 = !DILocation(line: 632, column: 6, scope: !11323)
!11356 = !DILocation(line: 633, column: 34, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11354, file: !1593, line: 632, column: 32)
!11358 = !DILocation(line: 633, column: 3, scope: !11357)
!11359 = !DILocation(line: 634, column: 2, scope: !11357)
!11360 = !DILocation(line: 636, column: 10, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11323, file: !1593, line: 636, column: 6)
!11362 = !DILocation(line: 636, column: 6, scope: !11323)
!11363 = !DILocation(line: 637, column: 33, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11361, file: !1593, line: 636, column: 31)
!11365 = !DILocation(line: 637, column: 3, scope: !11364)
!11366 = !DILocation(line: 638, column: 2, scope: !11364)
!11367 = !DILocation(line: 640, column: 10, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11323, file: !1593, line: 640, column: 6)
!11369 = !DILocation(line: 640, column: 6, scope: !11323)
!11370 = !DILocation(line: 641, column: 33, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11368, file: !1593, line: 640, column: 32)
!11372 = !DILocation(line: 641, column: 3, scope: !11371)
!11373 = !DILocation(line: 642, column: 2, scope: !11371)
!11374 = !DILocation(line: 646, column: 32, scope: !11323)
!11375 = !DILocation(line: 646, column: 2, scope: !11323)
!11376 = !DILocation(line: 648, column: 2, scope: !11323)
!11377 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1593, file: !1593, line: 419, type: !1523, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11378)
!11378 = !{!11379, !11380, !11381, !11382, !11384, !11385, !11386, !11387}
!11379 = !DILocalVariable(name: "dev", arg: 1, scope: !11377, file: !1593, line: 419, type: !1498)
!11380 = !DILocalVariable(name: "cfg", arg: 2, scope: !11377, file: !1593, line: 420, type: !1525)
!11381 = !DILocalVariable(name: "config", scope: !11377, file: !1593, line: 422, type: !11260)
!11382 = !DILocalVariable(name: "data", scope: !11377, file: !1593, line: 423, type: !11383)
!11383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!11384 = !DILocalVariable(name: "parity", scope: !11377, file: !1593, line: 424, type: !7643)
!11385 = !DILocalVariable(name: "stopbits", scope: !11377, file: !1593, line: 425, type: !7643)
!11386 = !DILocalVariable(name: "databits", scope: !11377, file: !1593, line: 426, type: !7643)
!11387 = !DILocalVariable(name: "flowctrl", scope: !11377, file: !1593, line: 428, type: !7643)
!11388 = !DILocation(line: 0, scope: !11377)
!11389 = !DILocation(line: 422, column: 48, scope: !11377)
!11390 = !DILocation(line: 423, column: 38, scope: !11377)
!11391 = !DILocation(line: 424, column: 56, scope: !11377)
!11392 = !DILocation(line: 424, column: 51, scope: !11377)
!11393 = !DILocation(line: 424, column: 26, scope: !11377)
!11394 = !DILocation(line: 425, column: 60, scope: !11377)
!11395 = !DILocation(line: 425, column: 55, scope: !11377)
!11396 = !DILocation(line: 425, column: 28, scope: !11377)
!11397 = !DILocation(line: 426, column: 60, scope: !11377)
!11398 = !DILocation(line: 426, column: 55, scope: !11377)
!11399 = !DILocation(line: 426, column: 28, scope: !11377)
!11400 = !DILocation(line: 428, column: 58, scope: !11377)
!11401 = !DILocation(line: 428, column: 53, scope: !11377)
!11402 = !DILocation(line: 428, column: 28, scope: !11377)
!11403 = !DILocation(line: 431, column: 44, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 431, column: 6)
!11405 = !DILocation(line: 438, column: 22, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 437, column: 6)
!11407 = !DILocation(line: 437, column: 6, scope: !11377)
!11408 = !DILocation(line: 448, column: 6, scope: !11377)
!11409 = !DILocation(line: 465, column: 47, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 465, column: 6)
!11411 = !DILocation(line: 475, column: 21, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 475, column: 6)
!11413 = !DILocation(line: 475, column: 6, scope: !11377)
!11414 = !DILocation(line: 476, column: 8, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !1593, line: 476, column: 7)
!11416 = distinct !DILexicalBlock(scope: !11412, file: !1593, line: 475, column: 49)
!11417 = !DILocation(line: 477, column: 34, scope: !11415)
!11418 = !DILocation(line: 476, column: 7, scope: !11416)
!11419 = !DILocation(line: 482, column: 27, scope: !11377)
!11420 = !DILocation(line: 482, column: 2, scope: !11377)
!11421 = !DILocation(line: 484, column: 16, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 484, column: 6)
!11423 = !DILocation(line: 484, column: 13, scope: !11422)
!11424 = !DILocation(line: 484, column: 6, scope: !11377)
!11425 = !DILocation(line: 485, column: 3, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11422, file: !1593, line: 484, column: 44)
!11427 = !DILocation(line: 486, column: 2, scope: !11426)
!11428 = !DILocation(line: 488, column: 18, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 488, column: 6)
!11430 = !DILocation(line: 488, column: 15, scope: !11429)
!11431 = !DILocation(line: 488, column: 6, scope: !11377)
!11432 = !DILocation(line: 489, column: 3, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11429, file: !1593, line: 488, column: 48)
!11434 = !DILocation(line: 490, column: 2, scope: !11433)
!11435 = !DILocation(line: 492, column: 18, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 492, column: 6)
!11437 = !DILocation(line: 492, column: 15, scope: !11436)
!11438 = !DILocation(line: 492, column: 6, scope: !11377)
!11439 = !DILocation(line: 493, column: 3, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11436, file: !1593, line: 492, column: 48)
!11441 = !DILocation(line: 494, column: 2, scope: !11440)
!11442 = !DILocation(line: 496, column: 18, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 496, column: 6)
!11444 = !DILocation(line: 496, column: 15, scope: !11443)
!11445 = !DILocation(line: 496, column: 6, scope: !11377)
!11446 = !DILocation(line: 497, column: 3, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11443, file: !1593, line: 496, column: 46)
!11448 = !DILocation(line: 498, column: 2, scope: !11447)
!11449 = !DILocation(line: 500, column: 11, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11377, file: !1593, line: 500, column: 6)
!11451 = !DILocation(line: 500, column: 29, scope: !11450)
!11452 = !DILocation(line: 500, column: 20, scope: !11450)
!11453 = !DILocation(line: 500, column: 6, scope: !11377)
!11454 = !DILocation(line: 501, column: 3, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11450, file: !1593, line: 500, column: 40)
!11456 = !DILocation(line: 502, column: 26, scope: !11455)
!11457 = !DILocation(line: 502, column: 19, scope: !11455)
!11458 = !DILocation(line: 503, column: 2, scope: !11455)
!11459 = !DILocation(line: 505, column: 26, scope: !11377)
!11460 = !DILocation(line: 505, column: 2, scope: !11377)
!11461 = !DILocation(line: 506, column: 2, scope: !11377)
!11462 = !DILocation(line: 507, column: 1, scope: !11377)
!11463 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1593, file: !1593, line: 509, type: !1536, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11464)
!11464 = !{!11465, !11466, !11467}
!11465 = !DILocalVariable(name: "dev", arg: 1, scope: !11463, file: !1593, line: 509, type: !1498)
!11466 = !DILocalVariable(name: "cfg", arg: 2, scope: !11463, file: !1593, line: 510, type: !1538)
!11467 = !DILocalVariable(name: "data", scope: !11463, file: !1593, line: 512, type: !11383)
!11468 = !DILocation(line: 0, scope: !11463)
!11469 = !DILocation(line: 512, column: 38, scope: !11463)
!11470 = !DILocation(line: 514, column: 24, scope: !11463)
!11471 = !DILocation(line: 514, column: 7, scope: !11463)
!11472 = !DILocation(line: 514, column: 16, scope: !11463)
!11473 = !DILocation(line: 515, column: 41, scope: !11463)
!11474 = !{i32 0, i32 1537}
!11475 = !DILocation(line: 515, column: 16, scope: !11463)
!11476 = !DILocation(line: 515, column: 7, scope: !11463)
!11477 = !DILocation(line: 515, column: 14, scope: !11463)
!11478 = !DILocation(line: 517, column: 3, scope: !11463)
!11479 = !{i32 0, i32 12289}
!11480 = !DILocation(line: 516, column: 19, scope: !11463)
!11481 = !DILocation(line: 516, column: 7, scope: !11463)
!11482 = !DILocation(line: 516, column: 17, scope: !11463)
!11483 = !DILocation(line: 519, column: 3, scope: !11463)
!11484 = !DILocation(line: 519, column: 33, scope: !11463)
!11485 = !DILocation(line: 518, column: 19, scope: !11463)
!11486 = !DILocation(line: 518, column: 7, scope: !11463)
!11487 = !DILocation(line: 518, column: 17, scope: !11463)
!11488 = !DILocation(line: 521, column: 3, scope: !11463)
!11489 = !{i32 0, i32 769}
!11490 = !DILocation(line: 520, column: 19, scope: !11463)
!11491 = !DILocation(line: 520, column: 7, scope: !11463)
!11492 = !DILocation(line: 520, column: 17, scope: !11463)
!11493 = !DILocation(line: 522, column: 2, scope: !11463)
!11494 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1593, file: !1593, line: 205, type: !11495, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11497)
!11495 = !DISubroutineType(types: !11496)
!11496 = !{!108, !1498}
!11497 = !{!11498, !11499}
!11498 = !DILocalVariable(name: "dev", arg: 1, scope: !11494, file: !1593, line: 205, type: !1498)
!11499 = !DILocalVariable(name: "config", scope: !11494, file: !1593, line: 207, type: !11260)
!11500 = !DILocation(line: 0, scope: !11494)
!11501 = !DILocation(line: 207, column: 48, scope: !11494)
!11502 = !DILocation(line: 209, column: 36, scope: !11494)
!11503 = !DILocation(line: 209, column: 9, scope: !11494)
!11504 = !DILocation(line: 209, column: 2, scope: !11494)
!11505 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1593, file: !1593, line: 270, type: !11506, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11508)
!11506 = !DISubroutineType(types: !11507)
!11507 = !{!1464, !108}
!11508 = !{!11509}
!11509 = !DILocalVariable(name: "parity", arg: 1, scope: !11505, file: !1593, line: 270, type: !108)
!11510 = !DILocation(line: 0, scope: !11505)
!11511 = !DILocation(line: 272, column: 2, scope: !11505)
!11512 = !DILocation(line: 281, column: 1, scope: !11505)
!11513 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1593, file: !1593, line: 220, type: !11495, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11514)
!11514 = !{!11515, !11516}
!11515 = !DILocalVariable(name: "dev", arg: 1, scope: !11513, file: !1593, line: 220, type: !1498)
!11516 = !DILocalVariable(name: "config", scope: !11513, file: !1593, line: 222, type: !11260)
!11517 = !DILocation(line: 0, scope: !11513)
!11518 = !DILocation(line: 222, column: 48, scope: !11513)
!11519 = !DILocation(line: 224, column: 44, scope: !11513)
!11520 = !DILocation(line: 224, column: 9, scope: !11513)
!11521 = !DILocation(line: 224, column: 2, scope: !11513)
!11522 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1593, file: !1593, line: 304, type: !11523, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11525)
!11523 = !DISubroutineType(types: !11524)
!11524 = !{!1478, !108}
!11525 = !{!11526}
!11526 = !DILocalVariable(name: "sb", arg: 1, scope: !11522, file: !1593, line: 304, type: !108)
!11527 = !DILocation(line: 0, scope: !11522)
!11528 = !DILocation(line: 306, column: 2, scope: !11522)
!11529 = !DILocation(line: 0, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11522, file: !1593, line: 306, column: 14)
!11531 = !DILocation(line: 323, column: 1, scope: !11522)
!11532 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1593, file: !1593, line: 235, type: !11495, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11533)
!11533 = !{!11534, !11535}
!11534 = !DILocalVariable(name: "dev", arg: 1, scope: !11532, file: !1593, line: 235, type: !1498)
!11535 = !DILocalVariable(name: "config", scope: !11532, file: !1593, line: 237, type: !11260)
!11536 = !DILocation(line: 0, scope: !11532)
!11537 = !DILocation(line: 237, column: 48, scope: !11532)
!11538 = !DILocation(line: 239, column: 39, scope: !11532)
!11539 = !DILocation(line: 239, column: 9, scope: !11532)
!11540 = !DILocation(line: 239, column: 2, scope: !11532)
!11541 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1593, file: !1593, line: 355, type: !11542, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11544)
!11542 = !DISubroutineType(types: !11543)
!11543 = !{!1471, !108, !108}
!11544 = !{!11545, !11546}
!11545 = !DILocalVariable(name: "db", arg: 1, scope: !11541, file: !1593, line: 355, type: !108)
!11546 = !DILocalVariable(name: "p", arg: 2, scope: !11541, file: !1593, line: 356, type: !108)
!11547 = !DILocation(line: 0, scope: !11541)
!11548 = !DILocation(line: 358, column: 2, scope: !11541)
!11549 = !DILocation(line: 384, column: 1, scope: !11541)
!11550 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1593, file: !1593, line: 250, type: !11495, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11551)
!11551 = !{!11552, !11553}
!11552 = !DILocalVariable(name: "dev", arg: 1, scope: !11550, file: !1593, line: 250, type: !1498)
!11553 = !DILocalVariable(name: "config", scope: !11550, file: !1593, line: 252, type: !11260)
!11554 = !DILocation(line: 0, scope: !11550)
!11555 = !DILocation(line: 252, column: 48, scope: !11550)
!11556 = !DILocation(line: 254, column: 40, scope: !11550)
!11557 = !DILocation(line: 254, column: 9, scope: !11550)
!11558 = !DILocation(line: 254, column: 2, scope: !11550)
!11559 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1593, file: !1593, line: 409, type: !11560, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11562)
!11560 = !DISubroutineType(types: !11561)
!11561 = !{!1484, !108}
!11562 = !{!11563}
!11563 = !DILocalVariable(name: "fc", arg: 1, scope: !11559, file: !1593, line: 409, type: !108)
!11564 = !DILocation(line: 0, scope: !11559)
!11565 = !DILocation(line: 411, column: 9, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11559, file: !1593, line: 411, column: 6)
!11567 = !DILocation(line: 416, column: 1, scope: !11559)
!11568 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11569, file: !11569, line: 967, type: !11570, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11572)
!11569 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11570 = !DISubroutineType(types: !11571)
!11571 = !{!108, !1539}
!11572 = !{!11573}
!11573 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11568, file: !11569, line: 967, type: !1539)
!11574 = !DILocation(line: 0, scope: !11568)
!11575 = !DILocation(line: 969, column: 21, scope: !11568)
!11576 = !DILocation(line: 969, column: 3, scope: !11568)
!11577 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11569, file: !11569, line: 601, type: !11570, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11578)
!11578 = !{!11579}
!11579 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11577, file: !11569, line: 601, type: !1539)
!11580 = !DILocation(line: 0, scope: !11577)
!11581 = !DILocation(line: 603, column: 21, scope: !11577)
!11582 = !DILocation(line: 603, column: 3, scope: !11577)
!11583 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11569, file: !11569, line: 820, type: !11570, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11584)
!11584 = !{!11585}
!11585 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11583, file: !11569, line: 820, type: !1539)
!11586 = !DILocation(line: 0, scope: !11583)
!11587 = !DILocation(line: 822, column: 21, scope: !11583)
!11588 = !DILocation(line: 822, column: 3, scope: !11583)
!11589 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11569, file: !11569, line: 547, type: !11570, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11590)
!11590 = !{!11591}
!11591 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11589, file: !11569, line: 547, type: !1539)
!11592 = !DILocation(line: 0, scope: !11589)
!11593 = !DILocation(line: 549, column: 21, scope: !11589)
!11594 = !DILocation(line: 549, column: 3, scope: !11589)
!11595 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1593, file: !1593, line: 257, type: !11596, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11598)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{!108, !1464}
!11598 = !{!11599}
!11599 = !DILocalVariable(name: "parity", arg: 1, scope: !11595, file: !1593, line: 257, type: !1464)
!11600 = !DILocation(line: 0, scope: !11595)
!11601 = !DILocation(line: 259, column: 2, scope: !11595)
!11602 = !DILocation(line: 268, column: 1, scope: !11595)
!11603 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1593, file: !1593, line: 283, type: !11604, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11606)
!11604 = !DISubroutineType(types: !11605)
!11605 = !{!108, !1478}
!11606 = !{!11607}
!11607 = !DILocalVariable(name: "sb", arg: 1, scope: !11603, file: !1593, line: 283, type: !1478)
!11608 = !DILocation(line: 0, scope: !11603)
!11609 = !DILocation(line: 285, column: 2, scope: !11603)
!11610 = !DILocation(line: 0, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11603, file: !1593, line: 285, column: 14)
!11612 = !DILocation(line: 302, column: 1, scope: !11603)
!11613 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1593, file: !1593, line: 325, type: !11614, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11616)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{!108, !1471, !1464}
!11616 = !{!11617, !11618}
!11617 = !DILocalVariable(name: "db", arg: 1, scope: !11613, file: !1593, line: 325, type: !1471)
!11618 = !DILocalVariable(name: "p", arg: 2, scope: !11613, file: !1593, line: 326, type: !1464)
!11619 = !DILocation(line: 0, scope: !11613)
!11620 = !DILocation(line: 328, column: 2, scope: !11613)
!11621 = !DILocation(line: 353, column: 1, scope: !11613)
!11622 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1593, file: !1593, line: 393, type: !11623, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11625)
!11623 = !DISubroutineType(types: !11624)
!11624 = !{!108, !1484}
!11625 = !{!11626}
!11626 = !DILocalVariable(name: "fc", arg: 1, scope: !11622, file: !1593, line: 393, type: !1484)
!11627 = !DILocation(line: 0, scope: !11622)
!11628 = !DILocation(line: 395, column: 9, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11622, file: !1593, line: 395, column: 6)
!11630 = !DILocation(line: 400, column: 1, scope: !11622)
!11631 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11569, file: !11569, line: 424, type: !11632, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11634)
!11632 = !DISubroutineType(types: !11633)
!11633 = !{null, !1539}
!11634 = !{!11635}
!11635 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11631, file: !11569, line: 424, type: !1539)
!11636 = !DILocation(line: 0, scope: !11631)
!11637 = !DILocation(line: 426, column: 3, scope: !11631)
!11638 = !DILocation(line: 427, column: 1, scope: !11631)
!11639 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1593, file: !1593, line: 197, type: !11640, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11642)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{null, !1498, !108}
!11642 = !{!11643, !11644, !11645}
!11643 = !DILocalVariable(name: "dev", arg: 1, scope: !11639, file: !1593, line: 197, type: !1498)
!11644 = !DILocalVariable(name: "parity", arg: 2, scope: !11639, file: !1593, line: 198, type: !108)
!11645 = !DILocalVariable(name: "config", scope: !11639, file: !1593, line: 200, type: !11260)
!11646 = !DILocation(line: 0, scope: !11639)
!11647 = !DILocation(line: 200, column: 48, scope: !11639)
!11648 = !DILocation(line: 202, column: 29, scope: !11639)
!11649 = !DILocation(line: 202, column: 2, scope: !11639)
!11650 = !DILocation(line: 203, column: 1, scope: !11639)
!11651 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1593, file: !1593, line: 212, type: !11640, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11652)
!11652 = !{!11653, !11654, !11655}
!11653 = !DILocalVariable(name: "dev", arg: 1, scope: !11651, file: !1593, line: 212, type: !1498)
!11654 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11651, file: !1593, line: 213, type: !108)
!11655 = !DILocalVariable(name: "config", scope: !11651, file: !1593, line: 215, type: !11260)
!11656 = !DILocation(line: 0, scope: !11651)
!11657 = !DILocation(line: 215, column: 48, scope: !11651)
!11658 = !DILocation(line: 217, column: 37, scope: !11651)
!11659 = !DILocation(line: 217, column: 2, scope: !11651)
!11660 = !DILocation(line: 218, column: 1, scope: !11651)
!11661 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1593, file: !1593, line: 227, type: !11640, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11662)
!11662 = !{!11663, !11664, !11665}
!11663 = !DILocalVariable(name: "dev", arg: 1, scope: !11661, file: !1593, line: 227, type: !1498)
!11664 = !DILocalVariable(name: "databits", arg: 2, scope: !11661, file: !1593, line: 228, type: !108)
!11665 = !DILocalVariable(name: "config", scope: !11661, file: !1593, line: 230, type: !11260)
!11666 = !DILocation(line: 0, scope: !11661)
!11667 = !DILocation(line: 230, column: 48, scope: !11661)
!11668 = !DILocation(line: 232, column: 32, scope: !11661)
!11669 = !DILocation(line: 232, column: 2, scope: !11661)
!11670 = !DILocation(line: 233, column: 1, scope: !11661)
!11671 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1593, file: !1593, line: 242, type: !11640, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11672)
!11672 = !{!11673, !11674, !11675}
!11673 = !DILocalVariable(name: "dev", arg: 1, scope: !11671, file: !1593, line: 242, type: !1498)
!11674 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11671, file: !1593, line: 243, type: !108)
!11675 = !DILocalVariable(name: "config", scope: !11671, file: !1593, line: 245, type: !11260)
!11676 = !DILocation(line: 0, scope: !11671)
!11677 = !DILocation(line: 245, column: 48, scope: !11671)
!11678 = !DILocation(line: 247, column: 33, scope: !11671)
!11679 = !DILocation(line: 247, column: 2, scope: !11671)
!11680 = !DILocation(line: 248, column: 1, scope: !11671)
!11681 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1593, file: !1593, line: 107, type: !11640, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11682)
!11682 = !{!11683, !11684, !11685, !11686, !11687}
!11683 = !DILocalVariable(name: "dev", arg: 1, scope: !11681, file: !1593, line: 107, type: !1498)
!11684 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11681, file: !1593, line: 107, type: !108)
!11685 = !DILocalVariable(name: "config", scope: !11681, file: !1593, line: 109, type: !11260)
!11686 = !DILocalVariable(name: "data", scope: !11681, file: !1593, line: 110, type: !11383)
!11687 = !DILocalVariable(name: "clock_rate", scope: !11681, file: !1593, line: 112, type: !108)
!11688 = !DILocation(line: 0, scope: !11681)
!11689 = !DILocation(line: 109, column: 48, scope: !11681)
!11690 = !DILocation(line: 110, column: 38, scope: !11681)
!11691 = !DILocation(line: 112, column: 2, scope: !11681)
!11692 = !DILocation(line: 123, column: 36, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !1593, line: 123, column: 7)
!11694 = distinct !DILexicalBlock(scope: !11695, file: !1593, line: 122, column: 9)
!11695 = distinct !DILexicalBlock(scope: !11681, file: !1593, line: 115, column: 6)
!11696 = !DILocation(line: 124, column: 42, scope: !11693)
!11697 = !DILocation(line: 123, column: 7, scope: !11693)
!11698 = !DILocation(line: 125, column: 22, scope: !11693)
!11699 = !DILocation(line: 123, column: 7, scope: !11694)
!11700 = !DILocation(line: 126, column: 4, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !1593, line: 126, column: 4)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !1593, line: 126, column: 4)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !1593, line: 126, column: 4)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !1593, line: 126, column: 4)
!11705 = distinct !DILexicalBlock(scope: !11693, file: !1593, line: 125, column: 27)
!11706 = !DILocation(line: 127, column: 4, scope: !11705)
!11707 = !DILocation(line: 176, column: 36, scope: !11681)
!11708 = !DILocation(line: 176, column: 3, scope: !11681)
!11709 = !DILocation(line: 179, column: 32, scope: !11681)
!11710 = !DILocation(line: 180, column: 10, scope: !11681)
!11711 = !DILocation(line: 179, column: 3, scope: !11681)
!11712 = !DILocation(line: 195, column: 1, scope: !11681)
!11713 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11569, file: !11569, line: 410, type: !11632, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11714)
!11714 = !{!11715}
!11715 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11713, file: !11569, line: 410, type: !1539)
!11716 = !DILocation(line: 0, scope: !11713)
!11717 = !DILocation(line: 412, column: 3, scope: !11713)
!11718 = !DILocation(line: 413, column: 1, scope: !11713)
!11719 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !953, file: !953, line: 216, type: !1572, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11720)
!11720 = !{!11721, !11722, !11723, !11724}
!11721 = !DILocalVariable(name: "dev", arg: 1, scope: !11719, file: !953, line: 216, type: !1498)
!11722 = !DILocalVariable(name: "sys", arg: 2, scope: !11719, file: !953, line: 217, type: !1046)
!11723 = !DILocalVariable(name: "rate", arg: 3, scope: !11719, file: !953, line: 218, type: !1002)
!11724 = !DILocalVariable(name: "api", scope: !11719, file: !953, line: 220, type: !1550)
!11725 = !DILocation(line: 0, scope: !11719)
!11726 = !DILocation(line: 221, column: 49, scope: !11719)
!11727 = !DILocation(line: 223, column: 11, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11719, file: !953, line: 223, column: 6)
!11729 = !DILocation(line: 223, column: 20, scope: !11728)
!11730 = !DILocation(line: 223, column: 6, scope: !11719)
!11731 = !DILocation(line: 227, column: 9, scope: !11719)
!11732 = !DILocation(line: 227, column: 2, scope: !11719)
!11733 = !DILocation(line: 228, column: 1, scope: !11719)
!11734 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7132, file: !7132, line: 175, type: !7133, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11735)
!11735 = !{!11736}
!11736 = !DILocalVariable(name: "level", arg: 1, scope: !11734, file: !7132, line: 175, type: !107)
!11737 = !DILocation(line: 0, scope: !11734)
!11738 = !DILocation(line: 177, column: 2, scope: !11734)
!11739 = !DILocation(line: 189, column: 1, scope: !11734)
!11740 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11569, file: !11569, line: 615, type: !11741, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11743)
!11741 = !DISubroutineType(types: !11742)
!11742 = !{null, !1539, !108}
!11743 = !{!11744, !11745}
!11744 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11740, file: !11569, line: 615, type: !1539)
!11745 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11740, file: !11569, line: 615, type: !108)
!11746 = !DILocation(line: 0, scope: !11740)
!11747 = !DILocation(line: 617, column: 3, scope: !11740)
!11748 = !DILocation(line: 618, column: 1, scope: !11740)
!11749 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11569, file: !11569, line: 1020, type: !11750, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11752)
!11750 = !DISubroutineType(types: !11751)
!11751 = !{null, !1539, !108, !108, !108}
!11752 = !{!11753, !11754, !11755, !11756}
!11753 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11749, file: !11569, line: 1020, type: !1539)
!11754 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11749, file: !11569, line: 1020, type: !108)
!11755 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11749, file: !11569, line: 1020, type: !108)
!11756 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11749, file: !11569, line: 1021, type: !108)
!11757 = !DILocation(line: 0, scope: !11749)
!11758 = !DILocation(line: 1029, column: 30, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !11569, line: 1028, column: 3)
!11760 = distinct !DILexicalBlock(scope: !11749, file: !11569, line: 1023, column: 7)
!11761 = !DILocation(line: 1029, column: 19, scope: !11759)
!11762 = !DILocation(line: 1029, column: 13, scope: !11759)
!11763 = !DILocation(line: 1029, column: 17, scope: !11759)
!11764 = !DILocation(line: 1031, column: 1, scope: !11749)
!11765 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11569, file: !11569, line: 949, type: !11741, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11766)
!11766 = !{!11767, !11768}
!11767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11765, file: !11569, line: 949, type: !1539)
!11768 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11765, file: !11569, line: 949, type: !108)
!11769 = !DILocation(line: 0, scope: !11765)
!11770 = !DILocation(line: 951, column: 3, scope: !11765)
!11771 = !DILocation(line: 952, column: 1, scope: !11765)
!11772 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11569, file: !11569, line: 588, type: !11741, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11773)
!11773 = !{!11774, !11775}
!11774 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11772, file: !11569, line: 588, type: !1539)
!11775 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11772, file: !11569, line: 588, type: !108)
!11776 = !DILocation(line: 0, scope: !11772)
!11777 = !DILocation(line: 590, column: 3, scope: !11772)
!11778 = !DILocation(line: 591, column: 1, scope: !11772)
!11779 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11569, file: !11569, line: 805, type: !11741, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11780)
!11780 = !{!11781, !11782}
!11781 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11779, file: !11569, line: 805, type: !1539)
!11782 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11779, file: !11569, line: 805, type: !108)
!11783 = !DILocation(line: 0, scope: !11779)
!11784 = !DILocation(line: 807, column: 3, scope: !11779)
!11785 = !DILocation(line: 808, column: 1, scope: !11779)
!11786 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11569, file: !11569, line: 532, type: !11741, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11787)
!11787 = !{!11788, !11789}
!11788 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11786, file: !11569, line: 532, type: !1539)
!11789 = !DILocalVariable(name: "Parity", arg: 2, scope: !11786, file: !11569, line: 532, type: !108)
!11790 = !DILocation(line: 0, scope: !11786)
!11791 = !DILocation(line: 534, column: 3, scope: !11786)
!11792 = !DILocation(line: 535, column: 1, scope: !11786)
!11793 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11569, file: !11569, line: 1770, type: !11570, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11794)
!11794 = !{!11795}
!11795 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11793, file: !11569, line: 1770, type: !1539)
!11796 = !DILocation(line: 0, scope: !11793)
!11797 = !DILocation(line: 1772, column: 11, scope: !11793)
!11798 = !DILocation(line: 1772, column: 46, scope: !11793)
!11799 = !DILocation(line: 1772, column: 3, scope: !11793)
!11800 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11569, file: !11569, line: 1737, type: !11570, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11801)
!11801 = !{!11802}
!11802 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11800, file: !11569, line: 1737, type: !1539)
!11803 = !DILocation(line: 0, scope: !11800)
!11804 = !DILocation(line: 1739, column: 11, scope: !11800)
!11805 = !DILocation(line: 1739, column: 3, scope: !11800)
!11806 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11569, file: !11569, line: 1748, type: !11570, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11807)
!11807 = !{!11808}
!11808 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11806, file: !11569, line: 1748, type: !1539)
!11809 = !DILocation(line: 0, scope: !11806)
!11810 = !DILocation(line: 1750, column: 11, scope: !11806)
!11811 = !DILocation(line: 1750, column: 45, scope: !11806)
!11812 = !DILocation(line: 1750, column: 3, scope: !11806)
!11813 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11569, file: !11569, line: 1827, type: !11570, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11814)
!11814 = !{!11815}
!11815 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11813, file: !11569, line: 1827, type: !1539)
!11816 = !DILocation(line: 0, scope: !11813)
!11817 = !DILocation(line: 1829, column: 11, scope: !11813)
!11818 = !DILocation(line: 1829, column: 46, scope: !11813)
!11819 = !DILocation(line: 1829, column: 3, scope: !11813)
!11820 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11569, file: !11569, line: 1992, type: !11632, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11821)
!11821 = !{!11822}
!11822 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11820, file: !11569, line: 1992, type: !1539)
!11823 = !DILocation(line: 0, scope: !11820)
!11824 = !DILocation(line: 1994, column: 3, scope: !11820)
!11825 = !DILocation(line: 1995, column: 1, scope: !11820)
!11826 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11569, file: !11569, line: 1934, type: !11632, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11827)
!11827 = !{!11828, !11829}
!11828 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11826, file: !11569, line: 1934, type: !1539)
!11829 = !DILocalVariable(name: "tmpreg", scope: !11826, file: !11569, line: 1936, type: !431)
!11830 = !DILocation(line: 0, scope: !11826)
!11831 = !DILocation(line: 1936, column: 3, scope: !11826)
!11832 = !DILocation(line: 1936, column: 17, scope: !11826)
!11833 = !DILocation(line: 1937, column: 20, scope: !11826)
!11834 = !DILocation(line: 1937, column: 10, scope: !11826)
!11835 = !DILocation(line: 1938, column: 10, scope: !11826)
!11836 = !DILocation(line: 1939, column: 20, scope: !11826)
!11837 = !DILocation(line: 1939, column: 10, scope: !11826)
!11838 = !DILocation(line: 1940, column: 10, scope: !11826)
!11839 = !DILocation(line: 1941, column: 1, scope: !11826)
!11840 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11569, file: !11569, line: 1877, type: !11632, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11841)
!11841 = !{!11842, !11843}
!11842 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11840, file: !11569, line: 1877, type: !1539)
!11843 = !DILocalVariable(name: "tmpreg", scope: !11840, file: !11569, line: 1879, type: !431)
!11844 = !DILocation(line: 0, scope: !11840)
!11845 = !DILocation(line: 1879, column: 3, scope: !11840)
!11846 = !DILocation(line: 1879, column: 17, scope: !11840)
!11847 = !DILocation(line: 1880, column: 20, scope: !11840)
!11848 = !DILocation(line: 1880, column: 10, scope: !11840)
!11849 = !DILocation(line: 1881, column: 10, scope: !11840)
!11850 = !DILocation(line: 1882, column: 20, scope: !11840)
!11851 = !DILocation(line: 1882, column: 10, scope: !11840)
!11852 = !DILocation(line: 1883, column: 10, scope: !11840)
!11853 = !DILocation(line: 1884, column: 1, scope: !11840)
!11854 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11569, file: !11569, line: 1896, type: !11632, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11855)
!11855 = !{!11856, !11857}
!11856 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11854, file: !11569, line: 1896, type: !1539)
!11857 = !DILocalVariable(name: "tmpreg", scope: !11854, file: !11569, line: 1898, type: !431)
!11858 = !DILocation(line: 0, scope: !11854)
!11859 = !DILocation(line: 1898, column: 3, scope: !11854)
!11860 = !DILocation(line: 1898, column: 17, scope: !11854)
!11861 = !DILocation(line: 1899, column: 20, scope: !11854)
!11862 = !DILocation(line: 1899, column: 10, scope: !11854)
!11863 = !DILocation(line: 1900, column: 10, scope: !11854)
!11864 = !DILocation(line: 1901, column: 20, scope: !11854)
!11865 = !DILocation(line: 1901, column: 10, scope: !11854)
!11866 = !DILocation(line: 1902, column: 10, scope: !11854)
!11867 = !DILocation(line: 1903, column: 1, scope: !11854)
!11868 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11569, file: !11569, line: 1915, type: !11632, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11869)
!11869 = !{!11870, !11871}
!11870 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11868, file: !11569, line: 1915, type: !1539)
!11871 = !DILocalVariable(name: "tmpreg", scope: !11868, file: !11569, line: 1917, type: !431)
!11872 = !DILocation(line: 0, scope: !11868)
!11873 = !DILocation(line: 1917, column: 3, scope: !11868)
!11874 = !DILocation(line: 1917, column: 17, scope: !11868)
!11875 = !DILocation(line: 1918, column: 20, scope: !11868)
!11876 = !DILocation(line: 1918, column: 10, scope: !11868)
!11877 = !DILocation(line: 1919, column: 10, scope: !11868)
!11878 = !DILocation(line: 1920, column: 20, scope: !11868)
!11879 = !DILocation(line: 1920, column: 10, scope: !11868)
!11880 = !DILocation(line: 1921, column: 10, scope: !11868)
!11881 = !DILocation(line: 1922, column: 1, scope: !11868)
!11882 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11569, file: !11569, line: 1814, type: !11570, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11883)
!11883 = !{!11884}
!11884 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11882, file: !11569, line: 1814, type: !1539)
!11885 = !DILocation(line: 0, scope: !11882)
!11886 = !DILocation(line: 1816, column: 11, scope: !11882)
!11887 = !DILocation(line: 1816, column: 46, scope: !11882)
!11888 = !DILocation(line: 1816, column: 3, scope: !11882)
!11889 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11569, file: !11569, line: 2426, type: !11890, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11892)
!11890 = !DISubroutineType(types: !11891)
!11891 = !{null, !1539, !190}
!11892 = !{!11893, !11894}
!11893 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11889, file: !11569, line: 2426, type: !1539)
!11894 = !DILocalVariable(name: "Value", arg: 2, scope: !11889, file: !11569, line: 2426, type: !190)
!11895 = !DILocation(line: 0, scope: !11889)
!11896 = !DILocation(line: 2428, column: 16, scope: !11889)
!11897 = !DILocation(line: 2428, column: 11, scope: !11889)
!11898 = !DILocation(line: 2428, column: 14, scope: !11889)
!11899 = !DILocation(line: 2429, column: 1, scope: !11889)
!11900 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11569, file: !11569, line: 1792, type: !11570, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11901)
!11901 = !{!11902}
!11902 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11900, file: !11569, line: 1792, type: !1539)
!11903 = !DILocation(line: 0, scope: !11900)
!11904 = !DILocation(line: 1794, column: 11, scope: !11900)
!11905 = !DILocation(line: 1794, column: 47, scope: !11900)
!11906 = !DILocation(line: 1794, column: 3, scope: !11900)
!11907 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11569, file: !11569, line: 2403, type: !11908, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11910)
!11908 = !DISubroutineType(types: !11909)
!11909 = !{!190, !1539}
!11910 = !{!11911}
!11911 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11907, file: !11569, line: 2403, type: !1539)
!11912 = !DILocation(line: 0, scope: !11907)
!11913 = !DILocation(line: 2405, column: 20, scope: !11907)
!11914 = !DILocation(line: 2405, column: 10, scope: !11907)
!11915 = !DILocation(line: 2405, column: 3, scope: !11907)
!11916 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1593, file: !1593, line: 1583, type: !1519, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11917)
!11917 = !{!11918, !11919, !11920, !11921, !11922, !11923}
!11918 = !DILocalVariable(name: "dev", arg: 1, scope: !11916, file: !1593, line: 1583, type: !1498)
!11919 = !DILocalVariable(name: "config", scope: !11916, file: !1593, line: 1585, type: !11260)
!11920 = !DILocalVariable(name: "data", scope: !11916, file: !1593, line: 1586, type: !11383)
!11921 = !DILocalVariable(name: "ll_parity", scope: !11916, file: !1593, line: 1587, type: !108)
!11922 = !DILocalVariable(name: "ll_datawidth", scope: !11916, file: !1593, line: 1588, type: !108)
!11923 = !DILocalVariable(name: "err", scope: !11916, file: !1593, line: 1589, type: !107)
!11924 = !DILocation(line: 0, scope: !11916)
!11925 = !DILocation(line: 1585, column: 48, scope: !11916)
!11926 = !DILocation(line: 1586, column: 38, scope: !11916)
!11927 = !DILocation(line: 1591, column: 2, scope: !11916)
!11928 = !DILocation(line: 1593, column: 29, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11916, file: !1593, line: 1593, column: 6)
!11930 = !DILocation(line: 1593, column: 7, scope: !11929)
!11931 = !DILocation(line: 1593, column: 6, scope: !11916)
!11932 = !DILocation(line: 1594, column: 3, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11934, file: !1593, line: 1594, column: 3)
!11934 = distinct !DILexicalBlock(scope: !11935, file: !1593, line: 1594, column: 3)
!11935 = distinct !DILexicalBlock(scope: !11936, file: !1593, line: 1594, column: 3)
!11936 = distinct !DILexicalBlock(scope: !11937, file: !1593, line: 1594, column: 3)
!11937 = distinct !DILexicalBlock(scope: !11929, file: !1593, line: 1593, column: 37)
!11938 = !DILocation(line: 1595, column: 3, scope: !11937)
!11939 = !DILocation(line: 1599, column: 31, scope: !11916)
!11940 = !DILocation(line: 1599, column: 71, scope: !11916)
!11941 = !DILocation(line: 1599, column: 8, scope: !11916)
!11942 = !DILocation(line: 1600, column: 10, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11916, file: !1593, line: 1600, column: 6)
!11944 = !DILocation(line: 1600, column: 6, scope: !11916)
!11945 = !DILocation(line: 1601, column: 3, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !1593, line: 1601, column: 3)
!11947 = distinct !DILexicalBlock(scope: !11948, file: !1593, line: 1601, column: 3)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !1593, line: 1601, column: 3)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !1593, line: 1601, column: 3)
!11950 = distinct !DILexicalBlock(scope: !11943, file: !1593, line: 1600, column: 16)
!11951 = !DILocation(line: 1602, column: 3, scope: !11950)
!11952 = !DILocation(line: 1616, column: 36, scope: !11916)
!11953 = !DILocation(line: 1616, column: 8, scope: !11916)
!11954 = !DILocation(line: 1617, column: 10, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11916, file: !1593, line: 1617, column: 6)
!11956 = !DILocation(line: 1617, column: 6, scope: !11916)
!11957 = !DILocation(line: 1621, column: 27, scope: !11916)
!11958 = !DILocation(line: 1621, column: 2, scope: !11916)
!11959 = !DILocation(line: 1624, column: 40, scope: !11916)
!11960 = !DILocation(line: 1624, column: 2, scope: !11916)
!11961 = !DILocation(line: 1630, column: 14, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11916, file: !1593, line: 1630, column: 6)
!11963 = !DILocation(line: 1630, column: 6, scope: !11916)
!11964 = !DILocation(line: 1640, column: 4, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !1593, line: 1640, column: 4)
!11966 = distinct !DILexicalBlock(scope: !11967, file: !1593, line: 1640, column: 4)
!11967 = distinct !DILexicalBlock(scope: !11968, file: !1593, line: 1640, column: 4)
!11968 = distinct !DILexicalBlock(scope: !11969, file: !1593, line: 1640, column: 4)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !1593, line: 1639, column: 28)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !1593, line: 1639, column: 7)
!11971 = distinct !DILexicalBlock(scope: !11972, file: !1593, line: 1638, column: 9)
!11972 = distinct !DILexicalBlock(scope: !11962, file: !1593, line: 1634, column: 13)
!11973 = !DILocation(line: 0, scope: !11962)
!11974 = !DILocation(line: 1649, column: 35, scope: !11916)
!11975 = !DILocation(line: 1649, column: 2, scope: !11916)
!11976 = !DILocation(line: 1654, column: 14, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11916, file: !1593, line: 1654, column: 6)
!11978 = !DILocation(line: 1654, column: 6, scope: !11916)
!11979 = !DILocation(line: 1655, column: 3, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11977, file: !1593, line: 1654, column: 31)
!11981 = !DILocation(line: 1656, column: 2, scope: !11980)
!11982 = !DILocation(line: 1659, column: 37, scope: !11916)
!11983 = !DILocation(line: 1659, column: 2, scope: !11916)
!11984 = !DILocation(line: 1662, column: 14, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11916, file: !1593, line: 1662, column: 6)
!11986 = !DILocation(line: 1662, column: 6, scope: !11916)
!11987 = !DILocation(line: 1663, column: 37, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11985, file: !1593, line: 1662, column: 27)
!11989 = !DILocation(line: 1663, column: 3, scope: !11988)
!11990 = !DILocation(line: 1664, column: 2, scope: !11988)
!11991 = !DILocation(line: 1684, column: 26, scope: !11916)
!11992 = !DILocation(line: 1684, column: 2, scope: !11916)
!11993 = !DILocation(line: 1722, column: 2, scope: !11916)
!11994 = !DILocation(line: 1724, column: 1, scope: !11916)
!11995 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1593, file: !1593, line: 651, type: !11996, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11998)
!11996 = !DISubroutineType(types: !11997)
!11997 = !{null, !1498}
!11998 = !{!11999, !12000, !12001}
!11999 = !DILocalVariable(name: "dev", arg: 1, scope: !11995, file: !1593, line: 651, type: !1498)
!12000 = !DILocalVariable(name: "data", scope: !11995, file: !1593, line: 653, type: !11383)
!12001 = !DILocalVariable(name: "clk", scope: !11995, file: !1593, line: 654, type: !12002)
!12002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!12003 = !DILocation(line: 0, scope: !11995)
!12004 = !DILocation(line: 653, column: 38, scope: !11995)
!12005 = !DILocation(line: 656, column: 8, scope: !11995)
!12006 = !DILocation(line: 656, column: 14, scope: !11995)
!12007 = !DILocation(line: 657, column: 1, scope: !11995)
!12008 = distinct !DISubprogram(name: "device_is_ready", scope: !10398, file: !10398, line: 47, type: !12009, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12011)
!12009 = !DISubroutineType(types: !12010)
!12010 = !{!136, !1498}
!12011 = !{!12012}
!12012 = !DILocalVariable(name: "dev", arg: 1, scope: !12008, file: !10398, line: 47, type: !1498)
!12013 = !DILocation(line: 0, scope: !12008)
!12014 = !DILocation(line: 55, column: 2, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12008, file: !10398, line: 55, column: 2)
!12016 = !{i64 2155035353}
!12017 = !DILocation(line: 56, column: 9, scope: !12008)
!12018 = !DILocation(line: 56, column: 2, scope: !12008)
!12019 = distinct !DISubprogram(name: "clock_control_on", scope: !953, file: !953, line: 123, type: !1557, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12020)
!12020 = !{!12021, !12022, !12023}
!12021 = !DILocalVariable(name: "dev", arg: 1, scope: !12019, file: !953, line: 123, type: !1498)
!12022 = !DILocalVariable(name: "sys", arg: 2, scope: !12019, file: !953, line: 124, type: !1046)
!12023 = !DILocalVariable(name: "api", scope: !12019, file: !953, line: 126, type: !1550)
!12024 = !DILocation(line: 0, scope: !12019)
!12025 = !DILocation(line: 127, column: 49, scope: !12019)
!12026 = !DILocation(line: 129, column: 14, scope: !12019)
!12027 = !DILocation(line: 129, column: 9, scope: !12019)
!12028 = !DILocation(line: 129, column: 2, scope: !12019)
!12029 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1633, file: !1633, line: 342, type: !12030, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12032)
!12030 = !DISubroutineType(types: !12031)
!12031 = !{!107, !1630, !190}
!12032 = !{!12033, !12034, !12035, !12036}
!12033 = !DILocalVariable(name: "config", arg: 1, scope: !12029, file: !1633, line: 342, type: !1630)
!12034 = !DILocalVariable(name: "id", arg: 2, scope: !12029, file: !1633, line: 343, type: !190)
!12035 = !DILocalVariable(name: "ret", scope: !12029, file: !1633, line: 345, type: !107)
!12036 = !DILocalVariable(name: "state", scope: !12029, file: !1633, line: 346, type: !1636)
!12037 = !DILocation(line: 0, scope: !12029)
!12038 = !DILocation(line: 346, column: 2, scope: !12029)
!12039 = !DILocation(line: 348, column: 8, scope: !12029)
!12040 = !DILocation(line: 349, column: 10, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12029, file: !1633, line: 349, column: 6)
!12042 = !DILocation(line: 349, column: 6, scope: !12029)
!12043 = !DILocation(line: 353, column: 44, scope: !12029)
!12044 = !DILocation(line: 353, column: 9, scope: !12029)
!12045 = !DILocation(line: 353, column: 2, scope: !12029)
!12046 = !DILocation(line: 354, column: 1, scope: !12029)
!12047 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11569, file: !11569, line: 497, type: !11741, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12048)
!12048 = !{!12049, !12050, !12051}
!12049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12047, file: !11569, line: 497, type: !1539)
!12050 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12047, file: !11569, line: 497, type: !108)
!12051 = !DILocalVariable(name: "val", scope: !12052, file: !11569, line: 499, type: !108)
!12052 = distinct !DILexicalBlock(scope: !12047, file: !11569, line: 499, column: 3)
!12053 = !DILocation(line: 0, scope: !12047)
!12054 = !DILocation(line: 499, column: 3, scope: !12052)
!12055 = !DILocalVariable(name: "addr", arg: 1, scope: !12056, file: !7375, line: 476, type: !1589)
!12056 = distinct !DISubprogram(name: "__LDREXW", scope: !7375, file: !7375, line: 476, type: !12057, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12059)
!12057 = !DISubroutineType(types: !12058)
!12058 = !{!108, !1589}
!12059 = !{!12055, !12060}
!12060 = !DILocalVariable(name: "result", scope: !12056, file: !7375, line: 478, type: !108)
!12061 = !DILocation(line: 0, scope: !12056, inlinedAt: !12062)
!12062 = distinct !DILocation(line: 499, column: 3, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12052, file: !11569, line: 499, column: 3)
!12064 = !DILocation(line: 480, column: 4, scope: !12056, inlinedAt: !12062)
!12065 = !{i64 3528914}
!12066 = !DILocation(line: 499, column: 3, scope: !12063)
!12067 = !DILocation(line: 0, scope: !12052)
!12068 = !DILocalVariable(name: "value", arg: 1, scope: !12069, file: !7375, line: 527, type: !108)
!12069 = distinct !DISubprogram(name: "__STREXW", scope: !7375, file: !7375, line: 527, type: !12070, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12072)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!108, !108, !1589}
!12072 = !{!12068, !12073, !12074}
!12073 = !DILocalVariable(name: "addr", arg: 2, scope: !12069, file: !7375, line: 527, type: !1589)
!12074 = !DILocalVariable(name: "result", scope: !12069, file: !7375, line: 529, type: !108)
!12075 = !DILocation(line: 0, scope: !12069, inlinedAt: !12076)
!12076 = distinct !DILocation(line: 499, column: 3, scope: !12052)
!12077 = !DILocation(line: 531, column: 4, scope: !12069, inlinedAt: !12076)
!12078 = !{i64 3530350}
!12079 = distinct !{!12079, !12054, !12054}
!12080 = !DILocation(line: 500, column: 1, scope: !12047)
!12081 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11569, file: !11569, line: 850, type: !11750, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12082)
!12082 = !{!12083, !12084, !12085, !12086}
!12083 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12081, file: !11569, line: 850, type: !1539)
!12084 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12081, file: !11569, line: 850, type: !108)
!12085 = !DILocalVariable(name: "Parity", arg: 3, scope: !12081, file: !11569, line: 850, type: !108)
!12086 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12081, file: !11569, line: 851, type: !108)
!12087 = !DILocation(line: 0, scope: !12081)
!12088 = !DILocation(line: 853, column: 3, scope: !12081)
!12089 = !DILocation(line: 854, column: 3, scope: !12081)
!12090 = !DILocation(line: 855, column: 1, scope: !12081)
!12091 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11569, file: !11569, line: 1337, type: !11632, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12092)
!12092 = !{!12093}
!12093 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12091, file: !11569, line: 1337, type: !1539)
!12094 = !DILocation(line: 0, scope: !12091)
!12095 = !DILocation(line: 1339, column: 3, scope: !12091)
!12096 = !DILocation(line: 1340, column: 1, scope: !12091)
!12097 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1633, file: !1633, line: 316, type: !12098, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12100)
!12098 = !DISubroutineType(types: !12099)
!12099 = !{!107, !1630, !1636}
!12100 = !{!12101, !12102, !12103}
!12101 = !DILocalVariable(name: "config", arg: 1, scope: !12097, file: !1633, line: 317, type: !1630)
!12102 = !DILocalVariable(name: "state", arg: 2, scope: !12097, file: !1633, line: 318, type: !1636)
!12103 = !DILocalVariable(name: "reg", scope: !12097, file: !1633, line: 320, type: !22)
!12104 = !DILocation(line: 0, scope: !12097)
!12105 = !DILocation(line: 329, column: 39, scope: !12097)
!12106 = !DILocation(line: 329, column: 52, scope: !12097)
!12107 = !DILocation(line: 329, column: 9, scope: !12097)
!12108 = !DILocation(line: 329, column: 2, scope: !12097)
!12109 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !12009, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !12110)
!12110 = !{!12111}
!12111 = !DILocalVariable(name: "dev", arg: 1, scope: !12109, file: !451, line: 730, type: !1498)
!12112 = !DILocation(line: 0, scope: !12109)
!12113 = !DILocation(line: 732, column: 9, scope: !12109)
!12114 = !DILocation(line: 732, column: 2, scope: !12109)
!12115 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1754, file: !1754, line: 270, type: !1760, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12116)
!12116 = !{!12117}
!12117 = !DILocalVariable(name: "dev", arg: 1, scope: !12115, file: !1754, line: 270, type: !1762)
!12118 = !DILocation(line: 0, scope: !12115)
!12119 = !DILocation(line: 274, column: 2, scope: !12115)
!12120 = !DILocation(line: 275, column: 12, scope: !12115)
!12121 = !DILocation(line: 276, column: 15, scope: !12115)
!12122 = !DILocation(line: 277, column: 16, scope: !12115)
!12123 = !DILocation(line: 278, column: 15, scope: !12115)
!12124 = !DILocation(line: 279, column: 16, scope: !12115)
!12125 = !DILocation(line: 282, column: 2, scope: !12115)
!12126 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7409, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12127)
!12127 = !{!12128, !12129}
!12128 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12126, file: !644, line: 1814, type: !911)
!12129 = !DILocalVariable(name: "priority", arg: 2, scope: !12126, file: !644, line: 1814, type: !108)
!12130 = !DILocation(line: 0, scope: !12126)
!12131 = !DILocation(line: 1822, column: 46, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12133, file: !644, line: 1821, column: 3)
!12133 = distinct !DILexicalBlock(scope: !12126, file: !644, line: 1816, column: 7)
!12134 = !DILocation(line: 1824, column: 1, scope: !12126)
!12135 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1754, file: !1754, line: 118, type: !7312, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12136)
!12136 = !{!12137, !12138}
!12137 = !DILocalVariable(name: "arg", arg: 1, scope: !12135, file: !1754, line: 118, type: !106)
!12138 = !DILocalVariable(name: "dticks", scope: !12135, file: !1754, line: 121, type: !108)
!12139 = !DILocation(line: 0, scope: !12135)
!12140 = !DILocation(line: 124, column: 2, scope: !12135)
!12141 = !DILocation(line: 129, column: 17, scope: !12135)
!12142 = !DILocation(line: 129, column: 14, scope: !12135)
!12143 = !DILocation(line: 130, column: 15, scope: !12135)
!12144 = !DILocation(line: 145, column: 27, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !1754, line: 132, column: 16)
!12146 = distinct !DILexicalBlock(scope: !12135, file: !1754, line: 132, column: 6)
!12147 = !DILocation(line: 145, column: 25, scope: !12145)
!12148 = !DILocation(line: 145, column: 45, scope: !12145)
!12149 = !DILocation(line: 146, column: 30, scope: !12145)
!12150 = !DILocation(line: 146, column: 20, scope: !12145)
!12151 = !DILocation(line: 147, column: 3, scope: !12145)
!12152 = !DILocation(line: 151, column: 2, scope: !12135)
!12153 = !DILocation(line: 152, column: 1, scope: !12135)
!12154 = distinct !DISubprogram(name: "elapsed", scope: !1754, file: !1754, line: 85, type: !7456, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12155)
!12155 = !{!12156, !12157, !12158}
!12156 = !DILocalVariable(name: "val1", scope: !12154, file: !1754, line: 87, type: !108)
!12157 = !DILocalVariable(name: "ctrl", scope: !12154, file: !1754, line: 88, type: !108)
!12158 = !DILocalVariable(name: "val2", scope: !12154, file: !1754, line: 89, type: !108)
!12159 = !DILocation(line: 87, column: 27, scope: !12154)
!12160 = !DILocation(line: 0, scope: !12154)
!12161 = !DILocation(line: 88, column: 27, scope: !12154)
!12162 = !DILocation(line: 89, column: 27, scope: !12154)
!12163 = !DILocation(line: 105, column: 12, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12154, file: !1754, line: 105, column: 6)
!12165 = !DILocation(line: 106, column: 6, scope: !12164)
!12166 = !DILocation(line: 107, column: 16, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12164, file: !1754, line: 106, column: 24)
!12168 = !DILocation(line: 111, column: 18, scope: !12167)
!12169 = !DILocation(line: 112, column: 2, scope: !12167)
!12170 = !DILocation(line: 114, column: 20, scope: !12154)
!12171 = !DILocation(line: 114, column: 30, scope: !12154)
!12172 = !DILocation(line: 114, column: 28, scope: !12154)
!12173 = !DILocation(line: 114, column: 2, scope: !12154)
!12174 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1754, file: !1754, line: 154, type: !12175, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12177)
!12175 = !DISubroutineType(types: !12176)
!12176 = !{null, !334, !136}
!12177 = !{!12178, !12179, !12180, !12181, !12182, !12183, !12184, !12189, !12190}
!12178 = !DILocalVariable(name: "ticks", arg: 1, scope: !12174, file: !1754, line: 154, type: !334)
!12179 = !DILocalVariable(name: "idle", arg: 2, scope: !12174, file: !1754, line: 154, type: !136)
!12180 = !DILocalVariable(name: "delay", scope: !12174, file: !1754, line: 169, type: !108)
!12181 = !DILocalVariable(name: "val1", scope: !12174, file: !1754, line: 170, type: !108)
!12182 = !DILocalVariable(name: "val2", scope: !12174, file: !1754, line: 170, type: !108)
!12183 = !DILocalVariable(name: "last_load_", scope: !12174, file: !1754, line: 171, type: !108)
!12184 = !DILocalVariable(name: "key", scope: !12174, file: !1754, line: 176, type: !12185)
!12185 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !12186)
!12186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !12187)
!12187 = !{!12188}
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12186, file: !255, line: 33, baseType: !107, size: 32)
!12189 = !DILocalVariable(name: "pending", scope: !12174, file: !1754, line: 178, type: !108)
!12190 = !DILocalVariable(name: "unannounced", scope: !12174, file: !1754, line: 185, type: !108)
!12191 = !DILocation(line: 0, scope: !12174)
!12192 = !DILocation(line: 162, column: 49, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12174, file: !1754, line: 162, column: 6)
!12194 = !DILocation(line: 163, column: 17, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12193, file: !1754, line: 162, column: 78)
!12196 = !DILocation(line: 164, column: 13, scope: !12195)
!12197 = !DILocation(line: 165, column: 3, scope: !12195)
!12198 = !DILocation(line: 171, column: 24, scope: !12174)
!12199 = !DILocation(line: 173, column: 10, scope: !12174)
!12200 = !DILocation(line: 174, column: 10, scope: !12174)
!12201 = !DILocalVariable(name: "l", arg: 1, scope: !12202, file: !255, line: 136, type: !12205)
!12202 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !12203, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12206)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{!12185, !12205}
!12205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!12206 = !{!12201, !12207}
!12207 = !DILocalVariable(name: "k", scope: !12202, file: !255, line: 139, type: !12185)
!12208 = !DILocation(line: 0, scope: !12202, inlinedAt: !12209)
!12209 = distinct !DILocation(line: 176, column: 25, scope: !12174)
!12210 = !DILocation(line: 55, column: 2, scope: !12211, inlinedAt: !12215)
!12211 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12212)
!12212 = !{!12213, !12214}
!12213 = !DILocalVariable(name: "key", scope: !12211, file: !7054, line: 44, type: !32)
!12214 = !DILocalVariable(name: "tmp", scope: !12211, file: !7054, line: 53, type: !32)
!12215 = distinct !DILocation(line: 145, column: 10, scope: !12202, inlinedAt: !12209)
!12216 = !{i64 2222255}
!12217 = !DILocation(line: 0, scope: !12211, inlinedAt: !12215)
!12218 = !DILocation(line: 178, column: 21, scope: !12174)
!12219 = !DILocation(line: 180, column: 18, scope: !12174)
!12220 = !DILocation(line: 182, column: 14, scope: !12174)
!12221 = !DILocation(line: 183, column: 15, scope: !12174)
!12222 = !DILocation(line: 185, column: 39, scope: !12174)
!12223 = !DILocation(line: 185, column: 37, scope: !12174)
!12224 = !DILocation(line: 187, column: 27, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12174, file: !1754, line: 187, column: 6)
!12226 = !DILocation(line: 187, column: 6, scope: !12174)
!12227 = !DILocation(line: 202, column: 27, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12225, file: !1754, line: 195, column: 9)
!12229 = !DILocation(line: 202, column: 48, scope: !12228)
!12230 = !DILocation(line: 203, column: 9, scope: !12228)
!12231 = !DILocation(line: 204, column: 11, scope: !12228)
!12232 = !DILocation(line: 205, column: 13, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12228, file: !1754, line: 205, column: 7)
!12234 = !DILocation(line: 205, column: 7, scope: !12228)
!12235 = !DILocation(line: 0, scope: !12225)
!12236 = !DILocation(line: 212, column: 18, scope: !12174)
!12237 = !DILocation(line: 214, column: 28, scope: !12174)
!12238 = !DILocation(line: 214, column: 16, scope: !12174)
!12239 = !DILocation(line: 215, column: 15, scope: !12174)
!12240 = !DILocation(line: 227, column: 11, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12174, file: !1754, line: 227, column: 6)
!12242 = !DILocation(line: 227, column: 6, scope: !12174)
!12243 = !DILocation(line: 228, column: 15, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12241, file: !1754, line: 227, column: 19)
!12245 = !DILocation(line: 228, column: 38, scope: !12244)
!12246 = !DILocation(line: 228, column: 24, scope: !12244)
!12247 = !DILocation(line: 229, column: 2, scope: !12244)
!12248 = !DILocation(line: 230, column: 24, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12241, file: !1754, line: 229, column: 9)
!12250 = !DILocation(line: 230, column: 15, scope: !12249)
!12251 = !DILocation(line: 0, scope: !12241)
!12252 = !DILocalVariable(name: "key", arg: 2, scope: !12253, file: !255, line: 190, type: !12185)
!12253 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !12254, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12256)
!12254 = !DISubroutineType(types: !12255)
!12255 = !{null, !12205, !12185}
!12256 = !{!12257, !12252}
!12257 = !DILocalVariable(name: "l", arg: 1, scope: !12253, file: !255, line: 189, type: !12205)
!12258 = !DILocation(line: 0, scope: !12253, inlinedAt: !12259)
!12259 = distinct !DILocation(line: 232, column: 2, scope: !12174)
!12260 = !DILocalVariable(name: "key", arg: 1, scope: !12261, file: !7054, line: 84, type: !32)
!12261 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12262)
!12262 = !{!12260}
!12263 = !DILocation(line: 0, scope: !12261, inlinedAt: !12264)
!12264 = distinct !DILocation(line: 215, column: 2, scope: !12253, inlinedAt: !12259)
!12265 = !DILocation(line: 95, column: 2, scope: !12261, inlinedAt: !12264)
!12266 = !{i64 2223072}
!12267 = !DILocation(line: 234, column: 1, scope: !12174)
!12268 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1754, file: !1754, line: 236, type: !7456, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12269)
!12269 = !{!12270, !12271}
!12270 = !DILocalVariable(name: "key", scope: !12268, file: !1754, line: 242, type: !12185)
!12271 = !DILocalVariable(name: "cyc", scope: !12268, file: !1754, line: 243, type: !108)
!12272 = !DILocation(line: 0, scope: !12202, inlinedAt: !12273)
!12273 = distinct !DILocation(line: 242, column: 25, scope: !12268)
!12274 = !DILocation(line: 55, column: 2, scope: !12211, inlinedAt: !12275)
!12275 = distinct !DILocation(line: 145, column: 10, scope: !12202, inlinedAt: !12273)
!12276 = !DILocation(line: 0, scope: !12211, inlinedAt: !12275)
!12277 = !DILocation(line: 0, scope: !12268)
!12278 = !DILocation(line: 243, column: 17, scope: !12268)
!12279 = !DILocation(line: 243, column: 29, scope: !12268)
!12280 = !DILocation(line: 243, column: 27, scope: !12268)
!12281 = !DILocation(line: 243, column: 43, scope: !12268)
!12282 = !DILocation(line: 243, column: 41, scope: !12268)
!12283 = !DILocation(line: 0, scope: !12253, inlinedAt: !12284)
!12284 = distinct !DILocation(line: 245, column: 2, scope: !12268)
!12285 = !DILocation(line: 0, scope: !12261, inlinedAt: !12286)
!12286 = distinct !DILocation(line: 215, column: 2, scope: !12253, inlinedAt: !12284)
!12287 = !DILocation(line: 95, column: 2, scope: !12261, inlinedAt: !12286)
!12288 = !DILocation(line: 246, column: 13, scope: !12268)
!12289 = !DILocation(line: 246, column: 2, scope: !12268)
!12290 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1754, file: !1754, line: 249, type: !7456, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12291)
!12291 = !{!12292, !12293}
!12292 = !DILocalVariable(name: "key", scope: !12290, file: !1754, line: 251, type: !12185)
!12293 = !DILocalVariable(name: "ret", scope: !12290, file: !1754, line: 252, type: !108)
!12294 = !DILocation(line: 0, scope: !12202, inlinedAt: !12295)
!12295 = distinct !DILocation(line: 251, column: 25, scope: !12290)
!12296 = !DILocation(line: 55, column: 2, scope: !12211, inlinedAt: !12297)
!12297 = distinct !DILocation(line: 145, column: 10, scope: !12202, inlinedAt: !12295)
!12298 = !DILocation(line: 0, scope: !12211, inlinedAt: !12297)
!12299 = !DILocation(line: 0, scope: !12290)
!12300 = !DILocation(line: 252, column: 17, scope: !12290)
!12301 = !DILocation(line: 252, column: 29, scope: !12290)
!12302 = !DILocation(line: 252, column: 27, scope: !12290)
!12303 = !DILocation(line: 0, scope: !12253, inlinedAt: !12304)
!12304 = distinct !DILocation(line: 254, column: 2, scope: !12290)
!12305 = !DILocation(line: 0, scope: !12261, inlinedAt: !12306)
!12306 = distinct !DILocation(line: 215, column: 2, scope: !12253, inlinedAt: !12304)
!12307 = !DILocation(line: 95, column: 2, scope: !12261, inlinedAt: !12306)
!12308 = !DILocation(line: 255, column: 2, scope: !12290)
!12309 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1754, file: !1754, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !256)
!12310 = !DILocation(line: 260, column: 6, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12309, file: !1754, line: 260, column: 6)
!12312 = !DILocation(line: 260, column: 16, scope: !12311)
!12313 = !DILocation(line: 260, column: 6, scope: !12309)
!12314 = !DILocation(line: 261, column: 17, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12311, file: !1754, line: 260, column: 34)
!12316 = !DILocation(line: 262, column: 2, scope: !12315)
!12317 = !DILocation(line: 263, column: 1, scope: !12309)
!12318 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1754, file: !1754, line: 265, type: !337, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !256)
!12319 = !DILocation(line: 267, column: 16, scope: !12318)
!12320 = !DILocation(line: 268, column: 1, scope: !12318)
!12321 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12322, file: !12322, line: 9, type: !12323, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3038, retainedNodes: !12346)
!12322 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12323 = !DISubroutineType(types: !12324)
!12324 = !{!107, !12325, !190, !12345}
!12325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12326, size: 32)
!12326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12327)
!12327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1633, line: 60, size: 64, elements: !12328)
!12328 = !{!12329, !12344}
!12329 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12327, file: !1633, line: 69, baseType: !12330, size: 32)
!12330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12331, size: 32)
!12331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12332)
!12332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1633, line: 50, size: 64, elements: !12333)
!12333 = !{!12334, !12342, !12343}
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12332, file: !1633, line: 52, baseType: !12335, size: 32)
!12335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12336, size: 32)
!12336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12337)
!12337 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1644, line: 37, baseType: !12338)
!12338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1644, line: 32, size: 64, elements: !12339)
!12339 = !{!12340, !12341}
!12340 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12338, file: !1644, line: 34, baseType: !108, size: 32)
!12341 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12338, file: !1644, line: 36, baseType: !108, size: 32, offset: 32)
!12342 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12332, file: !1633, line: 54, baseType: !190, size: 8, offset: 32)
!12343 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12332, file: !1633, line: 56, baseType: !190, size: 8, offset: 40)
!12344 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12327, file: !1633, line: 71, baseType: !190, size: 8, offset: 32)
!12345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12330, size: 32)
!12346 = !{!12347, !12348, !12349}
!12347 = !DILocalVariable(name: "config", arg: 1, scope: !12321, file: !12322, line: 9, type: !12325)
!12348 = !DILocalVariable(name: "id", arg: 2, scope: !12321, file: !12322, line: 9, type: !190)
!12349 = !DILocalVariable(name: "state", arg: 3, scope: !12321, file: !12322, line: 10, type: !12345)
!12350 = !DILocation(line: 0, scope: !12321)
!12351 = !DILocation(line: 12, column: 20, scope: !12321)
!12352 = !DILocation(line: 13, column: 27, scope: !12321)
!12353 = !DILocation(line: 13, column: 42, scope: !12321)
!12354 = !DILocation(line: 13, column: 19, scope: !12321)
!12355 = !DILocation(line: 13, column: 16, scope: !12321)
!12356 = !DILocation(line: 13, column: 2, scope: !12321)
!12357 = distinct !{!12357, !12356, !12358}
!12358 = !DILocation(line: 19, column: 2, scope: !12321)
!12359 = !DILocation(line: 14, column: 23, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12361, file: !12322, line: 14, column: 7)
!12361 = distinct !DILexicalBlock(scope: !12321, file: !12322, line: 13, column: 54)
!12362 = !DILocation(line: 14, column: 10, scope: !12360)
!12363 = !DILocation(line: 18, column: 11, scope: !12361)
!12364 = !DILocation(line: 14, column: 7, scope: !12361)
!12365 = !DILocation(line: 22, column: 1, scope: !12321)
!12366 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1871, file: !1871, line: 193, type: !12367, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1789, retainedNodes: !12376)
!12367 = !DISubroutineType(types: !12368)
!12368 = !{!107, !12369, !190, !22}
!12369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12370, size: 32)
!12370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12371)
!12371 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1644, line: 37, baseType: !12372)
!12372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1644, line: 32, size: 64, elements: !12373)
!12373 = !{!12374, !12375}
!12374 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12372, file: !1644, line: 34, baseType: !108, size: 32)
!12375 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12372, file: !1644, line: 36, baseType: !108, size: 32, offset: 32)
!12376 = !{!12377, !12378, !12379, !12380, !12381, !12382, !12383, !12384, !12386}
!12377 = !DILocalVariable(name: "pins", arg: 1, scope: !12366, file: !1871, line: 193, type: !12369)
!12378 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12366, file: !1871, line: 193, type: !190)
!12379 = !DILocalVariable(name: "reg", arg: 3, scope: !12366, file: !1871, line: 194, type: !22)
!12380 = !DILocalVariable(name: "pin", scope: !12366, file: !1871, line: 196, type: !108)
!12381 = !DILocalVariable(name: "mux", scope: !12366, file: !1871, line: 196, type: !108)
!12382 = !DILocalVariable(name: "pin_cgf", scope: !12366, file: !1871, line: 197, type: !108)
!12383 = !DILocalVariable(name: "ret", scope: !12366, file: !1871, line: 198, type: !107)
!12384 = !DILocalVariable(name: "i", scope: !12385, file: !1871, line: 209, type: !190)
!12385 = distinct !DILexicalBlock(scope: !12366, file: !1871, line: 209, column: 2)
!12386 = !DILocalVariable(name: "gpio_out", scope: !12387, file: !1871, line: 239, type: !108)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !1871, line: 238, column: 55)
!12388 = distinct !DILexicalBlock(scope: !12389, file: !1871, line: 238, column: 14)
!12389 = distinct !DILexicalBlock(scope: !12390, file: !1871, line: 236, column: 14)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !1871, line: 234, column: 7)
!12391 = distinct !DILexicalBlock(scope: !12392, file: !1871, line: 209, column: 41)
!12392 = distinct !DILexicalBlock(scope: !12385, file: !1871, line: 209, column: 2)
!12393 = !DILocation(line: 0, scope: !12366)
!12394 = !DILocation(line: 0, scope: !12385)
!12395 = !DILocation(line: 209, column: 25, scope: !12392)
!12396 = !DILocation(line: 209, column: 2, scope: !12385)
!12397 = distinct !{!12397, !12396, !12398}
!12398 = !DILocation(line: 259, column: 2, scope: !12385)
!12399 = !DILocation(line: 210, column: 17, scope: !12391)
!12400 = !DILocation(line: 234, column: 7, scope: !12390)
!12401 = !DILocation(line: 234, column: 33, scope: !12390)
!12402 = !DILocation(line: 234, column: 7, scope: !12391)
!12403 = !DILocation(line: 235, column: 22, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12390, file: !1871, line: 234, column: 49)
!12405 = !DILocation(line: 235, column: 29, scope: !12404)
!12406 = !DILocation(line: 236, column: 3, scope: !12404)
!12407 = !DILocation(line: 236, column: 14, scope: !12390)
!12408 = !DILocation(line: 239, column: 32, scope: !12387)
!12409 = !DILocation(line: 0, scope: !12387)
!12410 = !DILocation(line: 241, column: 8, scope: !12387)
!12411 = !DILocation(line: 246, column: 3, scope: !12387)
!12412 = !DILocation(line: 252, column: 9, scope: !12391)
!12413 = !DILocation(line: 255, column: 9, scope: !12391)
!12414 = !DILocation(line: 256, column: 11, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12391, file: !1871, line: 256, column: 7)
!12416 = !DILocation(line: 209, column: 37, scope: !12392)
!12417 = !DILocation(line: 256, column: 7, scope: !12391)
!12418 = !DILocation(line: 262, column: 1, scope: !12366)
!12419 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1871, file: !1871, line: 176, type: !12420, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1789, retainedNodes: !12422)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{!107, !108, !108, !108}
!12422 = !{!12423, !12424, !12425, !12426}
!12423 = !DILocalVariable(name: "pin", arg: 1, scope: !12419, file: !1871, line: 176, type: !108)
!12424 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12419, file: !1871, line: 176, type: !108)
!12425 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12419, file: !1871, line: 176, type: !108)
!12426 = !DILocalVariable(name: "port_device", scope: !12419, file: !1871, line: 178, type: !1801)
!12427 = !DILocation(line: 0, scope: !12419)
!12428 = !DILocation(line: 180, column: 22, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12419, file: !1871, line: 180, column: 6)
!12430 = !DILocation(line: 180, column: 6, scope: !12419)
!12431 = !DILocation(line: 180, column: 6, scope: !12429)
!12432 = !DILocation(line: 184, column: 16, scope: !12419)
!12433 = !DILocation(line: 186, column: 19, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12419, file: !1871, line: 186, column: 6)
!12435 = !DILocation(line: 186, column: 28, scope: !12434)
!12436 = !DILocation(line: 186, column: 33, scope: !12434)
!12437 = !DILocation(line: 186, column: 6, scope: !12419)
!12438 = !DILocation(line: 190, column: 43, scope: !12419)
!12439 = !DILocation(line: 190, column: 9, scope: !12419)
!12440 = !DILocation(line: 190, column: 2, scope: !12419)
!12441 = !DILocation(line: 191, column: 1, scope: !12419)
!12442 = distinct !DISubprogram(name: "device_is_ready", scope: !10398, file: !10398, line: 47, type: !12443, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1789, retainedNodes: !12445)
!12443 = !DISubroutineType(types: !12444)
!12444 = !{!136, !1801}
!12445 = !{!12446}
!12446 = !DILocalVariable(name: "dev", arg: 1, scope: !12442, file: !10398, line: 47, type: !1801)
!12447 = !DILocation(line: 0, scope: !12442)
!12448 = !DILocation(line: 55, column: 2, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12442, file: !10398, line: 55, column: 2)
!12450 = !{i64 2149460325}
!12451 = !DILocation(line: 56, column: 9, scope: !12442)
!12452 = !DILocation(line: 56, column: 2, scope: !12442)
!12453 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !12443, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1789, retainedNodes: !12454)
!12454 = !{!12455}
!12455 = !DILocalVariable(name: "dev", arg: 1, scope: !12453, file: !451, line: 730, type: !1801)
!12456 = !DILocation(line: 0, scope: !12453)
!12457 = !DILocation(line: 732, column: 9, scope: !12453)
!12458 = !DILocation(line: 732, column: 2, scope: !12453)
!12459 = distinct !DISubprogram(name: "SystemInit", scope: !1920, file: !1920, line: 167, type: !337, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !256)
!12460 = !DILocation(line: 182, column: 1, scope: !12459)
!12461 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1920, file: !1920, line: 220, type: !337, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !12462)
!12462 = !{!12463, !12464, !12465, !12466, !12467}
!12463 = !DILocalVariable(name: "tmp", scope: !12461, file: !1920, line: 222, type: !108)
!12464 = !DILocalVariable(name: "pllvco", scope: !12461, file: !1920, line: 222, type: !108)
!12465 = !DILocalVariable(name: "pllp", scope: !12461, file: !1920, line: 222, type: !108)
!12466 = !DILocalVariable(name: "pllsource", scope: !12461, file: !1920, line: 222, type: !108)
!12467 = !DILocalVariable(name: "pllm", scope: !12461, file: !1920, line: 222, type: !108)
!12468 = !DILocation(line: 0, scope: !12461)
!12469 = !DILocation(line: 225, column: 14, scope: !12461)
!12470 = !DILocation(line: 225, column: 19, scope: !12461)
!12471 = !DILocation(line: 227, column: 3, scope: !12461)
!12472 = !DILocation(line: 240, column: 25, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12461, file: !1920, line: 228, column: 3)
!12474 = !DILocation(line: 241, column: 19, scope: !12473)
!12475 = !DILocation(line: 241, column: 27, scope: !12473)
!12476 = !DILocation(line: 0, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12473, file: !1920, line: 243, column: 11)
!12478 = !DILocation(line: 254, column: 22, scope: !12473)
!12479 = !DILocation(line: 254, column: 62, scope: !12473)
!12480 = !DILocation(line: 255, column: 31, scope: !12473)
!12481 = !DILocation(line: 256, column: 7, scope: !12473)
!12482 = !DILocation(line: 0, scope: !12473)
!12483 = !DILocation(line: 263, column: 30, scope: !12461)
!12484 = !DILocation(line: 263, column: 52, scope: !12461)
!12485 = !DILocation(line: 263, column: 9, scope: !12461)
!12486 = !DILocation(line: 265, column: 19, scope: !12461)
!12487 = !DILocation(line: 266, column: 1, scope: !12461)
!12488 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12489, file: !12489, line: 200, type: !12490, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !256)
!12489 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12490 = !DISubroutineType(types: !12491)
!12491 = !{!12492}
!12492 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3044, line: 44, baseType: !3043)
!12493 = !DILocation(line: 202, column: 3, scope: !12488)
!12494 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12489, file: !12489, line: 219, type: !12495, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !12520)
!12495 = !DISubroutineType(types: !12496)
!12496 = !{!12492, !12497}
!12497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12498, size: 32)
!12498 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12499, line: 70, baseType: !12500)
!12499 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12499, line: 49, size: 416, elements: !12501)
!12501 = !{!12502, !12503, !12504, !12505, !12506, !12507, !12508}
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12500, file: !12499, line: 51, baseType: !108, size: 32)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12500, file: !12499, line: 54, baseType: !108, size: 32, offset: 32)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12500, file: !12499, line: 57, baseType: !108, size: 32, offset: 64)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12500, file: !12499, line: 60, baseType: !108, size: 32, offset: 96)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12500, file: !12499, line: 63, baseType: !108, size: 32, offset: 128)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12500, file: !12499, line: 66, baseType: !108, size: 32, offset: 160)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12500, file: !12499, line: 69, baseType: !12509, size: 224, offset: 192)
!12509 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12510, line: 73, baseType: !12511)
!12510 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12510, line: 45, size: 224, elements: !12512)
!12512 = !{!12513, !12514, !12515, !12516, !12517, !12518, !12519}
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12511, file: !12510, line: 47, baseType: !108, size: 32)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12511, file: !12510, line: 50, baseType: !108, size: 32, offset: 32)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12511, file: !12510, line: 53, baseType: !108, size: 32, offset: 64)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12511, file: !12510, line: 56, baseType: !108, size: 32, offset: 96)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12511, file: !12510, line: 60, baseType: !108, size: 32, offset: 128)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12511, file: !12510, line: 63, baseType: !108, size: 32, offset: 160)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12511, file: !12510, line: 68, baseType: !108, size: 32, offset: 192)
!12520 = !{!12521, !12522, !12523, !12524, !12528}
!12521 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12494, file: !12489, line: 219, type: !12497)
!12522 = !DILocalVariable(name: "tickstart", scope: !12494, file: !12489, line: 221, type: !108)
!12523 = !DILocalVariable(name: "pll_config", scope: !12494, file: !12489, line: 221, type: !108)
!12524 = !DILocalVariable(name: "pwrclkchanged", scope: !12525, file: !12489, line: 391, type: !12527)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !12489, line: 390, column: 3)
!12526 = distinct !DILexicalBlock(scope: !12494, file: !12489, line: 389, column: 6)
!12527 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !948, line: 188, baseType: !3050)
!12528 = !DILocalVariable(name: "tmpreg", scope: !12529, file: !12489, line: 400, type: !431)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !12489, line: 400, column: 7)
!12530 = distinct !DILexicalBlock(scope: !12531, file: !12489, line: 399, column: 5)
!12531 = distinct !DILexicalBlock(scope: !12525, file: !12489, line: 398, column: 8)
!12532 = !DILocation(line: 0, scope: !12494)
!12533 = !DILocation(line: 224, column: 24, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12494, file: !12489, line: 224, column: 6)
!12535 = !DILocation(line: 224, column: 6, scope: !12494)
!12536 = !DILocation(line: 232, column: 27, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12494, file: !12489, line: 232, column: 6)
!12538 = !DILocation(line: 232, column: 43, scope: !12537)
!12539 = !DILocation(line: 232, column: 69, scope: !12537)
!12540 = !DILocation(line: 232, column: 6, scope: !12494)
!12541 = !DILocation(line: 237, column: 9, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !12489, line: 237, column: 8)
!12543 = distinct !DILexicalBlock(scope: !12537, file: !12489, line: 233, column: 3)
!12544 = !DILocation(line: 237, column: 39, scope: !12542)
!12545 = !DILocation(line: 237, column: 60, scope: !12542)
!12546 = !DILocation(line: 238, column: 9, scope: !12542)
!12547 = !DILocation(line: 238, column: 39, scope: !12542)
!12548 = !DILocation(line: 238, column: 60, scope: !12542)
!12549 = !DILocation(line: 238, column: 70, scope: !12542)
!12550 = !DILocation(line: 238, column: 78, scope: !12542)
!12551 = !DILocation(line: 238, column: 100, scope: !12542)
!12552 = !DILocation(line: 237, column: 8, scope: !12543)
!12553 = !DILocation(line: 240, column: 11, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !12489, line: 240, column: 10)
!12555 = distinct !DILexicalBlock(scope: !12542, file: !12489, line: 239, column: 5)
!12556 = !DILocation(line: 240, column: 57, scope: !12554)
!12557 = !DILocation(line: 240, column: 80, scope: !12554)
!12558 = !DILocation(line: 240, column: 89, scope: !12554)
!12559 = !DILocation(line: 240, column: 10, scope: !12555)
!12560 = !DILocation(line: 248, column: 7, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12562, file: !12489, line: 248, column: 7)
!12562 = distinct !DILexicalBlock(scope: !12563, file: !12489, line: 248, column: 7)
!12563 = distinct !DILexicalBlock(scope: !12542, file: !12489, line: 246, column: 5)
!12564 = !DILocation(line: 248, column: 7, scope: !12562)
!12565 = !DILocation(line: 248, column: 7, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12561, file: !12489, line: 248, column: 7)
!12567 = !DILocation(line: 248, column: 7, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !12489, line: 248, column: 7)
!12569 = distinct !DILexicalBlock(scope: !12561, file: !12489, line: 248, column: 7)
!12570 = !DILocation(line: 248, column: 7, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12569, file: !12489, line: 248, column: 7)
!12572 = !DILocation(line: 0, scope: !12561)
!12573 = !DILocation(line: 251, column: 30, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12563, file: !12489, line: 251, column: 10)
!12575 = !DILocation(line: 251, column: 40, scope: !12574)
!12576 = !DILocation(line: 0, scope: !12574)
!12577 = !DILocation(line: 251, column: 10, scope: !12563)
!12578 = !DILocation(line: 257, column: 15, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12574, file: !12489, line: 252, column: 7)
!12580 = !DILocation(line: 257, column: 51, scope: !12579)
!12581 = !DILocation(line: 257, column: 9, scope: !12579)
!12582 = !DILocation(line: 259, column: 15, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12584, file: !12489, line: 259, column: 14)
!12584 = distinct !DILexicalBlock(scope: !12579, file: !12489, line: 258, column: 9)
!12585 = !DILocation(line: 259, column: 29, scope: !12583)
!12586 = !DILocation(line: 259, column: 43, scope: !12583)
!12587 = !DILocation(line: 259, column: 14, scope: !12584)
!12588 = distinct !{!12588, !12581, !12589}
!12589 = !DILocation(line: 263, column: 9, scope: !12579)
!12590 = !DILocation(line: 271, column: 15, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12574, file: !12489, line: 266, column: 7)
!12592 = !DILocation(line: 271, column: 9, scope: !12591)
!12593 = !DILocation(line: 273, column: 15, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12595, file: !12489, line: 273, column: 14)
!12595 = distinct !DILexicalBlock(scope: !12591, file: !12489, line: 272, column: 9)
!12596 = !DILocation(line: 273, column: 29, scope: !12594)
!12597 = !DILocation(line: 273, column: 43, scope: !12594)
!12598 = !DILocation(line: 273, column: 14, scope: !12595)
!12599 = distinct !{!12599, !12592, !12600}
!12600 = !DILocation(line: 277, column: 9, scope: !12591)
!12601 = !DILocation(line: 282, column: 27, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12494, file: !12489, line: 282, column: 6)
!12603 = !DILocation(line: 282, column: 43, scope: !12602)
!12604 = !DILocation(line: 282, column: 69, scope: !12602)
!12605 = !DILocation(line: 282, column: 6, scope: !12494)
!12606 = !DILocation(line: 289, column: 9, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !12489, line: 289, column: 8)
!12608 = distinct !DILexicalBlock(scope: !12602, file: !12489, line: 283, column: 3)
!12609 = !DILocation(line: 289, column: 39, scope: !12607)
!12610 = !DILocation(line: 289, column: 60, scope: !12607)
!12611 = !DILocation(line: 290, column: 9, scope: !12607)
!12612 = !DILocation(line: 290, column: 39, scope: !12607)
!12613 = !DILocation(line: 290, column: 60, scope: !12607)
!12614 = !DILocation(line: 290, column: 70, scope: !12607)
!12615 = !DILocation(line: 290, column: 78, scope: !12607)
!12616 = !DILocation(line: 290, column: 100, scope: !12607)
!12617 = !DILocation(line: 289, column: 8, scope: !12608)
!12618 = !DILocation(line: 293, column: 11, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12620, file: !12489, line: 293, column: 10)
!12620 = distinct !DILexicalBlock(scope: !12607, file: !12489, line: 291, column: 5)
!12621 = !DILocation(line: 293, column: 57, scope: !12619)
!12622 = !DILocation(line: 293, column: 80, scope: !12619)
!12623 = !DILocation(line: 293, column: 89, scope: !12619)
!12624 = !DILocation(line: 293, column: 10, scope: !12620)
!12625 = !DILocation(line: 307, column: 30, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12489, line: 307, column: 10)
!12627 = distinct !DILexicalBlock(scope: !12607, file: !12489, line: 305, column: 5)
!12628 = !DILocation(line: 307, column: 39, scope: !12626)
!12629 = !DILocation(line: 307, column: 10, scope: !12627)
!12630 = !DILocation(line: 310, column: 9, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12626, file: !12489, line: 308, column: 7)
!12632 = !DILocation(line: 313, column: 21, scope: !12631)
!12633 = !DILocation(line: 316, column: 9, scope: !12631)
!12634 = !DILocation(line: 316, column: 15, scope: !12631)
!12635 = !DILocation(line: 316, column: 51, scope: !12631)
!12636 = !DILocation(line: 318, column: 15, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12638, file: !12489, line: 318, column: 14)
!12638 = distinct !DILexicalBlock(scope: !12631, file: !12489, line: 317, column: 9)
!12639 = !DILocation(line: 318, column: 29, scope: !12637)
!12640 = !DILocation(line: 318, column: 43, scope: !12637)
!12641 = !DILocation(line: 318, column: 14, scope: !12638)
!12642 = distinct !{!12642, !12633, !12643}
!12643 = !DILocation(line: 322, column: 9, scope: !12631)
!12644 = !DILocation(line: 330, column: 9, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12626, file: !12489, line: 328, column: 7)
!12646 = !DILocation(line: 333, column: 21, scope: !12645)
!12647 = !DILocation(line: 336, column: 9, scope: !12645)
!12648 = !DILocation(line: 336, column: 15, scope: !12645)
!12649 = !DILocation(line: 338, column: 15, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12489, line: 338, column: 14)
!12651 = distinct !DILexicalBlock(scope: !12645, file: !12489, line: 337, column: 9)
!12652 = !DILocation(line: 338, column: 29, scope: !12650)
!12653 = !DILocation(line: 338, column: 43, scope: !12650)
!12654 = !DILocation(line: 338, column: 14, scope: !12651)
!12655 = distinct !{!12655, !12647, !12656}
!12656 = !DILocation(line: 342, column: 9, scope: !12645)
!12657 = !DILocation(line: 0, scope: !12607)
!12658 = !DILocation(line: 347, column: 27, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12494, file: !12489, line: 347, column: 6)
!12660 = !DILocation(line: 347, column: 43, scope: !12659)
!12661 = !DILocation(line: 347, column: 69, scope: !12659)
!12662 = !DILocation(line: 347, column: 6, scope: !12494)
!12663 = !DILocation(line: 353, column: 28, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !12489, line: 353, column: 8)
!12665 = distinct !DILexicalBlock(scope: !12659, file: !12489, line: 348, column: 3)
!12666 = !DILocation(line: 353, column: 37, scope: !12664)
!12667 = !DILocation(line: 353, column: 8, scope: !12665)
!12668 = !DILocation(line: 356, column: 7, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12664, file: !12489, line: 354, column: 5)
!12670 = !DILocation(line: 359, column: 19, scope: !12669)
!12671 = !DILocation(line: 362, column: 7, scope: !12669)
!12672 = !DILocation(line: 362, column: 13, scope: !12669)
!12673 = !DILocation(line: 362, column: 49, scope: !12669)
!12674 = !DILocation(line: 364, column: 13, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !12489, line: 364, column: 12)
!12676 = distinct !DILexicalBlock(scope: !12669, file: !12489, line: 363, column: 7)
!12677 = !DILocation(line: 364, column: 27, scope: !12675)
!12678 = !DILocation(line: 364, column: 41, scope: !12675)
!12679 = !DILocation(line: 364, column: 12, scope: !12676)
!12680 = distinct !{!12680, !12671, !12681}
!12681 = !DILocation(line: 368, column: 7, scope: !12669)
!12682 = !DILocation(line: 373, column: 7, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12664, file: !12489, line: 371, column: 5)
!12684 = !DILocation(line: 376, column: 19, scope: !12683)
!12685 = !DILocation(line: 379, column: 7, scope: !12683)
!12686 = !DILocation(line: 379, column: 13, scope: !12683)
!12687 = !DILocation(line: 381, column: 13, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12689, file: !12489, line: 381, column: 12)
!12689 = distinct !DILexicalBlock(scope: !12683, file: !12489, line: 380, column: 7)
!12690 = !DILocation(line: 381, column: 27, scope: !12688)
!12691 = !DILocation(line: 381, column: 41, scope: !12688)
!12692 = !DILocation(line: 381, column: 12, scope: !12689)
!12693 = distinct !{!12693, !12685, !12694}
!12694 = !DILocation(line: 385, column: 7, scope: !12683)
!12695 = !DILocation(line: 389, column: 27, scope: !12526)
!12696 = !DILocation(line: 389, column: 43, scope: !12526)
!12697 = !DILocation(line: 389, column: 69, scope: !12526)
!12698 = !DILocation(line: 389, column: 6, scope: !12494)
!12699 = !DILocation(line: 0, scope: !12525)
!12700 = !DILocation(line: 398, column: 8, scope: !12531)
!12701 = !DILocation(line: 398, column: 8, scope: !12525)
!12702 = !DILocation(line: 400, column: 7, scope: !12529)
!12703 = !DILocation(line: 400, column: 7, scope: !12530)
!12704 = !DILocation(line: 402, column: 5, scope: !12530)
!12705 = !DILocation(line: 404, column: 8, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12525, file: !12489, line: 404, column: 8)
!12707 = !DILocation(line: 404, column: 8, scope: !12525)
!12708 = !DILocation(line: 407, column: 7, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12706, file: !12489, line: 405, column: 5)
!12710 = !DILocation(line: 410, column: 19, scope: !12709)
!12711 = !DILocation(line: 412, column: 7, scope: !12709)
!12712 = !DILocation(line: 412, column: 13, scope: !12709)
!12713 = !DILocation(line: 414, column: 13, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12715, file: !12489, line: 414, column: 12)
!12715 = distinct !DILexicalBlock(scope: !12709, file: !12489, line: 413, column: 7)
!12716 = !DILocation(line: 414, column: 27, scope: !12714)
!12717 = !DILocation(line: 414, column: 40, scope: !12714)
!12718 = !DILocation(line: 414, column: 12, scope: !12715)
!12719 = distinct !{!12719, !12711, !12720}
!12720 = !DILocation(line: 418, column: 7, scope: !12709)
!12721 = !DILocation(line: 422, column: 5, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !12489, line: 422, column: 5)
!12723 = distinct !DILexicalBlock(scope: !12525, file: !12489, line: 422, column: 5)
!12724 = !DILocation(line: 422, column: 5, scope: !12723)
!12725 = !DILocation(line: 422, column: 5, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12722, file: !12489, line: 422, column: 5)
!12727 = !DILocation(line: 422, column: 5, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !12489, line: 422, column: 5)
!12729 = distinct !DILexicalBlock(scope: !12722, file: !12489, line: 422, column: 5)
!12730 = !DILocation(line: 422, column: 5, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12729, file: !12489, line: 422, column: 5)
!12732 = !DILocation(line: 0, scope: !12722)
!12733 = !DILocation(line: 424, column: 28, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12525, file: !12489, line: 424, column: 8)
!12735 = !DILocation(line: 424, column: 38, scope: !12734)
!12736 = !DILocation(line: 0, scope: !12734)
!12737 = !DILocation(line: 424, column: 8, scope: !12525)
!12738 = !DILocation(line: 430, column: 13, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12734, file: !12489, line: 425, column: 5)
!12740 = !DILocation(line: 430, column: 49, scope: !12739)
!12741 = !DILocation(line: 430, column: 7, scope: !12739)
!12742 = !DILocation(line: 432, column: 13, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12744, file: !12489, line: 432, column: 12)
!12744 = distinct !DILexicalBlock(scope: !12739, file: !12489, line: 431, column: 7)
!12745 = !DILocation(line: 432, column: 27, scope: !12743)
!12746 = !DILocation(line: 432, column: 41, scope: !12743)
!12747 = !DILocation(line: 432, column: 12, scope: !12744)
!12748 = distinct !{!12748, !12741, !12749}
!12749 = !DILocation(line: 436, column: 7, scope: !12739)
!12750 = !DILocation(line: 444, column: 13, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12734, file: !12489, line: 439, column: 5)
!12752 = !DILocation(line: 444, column: 7, scope: !12751)
!12753 = !DILocation(line: 446, column: 13, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12755, file: !12489, line: 446, column: 12)
!12755 = distinct !DILexicalBlock(scope: !12751, file: !12489, line: 445, column: 7)
!12756 = !DILocation(line: 446, column: 27, scope: !12754)
!12757 = !DILocation(line: 446, column: 41, scope: !12754)
!12758 = !DILocation(line: 446, column: 12, scope: !12755)
!12759 = distinct !{!12759, !12752, !12760}
!12760 = !DILocation(line: 450, column: 7, scope: !12751)
!12761 = !DILocation(line: 454, column: 8, scope: !12525)
!12762 = !DILocation(line: 456, column: 7, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12764, file: !12489, line: 455, column: 5)
!12764 = distinct !DILexicalBlock(scope: !12525, file: !12489, line: 454, column: 8)
!12765 = !DILocation(line: 457, column: 5, scope: !12763)
!12766 = !DILocation(line: 462, column: 31, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12494, file: !12489, line: 462, column: 7)
!12768 = !DILocation(line: 462, column: 41, scope: !12767)
!12769 = !DILocation(line: 462, column: 7, scope: !12494)
!12770 = !DILocation(line: 465, column: 8, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12772, file: !12489, line: 465, column: 8)
!12772 = distinct !DILexicalBlock(scope: !12767, file: !12489, line: 463, column: 3)
!12773 = !DILocation(line: 465, column: 38, scope: !12771)
!12774 = !DILocation(line: 465, column: 8, scope: !12772)
!12775 = !DILocation(line: 467, column: 44, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12777, file: !12489, line: 467, column: 10)
!12777 = distinct !DILexicalBlock(scope: !12771, file: !12489, line: 466, column: 5)
!12778 = !DILocation(line: 0, scope: !12776)
!12779 = !DILocation(line: 467, column: 10, scope: !12777)
!12780 = !DILocation(line: 483, column: 15, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12776, file: !12489, line: 468, column: 7)
!12782 = !DILocation(line: 483, column: 9, scope: !12781)
!12783 = !DILocation(line: 485, column: 15, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !12489, line: 485, column: 14)
!12785 = distinct !DILexicalBlock(scope: !12781, file: !12489, line: 484, column: 9)
!12786 = !DILocation(line: 485, column: 29, scope: !12784)
!12787 = !DILocation(line: 485, column: 43, scope: !12784)
!12788 = !DILocation(line: 485, column: 14, scope: !12785)
!12789 = distinct !{!12789, !12782, !12790}
!12790 = !DILocation(line: 489, column: 9, scope: !12781)
!12791 = !DILocation(line: 492, column: 9, scope: !12781)
!12792 = !DILocation(line: 498, column: 9, scope: !12781)
!12793 = !DILocation(line: 501, column: 21, scope: !12781)
!12794 = !DILocation(line: 504, column: 9, scope: !12781)
!12795 = !DILocation(line: 504, column: 15, scope: !12781)
!12796 = !DILocation(line: 504, column: 51, scope: !12781)
!12797 = !DILocation(line: 506, column: 15, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12799, file: !12489, line: 506, column: 14)
!12799 = distinct !DILexicalBlock(scope: !12781, file: !12489, line: 505, column: 9)
!12800 = !DILocation(line: 506, column: 29, scope: !12798)
!12801 = !DILocation(line: 506, column: 43, scope: !12798)
!12802 = !DILocation(line: 506, column: 14, scope: !12799)
!12803 = distinct !{!12803, !12794, !12804}
!12804 = !DILocation(line: 510, column: 9, scope: !12781)
!12805 = !DILocation(line: 521, column: 15, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12776, file: !12489, line: 513, column: 7)
!12807 = !DILocation(line: 521, column: 9, scope: !12806)
!12808 = !DILocation(line: 523, column: 15, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12810, file: !12489, line: 523, column: 14)
!12810 = distinct !DILexicalBlock(scope: !12806, file: !12489, line: 522, column: 9)
!12811 = !DILocation(line: 523, column: 29, scope: !12809)
!12812 = !DILocation(line: 523, column: 43, scope: !12809)
!12813 = !DILocation(line: 523, column: 14, scope: !12810)
!12814 = distinct !{!12814, !12807, !12815}
!12815 = !DILocation(line: 527, column: 9, scope: !12806)
!12816 = !DILocation(line: 533, column: 44, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12818, file: !12489, line: 533, column: 10)
!12818 = distinct !DILexicalBlock(scope: !12771, file: !12489, line: 531, column: 5)
!12819 = !DILocation(line: 533, column: 10, scope: !12818)
!12820 = !DILocation(line: 540, column: 27, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12817, file: !12489, line: 538, column: 7)
!12822 = !DILocation(line: 543, column: 14, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12821, file: !12489, line: 542, column: 13)
!12824 = !DILocation(line: 543, column: 81, scope: !12823)
!12825 = !DILocation(line: 543, column: 55, scope: !12823)
!12826 = !DILocation(line: 543, column: 92, scope: !12823)
!12827 = !DILocation(line: 544, column: 14, scope: !12823)
!12828 = !DILocation(line: 544, column: 80, scope: !12823)
!12829 = !DILocation(line: 544, column: 53, scope: !12823)
!12830 = !DILocation(line: 544, column: 111, scope: !12823)
!12831 = !DILocation(line: 545, column: 14, scope: !12823)
!12832 = !DILocation(line: 545, column: 80, scope: !12823)
!12833 = !DILocation(line: 545, column: 86, scope: !12823)
!12834 = !DILocation(line: 545, column: 53, scope: !12823)
!12835 = !DILocation(line: 545, column: 111, scope: !12823)
!12836 = !DILocation(line: 546, column: 14, scope: !12823)
!12837 = !DILocation(line: 546, column: 82, scope: !12823)
!12838 = !DILocation(line: 546, column: 101, scope: !12823)
!12839 = !DILocation(line: 546, column: 53, scope: !12823)
!12840 = !DILocation(line: 546, column: 126, scope: !12823)
!12841 = !DILocation(line: 547, column: 14, scope: !12823)
!12842 = !DILocation(line: 547, column: 80, scope: !12823)
!12843 = !DILocation(line: 547, column: 85, scope: !12823)
!12844 = !DILocation(line: 547, column: 53, scope: !12823)
!12845 = !DILocation(line: 547, column: 111, scope: !12823)
!12846 = !DILocation(line: 548, column: 14, scope: !12823)
!12847 = !DILocation(line: 548, column: 80, scope: !12823)
!12848 = !DILocation(line: 548, column: 85, scope: !12823)
!12849 = !DILocation(line: 548, column: 53, scope: !12823)
!12850 = !DILocation(line: 542, column: 13, scope: !12821)
!12851 = !DILocation(line: 563, column: 3, scope: !12494)
!12852 = !DILocation(line: 564, column: 1, scope: !12494)
!12853 = !DISubprogram(name: "HAL_GetTick", scope: !12854, file: !12854, line: 234, type: !7456, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!12854 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12855 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12489, file: !12489, line: 591, type: !12856, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !12867)
!12856 = !DISubroutineType(types: !12857)
!12857 = !{!12492, !12858, !108}
!12858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12859, size: 32)
!12859 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12499, line: 92, baseType: !12860)
!12860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12499, line: 75, size: 160, elements: !12861)
!12861 = !{!12862, !12863, !12864, !12865, !12866}
!12862 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12860, file: !12499, line: 77, baseType: !108, size: 32)
!12863 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12860, file: !12499, line: 80, baseType: !108, size: 32, offset: 32)
!12864 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12860, file: !12499, line: 83, baseType: !108, size: 32, offset: 64)
!12865 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12860, file: !12499, line: 86, baseType: !108, size: 32, offset: 96)
!12866 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12860, file: !12499, line: 89, baseType: !108, size: 32, offset: 128)
!12867 = !{!12868, !12869, !12870}
!12868 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12855, file: !12489, line: 591, type: !12858)
!12869 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12855, file: !12489, line: 591, type: !108)
!12870 = !DILocalVariable(name: "tickstart", scope: !12855, file: !12489, line: 593, type: !108)
!12871 = !DILocation(line: 0, scope: !12855)
!12872 = !DILocation(line: 596, column: 24, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12855, file: !12489, line: 596, column: 6)
!12874 = !DILocation(line: 596, column: 6, scope: !12855)
!12875 = !DILocation(line: 610, column: 17, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12855, file: !12489, line: 610, column: 6)
!12877 = !DILocation(line: 610, column: 15, scope: !12876)
!12878 = !DILocation(line: 610, column: 6, scope: !12855)
!12879 = !DILocation(line: 613, column: 5, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12876, file: !12489, line: 611, column: 3)
!12881 = !DILocation(line: 617, column: 8, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12880, file: !12489, line: 617, column: 8)
!12883 = !DILocation(line: 617, column: 34, scope: !12882)
!12884 = !DILocation(line: 617, column: 8, scope: !12880)
!12885 = !DILocation(line: 624, column: 27, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12855, file: !12489, line: 624, column: 6)
!12887 = !DILocation(line: 624, column: 38, scope: !12886)
!12888 = !DILocation(line: 624, column: 60, scope: !12886)
!12889 = !DILocation(line: 624, column: 6, scope: !12855)
!12890 = !DILocation(line: 628, column: 40, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12892, file: !12489, line: 628, column: 8)
!12892 = distinct !DILexicalBlock(scope: !12886, file: !12489, line: 625, column: 3)
!12893 = !DILocation(line: 628, column: 63, scope: !12891)
!12894 = !DILocation(line: 628, column: 8, scope: !12892)
!12895 = !DILocation(line: 630, column: 7, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12891, file: !12489, line: 629, column: 5)
!12897 = !DILocation(line: 633, column: 29, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12892, file: !12489, line: 633, column: 8)
!12899 = !DILocation(line: 631, column: 5, scope: !12896)
!12900 = !DILocation(line: 633, column: 40, scope: !12898)
!12901 = !DILocation(line: 633, column: 63, scope: !12898)
!12902 = !DILocation(line: 633, column: 8, scope: !12892)
!12903 = !DILocation(line: 635, column: 7, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12898, file: !12489, line: 634, column: 5)
!12905 = !DILocation(line: 636, column: 5, scope: !12904)
!12906 = !DILocation(line: 639, column: 5, scope: !12892)
!12907 = !DILocation(line: 643, column: 27, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12855, file: !12489, line: 643, column: 6)
!12909 = !DILocation(line: 640, column: 3, scope: !12892)
!12910 = !DILocation(line: 643, column: 38, scope: !12908)
!12911 = !DILocation(line: 643, column: 62, scope: !12908)
!12912 = !DILocation(line: 643, column: 6, scope: !12855)
!12913 = !DILocation(line: 648, column: 27, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12915, file: !12489, line: 648, column: 8)
!12915 = distinct !DILexicalBlock(scope: !12908, file: !12489, line: 644, column: 3)
!12916 = !DILocation(line: 648, column: 8, scope: !12915)
!12917 = !DILocation(line: 651, column: 10, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12919, file: !12489, line: 651, column: 10)
!12919 = distinct !DILexicalBlock(scope: !12914, file: !12489, line: 649, column: 5)
!12920 = !DILocation(line: 651, column: 46, scope: !12918)
!12921 = !DILocation(line: 651, column: 10, scope: !12919)
!12922 = !DILocation(line: 661, column: 10, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12924, file: !12489, line: 661, column: 10)
!12924 = distinct !DILexicalBlock(scope: !12925, file: !12489, line: 659, column: 5)
!12925 = distinct !DILexicalBlock(scope: !12914, file: !12489, line: 657, column: 13)
!12926 = !DILocation(line: 661, column: 46, scope: !12923)
!12927 = !DILocation(line: 661, column: 10, scope: !12924)
!12928 = !DILocation(line: 670, column: 10, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12930, file: !12489, line: 670, column: 10)
!12930 = distinct !DILexicalBlock(scope: !12925, file: !12489, line: 668, column: 5)
!12931 = !DILocation(line: 670, column: 46, scope: !12929)
!12932 = !DILocation(line: 670, column: 10, scope: !12930)
!12933 = !DILocation(line: 676, column: 5, scope: !12915)
!12934 = !DILocation(line: 679, column: 17, scope: !12915)
!12935 = !DILocation(line: 681, column: 5, scope: !12915)
!12936 = !DILocation(line: 681, column: 12, scope: !12915)
!12937 = !DILocation(line: 681, column: 65, scope: !12915)
!12938 = !DILocation(line: 681, column: 78, scope: !12915)
!12939 = !DILocation(line: 681, column: 42, scope: !12915)
!12940 = !DILocation(line: 683, column: 12, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12942, file: !12489, line: 683, column: 11)
!12942 = distinct !DILexicalBlock(scope: !12915, file: !12489, line: 682, column: 5)
!12943 = !DILocation(line: 683, column: 26, scope: !12941)
!12944 = !DILocation(line: 683, column: 39, scope: !12941)
!12945 = !DILocation(line: 683, column: 11, scope: !12942)
!12946 = distinct !{!12946, !12935, !12947}
!12947 = !DILocation(line: 687, column: 5, scope: !12915)
!12948 = !DILocation(line: 691, column: 17, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12855, file: !12489, line: 691, column: 6)
!12950 = !DILocation(line: 691, column: 15, scope: !12949)
!12951 = !DILocation(line: 691, column: 6, scope: !12855)
!12952 = !DILocation(line: 694, column: 5, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12949, file: !12489, line: 692, column: 3)
!12954 = !DILocation(line: 698, column: 8, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12953, file: !12489, line: 698, column: 8)
!12956 = !DILocation(line: 698, column: 34, scope: !12955)
!12957 = !DILocation(line: 698, column: 8, scope: !12953)
!12958 = !DILocation(line: 705, column: 27, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12855, file: !12489, line: 705, column: 6)
!12960 = !DILocation(line: 705, column: 38, scope: !12959)
!12961 = !DILocation(line: 705, column: 61, scope: !12959)
!12962 = !DILocation(line: 705, column: 6, scope: !12855)
!12963 = !DILocation(line: 708, column: 5, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12959, file: !12489, line: 706, column: 3)
!12965 = !DILocation(line: 712, column: 27, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12855, file: !12489, line: 712, column: 6)
!12967 = !DILocation(line: 709, column: 3, scope: !12964)
!12968 = !DILocation(line: 712, column: 38, scope: !12966)
!12969 = !DILocation(line: 712, column: 61, scope: !12966)
!12970 = !DILocation(line: 712, column: 6, scope: !12855)
!12971 = !DILocation(line: 715, column: 5, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12966, file: !12489, line: 713, column: 3)
!12973 = !DILocation(line: 716, column: 3, scope: !12972)
!12974 = !DILocation(line: 719, column: 21, scope: !12855)
!12975 = !DILocation(line: 719, column: 70, scope: !12855)
!12976 = !DILocation(line: 719, column: 91, scope: !12855)
!12977 = !DILocation(line: 719, column: 50, scope: !12855)
!12978 = !DILocation(line: 719, column: 47, scope: !12855)
!12979 = !DILocation(line: 719, column: 19, scope: !12855)
!12980 = !DILocation(line: 722, column: 17, scope: !12855)
!12981 = !DILocation(line: 722, column: 3, scope: !12855)
!12982 = !DILocation(line: 724, column: 3, scope: !12855)
!12983 = !DILocation(line: 725, column: 1, scope: !12855)
!12984 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12489, file: !12489, line: 885, type: !7456, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !12985)
!12985 = !{!12986, !12987, !12988, !12989}
!12986 = !DILocalVariable(name: "pllm", scope: !12984, file: !12489, line: 887, type: !108)
!12987 = !DILocalVariable(name: "pllvco", scope: !12984, file: !12489, line: 887, type: !108)
!12988 = !DILocalVariable(name: "pllp", scope: !12984, file: !12489, line: 887, type: !108)
!12989 = !DILocalVariable(name: "sysclockfreq", scope: !12984, file: !12489, line: 888, type: !108)
!12990 = !DILocation(line: 0, scope: !12984)
!12991 = !DILocation(line: 891, column: 16, scope: !12984)
!12992 = !DILocation(line: 891, column: 21, scope: !12984)
!12993 = !DILocation(line: 891, column: 3, scope: !12984)
!12994 = !DILocation(line: 907, column: 19, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12996, file: !12489, line: 904, column: 5)
!12996 = distinct !DILexicalBlock(scope: !12984, file: !12489, line: 892, column: 3)
!12997 = !DILocation(line: 907, column: 27, scope: !12995)
!12998 = !DILocation(line: 908, column: 10, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12995, file: !12489, line: 908, column: 10)
!13000 = !DILocation(line: 0, scope: !12999)
!13001 = !DILocation(line: 918, column: 23, scope: !12995)
!13002 = !DILocation(line: 918, column: 82, scope: !12995)
!13003 = !DILocation(line: 920, column: 28, scope: !12995)
!13004 = !DILocation(line: 921, column: 7, scope: !12995)
!13005 = !DILocation(line: 0, scope: !12996)
!13006 = !DILocation(line: 929, column: 3, scope: !12984)
!13007 = !DISubprogram(name: "HAL_InitTick", scope: !12854, file: !12854, line: 223, type: !13008, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!13008 = !DISubroutineType(types: !13009)
!13009 = !{!12492, !108}
!13010 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12489, file: !12489, line: 775, type: !13011, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !13013)
!13011 = !DISubroutineType(types: !13012)
!13012 = !{null, !108, !108, !108}
!13013 = !{!13014, !13015, !13016, !13017, !13027}
!13014 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13010, file: !12489, line: 775, type: !108)
!13015 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13010, file: !12489, line: 775, type: !108)
!13016 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13010, file: !12489, line: 775, type: !108)
!13017 = !DILocalVariable(name: "GPIO_InitStruct", scope: !13010, file: !12489, line: 777, type: !13018)
!13018 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13019, line: 62, baseType: !13020)
!13019 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13019, line: 46, size: 160, elements: !13021)
!13021 = !{!13022, !13023, !13024, !13025, !13026}
!13022 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13020, file: !13019, line: 48, baseType: !108, size: 32)
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13020, file: !13019, line: 51, baseType: !108, size: 32, offset: 32)
!13024 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13020, file: !13019, line: 54, baseType: !108, size: 32, offset: 64)
!13025 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13020, file: !13019, line: 57, baseType: !108, size: 32, offset: 96)
!13026 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13020, file: !13019, line: 60, baseType: !108, size: 32, offset: 128)
!13027 = !DILocalVariable(name: "tmpreg", scope: !13028, file: !12489, line: 787, type: !431)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !12489, line: 787, column: 5)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !12489, line: 783, column: 3)
!13030 = distinct !DILexicalBlock(scope: !13010, file: !12489, line: 782, column: 6)
!13031 = !DILocation(line: 0, scope: !13010)
!13032 = !DILocation(line: 777, column: 3, scope: !13010)
!13033 = !DILocation(line: 777, column: 20, scope: !13010)
!13034 = !DILocation(line: 782, column: 15, scope: !13030)
!13035 = !DILocation(line: 782, column: 6, scope: !13010)
!13036 = !DILocation(line: 787, column: 5, scope: !13028)
!13037 = !DILocation(line: 787, column: 5, scope: !13029)
!13038 = !DILocation(line: 790, column: 21, scope: !13029)
!13039 = !DILocation(line: 790, column: 25, scope: !13029)
!13040 = !DILocation(line: 791, column: 21, scope: !13029)
!13041 = !DILocation(line: 791, column: 26, scope: !13029)
!13042 = !DILocation(line: 792, column: 21, scope: !13029)
!13043 = !DILocation(line: 792, column: 27, scope: !13029)
!13044 = !DILocation(line: 793, column: 21, scope: !13029)
!13045 = !DILocation(line: 793, column: 26, scope: !13029)
!13046 = !DILocation(line: 794, column: 21, scope: !13029)
!13047 = !DILocation(line: 794, column: 31, scope: !13029)
!13048 = !DILocation(line: 795, column: 5, scope: !13029)
!13049 = !DILocation(line: 798, column: 5, scope: !13029)
!13050 = !DILocation(line: 804, column: 3, scope: !13029)
!13051 = !DILocation(line: 830, column: 1, scope: !13010)
!13052 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13019, file: !13019, line: 224, type: !13053, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!13053 = !DISubroutineType(types: !13054)
!13054 = !{null, !3112, !13055}
!13055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13018, size: 32)
!13056 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12489, file: !12489, line: 841, type: !337, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !256)
!13057 = !DILocation(line: 843, column: 38, scope: !13056)
!13058 = !DILocation(line: 844, column: 1, scope: !13056)
!13059 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12489, file: !12489, line: 850, type: !337, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !256)
!13060 = !DILocation(line: 852, column: 38, scope: !13059)
!13061 = !DILocation(line: 853, column: 1, scope: !13059)
!13062 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12489, file: !12489, line: 941, type: !7456, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !256)
!13063 = !DILocation(line: 943, column: 10, scope: !13062)
!13064 = !DILocation(line: 943, column: 3, scope: !13062)
!13065 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12489, file: !12489, line: 952, type: !7456, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !256)
!13066 = !DILocation(line: 955, column: 11, scope: !13065)
!13067 = !DILocation(line: 955, column: 56, scope: !13065)
!13068 = !DILocation(line: 955, column: 78, scope: !13065)
!13069 = !DILocation(line: 955, column: 36, scope: !13065)
!13070 = !DILocation(line: 955, column: 33, scope: !13065)
!13071 = !DILocation(line: 955, column: 3, scope: !13065)
!13072 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12489, file: !12489, line: 964, type: !7456, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !256)
!13073 = !DILocation(line: 967, column: 11, scope: !13072)
!13074 = !DILocation(line: 967, column: 55, scope: !13072)
!13075 = !DILocation(line: 967, column: 77, scope: !13072)
!13076 = !DILocation(line: 967, column: 35, scope: !13072)
!13077 = !DILocation(line: 967, column: 32, scope: !13072)
!13078 = !DILocation(line: 967, column: 3, scope: !13072)
!13079 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12489, file: !12489, line: 977, type: !13080, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !13082)
!13080 = !DISubroutineType(types: !13081)
!13081 = !{null, !12497}
!13082 = !{!13083}
!13083 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13079, file: !12489, line: 977, type: !12497)
!13084 = !DILocation(line: 0, scope: !13079)
!13085 = !DILocation(line: 980, column: 22, scope: !13079)
!13086 = !DILocation(line: 980, column: 37, scope: !13079)
!13087 = !DILocation(line: 983, column: 12, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13079, file: !12489, line: 983, column: 6)
!13089 = !DILocation(line: 983, column: 15, scope: !13088)
!13090 = !DILocation(line: 983, column: 31, scope: !13088)
!13091 = !DILocation(line: 983, column: 6, scope: !13079)
!13092 = !DILocation(line: 985, column: 24, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13088, file: !12489, line: 984, column: 3)
!13094 = !DILocation(line: 985, column: 33, scope: !13093)
!13095 = !DILocation(line: 986, column: 3, scope: !13093)
!13096 = !DILocation(line: 987, column: 17, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13088, file: !12489, line: 987, column: 11)
!13098 = !DILocation(line: 987, column: 20, scope: !13097)
!13099 = !DILocation(line: 987, column: 35, scope: !13097)
!13100 = !DILocation(line: 0, scope: !13097)
!13101 = !DILocation(line: 987, column: 11, scope: !13088)
!13102 = !DILocation(line: 989, column: 33, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13097, file: !12489, line: 988, column: 3)
!13104 = !DILocation(line: 990, column: 3, scope: !13103)
!13105 = !DILocation(line: 993, column: 33, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13097, file: !12489, line: 992, column: 3)
!13107 = !DILocation(line: 997, column: 12, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13079, file: !12489, line: 997, column: 6)
!13109 = !DILocation(line: 997, column: 15, scope: !13108)
!13110 = !DILocation(line: 1003, column: 24, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13108, file: !12489, line: 1002, column: 3)
!13112 = !DILocation(line: 1003, column: 33, scope: !13111)
!13113 = !DILocation(line: 1006, column: 61, scope: !13079)
!13114 = !DILocation(line: 1006, column: 81, scope: !13079)
!13115 = !DILocation(line: 1006, column: 22, scope: !13079)
!13116 = !DILocation(line: 1006, column: 42, scope: !13079)
!13117 = !DILocation(line: 1009, column: 12, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13079, file: !12489, line: 1009, column: 6)
!13119 = !DILocation(line: 1009, column: 17, scope: !13118)
!13120 = !DILocation(line: 1009, column: 35, scope: !13118)
!13121 = !DILocation(line: 1009, column: 6, scope: !13079)
!13122 = !DILocation(line: 1011, column: 24, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13118, file: !12489, line: 1010, column: 3)
!13124 = !DILocation(line: 1011, column: 33, scope: !13123)
!13125 = !DILocation(line: 1012, column: 3, scope: !13123)
!13126 = !DILocation(line: 1013, column: 17, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13118, file: !12489, line: 1013, column: 11)
!13128 = !DILocation(line: 1013, column: 22, scope: !13127)
!13129 = !DILocation(line: 1013, column: 39, scope: !13127)
!13130 = !DILocation(line: 0, scope: !13127)
!13131 = !DILocation(line: 1013, column: 11, scope: !13118)
!13132 = !DILocation(line: 1015, column: 33, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13127, file: !12489, line: 1014, column: 3)
!13134 = !DILocation(line: 1016, column: 3, scope: !13133)
!13135 = !DILocation(line: 1019, column: 33, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13127, file: !12489, line: 1018, column: 3)
!13137 = !DILocation(line: 1023, column: 12, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13079, file: !12489, line: 1023, column: 6)
!13139 = !DILocation(line: 1023, column: 16, scope: !13138)
!13140 = !DILocation(line: 1029, column: 24, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13138, file: !12489, line: 1028, column: 3)
!13142 = !DILocation(line: 1029, column: 33, scope: !13141)
!13143 = !DILocation(line: 1033, column: 12, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13079, file: !12489, line: 1033, column: 6)
!13145 = !DILocation(line: 1033, column: 15, scope: !13144)
!13146 = !DILocation(line: 1033, column: 30, scope: !13144)
!13147 = !DILocation(line: 1033, column: 6, scope: !13079)
!13148 = !DILocation(line: 1039, column: 28, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13144, file: !12489, line: 1038, column: 3)
!13150 = !DILocation(line: 1039, column: 37, scope: !13149)
!13151 = !DILocation(line: 1041, column: 54, scope: !13079)
!13152 = !DILocation(line: 1041, column: 62, scope: !13079)
!13153 = !DILocation(line: 1041, column: 26, scope: !13079)
!13154 = !DILocation(line: 1041, column: 36, scope: !13079)
!13155 = !DILocation(line: 1042, column: 49, scope: !13079)
!13156 = !DILocation(line: 1042, column: 57, scope: !13079)
!13157 = !DILocation(line: 1042, column: 26, scope: !13079)
!13158 = !DILocation(line: 1042, column: 31, scope: !13079)
!13159 = !DILocation(line: 1043, column: 50, scope: !13079)
!13160 = !DILocation(line: 1043, column: 78, scope: !13079)
!13161 = !DILocation(line: 1043, column: 26, scope: !13079)
!13162 = !DILocation(line: 1043, column: 31, scope: !13079)
!13163 = !DILocation(line: 1044, column: 52, scope: !13079)
!13164 = !DILocation(line: 1044, column: 102, scope: !13079)
!13165 = !DILocation(line: 1044, column: 109, scope: !13079)
!13166 = !DILocation(line: 1044, column: 26, scope: !13079)
!13167 = !DILocation(line: 1044, column: 31, scope: !13079)
!13168 = !DILocation(line: 1045, column: 50, scope: !13079)
!13169 = !DILocation(line: 1045, column: 78, scope: !13079)
!13170 = !DILocation(line: 1045, column: 26, scope: !13079)
!13171 = !DILocation(line: 1045, column: 31, scope: !13079)
!13172 = !DILocation(line: 1046, column: 1, scope: !13079)
!13173 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12489, file: !12489, line: 1056, type: !13174, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !13176)
!13174 = !DISubroutineType(types: !13175)
!13175 = !{null, !12858, !1002}
!13176 = !{!13177, !13178}
!13177 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13173, file: !12489, line: 1056, type: !12858)
!13178 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13173, file: !12489, line: 1056, type: !1002)
!13179 = !DILocation(line: 0, scope: !13173)
!13180 = !DILocation(line: 1059, column: 22, scope: !13173)
!13181 = !DILocation(line: 1059, column: 32, scope: !13173)
!13182 = !DILocation(line: 1062, column: 53, scope: !13173)
!13183 = !DILocation(line: 1062, column: 58, scope: !13173)
!13184 = !DILocation(line: 1062, column: 22, scope: !13173)
!13185 = !DILocation(line: 1062, column: 35, scope: !13173)
!13186 = !DILocation(line: 1065, column: 54, scope: !13173)
!13187 = !DILocation(line: 1065, column: 59, scope: !13173)
!13188 = !DILocation(line: 1065, column: 22, scope: !13173)
!13189 = !DILocation(line: 1065, column: 36, scope: !13173)
!13190 = !DILocation(line: 1068, column: 55, scope: !13173)
!13191 = !DILocation(line: 1068, column: 60, scope: !13173)
!13192 = !DILocation(line: 1068, column: 22, scope: !13173)
!13193 = !DILocation(line: 1068, column: 37, scope: !13173)
!13194 = !DILocation(line: 1071, column: 56, scope: !13173)
!13195 = !DILocation(line: 1071, column: 79, scope: !13173)
!13196 = !DILocation(line: 1071, column: 22, scope: !13173)
!13197 = !DILocation(line: 1071, column: 37, scope: !13173)
!13198 = !DILocation(line: 1074, column: 34, scope: !13173)
!13199 = !DILocation(line: 1074, column: 38, scope: !13173)
!13200 = !DILocation(line: 1074, column: 14, scope: !13173)
!13201 = !DILocation(line: 1075, column: 1, scope: !13173)
!13202 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12489, file: !12489, line: 1082, type: !337, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !256)
!13203 = !DILocation(line: 1085, column: 6, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13202, file: !12489, line: 1085, column: 6)
!13205 = !DILocation(line: 1085, column: 6, scope: !13202)
!13206 = !DILocation(line: 1088, column: 5, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13204, file: !12489, line: 1086, column: 3)
!13208 = !DILocation(line: 1091, column: 5, scope: !13207)
!13209 = !DILocation(line: 1092, column: 3, scope: !13207)
!13210 = !DILocation(line: 1093, column: 1, scope: !13202)
!13211 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12489, file: !12489, line: 1099, type: !337, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !256)
!13212 = !DILocation(line: 1104, column: 1, scope: !13211)
!13213 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13214, file: !13214, line: 257, type: !7466, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13215)
!13214 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13215 = !{!13216}
!13216 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13213, file: !13214, line: 257, type: !108)
!13217 = !DILocation(line: 0, scope: !13213)
!13218 = !DILocation(line: 260, column: 3, scope: !13213)
!13219 = !DILocation(line: 261, column: 1, scope: !13213)
!13220 = distinct !DISubprogram(name: "LL_InitTick", scope: !13221, file: !13221, line: 260, type: !10886, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13222)
!13221 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13222 = !{!13223, !13224}
!13223 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13220, file: !13221, line: 260, type: !108)
!13224 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13220, file: !13221, line: 260, type: !108)
!13225 = !DILocation(line: 0, scope: !13220)
!13226 = !DILocation(line: 263, column: 46, scope: !13220)
!13227 = !DILocation(line: 263, column: 55, scope: !13220)
!13228 = !DILocation(line: 263, column: 18, scope: !13220)
!13229 = !DILocation(line: 264, column: 18, scope: !13220)
!13230 = !DILocation(line: 265, column: 18, scope: !13220)
!13231 = !DILocation(line: 267, column: 1, scope: !13220)
!13232 = distinct !DISubprogram(name: "LL_mDelay", scope: !13214, file: !13214, line: 273, type: !7466, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13233)
!13233 = !{!13234, !13235}
!13234 = !DILocalVariable(name: "Delay", arg: 1, scope: !13232, file: !13214, line: 273, type: !108)
!13235 = !DILocalVariable(name: "tmp", scope: !13232, file: !13214, line: 275, type: !431)
!13236 = !DILocation(line: 0, scope: !13232)
!13237 = !DILocation(line: 275, column: 3, scope: !13232)
!13238 = !DILocation(line: 275, column: 18, scope: !13232)
!13239 = !DILocation(line: 275, column: 33, scope: !13232)
!13240 = !DILocation(line: 277, column: 10, scope: !13232)
!13241 = !DILocation(line: 280, column: 12, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13232, file: !13214, line: 280, column: 6)
!13243 = !DILocation(line: 285, column: 3, scope: !13232)
!13244 = !DILocation(line: 287, column: 18, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !13214, line: 287, column: 8)
!13246 = distinct !DILexicalBlock(scope: !13232, file: !13214, line: 286, column: 3)
!13247 = !DILocation(line: 292, column: 1, scope: !13232)
!13248 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13214, file: !13214, line: 323, type: !7466, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13249)
!13249 = !{!13250}
!13250 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13248, file: !13214, line: 323, type: !108)
!13251 = !DILocation(line: 0, scope: !13248)
!13252 = !DILocation(line: 326, column: 19, scope: !13248)
!13253 = !DILocation(line: 327, column: 1, scope: !13248)
!13254 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13214, file: !13214, line: 338, type: !13255, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13258)
!13255 = !DISubroutineType(types: !13256)
!13256 = !{!13257, !108}
!13257 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !948, line: 201, baseType: !947)
!13258 = !{!13259, !13260, !13261, !13262, !13263}
!13259 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13254, file: !13214, line: 338, type: !108)
!13260 = !DILocalVariable(name: "timeout", scope: !13254, file: !13214, line: 340, type: !108)
!13261 = !DILocalVariable(name: "getlatency", scope: !13254, file: !13214, line: 341, type: !108)
!13262 = !DILocalVariable(name: "latency", scope: !13254, file: !13214, line: 342, type: !108)
!13263 = !DILocalVariable(name: "status", scope: !13254, file: !13214, line: 343, type: !13257)
!13264 = !DILocation(line: 0, scope: !13254)
!13265 = !DILocation(line: 347, column: 21, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13254, file: !13214, line: 347, column: 6)
!13267 = !DILocation(line: 347, column: 6, scope: !13254)
!13268 = !DILocation(line: 353, column: 8, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !13214, line: 353, column: 8)
!13270 = distinct !DILexicalBlock(scope: !13266, file: !13214, line: 352, column: 3)
!13271 = !DILocation(line: 353, column: 40, scope: !13269)
!13272 = !DILocation(line: 353, column: 8, scope: !13270)
!13273 = !DILocation(line: 374, column: 55, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13275, file: !13214, line: 374, column: 10)
!13275 = distinct !DILexicalBlock(scope: !13269, file: !13214, line: 354, column: 5)
!13276 = !DILocation(line: 368, column: 26, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13275, file: !13214, line: 368, column: 10)
!13278 = !DILocation(line: 368, column: 55, scope: !13277)
!13279 = !DILocation(line: 380, column: 57, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13281, file: !13214, line: 380, column: 12)
!13281 = distinct !DILexicalBlock(scope: !13274, file: !13214, line: 379, column: 7)
!13282 = !DILocation(line: 387, column: 8, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13270, file: !13214, line: 387, column: 8)
!13284 = !DILocation(line: 387, column: 40, scope: !13283)
!13285 = !DILocation(line: 387, column: 8, scope: !13270)
!13286 = !DILocation(line: 407, column: 26, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13288, file: !13214, line: 407, column: 10)
!13288 = distinct !DILexicalBlock(scope: !13283, file: !13214, line: 388, column: 5)
!13289 = !DILocation(line: 407, column: 55, scope: !13287)
!13290 = !DILocation(line: 413, column: 28, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13292, file: !13214, line: 413, column: 12)
!13292 = distinct !DILexicalBlock(scope: !13287, file: !13214, line: 412, column: 7)
!13293 = !DILocation(line: 413, column: 57, scope: !13291)
!13294 = !DILocation(line: 0, scope: !13270)
!13295 = !DILocation(line: 420, column: 8, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13270, file: !13214, line: 420, column: 8)
!13297 = !DILocation(line: 420, column: 40, scope: !13296)
!13298 = !DILocation(line: 420, column: 8, scope: !13270)
!13299 = !DILocation(line: 429, column: 26, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13301, file: !13214, line: 429, column: 10)
!13301 = distinct !DILexicalBlock(scope: !13296, file: !13214, line: 421, column: 5)
!13302 = !DILocation(line: 429, column: 55, scope: !13300)
!13303 = !DILocation(line: 435, column: 28, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13305, file: !13214, line: 435, column: 12)
!13305 = distinct !DILexicalBlock(scope: !13300, file: !13214, line: 434, column: 7)
!13306 = !DILocation(line: 435, column: 57, scope: !13304)
!13307 = !DILocation(line: 444, column: 5, scope: !13270)
!13308 = !DILocation(line: 448, column: 5, scope: !13270)
!13309 = !DILocation(line: 451, column: 18, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13270, file: !13214, line: 449, column: 5)
!13311 = !DILocation(line: 452, column: 12, scope: !13310)
!13312 = !DILocation(line: 453, column: 26, scope: !13270)
!13313 = !DILocation(line: 453, column: 38, scope: !13270)
!13314 = !DILocation(line: 453, column: 5, scope: !13310)
!13315 = distinct !{!13315, !13308, !13316}
!13316 = !DILocation(line: 453, column: 54, scope: !13270)
!13317 = !DILocation(line: 0, scope: !13266)
!13318 = !DILocation(line: 464, column: 3, scope: !13254)
!13319 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13320, file: !13320, line: 519, type: !7456, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13320 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13321 = !DILocation(line: 521, column: 21, scope: !13319)
!13322 = !DILocation(line: 521, column: 3, scope: !13319)
!13323 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7075, file: !7075, line: 1543, type: !7466, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13324)
!13324 = !{!13325}
!13325 = !DILocalVariable(name: "Latency", arg: 1, scope: !13323, file: !7075, line: 1543, type: !108)
!13326 = !DILocation(line: 0, scope: !13323)
!13327 = !DILocation(line: 1545, column: 3, scope: !13323)
!13328 = !DILocation(line: 1546, column: 1, scope: !13323)
!13329 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7075, file: !7075, line: 1569, type: !7456, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13330 = !DILocation(line: 1571, column: 21, scope: !13329)
!13331 = !DILocation(line: 1571, column: 3, scope: !13329)
!13332 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13214, file: !13214, line: 483, type: !13333, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13349)
!13333 = !DISubroutineType(types: !13334)
!13334 = !{!13257, !13335, !13342}
!13335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13336, size: 32)
!13336 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13221, line: 114, baseType: !13337)
!13337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13221, line: 94, size: 96, elements: !13338)
!13338 = !{!13339, !13340, !13341}
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13337, file: !13221, line: 96, baseType: !108, size: 32)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13337, file: !13221, line: 102, baseType: !108, size: 32, offset: 32)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13337, file: !13221, line: 109, baseType: !108, size: 32, offset: 64)
!13342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13343, size: 32)
!13343 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13221, line: 139, baseType: !13344)
!13344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13221, line: 119, size: 96, elements: !13345)
!13345 = !{!13346, !13347, !13348}
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13344, file: !13221, line: 121, baseType: !108, size: 32)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13344, file: !13221, line: 127, baseType: !108, size: 32, offset: 32)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13344, file: !13221, line: 133, baseType: !108, size: 32, offset: 64)
!13349 = !{!13350, !13351, !13352, !13353}
!13350 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13332, file: !13214, line: 483, type: !13335)
!13351 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13332, file: !13214, line: 484, type: !13342)
!13352 = !DILocalVariable(name: "status", scope: !13332, file: !13214, line: 486, type: !13257)
!13353 = !DILocalVariable(name: "pllfreq", scope: !13332, file: !13214, line: 487, type: !108)
!13354 = !DILocation(line: 0, scope: !13332)
!13355 = !DILocation(line: 490, column: 6, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13332, file: !13214, line: 490, column: 6)
!13357 = !DILocation(line: 490, column: 25, scope: !13356)
!13358 = !DILocation(line: 490, column: 6, scope: !13332)
!13359 = !DILocation(line: 493, column: 15, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13356, file: !13214, line: 491, column: 3)
!13361 = !DILocation(line: 496, column: 8, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13360, file: !13214, line: 496, column: 8)
!13363 = !DILocation(line: 496, column: 29, scope: !13362)
!13364 = !DILocation(line: 496, column: 8, scope: !13360)
!13365 = !DILocation(line: 498, column: 7, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13362, file: !13214, line: 497, column: 5)
!13367 = !DILocation(line: 499, column: 7, scope: !13366)
!13368 = !DILocation(line: 499, column: 14, scope: !13366)
!13369 = !DILocation(line: 499, column: 35, scope: !13366)
!13370 = distinct !{!13370, !13367, !13371}
!13371 = !DILocation(line: 502, column: 7, scope: !13366)
!13372 = !DILocation(line: 506, column: 76, scope: !13360)
!13373 = !DILocation(line: 506, column: 103, scope: !13360)
!13374 = !DILocation(line: 507, column: 54, scope: !13360)
!13375 = !DILocation(line: 506, column: 5, scope: !13360)
!13376 = !DILocation(line: 510, column: 14, scope: !13360)
!13377 = !DILocation(line: 511, column: 3, scope: !13360)
!13378 = !DILocation(line: 0, scope: !13356)
!13379 = !DILocation(line: 518, column: 3, scope: !13332)
!13380 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13214, file: !13214, line: 642, type: !13381, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13383)
!13381 = !DISubroutineType(types: !13382)
!13382 = !{!13257}
!13383 = !{!13384}
!13384 = !DILocalVariable(name: "status", scope: !13380, file: !13214, line: 644, type: !13257)
!13385 = !DILocation(line: 0, scope: !13380)
!13386 = !DILocation(line: 647, column: 6, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13380, file: !13214, line: 647, column: 6)
!13388 = !DILocation(line: 647, column: 27, scope: !13387)
!13389 = !DILocation(line: 663, column: 6, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13380, file: !13214, line: 663, column: 6)
!13391 = !DILocation(line: 663, column: 30, scope: !13390)
!13392 = !DILocation(line: 663, column: 6, scope: !13380)
!13393 = !DILocation(line: 669, column: 3, scope: !13380)
!13394 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13214, file: !13214, line: 611, type: !13395, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13397)
!13395 = !DISubroutineType(types: !13396)
!13396 = !{!108, !108, !13335}
!13397 = !{!13398, !13399, !13400}
!13398 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13394, file: !13214, line: 611, type: !108)
!13399 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13394, file: !13214, line: 611, type: !13335)
!13400 = !DILocalVariable(name: "pllfreq", scope: !13394, file: !13214, line: 613, type: !108)
!13401 = !DILocation(line: 0, scope: !13394)
!13402 = !DILocation(line: 622, column: 56, scope: !13394)
!13403 = !DILocation(line: 622, column: 61, scope: !13394)
!13404 = !DILocation(line: 622, column: 32, scope: !13394)
!13405 = !DILocation(line: 626, column: 45, scope: !13394)
!13406 = !DILocation(line: 626, column: 50, scope: !13394)
!13407 = !DILocation(line: 626, column: 21, scope: !13394)
!13408 = !DILocation(line: 630, column: 47, scope: !13394)
!13409 = !DILocation(line: 630, column: 82, scope: !13394)
!13410 = !DILocation(line: 630, column: 21, scope: !13394)
!13411 = !DILocation(line: 633, column: 3, scope: !13394)
!13412 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10226, file: !10226, line: 3007, type: !7456, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13413 = !DILocation(line: 3009, column: 11, scope: !13412)
!13414 = !DILocation(line: 3009, column: 44, scope: !13412)
!13415 = !DILocation(line: 3009, column: 3, scope: !13412)
!13416 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10226, file: !10226, line: 2987, type: !337, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13417 = !DILocation(line: 2989, column: 3, scope: !13416)
!13418 = !DILocation(line: 2990, column: 1, scope: !13416)
!13419 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10226, file: !10226, line: 4304, type: !10360, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13420)
!13420 = !{!13421, !13422, !13423, !13424}
!13421 = !DILocalVariable(name: "Source", arg: 1, scope: !13419, file: !10226, line: 4304, type: !108)
!13422 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13419, file: !10226, line: 4304, type: !108)
!13423 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13419, file: !10226, line: 4304, type: !108)
!13424 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13419, file: !10226, line: 4304, type: !108)
!13425 = !DILocation(line: 0, scope: !13419)
!13426 = !DILocation(line: 4306, column: 3, scope: !13419)
!13427 = !DILocation(line: 4308, column: 3, scope: !13419)
!13428 = !DILocation(line: 4312, column: 1, scope: !13419)
!13429 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13214, file: !13214, line: 681, type: !13430, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13432)
!13430 = !DISubroutineType(types: !13431)
!13431 = !{!13257, !108, !13342}
!13432 = !{!13433, !13434, !13435, !13436}
!13433 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13429, file: !13214, line: 681, type: !108)
!13434 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13429, file: !13214, line: 681, type: !13342)
!13435 = !DILocalVariable(name: "status", scope: !13429, file: !13214, line: 683, type: !13257)
!13436 = !DILocalVariable(name: "hclk_frequency", scope: !13429, file: !13214, line: 684, type: !108)
!13437 = !DILocation(line: 0, scope: !13429)
!13438 = !DILocation(line: 691, column: 20, scope: !13429)
!13439 = !DILocation(line: 694, column: 6, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13429, file: !13214, line: 694, column: 6)
!13441 = !DILocation(line: 694, column: 22, scope: !13440)
!13442 = !DILocation(line: 694, column: 6, scope: !13429)
!13443 = !DILocation(line: 697, column: 14, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13440, file: !13214, line: 695, column: 3)
!13445 = !DILocation(line: 701, column: 13, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13429, file: !13214, line: 701, column: 6)
!13447 = !DILocation(line: 701, column: 6, scope: !13429)
!13448 = !DILocation(line: 704, column: 5, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13446, file: !13214, line: 702, column: 3)
!13450 = !DILocation(line: 705, column: 5, scope: !13449)
!13451 = !DILocation(line: 705, column: 12, scope: !13449)
!13452 = !DILocation(line: 705, column: 33, scope: !13449)
!13453 = distinct !{!13453, !13450, !13454}
!13454 = !DILocation(line: 708, column: 5, scope: !13449)
!13455 = !DILocation(line: 711, column: 49, scope: !13449)
!13456 = !DILocation(line: 711, column: 5, scope: !13449)
!13457 = !DILocation(line: 712, column: 5, scope: !13449)
!13458 = !DILocation(line: 713, column: 5, scope: !13449)
!13459 = !DILocation(line: 713, column: 12, scope: !13449)
!13460 = !DILocation(line: 713, column: 37, scope: !13449)
!13461 = distinct !{!13461, !13458, !13462}
!13462 = !DILocation(line: 716, column: 5, scope: !13449)
!13463 = !DILocation(line: 719, column: 50, scope: !13449)
!13464 = !DILocation(line: 719, column: 5, scope: !13449)
!13465 = !DILocation(line: 720, column: 50, scope: !13449)
!13466 = !DILocation(line: 720, column: 5, scope: !13449)
!13467 = !DILocation(line: 721, column: 3, scope: !13449)
!13468 = !DILocation(line: 724, column: 6, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13429, file: !13214, line: 724, column: 6)
!13470 = !DILocation(line: 724, column: 22, scope: !13469)
!13471 = !DILocation(line: 724, column: 6, scope: !13429)
!13472 = !DILocation(line: 727, column: 14, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13469, file: !13214, line: 725, column: 3)
!13474 = !DILocation(line: 728, column: 3, scope: !13473)
!13475 = !DILocation(line: 731, column: 13, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13429, file: !13214, line: 731, column: 6)
!13477 = !DILocation(line: 731, column: 6, scope: !13429)
!13478 = !DILocation(line: 733, column: 5, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13476, file: !13214, line: 732, column: 3)
!13480 = !DILocation(line: 734, column: 3, scope: !13479)
!13481 = !DILocation(line: 736, column: 3, scope: !13429)
!13482 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10226, file: !10226, line: 4184, type: !337, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13483 = !DILocation(line: 4186, column: 3, scope: !13482)
!13484 = !DILocation(line: 4187, column: 1, scope: !13482)
!13485 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10226, file: !10226, line: 4205, type: !7456, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13486 = !DILocation(line: 4207, column: 11, scope: !13485)
!13487 = !DILocation(line: 4207, column: 44, scope: !13485)
!13488 = !DILocation(line: 4207, column: 3, scope: !13485)
!13489 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10226, file: !10226, line: 3224, type: !7466, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13490)
!13490 = !{!13491}
!13491 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13489, file: !10226, line: 3224, type: !108)
!13492 = !DILocation(line: 0, scope: !13489)
!13493 = !DILocation(line: 3226, column: 3, scope: !13489)
!13494 = !DILocation(line: 3227, column: 1, scope: !13489)
!13495 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10226, file: !10226, line: 3188, type: !7466, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13496)
!13496 = !{!13497}
!13497 = !DILocalVariable(name: "Source", arg: 1, scope: !13495, file: !10226, line: 3188, type: !108)
!13498 = !DILocation(line: 0, scope: !13495)
!13499 = !DILocation(line: 3190, column: 3, scope: !13495)
!13500 = !DILocation(line: 3191, column: 1, scope: !13495)
!13501 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10226, file: !10226, line: 3204, type: !7456, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13502 = !DILocation(line: 3206, column: 21, scope: !13501)
!13503 = !DILocation(line: 3206, column: 3, scope: !13501)
!13504 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10226, file: !10226, line: 3240, type: !7466, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13505)
!13505 = !{!13506}
!13506 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13504, file: !10226, line: 3240, type: !108)
!13507 = !DILocation(line: 0, scope: !13504)
!13508 = !DILocation(line: 3242, column: 3, scope: !13504)
!13509 = !DILocation(line: 3243, column: 1, scope: !13504)
!13510 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10226, file: !10226, line: 3256, type: !7466, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13511)
!13511 = !{!13512}
!13512 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13510, file: !10226, line: 3256, type: !108)
!13513 = !DILocation(line: 0, scope: !13510)
!13514 = !DILocation(line: 3258, column: 3, scope: !13510)
!13515 = !DILocation(line: 3259, column: 1, scope: !13510)
!13516 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10226, file: !10226, line: 5153, type: !7456, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13517 = !DILocation(line: 5155, column: 11, scope: !13516)
!13518 = !DILocation(line: 5155, column: 47, scope: !13516)
!13519 = !DILocation(line: 5155, column: 3, scope: !13516)
!13520 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13214, file: !13214, line: 540, type: !13521, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13523)
!13521 = !DISubroutineType(types: !13522)
!13522 = !{!13257, !108, !108, !13335, !13342}
!13523 = !{!13524, !13525, !13526, !13527, !13528, !13529}
!13524 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13520, file: !13214, line: 540, type: !108)
!13525 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13520, file: !13214, line: 540, type: !108)
!13526 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13520, file: !13214, line: 541, type: !13335)
!13527 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13520, file: !13214, line: 541, type: !13342)
!13528 = !DILocalVariable(name: "status", scope: !13520, file: !13214, line: 543, type: !13257)
!13529 = !DILocalVariable(name: "pllfreq", scope: !13520, file: !13214, line: 544, type: !108)
!13530 = !DILocation(line: 0, scope: !13520)
!13531 = !DILocation(line: 551, column: 6, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13520, file: !13214, line: 551, column: 6)
!13533 = !DILocation(line: 551, column: 25, scope: !13532)
!13534 = !DILocation(line: 551, column: 6, scope: !13520)
!13535 = !DILocation(line: 554, column: 15, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13532, file: !13214, line: 552, column: 3)
!13537 = !DILocation(line: 557, column: 8, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13536, file: !13214, line: 557, column: 8)
!13539 = !DILocation(line: 557, column: 29, scope: !13538)
!13540 = !DILocation(line: 557, column: 8, scope: !13536)
!13541 = !DILocation(line: 560, column: 20, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13543, file: !13214, line: 560, column: 10)
!13543 = distinct !DILexicalBlock(scope: !13538, file: !13214, line: 558, column: 5)
!13544 = !DILocation(line: 560, column: 10, scope: !13543)
!13545 = !DILocation(line: 562, column: 9, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13542, file: !13214, line: 561, column: 7)
!13547 = !DILocation(line: 563, column: 7, scope: !13546)
!13548 = !DILocation(line: 566, column: 9, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13542, file: !13214, line: 565, column: 7)
!13550 = !DILocation(line: 570, column: 7, scope: !13543)
!13551 = !DILocation(line: 571, column: 7, scope: !13543)
!13552 = !DILocation(line: 571, column: 14, scope: !13543)
!13553 = !DILocation(line: 571, column: 35, scope: !13543)
!13554 = distinct !{!13554, !13551, !13555}
!13555 = !DILocation(line: 574, column: 7, scope: !13543)
!13556 = !DILocation(line: 578, column: 76, scope: !13536)
!13557 = !DILocation(line: 578, column: 103, scope: !13536)
!13558 = !DILocation(line: 579, column: 54, scope: !13536)
!13559 = !DILocation(line: 578, column: 5, scope: !13536)
!13560 = !DILocation(line: 582, column: 14, scope: !13536)
!13561 = !DILocation(line: 583, column: 3, scope: !13536)
!13562 = !DILocation(line: 0, scope: !13532)
!13563 = !DILocation(line: 590, column: 3, scope: !13520)
!13564 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10226, file: !10226, line: 2969, type: !7456, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13565 = !DILocation(line: 2971, column: 11, scope: !13564)
!13566 = !DILocation(line: 2971, column: 44, scope: !13564)
!13567 = !DILocation(line: 2971, column: 3, scope: !13564)
!13568 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10226, file: !10226, line: 2929, type: !337, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13569 = !DILocation(line: 2931, column: 3, scope: !13568)
!13570 = !DILocation(line: 2932, column: 1, scope: !13568)
!13571 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10226, file: !10226, line: 2939, type: !337, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13572 = !DILocation(line: 2941, column: 3, scope: !13571)
!13573 = !DILocation(line: 2942, column: 1, scope: !13571)
!13574 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10226, file: !10226, line: 2949, type: !337, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !256)
!13575 = !DILocation(line: 2951, column: 3, scope: !13574)
!13576 = !DILocation(line: 2952, column: 1, scope: !13574)
!13577 = distinct !DISubprogram(name: "z_device_state_init", scope: !13578, file: !13578, line: 23, type: !337, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13579)
!13578 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13579 = !{!13580}
!13580 = !DILocalVariable(name: "dev", scope: !13577, file: !13578, line: 25, type: !13581)
!13581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13582, size: 32)
!13582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13583)
!13583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !13584)
!13584 = !{!13585, !13586, !13587, !13588, !13594, !13595}
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13583, file: !451, line: 380, baseType: !121, size: 32)
!13586 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13583, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!13587 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13583, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!13588 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13583, file: !451, line: 386, baseType: !13589, size: 32, offset: 96)
!13589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13590, size: 32)
!13590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !13591)
!13591 = !{!13592, !13593}
!13592 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13590, file: !451, line: 359, baseType: !190, size: 8)
!13593 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13590, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13594 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13583, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!13595 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13583, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!13596 = !DILocation(line: 0, scope: !13577)
!13597 = !DILocation(line: 31, column: 1, scope: !13577)
!13598 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13578, file: !13578, line: 33, type: !13599, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13601)
!13599 = !DISubroutineType(types: !13600)
!13600 = !{!13581, !121}
!13601 = !{!13602, !13603}
!13602 = !DILocalVariable(name: "name", arg: 1, scope: !13598, file: !13578, line: 33, type: !121)
!13603 = !DILocalVariable(name: "dev", scope: !13598, file: !13578, line: 35, type: !13581)
!13604 = !DILocation(line: 0, scope: !13598)
!13605 = !DILocation(line: 40, column: 12, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13598, file: !13578, line: 40, column: 6)
!13607 = !DILocation(line: 40, column: 21, scope: !13606)
!13608 = !DILocation(line: 40, column: 25, scope: !13606)
!13609 = !DILocation(line: 40, column: 33, scope: !13606)
!13610 = !DILocation(line: 40, column: 6, scope: !13598)
!13611 = !DILocation(line: 55, column: 2, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13598, file: !13578, line: 55, column: 2)
!13613 = !DILocation(line: 50, column: 7, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !13578, line: 50, column: 7)
!13615 = distinct !DILexicalBlock(scope: !13616, file: !13578, line: 49, column: 57)
!13616 = distinct !DILexicalBlock(scope: !13617, file: !13578, line: 49, column: 2)
!13617 = distinct !DILexicalBlock(scope: !13598, file: !13578, line: 49, column: 2)
!13618 = !DILocation(line: 50, column: 30, scope: !13614)
!13619 = !DILocation(line: 50, column: 39, scope: !13614)
!13620 = !DILocation(line: 50, column: 44, scope: !13614)
!13621 = !DILocation(line: 50, column: 7, scope: !13615)
!13622 = !DILocation(line: 49, column: 53, scope: !13616)
!13623 = !DILocation(line: 49, column: 33, scope: !13616)
!13624 = !DILocation(line: 49, column: 2, scope: !13617)
!13625 = distinct !{!13625, !13624, !13626}
!13626 = !DILocation(line: 53, column: 2, scope: !13617)
!13627 = !DILocation(line: 56, column: 7, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13629, file: !13578, line: 56, column: 7)
!13629 = distinct !DILexicalBlock(scope: !13630, file: !13578, line: 55, column: 57)
!13630 = distinct !DILexicalBlock(scope: !13612, file: !13578, line: 55, column: 2)
!13631 = !DILocation(line: 56, column: 30, scope: !13628)
!13632 = !DILocation(line: 56, column: 52, scope: !13628)
!13633 = !DILocation(line: 56, column: 34, scope: !13628)
!13634 = !DILocation(line: 56, column: 58, scope: !13628)
!13635 = !DILocation(line: 56, column: 7, scope: !13629)
!13636 = !DILocation(line: 55, column: 53, scope: !13630)
!13637 = !DILocation(line: 55, column: 33, scope: !13630)
!13638 = distinct !{!13638, !13611, !13639}
!13639 = !DILocation(line: 59, column: 2, scope: !13612)
!13640 = !DILocation(line: 62, column: 1, scope: !13598)
!13641 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13578, file: !13578, line: 93, type: !13642, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13644)
!13642 = !DISubroutineType(types: !13643)
!13643 = !{!136, !13581}
!13644 = !{!13645}
!13645 = !DILocalVariable(name: "dev", arg: 1, scope: !13641, file: !13578, line: 93, type: !13581)
!13646 = !DILocation(line: 0, scope: !13641)
!13647 = !DILocation(line: 99, column: 10, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13641, file: !13578, line: 99, column: 6)
!13649 = !DILocation(line: 99, column: 6, scope: !13641)
!13650 = !DILocation(line: 103, column: 14, scope: !13641)
!13651 = !DILocation(line: 103, column: 21, scope: !13641)
!13652 = !DILocation(line: 103, column: 33, scope: !13641)
!13653 = !DILocation(line: 103, column: 49, scope: !13641)
!13654 = !DILocation(line: 103, column: 58, scope: !13641)
!13655 = !DILocation(line: 104, column: 1, scope: !13641)
!13656 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13578, file: !13578, line: 87, type: !13657, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13660)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{!137, !13659}
!13659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13581, size: 32)
!13660 = !{!13661}
!13661 = !DILocalVariable(name: "devices", arg: 1, scope: !13656, file: !13578, line: 87, type: !13659)
!13662 = !DILocation(line: 0, scope: !13656)
!13663 = !DILocation(line: 89, column: 11, scope: !13656)
!13664 = !DILocation(line: 90, column: 2, scope: !13656)
!13665 = distinct !DISubprogram(name: "device_required_foreach", scope: !13578, file: !13578, line: 125, type: !13666, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13672)
!13666 = !DISubroutineType(types: !13667)
!13667 = !{!107, !13581, !13668, !106}
!13668 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !451, line: 471, baseType: !13669)
!13669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13670, size: 32)
!13670 = !DISubroutineType(types: !13671)
!13671 = !{!107, !13581, !106}
!13672 = !{!13673, !13674, !13675, !13676, !13677}
!13673 = !DILocalVariable(name: "dev", arg: 1, scope: !13665, file: !13578, line: 125, type: !13581)
!13674 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13665, file: !13578, line: 126, type: !13668)
!13675 = !DILocalVariable(name: "context", arg: 3, scope: !13665, file: !13578, line: 127, type: !106)
!13676 = !DILocalVariable(name: "handle_count", scope: !13665, file: !13578, line: 129, type: !137)
!13677 = !DILocalVariable(name: "handles", scope: !13665, file: !13578, line: 130, type: !464)
!13678 = !DILocation(line: 0, scope: !13665)
!13679 = !DILocation(line: 129, column: 2, scope: !13665)
!13680 = !DILocation(line: 129, column: 9, scope: !13665)
!13681 = !DILocation(line: 130, column: 35, scope: !13665)
!13682 = !DILocation(line: 132, column: 33, scope: !13665)
!13683 = !DILocation(line: 132, column: 9, scope: !13665)
!13684 = !DILocation(line: 133, column: 1, scope: !13665)
!13685 = !DILocation(line: 132, column: 2, scope: !13665)
!13686 = distinct !DISubprogram(name: "device_required_handles_get", scope: !451, file: !451, line: 493, type: !13687, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13689)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{!464, !13581, !2683}
!13689 = !{!13690, !13691, !13692, !13693}
!13690 = !DILocalVariable(name: "dev", arg: 1, scope: !13686, file: !451, line: 493, type: !13581)
!13691 = !DILocalVariable(name: "count", arg: 2, scope: !13686, file: !451, line: 493, type: !2683)
!13692 = !DILocalVariable(name: "rv", scope: !13686, file: !451, line: 495, type: !464)
!13693 = !DILocalVariable(name: "i", scope: !13694, file: !451, line: 498, type: !137)
!13694 = distinct !DILexicalBlock(scope: !13695, file: !451, line: 497, column: 18)
!13695 = distinct !DILexicalBlock(scope: !13686, file: !451, line: 497, column: 6)
!13696 = !DILocation(line: 0, scope: !13686)
!13697 = !DILocation(line: 495, column: 35, scope: !13686)
!13698 = !DILocation(line: 497, column: 9, scope: !13695)
!13699 = !DILocation(line: 497, column: 6, scope: !13686)
!13700 = !DILocation(line: 0, scope: !13694)
!13701 = !DILocation(line: 500, column: 11, scope: !13694)
!13702 = !DILocation(line: 500, column: 40, scope: !13694)
!13703 = !DILocation(line: 502, column: 4, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13694, file: !451, line: 501, column: 40)
!13705 = distinct !{!13705, !13706, !13707}
!13706 = !DILocation(line: 500, column: 3, scope: !13694)
!13707 = !DILocation(line: 503, column: 3, scope: !13694)
!13708 = !DILocation(line: 504, column: 10, scope: !13694)
!13709 = !DILocation(line: 505, column: 2, scope: !13694)
!13710 = !DILocation(line: 507, column: 2, scope: !13686)
!13711 = distinct !DISubprogram(name: "device_visitor", scope: !13578, file: !13578, line: 106, type: !13712, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13714)
!13712 = !DISubroutineType(types: !13713)
!13713 = !{!107, !464, !137, !13668, !106}
!13714 = !{!13715, !13716, !13717, !13718, !13719, !13721, !13724, !13725}
!13715 = !DILocalVariable(name: "handles", arg: 1, scope: !13711, file: !13578, line: 106, type: !464)
!13716 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13711, file: !13578, line: 107, type: !137)
!13717 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13711, file: !13578, line: 108, type: !13668)
!13718 = !DILocalVariable(name: "context", arg: 4, scope: !13711, file: !13578, line: 109, type: !106)
!13719 = !DILocalVariable(name: "i", scope: !13720, file: !13578, line: 112, type: !137)
!13720 = distinct !DILexicalBlock(scope: !13711, file: !13578, line: 112, column: 2)
!13721 = !DILocalVariable(name: "dh", scope: !13722, file: !13578, line: 113, type: !466)
!13722 = distinct !DILexicalBlock(scope: !13723, file: !13578, line: 112, column: 44)
!13723 = distinct !DILexicalBlock(scope: !13720, file: !13578, line: 112, column: 2)
!13724 = !DILocalVariable(name: "rdev", scope: !13722, file: !13578, line: 114, type: !13581)
!13725 = !DILocalVariable(name: "rc", scope: !13722, file: !13578, line: 115, type: !107)
!13726 = !DILocation(line: 0, scope: !13711)
!13727 = !DILocation(line: 0, scope: !13720)
!13728 = !DILocation(line: 112, column: 23, scope: !13723)
!13729 = !DILocation(line: 112, column: 2, scope: !13720)
!13730 = distinct !{!13730, !13729, !13731}
!13731 = !DILocation(line: 120, column: 2, scope: !13720)
!13732 = !DILocation(line: 113, column: 24, scope: !13722)
!13733 = !DILocation(line: 0, scope: !13722)
!13734 = !DILocation(line: 114, column: 31, scope: !13722)
!13735 = !DILocation(line: 115, column: 12, scope: !13722)
!13736 = !DILocation(line: 117, column: 10, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13722, file: !13578, line: 117, column: 7)
!13738 = !DILocation(line: 112, column: 39, scope: !13723)
!13739 = !DILocation(line: 123, column: 1, scope: !13711)
!13740 = distinct !DISubprogram(name: "device_from_handle", scope: !451, file: !451, line: 439, type: !13741, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13743)
!13741 = !DISubroutineType(types: !13742)
!13742 = !{!13581, !466}
!13743 = !{!13744, !13745, !13746}
!13744 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13740, file: !451, line: 439, type: !466)
!13745 = !DILocalVariable(name: "dev", scope: !13740, file: !451, line: 443, type: !13581)
!13746 = !DILocalVariable(name: "numdev", scope: !13740, file: !451, line: 444, type: !137)
!13747 = !DILocation(line: 0, scope: !13740)
!13748 = !DILocation(line: 446, column: 7, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13740, file: !451, line: 446, column: 6)
!13750 = !DILocation(line: 446, column: 18, scope: !13749)
!13751 = !DILocation(line: 446, column: 23, scope: !13749)
!13752 = !DILocation(line: 450, column: 2, scope: !13740)
!13753 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13578, file: !13578, line: 135, type: !13666, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13754)
!13754 = !{!13755, !13756, !13757, !13758, !13759}
!13755 = !DILocalVariable(name: "dev", arg: 1, scope: !13753, file: !13578, line: 135, type: !13581)
!13756 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13753, file: !13578, line: 136, type: !13668)
!13757 = !DILocalVariable(name: "context", arg: 3, scope: !13753, file: !13578, line: 137, type: !106)
!13758 = !DILocalVariable(name: "handle_count", scope: !13753, file: !13578, line: 139, type: !137)
!13759 = !DILocalVariable(name: "handles", scope: !13753, file: !13578, line: 140, type: !464)
!13760 = !DILocation(line: 0, scope: !13753)
!13761 = !DILocation(line: 139, column: 2, scope: !13753)
!13762 = !DILocation(line: 139, column: 9, scope: !13753)
!13763 = !DILocation(line: 140, column: 35, scope: !13753)
!13764 = !DILocation(line: 142, column: 33, scope: !13753)
!13765 = !DILocation(line: 142, column: 9, scope: !13753)
!13766 = !DILocation(line: 143, column: 1, scope: !13753)
!13767 = !DILocation(line: 142, column: 2, scope: !13753)
!13768 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !451, file: !451, line: 573, type: !13687, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !13769)
!13769 = !{!13770, !13771, !13772, !13773, !13774}
!13770 = !DILocalVariable(name: "dev", arg: 1, scope: !13768, file: !451, line: 573, type: !13581)
!13771 = !DILocalVariable(name: "count", arg: 2, scope: !13768, file: !451, line: 573, type: !2683)
!13772 = !DILocalVariable(name: "rv", scope: !13768, file: !451, line: 575, type: !464)
!13773 = !DILocalVariable(name: "region", scope: !13768, file: !451, line: 576, type: !137)
!13774 = !DILocalVariable(name: "i", scope: !13768, file: !451, line: 577, type: !137)
!13775 = !DILocation(line: 0, scope: !13768)
!13776 = !DILocation(line: 575, column: 35, scope: !13768)
!13777 = !DILocation(line: 579, column: 9, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13768, file: !451, line: 579, column: 6)
!13779 = !DILocation(line: 579, column: 6, scope: !13768)
!13780 = !DILocation(line: 582, column: 8, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !451, line: 582, column: 8)
!13782 = distinct !DILexicalBlock(scope: !13783, file: !451, line: 581, column: 23)
!13783 = distinct !DILexicalBlock(scope: !13778, file: !451, line: 579, column: 18)
!13784 = !DILocation(line: 582, column: 12, scope: !13781)
!13785 = !DILocation(line: 585, column: 6, scope: !13782)
!13786 = !DILocation(line: 0, scope: !13783)
!13787 = !DILocation(line: 581, column: 17, scope: !13783)
!13788 = !DILocation(line: 581, column: 3, scope: !13783)
!13789 = !DILocation(line: 588, column: 10, scope: !13783)
!13790 = !DILocation(line: 588, column: 16, scope: !13783)
!13791 = !DILocation(line: 589, column: 4, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13783, file: !451, line: 588, column: 39)
!13793 = !DILocation(line: 588, column: 3, scope: !13783)
!13794 = distinct !{!13794, !13793, !13795}
!13795 = !DILocation(line: 590, column: 3, scope: !13783)
!13796 = !DILocation(line: 591, column: 10, scope: !13783)
!13797 = !DILocation(line: 592, column: 2, scope: !13783)
!13798 = !DILocation(line: 575, column: 25, scope: !13768)
!13799 = !DILocation(line: 594, column: 2, scope: !13768)
!13800 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1931, file: !1931, line: 49, type: !13801, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1928, retainedNodes: !256)
!13801 = !DISubroutineType(types: !13802)
!13802 = !{!396}
!13803 = !DILocation(line: 51, column: 10, scope: !13800)
!13804 = !DILocation(line: 51, column: 20, scope: !13800)
!13805 = !DILocation(line: 51, column: 2, scope: !13800)
!13806 = distinct !DISubprogram(name: "coredump", scope: !3196, file: !3196, line: 209, type: !13807, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13953)
!13807 = !DISubroutineType(types: !13808)
!13808 = !{null, !32, !13809, !13853}
!13809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13810, size: 32)
!13810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13811)
!13811 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2811, line: 141, baseType: !13812)
!13812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2811, line: 97, size: 256, elements: !13813)
!13813 = !{!13814}
!13814 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13812, file: !2811, line: 107, baseType: !13815, size: 256)
!13815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2811, line: 98, size: 256, elements: !13816)
!13816 = !{!13817, !13822, !13827, !13832, !13837, !13842, !13847, !13852}
!13817 = !DIDerivedType(tag: DW_TAG_member, scope: !13815, file: !2811, line: 99, baseType: !13818, size: 32)
!13818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13815, file: !2811, line: 99, size: 32, elements: !13819)
!13819 = !{!13820, !13821}
!13820 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13818, file: !2811, line: 99, baseType: !108, size: 32)
!13821 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13818, file: !2811, line: 99, baseType: !108, size: 32)
!13822 = !DIDerivedType(tag: DW_TAG_member, scope: !13815, file: !2811, line: 100, baseType: !13823, size: 32, offset: 32)
!13823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13815, file: !2811, line: 100, size: 32, elements: !13824)
!13824 = !{!13825, !13826}
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13823, file: !2811, line: 100, baseType: !108, size: 32)
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13823, file: !2811, line: 100, baseType: !108, size: 32)
!13827 = !DIDerivedType(tag: DW_TAG_member, scope: !13815, file: !2811, line: 101, baseType: !13828, size: 32, offset: 64)
!13828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13815, file: !2811, line: 101, size: 32, elements: !13829)
!13829 = !{!13830, !13831}
!13830 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13828, file: !2811, line: 101, baseType: !108, size: 32)
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13828, file: !2811, line: 101, baseType: !108, size: 32)
!13832 = !DIDerivedType(tag: DW_TAG_member, scope: !13815, file: !2811, line: 102, baseType: !13833, size: 32, offset: 96)
!13833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13815, file: !2811, line: 102, size: 32, elements: !13834)
!13834 = !{!13835, !13836}
!13835 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13833, file: !2811, line: 102, baseType: !108, size: 32)
!13836 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13833, file: !2811, line: 102, baseType: !108, size: 32)
!13837 = !DIDerivedType(tag: DW_TAG_member, scope: !13815, file: !2811, line: 103, baseType: !13838, size: 32, offset: 128)
!13838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13815, file: !2811, line: 103, size: 32, elements: !13839)
!13839 = !{!13840, !13841}
!13840 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13838, file: !2811, line: 103, baseType: !108, size: 32)
!13841 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13838, file: !2811, line: 103, baseType: !108, size: 32)
!13842 = !DIDerivedType(tag: DW_TAG_member, scope: !13815, file: !2811, line: 104, baseType: !13843, size: 32, offset: 160)
!13843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13815, file: !2811, line: 104, size: 32, elements: !13844)
!13844 = !{!13845, !13846}
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13843, file: !2811, line: 104, baseType: !108, size: 32)
!13846 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13843, file: !2811, line: 104, baseType: !108, size: 32)
!13847 = !DIDerivedType(tag: DW_TAG_member, scope: !13815, file: !2811, line: 105, baseType: !13848, size: 32, offset: 192)
!13848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13815, file: !2811, line: 105, size: 32, elements: !13849)
!13849 = !{!13850, !13851}
!13850 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13848, file: !2811, line: 105, baseType: !108, size: 32)
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13848, file: !2811, line: 105, baseType: !108, size: 32)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13815, file: !2811, line: 106, baseType: !108, size: 32, offset: 224)
!13853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13854, size: 32)
!13854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !13855)
!13855 = !{!13856, !13914, !13926, !13927, !13928, !13929, !13935, !13948}
!13856 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13854, file: !168, line: 247, baseType: !13857, size: 384)
!13857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !13858)
!13858 = !{!13859, !13883, !13890, !13891, !13892, !13901, !13902, !13903}
!13859 = !DIDerivedType(tag: DW_TAG_member, scope: !13857, file: !168, line: 60, baseType: !13860, size: 64)
!13860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13857, file: !168, line: 60, size: 64, elements: !13861)
!13861 = !{!13862, !13877}
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13860, file: !168, line: 61, baseType: !13863, size: 64)
!13863 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !13864)
!13864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !13865)
!13865 = !{!13866, !13872}
!13866 = !DIDerivedType(tag: DW_TAG_member, scope: !13864, file: !151, line: 38, baseType: !13867, size: 32)
!13867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13864, file: !151, line: 38, size: 32, elements: !13868)
!13868 = !{!13869, !13871}
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13867, file: !151, line: 39, baseType: !13870, size: 32)
!13870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13864, size: 32)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13867, file: !151, line: 40, baseType: !13870, size: 32)
!13872 = !DIDerivedType(tag: DW_TAG_member, scope: !13864, file: !151, line: 42, baseType: !13873, size: 32, offset: 32)
!13873 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13864, file: !151, line: 42, size: 32, elements: !13874)
!13874 = !{!13875, !13876}
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13873, file: !151, line: 43, baseType: !13870, size: 32)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13873, file: !151, line: 44, baseType: !13870, size: 32)
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13860, file: !168, line: 62, baseType: !13878, size: 64)
!13878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !13879)
!13879 = !{!13880}
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13878, file: !180, line: 50, baseType: !13881, size: 64)
!13881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13882, size: 64, elements: !185)
!13882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13878, size: 32)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13857, file: !168, line: 68, baseType: !13884, size: 32, offset: 64)
!13884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13885, size: 32)
!13885 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !13886)
!13886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !13887)
!13887 = !{!13888}
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13886, file: !146, line: 232, baseType: !13889, size: 64)
!13889 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !13864)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13857, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13857, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!13892 = !DIDerivedType(tag: DW_TAG_member, scope: !13857, file: !168, line: 90, baseType: !13893, size: 16, offset: 112)
!13893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13857, file: !168, line: 90, size: 16, elements: !13894)
!13894 = !{!13895, !13900}
!13895 = !DIDerivedType(tag: DW_TAG_member, scope: !13893, file: !168, line: 91, baseType: !13896, size: 16)
!13896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13893, file: !168, line: 91, size: 16, elements: !13897)
!13897 = !{!13898, !13899}
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13896, file: !168, line: 96, baseType: !200, size: 8)
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13896, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!13900 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13893, file: !168, line: 100, baseType: !126, size: 16)
!13901 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13857, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!13902 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13857, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!13903 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13857, file: !168, line: 131, baseType: !13904, size: 192, offset: 192)
!13904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !13905)
!13905 = !{!13906, !13907, !13913}
!13906 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13904, file: !146, line: 245, baseType: !13863, size: 64)
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13904, file: !146, line: 246, baseType: !13908, size: 32, offset: 64)
!13908 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !13909)
!13909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13910, size: 32)
!13910 = !DISubroutineType(types: !13911)
!13911 = !{null, !13912}
!13912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13904, size: 32)
!13913 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13904, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!13914 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13854, file: !168, line: 250, baseType: !13915, size: 288, offset: 384)
!13915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !13916)
!13916 = !{!13917, !13918, !13919, !13920, !13921, !13922, !13923, !13924, !13925}
!13917 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13915, file: !219, line: 26, baseType: !108, size: 32)
!13918 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13915, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!13919 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13915, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!13920 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13915, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!13921 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13915, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!13922 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13915, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!13923 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13915, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!13924 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13915, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!13925 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13915, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!13926 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13854, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!13927 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13854, file: !168, line: 256, baseType: !13885, size: 64, offset: 704)
!13928 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13854, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!13929 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13854, file: !168, line: 300, baseType: !13930, size: 96, offset: 800)
!13930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !13931)
!13931 = !{!13932, !13933, !13934}
!13932 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13930, file: !168, line: 153, baseType: !22, size: 32)
!13933 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13930, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!13934 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13930, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!13935 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13854, file: !168, line: 325, baseType: !13936, size: 32, offset: 896)
!13936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13937, size: 32)
!13937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !13938)
!13938 = !{!13939, !13945, !13946}
!13939 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13937, file: !142, line: 5074, baseType: !13940, size: 96)
!13940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !13941)
!13941 = !{!13942, !13943, !13944}
!13942 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13940, file: !245, line: 57, baseType: !248, size: 32)
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13940, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!13944 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13940, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!13945 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13937, file: !142, line: 5075, baseType: !13885, size: 64, offset: 96)
!13946 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13937, file: !142, line: 5076, baseType: !13947, offset: 160)
!13947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!13948 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13854, file: !168, line: 343, baseType: !13949, size: 64, offset: 928)
!13949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !13950)
!13950 = !{!13951, !13952}
!13951 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13949, file: !219, line: 63, baseType: !108, size: 32)
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13949, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!13953 = !{!13954, !13955, !13956}
!13954 = !DILocalVariable(name: "reason", arg: 1, scope: !13806, file: !3196, line: 209, type: !32)
!13955 = !DILocalVariable(name: "esf", arg: 2, scope: !13806, file: !3196, line: 209, type: !13809)
!13956 = !DILocalVariable(name: "thread", arg: 3, scope: !13806, file: !3196, line: 210, type: !13853)
!13957 = !DILocation(line: 0, scope: !13806)
!13958 = !DILocation(line: 212, column: 1, scope: !13806)
!13959 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3196, file: !3196, line: 214, type: !13960, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13962)
!13960 = !DISubroutineType(types: !13961)
!13961 = !{null, !22, !22}
!13962 = !{!13963, !13964}
!13963 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13959, file: !3196, line: 214, type: !22)
!13964 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13959, file: !3196, line: 214, type: !22)
!13965 = !DILocation(line: 0, scope: !13959)
!13966 = !DILocation(line: 216, column: 1, scope: !13959)
!13967 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3196, file: !3196, line: 218, type: !13968, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13970)
!13968 = !DISubroutineType(types: !13969)
!13969 = !{null, !401, !137}
!13970 = !{!13971, !13972}
!13971 = !DILocalVariable(name: "buf", arg: 1, scope: !13967, file: !3196, line: 218, type: !401)
!13972 = !DILocalVariable(name: "buflen", arg: 2, scope: !13967, file: !3196, line: 218, type: !137)
!13973 = !DILocation(line: 0, scope: !13967)
!13974 = !DILocation(line: 220, column: 1, scope: !13967)
!13975 = distinct !DISubprogram(name: "coredump_query", scope: !3196, file: !3196, line: 222, type: !13976, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!107, !3195, !106}
!13978 = !{!13979, !13980}
!13979 = !DILocalVariable(name: "query_id", arg: 1, scope: !13975, file: !3196, line: 222, type: !3195)
!13980 = !DILocalVariable(name: "arg", arg: 2, scope: !13975, file: !3196, line: 222, type: !106)
!13981 = !DILocation(line: 0, scope: !13975)
!13982 = !DILocation(line: 224, column: 2, scope: !13975)
!13983 = distinct !DISubprogram(name: "coredump_cmd", scope: !3196, file: !3196, line: 227, type: !13984, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13986)
!13984 = !DISubroutineType(types: !13985)
!13985 = !{!107, !3202, !106}
!13986 = !{!13987, !13988}
!13987 = !DILocalVariable(name: "query_id", arg: 1, scope: !13983, file: !3196, line: 227, type: !3202)
!13988 = !DILocalVariable(name: "arg", arg: 2, scope: !13983, file: !3196, line: 227, type: !106)
!13989 = !DILocation(line: 0, scope: !13983)
!13990 = !DILocation(line: 229, column: 2, scope: !13983)
!13991 = distinct !DISubprogram(name: "arch_system_halt", scope: !13992, file: !13992, line: 23, type: !7065, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13993)
!13992 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13993 = !{!13994}
!13994 = !DILocalVariable(name: "reason", arg: 1, scope: !13991, file: !13992, line: 23, type: !32)
!13995 = !DILocation(line: 0, scope: !13991)
!13996 = !DILocation(line: 55, column: 2, scope: !13997, inlinedAt: !14001)
!13997 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13998)
!13998 = !{!13999, !14000}
!13999 = !DILocalVariable(name: "key", scope: !13997, file: !7054, line: 44, type: !32)
!14000 = !DILocalVariable(name: "tmp", scope: !13997, file: !7054, line: 53, type: !32)
!14001 = distinct !DILocation(line: 31, column: 8, scope: !13991)
!14002 = !{i64 2242280}
!14003 = !DILocation(line: 0, scope: !13997, inlinedAt: !14001)
!14004 = !DILocation(line: 32, column: 2, scope: !13991)
!14005 = !DILocation(line: 32, column: 2, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14007, file: !13992, line: 32, column: 2)
!14007 = distinct !DILexicalBlock(scope: !13991, file: !13992, line: 32, column: 2)
!14008 = distinct !{!14008, !14009, !14010}
!14009 = !DILocation(line: 32, column: 2, scope: !14007)
!14010 = !DILocation(line: 34, column: 2, scope: !14007)
!14011 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13992, file: !13992, line: 39, type: !14012, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !14014)
!14012 = !DISubroutineType(types: !14013)
!14013 = !{null, !32, !13809}
!14014 = !{!14015, !14016}
!14015 = !DILocalVariable(name: "reason", arg: 1, scope: !14011, file: !13992, line: 39, type: !32)
!14016 = !DILocalVariable(name: "esf", arg: 2, scope: !14011, file: !13992, line: 40, type: !13809)
!14017 = !DILocation(line: 0, scope: !14011)
!14018 = !DILocation(line: 45, column: 2, scope: !14019)
!14019 = distinct !DILexicalBlock(scope: !14020, file: !13992, line: 45, column: 2)
!14020 = distinct !DILexicalBlock(scope: !14021, file: !13992, line: 45, column: 2)
!14021 = distinct !DILexicalBlock(scope: !14022, file: !13992, line: 45, column: 2)
!14022 = distinct !DILexicalBlock(scope: !14011, file: !13992, line: 45, column: 2)
!14023 = !DILocation(line: 46, column: 2, scope: !14011)
!14024 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13992, file: !13992, line: 81, type: !7065, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !14025)
!14025 = !{!14026}
!14026 = !DILocalVariable(name: "reason", arg: 1, scope: !14024, file: !13992, line: 81, type: !32)
!14027 = !DILocation(line: 0, scope: !14024)
!14028 = !DILocation(line: 83, column: 2, scope: !14024)
!14029 = distinct !DISubprogram(name: "z_fatal_error", scope: !13992, file: !13992, line: 96, type: !14012, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !14030)
!14030 = !{!14031, !14032, !14033, !14034}
!14031 = !DILocalVariable(name: "reason", arg: 1, scope: !14029, file: !13992, line: 96, type: !32)
!14032 = !DILocalVariable(name: "esf", arg: 2, scope: !14029, file: !13992, line: 96, type: !13809)
!14033 = !DILocalVariable(name: "key", scope: !14029, file: !13992, line: 102, type: !32)
!14034 = !DILocalVariable(name: "thread", scope: !14029, file: !13992, line: 103, type: !13853)
!14035 = !DILocation(line: 0, scope: !14029)
!14036 = !DILocation(line: 55, column: 2, scope: !13997, inlinedAt: !14037)
!14037 = distinct !DILocation(line: 102, column: 21, scope: !14029)
!14038 = !DILocation(line: 0, scope: !13997, inlinedAt: !14037)
!14039 = !DILocation(line: 104, column: 4, scope: !14029)
!14040 = !DILocation(line: 109, column: 2, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14042, file: !13992, line: 109, column: 2)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !13992, line: 109, column: 2)
!14043 = distinct !DILexicalBlock(scope: !14044, file: !13992, line: 109, column: 2)
!14044 = distinct !DILexicalBlock(scope: !14029, file: !13992, line: 109, column: 2)
!14045 = !DILocation(line: 119, column: 11, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14029, file: !13992, line: 119, column: 6)
!14047 = !DILocation(line: 119, column: 20, scope: !14046)
!14048 = !DILocalVariable(name: "esf", arg: 1, scope: !14049, file: !8393, line: 71, type: !13809)
!14049 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8393, file: !8393, line: 71, type: !14050, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !14052)
!14050 = !DISubroutineType(types: !14051)
!14051 = !{!136, !13809}
!14052 = !{!14048}
!14053 = !DILocation(line: 0, scope: !14049, inlinedAt: !14054)
!14054 = distinct !DILocation(line: 119, column: 23, scope: !14046)
!14055 = !DILocation(line: 73, column: 21, scope: !14049, inlinedAt: !14054)
!14056 = !DILocation(line: 73, column: 26, scope: !14049, inlinedAt: !14054)
!14057 = !DILocation(line: 73, column: 9, scope: !14049, inlinedAt: !14054)
!14058 = !DILocation(line: 119, column: 6, scope: !14029)
!14059 = !DILocation(line: 120, column: 3, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14061, file: !13992, line: 120, column: 3)
!14061 = distinct !DILexicalBlock(scope: !14062, file: !13992, line: 120, column: 3)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !13992, line: 120, column: 3)
!14063 = distinct !DILexicalBlock(scope: !14064, file: !13992, line: 120, column: 3)
!14064 = distinct !DILexicalBlock(scope: !14046, file: !13992, line: 119, column: 57)
!14065 = !DILocation(line: 121, column: 2, scope: !14064)
!14066 = !DILocation(line: 124, column: 2, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14068, file: !13992, line: 124, column: 2)
!14068 = distinct !DILexicalBlock(scope: !14069, file: !13992, line: 124, column: 2)
!14069 = distinct !DILexicalBlock(scope: !14070, file: !13992, line: 124, column: 2)
!14070 = distinct !DILexicalBlock(scope: !14029, file: !13992, line: 124, column: 2)
!14071 = !DILocation(line: 131, column: 2, scope: !14029)
!14072 = !DILocation(line: 0, scope: !14049, inlinedAt: !14073)
!14073 = distinct !DILocation(line: 151, column: 24, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14075, file: !13992, line: 151, column: 7)
!14075 = distinct !DILexicalBlock(scope: !14076, file: !13992, line: 146, column: 32)
!14076 = distinct !DILexicalBlock(scope: !14029, file: !13992, line: 146, column: 6)
!14077 = !DILocation(line: 151, column: 7, scope: !14075)
!14078 = !DILocation(line: 151, column: 21, scope: !14074)
!14079 = !DILocalVariable(name: "key", arg: 1, scope: !14080, file: !7054, line: 84, type: !32)
!14080 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !14081)
!14081 = !{!14079}
!14082 = !DILocation(line: 0, scope: !14080, inlinedAt: !14083)
!14083 = distinct !DILocation(line: 186, column: 2, scope: !14029)
!14084 = !DILocation(line: 95, column: 2, scope: !14080, inlinedAt: !14083)
!14085 = !{i64 2243097}
!14086 = !DILocation(line: 189, column: 3, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14088, file: !13992, line: 188, column: 41)
!14088 = distinct !DILexicalBlock(scope: !14029, file: !13992, line: 188, column: 6)
!14089 = !DILocation(line: 191, column: 1, scope: !14029)
!14090 = distinct !DISubprogram(name: "k_current_get", scope: !142, file: !142, line: 530, type: !14091, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !256)
!14091 = !DISubroutineType(types: !14092)
!14092 = !{!14093}
!14093 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !13853)
!14094 = !DILocation(line: 535, column: 9, scope: !14090)
!14095 = !DILocation(line: 535, column: 2, scope: !14090)
!14096 = distinct !DISubprogram(name: "reason_to_str", scope: !13992, file: !13992, line: 62, type: !14097, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !14099)
!14097 = !DISubroutineType(types: !14098)
!14098 = !{!121, !32}
!14099 = !{!14100}
!14100 = !DILocalVariable(name: "reason", arg: 1, scope: !14096, file: !13992, line: 62, type: !32)
!14101 = !DILocation(line: 0, scope: !14096)
!14102 = !DILocation(line: 64, column: 2, scope: !14096)
!14103 = !DILocation(line: 0, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14096, file: !13992, line: 64, column: 18)
!14105 = !DILocation(line: 78, column: 1, scope: !14096)
!14106 = distinct !DISubprogram(name: "thread_name_get", scope: !13992, file: !13992, line: 51, type: !14107, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !14109)
!14107 = !DISubroutineType(types: !14108)
!14108 = !{!121, !13853}
!14109 = !{!14110, !14111}
!14110 = !DILocalVariable(name: "thread", arg: 1, scope: !14106, file: !13992, line: 51, type: !13853)
!14111 = !DILocalVariable(name: "thread_name", scope: !14106, file: !13992, line: 53, type: !121)
!14112 = !DILocation(line: 0, scope: !14106)
!14113 = !DILocation(line: 53, column: 36, scope: !14106)
!14114 = !DILocation(line: 53, column: 28, scope: !14106)
!14115 = !DILocation(line: 53, column: 47, scope: !14106)
!14116 = !DILocation(line: 55, column: 19, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14106, file: !13992, line: 55, column: 6)
!14118 = !DILocation(line: 55, column: 28, scope: !14117)
!14119 = !DILocation(line: 55, column: 32, scope: !14117)
!14120 = !DILocation(line: 55, column: 47, scope: !14117)
!14121 = !DILocation(line: 55, column: 6, scope: !14106)
!14122 = !DILocation(line: 57, column: 2, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14117, file: !13992, line: 55, column: 57)
!14124 = !DILocation(line: 59, column: 2, scope: !14106)
!14125 = distinct !DISubprogram(name: "k_thread_abort", scope: !3668, file: !3668, line: 188, type: !14126, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !14128)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{null, !14093}
!14128 = !{!14129}
!14129 = !DILocalVariable(name: "thread", arg: 1, scope: !14125, file: !3668, line: 188, type: !14093)
!14130 = !DILocation(line: 0, scope: !14125)
!14131 = !DILocation(line: 197, column: 2, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14125, file: !3668, line: 197, column: 2)
!14133 = !{i64 2154743059}
!14134 = !DILocation(line: 198, column: 2, scope: !14125)
!14135 = !DILocation(line: 199, column: 1, scope: !14125)
!14136 = distinct !DISubprogram(name: "z_current_get", scope: !3668, file: !3668, line: 173, type: !14091, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !256)
!14137 = !DILocation(line: 180, column: 2, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14136, file: !3668, line: 180, column: 2)
!14139 = !{i64 2154742991}
!14140 = !DILocation(line: 181, column: 9, scope: !14136)
!14141 = !DILocation(line: 181, column: 2, scope: !14136)
!14142 = distinct !DISubprogram(name: "z_early_memset", scope: !1939, file: !1939, line: 108, type: !14143, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14145)
!14143 = !DISubroutineType(types: !14144)
!14144 = !{null, !106, !107, !137}
!14145 = !{!14146, !14147, !14148}
!14146 = !DILocalVariable(name: "dst", arg: 1, scope: !14142, file: !1939, line: 108, type: !106)
!14147 = !DILocalVariable(name: "c", arg: 2, scope: !14142, file: !1939, line: 108, type: !107)
!14148 = !DILocalVariable(name: "n", arg: 3, scope: !14142, file: !1939, line: 108, type: !137)
!14149 = !DILocation(line: 0, scope: !14142)
!14150 = !DILocation(line: 110, column: 9, scope: !14142)
!14151 = !DILocation(line: 111, column: 1, scope: !14142)
!14152 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1939, file: !1939, line: 121, type: !14153, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14155)
!14153 = !DISubroutineType(types: !14154)
!14154 = !{null, !106, !13, !137}
!14155 = !{!14156, !14157, !14158}
!14156 = !DILocalVariable(name: "dst", arg: 1, scope: !14152, file: !1939, line: 121, type: !106)
!14157 = !DILocalVariable(name: "src", arg: 2, scope: !14152, file: !1939, line: 121, type: !13)
!14158 = !DILocalVariable(name: "n", arg: 3, scope: !14152, file: !1939, line: 121, type: !137)
!14159 = !DILocation(line: 0, scope: !14152)
!14160 = !DILocation(line: 123, column: 9, scope: !14152)
!14161 = !DILocation(line: 124, column: 1, scope: !14152)
!14162 = distinct !DISubprogram(name: "z_bss_zero", scope: !1939, file: !1939, line: 132, type: !337, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !256)
!14163 = !DILocation(line: 143, column: 2, scope: !14162)
!14164 = !DILocation(line: 168, column: 1, scope: !14162)
!14165 = distinct !DISubprogram(name: "z_init_cpu", scope: !1939, file: !1939, line: 372, type: !9835, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14166)
!14166 = !{!14167}
!14167 = !DILocalVariable(name: "id", arg: 1, scope: !14165, file: !1939, line: 372, type: !107)
!14168 = !DILocation(line: 0, scope: !14165)
!14169 = !DILocation(line: 374, column: 2, scope: !14165)
!14170 = !DILocation(line: 375, column: 34, scope: !14165)
!14171 = !DILocation(line: 375, column: 19, scope: !14165)
!14172 = !DILocation(line: 375, column: 31, scope: !14165)
!14173 = !DILocation(line: 376, column: 24, scope: !14165)
!14174 = !DILocation(line: 376, column: 19, scope: !14165)
!14175 = !DILocation(line: 376, column: 22, scope: !14165)
!14176 = !DILocation(line: 378, column: 26, scope: !14165)
!14177 = !DILocation(line: 378, column: 4, scope: !14165)
!14178 = !DILocation(line: 378, column: 50, scope: !14165)
!14179 = !DILocation(line: 377, column: 19, scope: !14165)
!14180 = !DILocation(line: 377, column: 29, scope: !14165)
!14181 = !DILocation(line: 384, column: 1, scope: !14165)
!14182 = distinct !DISubprogram(name: "init_idle_thread", scope: !1939, file: !1939, line: 343, type: !9835, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14183)
!14183 = !{!14184, !14185, !14186, !14189}
!14184 = !DILocalVariable(name: "i", arg: 1, scope: !14182, file: !1939, line: 343, type: !107)
!14185 = !DILocalVariable(name: "thread", scope: !14182, file: !1939, line: 345, type: !2031)
!14186 = !DILocalVariable(name: "stack", scope: !14182, file: !1939, line: 346, type: !14187)
!14187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14188, size: 32)
!14188 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !2145)
!14189 = !DILocalVariable(name: "tname", scope: !14182, file: !1939, line: 358, type: !283)
!14190 = !DILocation(line: 0, scope: !14182)
!14191 = !DILocation(line: 345, column: 29, scope: !14182)
!14192 = !DILocation(line: 346, column: 28, scope: !14182)
!14193 = !DILocation(line: 362, column: 37, scope: !14182)
!14194 = !DILocation(line: 362, column: 36, scope: !14182)
!14195 = !DILocation(line: 361, column: 2, scope: !14182)
!14196 = !DILocation(line: 365, column: 2, scope: !14182)
!14197 = !DILocation(line: 370, column: 1, scope: !14182)
!14198 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !319, file: !319, line: 331, type: !14199, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14201)
!14199 = !DISubroutineType(types: !14200)
!14200 = !{!283, !14187}
!14201 = !{!14202}
!14202 = !DILocalVariable(name: "sym", arg: 1, scope: !14198, file: !319, line: 331, type: !14187)
!14203 = !DILocation(line: 0, scope: !14198)
!14204 = !DILocation(line: 333, column: 21, scope: !14198)
!14205 = !DILocation(line: 333, column: 2, scope: !14198)
!14206 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14207, file: !14207, line: 155, type: !14208, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14210)
!14207 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14208 = !DISubroutineType(types: !14209)
!14209 = !{null, !2031}
!14210 = !{!14211}
!14211 = !DILocalVariable(name: "thread", arg: 1, scope: !14206, file: !14207, line: 155, type: !2031)
!14212 = !DILocation(line: 0, scope: !14206)
!14213 = !DILocation(line: 157, column: 15, scope: !14206)
!14214 = !DILocation(line: 157, column: 28, scope: !14206)
!14215 = !DILocation(line: 158, column: 1, scope: !14206)
!14216 = distinct !DISubprogram(name: "z_cstart", scope: !1939, file: !1939, line: 501, type: !337, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14217)
!14217 = !{!14218}
!14218 = !DILocalVariable(name: "dummy_thread", scope: !14216, file: !1939, line: 518, type: !2032)
!14219 = !DILocation(line: 507, column: 2, scope: !14216)
!14220 = !DILocation(line: 43, column: 14, scope: !14221, inlinedAt: !14225)
!14221 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14222, file: !14222, line: 40, type: !337, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14223)
!14222 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14223 = !{!14224}
!14224 = !DILocalVariable(name: "msp", scope: !14221, file: !14222, line: 42, type: !108)
!14225 = distinct !DILocation(line: 44, column: 2, scope: !14226, inlinedAt: !14228)
!14226 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14227, file: !14227, line: 42, type: !337, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !256)
!14227 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14228 = distinct !DILocation(line: 510, column: 2, scope: !14216)
!14229 = !DILocation(line: 43, column: 3, scope: !14221, inlinedAt: !14225)
!14230 = !DILocation(line: 43, column: 60, scope: !14221, inlinedAt: !14225)
!14231 = !DILocation(line: 0, scope: !14221, inlinedAt: !14225)
!14232 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14233, file: !7375, line: 1153, type: !108)
!14233 = distinct !DISubprogram(name: "__set_MSP", scope: !7375, file: !7375, line: 1153, type: !7466, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14234)
!14234 = !{!14232}
!14235 = !DILocation(line: 0, scope: !14233, inlinedAt: !14236)
!14236 = distinct !DILocation(line: 46, column: 2, scope: !14221, inlinedAt: !14225)
!14237 = !DILocation(line: 1155, column: 3, scope: !14233, inlinedAt: !14236)
!14238 = !{i64 3516656}
!14239 = !DILocation(line: 62, column: 11, scope: !14221, inlinedAt: !14225)
!14240 = !DILocation(line: 102, column: 2, scope: !14241, inlinedAt: !14242)
!14241 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8393, file: !8393, line: 97, type: !337, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !256)
!14242 = distinct !DILocation(line: 45, column: 2, scope: !14226, inlinedAt: !14228)
!14243 = !DILocation(line: 108, column: 2, scope: !14241, inlinedAt: !14242)
!14244 = !DILocation(line: 112, column: 2, scope: !14241, inlinedAt: !14242)
!14245 = !DILocation(line: 113, column: 2, scope: !14241, inlinedAt: !14242)
!14246 = !DILocation(line: 114, column: 2, scope: !14241, inlinedAt: !14242)
!14247 = !DILocation(line: 116, column: 2, scope: !14241, inlinedAt: !14242)
!14248 = !DILocation(line: 123, column: 13, scope: !14241, inlinedAt: !14242)
!14249 = !DILocation(line: 46, column: 2, scope: !14226, inlinedAt: !14228)
!14250 = !DILocation(line: 47, column: 2, scope: !14226, inlinedAt: !14228)
!14251 = !DILocation(line: 174, column: 12, scope: !14252, inlinedAt: !14253)
!14252 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8393, file: !8393, line: 169, type: !337, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !256)
!14253 = distinct !DILocation(line: 48, column: 2, scope: !14226, inlinedAt: !14228)
!14254 = !DILocation(line: 179, column: 12, scope: !14252, inlinedAt: !14253)
!14255 = !DILocation(line: 50, column: 2, scope: !14226, inlinedAt: !14228)
!14256 = !DILocation(line: 57, column: 2, scope: !14226, inlinedAt: !14228)
!14257 = !DILocation(line: 518, column: 2, scope: !14216)
!14258 = !DILocation(line: 518, column: 18, scope: !14216)
!14259 = !DILocation(line: 520, column: 2, scope: !14216)
!14260 = !DILocation(line: 523, column: 2, scope: !14216)
!14261 = !DILocation(line: 526, column: 2, scope: !14216)
!14262 = !DILocation(line: 527, column: 2, scope: !14216)
!14263 = !DILocation(line: 543, column: 24, scope: !14216)
!14264 = !DILocation(line: 543, column: 2, scope: !14216)
!14265 = !DILocation(line: 0, scope: !2169)
!14266 = !DILocation(line: 246, column: 15, scope: !2187)
!14267 = !DILocation(line: 246, column: 36, scope: !2186)
!14268 = !DILocation(line: 246, column: 2, scope: !2187)
!14269 = !DILocation(line: 247, column: 37, scope: !2185)
!14270 = !DILocation(line: 0, scope: !2185)
!14271 = !DILocation(line: 248, column: 19, scope: !2185)
!14272 = !DILocation(line: 248, column: 12, scope: !2185)
!14273 = !DILocation(line: 250, column: 11, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !2185, file: !1939, line: 250, column: 7)
!14275 = !DILocation(line: 250, column: 7, scope: !2185)
!14276 = !DILocation(line: 254, column: 11, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !1939, line: 254, column: 8)
!14278 = distinct !DILexicalBlock(scope: !14274, file: !1939, line: 250, column: 20)
!14279 = !DILocation(line: 254, column: 8, scope: !14278)
!14280 = !DILocation(line: 255, column: 9, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14277, file: !1939, line: 254, column: 17)
!14282 = !DILocation(line: 258, column: 9, scope: !14281)
!14283 = !DILocation(line: 261, column: 28, scope: !14281)
!14284 = !DILocation(line: 261, column: 10, scope: !14281)
!14285 = !DILocation(line: 261, column: 17, scope: !14281)
!14286 = !DILocation(line: 261, column: 26, scope: !14281)
!14287 = !DILocation(line: 262, column: 4, scope: !14281)
!14288 = !DILocation(line: 263, column: 9, scope: !14278)
!14289 = !DILocation(line: 263, column: 16, scope: !14278)
!14290 = !DILocation(line: 263, column: 28, scope: !14278)
!14291 = !DILocation(line: 264, column: 3, scope: !14278)
!14292 = !DILocation(line: 246, column: 60, scope: !2186)
!14293 = distinct !{!14293, !14268, !14294}
!14294 = !DILocation(line: 265, column: 2, scope: !2187)
!14295 = !DILocation(line: 266, column: 1, scope: !2169)
!14296 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7409, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14297)
!14297 = !{!14298, !14299}
!14298 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14296, file: !644, line: 1814, type: !911)
!14299 = !DILocalVariable(name: "priority", arg: 2, scope: !14296, file: !644, line: 1814, type: !108)
!14300 = !DILocation(line: 0, scope: !14296)
!14301 = !DILocation(line: 1822, column: 48, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14303, file: !644, line: 1821, column: 3)
!14303 = distinct !DILexicalBlock(scope: !14296, file: !644, line: 1816, column: 7)
!14304 = !DILocation(line: 1822, column: 32, scope: !14302)
!14305 = !DILocation(line: 1822, column: 40, scope: !14302)
!14306 = !DILocation(line: 1822, column: 5, scope: !14302)
!14307 = !DILocation(line: 1822, column: 46, scope: !14302)
!14308 = !DILocation(line: 1824, column: 1, scope: !14296)
!14309 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14227, file: !14227, line: 32, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!14310 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14311, file: !14311, line: 215, type: !14208, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14312)
!14311 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14312 = !{!14313}
!14313 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14310, file: !14311, line: 215, type: !2031)
!14314 = !DILocation(line: 0, scope: !14310)
!14315 = !DILocation(line: 217, column: 21, scope: !14310)
!14316 = !DILocation(line: 217, column: 34, scope: !14310)
!14317 = !DILocation(line: 221, column: 21, scope: !14310)
!14318 = !DILocation(line: 221, column: 34, scope: !14310)
!14319 = !DILocation(line: 223, column: 27, scope: !14310)
!14320 = !DILocation(line: 223, column: 33, scope: !14310)
!14321 = !DILocation(line: 224, column: 27, scope: !14310)
!14322 = !DILocation(line: 224, column: 32, scope: !14310)
!14323 = !DILocation(line: 232, column: 16, scope: !14310)
!14324 = !DILocation(line: 232, column: 30, scope: !14310)
!14325 = !DILocation(line: 239, column: 24, scope: !14310)
!14326 = !DILocation(line: 240, column: 1, scope: !14310)
!14327 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1939, file: !1939, line: 399, type: !14328, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14330)
!14328 = !DISubroutineType(types: !14329)
!14329 = !{!283}
!14330 = !{!14331}
!14331 = !DILocalVariable(name: "stack_ptr", scope: !14327, file: !1939, line: 401, type: !283)
!14332 = !DILocation(line: 404, column: 2, scope: !14327)
!14333 = !DILocation(line: 416, column: 24, scope: !14327)
!14334 = !DILocation(line: 418, column: 14, scope: !14327)
!14335 = !DILocation(line: 0, scope: !14327)
!14336 = !DILocation(line: 423, column: 2, scope: !14327)
!14337 = !DILocation(line: 424, column: 2, scope: !14327)
!14338 = !DILocation(line: 426, column: 2, scope: !14327)
!14339 = !DILocation(line: 428, column: 2, scope: !14327)
!14340 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1939, file: !1939, line: 432, type: !14341, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14343)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{null, !283}
!14343 = !{!14344}
!14344 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14340, file: !1939, line: 432, type: !283)
!14345 = !DILocation(line: 0, scope: !14340)
!14346 = !DILocation(line: 435, column: 2, scope: !14340)
!14347 = !DILocation(line: 445, column: 2, scope: !14340)
!14348 = distinct !DISubprogram(name: "bg_thread_main", scope: !1939, file: !1939, line: 277, type: !326, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !14349)
!14349 = !{!14350, !14351, !14352}
!14350 = !DILocalVariable(name: "unused1", arg: 1, scope: !14348, file: !1939, line: 277, type: !106)
!14351 = !DILocalVariable(name: "unused2", arg: 2, scope: !14348, file: !1939, line: 277, type: !106)
!14352 = !DILocalVariable(name: "unused3", arg: 3, scope: !14348, file: !1939, line: 277, type: !106)
!14353 = !DILocation(line: 0, scope: !14348)
!14354 = !DILocation(line: 291, column: 20, scope: !14348)
!14355 = !DILocation(line: 293, column: 2, scope: !14348)
!14356 = !DILocation(line: 297, column: 2, scope: !14348)
!14357 = !DILocation(line: 305, column: 2, scope: !14348)
!14358 = !DILocation(line: 307, column: 2, scope: !14348)
!14359 = !DILocation(line: 330, column: 8, scope: !14348)
!14360 = !DILocation(line: 333, column: 34, scope: !14348)
!14361 = !DILocation(line: 339, column: 1, scope: !14348)
!14362 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2198, file: !2198, line: 45, type: !14363, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14371)
!14363 = !DISubroutineType(types: !14364)
!14364 = !{null, !14365, !106}
!14365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !142, line: 103, baseType: !14366)
!14366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14367, size: 32)
!14367 = !DISubroutineType(types: !14368)
!14368 = !{null, !14369, !106}
!14369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14370, size: 32)
!14370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2203)
!14371 = !{!14372, !14373}
!14372 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14362, file: !2198, line: 45, type: !14365)
!14373 = !DILocalVariable(name: "user_data", arg: 2, scope: !14362, file: !2198, line: 45, type: !106)
!14374 = !DILocation(line: 0, scope: !14362)
!14375 = !DILocation(line: 71, column: 1, scope: !14362)
!14376 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2198, file: !2198, line: 73, type: !14363, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14377)
!14377 = !{!14378, !14379}
!14378 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14376, file: !2198, line: 73, type: !14365)
!14379 = !DILocalVariable(name: "user_data", arg: 2, scope: !14376, file: !2198, line: 73, type: !106)
!14380 = !DILocation(line: 0, scope: !14376)
!14381 = !DILocation(line: 95, column: 1, scope: !14376)
!14382 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2198, file: !2198, line: 97, type: !8394, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !256)
!14383 = !DILocation(line: 1031, column: 3, scope: !14384, inlinedAt: !14387)
!14384 = distinct !DISubprogram(name: "__get_IPSR", scope: !7375, file: !7375, line: 1027, type: !7456, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14385)
!14385 = !{!14386}
!14386 = !DILocalVariable(name: "result", scope: !14384, file: !7375, line: 1029, type: !108)
!14387 = distinct !DILocation(line: 48, column: 10, scope: !14388, inlinedAt: !14389)
!14388 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8393, file: !8393, line: 46, type: !8394, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !256)
!14389 = distinct !DILocation(line: 99, column: 9, scope: !14382)
!14390 = !{i64 3522307}
!14391 = !DILocation(line: 0, scope: !14384, inlinedAt: !14387)
!14392 = !DILocation(line: 48, column: 9, scope: !14388, inlinedAt: !14389)
!14393 = !DILocation(line: 99, column: 2, scope: !14382)
!14394 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2198, file: !2198, line: 106, type: !337, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !256)
!14395 = !DILocation(line: 108, column: 2, scope: !14394)
!14396 = !DILocation(line: 108, column: 17, scope: !14394)
!14397 = !DILocation(line: 108, column: 30, scope: !14394)
!14398 = !DILocation(line: 109, column: 1, scope: !14394)
!14399 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2198, file: !2198, line: 116, type: !337, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !256)
!14400 = !DILocation(line: 118, column: 2, scope: !14399)
!14401 = !DILocation(line: 118, column: 17, scope: !14399)
!14402 = !DILocation(line: 118, column: 30, scope: !14399)
!14403 = !DILocation(line: 119, column: 1, scope: !14399)
!14404 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2198, file: !2198, line: 126, type: !8394, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !256)
!14405 = !DILocation(line: 128, column: 10, scope: !14404)
!14406 = !DILocation(line: 128, column: 25, scope: !14404)
!14407 = !DILocation(line: 128, column: 38, scope: !14404)
!14408 = !DILocation(line: 128, column: 53, scope: !14404)
!14409 = !DILocation(line: 128, column: 2, scope: !14404)
!14410 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2198, file: !2198, line: 187, type: !14411, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14413)
!14411 = !DISubroutineType(types: !14412)
!14412 = !{!107, !2202, !121}
!14413 = !{!14414, !14415}
!14414 = !DILocalVariable(name: "thread", arg: 1, scope: !14410, file: !2198, line: 187, type: !2202)
!14415 = !DILocalVariable(name: "value", arg: 2, scope: !14410, file: !2198, line: 187, type: !121)
!14416 = !DILocation(line: 0, scope: !14410)
!14417 = !DILocation(line: 206, column: 2, scope: !14410)
!14418 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2198, file: !2198, line: 238, type: !14419, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14421)
!14419 = !DISubroutineType(types: !14420)
!14420 = !{!121, !2202}
!14421 = !{!14422}
!14422 = !DILocalVariable(name: "thread", arg: 1, scope: !14418, file: !2198, line: 238, type: !2202)
!14423 = !DILocation(line: 0, scope: !14418)
!14424 = !DILocation(line: 244, column: 2, scope: !14418)
!14425 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2198, file: !2198, line: 248, type: !14426, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14428)
!14426 = !DISubroutineType(types: !14427)
!14427 = !{!107, !2201, !283, !137}
!14428 = !{!14429, !14430, !14431}
!14429 = !DILocalVariable(name: "thread", arg: 1, scope: !14425, file: !2198, line: 248, type: !2201)
!14430 = !DILocalVariable(name: "buf", arg: 2, scope: !14425, file: !2198, line: 248, type: !283)
!14431 = !DILocalVariable(name: "size", arg: 3, scope: !14425, file: !2198, line: 248, type: !137)
!14432 = !DILocation(line: 0, scope: !14425)
!14433 = !DILocation(line: 257, column: 2, scope: !14425)
!14434 = !DILocation(line: 0, scope: !2197)
!14435 = !DILocation(line: 281, column: 11, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !2197, file: !2198, line: 281, column: 6)
!14437 = !DILocation(line: 281, column: 20, scope: !14436)
!14438 = !DILocation(line: 275, column: 45, scope: !2197)
!14439 = !DILocation(line: 285, column: 10, scope: !2197)
!14440 = !DILocation(line: 0, scope: !2318)
!14441 = !DILocation(line: 293, column: 39, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !2318, file: !2198, line: 293, column: 2)
!14443 = !DILocation(line: 293, column: 2, scope: !2318)
!14444 = !DILocation(line: 273, column: 14, scope: !2197)
!14445 = !DILocation(line: 309, column: 2, scope: !2197)
!14446 = !DILocation(line: 309, column: 11, scope: !2197)
!14447 = !DILocation(line: 311, column: 2, scope: !2197)
!14448 = !DILocation(line: 293, column: 26, scope: !14442)
!14449 = !DILocation(line: 294, column: 9, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14442, file: !2198, line: 293, column: 54)
!14451 = !DILocation(line: 295, column: 21, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14450, file: !2198, line: 295, column: 7)
!14453 = !DILocation(line: 295, column: 28, scope: !14452)
!14454 = !DILocation(line: 295, column: 7, scope: !14450)
!14455 = !DILocation(line: 299, column: 25, scope: !14450)
!14456 = !DILocation(line: 299, column: 41, scope: !14450)
!14457 = !DILocation(line: 300, column: 7, scope: !14450)
!14458 = !DILocation(line: 300, column: 26, scope: !14450)
!14459 = !DILocation(line: 299, column: 10, scope: !14450)
!14460 = !DILocation(line: 299, column: 7, scope: !14450)
!14461 = !DILocation(line: 302, column: 16, scope: !14450)
!14462 = !DILocation(line: 304, column: 20, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14450, file: !2198, line: 304, column: 7)
!14464 = !DILocation(line: 304, column: 7, scope: !14450)
!14465 = !DILocation(line: 305, column: 26, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14463, file: !2198, line: 304, column: 26)
!14467 = !DILocation(line: 305, column: 42, scope: !14466)
!14468 = !DILocation(line: 305, column: 11, scope: !14466)
!14469 = !DILocation(line: 305, column: 8, scope: !14466)
!14470 = !DILocation(line: 306, column: 3, scope: !14466)
!14471 = !DILocation(line: 293, column: 50, scope: !14442)
!14472 = !DILocation(line: 312, column: 1, scope: !2197)
!14473 = distinct !DISubprogram(name: "copy_bytes", scope: !2198, file: !2198, line: 261, type: !14474, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14476)
!14474 = !DISubroutineType(types: !14475)
!14475 = !{!137, !283, !137, !121, !137}
!14476 = !{!14477, !14478, !14479, !14480, !14481}
!14477 = !DILocalVariable(name: "dest", arg: 1, scope: !14473, file: !2198, line: 261, type: !283)
!14478 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14473, file: !2198, line: 261, type: !137)
!14479 = !DILocalVariable(name: "src", arg: 3, scope: !14473, file: !2198, line: 261, type: !121)
!14480 = !DILocalVariable(name: "src_size", arg: 4, scope: !14473, file: !2198, line: 261, type: !137)
!14481 = !DILocalVariable(name: "bytes_to_copy", scope: !14473, file: !2198, line: 263, type: !137)
!14482 = !DILocation(line: 0, scope: !14473)
!14483 = !DILocation(line: 265, column: 18, scope: !14473)
!14484 = !DILocation(line: 266, column: 2, scope: !14473)
!14485 = !DILocation(line: 268, column: 2, scope: !14473)
!14486 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2198, file: !2198, line: 383, type: !14487, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14489)
!14487 = !DISubroutineType(types: !14488)
!14488 = !{null, !2202}
!14489 = !{!14490}
!14490 = !DILocalVariable(name: "thread", arg: 1, scope: !14486, file: !2198, line: 383, type: !2202)
!14491 = !DILocation(line: 0, scope: !14486)
!14492 = !DILocation(line: 387, column: 2, scope: !14486)
!14493 = !DILocation(line: 388, column: 1, scope: !14486)
!14494 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2198, file: !2198, line: 528, type: !14495, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14502)
!14495 = !DISubroutineType(types: !14496)
!14496 = !{!283, !2202, !14497, !137, !324, !106, !106, !106, !107, !108, !121}
!14497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14498, size: 32)
!14498 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !14499)
!14499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !14500)
!14500 = !{!14501}
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14499, file: !319, line: 48, baseType: !123, size: 8)
!14502 = !{!14503, !14504, !14505, !14506, !14507, !14508, !14509, !14510, !14511, !14512, !14513}
!14503 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14494, file: !2198, line: 528, type: !2202)
!14504 = !DILocalVariable(name: "stack", arg: 2, scope: !14494, file: !2198, line: 529, type: !14497)
!14505 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14494, file: !2198, line: 529, type: !137)
!14506 = !DILocalVariable(name: "entry", arg: 4, scope: !14494, file: !2198, line: 530, type: !324)
!14507 = !DILocalVariable(name: "p1", arg: 5, scope: !14494, file: !2198, line: 531, type: !106)
!14508 = !DILocalVariable(name: "p2", arg: 6, scope: !14494, file: !2198, line: 531, type: !106)
!14509 = !DILocalVariable(name: "p3", arg: 7, scope: !14494, file: !2198, line: 531, type: !106)
!14510 = !DILocalVariable(name: "prio", arg: 8, scope: !14494, file: !2198, line: 532, type: !107)
!14511 = !DILocalVariable(name: "options", arg: 9, scope: !14494, file: !2198, line: 532, type: !108)
!14512 = !DILocalVariable(name: "name", arg: 10, scope: !14494, file: !2198, line: 532, type: !121)
!14513 = !DILocalVariable(name: "stack_ptr", scope: !14494, file: !2198, line: 534, type: !283)
!14514 = !DILocation(line: 0, scope: !14494)
!14515 = !DILocation(line: 550, column: 28, scope: !14494)
!14516 = !DILocation(line: 550, column: 2, scope: !14494)
!14517 = !DILocation(line: 553, column: 34, scope: !14494)
!14518 = !DILocation(line: 553, column: 2, scope: !14494)
!14519 = !DILocation(line: 554, column: 14, scope: !14494)
!14520 = !DILocation(line: 564, column: 2, scope: !14494)
!14521 = !DILocation(line: 567, column: 14, scope: !14494)
!14522 = !DILocation(line: 567, column: 24, scope: !14494)
!14523 = !DILocation(line: 612, column: 7, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14494, file: !2198, line: 612, column: 6)
!14525 = !DILocation(line: 612, column: 6, scope: !14494)
!14526 = !DILocation(line: 627, column: 40, scope: !14494)
!14527 = !DILocation(line: 637, column: 2, scope: !14494)
!14528 = !DILocation(line: 613, column: 15, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !14524, file: !2198, line: 612, column: 17)
!14530 = !DILocation(line: 613, column: 29, scope: !14529)
!14531 = !DILocation(line: 638, column: 1, scope: !14494)
!14532 = distinct !DISubprogram(name: "z_waitq_init", scope: !14533, file: !14533, line: 47, type: !14534, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14536)
!14533 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14534 = !DISubroutineType(types: !14535)
!14535 = !{null, !2233}
!14536 = !{!14537}
!14537 = !DILocalVariable(name: "w", arg: 1, scope: !14532, file: !14533, line: 47, type: !2233)
!14538 = !DILocation(line: 0, scope: !14532)
!14539 = !DILocation(line: 49, column: 21, scope: !14532)
!14540 = !DILocation(line: 49, column: 2, scope: !14532)
!14541 = !DILocation(line: 50, column: 1, scope: !14532)
!14542 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2198, file: !2198, line: 791, type: !14543, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14546)
!14543 = !DISubroutineType(types: !14544)
!14544 = !{null, !14545, !107, !108, !32}
!14545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!14546 = !{!14547, !14548, !14549, !14550}
!14547 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14542, file: !2198, line: 791, type: !14545)
!14548 = !DILocalVariable(name: "priority", arg: 2, scope: !14542, file: !2198, line: 791, type: !107)
!14549 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14542, file: !2198, line: 792, type: !108)
!14550 = !DILocalVariable(name: "options", arg: 4, scope: !14542, file: !2198, line: 792, type: !32)
!14551 = !DILocation(line: 0, scope: !14542)
!14552 = !DILocation(line: 795, column: 15, scope: !14542)
!14553 = !DILocation(line: 795, column: 25, scope: !14542)
!14554 = !DILocation(line: 796, column: 30, scope: !14542)
!14555 = !DILocation(line: 796, column: 15, scope: !14542)
!14556 = !DILocation(line: 796, column: 28, scope: !14542)
!14557 = !DILocation(line: 797, column: 30, scope: !14542)
!14558 = !DILocation(line: 797, column: 15, scope: !14542)
!14559 = !DILocation(line: 797, column: 28, scope: !14542)
!14560 = !DILocation(line: 799, column: 22, scope: !14542)
!14561 = !DILocation(line: 799, column: 15, scope: !14542)
!14562 = !DILocation(line: 799, column: 20, scope: !14542)
!14563 = !DILocation(line: 801, column: 15, scope: !14542)
!14564 = !DILocation(line: 801, column: 28, scope: !14542)
!14565 = !DILocation(line: 814, column: 2, scope: !14542)
!14566 = !DILocation(line: 815, column: 1, scope: !14542)
!14567 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2198, file: !2198, line: 449, type: !14568, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14570)
!14568 = !DISubroutineType(types: !14569)
!14569 = !{!283, !2202, !14497, !137}
!14570 = !{!14571, !14572, !14573, !14574, !14575, !14576, !14577, !14578}
!14571 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14567, file: !2198, line: 449, type: !2202)
!14572 = !DILocalVariable(name: "stack", arg: 2, scope: !14567, file: !2198, line: 450, type: !14497)
!14573 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14567, file: !2198, line: 450, type: !137)
!14574 = !DILocalVariable(name: "stack_obj_size", scope: !14567, file: !2198, line: 452, type: !137)
!14575 = !DILocalVariable(name: "stack_buf_size", scope: !14567, file: !2198, line: 452, type: !137)
!14576 = !DILocalVariable(name: "stack_ptr", scope: !14567, file: !2198, line: 453, type: !283)
!14577 = !DILocalVariable(name: "stack_buf_start", scope: !14567, file: !2198, line: 453, type: !283)
!14578 = !DILocalVariable(name: "delta", scope: !14567, file: !2198, line: 454, type: !137)
!14579 = !DILocation(line: 0, scope: !14567)
!14580 = !DILocation(line: 465, column: 20, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14567, file: !2198, line: 463, column: 2)
!14582 = !DILocation(line: 466, column: 21, scope: !14581)
!14583 = !DILocation(line: 473, column: 28, scope: !14567)
!14584 = !DILocation(line: 514, column: 33, scope: !14567)
!14585 = !DILocation(line: 514, column: 25, scope: !14567)
!14586 = !DILocation(line: 514, column: 31, scope: !14567)
!14587 = !DILocation(line: 515, column: 25, scope: !14567)
!14588 = !DILocation(line: 515, column: 30, scope: !14567)
!14589 = !DILocation(line: 516, column: 25, scope: !14567)
!14590 = !DILocation(line: 516, column: 31, scope: !14567)
!14591 = !DILocation(line: 520, column: 2, scope: !14567)
!14592 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !319, file: !319, line: 331, type: !14593, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14595)
!14593 = !DISubroutineType(types: !14594)
!14594 = !{!283, !14497}
!14595 = !{!14596}
!14596 = !DILocalVariable(name: "sym", arg: 1, scope: !14592, file: !319, line: 331, type: !14497)
!14597 = !DILocation(line: 0, scope: !14592)
!14598 = !DILocation(line: 333, column: 21, scope: !14592)
!14599 = !DILocation(line: 333, column: 2, scope: !14592)
!14600 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14601, file: !14601, line: 40, type: !14602, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14604)
!14601 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14602 = !DISubroutineType(types: !14603)
!14603 = !{null, !14545}
!14604 = !{!14605}
!14605 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14600, file: !14601, line: 40, type: !14545)
!14606 = !DILocation(line: 0, scope: !14600)
!14607 = !DILocation(line: 42, column: 31, scope: !14600)
!14608 = !DILocation(line: 42, column: 2, scope: !14600)
!14609 = !DILocation(line: 43, column: 1, scope: !14600)
!14610 = distinct !DISubprogram(name: "z_init_timeout", scope: !14601, file: !14601, line: 25, type: !2259, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14611)
!14611 = !{!14612}
!14612 = !DILocalVariable(name: "to", arg: 1, scope: !14610, file: !14601, line: 25, type: !2261)
!14613 = !DILocation(line: 0, scope: !14610)
!14614 = !DILocation(line: 27, column: 22, scope: !14610)
!14615 = !DILocation(line: 27, column: 2, scope: !14610)
!14616 = !DILocation(line: 28, column: 1, scope: !14610)
!14617 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !14618, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14620)
!14618 = !DISubroutineType(types: !14619)
!14619 = !{null, !2305}
!14620 = !{!14621}
!14621 = !DILocalVariable(name: "node", arg: 1, scope: !14617, file: !151, line: 211, type: !2305)
!14622 = !DILocation(line: 0, scope: !14617)
!14623 = !DILocation(line: 213, column: 8, scope: !14617)
!14624 = !DILocation(line: 213, column: 13, scope: !14617)
!14625 = !DILocation(line: 214, column: 8, scope: !14617)
!14626 = !DILocation(line: 214, column: 13, scope: !14617)
!14627 = !DILocation(line: 215, column: 1, scope: !14617)
!14628 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !14629, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14632)
!14629 = !DISubroutineType(types: !14630)
!14630 = !{null, !14631}
!14631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!14632 = !{!14633}
!14633 = !DILocalVariable(name: "list", arg: 1, scope: !14628, file: !151, line: 197, type: !14631)
!14634 = !DILocation(line: 0, scope: !14628)
!14635 = !DILocation(line: 199, column: 8, scope: !14628)
!14636 = !DILocation(line: 199, column: 13, scope: !14628)
!14637 = !DILocation(line: 200, column: 8, scope: !14628)
!14638 = !DILocation(line: 200, column: 13, scope: !14628)
!14639 = !DILocation(line: 201, column: 1, scope: !14628)
!14640 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2198, file: !2198, line: 641, type: !14641, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14647)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{!2201, !2202, !14497, !137, !324, !106, !106, !106, !107, !108, !14643}
!14643 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !14644)
!14644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !14645)
!14645 = !{!14646}
!14646 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14644, file: !103, line: 66, baseType: !102, size: 64)
!14647 = !{!14648, !14649, !14650, !14651, !14652, !14653, !14654, !14655, !14656, !14657}
!14648 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14640, file: !2198, line: 641, type: !2202)
!14649 = !DILocalVariable(name: "stack", arg: 2, scope: !14640, file: !2198, line: 642, type: !14497)
!14650 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14640, file: !2198, line: 643, type: !137)
!14651 = !DILocalVariable(name: "entry", arg: 4, scope: !14640, file: !2198, line: 643, type: !324)
!14652 = !DILocalVariable(name: "p1", arg: 5, scope: !14640, file: !2198, line: 644, type: !106)
!14653 = !DILocalVariable(name: "p2", arg: 6, scope: !14640, file: !2198, line: 644, type: !106)
!14654 = !DILocalVariable(name: "p3", arg: 7, scope: !14640, file: !2198, line: 644, type: !106)
!14655 = !DILocalVariable(name: "prio", arg: 8, scope: !14640, file: !2198, line: 645, type: !107)
!14656 = !DILocalVariable(name: "options", arg: 9, scope: !14640, file: !2198, line: 645, type: !108)
!14657 = !DILocalVariable(name: "delay", arg: 10, scope: !14640, file: !2198, line: 645, type: !14643)
!14658 = !DILocation(line: 0, scope: !14640)
!14659 = !DILocation(line: 649, column: 2, scope: !14640)
!14660 = !DILocation(line: 652, column: 7, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14640, file: !2198, line: 652, column: 6)
!14662 = !DILocation(line: 652, column: 6, scope: !14640)
!14663 = !DILocation(line: 653, column: 3, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14661, file: !2198, line: 652, column: 39)
!14665 = !DILocation(line: 654, column: 2, scope: !14664)
!14666 = !DILocation(line: 656, column: 2, scope: !14640)
!14667 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2198, file: !2198, line: 401, type: !14668, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14670)
!14668 = !DISubroutineType(types: !14669)
!14669 = !{null, !2202, !14643}
!14670 = !{!14671, !14672}
!14671 = !DILocalVariable(name: "thread", arg: 1, scope: !14667, file: !2198, line: 401, type: !2202)
!14672 = !DILocalVariable(name: "delay", arg: 2, scope: !14667, file: !2198, line: 401, type: !14643)
!14673 = !DILocation(line: 0, scope: !14667)
!14674 = !DILocation(line: 404, column: 6, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14667, file: !2198, line: 404, column: 6)
!14676 = !DILocation(line: 404, column: 6, scope: !14667)
!14677 = !DILocation(line: 405, column: 3, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14675, file: !2198, line: 404, column: 38)
!14679 = !DILocation(line: 406, column: 2, scope: !14678)
!14680 = !DILocation(line: 407, column: 3, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14675, file: !2198, line: 406, column: 9)
!14682 = !DILocation(line: 413, column: 1, scope: !14667)
!14683 = distinct !DISubprogram(name: "k_thread_start", scope: !3668, file: !3668, line: 205, type: !14684, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14686)
!14684 = !DISubroutineType(types: !14685)
!14685 = !{null, !2201}
!14686 = !{!14687}
!14687 = !DILocalVariable(name: "thread", arg: 1, scope: !14683, file: !3668, line: 205, type: !2201)
!14688 = !DILocation(line: 0, scope: !14683)
!14689 = !DILocation(line: 214, column: 2, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14683, file: !3668, line: 214, column: 2)
!14691 = !{i64 2154768283}
!14692 = !DILocation(line: 215, column: 2, scope: !14683)
!14693 = !DILocation(line: 216, column: 1, scope: !14683)
!14694 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14601, file: !14601, line: 47, type: !14668, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14695)
!14695 = !{!14696, !14697}
!14696 = !DILocalVariable(name: "thread", arg: 1, scope: !14694, file: !14601, line: 47, type: !2202)
!14697 = !DILocalVariable(name: "ticks", arg: 2, scope: !14694, file: !14601, line: 47, type: !14643)
!14698 = !DILocation(line: 0, scope: !14694)
!14699 = !DILocation(line: 49, column: 30, scope: !14694)
!14700 = !DILocation(line: 49, column: 2, scope: !14694)
!14701 = !DILocation(line: 50, column: 1, scope: !14694)
!14702 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2198, file: !2198, line: 748, type: !337, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14703)
!14703 = !{!14704, !14721}
!14704 = !DILocalVariable(name: "thread_data", scope: !14705, file: !2198, line: 750, type: !14706)
!14705 = distinct !DILexicalBlock(scope: !14702, file: !2198, line: 750, column: 2)
!14706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14707, size: 32)
!14707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !142, line: 620, size: 384, elements: !14708)
!14708 = !{!14709, !14710, !14711, !14712, !14713, !14714, !14715, !14716, !14717, !14718, !14719, !14720}
!14709 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14707, file: !142, line: 621, baseType: !2202, size: 32)
!14710 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14707, file: !142, line: 622, baseType: !14497, size: 32, offset: 32)
!14711 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14707, file: !142, line: 623, baseType: !32, size: 32, offset: 64)
!14712 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14707, file: !142, line: 624, baseType: !324, size: 32, offset: 96)
!14713 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14707, file: !142, line: 625, baseType: !106, size: 32, offset: 128)
!14714 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14707, file: !142, line: 626, baseType: !106, size: 32, offset: 160)
!14715 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14707, file: !142, line: 627, baseType: !106, size: 32, offset: 192)
!14716 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14707, file: !142, line: 628, baseType: !107, size: 32, offset: 224)
!14717 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14707, file: !142, line: 629, baseType: !108, size: 32, offset: 256)
!14718 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14707, file: !142, line: 630, baseType: !334, size: 32, offset: 288)
!14719 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14707, file: !142, line: 631, baseType: !336, size: 32, offset: 320)
!14720 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14707, file: !142, line: 632, baseType: !121, size: 32, offset: 352)
!14721 = !DILocalVariable(name: "thread_data", scope: !14722, file: !2198, line: 781, type: !14706)
!14722 = distinct !DILexicalBlock(scope: !14702, file: !2198, line: 781, column: 2)
!14723 = !DILocation(line: 0, scope: !14705)
!14724 = !DILocation(line: 750, column: 2, scope: !14705)
!14725 = !DILocation(line: 780, column: 2, scope: !14702)
!14726 = !DILocation(line: 0, scope: !14722)
!14727 = !DILocation(line: 781, column: 2, scope: !14722)
!14728 = !DILocation(line: 752, column: 17, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14730, file: !2198, line: 750, column: 38)
!14730 = distinct !DILexicalBlock(scope: !14705, file: !2198, line: 750, column: 2)
!14731 = !DILocation(line: 753, column: 17, scope: !14729)
!14732 = !DILocation(line: 754, column: 17, scope: !14729)
!14733 = !DILocation(line: 755, column: 17, scope: !14729)
!14734 = !DILocation(line: 756, column: 17, scope: !14729)
!14735 = !DILocation(line: 757, column: 17, scope: !14729)
!14736 = !DILocation(line: 758, column: 17, scope: !14729)
!14737 = !DILocation(line: 759, column: 17, scope: !14729)
!14738 = !DILocation(line: 760, column: 17, scope: !14729)
!14739 = !DILocation(line: 751, column: 3, scope: !14729)
!14740 = !DILocation(line: 763, column: 16, scope: !14729)
!14741 = !DILocation(line: 763, column: 29, scope: !14729)
!14742 = !DILocation(line: 763, column: 39, scope: !14729)
!14743 = !DILocation(line: 750, column: 2, scope: !14730)
!14744 = !DILocation(line: 750, column: 2, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14730, file: !2198, line: 750, column: 2)
!14746 = distinct !{!14746, !14724, !14747}
!14747 = !DILocation(line: 764, column: 2, scope: !14705)
!14748 = !DILocation(line: 787, column: 2, scope: !14702)
!14749 = !DILocation(line: 788, column: 1, scope: !14702)
!14750 = !DILocation(line: 782, column: 20, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !2198, line: 782, column: 7)
!14752 = distinct !DILexicalBlock(scope: !14753, file: !2198, line: 781, column: 38)
!14753 = distinct !DILexicalBlock(scope: !14722, file: !2198, line: 781, column: 2)
!14754 = !DILocation(line: 782, column: 31, scope: !14751)
!14755 = !DILocation(line: 782, column: 7, scope: !14752)
!14756 = !DILocation(line: 783, column: 37, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !14751, file: !2198, line: 782, column: 51)
!14758 = !DILocation(line: 784, column: 10, scope: !14757)
!14759 = !DILocation(line: 783, column: 4, scope: !14757)
!14760 = !DILocation(line: 785, column: 3, scope: !14757)
!14761 = !DILocation(line: 781, column: 2, scope: !14753)
!14762 = !DILocation(line: 781, column: 2, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14753, file: !2198, line: 781, column: 2)
!14764 = distinct !{!14764, !14727, !14765}
!14765 = !DILocation(line: 786, column: 2, scope: !14722)
!14766 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3505, file: !3505, line: 403, type: !3506, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14767)
!14767 = !{!14768}
!14768 = !DILocalVariable(name: "t", arg: 1, scope: !14766, file: !3505, line: 403, type: !109)
!14769 = !DILocation(line: 0, scope: !14766)
!14770 = !DILocalVariable(name: "t", arg: 1, scope: !14771, file: !3505, line: 102, type: !109)
!14771 = distinct !DISubprogram(name: "z_tmcvt", scope: !3505, file: !3505, line: 102, type: !3513, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14772)
!14772 = !{!14770, !14773, !14774, !14775, !14776, !14777, !14778, !14779, !14780, !14781, !14782}
!14773 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14771, file: !3505, line: 102, type: !108)
!14774 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14771, file: !3505, line: 103, type: !108)
!14775 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14771, file: !3505, line: 103, type: !136)
!14776 = !DILocalVariable(name: "result32", arg: 5, scope: !14771, file: !3505, line: 104, type: !136)
!14777 = !DILocalVariable(name: "round_up", arg: 6, scope: !14771, file: !3505, line: 104, type: !136)
!14778 = !DILocalVariable(name: "round_off", arg: 7, scope: !14771, file: !3505, line: 105, type: !136)
!14779 = !DILocalVariable(name: "mul_ratio", scope: !14771, file: !3505, line: 107, type: !136)
!14780 = !DILocalVariable(name: "div_ratio", scope: !14771, file: !3505, line: 109, type: !136)
!14781 = !DILocalVariable(name: "off", scope: !14771, file: !3505, line: 116, type: !109)
!14782 = !DILocalVariable(name: "rdivisor", scope: !14783, file: !3505, line: 119, type: !108)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !3505, line: 118, column: 18)
!14784 = distinct !DILexicalBlock(scope: !14771, file: !3505, line: 118, column: 6)
!14785 = !DILocation(line: 0, scope: !14771, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 406, column: 9, scope: !14766)
!14787 = !DILocation(line: 145, column: 13, scope: !14788, inlinedAt: !14786)
!14788 = distinct !DILexicalBlock(scope: !14789, file: !3505, line: 144, column: 10)
!14789 = distinct !DILexicalBlock(scope: !14790, file: !3505, line: 142, column: 7)
!14790 = distinct !DILexicalBlock(scope: !14791, file: !3505, line: 141, column: 24)
!14791 = distinct !DILexicalBlock(scope: !14792, file: !3505, line: 141, column: 13)
!14792 = distinct !DILexicalBlock(scope: !14771, file: !3505, line: 134, column: 6)
!14793 = !DILocation(line: 406, column: 2, scope: !14766)
!14794 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2198, file: !2198, line: 817, type: !4738, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14795)
!14795 = !{!14796, !14797, !14798, !14799}
!14796 = !DILocalVariable(name: "entry", arg: 1, scope: !14794, file: !2198, line: 817, type: !324)
!14797 = !DILocalVariable(name: "p1", arg: 2, scope: !14794, file: !2198, line: 818, type: !106)
!14798 = !DILocalVariable(name: "p2", arg: 3, scope: !14794, file: !2198, line: 818, type: !106)
!14799 = !DILocalVariable(name: "p3", arg: 4, scope: !14794, file: !2198, line: 818, type: !106)
!14800 = !DILocation(line: 0, scope: !14794)
!14801 = !DILocation(line: 822, column: 2, scope: !14794)
!14802 = !DILocation(line: 822, column: 17, scope: !14794)
!14803 = !DILocation(line: 822, column: 30, scope: !14794)
!14804 = !DILocation(line: 823, column: 2, scope: !14794)
!14805 = !DILocation(line: 845, column: 2, scope: !14794)
!14806 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2198, file: !2198, line: 888, type: !14807, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14809)
!14807 = !DISubroutineType(types: !14808)
!14808 = !{!107, !2202}
!14809 = !{!14810}
!14810 = !DILocalVariable(name: "thread", arg: 1, scope: !14806, file: !2198, line: 888, type: !2202)
!14811 = !DILocation(line: 0, scope: !14806)
!14812 = !DILocation(line: 893, column: 2, scope: !14806)
!14813 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2198, file: !2198, line: 897, type: !14814, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14816)
!14814 = !DISubroutineType(types: !14815)
!14815 = !{!107, !2202, !32}
!14816 = !{!14817, !14818}
!14817 = !DILocalVariable(name: "thread", arg: 1, scope: !14813, file: !2198, line: 897, type: !2202)
!14818 = !DILocalVariable(name: "options", arg: 2, scope: !14813, file: !2198, line: 897, type: !32)
!14819 = !DILocation(line: 0, scope: !14813)
!14820 = !DILocation(line: 902, column: 2, scope: !14813)
!14821 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2198, file: !2198, line: 1072, type: !14822, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14827)
!14822 = !DISubroutineType(types: !14823)
!14823 = !{!107, !2201, !14824}
!14824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14825, size: 32)
!14825 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !168, line: 234, baseType: !14826)
!14826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !168, line: 192, elements: !256)
!14827 = !{!14828, !14829}
!14828 = !DILocalVariable(name: "thread", arg: 1, scope: !14821, file: !2198, line: 1072, type: !2201)
!14829 = !DILocalVariable(name: "stats", arg: 2, scope: !14821, file: !2198, line: 1073, type: !14824)
!14830 = !DILocation(line: 0, scope: !14821)
!14831 = !DILocation(line: 1075, column: 14, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14821, file: !2198, line: 1075, column: 6)
!14833 = !DILocation(line: 1075, column: 23, scope: !14832)
!14834 = !DILocation(line: 1086, column: 1, scope: !14821)
!14835 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2198, file: !2198, line: 1088, type: !14836, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14838)
!14836 = !DISubroutineType(types: !14837)
!14837 = !{!107, !14824}
!14838 = !{!14839}
!14839 = !DILocalVariable(name: "stats", arg: 1, scope: !14835, file: !2198, line: 1088, type: !14824)
!14840 = !DILocation(line: 0, scope: !14835)
!14841 = !DILocation(line: 1094, column: 12, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14835, file: !2198, line: 1094, column: 6)
!14843 = !DILocation(line: 1120, column: 1, scope: !14835)
!14844 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14845, file: !14845, line: 20, type: !337, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !256)
!14845 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14846 = !DILocation(line: 30, column: 2, scope: !14844)
!14847 = !DILocation(line: 31, column: 1, scope: !14844)
!14848 = distinct !DISubprogram(name: "idle", scope: !14845, file: !14845, line: 33, type: !326, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !14849)
!14849 = !{!14850, !14851, !14852}
!14850 = !DILocalVariable(name: "unused1", arg: 1, scope: !14848, file: !14845, line: 33, type: !106)
!14851 = !DILocalVariable(name: "unused2", arg: 2, scope: !14848, file: !14845, line: 33, type: !106)
!14852 = !DILocalVariable(name: "unused3", arg: 3, scope: !14848, file: !14845, line: 33, type: !106)
!14853 = !DILocation(line: 0, scope: !14848)
!14854 = !DILocation(line: 41, column: 2, scope: !14848)
!14855 = !DILocation(line: 55, column: 2, scope: !14856, inlinedAt: !14860)
!14856 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !14857)
!14857 = !{!14858, !14859}
!14858 = !DILocalVariable(name: "key", scope: !14856, file: !7054, line: 44, type: !32)
!14859 = !DILocalVariable(name: "tmp", scope: !14856, file: !7054, line: 53, type: !32)
!14860 = distinct !DILocation(line: 62, column: 10, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14848, file: !14845, line: 41, column: 15)
!14862 = !{i64 2240622}
!14863 = !DILocation(line: 0, scope: !14856, inlinedAt: !14860)
!14864 = !DILocation(line: 86, column: 3, scope: !14861)
!14865 = distinct !{!14865, !14854, !14866}
!14866 = !DILocation(line: 105, column: 2, scope: !14848)
!14867 = distinct !DISubprogram(name: "k_cpu_idle", scope: !142, file: !142, line: 5627, type: !337, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !256)
!14868 = !DILocation(line: 5629, column: 2, scope: !14867)
!14869 = !DILocation(line: 5630, column: 1, scope: !14867)
!14870 = !DISubprogram(name: "arch_cpu_idle", scope: !317, file: !317, line: 167, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!14871 = distinct !DISubprogram(name: "k_msgq_init", scope: !14872, file: !14872, line: 35, type: !14873, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !14888)
!14872 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14873 = !DISubroutineType(types: !14874)
!14874 = !{null, !14875, !283, !137, !108}
!14875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14876, size: 32)
!14876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !14877)
!14877 = !{!14878, !14879, !14880, !14881, !14882, !14883, !14884, !14885, !14886, !14887}
!14878 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14876, file: !142, line: 4206, baseType: !3248, size: 64)
!14879 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14876, file: !142, line: 4208, baseType: !3310, offset: 64)
!14880 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14876, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!14881 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14876, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!14882 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14876, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!14883 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14876, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!14884 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14876, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!14885 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14876, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!14886 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14876, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!14887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14876, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!14888 = !{!14889, !14890, !14891, !14892}
!14889 = !DILocalVariable(name: "msgq", arg: 1, scope: !14871, file: !14872, line: 35, type: !14875)
!14890 = !DILocalVariable(name: "buffer", arg: 2, scope: !14871, file: !14872, line: 35, type: !283)
!14891 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14871, file: !14872, line: 35, type: !137)
!14892 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14871, file: !14872, line: 36, type: !108)
!14893 = !DILocation(line: 0, scope: !14871)
!14894 = !DILocation(line: 38, column: 8, scope: !14871)
!14895 = !DILocation(line: 38, column: 17, scope: !14871)
!14896 = !DILocation(line: 39, column: 8, scope: !14871)
!14897 = !DILocation(line: 39, column: 17, scope: !14871)
!14898 = !DILocation(line: 40, column: 8, scope: !14871)
!14899 = !DILocation(line: 40, column: 21, scope: !14871)
!14900 = !DILocation(line: 41, column: 40, scope: !14871)
!14901 = !DILocation(line: 41, column: 28, scope: !14871)
!14902 = !DILocation(line: 41, column: 8, scope: !14871)
!14903 = !DILocation(line: 41, column: 19, scope: !14871)
!14904 = !DILocation(line: 42, column: 8, scope: !14871)
!14905 = !DILocation(line: 42, column: 17, scope: !14871)
!14906 = !DILocation(line: 43, column: 8, scope: !14871)
!14907 = !DILocation(line: 43, column: 18, scope: !14871)
!14908 = !DILocation(line: 44, column: 8, scope: !14871)
!14909 = !DILocation(line: 44, column: 18, scope: !14871)
!14910 = !DILocation(line: 45, column: 8, scope: !14871)
!14911 = !DILocation(line: 45, column: 14, scope: !14871)
!14912 = !DILocation(line: 46, column: 22, scope: !14871)
!14913 = !DILocation(line: 46, column: 2, scope: !14871)
!14914 = !DILocation(line: 55, column: 1, scope: !14871)
!14915 = distinct !DISubprogram(name: "z_waitq_init", scope: !14533, file: !14533, line: 47, type: !14916, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !14918)
!14916 = !DISubroutineType(types: !14917)
!14917 = !{null, !3247}
!14918 = !{!14919}
!14919 = !DILocalVariable(name: "w", arg: 1, scope: !14915, file: !14533, line: 47, type: !3247)
!14920 = !DILocation(line: 0, scope: !14915)
!14921 = !DILocation(line: 49, column: 21, scope: !14915)
!14922 = !DILocation(line: 49, column: 2, scope: !14915)
!14923 = !DILocation(line: 50, column: 1, scope: !14915)
!14924 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !14925, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !14928)
!14925 = !DISubroutineType(types: !14926)
!14926 = !{null, !14927}
!14927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 32)
!14928 = !{!14929}
!14929 = !DILocalVariable(name: "list", arg: 1, scope: !14924, file: !151, line: 197, type: !14927)
!14930 = !DILocation(line: 0, scope: !14924)
!14931 = !DILocation(line: 199, column: 8, scope: !14924)
!14932 = !DILocation(line: 199, column: 13, scope: !14924)
!14933 = !DILocation(line: 200, column: 8, scope: !14924)
!14934 = !DILocation(line: 200, column: 13, scope: !14924)
!14935 = !DILocation(line: 201, column: 1, scope: !14924)
!14936 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14872, file: !14872, line: 57, type: !14937, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !14939)
!14937 = !DISubroutineType(types: !14938)
!14938 = !{!107, !14875, !137, !108}
!14939 = !{!14940, !14941, !14942, !14943, !14944, !14945}
!14940 = !DILocalVariable(name: "msgq", arg: 1, scope: !14936, file: !14872, line: 57, type: !14875)
!14941 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14936, file: !14872, line: 57, type: !137)
!14942 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14936, file: !14872, line: 58, type: !108)
!14943 = !DILocalVariable(name: "buffer", scope: !14936, file: !14872, line: 60, type: !106)
!14944 = !DILocalVariable(name: "ret", scope: !14936, file: !14872, line: 61, type: !107)
!14945 = !DILocalVariable(name: "total_size", scope: !14936, file: !14872, line: 62, type: !137)
!14946 = !DILocation(line: 0, scope: !14936)
!14947 = !DILocation(line: 62, column: 2, scope: !14936)
!14948 = !DILocation(line: 66, column: 6, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14936, file: !14872, line: 66, column: 6)
!14950 = !DILocation(line: 66, column: 6, scope: !14936)
!14951 = !DILocation(line: 69, column: 28, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14949, file: !14872, line: 68, column: 9)
!14953 = !DILocation(line: 69, column: 12, scope: !14952)
!14954 = !DILocation(line: 70, column: 14, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14952, file: !14872, line: 70, column: 7)
!14956 = !DILocation(line: 70, column: 7, scope: !14952)
!14957 = !DILocation(line: 71, column: 4, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14955, file: !14872, line: 70, column: 23)
!14959 = !DILocation(line: 72, column: 10, scope: !14958)
!14960 = !DILocation(line: 72, column: 16, scope: !14958)
!14961 = !DILocation(line: 74, column: 3, scope: !14958)
!14962 = !DILocation(line: 0, scope: !14949)
!14963 = !DILocation(line: 82, column: 1, scope: !14936)
!14964 = !DILocation(line: 81, column: 2, scope: !14936)
!14965 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14966, file: !14966, line: 105, type: !14967, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !14969)
!14966 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14967 = !DISubroutineType(types: !14968)
!14968 = !{!136, !137, !137, !2683}
!14969 = !{!14970, !14971, !14972}
!14970 = !DILocalVariable(name: "a", arg: 1, scope: !14965, file: !14966, line: 105, type: !137)
!14971 = !DILocalVariable(name: "b", arg: 2, scope: !14965, file: !14966, line: 105, type: !137)
!14972 = !DILocalVariable(name: "result", arg: 3, scope: !14965, file: !14966, line: 105, type: !2683)
!14973 = !DILocation(line: 0, scope: !14965)
!14974 = !DILocation(line: 107, column: 9, scope: !14965)
!14975 = !DILocation(line: 107, column: 2, scope: !14965)
!14976 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14977, file: !14977, line: 102, type: !14978, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !14979)
!14977 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14978 = !DISubroutineType(types: !3191)
!14979 = !{!14980}
!14980 = !DILocalVariable(name: "size", arg: 1, scope: !14976, file: !14977, line: 102, type: !137)
!14981 = !DILocation(line: 0, scope: !14976)
!14982 = !DILocation(line: 104, column: 9, scope: !14976)
!14983 = !DILocation(line: 104, column: 2, scope: !14976)
!14984 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !14977, file: !14977, line: 87, type: !14985, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!14985 = !DISubroutineType(types: !14986)
!14986 = !{!106, !137, !137}
!14987 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14872, file: !14872, line: 95, type: !14988, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !14990)
!14988 = !DISubroutineType(types: !14989)
!14989 = !{!107, !14875}
!14990 = !{!14991}
!14991 = !DILocalVariable(name: "msgq", arg: 1, scope: !14987, file: !14872, line: 95, type: !14875)
!14992 = !DILocation(line: 0, scope: !14987)
!14993 = !DILocation(line: 99, column: 2, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14987, file: !14872, line: 99, column: 2)
!14995 = !DILocation(line: 99, column: 2, scope: !14987)
!14996 = !DILocation(line: 105, column: 13, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14987, file: !14872, line: 105, column: 6)
!14998 = !DILocation(line: 105, column: 19, scope: !14997)
!14999 = !DILocation(line: 105, column: 40, scope: !14997)
!15000 = !DILocation(line: 105, column: 6, scope: !14987)
!15001 = !DILocation(line: 106, column: 16, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14997, file: !14872, line: 105, column: 47)
!15003 = !DILocation(line: 106, column: 3, scope: !15002)
!15004 = !DILocation(line: 107, column: 15, scope: !15002)
!15005 = !DILocation(line: 108, column: 2, scope: !15002)
!15006 = !DILocation(line: 113, column: 1, scope: !14987)
!15007 = distinct !DISubprogram(name: "z_waitq_head", scope: !14533, file: !14533, line: 52, type: !15008, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15010)
!15008 = !DISubroutineType(types: !15009)
!15009 = !{!3230, !3247}
!15010 = !{!15011}
!15011 = !DILocalVariable(name: "w", arg: 1, scope: !15007, file: !14533, line: 52, type: !3247)
!15012 = !DILocation(line: 0, scope: !15007)
!15013 = !DILocation(line: 54, column: 52, scope: !15007)
!15014 = !DILocation(line: 54, column: 28, scope: !15007)
!15015 = !DILocation(line: 54, column: 9, scope: !15007)
!15016 = !DILocation(line: 54, column: 2, scope: !15007)
!15017 = !DISubprogram(name: "k_free", scope: !142, file: !142, line: 5272, type: !7312, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!15018 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !15019, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15021)
!15019 = !DISubroutineType(types: !15020)
!15020 = !{!3215, !14927}
!15021 = !{!15022}
!15022 = !DILocalVariable(name: "list", arg: 1, scope: !15018, file: !151, line: 294, type: !14927)
!15023 = !DILocation(line: 0, scope: !15018)
!15024 = !DILocation(line: 296, column: 9, scope: !15018)
!15025 = !DILocation(line: 296, column: 49, scope: !15018)
!15026 = !DILocation(line: 296, column: 2, scope: !15018)
!15027 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !15028, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15030)
!15028 = !DISubroutineType(types: !15029)
!15029 = !{!136, !14927}
!15030 = !{!15031}
!15031 = !DILocalVariable(name: "list", arg: 1, scope: !15027, file: !151, line: 266, type: !14927)
!15032 = !DILocation(line: 0, scope: !15027)
!15033 = !DILocation(line: 268, column: 15, scope: !15027)
!15034 = !DILocation(line: 268, column: 20, scope: !15027)
!15035 = !DILocation(line: 268, column: 2, scope: !15027)
!15036 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14872, file: !14872, line: 116, type: !15037, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15043)
!15037 = !DISubroutineType(types: !15038)
!15038 = !{!107, !14875, !13, !15039}
!15039 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !15040)
!15040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !15041)
!15041 = !{!15042}
!15042 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15040, file: !103, line: 66, baseType: !102, size: 64)
!15043 = !{!15044, !15045, !15046, !15047, !15048, !15053}
!15044 = !DILocalVariable(name: "msgq", arg: 1, scope: !15036, file: !14872, line: 116, type: !14875)
!15045 = !DILocalVariable(name: "data", arg: 2, scope: !15036, file: !14872, line: 116, type: !13)
!15046 = !DILocalVariable(name: "timeout", arg: 3, scope: !15036, file: !14872, line: 116, type: !15039)
!15047 = !DILocalVariable(name: "pending_thread", scope: !15036, file: !14872, line: 120, type: !3230)
!15048 = !DILocalVariable(name: "key", scope: !15036, file: !14872, line: 121, type: !15049)
!15049 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !15050)
!15050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !15051)
!15051 = !{!15052}
!15052 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15050, file: !255, line: 33, baseType: !107, size: 32)
!15053 = !DILocalVariable(name: "result", scope: !15036, file: !14872, line: 122, type: !107)
!15054 = !DILocation(line: 0, scope: !15036)
!15055 = !DILocation(line: 124, column: 27, scope: !15036)
!15056 = !DILocalVariable(name: "l", arg: 1, scope: !15057, file: !255, line: 136, type: !15060)
!15057 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !15058, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15061)
!15058 = !DISubroutineType(types: !15059)
!15059 = !{!15049, !15060}
!15060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 32)
!15061 = !{!15056, !15062}
!15062 = !DILocalVariable(name: "k", scope: !15057, file: !255, line: 139, type: !15049)
!15063 = !DILocation(line: 0, scope: !15057, inlinedAt: !15064)
!15064 = distinct !DILocation(line: 124, column: 8, scope: !15036)
!15065 = !DILocation(line: 55, column: 2, scope: !15066, inlinedAt: !15070)
!15066 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15067)
!15067 = !{!15068, !15069}
!15068 = !DILocalVariable(name: "key", scope: !15066, file: !7054, line: 44, type: !32)
!15069 = !DILocalVariable(name: "tmp", scope: !15066, file: !7054, line: 53, type: !32)
!15070 = distinct !DILocation(line: 145, column: 10, scope: !15057, inlinedAt: !15064)
!15071 = !{i64 2246759}
!15072 = !DILocation(line: 0, scope: !15066, inlinedAt: !15070)
!15073 = !DILocation(line: 128, column: 12, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15036, file: !14872, line: 128, column: 6)
!15075 = !DILocation(line: 128, column: 30, scope: !15074)
!15076 = !DILocation(line: 128, column: 22, scope: !15074)
!15077 = !DILocation(line: 128, column: 6, scope: !15036)
!15078 = !DILocation(line: 130, column: 49, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15074, file: !14872, line: 128, column: 40)
!15080 = !DILocation(line: 130, column: 20, scope: !15079)
!15081 = !DILocation(line: 131, column: 22, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15079, file: !14872, line: 131, column: 7)
!15083 = !DILocation(line: 131, column: 7, scope: !15079)
!15084 = !DILocation(line: 135, column: 38, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15082, file: !14872, line: 131, column: 31)
!15086 = !DILocation(line: 136, column: 17, scope: !15085)
!15087 = !DILocation(line: 135, column: 10, scope: !15085)
!15088 = !DILocalVariable(name: "thread", arg: 1, scope: !15089, file: !14227, line: 65, type: !3230)
!15089 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14227, file: !14227, line: 65, type: !15090, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15092)
!15090 = !DISubroutineType(types: !15091)
!15091 = !{null, !3230, !32}
!15092 = !{!15088, !15093}
!15093 = !DILocalVariable(name: "value", arg: 2, scope: !15089, file: !14227, line: 65, type: !32)
!15094 = !DILocation(line: 0, scope: !15089, inlinedAt: !15095)
!15095 = distinct !DILocation(line: 138, column: 4, scope: !15085)
!15096 = !DILocation(line: 67, column: 15, scope: !15089, inlinedAt: !15095)
!15097 = !DILocation(line: 67, column: 33, scope: !15089, inlinedAt: !15095)
!15098 = !DILocation(line: 139, column: 4, scope: !15085)
!15099 = !DILocation(line: 140, column: 4, scope: !15085)
!15100 = !DILocation(line: 141, column: 4, scope: !15085)
!15101 = !DILocation(line: 144, column: 23, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15082, file: !14872, line: 142, column: 10)
!15103 = !DILocation(line: 144, column: 46, scope: !15102)
!15104 = !DILocation(line: 144, column: 10, scope: !15102)
!15105 = !DILocation(line: 145, column: 29, scope: !15102)
!15106 = !DILocation(line: 145, column: 20, scope: !15102)
!15107 = !DILocation(line: 146, column: 33, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15102, file: !14872, line: 146, column: 8)
!15109 = !DILocation(line: 146, column: 24, scope: !15108)
!15110 = !DILocation(line: 146, column: 8, scope: !15102)
!15111 = !DILocation(line: 147, column: 29, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15108, file: !14872, line: 146, column: 45)
!15113 = !DILocation(line: 147, column: 21, scope: !15112)
!15114 = !DILocation(line: 148, column: 4, scope: !15112)
!15115 = !DILocation(line: 149, column: 19, scope: !15102)
!15116 = !DILocation(line: 155, column: 2, scope: !15079)
!15117 = !DILocation(line: 155, column: 13, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15074, file: !14872, line: 155, column: 13)
!15119 = !DILocation(line: 155, column: 13, scope: !15074)
!15120 = !DILocation(line: 162, column: 3, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15118, file: !14872, line: 158, column: 9)
!15122 = !DILocation(line: 162, column: 18, scope: !15121)
!15123 = !DILocation(line: 162, column: 28, scope: !15121)
!15124 = !DILocation(line: 164, column: 49, scope: !15121)
!15125 = !DILocation(line: 164, column: 12, scope: !15121)
!15126 = !DILocation(line: 166, column: 3, scope: !15121)
!15127 = !DILocation(line: 0, scope: !15074)
!15128 = !DILocalVariable(name: "key", arg: 2, scope: !15129, file: !255, line: 190, type: !15049)
!15129 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !15130, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15132)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{null, !15060, !15049}
!15132 = !{!15133, !15128}
!15133 = !DILocalVariable(name: "l", arg: 1, scope: !15129, file: !255, line: 189, type: !15060)
!15134 = !DILocation(line: 0, scope: !15129, inlinedAt: !15135)
!15135 = distinct !DILocation(line: 171, column: 2, scope: !15036)
!15136 = !DILocalVariable(name: "key", arg: 1, scope: !15137, file: !7054, line: 84, type: !32)
!15137 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15138)
!15138 = !{!15136}
!15139 = !DILocation(line: 0, scope: !15137, inlinedAt: !15140)
!15140 = distinct !DILocation(line: 215, column: 2, scope: !15129, inlinedAt: !15135)
!15141 = !DILocation(line: 95, column: 2, scope: !15137, inlinedAt: !15140)
!15142 = !{i64 2247576}
!15143 = !DILocation(line: 173, column: 2, scope: !15036)
!15144 = !DILocation(line: 174, column: 1, scope: !15036)
!15145 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14872, file: !14872, line: 188, type: !15146, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15154)
!15146 = !DISubroutineType(types: !15147)
!15147 = !{null, !14875, !15148}
!15148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15149, size: 32)
!15149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !142, line: 4259, size: 96, elements: !15150)
!15150 = !{!15151, !15152, !15153}
!15151 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15149, file: !142, line: 4261, baseType: !137, size: 32)
!15152 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15149, file: !142, line: 4263, baseType: !108, size: 32, offset: 32)
!15153 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15149, file: !142, line: 4265, baseType: !108, size: 32, offset: 64)
!15154 = !{!15155, !15156}
!15155 = !DILocalVariable(name: "msgq", arg: 1, scope: !15145, file: !14872, line: 188, type: !14875)
!15156 = !DILocalVariable(name: "attrs", arg: 2, scope: !15145, file: !14872, line: 188, type: !15148)
!15157 = !DILocation(line: 0, scope: !15145)
!15158 = !DILocation(line: 190, column: 26, scope: !15145)
!15159 = !DILocation(line: 190, column: 9, scope: !15145)
!15160 = !DILocation(line: 190, column: 18, scope: !15145)
!15161 = !DILocation(line: 191, column: 26, scope: !15145)
!15162 = !DILocation(line: 191, column: 9, scope: !15145)
!15163 = !DILocation(line: 191, column: 18, scope: !15145)
!15164 = !DILocation(line: 192, column: 27, scope: !15145)
!15165 = !DILocation(line: 192, column: 9, scope: !15145)
!15166 = !DILocation(line: 192, column: 19, scope: !15145)
!15167 = !DILocation(line: 193, column: 1, scope: !15145)
!15168 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14872, file: !14872, line: 206, type: !15169, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15171)
!15169 = !DISubroutineType(types: !15170)
!15170 = !{!107, !14875, !106, !15039}
!15171 = !{!15172, !15173, !15174, !15175, !15176, !15177}
!15172 = !DILocalVariable(name: "msgq", arg: 1, scope: !15168, file: !14872, line: 206, type: !14875)
!15173 = !DILocalVariable(name: "data", arg: 2, scope: !15168, file: !14872, line: 206, type: !106)
!15174 = !DILocalVariable(name: "timeout", arg: 3, scope: !15168, file: !14872, line: 206, type: !15039)
!15175 = !DILocalVariable(name: "key", scope: !15168, file: !14872, line: 210, type: !15049)
!15176 = !DILocalVariable(name: "pending_thread", scope: !15168, file: !14872, line: 211, type: !3230)
!15177 = !DILocalVariable(name: "result", scope: !15168, file: !14872, line: 212, type: !107)
!15178 = !DILocation(line: 0, scope: !15168)
!15179 = !DILocation(line: 214, column: 27, scope: !15168)
!15180 = !DILocation(line: 0, scope: !15057, inlinedAt: !15181)
!15181 = distinct !DILocation(line: 214, column: 8, scope: !15168)
!15182 = !DILocation(line: 55, column: 2, scope: !15066, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 145, column: 10, scope: !15057, inlinedAt: !15181)
!15184 = !DILocation(line: 0, scope: !15066, inlinedAt: !15183)
!15185 = !DILocation(line: 218, column: 12, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15168, file: !14872, line: 218, column: 6)
!15187 = !DILocation(line: 218, column: 22, scope: !15186)
!15188 = !DILocation(line: 218, column: 6, scope: !15168)
!15189 = !DILocation(line: 220, column: 28, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15186, file: !14872, line: 218, column: 28)
!15191 = !DILocation(line: 220, column: 44, scope: !15190)
!15192 = !DILocation(line: 220, column: 9, scope: !15190)
!15193 = !DILocation(line: 221, column: 27, scope: !15190)
!15194 = !DILocation(line: 221, column: 18, scope: !15190)
!15195 = !DILocation(line: 222, column: 31, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15190, file: !14872, line: 222, column: 7)
!15197 = !DILocation(line: 222, column: 22, scope: !15196)
!15198 = !DILocation(line: 222, column: 7, scope: !15190)
!15199 = !DILocation(line: 223, column: 27, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15196, file: !14872, line: 222, column: 43)
!15201 = !DILocation(line: 223, column: 19, scope: !15200)
!15202 = !DILocation(line: 224, column: 3, scope: !15200)
!15203 = !DILocation(line: 225, column: 18, scope: !15190)
!15204 = !DILocation(line: 228, column: 49, scope: !15190)
!15205 = !DILocation(line: 228, column: 20, scope: !15190)
!15206 = !DILocation(line: 229, column: 22, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15190, file: !14872, line: 229, column: 7)
!15208 = !DILocation(line: 229, column: 7, scope: !15190)
!15209 = !DILocation(line: 233, column: 23, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15207, file: !14872, line: 229, column: 31)
!15211 = !DILocation(line: 233, column: 55, scope: !15210)
!15212 = !DILocation(line: 234, column: 17, scope: !15210)
!15213 = !DILocation(line: 233, column: 10, scope: !15210)
!15214 = !DILocation(line: 235, column: 29, scope: !15210)
!15215 = !DILocation(line: 235, column: 20, scope: !15210)
!15216 = !DILocation(line: 236, column: 33, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15210, file: !14872, line: 236, column: 8)
!15218 = !DILocation(line: 236, column: 24, scope: !15217)
!15219 = !DILocation(line: 236, column: 8, scope: !15210)
!15220 = !DILocation(line: 237, column: 29, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15217, file: !14872, line: 236, column: 45)
!15222 = !DILocation(line: 237, column: 21, scope: !15221)
!15223 = !DILocation(line: 238, column: 4, scope: !15221)
!15224 = !DILocation(line: 239, column: 19, scope: !15210)
!15225 = !DILocation(line: 0, scope: !15089, inlinedAt: !15226)
!15226 = distinct !DILocation(line: 242, column: 4, scope: !15210)
!15227 = !DILocation(line: 67, column: 15, scope: !15089, inlinedAt: !15226)
!15228 = !DILocation(line: 67, column: 33, scope: !15089, inlinedAt: !15226)
!15229 = !DILocation(line: 243, column: 4, scope: !15210)
!15230 = !DILocation(line: 244, column: 4, scope: !15210)
!15231 = !DILocation(line: 248, column: 4, scope: !15210)
!15232 = !DILocation(line: 251, column: 13, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15186, file: !14872, line: 251, column: 13)
!15234 = !DILocation(line: 251, column: 13, scope: !15186)
!15235 = !DILocation(line: 258, column: 3, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15233, file: !14872, line: 254, column: 9)
!15237 = !DILocation(line: 258, column: 18, scope: !15236)
!15238 = !DILocation(line: 258, column: 28, scope: !15236)
!15239 = !DILocation(line: 260, column: 49, scope: !15236)
!15240 = !DILocation(line: 260, column: 12, scope: !15236)
!15241 = !DILocation(line: 262, column: 3, scope: !15236)
!15242 = !DILocation(line: 0, scope: !15186)
!15243 = !DILocation(line: 0, scope: !15129, inlinedAt: !15244)
!15244 = distinct !DILocation(line: 267, column: 2, scope: !15168)
!15245 = !DILocation(line: 0, scope: !15137, inlinedAt: !15246)
!15246 = distinct !DILocation(line: 215, column: 2, scope: !15129, inlinedAt: !15244)
!15247 = !DILocation(line: 95, column: 2, scope: !15137, inlinedAt: !15246)
!15248 = !DILocation(line: 269, column: 2, scope: !15168)
!15249 = !DILocation(line: 270, column: 1, scope: !15168)
!15250 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14872, file: !14872, line: 284, type: !15251, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15253)
!15251 = !DISubroutineType(types: !15252)
!15252 = !{!107, !14875, !106}
!15253 = !{!15254, !15255, !15256, !15257}
!15254 = !DILocalVariable(name: "msgq", arg: 1, scope: !15250, file: !14872, line: 284, type: !14875)
!15255 = !DILocalVariable(name: "data", arg: 2, scope: !15250, file: !14872, line: 284, type: !106)
!15256 = !DILocalVariable(name: "key", scope: !15250, file: !14872, line: 286, type: !15049)
!15257 = !DILocalVariable(name: "result", scope: !15250, file: !14872, line: 287, type: !107)
!15258 = !DILocation(line: 0, scope: !15250)
!15259 = !DILocation(line: 0, scope: !15057, inlinedAt: !15260)
!15260 = distinct !DILocation(line: 289, column: 8, scope: !15250)
!15261 = !DILocation(line: 55, column: 2, scope: !15066, inlinedAt: !15262)
!15262 = distinct !DILocation(line: 145, column: 10, scope: !15057, inlinedAt: !15260)
!15263 = !DILocation(line: 0, scope: !15066, inlinedAt: !15262)
!15264 = !DILocation(line: 291, column: 12, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15250, file: !14872, line: 291, column: 6)
!15266 = !DILocation(line: 291, column: 22, scope: !15265)
!15267 = !DILocation(line: 291, column: 6, scope: !15250)
!15268 = !DILocation(line: 293, column: 28, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15265, file: !14872, line: 291, column: 28)
!15270 = !DILocation(line: 293, column: 44, scope: !15269)
!15271 = !DILocation(line: 293, column: 9, scope: !15269)
!15272 = !DILocation(line: 295, column: 2, scope: !15269)
!15273 = !DILocation(line: 0, scope: !15265)
!15274 = !DILocation(line: 0, scope: !15129, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 302, column: 2, scope: !15250)
!15276 = !DILocation(line: 0, scope: !15137, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 215, column: 2, scope: !15129, inlinedAt: !15275)
!15278 = !DILocation(line: 95, column: 2, scope: !15137, inlinedAt: !15277)
!15279 = !DILocation(line: 304, column: 2, scope: !15250)
!15280 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14872, file: !14872, line: 318, type: !15281, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !15283)
!15281 = !DISubroutineType(types: !15282)
!15282 = !{null, !14875}
!15283 = !{!15284, !15285, !15286}
!15284 = !DILocalVariable(name: "msgq", arg: 1, scope: !15280, file: !14872, line: 318, type: !14875)
!15285 = !DILocalVariable(name: "key", scope: !15280, file: !14872, line: 320, type: !15049)
!15286 = !DILocalVariable(name: "pending_thread", scope: !15280, file: !14872, line: 321, type: !3230)
!15287 = !DILocation(line: 0, scope: !15280)
!15288 = !DILocation(line: 0, scope: !15057, inlinedAt: !15289)
!15289 = distinct !DILocation(line: 323, column: 8, scope: !15280)
!15290 = !DILocation(line: 55, column: 2, scope: !15066, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 145, column: 10, scope: !15057, inlinedAt: !15289)
!15292 = !DILocation(line: 0, scope: !15066, inlinedAt: !15291)
!15293 = !DILocation(line: 328, column: 27, scope: !15280)
!15294 = !DILocation(line: 328, column: 65, scope: !15280)
!15295 = !DILocation(line: 328, column: 2, scope: !15280)
!15296 = !DILocation(line: 0, scope: !15089, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 329, column: 3, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15280, file: !14872, line: 328, column: 74)
!15299 = !DILocation(line: 67, column: 15, scope: !15089, inlinedAt: !15297)
!15300 = !DILocation(line: 67, column: 33, scope: !15089, inlinedAt: !15297)
!15301 = !DILocation(line: 330, column: 3, scope: !15298)
!15302 = distinct !{!15302, !15295, !15303}
!15303 = !DILocation(line: 331, column: 2, scope: !15280)
!15304 = !DILocation(line: 323, column: 27, scope: !15280)
!15305 = !DILocation(line: 333, column: 8, scope: !15280)
!15306 = !DILocation(line: 333, column: 18, scope: !15280)
!15307 = !DILocation(line: 334, column: 25, scope: !15280)
!15308 = !DILocation(line: 334, column: 8, scope: !15280)
!15309 = !DILocation(line: 334, column: 17, scope: !15280)
!15310 = !DILocation(line: 336, column: 2, scope: !15280)
!15311 = !DILocation(line: 337, column: 1, scope: !15280)
!15312 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2427, file: !2427, line: 49, type: !15313, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15322)
!15313 = !DISubroutineType(types: !15314)
!15314 = !{!107, !15315}
!15315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15316, size: 32)
!15316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !15317)
!15317 = !{!15318, !15319, !15320, !15321}
!15318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15316, file: !142, line: 2722, baseType: !2358, size: 64)
!15319 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15316, file: !142, line: 2724, baseType: !2340, size: 32, offset: 64)
!15320 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15316, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!15321 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15316, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!15322 = !{!15323}
!15323 = !DILocalVariable(name: "mutex", arg: 1, scope: !15312, file: !2427, line: 49, type: !15315)
!15324 = !DILocation(line: 0, scope: !15312)
!15325 = !DILocation(line: 51, column: 9, scope: !15312)
!15326 = !DILocation(line: 51, column: 15, scope: !15312)
!15327 = !DILocation(line: 52, column: 9, scope: !15312)
!15328 = !DILocation(line: 52, column: 20, scope: !15312)
!15329 = !DILocation(line: 54, column: 23, scope: !15312)
!15330 = !DILocation(line: 54, column: 2, scope: !15312)
!15331 = !DILocation(line: 60, column: 2, scope: !15312)
!15332 = distinct !DISubprogram(name: "z_waitq_init", scope: !14533, file: !14533, line: 47, type: !15333, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15335)
!15333 = !DISubroutineType(types: !15334)
!15334 = !{null, !2357}
!15335 = !{!15336}
!15336 = !DILocalVariable(name: "w", arg: 1, scope: !15332, file: !14533, line: 47, type: !2357)
!15337 = !DILocation(line: 0, scope: !15332)
!15338 = !DILocation(line: 49, column: 21, scope: !15332)
!15339 = !DILocation(line: 49, column: 2, scope: !15332)
!15340 = !DILocation(line: 50, column: 1, scope: !15332)
!15341 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !15342, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15345)
!15342 = !DISubroutineType(types: !15343)
!15343 = !{null, !15344}
!15344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!15345 = !{!15346}
!15346 = !DILocalVariable(name: "list", arg: 1, scope: !15341, file: !151, line: 197, type: !15344)
!15347 = !DILocation(line: 0, scope: !15341)
!15348 = !DILocation(line: 199, column: 8, scope: !15341)
!15349 = !DILocation(line: 199, column: 13, scope: !15341)
!15350 = !DILocation(line: 200, column: 8, scope: !15341)
!15351 = !DILocation(line: 200, column: 13, scope: !15341)
!15352 = !DILocation(line: 201, column: 1, scope: !15341)
!15353 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2427, file: !2427, line: 95, type: !15354, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15360)
!15354 = !DISubroutineType(types: !15355)
!15355 = !{!107, !15315, !15356}
!15356 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !15357)
!15357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !15358)
!15358 = !{!15359}
!15359 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15357, file: !103, line: 66, baseType: !102, size: 64)
!15360 = !{!15361, !15362, !15363, !15364, !15369, !15370, !15371}
!15361 = !DILocalVariable(name: "mutex", arg: 1, scope: !15353, file: !2427, line: 95, type: !15315)
!15362 = !DILocalVariable(name: "timeout", arg: 2, scope: !15353, file: !2427, line: 95, type: !15356)
!15363 = !DILocalVariable(name: "new_prio", scope: !15353, file: !2427, line: 97, type: !107)
!15364 = !DILocalVariable(name: "key", scope: !15353, file: !2427, line: 98, type: !15365)
!15365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !15366)
!15366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !15367)
!15367 = !{!15368}
!15368 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15366, file: !255, line: 33, baseType: !107, size: 32)
!15369 = !DILocalVariable(name: "resched", scope: !15353, file: !2427, line: 99, type: !136)
!15370 = !DILocalVariable(name: "got_mutex", scope: !15353, file: !2427, line: 146, type: !107)
!15371 = !DILocalVariable(name: "waiter", scope: !15372, file: !2427, line: 169, type: !2340)
!15372 = distinct !DILexicalBlock(scope: !15373, file: !2427, line: 168, column: 36)
!15373 = distinct !DILexicalBlock(scope: !15353, file: !2427, line: 168, column: 6)
!15374 = !DILocation(line: 0, scope: !15353)
!15375 = !DILocalVariable(name: "l", arg: 1, scope: !15376, file: !255, line: 136, type: !15379)
!15376 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !15377, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15380)
!15377 = !DISubroutineType(types: !15378)
!15378 = !{!15365, !15379}
!15379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!15380 = !{!15375, !15381}
!15381 = !DILocalVariable(name: "k", scope: !15376, file: !255, line: 139, type: !15365)
!15382 = !DILocation(line: 0, scope: !15376, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 105, column: 8, scope: !15353)
!15384 = !DILocation(line: 55, column: 2, scope: !15385, inlinedAt: !15389)
!15385 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15386)
!15386 = !{!15387, !15388}
!15387 = !DILocalVariable(name: "key", scope: !15385, file: !7054, line: 44, type: !32)
!15388 = !DILocalVariable(name: "tmp", scope: !15385, file: !7054, line: 53, type: !32)
!15389 = distinct !DILocation(line: 145, column: 10, scope: !15376, inlinedAt: !15383)
!15390 = !{i64 2245030}
!15391 = !DILocation(line: 0, scope: !15385, inlinedAt: !15389)
!15392 = !DILocation(line: 107, column: 6, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15353, file: !2427, line: 107, column: 6)
!15394 = !DILocation(line: 107, column: 6, scope: !15353)
!15395 = !{!"branch_weights", i32 2000, i32 1}
!15396 = !DILocation(line: 110, column: 6, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15393, file: !2427, line: 107, column: 71)
!15398 = !DILocation(line: 110, column: 21, scope: !15397)
!15399 = !DILocation(line: 109, column: 28, scope: !15397)
!15400 = !DILocation(line: 111, column: 13, scope: !15397)
!15401 = !DILocation(line: 114, column: 18, scope: !15397)
!15402 = !DILocation(line: 109, column: 10, scope: !15397)
!15403 = !DILocation(line: 109, column: 26, scope: !15397)
!15404 = !DILocation(line: 113, column: 20, scope: !15397)
!15405 = !DILocation(line: 114, column: 10, scope: !15397)
!15406 = !DILocation(line: 114, column: 16, scope: !15397)
!15407 = !DILocalVariable(name: "key", arg: 2, scope: !15408, file: !255, line: 190, type: !15365)
!15408 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !15409, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15411)
!15409 = !DISubroutineType(types: !15410)
!15410 = !{null, !15379, !15365}
!15411 = !{!15412, !15407}
!15412 = !DILocalVariable(name: "l", arg: 1, scope: !15408, file: !255, line: 189, type: !15379)
!15413 = !DILocation(line: 0, scope: !15408, inlinedAt: !15414)
!15414 = distinct !DILocation(line: 120, column: 3, scope: !15397)
!15415 = !DILocalVariable(name: "key", arg: 1, scope: !15416, file: !7054, line: 84, type: !32)
!15416 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15417)
!15417 = !{!15415}
!15418 = !DILocation(line: 0, scope: !15416, inlinedAt: !15419)
!15419 = distinct !DILocation(line: 215, column: 2, scope: !15408, inlinedAt: !15414)
!15420 = !DILocation(line: 95, column: 2, scope: !15416, inlinedAt: !15419)
!15421 = !{i64 2245847}
!15422 = !DILocation(line: 124, column: 3, scope: !15397)
!15423 = !DILocation(line: 127, column: 6, scope: !15424)
!15424 = distinct !DILexicalBlock(scope: !15353, file: !2427, line: 127, column: 6)
!15425 = !DILocation(line: 127, column: 6, scope: !15353)
!15426 = !{!"branch_weights", i32 1, i32 2000}
!15427 = !DILocation(line: 0, scope: !15408, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 128, column: 3, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15424, file: !2427, line: 127, column: 50)
!15430 = !DILocation(line: 0, scope: !15416, inlinedAt: !15431)
!15431 = distinct !DILocation(line: 215, column: 2, scope: !15408, inlinedAt: !15428)
!15432 = !DILocation(line: 95, column: 2, scope: !15416, inlinedAt: !15431)
!15433 = !DILocation(line: 132, column: 3, scope: !15429)
!15434 = !DILocation(line: 137, column: 53, scope: !15353)
!15435 = !DILocation(line: 137, column: 38, scope: !15353)
!15436 = !DILocation(line: 138, column: 29, scope: !15353)
!15437 = !DILocation(line: 138, column: 10, scope: !15353)
!15438 = !DILocation(line: 137, column: 13, scope: !15353)
!15439 = !DILocation(line: 142, column: 6, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15353, file: !2427, line: 142, column: 6)
!15441 = !DILocation(line: 142, column: 6, scope: !15353)
!15442 = !DILocation(line: 143, column: 13, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15440, file: !2427, line: 142, column: 59)
!15444 = !DILocation(line: 144, column: 2, scope: !15443)
!15445 = !DILocation(line: 146, column: 50, scope: !15353)
!15446 = !DILocation(line: 146, column: 18, scope: !15353)
!15447 = !DILocation(line: 153, column: 16, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15353, file: !2427, line: 153, column: 6)
!15449 = !DILocation(line: 153, column: 6, scope: !15353)
!15450 = !DILocation(line: 0, scope: !15376, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 162, column: 8, scope: !15353)
!15452 = !DILocation(line: 55, column: 2, scope: !15385, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 145, column: 10, scope: !15376, inlinedAt: !15451)
!15454 = !DILocation(line: 0, scope: !15385, inlinedAt: !15453)
!15455 = !DILocation(line: 168, column: 6, scope: !15373)
!15456 = !DILocation(line: 168, column: 6, scope: !15353)
!15457 = !DILocation(line: 169, column: 29, scope: !15372)
!15458 = !DILocation(line: 0, scope: !15372)
!15459 = !DILocation(line: 171, column: 22, scope: !15372)
!15460 = !DILocation(line: 171, column: 14, scope: !15372)
!15461 = !DILocation(line: 172, column: 42, scope: !15372)
!15462 = !DILocation(line: 172, column: 29, scope: !15372)
!15463 = !DILocation(line: 172, column: 55, scope: !15372)
!15464 = !DILocation(line: 172, column: 4, scope: !15372)
!15465 = !DILocation(line: 173, column: 11, scope: !15372)
!15466 = !DILocation(line: 177, column: 13, scope: !15372)
!15467 = !DILocation(line: 177, column: 48, scope: !15372)
!15468 = !DILocation(line: 180, column: 6, scope: !15353)
!15469 = !DILocation(line: 181, column: 3, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15471, file: !2427, line: 180, column: 15)
!15471 = distinct !DILexicalBlock(scope: !15353, file: !2427, line: 180, column: 6)
!15472 = !DILocation(line: 182, column: 2, scope: !15470)
!15473 = !DILocation(line: 0, scope: !15408, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 183, column: 3, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15471, file: !2427, line: 182, column: 9)
!15476 = !DILocation(line: 0, scope: !15416, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 215, column: 2, scope: !15408, inlinedAt: !15474)
!15478 = !DILocation(line: 95, column: 2, scope: !15416, inlinedAt: !15477)
!15479 = !DILocation(line: 189, column: 1, scope: !15353)
!15480 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2427, file: !2427, line: 72, type: !15481, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15483)
!15481 = !DISubroutineType(types: !15482)
!15482 = !{!334, !334, !334}
!15483 = !{!15484, !15485, !15486}
!15484 = !DILocalVariable(name: "target", arg: 1, scope: !15480, file: !2427, line: 72, type: !334)
!15485 = !DILocalVariable(name: "limit", arg: 2, scope: !15480, file: !2427, line: 72, type: !334)
!15486 = !DILocalVariable(name: "new_prio", scope: !15480, file: !2427, line: 74, type: !107)
!15487 = !DILocation(line: 0, scope: !15480)
!15488 = !DILocation(line: 74, column: 17, scope: !15480)
!15489 = !DILocation(line: 76, column: 13, scope: !15480)
!15490 = !DILocation(line: 78, column: 2, scope: !15480)
!15491 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14207, file: !14207, line: 211, type: !15492, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15494)
!15492 = !DISubroutineType(types: !15493)
!15493 = !{!136, !107, !107}
!15494 = !{!15495, !15496}
!15495 = !DILocalVariable(name: "prio", arg: 1, scope: !15491, file: !14207, line: 211, type: !107)
!15496 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15491, file: !14207, line: 211, type: !107)
!15497 = !DILocation(line: 0, scope: !15491)
!15498 = !DILocation(line: 213, column: 9, scope: !15491)
!15499 = !DILocation(line: 213, column: 2, scope: !15491)
!15500 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2427, file: !2427, line: 81, type: !15501, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15503)
!15501 = !DISubroutineType(types: !15502)
!15502 = !{!136, !15315, !334}
!15503 = !{!15504, !15505}
!15504 = !DILocalVariable(name: "mutex", arg: 1, scope: !15500, file: !2427, line: 81, type: !15315)
!15505 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15500, file: !2427, line: 81, type: !334)
!15506 = !DILocation(line: 0, scope: !15500)
!15507 = !DILocation(line: 83, column: 13, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15500, file: !2427, line: 83, column: 6)
!15509 = !DILocation(line: 83, column: 25, scope: !15508)
!15510 = !DILocation(line: 83, column: 6, scope: !15508)
!15511 = !DILocation(line: 83, column: 30, scope: !15508)
!15512 = !DILocation(line: 83, column: 6, scope: !15500)
!15513 = !DILocation(line: 90, column: 10, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15508, file: !2427, line: 83, column: 43)
!15515 = !DILocation(line: 90, column: 3, scope: !15514)
!15516 = !DILocation(line: 93, column: 1, scope: !15500)
!15517 = distinct !DISubprogram(name: "z_waitq_head", scope: !14533, file: !14533, line: 52, type: !15518, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15520)
!15518 = !DISubroutineType(types: !15519)
!15519 = !{!2340, !2357}
!15520 = !{!15521}
!15521 = !DILocalVariable(name: "w", arg: 1, scope: !15517, file: !14533, line: 52, type: !2357)
!15522 = !DILocation(line: 0, scope: !15517)
!15523 = !DILocation(line: 54, column: 52, scope: !15517)
!15524 = !DILocation(line: 54, column: 28, scope: !15517)
!15525 = !DILocation(line: 54, column: 9, scope: !15517)
!15526 = !DILocation(line: 54, column: 2, scope: !15517)
!15527 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !15528, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15530)
!15528 = !DISubroutineType(types: !15529)
!15529 = !{!2325, !15344}
!15530 = !{!15531}
!15531 = !DILocalVariable(name: "list", arg: 1, scope: !15527, file: !151, line: 294, type: !15344)
!15532 = !DILocation(line: 0, scope: !15527)
!15533 = !DILocation(line: 296, column: 9, scope: !15527)
!15534 = !DILocation(line: 296, column: 49, scope: !15527)
!15535 = !DILocation(line: 296, column: 2, scope: !15527)
!15536 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !15537, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15539)
!15537 = !DISubroutineType(types: !15538)
!15538 = !{!136, !15344}
!15539 = !{!15540}
!15540 = !DILocalVariable(name: "list", arg: 1, scope: !15536, file: !151, line: 266, type: !15344)
!15541 = !DILocation(line: 0, scope: !15536)
!15542 = !DILocation(line: 268, column: 15, scope: !15536)
!15543 = !DILocation(line: 268, column: 20, scope: !15536)
!15544 = !DILocation(line: 268, column: 2, scope: !15536)
!15545 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14207, file: !14207, line: 206, type: !15492, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15546)
!15546 = !{!15547, !15548}
!15547 = !DILocalVariable(name: "prio1", arg: 1, scope: !15545, file: !14207, line: 206, type: !107)
!15548 = !DILocalVariable(name: "prio2", arg: 2, scope: !15545, file: !14207, line: 206, type: !107)
!15549 = !DILocation(line: 0, scope: !15545)
!15550 = !DILocation(line: 208, column: 15, scope: !15545)
!15551 = !DILocation(line: 208, column: 2, scope: !15545)
!15552 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !14207, file: !14207, line: 186, type: !418, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15553)
!15553 = !{!15554}
!15554 = !DILocalVariable(name: "prio", arg: 1, scope: !15552, file: !14207, line: 186, type: !107)
!15555 = !DILocation(line: 0, scope: !15552)
!15556 = !DILocation(line: 188, column: 9, scope: !15552)
!15557 = !DILocation(line: 188, column: 2, scope: !15552)
!15558 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !14207, file: !14207, line: 181, type: !15559, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15561)
!15559 = !DISubroutineType(types: !15560)
!15560 = !{!136, !107}
!15561 = !{!15562}
!15562 = !DILocalVariable(name: "prio", arg: 1, scope: !15558, file: !14207, line: 181, type: !107)
!15563 = !DILocation(line: 0, scope: !15558)
!15564 = !DILocation(line: 183, column: 14, scope: !15558)
!15565 = !DILocation(line: 183, column: 2, scope: !15558)
!15566 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2427, file: !2427, line: 201, type: !15313, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15567)
!15567 = !{!15568, !15569, !15570, !15571}
!15568 = !DILocalVariable(name: "mutex", arg: 1, scope: !15566, file: !2427, line: 201, type: !15315)
!15569 = !DILocalVariable(name: "new_owner", scope: !15566, file: !2427, line: 203, type: !2340)
!15570 = !DILocalVariable(name: "key", scope: !15566, file: !2427, line: 242, type: !15365)
!15571 = !DILabel(scope: !15566, name: "k_mutex_unlock_return", file: !2427, line: 270)
!15572 = !DILocation(line: 0, scope: !15566)
!15573 = !DILocation(line: 209, column: 2, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15566, file: !2427, line: 209, column: 2)
!15575 = !DILocation(line: 209, column: 2, scope: !15566)
!15576 = !DILocation(line: 217, column: 2, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15566, file: !2427, line: 217, column: 2)
!15578 = !DILocation(line: 217, column: 2, scope: !15566)
!15579 = !DILocation(line: 237, column: 13, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15566, file: !2427, line: 237, column: 6)
!15581 = !DILocation(line: 237, column: 24, scope: !15580)
!15582 = !DILocation(line: 237, column: 6, scope: !15566)
!15583 = !DILocation(line: 238, column: 20, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15580, file: !2427, line: 237, column: 30)
!15585 = !DILocation(line: 239, column: 3, scope: !15584)
!15586 = !DILocation(line: 0, scope: !15376, inlinedAt: !15587)
!15587 = distinct !DILocation(line: 242, column: 25, scope: !15566)
!15588 = !DILocation(line: 55, column: 2, scope: !15385, inlinedAt: !15589)
!15589 = distinct !DILocation(line: 145, column: 10, scope: !15376, inlinedAt: !15587)
!15590 = !DILocation(line: 0, scope: !15385, inlinedAt: !15589)
!15591 = !DILocation(line: 244, column: 34, scope: !15566)
!15592 = !DILocation(line: 244, column: 2, scope: !15566)
!15593 = !DILocation(line: 247, column: 44, scope: !15566)
!15594 = !DILocation(line: 247, column: 14, scope: !15566)
!15595 = !DILocation(line: 249, column: 15, scope: !15566)
!15596 = !DILocation(line: 254, column: 16, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15566, file: !2427, line: 254, column: 6)
!15598 = !DILocation(line: 254, column: 6, scope: !15566)
!15599 = !DILocation(line: 260, column: 44, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15597, file: !2427, line: 254, column: 25)
!15601 = !DILocation(line: 260, column: 28, scope: !15600)
!15602 = !DILocation(line: 260, column: 26, scope: !15600)
!15603 = !DILocalVariable(name: "thread", arg: 1, scope: !15604, file: !14227, line: 65, type: !2340)
!15604 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14227, file: !14227, line: 65, type: !15605, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !15607)
!15605 = !DISubroutineType(types: !15606)
!15606 = !{null, !2340, !32}
!15607 = !{!15603, !15608}
!15608 = !DILocalVariable(name: "value", arg: 2, scope: !15604, file: !14227, line: 65, type: !32)
!15609 = !DILocation(line: 0, scope: !15604, inlinedAt: !15610)
!15610 = distinct !DILocation(line: 261, column: 3, scope: !15600)
!15611 = !DILocation(line: 67, column: 15, scope: !15604, inlinedAt: !15610)
!15612 = !DILocation(line: 67, column: 33, scope: !15604, inlinedAt: !15610)
!15613 = !DILocation(line: 262, column: 3, scope: !15600)
!15614 = !DILocation(line: 263, column: 3, scope: !15600)
!15615 = !DILocation(line: 264, column: 2, scope: !15600)
!15616 = !DILocation(line: 265, column: 21, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15597, file: !2427, line: 264, column: 9)
!15618 = !DILocation(line: 0, scope: !15408, inlinedAt: !15619)
!15619 = distinct !DILocation(line: 266, column: 3, scope: !15617)
!15620 = !DILocation(line: 0, scope: !15416, inlinedAt: !15621)
!15621 = distinct !DILocation(line: 215, column: 2, scope: !15408, inlinedAt: !15619)
!15622 = !DILocation(line: 95, column: 2, scope: !15416, inlinedAt: !15621)
!15623 = !DILocation(line: 274, column: 1, scope: !15566)
!15624 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2538, file: !2538, line: 93, type: !15625, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15627)
!15625 = !DISubroutineType(types: !15626)
!15626 = !{!334, !2433, !2433}
!15627 = !{!15628, !15629, !15630, !15631}
!15628 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15624, file: !2538, line: 93, type: !2433)
!15629 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15624, file: !2538, line: 94, type: !2433)
!15630 = !DILocalVariable(name: "b1", scope: !15624, file: !2538, line: 97, type: !334)
!15631 = !DILocalVariable(name: "b2", scope: !15624, file: !2538, line: 98, type: !334)
!15632 = !DILocation(line: 0, scope: !15624)
!15633 = !DILocation(line: 97, column: 30, scope: !15624)
!15634 = !DILocation(line: 98, column: 30, scope: !15624)
!15635 = !DILocation(line: 100, column: 9, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15624, file: !2538, line: 100, column: 6)
!15637 = !DILocation(line: 100, column: 6, scope: !15624)
!15638 = !DILocation(line: 125, column: 1, scope: !15624)
!15639 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2538, file: !2538, line: 428, type: !15640, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15642)
!15640 = !DISubroutineType(types: !15641)
!15641 = !{null, !2433}
!15642 = !{!15643}
!15643 = !DILocalVariable(name: "curr", arg: 1, scope: !15639, file: !2538, line: 428, type: !2433)
!15644 = !DILocation(line: 0, scope: !15639)
!15645 = !DILocation(line: 434, column: 6, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15639, file: !2538, line: 434, column: 6)
!15647 = !DILocation(line: 434, column: 23, scope: !15646)
!15648 = !DILocation(line: 434, column: 6, scope: !15639)
!15649 = !DILocation(line: 435, column: 50, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15646, file: !2538, line: 434, column: 29)
!15651 = !DILocation(line: 435, column: 48, scope: !15650)
!15652 = !DILocation(line: 435, column: 29, scope: !15650)
!15653 = !DILocation(line: 436, column: 24, scope: !15650)
!15654 = !DILocation(line: 436, column: 3, scope: !15650)
!15655 = !DILocation(line: 437, column: 2, scope: !15650)
!15656 = !DILocation(line: 438, column: 1, scope: !15639)
!15657 = distinct !DISubprogram(name: "slice_time", scope: !2538, file: !2538, line: 407, type: !15658, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15660)
!15658 = !DISubroutineType(types: !15659)
!15659 = !{!107, !2433}
!15660 = !{!15661, !15662}
!15661 = !DILocalVariable(name: "curr", arg: 1, scope: !15657, file: !2538, line: 407, type: !2433)
!15662 = !DILocalVariable(name: "ret", scope: !15657, file: !2538, line: 409, type: !107)
!15663 = !DILocation(line: 0, scope: !15657)
!15664 = !DILocation(line: 409, column: 12, scope: !15657)
!15665 = !DILocation(line: 416, column: 2, scope: !15657)
!15666 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2538, file: !2538, line: 440, type: !15667, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15669)
!15667 = !DISubroutineType(types: !15668)
!15668 = !{null, !334, !107}
!15669 = !{!15670, !15671, !15672, !15678}
!15670 = !DILocalVariable(name: "slice", arg: 1, scope: !15666, file: !2538, line: 440, type: !334)
!15671 = !DILocalVariable(name: "prio", arg: 2, scope: !15666, file: !2538, line: 440, type: !107)
!15672 = !DILocalVariable(name: "__i", scope: !15673, file: !2538, line: 442, type: !15674)
!15673 = distinct !DILexicalBlock(scope: !15666, file: !2538, line: 442, column: 2)
!15674 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !15675)
!15675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !15676)
!15676 = !{!15677}
!15677 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15675, file: !255, line: 33, baseType: !107, size: 32)
!15678 = !DILocalVariable(name: "__key", scope: !15673, file: !2538, line: 442, type: !15674)
!15679 = !DILocation(line: 0, scope: !15666)
!15680 = !DILocation(line: 0, scope: !15673)
!15681 = !DILocalVariable(name: "l", arg: 1, scope: !15682, file: !255, line: 136, type: !15685)
!15682 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !15683, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15686)
!15683 = !DISubroutineType(types: !15684)
!15684 = !{!15674, !15685}
!15685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!15686 = !{!15681, !15687}
!15687 = !DILocalVariable(name: "k", scope: !15682, file: !255, line: 139, type: !15674)
!15688 = !DILocation(line: 0, scope: !15682, inlinedAt: !15689)
!15689 = distinct !DILocation(line: 442, column: 2, scope: !15673)
!15690 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !15695)
!15691 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15692)
!15692 = !{!15693, !15694}
!15693 = !DILocalVariable(name: "key", scope: !15691, file: !7054, line: 44, type: !32)
!15694 = !DILocalVariable(name: "tmp", scope: !15691, file: !7054, line: 53, type: !32)
!15695 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !15689)
!15696 = !{i64 2284593}
!15697 = !DILocation(line: 0, scope: !15691, inlinedAt: !15695)
!15698 = !DILocation(line: 443, column: 29, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15700, file: !2538, line: 442, column: 26)
!15700 = distinct !DILexicalBlock(scope: !15673, file: !2538, line: 442, column: 2)
!15701 = !DILocation(line: 444, column: 17, scope: !15699)
!15702 = !DILocation(line: 445, column: 51, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15699, file: !2538, line: 445, column: 7)
!15704 = !DILocation(line: 445, column: 7, scope: !15699)
!15705 = !DILocation(line: 0, scope: !15699)
!15706 = !DILocation(line: 451, column: 18, scope: !15699)
!15707 = !DILocation(line: 452, column: 3, scope: !15699)
!15708 = !DILocalVariable(name: "key", arg: 2, scope: !15709, file: !255, line: 190, type: !15674)
!15709 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !15710, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15712)
!15710 = !DISubroutineType(types: !15711)
!15711 = !{null, !15685, !15674}
!15712 = !{!15713, !15708}
!15713 = !DILocalVariable(name: "l", arg: 1, scope: !15709, file: !255, line: 189, type: !15685)
!15714 = !DILocation(line: 0, scope: !15709, inlinedAt: !15715)
!15715 = distinct !DILocation(line: 442, column: 2, scope: !15700)
!15716 = !DILocalVariable(name: "key", arg: 1, scope: !15717, file: !7054, line: 84, type: !32)
!15717 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15718)
!15718 = !{!15716}
!15719 = !DILocation(line: 0, scope: !15717, inlinedAt: !15720)
!15720 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !15715)
!15721 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !15720)
!15722 = !{i64 2285410}
!15723 = !DILocation(line: 454, column: 1, scope: !15666)
!15724 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3505, file: !3505, line: 389, type: !8620, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15725)
!15725 = !{!15726}
!15726 = !DILocalVariable(name: "t", arg: 1, scope: !15724, file: !3505, line: 389, type: !108)
!15727 = !DILocation(line: 0, scope: !15724)
!15728 = !DILocalVariable(name: "t", arg: 1, scope: !15729, file: !3505, line: 102, type: !109)
!15729 = distinct !DISubprogram(name: "z_tmcvt", scope: !3505, file: !3505, line: 102, type: !3513, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15730)
!15730 = !{!15728, !15731, !15732, !15733, !15734, !15735, !15736, !15737, !15738, !15739, !15740}
!15731 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15729, file: !3505, line: 102, type: !108)
!15732 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15729, file: !3505, line: 103, type: !108)
!15733 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15729, file: !3505, line: 103, type: !136)
!15734 = !DILocalVariable(name: "result32", arg: 5, scope: !15729, file: !3505, line: 104, type: !136)
!15735 = !DILocalVariable(name: "round_up", arg: 6, scope: !15729, file: !3505, line: 104, type: !136)
!15736 = !DILocalVariable(name: "round_off", arg: 7, scope: !15729, file: !3505, line: 105, type: !136)
!15737 = !DILocalVariable(name: "mul_ratio", scope: !15729, file: !3505, line: 107, type: !136)
!15738 = !DILocalVariable(name: "div_ratio", scope: !15729, file: !3505, line: 109, type: !136)
!15739 = !DILocalVariable(name: "off", scope: !15729, file: !3505, line: 116, type: !109)
!15740 = !DILocalVariable(name: "rdivisor", scope: !15741, file: !3505, line: 119, type: !108)
!15741 = distinct !DILexicalBlock(scope: !15742, file: !3505, line: 118, column: 18)
!15742 = distinct !DILexicalBlock(scope: !15729, file: !3505, line: 118, column: 6)
!15743 = !DILocation(line: 0, scope: !15729, inlinedAt: !15744)
!15744 = distinct !DILocation(line: 392, column: 9, scope: !15724)
!15745 = !DILocation(line: 143, column: 25, scope: !15746, inlinedAt: !15744)
!15746 = distinct !DILexicalBlock(scope: !15747, file: !3505, line: 142, column: 17)
!15747 = distinct !DILexicalBlock(scope: !15748, file: !3505, line: 142, column: 7)
!15748 = distinct !DILexicalBlock(scope: !15749, file: !3505, line: 141, column: 24)
!15749 = distinct !DILexicalBlock(scope: !15750, file: !3505, line: 141, column: 13)
!15750 = distinct !DILexicalBlock(scope: !15729, file: !3505, line: 134, column: 6)
!15751 = !DILocation(line: 392, column: 2, scope: !15724)
!15752 = distinct !DISubprogram(name: "z_time_slice", scope: !2538, file: !2538, line: 502, type: !9835, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15753)
!15753 = !{!15754, !15755}
!15754 = !DILocalVariable(name: "ticks", arg: 1, scope: !15752, file: !2538, line: 502, type: !107)
!15755 = !DILocalVariable(name: "key", scope: !15752, file: !2538, line: 511, type: !15674)
!15756 = !DILocation(line: 0, scope: !15752)
!15757 = !DILocation(line: 0, scope: !15682, inlinedAt: !15758)
!15758 = distinct !DILocation(line: 511, column: 25, scope: !15752)
!15759 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !15760)
!15760 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !15758)
!15761 = !DILocation(line: 0, scope: !15691, inlinedAt: !15760)
!15762 = !DILocation(line: 514, column: 6, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15752, file: !2538, line: 514, column: 6)
!15764 = !DILocation(line: 514, column: 25, scope: !15763)
!15765 = !DILocation(line: 514, column: 22, scope: !15763)
!15766 = !DILocation(line: 514, column: 6, scope: !15752)
!15767 = !DILocation(line: 515, column: 3, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15763, file: !2538, line: 514, column: 35)
!15769 = !DILocation(line: 0, scope: !15709, inlinedAt: !15770)
!15770 = distinct !DILocation(line: 516, column: 3, scope: !15768)
!15771 = !DILocation(line: 0, scope: !15717, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !15770)
!15773 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !15772)
!15774 = !DILocation(line: 517, column: 3, scope: !15768)
!15775 = !DILocation(line: 519, column: 18, scope: !15752)
!15776 = !DILocation(line: 522, column: 6, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15752, file: !2538, line: 522, column: 6)
!15778 = !DILocation(line: 522, column: 27, scope: !15777)
!15779 = !DILocation(line: 522, column: 30, scope: !15777)
!15780 = !DILocation(line: 522, column: 6, scope: !15752)
!15781 = !DILocation(line: 523, column: 30, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15783, file: !2538, line: 523, column: 7)
!15783 = distinct !DILexicalBlock(scope: !15777, file: !2538, line: 522, column: 51)
!15784 = !DILocation(line: 523, column: 13, scope: !15782)
!15785 = !DILocation(line: 523, column: 7, scope: !15783)
!15786 = !DILocation(line: 530, column: 10, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15782, file: !2538, line: 523, column: 43)
!15788 = !DILocation(line: 531, column: 3, scope: !15787)
!15789 = !DILocation(line: 532, column: 30, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15782, file: !2538, line: 531, column: 10)
!15791 = !DILocation(line: 535, column: 29, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15777, file: !2538, line: 534, column: 9)
!15793 = !DILocation(line: 0, scope: !15709, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 537, column: 2, scope: !15752)
!15795 = !DILocation(line: 0, scope: !15717, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !15794)
!15797 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !15796)
!15798 = !DILocation(line: 538, column: 1, scope: !15752)
!15799 = distinct !DISubprogram(name: "sliceable", scope: !2538, file: !2538, line: 468, type: !15800, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15802)
!15800 = !DISubroutineType(types: !15801)
!15801 = !{!136, !2433}
!15802 = !{!15803, !15804}
!15803 = !DILocalVariable(name: "thread", arg: 1, scope: !15799, file: !2538, line: 468, type: !2433)
!15804 = !DILocalVariable(name: "ret", scope: !15799, file: !2538, line: 470, type: !136)
!15805 = !DILocation(line: 0, scope: !15799)
!15806 = !DILocation(line: 470, column: 13, scope: !15799)
!15807 = !DILocation(line: 471, column: 3, scope: !15799)
!15808 = !DILocation(line: 471, column: 7, scope: !15799)
!15809 = !DILocation(line: 472, column: 3, scope: !15799)
!15810 = !DILocation(line: 472, column: 37, scope: !15799)
!15811 = !DILocation(line: 472, column: 24, scope: !15799)
!15812 = !DILocation(line: 472, column: 43, scope: !15799)
!15813 = !DILocation(line: 472, column: 7, scope: !15799)
!15814 = !DILocation(line: 473, column: 3, scope: !15799)
!15815 = !DILocation(line: 473, column: 7, scope: !15799)
!15816 = !DILocation(line: 473, column: 6, scope: !15799)
!15817 = !DILocation(line: 479, column: 2, scope: !15799)
!15818 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2538, file: !2538, line: 482, type: !15819, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15821)
!15819 = !DISubroutineType(types: !15820)
!15820 = !{!15674, !15674}
!15821 = !{!15822, !15823}
!15822 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15818, file: !2538, line: 482, type: !15674)
!15823 = !DILocalVariable(name: "curr", scope: !15818, file: !2538, line: 484, type: !2433)
!15824 = !DILocation(line: 0, scope: !15818)
!15825 = !DILocation(line: 484, column: 26, scope: !15818)
!15826 = !DILocation(line: 493, column: 7, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15818, file: !2538, line: 493, column: 6)
!15828 = !DILocation(line: 493, column: 6, scope: !15818)
!15829 = !DILocation(line: 494, column: 3, scope: !15830)
!15830 = distinct !DILexicalBlock(scope: !15827, file: !2538, line: 493, column: 49)
!15831 = !DILocation(line: 495, column: 2, scope: !15830)
!15832 = !DILocation(line: 496, column: 2, scope: !15818)
!15833 = !DILocation(line: 499, column: 1, scope: !15818)
!15834 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14207, file: !14207, line: 106, type: !15800, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15835)
!15835 = !{!15836, !15837}
!15836 = !DILocalVariable(name: "thread", arg: 1, scope: !15834, file: !14207, line: 106, type: !2433)
!15837 = !DILocalVariable(name: "state", scope: !15834, file: !14207, line: 108, type: !190)
!15838 = !DILocation(line: 0, scope: !15834)
!15839 = !DILocation(line: 108, column: 31, scope: !15834)
!15840 = !DILocation(line: 110, column: 16, scope: !15834)
!15841 = !DILocation(line: 111, column: 41, scope: !15834)
!15842 = !DILocation(line: 110, column: 2, scope: !15834)
!15843 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2538, file: !2538, line: 393, type: !15640, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15844)
!15844 = !{!15845}
!15845 = !DILocalVariable(name: "thread", arg: 1, scope: !15843, file: !2538, line: 393, type: !2433)
!15846 = !DILocation(line: 0, scope: !15843)
!15847 = !DILocation(line: 395, column: 6, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15843, file: !2538, line: 395, column: 6)
!15849 = !DILocation(line: 395, column: 6, scope: !15843)
!15850 = !DILocalVariable(name: "thread", arg: 1, scope: !15851, file: !2538, line: 264, type: !2433)
!15851 = distinct !DISubprogram(name: "dequeue_thread", scope: !2538, file: !2538, line: 264, type: !15640, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15852)
!15852 = !{!15850}
!15853 = !DILocation(line: 0, scope: !15851, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 396, column: 3, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15848, file: !2538, line: 395, column: 34)
!15856 = !DILocation(line: 266, column: 15, scope: !15851, inlinedAt: !15854)
!15857 = !DILocation(line: 266, column: 28, scope: !15851, inlinedAt: !15854)
!15858 = !DILocalVariable(name: "thread", arg: 1, scope: !15859, file: !2538, line: 232, type: !2433)
!15859 = distinct !DISubprogram(name: "runq_remove", scope: !2538, file: !2538, line: 232, type: !15640, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15860)
!15860 = !{!15858}
!15861 = !DILocation(line: 0, scope: !15859, inlinedAt: !15862)
!15862 = distinct !DILocation(line: 268, column: 3, scope: !15863, inlinedAt: !15854)
!15863 = distinct !DILexicalBlock(scope: !15864, file: !2538, line: 267, column: 35)
!15864 = distinct !DILexicalBlock(scope: !15851, file: !2538, line: 267, column: 6)
!15865 = !DILocation(line: 234, column: 2, scope: !15859, inlinedAt: !15862)
!15866 = !DILocation(line: 397, column: 2, scope: !15855)
!15867 = !DILocalVariable(name: "thread", arg: 1, scope: !15868, file: !2538, line: 250, type: !2433)
!15868 = distinct !DISubprogram(name: "queue_thread", scope: !2538, file: !2538, line: 250, type: !15640, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15869)
!15869 = !{!15867}
!15870 = !DILocation(line: 0, scope: !15868, inlinedAt: !15871)
!15871 = distinct !DILocation(line: 398, column: 2, scope: !15843)
!15872 = !DILocation(line: 252, column: 15, scope: !15868, inlinedAt: !15871)
!15873 = !DILocation(line: 252, column: 28, scope: !15868, inlinedAt: !15871)
!15874 = !DILocalVariable(name: "thread", arg: 1, scope: !15875, file: !2538, line: 227, type: !2433)
!15875 = distinct !DISubprogram(name: "runq_add", scope: !2538, file: !2538, line: 227, type: !15640, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15876)
!15876 = !{!15874}
!15877 = !DILocation(line: 0, scope: !15875, inlinedAt: !15878)
!15878 = distinct !DILocation(line: 254, column: 3, scope: !15879, inlinedAt: !15871)
!15879 = distinct !DILexicalBlock(scope: !15880, file: !2538, line: 253, column: 35)
!15880 = distinct !DILexicalBlock(scope: !15868, file: !2538, line: 253, column: 6)
!15881 = !DILocalVariable(name: "pq", arg: 1, scope: !15882, file: !2538, line: 181, type: !15885)
!15882 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2538, file: !2538, line: 181, type: !15883, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15886)
!15883 = !DISubroutineType(types: !15884)
!15884 = !{null, !15885, !2433}
!15885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!15886 = !{!15881, !15887, !15888}
!15887 = !DILocalVariable(name: "thread", arg: 2, scope: !15882, file: !2538, line: 182, type: !2433)
!15888 = !DILocalVariable(name: "t", scope: !15882, file: !2538, line: 184, type: !2433)
!15889 = !DILocation(line: 0, scope: !15882, inlinedAt: !15890)
!15890 = distinct !DILocation(line: 229, column: 2, scope: !15875, inlinedAt: !15878)
!15891 = !DILocation(line: 188, column: 2, scope: !15892, inlinedAt: !15890)
!15892 = distinct !DILexicalBlock(scope: !15882, file: !2538, line: 188, column: 2)
!15893 = !DILocation(line: 188, column: 2, scope: !15894, inlinedAt: !15890)
!15894 = distinct !DILexicalBlock(scope: !15892, file: !2538, line: 188, column: 2)
!15895 = !DILocation(line: 0, scope: !15892, inlinedAt: !15890)
!15896 = !DILocation(line: 189, column: 7, scope: !15897, inlinedAt: !15890)
!15897 = distinct !DILexicalBlock(scope: !15898, file: !2538, line: 189, column: 7)
!15898 = distinct !DILexicalBlock(scope: !15894, file: !2538, line: 188, column: 56)
!15899 = !DILocation(line: 189, column: 35, scope: !15897, inlinedAt: !15890)
!15900 = !DILocation(line: 189, column: 7, scope: !15898, inlinedAt: !15890)
!15901 = !DILocation(line: 191, column: 21, scope: !15902, inlinedAt: !15890)
!15902 = distinct !DILexicalBlock(scope: !15897, file: !2538, line: 189, column: 40)
!15903 = !DILocation(line: 190, column: 4, scope: !15902, inlinedAt: !15890)
!15904 = !DILocation(line: 192, column: 4, scope: !15902, inlinedAt: !15890)
!15905 = distinct !{!15905, !15891, !15906}
!15906 = !DILocation(line: 194, column: 2, scope: !15892, inlinedAt: !15890)
!15907 = !DILocation(line: 196, column: 37, scope: !15882, inlinedAt: !15890)
!15908 = !DILocation(line: 196, column: 2, scope: !15882, inlinedAt: !15890)
!15909 = !DILocation(line: 197, column: 1, scope: !15882, inlinedAt: !15890)
!15910 = !DILocation(line: 399, column: 25, scope: !15843)
!15911 = !DILocation(line: 399, column: 22, scope: !15843)
!15912 = !DILocation(line: 399, column: 2, scope: !15843)
!15913 = !DILocation(line: 400, column: 1, scope: !15843)
!15914 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14207, file: !14207, line: 136, type: !15800, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15915)
!15915 = !{!15916}
!15916 = !DILocalVariable(name: "thread", arg: 1, scope: !15914, file: !14207, line: 136, type: !2433)
!15917 = !DILocation(line: 0, scope: !15914)
!15918 = !DILocation(line: 138, column: 9, scope: !15914)
!15919 = !DILocation(line: 138, column: 2, scope: !15914)
!15920 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2538, file: !2538, line: 1137, type: !15883, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15921)
!15921 = !{!15922, !15923}
!15922 = !DILocalVariable(name: "pq", arg: 1, scope: !15920, file: !2538, line: 1137, type: !15885)
!15923 = !DILocalVariable(name: "thread", arg: 2, scope: !15920, file: !2538, line: 1137, type: !2433)
!15924 = !DILocation(line: 0, scope: !15920)
!15925 = !DILocation(line: 1141, column: 33, scope: !15920)
!15926 = !DILocation(line: 1141, column: 2, scope: !15920)
!15927 = !DILocation(line: 1142, column: 1, scope: !15920)
!15928 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !15929, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15931)
!15929 = !DISubroutineType(types: !15930)
!15930 = !{!2534, !15885}
!15931 = !{!15932}
!15932 = !DILocalVariable(name: "list", arg: 1, scope: !15928, file: !151, line: 294, type: !15885)
!15933 = !DILocation(line: 0, scope: !15928)
!15934 = !DILocation(line: 296, column: 9, scope: !15928)
!15935 = !DILocation(line: 296, column: 49, scope: !15928)
!15936 = !DILocation(line: 296, column: 2, scope: !15928)
!15937 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !151, file: !151, line: 443, type: !15938, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15940)
!15938 = !DISubroutineType(types: !15939)
!15939 = !{null, !2534, !2534}
!15940 = !{!15941, !15942, !15943}
!15941 = !DILocalVariable(name: "successor", arg: 1, scope: !15937, file: !151, line: 443, type: !2534)
!15942 = !DILocalVariable(name: "node", arg: 2, scope: !15937, file: !151, line: 443, type: !2534)
!15943 = !DILocalVariable(name: "prev", scope: !15937, file: !151, line: 445, type: !15944)
!15944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2534)
!15945 = !DILocation(line: 0, scope: !15937)
!15946 = !DILocation(line: 445, column: 39, scope: !15937)
!15947 = !DILocation(line: 447, column: 8, scope: !15937)
!15948 = !DILocation(line: 447, column: 13, scope: !15937)
!15949 = !DILocation(line: 448, column: 8, scope: !15937)
!15950 = !DILocation(line: 448, column: 13, scope: !15937)
!15951 = !DILocation(line: 449, column: 8, scope: !15937)
!15952 = !DILocation(line: 449, column: 13, scope: !15937)
!15953 = !DILocation(line: 450, column: 18, scope: !15937)
!15954 = !DILocation(line: 451, column: 1, scope: !15937)
!15955 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !151, file: !151, line: 341, type: !15956, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15958)
!15956 = !DISubroutineType(types: !15957)
!15957 = !{!2534, !15885, !2534}
!15958 = !{!15959, !15960}
!15959 = !DILocalVariable(name: "list", arg: 1, scope: !15955, file: !151, line: 341, type: !15885)
!15960 = !DILocalVariable(name: "node", arg: 2, scope: !15955, file: !151, line: 342, type: !2534)
!15961 = !DILocation(line: 0, scope: !15955)
!15962 = !DILocation(line: 344, column: 15, scope: !15955)
!15963 = !DILocation(line: 344, column: 9, scope: !15955)
!15964 = !DILocation(line: 344, column: 26, scope: !15955)
!15965 = !DILocation(line: 344, column: 2, scope: !15955)
!15966 = distinct !DISubprogram(name: "sys_dlist_append", scope: !151, file: !151, line: 404, type: !15967, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15969)
!15967 = !DISubroutineType(types: !15968)
!15968 = !{null, !15885, !2534}
!15969 = !{!15970, !15971, !15972}
!15970 = !DILocalVariable(name: "list", arg: 1, scope: !15966, file: !151, line: 404, type: !15885)
!15971 = !DILocalVariable(name: "node", arg: 2, scope: !15966, file: !151, line: 404, type: !2534)
!15972 = !DILocalVariable(name: "tail", scope: !15966, file: !151, line: 406, type: !15944)
!15973 = !DILocation(line: 0, scope: !15966)
!15974 = !DILocation(line: 406, column: 34, scope: !15966)
!15975 = !DILocation(line: 408, column: 8, scope: !15966)
!15976 = !DILocation(line: 408, column: 13, scope: !15966)
!15977 = !DILocation(line: 409, column: 8, scope: !15966)
!15978 = !DILocation(line: 409, column: 13, scope: !15966)
!15979 = !DILocation(line: 411, column: 8, scope: !15966)
!15980 = !DILocation(line: 411, column: 13, scope: !15966)
!15981 = !DILocation(line: 412, column: 13, scope: !15966)
!15982 = !DILocation(line: 413, column: 1, scope: !15966)
!15983 = distinct !DISubprogram(name: "update_cache", scope: !2538, file: !2538, line: 559, type: !9835, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15984)
!15984 = !{!15985, !15986}
!15985 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15983, file: !2538, line: 559, type: !107)
!15986 = !DILocalVariable(name: "thread", scope: !15983, file: !2538, line: 562, type: !2433)
!15987 = !DILocation(line: 0, scope: !15983)
!15988 = !DILocation(line: 239, column: 9, scope: !15989, inlinedAt: !15992)
!15989 = distinct !DISubprogram(name: "runq_best", scope: !2538, file: !2538, line: 237, type: !15990, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!15990 = !DISubroutineType(types: !15991)
!15991 = !{!2433}
!15992 = distinct !DILocation(line: 314, column: 28, scope: !15993, inlinedAt: !15996)
!15993 = distinct !DISubprogram(name: "next_up", scope: !2538, file: !2538, line: 312, type: !15990, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15994)
!15994 = !{!15995}
!15995 = !DILocalVariable(name: "thread", scope: !15993, file: !2538, line: 314, type: !2433)
!15996 = distinct !DILocation(line: 562, column: 28, scope: !15983)
!15997 = !DILocation(line: 0, scope: !15993, inlinedAt: !15996)
!15998 = !DILocation(line: 340, column: 17, scope: !15993, inlinedAt: !15996)
!15999 = !DILocation(line: 340, column: 9, scope: !15993, inlinedAt: !15996)
!16000 = !DILocalVariable(name: "thread", arg: 1, scope: !16001, file: !2538, line: 127, type: !2433)
!16001 = distinct !DISubprogram(name: "should_preempt", scope: !2538, file: !2538, line: 127, type: !16002, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16004)
!16002 = !DISubroutineType(types: !16003)
!16003 = !{!136, !2433, !107}
!16004 = !{!16000, !16005}
!16005 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16001, file: !2538, line: 128, type: !107)
!16006 = !DILocation(line: 0, scope: !16001, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 564, column: 6, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !15983, file: !2538, line: 564, column: 6)
!16009 = !DILocation(line: 133, column: 17, scope: !16010, inlinedAt: !16007)
!16010 = distinct !DILexicalBlock(scope: !16001, file: !2538, line: 133, column: 6)
!16011 = !DILocation(line: 0, scope: !16008)
!16012 = !DILocation(line: 133, column: 6, scope: !16001, inlinedAt: !16007)
!16013 = !DILocation(line: 140, column: 6, scope: !16014, inlinedAt: !16007)
!16014 = distinct !DILexicalBlock(scope: !16001, file: !2538, line: 140, column: 6)
!16015 = !DILocation(line: 140, column: 6, scope: !16001, inlinedAt: !16007)
!16016 = !DILocation(line: 150, column: 9, scope: !16017, inlinedAt: !16007)
!16017 = distinct !DILexicalBlock(scope: !16001, file: !2538, line: 149, column: 6)
!16018 = !DILocation(line: 149, column: 6, scope: !16001, inlinedAt: !16007)
!16019 = !DILocation(line: 157, column: 6, scope: !16020, inlinedAt: !16007)
!16020 = distinct !DILexicalBlock(scope: !16001, file: !2538, line: 157, column: 6)
!16021 = !DILocation(line: 564, column: 6, scope: !15983)
!16022 = !DILocation(line: 566, column: 14, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !16024, file: !2538, line: 566, column: 7)
!16024 = distinct !DILexicalBlock(scope: !16008, file: !2538, line: 564, column: 42)
!16025 = !DILocation(line: 566, column: 7, scope: !16024)
!16026 = !DILocation(line: 567, column: 4, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !16023, file: !2538, line: 566, column: 27)
!16028 = !DILocation(line: 568, column: 3, scope: !16027)
!16029 = !DILocation(line: 585, column: 1, scope: !15983)
!16030 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2538, file: !2538, line: 1144, type: !16031, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16033)
!16031 = !DISubroutineType(types: !16032)
!16032 = !{!2433, !15885}
!16033 = !{!16034, !16035, !16036}
!16034 = !DILocalVariable(name: "pq", arg: 1, scope: !16030, file: !2538, line: 1144, type: !15885)
!16035 = !DILocalVariable(name: "thread", scope: !16030, file: !2538, line: 1146, type: !2433)
!16036 = !DILocalVariable(name: "n", scope: !16030, file: !2538, line: 1147, type: !2534)
!16037 = !DILocation(line: 0, scope: !16030)
!16038 = !DILocation(line: 1147, column: 19, scope: !16030)
!16039 = !DILocation(line: 1152, column: 2, scope: !16030)
!16040 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14207, file: !14207, line: 115, type: !15800, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16041)
!16041 = !{!16042}
!16042 = !DILocalVariable(name: "thread", arg: 1, scope: !16040, file: !14207, line: 115, type: !2433)
!16043 = !DILocation(line: 0, scope: !16040)
!16044 = !DILocation(line: 117, column: 46, scope: !16040)
!16045 = !DILocation(line: 117, column: 10, scope: !16040)
!16046 = !DILocation(line: 117, column: 9, scope: !16040)
!16047 = !DILocation(line: 117, column: 2, scope: !16040)
!16048 = distinct !DISubprogram(name: "is_preempt", scope: !2538, file: !2538, line: 62, type: !15658, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16049)
!16049 = !{!16050}
!16050 = !DILocalVariable(name: "thread", arg: 1, scope: !16048, file: !2538, line: 62, type: !2433)
!16051 = !DILocation(line: 0, scope: !16048)
!16052 = !DILocation(line: 65, column: 22, scope: !16048)
!16053 = !DILocation(line: 65, column: 30, scope: !16048)
!16054 = !DILocation(line: 65, column: 2, scope: !16048)
!16055 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14601, file: !14601, line: 35, type: !16056, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16060)
!16056 = !DISubroutineType(types: !16057)
!16057 = !{!136, !16058}
!16058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16059, size: 32)
!16059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2484)
!16060 = !{!16061}
!16061 = !DILocalVariable(name: "to", arg: 1, scope: !16055, file: !14601, line: 35, type: !16058)
!16062 = !DILocation(line: 0, scope: !16055)
!16063 = !DILocation(line: 37, column: 35, scope: !16055)
!16064 = !DILocation(line: 37, column: 10, scope: !16055)
!16065 = !DILocation(line: 37, column: 9, scope: !16055)
!16066 = !DILocation(line: 37, column: 2, scope: !16055)
!16067 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !151, file: !151, line: 225, type: !16068, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16072)
!16068 = !DISubroutineType(types: !16069)
!16069 = !{!136, !16070}
!16070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16071, size: 32)
!16071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2443)
!16072 = !{!16073}
!16073 = !DILocalVariable(name: "node", arg: 1, scope: !16067, file: !151, line: 225, type: !16070)
!16074 = !DILocation(line: 0, scope: !16067)
!16075 = !DILocation(line: 227, column: 15, scope: !16067)
!16076 = !DILocation(line: 227, column: 20, scope: !16067)
!16077 = !DILocation(line: 227, column: 2, scope: !16067)
!16078 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !151, file: !151, line: 325, type: !15956, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16079)
!16079 = !{!16080, !16081}
!16080 = !DILocalVariable(name: "list", arg: 1, scope: !16078, file: !151, line: 325, type: !15885)
!16081 = !DILocalVariable(name: "node", arg: 2, scope: !16078, file: !151, line: 326, type: !2534)
!16082 = !DILocation(line: 0, scope: !16078)
!16083 = !DILocation(line: 328, column: 24, scope: !16078)
!16084 = !DILocation(line: 328, column: 15, scope: !16078)
!16085 = !DILocation(line: 328, column: 9, scope: !16078)
!16086 = !DILocation(line: 328, column: 45, scope: !16078)
!16087 = !DILocation(line: 328, column: 2, scope: !16078)
!16088 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !16089, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16091)
!16089 = !DISubroutineType(types: !16090)
!16090 = !{!136, !15885}
!16091 = !{!16092}
!16092 = !DILocalVariable(name: "list", arg: 1, scope: !16088, file: !151, line: 266, type: !15885)
!16093 = !DILocation(line: 0, scope: !16088)
!16094 = !DILocation(line: 268, column: 15, scope: !16088)
!16095 = !DILocation(line: 268, column: 20, scope: !16088)
!16096 = !DILocation(line: 268, column: 2, scope: !16088)
!16097 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !151, file: !151, line: 496, type: !16098, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16100)
!16098 = !DISubroutineType(types: !16099)
!16099 = !{null, !2534}
!16100 = !{!16101, !16102, !16103}
!16101 = !DILocalVariable(name: "node", arg: 1, scope: !16097, file: !151, line: 496, type: !2534)
!16102 = !DILocalVariable(name: "prev", scope: !16097, file: !151, line: 498, type: !15944)
!16103 = !DILocalVariable(name: "next", scope: !16097, file: !151, line: 499, type: !15944)
!16104 = !DILocation(line: 0, scope: !16097)
!16105 = !DILocation(line: 498, column: 34, scope: !16097)
!16106 = !DILocation(line: 499, column: 34, scope: !16097)
!16107 = !DILocation(line: 501, column: 8, scope: !16097)
!16108 = !DILocation(line: 501, column: 13, scope: !16097)
!16109 = !DILocation(line: 502, column: 8, scope: !16097)
!16110 = !DILocation(line: 502, column: 13, scope: !16097)
!16111 = !DILocation(line: 503, column: 2, scope: !16097)
!16112 = !DILocation(line: 504, column: 1, scope: !16097)
!16113 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !16098, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16114)
!16114 = !{!16115}
!16115 = !DILocalVariable(name: "node", arg: 1, scope: !16113, file: !151, line: 211, type: !2534)
!16116 = !DILocation(line: 0, scope: !16113)
!16117 = !DILocation(line: 213, column: 8, scope: !16113)
!16118 = !DILocation(line: 213, column: 13, scope: !16113)
!16119 = !DILocation(line: 214, column: 8, scope: !16113)
!16120 = !DILocation(line: 214, column: 13, scope: !16113)
!16121 = !DILocation(line: 215, column: 1, scope: !16113)
!16122 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14207, file: !14207, line: 131, type: !16123, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16125)
!16123 = !DISubroutineType(types: !16124)
!16124 = !{!136, !2433, !108}
!16125 = !{!16126, !16127}
!16126 = !DILocalVariable(name: "thread", arg: 1, scope: !16122, file: !14207, line: 131, type: !2433)
!16127 = !DILocalVariable(name: "state", arg: 2, scope: !16122, file: !14207, line: 131, type: !108)
!16128 = !DILocation(line: 0, scope: !16122)
!16129 = !DILocation(line: 133, column: 23, scope: !16122)
!16130 = !DILocation(line: 133, column: 45, scope: !16122)
!16131 = !DILocation(line: 133, column: 2, scope: !16122)
!16132 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14207, file: !14207, line: 211, type: !15492, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16133)
!16133 = !{!16134, !16135}
!16134 = !DILocalVariable(name: "prio", arg: 1, scope: !16132, file: !14207, line: 211, type: !107)
!16135 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16132, file: !14207, line: 211, type: !107)
!16136 = !DILocation(line: 0, scope: !16132)
!16137 = !DILocation(line: 213, column: 9, scope: !16132)
!16138 = !DILocation(line: 213, column: 2, scope: !16132)
!16139 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14207, file: !14207, line: 83, type: !15800, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16140)
!16140 = !{!16141}
!16141 = !DILocalVariable(name: "thread", arg: 1, scope: !16139, file: !14207, line: 83, type: !2433)
!16142 = !DILocation(line: 0, scope: !16139)
!16143 = !DILocation(line: 89, column: 16, scope: !16139)
!16144 = !DILocation(line: 89, column: 2, scope: !16139)
!16145 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14207, file: !14207, line: 206, type: !15492, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16146)
!16146 = !{!16147, !16148}
!16147 = !DILocalVariable(name: "prio1", arg: 1, scope: !16145, file: !14207, line: 206, type: !107)
!16148 = !DILocalVariable(name: "prio2", arg: 2, scope: !16145, file: !14207, line: 206, type: !107)
!16149 = !DILocation(line: 0, scope: !16145)
!16150 = !DILocation(line: 208, column: 15, scope: !16145)
!16151 = !DILocation(line: 208, column: 2, scope: !16145)
!16152 = distinct !DISubprogram(name: "z_ready_thread", scope: !2538, file: !2538, line: 635, type: !15640, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16153)
!16153 = !{!16154, !16155, !16157}
!16154 = !DILocalVariable(name: "thread", arg: 1, scope: !16152, file: !2538, line: 635, type: !2433)
!16155 = !DILocalVariable(name: "__i", scope: !16156, file: !2538, line: 637, type: !15674)
!16156 = distinct !DILexicalBlock(scope: !16152, file: !2538, line: 637, column: 2)
!16157 = !DILocalVariable(name: "__key", scope: !16156, file: !2538, line: 637, type: !15674)
!16158 = !DILocation(line: 0, scope: !16152)
!16159 = !DILocation(line: 0, scope: !16156)
!16160 = !DILocation(line: 0, scope: !15682, inlinedAt: !16161)
!16161 = distinct !DILocation(line: 637, column: 2, scope: !16156)
!16162 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16163)
!16163 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16161)
!16164 = !DILocation(line: 0, scope: !15691, inlinedAt: !16163)
!16165 = !DILocation(line: 639, column: 4, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16167, file: !2538, line: 638, column: 41)
!16167 = distinct !DILexicalBlock(scope: !16168, file: !2538, line: 638, column: 7)
!16168 = distinct !DILexicalBlock(scope: !16169, file: !2538, line: 637, column: 26)
!16169 = distinct !DILexicalBlock(scope: !16156, file: !2538, line: 637, column: 2)
!16170 = !DILocation(line: 0, scope: !15709, inlinedAt: !16171)
!16171 = distinct !DILocation(line: 637, column: 2, scope: !16169)
!16172 = !DILocation(line: 0, scope: !15717, inlinedAt: !16173)
!16173 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16171)
!16174 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16173)
!16175 = !DILocation(line: 642, column: 1, scope: !16152)
!16176 = distinct !DISubprogram(name: "ready_thread", scope: !2538, file: !2538, line: 617, type: !15640, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16177)
!16177 = !{!16178}
!16178 = !DILocalVariable(name: "thread", arg: 1, scope: !16176, file: !2538, line: 617, type: !2433)
!16179 = !DILocation(line: 0, scope: !16176)
!16180 = !DILocation(line: 626, column: 7, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16176, file: !2538, line: 626, column: 6)
!16182 = !DILocation(line: 626, column: 34, scope: !16181)
!16183 = !DILocation(line: 626, column: 37, scope: !16181)
!16184 = !DILocation(line: 626, column: 6, scope: !16176)
!16185 = !DILocation(line: 0, scope: !15868, inlinedAt: !16186)
!16186 = distinct !DILocation(line: 629, column: 3, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16181, file: !2538, line: 626, column: 64)
!16188 = !DILocation(line: 252, column: 15, scope: !15868, inlinedAt: !16186)
!16189 = !DILocation(line: 252, column: 28, scope: !15868, inlinedAt: !16186)
!16190 = !DILocation(line: 0, scope: !15875, inlinedAt: !16191)
!16191 = distinct !DILocation(line: 254, column: 3, scope: !15879, inlinedAt: !16186)
!16192 = !DILocation(line: 0, scope: !15882, inlinedAt: !16193)
!16193 = distinct !DILocation(line: 229, column: 2, scope: !15875, inlinedAt: !16191)
!16194 = !DILocation(line: 188, column: 2, scope: !15892, inlinedAt: !16193)
!16195 = !DILocation(line: 188, column: 2, scope: !15894, inlinedAt: !16193)
!16196 = !DILocation(line: 0, scope: !15892, inlinedAt: !16193)
!16197 = !DILocation(line: 189, column: 7, scope: !15897, inlinedAt: !16193)
!16198 = !DILocation(line: 189, column: 35, scope: !15897, inlinedAt: !16193)
!16199 = !DILocation(line: 189, column: 7, scope: !15898, inlinedAt: !16193)
!16200 = !DILocation(line: 191, column: 21, scope: !15902, inlinedAt: !16193)
!16201 = !DILocation(line: 190, column: 4, scope: !15902, inlinedAt: !16193)
!16202 = !DILocation(line: 192, column: 4, scope: !15902, inlinedAt: !16193)
!16203 = distinct !{!16203, !16194, !16204}
!16204 = !DILocation(line: 194, column: 2, scope: !15892, inlinedAt: !16193)
!16205 = !DILocation(line: 196, column: 37, scope: !15882, inlinedAt: !16193)
!16206 = !DILocation(line: 196, column: 2, scope: !15882, inlinedAt: !16193)
!16207 = !DILocation(line: 197, column: 1, scope: !15882, inlinedAt: !16193)
!16208 = !DILocation(line: 630, column: 3, scope: !16187)
!16209 = !DILocation(line: 632, column: 2, scope: !16187)
!16210 = !DILocation(line: 633, column: 1, scope: !16176)
!16211 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14207, file: !14207, line: 120, type: !15800, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16212)
!16212 = !{!16213}
!16213 = !DILocalVariable(name: "thread", arg: 1, scope: !16211, file: !14207, line: 120, type: !2433)
!16214 = !DILocation(line: 0, scope: !16211)
!16215 = !DILocation(line: 122, column: 12, scope: !16211)
!16216 = !DILocation(line: 122, column: 62, scope: !16211)
!16217 = !DILocation(line: 123, column: 4, scope: !16211)
!16218 = !DILocation(line: 122, column: 2, scope: !16211)
!16219 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2538, file: !2538, line: 644, type: !15640, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16220)
!16220 = !{!16221, !16222, !16224}
!16221 = !DILocalVariable(name: "thread", arg: 1, scope: !16219, file: !2538, line: 644, type: !2433)
!16222 = !DILocalVariable(name: "__i", scope: !16223, file: !2538, line: 646, type: !15674)
!16223 = distinct !DILexicalBlock(scope: !16219, file: !2538, line: 646, column: 2)
!16224 = !DILocalVariable(name: "__key", scope: !16223, file: !2538, line: 646, type: !15674)
!16225 = !DILocation(line: 0, scope: !16219)
!16226 = !DILocation(line: 0, scope: !16223)
!16227 = !DILocation(line: 0, scope: !15682, inlinedAt: !16228)
!16228 = distinct !DILocation(line: 646, column: 2, scope: !16223)
!16229 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16230)
!16230 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16228)
!16231 = !DILocation(line: 0, scope: !15691, inlinedAt: !16230)
!16232 = !DILocation(line: 647, column: 3, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16234, file: !2538, line: 646, column: 26)
!16234 = distinct !DILexicalBlock(scope: !16223, file: !2538, line: 646, column: 2)
!16235 = !DILocation(line: 0, scope: !15709, inlinedAt: !16236)
!16236 = distinct !DILocation(line: 646, column: 2, scope: !16234)
!16237 = !DILocation(line: 0, scope: !15717, inlinedAt: !16238)
!16238 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16236)
!16239 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16238)
!16240 = !DILocation(line: 649, column: 1, scope: !16219)
!16241 = distinct !DISubprogram(name: "z_sched_start", scope: !2538, file: !2538, line: 651, type: !15640, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16242)
!16242 = !{!16243, !16244}
!16243 = !DILocalVariable(name: "thread", arg: 1, scope: !16241, file: !2538, line: 651, type: !2433)
!16244 = !DILocalVariable(name: "key", scope: !16241, file: !2538, line: 653, type: !15674)
!16245 = !DILocation(line: 0, scope: !16241)
!16246 = !DILocation(line: 0, scope: !15682, inlinedAt: !16247)
!16247 = distinct !DILocation(line: 653, column: 25, scope: !16241)
!16248 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16249)
!16249 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16247)
!16250 = !DILocation(line: 0, scope: !15691, inlinedAt: !16249)
!16251 = !DILocation(line: 655, column: 6, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16241, file: !2538, line: 655, column: 6)
!16253 = !DILocation(line: 655, column: 6, scope: !16241)
!16254 = !DILocation(line: 0, scope: !15709, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 656, column: 3, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16252, file: !2538, line: 655, column: 36)
!16257 = !DILocation(line: 0, scope: !15717, inlinedAt: !16258)
!16258 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16255)
!16259 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16258)
!16260 = !DILocation(line: 657, column: 3, scope: !16256)
!16261 = !DILocation(line: 660, column: 2, scope: !16241)
!16262 = !DILocation(line: 661, column: 2, scope: !16241)
!16263 = !DILocation(line: 662, column: 2, scope: !16241)
!16264 = !DILocation(line: 663, column: 1, scope: !16241)
!16265 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14207, file: !14207, line: 126, type: !15800, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16266)
!16266 = !{!16267}
!16267 = !DILocalVariable(name: "thread", arg: 1, scope: !16265, file: !14207, line: 126, type: !2433)
!16268 = !DILocation(line: 0, scope: !16265)
!16269 = !DILocation(line: 128, column: 23, scope: !16265)
!16270 = !DILocation(line: 128, column: 36, scope: !16265)
!16271 = !DILocation(line: 128, column: 56, scope: !16265)
!16272 = !DILocation(line: 128, column: 2, scope: !16265)
!16273 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14207, file: !14207, line: 155, type: !15640, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16274)
!16274 = !{!16275}
!16275 = !DILocalVariable(name: "thread", arg: 1, scope: !16273, file: !14207, line: 155, type: !2433)
!16276 = !DILocation(line: 0, scope: !16273)
!16277 = !DILocation(line: 157, column: 15, scope: !16273)
!16278 = !DILocation(line: 157, column: 28, scope: !16273)
!16279 = !DILocation(line: 158, column: 1, scope: !16273)
!16280 = distinct !DISubprogram(name: "z_reschedule", scope: !2538, file: !2538, line: 967, type: !15710, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16281)
!16281 = !{!16282, !16283}
!16282 = !DILocalVariable(name: "lock", arg: 1, scope: !16280, file: !2538, line: 967, type: !15685)
!16283 = !DILocalVariable(name: "key", arg: 2, scope: !16280, file: !2538, line: 967, type: !15674)
!16284 = !DILocation(line: 0, scope: !16280)
!16285 = !DILocation(line: 969, column: 6, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16280, file: !2538, line: 969, column: 6)
!16287 = !DILocation(line: 969, column: 23, scope: !16286)
!16288 = !DILocation(line: 969, column: 26, scope: !16286)
!16289 = !DILocation(line: 969, column: 6, scope: !16280)
!16290 = !DILocalVariable(name: "key", arg: 2, scope: !16291, file: !14311, line: 193, type: !15674)
!16291 = distinct !DISubprogram(name: "z_swap", scope: !14311, file: !14311, line: 193, type: !16292, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16294)
!16292 = !DISubroutineType(types: !16293)
!16293 = !{!107, !15685, !15674}
!16294 = !{!16295, !16290}
!16295 = !DILocalVariable(name: "lock", arg: 1, scope: !16291, file: !14311, line: 193, type: !15685)
!16296 = !DILocation(line: 0, scope: !16291, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 970, column: 3, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16286, file: !2538, line: 969, column: 39)
!16299 = !DILocation(line: 196, column: 9, scope: !16291, inlinedAt: !16297)
!16300 = !DILocation(line: 971, column: 2, scope: !16298)
!16301 = !DILocation(line: 0, scope: !15709, inlinedAt: !16302)
!16302 = distinct !DILocation(line: 972, column: 3, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16286, file: !2538, line: 971, column: 9)
!16304 = !DILocation(line: 0, scope: !15717, inlinedAt: !16305)
!16305 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16302)
!16306 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16305)
!16307 = !DILocation(line: 975, column: 1, scope: !16280)
!16308 = distinct !DISubprogram(name: "resched", scope: !2538, file: !2538, line: 940, type: !16309, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16311)
!16309 = !DISubroutineType(types: !16310)
!16310 = !{!136, !108}
!16311 = !{!16312}
!16312 = !DILocalVariable(name: "key", arg: 1, scope: !16308, file: !2538, line: 940, type: !108)
!16313 = !DILocation(line: 0, scope: !16308)
!16314 = !DILocalVariable(name: "key", arg: 1, scope: !16315, file: !7054, line: 112, type: !32)
!16315 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7054, file: !7054, line: 112, type: !16316, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16318)
!16316 = !DISubroutineType(types: !16317)
!16317 = !{!136, !32}
!16318 = !{!16314}
!16319 = !DILocation(line: 0, scope: !16315, inlinedAt: !16320)
!16320 = distinct !DILocation(line: 946, column: 9, scope: !16308)
!16321 = !DILocation(line: 115, column: 13, scope: !16315, inlinedAt: !16320)
!16322 = !DILocation(line: 946, column: 32, scope: !16308)
!16323 = !DILocation(line: 1031, column: 3, scope: !16324, inlinedAt: !16327)
!16324 = distinct !DISubprogram(name: "__get_IPSR", scope: !7375, file: !7375, line: 1027, type: !7456, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16325)
!16325 = !{!16326}
!16326 = !DILocalVariable(name: "result", scope: !16324, file: !7375, line: 1029, type: !108)
!16327 = distinct !DILocation(line: 48, column: 10, scope: !16328, inlinedAt: !16329)
!16328 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8393, file: !8393, line: 46, type: !8394, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!16329 = distinct !DILocation(line: 946, column: 36, scope: !16308)
!16330 = !{i64 3539464}
!16331 = !DILocation(line: 0, scope: !16324, inlinedAt: !16327)
!16332 = !DILocation(line: 48, column: 9, scope: !16328, inlinedAt: !16329)
!16333 = !DILocation(line: 946, column: 2, scope: !16308)
!16334 = distinct !DISubprogram(name: "need_swap", scope: !2538, file: !2538, line: 953, type: !8394, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16335)
!16335 = !{!16336}
!16336 = !DILocalVariable(name: "new_thread", scope: !16334, file: !2538, line: 959, type: !2433)
!16337 = !DILocation(line: 962, column: 31, scope: !16334)
!16338 = !DILocation(line: 0, scope: !16334)
!16339 = !DILocation(line: 963, column: 23, scope: !16334)
!16340 = !DILocation(line: 963, column: 20, scope: !16334)
!16341 = !DILocation(line: 963, column: 2, scope: !16334)
!16342 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14311, file: !14311, line: 181, type: !7385, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16343)
!16343 = !{!16344, !16345}
!16344 = !DILocalVariable(name: "key", arg: 1, scope: !16342, file: !14311, line: 181, type: !32)
!16345 = !DILocalVariable(name: "ret", scope: !16342, file: !14311, line: 183, type: !107)
!16346 = !DILocation(line: 0, scope: !16342)
!16347 = !DILocation(line: 185, column: 8, scope: !16342)
!16348 = !DILocation(line: 186, column: 2, scope: !16342)
!16349 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2538, file: !2538, line: 665, type: !15640, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16350)
!16350 = !{!16351, !16352, !16354}
!16351 = !DILocalVariable(name: "thread", arg: 1, scope: !16349, file: !2538, line: 665, type: !2433)
!16352 = !DILocalVariable(name: "__i", scope: !16353, file: !2538, line: 671, type: !15674)
!16353 = distinct !DILexicalBlock(scope: !16349, file: !2538, line: 671, column: 2)
!16354 = !DILocalVariable(name: "__key", scope: !16353, file: !2538, line: 671, type: !15674)
!16355 = !DILocation(line: 0, scope: !16349)
!16356 = !DILocation(line: 669, column: 8, scope: !16349)
!16357 = !DILocation(line: 0, scope: !16353)
!16358 = !DILocation(line: 0, scope: !15682, inlinedAt: !16359)
!16359 = distinct !DILocation(line: 671, column: 2, scope: !16353)
!16360 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16361)
!16361 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16359)
!16362 = !DILocation(line: 0, scope: !15691, inlinedAt: !16361)
!16363 = !DILocation(line: 672, column: 7, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16365, file: !2538, line: 672, column: 7)
!16365 = distinct !DILexicalBlock(scope: !16366, file: !2538, line: 671, column: 26)
!16366 = distinct !DILexicalBlock(scope: !16353, file: !2538, line: 671, column: 2)
!16367 = !DILocation(line: 672, column: 7, scope: !16365)
!16368 = !DILocation(line: 0, scope: !15851, inlinedAt: !16369)
!16369 = distinct !DILocation(line: 673, column: 4, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16364, file: !2538, line: 672, column: 35)
!16371 = !DILocation(line: 266, column: 15, scope: !15851, inlinedAt: !16369)
!16372 = !DILocation(line: 266, column: 28, scope: !15851, inlinedAt: !16369)
!16373 = !DILocation(line: 0, scope: !15859, inlinedAt: !16374)
!16374 = distinct !DILocation(line: 268, column: 3, scope: !15863, inlinedAt: !16369)
!16375 = !DILocation(line: 234, column: 2, scope: !15859, inlinedAt: !16374)
!16376 = !DILocation(line: 674, column: 3, scope: !16370)
!16377 = !DILocation(line: 675, column: 3, scope: !16365)
!16378 = !DILocation(line: 676, column: 26, scope: !16365)
!16379 = !DILocation(line: 676, column: 23, scope: !16365)
!16380 = !DILocation(line: 676, column: 3, scope: !16365)
!16381 = !DILocation(line: 0, scope: !15709, inlinedAt: !16382)
!16382 = distinct !DILocation(line: 671, column: 2, scope: !16366)
!16383 = !DILocation(line: 0, scope: !15717, inlinedAt: !16384)
!16384 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16382)
!16385 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16384)
!16386 = !DILocation(line: 679, column: 16, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16349, file: !2538, line: 679, column: 6)
!16388 = !DILocation(line: 679, column: 13, scope: !16387)
!16389 = !DILocation(line: 679, column: 6, scope: !16349)
!16390 = !DILocation(line: 680, column: 3, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16387, file: !2538, line: 679, column: 26)
!16392 = !DILocation(line: 681, column: 2, scope: !16391)
!16393 = !DILocation(line: 684, column: 1, scope: !16349)
!16394 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14601, file: !14601, line: 52, type: !15658, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16395)
!16395 = !{!16396}
!16396 = !DILocalVariable(name: "thread", arg: 1, scope: !16394, file: !14601, line: 52, type: !2433)
!16397 = !DILocation(line: 0, scope: !16394)
!16398 = !DILocation(line: 54, column: 39, scope: !16394)
!16399 = !DILocation(line: 54, column: 9, scope: !16394)
!16400 = !DILocation(line: 54, column: 2, scope: !16394)
!16401 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14207, file: !14207, line: 141, type: !15640, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16402)
!16402 = !{!16403}
!16403 = !DILocalVariable(name: "thread", arg: 1, scope: !16401, file: !14207, line: 141, type: !2433)
!16404 = !DILocation(line: 0, scope: !16401)
!16405 = !DILocation(line: 143, column: 15, scope: !16401)
!16406 = !DILocation(line: 143, column: 28, scope: !16401)
!16407 = !DILocation(line: 146, column: 1, scope: !16401)
!16408 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14207, file: !14207, line: 73, type: !337, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!16409 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 75, column: 30, scope: !16408)
!16411 = !DILocation(line: 0, scope: !15691, inlinedAt: !16410)
!16412 = !DILocation(line: 75, column: 9, scope: !16408)
!16413 = !DILocation(line: 76, column: 1, scope: !16408)
!16414 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2538, file: !2538, line: 977, type: !7466, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16415)
!16415 = !{!16416}
!16416 = !DILocalVariable(name: "key", arg: 1, scope: !16414, file: !2538, line: 977, type: !108)
!16417 = !DILocation(line: 0, scope: !16414)
!16418 = !DILocation(line: 979, column: 6, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16414, file: !2538, line: 979, column: 6)
!16420 = !DILocation(line: 979, column: 6, scope: !16414)
!16421 = !DILocation(line: 980, column: 3, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16419, file: !2538, line: 979, column: 20)
!16423 = !DILocation(line: 981, column: 2, scope: !16422)
!16424 = !DILocation(line: 0, scope: !15717, inlinedAt: !16425)
!16425 = distinct !DILocation(line: 982, column: 3, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16419, file: !2538, line: 981, column: 9)
!16427 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16425)
!16428 = !DILocation(line: 985, column: 1, scope: !16414)
!16429 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2538, file: !2538, line: 695, type: !15640, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16430)
!16430 = !{!16431, !16432}
!16431 = !DILocalVariable(name: "thread", arg: 1, scope: !16429, file: !2538, line: 695, type: !2433)
!16432 = !DILocalVariable(name: "key", scope: !16429, file: !2538, line: 699, type: !15674)
!16433 = !DILocation(line: 0, scope: !16429)
!16434 = !DILocation(line: 0, scope: !15682, inlinedAt: !16435)
!16435 = distinct !DILocation(line: 699, column: 25, scope: !16429)
!16436 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16437)
!16437 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16435)
!16438 = !DILocation(line: 0, scope: !15691, inlinedAt: !16437)
!16439 = !DILocation(line: 702, column: 7, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16429, file: !2538, line: 702, column: 6)
!16441 = !DILocation(line: 702, column: 6, scope: !16429)
!16442 = !DILocation(line: 0, scope: !15709, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 703, column: 3, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16440, file: !2538, line: 702, column: 38)
!16445 = !DILocation(line: 0, scope: !15717, inlinedAt: !16446)
!16446 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16443)
!16447 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16446)
!16448 = !DILocation(line: 704, column: 3, scope: !16444)
!16449 = !DILocation(line: 707, column: 2, scope: !16429)
!16450 = !DILocation(line: 708, column: 2, scope: !16429)
!16451 = !DILocation(line: 710, column: 2, scope: !16429)
!16452 = !DILocation(line: 713, column: 1, scope: !16429)
!16453 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14207, file: !14207, line: 96, type: !15800, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16454)
!16454 = !{!16455}
!16455 = !DILocalVariable(name: "thread", arg: 1, scope: !16453, file: !14207, line: 96, type: !2433)
!16456 = !DILocation(line: 0, scope: !16453)
!16457 = !DILocation(line: 98, column: 23, scope: !16453)
!16458 = !DILocation(line: 98, column: 36, scope: !16453)
!16459 = !DILocation(line: 98, column: 57, scope: !16453)
!16460 = !DILocation(line: 98, column: 2, scope: !16453)
!16461 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14207, file: !14207, line: 148, type: !15640, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16462)
!16462 = !{!16463}
!16463 = !DILocalVariable(name: "thread", arg: 1, scope: !16461, file: !14207, line: 148, type: !2433)
!16464 = !DILocation(line: 0, scope: !16461)
!16465 = !DILocation(line: 150, column: 15, scope: !16461)
!16466 = !DILocation(line: 150, column: 28, scope: !16461)
!16467 = !DILocation(line: 153, column: 1, scope: !16461)
!16468 = distinct !DISubprogram(name: "z_pend_thread", scope: !2538, file: !2538, line: 770, type: !16469, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16475)
!16469 = !DISubroutineType(types: !16470)
!16470 = !{null, !2433, !2464, !16471}
!16471 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !16472)
!16472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !16473)
!16473 = !{!16474}
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16472, file: !103, line: 66, baseType: !102, size: 64)
!16475 = !{!16476, !16477, !16478, !16479, !16481}
!16476 = !DILocalVariable(name: "thread", arg: 1, scope: !16468, file: !2538, line: 770, type: !2433)
!16477 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16468, file: !2538, line: 770, type: !2464)
!16478 = !DILocalVariable(name: "timeout", arg: 3, scope: !16468, file: !2538, line: 771, type: !16471)
!16479 = !DILocalVariable(name: "__i", scope: !16480, file: !2538, line: 774, type: !15674)
!16480 = distinct !DILexicalBlock(scope: !16468, file: !2538, line: 774, column: 2)
!16481 = !DILocalVariable(name: "__key", scope: !16480, file: !2538, line: 774, type: !15674)
!16482 = !DILocation(line: 0, scope: !16468)
!16483 = !DILocation(line: 0, scope: !16480)
!16484 = !DILocation(line: 0, scope: !15682, inlinedAt: !16485)
!16485 = distinct !DILocation(line: 774, column: 2, scope: !16480)
!16486 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16485)
!16488 = !DILocation(line: 0, scope: !15691, inlinedAt: !16487)
!16489 = !DILocation(line: 775, column: 3, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16491, file: !2538, line: 774, column: 26)
!16491 = distinct !DILexicalBlock(scope: !16480, file: !2538, line: 774, column: 2)
!16492 = !DILocation(line: 0, scope: !15709, inlinedAt: !16493)
!16493 = distinct !DILocation(line: 774, column: 2, scope: !16491)
!16494 = !DILocation(line: 0, scope: !15717, inlinedAt: !16495)
!16495 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16493)
!16496 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16495)
!16497 = !DILocation(line: 777, column: 1, scope: !16468)
!16498 = distinct !DISubprogram(name: "pend_locked", scope: !2538, file: !2538, line: 760, type: !16469, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16499)
!16499 = !{!16500, !16501, !16502}
!16500 = !DILocalVariable(name: "thread", arg: 1, scope: !16498, file: !2538, line: 760, type: !2433)
!16501 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16498, file: !2538, line: 760, type: !2464)
!16502 = !DILocalVariable(name: "timeout", arg: 3, scope: !16498, file: !2538, line: 761, type: !16471)
!16503 = !DILocation(line: 0, scope: !16498)
!16504 = !DILocation(line: 766, column: 2, scope: !16498)
!16505 = !DILocation(line: 767, column: 2, scope: !16498)
!16506 = !DILocation(line: 768, column: 1, scope: !16498)
!16507 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2538, file: !2538, line: 740, type: !16508, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16510)
!16508 = !DISubroutineType(types: !16509)
!16509 = !{null, !2433, !2464}
!16510 = !{!16511, !16512}
!16511 = !DILocalVariable(name: "thread", arg: 1, scope: !16507, file: !2538, line: 740, type: !2433)
!16512 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16507, file: !2538, line: 740, type: !2464)
!16513 = !DILocation(line: 0, scope: !16507)
!16514 = !DILocation(line: 742, column: 2, scope: !16507)
!16515 = !DILocation(line: 743, column: 2, scope: !16507)
!16516 = !DILocation(line: 747, column: 13, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16507, file: !2538, line: 747, column: 6)
!16518 = !DILocation(line: 747, column: 6, scope: !16507)
!16519 = !DILocation(line: 748, column: 16, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16517, file: !2538, line: 747, column: 22)
!16521 = !DILocation(line: 748, column: 26, scope: !16520)
!16522 = !DILocation(line: 749, column: 28, scope: !16520)
!16523 = !DILocation(line: 0, scope: !15882, inlinedAt: !16524)
!16524 = distinct !DILocation(line: 749, column: 3, scope: !16520)
!16525 = !DILocation(line: 188, column: 2, scope: !15892, inlinedAt: !16524)
!16526 = !DILocation(line: 188, column: 2, scope: !15894, inlinedAt: !16524)
!16527 = !DILocation(line: 0, scope: !15892, inlinedAt: !16524)
!16528 = !DILocation(line: 189, column: 7, scope: !15897, inlinedAt: !16524)
!16529 = !DILocation(line: 189, column: 35, scope: !15897, inlinedAt: !16524)
!16530 = !DILocation(line: 189, column: 7, scope: !15898, inlinedAt: !16524)
!16531 = !DILocation(line: 191, column: 21, scope: !15902, inlinedAt: !16524)
!16532 = !DILocation(line: 190, column: 4, scope: !15902, inlinedAt: !16524)
!16533 = !DILocation(line: 192, column: 4, scope: !15902, inlinedAt: !16524)
!16534 = distinct !{!16534, !16525, !16535}
!16535 = !DILocation(line: 194, column: 2, scope: !15892, inlinedAt: !16524)
!16536 = !DILocation(line: 196, column: 37, scope: !15882, inlinedAt: !16524)
!16537 = !DILocation(line: 196, column: 2, scope: !15882, inlinedAt: !16524)
!16538 = !DILocation(line: 197, column: 1, scope: !15882, inlinedAt: !16524)
!16539 = !DILocation(line: 751, column: 1, scope: !16507)
!16540 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2538, file: !2538, line: 753, type: !16541, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16543)
!16541 = !DISubroutineType(types: !16542)
!16542 = !{null, !2433, !16471}
!16543 = !{!16544, !16545}
!16544 = !DILocalVariable(name: "thread", arg: 1, scope: !16540, file: !2538, line: 753, type: !2433)
!16545 = !DILocalVariable(name: "timeout", arg: 2, scope: !16540, file: !2538, line: 753, type: !16471)
!16546 = !DILocation(line: 0, scope: !16540)
!16547 = !DILocation(line: 755, column: 7, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16540, file: !2538, line: 755, column: 6)
!16549 = !DILocation(line: 755, column: 6, scope: !16540)
!16550 = !DILocation(line: 756, column: 3, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16548, file: !2538, line: 755, column: 41)
!16552 = !DILocation(line: 757, column: 2, scope: !16551)
!16553 = !DILocation(line: 758, column: 1, scope: !16540)
!16554 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14601, file: !14601, line: 47, type: !16541, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16555)
!16555 = !{!16556, !16557}
!16556 = !DILocalVariable(name: "thread", arg: 1, scope: !16554, file: !14601, line: 47, type: !2433)
!16557 = !DILocalVariable(name: "ticks", arg: 2, scope: !16554, file: !14601, line: 47, type: !16471)
!16558 = !DILocation(line: 0, scope: !16554)
!16559 = !DILocation(line: 49, column: 30, scope: !16554)
!16560 = !DILocation(line: 49, column: 2, scope: !16554)
!16561 = !DILocation(line: 50, column: 1, scope: !16554)
!16562 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2538, file: !2538, line: 795, type: !2490, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16563)
!16563 = !{!16564, !16565, !16566, !16568, !16569}
!16564 = !DILocalVariable(name: "timeout", arg: 1, scope: !16562, file: !2538, line: 795, type: !2492)
!16565 = !DILocalVariable(name: "thread", scope: !16562, file: !2538, line: 797, type: !2433)
!16566 = !DILocalVariable(name: "__i", scope: !16567, file: !2538, line: 800, type: !15674)
!16567 = distinct !DILexicalBlock(scope: !16562, file: !2538, line: 800, column: 2)
!16568 = !DILocalVariable(name: "__key", scope: !16567, file: !2538, line: 800, type: !15674)
!16569 = !DILocalVariable(name: "killed", scope: !16570, file: !2538, line: 801, type: !136)
!16570 = distinct !DILexicalBlock(scope: !16571, file: !2538, line: 800, column: 26)
!16571 = distinct !DILexicalBlock(scope: !16567, file: !2538, line: 800, column: 2)
!16572 = !DILocation(line: 0, scope: !16562)
!16573 = !DILocation(line: 797, column: 28, scope: !16562)
!16574 = !DILocation(line: 0, scope: !16567)
!16575 = !DILocation(line: 0, scope: !15682, inlinedAt: !16576)
!16576 = distinct !DILocation(line: 800, column: 2, scope: !16567)
!16577 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16576)
!16579 = !DILocation(line: 0, scope: !15691, inlinedAt: !16578)
!16580 = !DILocation(line: 801, column: 27, scope: !16570)
!16581 = !DILocation(line: 801, column: 32, scope: !16570)
!16582 = !DILocation(line: 801, column: 61, scope: !16570)
!16583 = !DILocation(line: 0, scope: !16570)
!16584 = !DILocation(line: 804, column: 7, scope: !16570)
!16585 = !DILocation(line: 805, column: 21, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16587, file: !2538, line: 805, column: 8)
!16587 = distinct !DILexicalBlock(scope: !16588, file: !2538, line: 804, column: 16)
!16588 = distinct !DILexicalBlock(scope: !16570, file: !2538, line: 804, column: 7)
!16589 = !DILocation(line: 805, column: 31, scope: !16586)
!16590 = !DILocation(line: 805, column: 8, scope: !16587)
!16591 = !DILocation(line: 806, column: 5, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16586, file: !2538, line: 805, column: 40)
!16593 = !DILocation(line: 807, column: 4, scope: !16592)
!16594 = !DILocation(line: 808, column: 4, scope: !16587)
!16595 = !DILocation(line: 809, column: 4, scope: !16587)
!16596 = !DILocation(line: 810, column: 4, scope: !16587)
!16597 = !DILocation(line: 811, column: 3, scope: !16587)
!16598 = !DILocation(line: 0, scope: !15709, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 800, column: 2, scope: !16571)
!16600 = !DILocation(line: 0, scope: !15717, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16599)
!16602 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16601)
!16603 = !DILocation(line: 813, column: 1, scope: !16562)
!16604 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2538, file: !2538, line: 779, type: !15640, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16605)
!16605 = !{!16606}
!16606 = !DILocalVariable(name: "thread", arg: 1, scope: !16604, file: !2538, line: 779, type: !2433)
!16607 = !DILocation(line: 0, scope: !16604)
!16608 = !DILocation(line: 781, column: 2, scope: !16604)
!16609 = !DILocation(line: 782, column: 2, scope: !16604)
!16610 = !DILocation(line: 783, column: 15, scope: !16604)
!16611 = !DILocation(line: 783, column: 25, scope: !16604)
!16612 = !DILocation(line: 784, column: 1, scope: !16604)
!16613 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14207, file: !14207, line: 165, type: !15640, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16614)
!16614 = !{!16615}
!16615 = !DILocalVariable(name: "thread", arg: 1, scope: !16613, file: !14207, line: 165, type: !2433)
!16616 = !DILocation(line: 0, scope: !16613)
!16617 = !DILocation(line: 167, column: 15, scope: !16613)
!16618 = !DILocation(line: 167, column: 28, scope: !16613)
!16619 = !DILocation(line: 168, column: 1, scope: !16613)
!16620 = distinct !DISubprogram(name: "unready_thread", scope: !2538, file: !2538, line: 731, type: !15640, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16621)
!16621 = !{!16622}
!16622 = !DILocalVariable(name: "thread", arg: 1, scope: !16620, file: !2538, line: 731, type: !2433)
!16623 = !DILocation(line: 0, scope: !16620)
!16624 = !DILocation(line: 733, column: 6, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16620, file: !2538, line: 733, column: 6)
!16626 = !DILocation(line: 733, column: 6, scope: !16620)
!16627 = !DILocation(line: 0, scope: !15851, inlinedAt: !16628)
!16628 = distinct !DILocation(line: 734, column: 3, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16625, file: !2538, line: 733, column: 34)
!16630 = !DILocation(line: 266, column: 15, scope: !15851, inlinedAt: !16628)
!16631 = !DILocation(line: 266, column: 28, scope: !15851, inlinedAt: !16628)
!16632 = !DILocation(line: 0, scope: !15859, inlinedAt: !16633)
!16633 = distinct !DILocation(line: 268, column: 3, scope: !15863, inlinedAt: !16628)
!16634 = !DILocation(line: 234, column: 2, scope: !15859, inlinedAt: !16633)
!16635 = !DILocation(line: 735, column: 2, scope: !16629)
!16636 = !DILocation(line: 736, column: 25, scope: !16620)
!16637 = !DILocation(line: 736, column: 22, scope: !16620)
!16638 = !DILocation(line: 736, column: 2, scope: !16620)
!16639 = !DILocation(line: 737, column: 1, scope: !16620)
!16640 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14207, file: !14207, line: 160, type: !15640, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16641)
!16641 = !{!16642}
!16642 = !DILocalVariable(name: "thread", arg: 1, scope: !16640, file: !14207, line: 160, type: !2433)
!16643 = !DILocation(line: 0, scope: !16640)
!16644 = !DILocation(line: 162, column: 15, scope: !16640)
!16645 = !DILocation(line: 162, column: 28, scope: !16640)
!16646 = !DILocation(line: 163, column: 1, scope: !16640)
!16647 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2538, file: !2538, line: 786, type: !15640, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16648)
!16648 = !{!16649, !16650, !16652}
!16649 = !DILocalVariable(name: "thread", arg: 1, scope: !16647, file: !2538, line: 786, type: !2433)
!16650 = !DILocalVariable(name: "__i", scope: !16651, file: !2538, line: 788, type: !15674)
!16651 = distinct !DILexicalBlock(scope: !16647, file: !2538, line: 788, column: 2)
!16652 = !DILocalVariable(name: "__key", scope: !16651, file: !2538, line: 788, type: !15674)
!16653 = !DILocation(line: 0, scope: !16647)
!16654 = !DILocation(line: 0, scope: !16651)
!16655 = !DILocation(line: 0, scope: !15682, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 788, column: 2, scope: !16651)
!16657 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16658)
!16658 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16656)
!16659 = !DILocation(line: 0, scope: !15691, inlinedAt: !16658)
!16660 = !DILocation(line: 789, column: 3, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16662, file: !2538, line: 788, column: 26)
!16662 = distinct !DILexicalBlock(scope: !16651, file: !2538, line: 788, column: 2)
!16663 = !DILocation(line: 0, scope: !15709, inlinedAt: !16664)
!16664 = distinct !DILocation(line: 788, column: 2, scope: !16662)
!16665 = !DILocation(line: 0, scope: !15717, inlinedAt: !16666)
!16666 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16664)
!16667 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16666)
!16668 = !DILocation(line: 791, column: 1, scope: !16647)
!16669 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2538, file: !2538, line: 816, type: !16670, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16672)
!16670 = !DISubroutineType(types: !16671)
!16671 = !{!107, !108, !2464, !16471}
!16672 = !{!16673, !16674, !16675, !16676, !16677, !16679}
!16673 = !DILocalVariable(name: "key", arg: 1, scope: !16669, file: !2538, line: 816, type: !108)
!16674 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16669, file: !2538, line: 816, type: !2464)
!16675 = !DILocalVariable(name: "timeout", arg: 3, scope: !16669, file: !2538, line: 816, type: !16471)
!16676 = !DILocalVariable(name: "ret", scope: !16669, file: !2538, line: 828, type: !107)
!16677 = !DILocalVariable(name: "__i", scope: !16678, file: !2538, line: 829, type: !15674)
!16678 = distinct !DILexicalBlock(scope: !16669, file: !2538, line: 829, column: 2)
!16679 = !DILocalVariable(name: "__key", scope: !16678, file: !2538, line: 829, type: !15674)
!16680 = !DILocation(line: 0, scope: !16669)
!16681 = !DILocation(line: 823, column: 14, scope: !16669)
!16682 = !DILocation(line: 823, column: 2, scope: !16669)
!16683 = !DILocation(line: 826, column: 20, scope: !16669)
!16684 = !DILocation(line: 826, column: 18, scope: !16669)
!16685 = !DILocation(line: 828, column: 12, scope: !16669)
!16686 = !DILocation(line: 0, scope: !16678)
!16687 = !DILocation(line: 0, scope: !15682, inlinedAt: !16688)
!16688 = distinct !DILocation(line: 829, column: 2, scope: !16678)
!16689 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16688)
!16691 = !DILocation(line: 0, scope: !15691, inlinedAt: !16690)
!16692 = !DILocation(line: 830, column: 7, scope: !16693)
!16693 = distinct !DILexicalBlock(scope: !16694, file: !2538, line: 830, column: 7)
!16694 = distinct !DILexicalBlock(scope: !16695, file: !2538, line: 829, column: 26)
!16695 = distinct !DILexicalBlock(scope: !16678, file: !2538, line: 829, column: 2)
!16696 = !DILocation(line: 830, column: 26, scope: !16693)
!16697 = !DILocation(line: 830, column: 23, scope: !16693)
!16698 = !DILocation(line: 830, column: 7, scope: !16694)
!16699 = !DILocation(line: 831, column: 20, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16693, file: !2538, line: 830, column: 36)
!16701 = !DILocation(line: 832, column: 3, scope: !16700)
!16702 = !DILocation(line: 0, scope: !15709, inlinedAt: !16703)
!16703 = distinct !DILocation(line: 829, column: 2, scope: !16695)
!16704 = !DILocation(line: 0, scope: !15717, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16703)
!16706 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16705)
!16707 = !DILocation(line: 834, column: 2, scope: !16669)
!16708 = distinct !DISubprogram(name: "z_pend_curr", scope: !2538, file: !2538, line: 840, type: !16709, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16711)
!16709 = !DISubroutineType(types: !16710)
!16710 = !{!107, !15685, !15674, !2464, !16471}
!16711 = !{!16712, !16713, !16714, !16715}
!16712 = !DILocalVariable(name: "lock", arg: 1, scope: !16708, file: !2538, line: 840, type: !15685)
!16713 = !DILocalVariable(name: "key", arg: 2, scope: !16708, file: !2538, line: 840, type: !15674)
!16714 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16708, file: !2538, line: 841, type: !2464)
!16715 = !DILocalVariable(name: "timeout", arg: 4, scope: !16708, file: !2538, line: 841, type: !16471)
!16716 = !DILocation(line: 0, scope: !16708)
!16717 = !DILocation(line: 844, column: 20, scope: !16708)
!16718 = !DILocation(line: 844, column: 18, scope: !16708)
!16719 = !DILocation(line: 0, scope: !15682, inlinedAt: !16720)
!16720 = distinct !DILocation(line: 856, column: 9, scope: !16708)
!16721 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16722)
!16722 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16720)
!16723 = !DILocation(line: 0, scope: !15691, inlinedAt: !16722)
!16724 = !DILocation(line: 857, column: 14, scope: !16708)
!16725 = !DILocation(line: 857, column: 2, scope: !16708)
!16726 = !DILocation(line: 0, scope: !16291, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 859, column: 9, scope: !16708)
!16728 = !DILocation(line: 196, column: 9, scope: !16291, inlinedAt: !16727)
!16729 = !DILocation(line: 859, column: 2, scope: !16708)
!16730 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2538, file: !2538, line: 862, type: !16731, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16733)
!16731 = !DISubroutineType(types: !16732)
!16732 = !{!2433, !2464}
!16733 = !{!16734, !16735, !16736, !16738}
!16734 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16730, file: !2538, line: 862, type: !2464)
!16735 = !DILocalVariable(name: "thread", scope: !16730, file: !2538, line: 864, type: !2433)
!16736 = !DILocalVariable(name: "__i", scope: !16737, file: !2538, line: 866, type: !15674)
!16737 = distinct !DILexicalBlock(scope: !16730, file: !2538, line: 866, column: 2)
!16738 = !DILocalVariable(name: "__key", scope: !16737, file: !2538, line: 866, type: !15674)
!16739 = !DILocation(line: 0, scope: !16730)
!16740 = !DILocation(line: 0, scope: !16737)
!16741 = !DILocation(line: 0, scope: !15682, inlinedAt: !16742)
!16742 = distinct !DILocation(line: 866, column: 2, scope: !16737)
!16743 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16744)
!16744 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16742)
!16745 = !DILocation(line: 0, scope: !15691, inlinedAt: !16744)
!16746 = !DILocation(line: 867, column: 12, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16748, file: !2538, line: 866, column: 26)
!16748 = distinct !DILexicalBlock(scope: !16737, file: !2538, line: 866, column: 2)
!16749 = !DILocation(line: 869, column: 14, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16747, file: !2538, line: 869, column: 7)
!16751 = !DILocation(line: 869, column: 7, scope: !16747)
!16752 = !DILocation(line: 870, column: 4, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16750, file: !2538, line: 869, column: 23)
!16754 = !DILocation(line: 871, column: 3, scope: !16753)
!16755 = !DILocation(line: 0, scope: !15709, inlinedAt: !16756)
!16756 = distinct !DILocation(line: 866, column: 2, scope: !16748)
!16757 = !DILocation(line: 0, scope: !15717, inlinedAt: !16758)
!16758 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16756)
!16759 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16758)
!16760 = !DILocation(line: 874, column: 2, scope: !16730)
!16761 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2538, file: !2538, line: 877, type: !16731, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16762)
!16762 = !{!16763, !16764, !16765, !16767}
!16763 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16761, file: !2538, line: 877, type: !2464)
!16764 = !DILocalVariable(name: "thread", scope: !16761, file: !2538, line: 879, type: !2433)
!16765 = !DILocalVariable(name: "__i", scope: !16766, file: !2538, line: 881, type: !15674)
!16766 = distinct !DILexicalBlock(scope: !16761, file: !2538, line: 881, column: 2)
!16767 = !DILocalVariable(name: "__key", scope: !16766, file: !2538, line: 881, type: !15674)
!16768 = !DILocation(line: 0, scope: !16761)
!16769 = !DILocation(line: 0, scope: !16766)
!16770 = !DILocation(line: 0, scope: !15682, inlinedAt: !16771)
!16771 = distinct !DILocation(line: 881, column: 2, scope: !16766)
!16772 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16773)
!16773 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16771)
!16774 = !DILocation(line: 0, scope: !15691, inlinedAt: !16773)
!16775 = !DILocation(line: 882, column: 12, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16777, file: !2538, line: 881, column: 26)
!16777 = distinct !DILexicalBlock(scope: !16766, file: !2538, line: 881, column: 2)
!16778 = !DILocation(line: 884, column: 14, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16776, file: !2538, line: 884, column: 7)
!16780 = !DILocation(line: 884, column: 7, scope: !16776)
!16781 = !DILocation(line: 885, column: 4, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16779, file: !2538, line: 884, column: 23)
!16783 = !DILocation(line: 886, column: 10, scope: !16782)
!16784 = !DILocation(line: 887, column: 3, scope: !16782)
!16785 = !DILocation(line: 0, scope: !15709, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 881, column: 2, scope: !16777)
!16787 = !DILocation(line: 0, scope: !15717, inlinedAt: !16788)
!16788 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16786)
!16789 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16788)
!16790 = !DILocation(line: 890, column: 2, scope: !16761)
!16791 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2538, file: !2538, line: 893, type: !15640, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16792)
!16792 = !{!16793}
!16793 = !DILocalVariable(name: "thread", arg: 1, scope: !16791, file: !2538, line: 893, type: !2433)
!16794 = !DILocation(line: 0, scope: !16791)
!16795 = !DILocation(line: 0, scope: !16647, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 895, column: 2, scope: !16791)
!16797 = !DILocation(line: 0, scope: !16651, inlinedAt: !16796)
!16798 = !DILocation(line: 0, scope: !15682, inlinedAt: !16799)
!16799 = distinct !DILocation(line: 788, column: 2, scope: !16651, inlinedAt: !16796)
!16800 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16801)
!16801 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16799)
!16802 = !DILocation(line: 0, scope: !15691, inlinedAt: !16801)
!16803 = !DILocation(line: 789, column: 3, scope: !16661, inlinedAt: !16796)
!16804 = !DILocation(line: 0, scope: !15709, inlinedAt: !16805)
!16805 = distinct !DILocation(line: 788, column: 2, scope: !16662, inlinedAt: !16796)
!16806 = !DILocation(line: 0, scope: !15717, inlinedAt: !16807)
!16807 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16805)
!16808 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16807)
!16809 = !DILocation(line: 896, column: 8, scope: !16791)
!16810 = !DILocation(line: 897, column: 1, scope: !16791)
!16811 = distinct !DISubprogram(name: "z_set_prio", scope: !2538, file: !2538, line: 902, type: !16002, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16812)
!16812 = !{!16813, !16814, !16815, !16816, !16818}
!16813 = !DILocalVariable(name: "thread", arg: 1, scope: !16811, file: !2538, line: 902, type: !2433)
!16814 = !DILocalVariable(name: "prio", arg: 2, scope: !16811, file: !2538, line: 902, type: !107)
!16815 = !DILocalVariable(name: "need_sched", scope: !16811, file: !2538, line: 904, type: !136)
!16816 = !DILocalVariable(name: "__i", scope: !16817, file: !2538, line: 906, type: !15674)
!16817 = distinct !DILexicalBlock(scope: !16811, file: !2538, line: 906, column: 2)
!16818 = !DILocalVariable(name: "__key", scope: !16817, file: !2538, line: 906, type: !15674)
!16819 = !DILocation(line: 0, scope: !16811)
!16820 = !DILocation(line: 0, scope: !16817)
!16821 = !DILocation(line: 0, scope: !15682, inlinedAt: !16822)
!16822 = distinct !DILocation(line: 906, column: 2, scope: !16817)
!16823 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16824)
!16824 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16822)
!16825 = !DILocation(line: 0, scope: !15691, inlinedAt: !16824)
!16826 = !DILocation(line: 907, column: 16, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16828, file: !2538, line: 906, column: 26)
!16828 = distinct !DILexicalBlock(scope: !16817, file: !2538, line: 906, column: 2)
!16829 = !DILocation(line: 909, column: 7, scope: !16827)
!16830 = !DILocation(line: 0, scope: !15851, inlinedAt: !16831)
!16831 = distinct !DILocation(line: 912, column: 5, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16833, file: !2538, line: 911, column: 63)
!16833 = distinct !DILexicalBlock(scope: !16834, file: !2538, line: 911, column: 8)
!16834 = distinct !DILexicalBlock(scope: !16835, file: !2538, line: 909, column: 19)
!16835 = distinct !DILexicalBlock(scope: !16827, file: !2538, line: 909, column: 7)
!16836 = !DILocation(line: 266, column: 28, scope: !15851, inlinedAt: !16831)
!16837 = !DILocation(line: 0, scope: !15859, inlinedAt: !16838)
!16838 = distinct !DILocation(line: 268, column: 3, scope: !15863, inlinedAt: !16831)
!16839 = !DILocation(line: 234, column: 2, scope: !15859, inlinedAt: !16838)
!16840 = !DILocation(line: 913, column: 23, scope: !16832)
!16841 = !DILocation(line: 0, scope: !15868, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 914, column: 5, scope: !16832)
!16843 = !DILocation(line: 252, column: 28, scope: !15868, inlinedAt: !16842)
!16844 = !DILocation(line: 0, scope: !15875, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 254, column: 3, scope: !15879, inlinedAt: !16842)
!16846 = !DILocation(line: 0, scope: !15882, inlinedAt: !16847)
!16847 = distinct !DILocation(line: 229, column: 2, scope: !15875, inlinedAt: !16845)
!16848 = !DILocation(line: 188, column: 2, scope: !15892, inlinedAt: !16847)
!16849 = !DILocation(line: 188, column: 2, scope: !15894, inlinedAt: !16847)
!16850 = !DILocation(line: 0, scope: !15892, inlinedAt: !16847)
!16851 = !DILocation(line: 189, column: 7, scope: !15897, inlinedAt: !16847)
!16852 = !DILocation(line: 189, column: 35, scope: !15897, inlinedAt: !16847)
!16853 = !DILocation(line: 189, column: 7, scope: !15898, inlinedAt: !16847)
!16854 = !DILocation(line: 190, column: 4, scope: !15902, inlinedAt: !16847)
!16855 = !DILocation(line: 192, column: 4, scope: !15902, inlinedAt: !16847)
!16856 = distinct !{!16856, !16848, !16857}
!16857 = !DILocation(line: 194, column: 2, scope: !15892, inlinedAt: !16847)
!16858 = !DILocation(line: 196, column: 2, scope: !15882, inlinedAt: !16847)
!16859 = !DILocation(line: 197, column: 1, scope: !15882, inlinedAt: !16847)
!16860 = !DILocation(line: 918, column: 4, scope: !16834)
!16861 = !DILocation(line: 919, column: 3, scope: !16834)
!16862 = !DILocation(line: 920, column: 22, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16835, file: !2538, line: 919, column: 10)
!16864 = !DILocation(line: 0, scope: !15709, inlinedAt: !16865)
!16865 = distinct !DILocation(line: 906, column: 2, scope: !16828)
!16866 = !DILocation(line: 0, scope: !15717, inlinedAt: !16867)
!16867 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16865)
!16868 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16867)
!16869 = !DILocation(line: 926, column: 2, scope: !16811)
!16870 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2538, file: !2538, line: 929, type: !16871, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16873)
!16871 = !DISubroutineType(types: !16872)
!16872 = !{null, !2433, !107}
!16873 = !{!16874, !16875, !16876}
!16874 = !DILocalVariable(name: "thread", arg: 1, scope: !16870, file: !2538, line: 929, type: !2433)
!16875 = !DILocalVariable(name: "prio", arg: 2, scope: !16870, file: !2538, line: 929, type: !107)
!16876 = !DILocalVariable(name: "need_sched", scope: !16870, file: !2538, line: 931, type: !136)
!16877 = !DILocation(line: 0, scope: !16870)
!16878 = !DILocation(line: 931, column: 20, scope: !16870)
!16879 = !DILocation(line: 935, column: 17, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16870, file: !2538, line: 935, column: 6)
!16881 = !DILocation(line: 935, column: 20, scope: !16880)
!16882 = !DILocation(line: 935, column: 35, scope: !16880)
!16883 = !DILocation(line: 935, column: 48, scope: !16880)
!16884 = !DILocation(line: 935, column: 6, scope: !16870)
!16885 = !DILocation(line: 936, column: 3, scope: !16886)
!16886 = distinct !DILexicalBlock(scope: !16880, file: !2538, line: 935, column: 55)
!16887 = !DILocation(line: 937, column: 2, scope: !16886)
!16888 = !DILocation(line: 938, column: 1, scope: !16870)
!16889 = distinct !DISubprogram(name: "k_sched_lock", scope: !2538, file: !2538, line: 987, type: !337, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16890)
!16890 = !{!16891, !16893}
!16891 = !DILocalVariable(name: "__i", scope: !16892, file: !2538, line: 989, type: !15674)
!16892 = distinct !DILexicalBlock(scope: !16889, file: !2538, line: 989, column: 2)
!16893 = !DILocalVariable(name: "__key", scope: !16892, file: !2538, line: 989, type: !15674)
!16894 = !DILocation(line: 0, scope: !16892)
!16895 = !DILocation(line: 0, scope: !15682, inlinedAt: !16896)
!16896 = distinct !DILocation(line: 989, column: 2, scope: !16892)
!16897 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16898)
!16898 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16896)
!16899 = !DILocation(line: 0, scope: !15691, inlinedAt: !16898)
!16900 = !DILocation(line: 992, column: 3, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16902, file: !2538, line: 989, column: 26)
!16902 = distinct !DILexicalBlock(scope: !16892, file: !2538, line: 989, column: 2)
!16903 = !DILocation(line: 0, scope: !15709, inlinedAt: !16904)
!16904 = distinct !DILocation(line: 989, column: 2, scope: !16902)
!16905 = !DILocation(line: 0, scope: !15717, inlinedAt: !16906)
!16906 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16904)
!16907 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16906)
!16908 = !DILocation(line: 994, column: 1, scope: !16889)
!16909 = distinct !DISubprogram(name: "z_sched_lock", scope: !14207, file: !14207, line: 251, type: !337, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!16910 = !DILocation(line: 256, column: 4, scope: !16909)
!16911 = !DILocation(line: 256, column: 19, scope: !16909)
!16912 = !DILocation(line: 256, column: 2, scope: !16909)
!16913 = !DILocation(line: 258, column: 2, scope: !16914)
!16914 = distinct !DILexicalBlock(scope: !16909, file: !14207, line: 258, column: 2)
!16915 = !{i64 2154867459}
!16916 = !DILocation(line: 259, column: 1, scope: !16909)
!16917 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2538, file: !2538, line: 996, type: !337, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16918)
!16918 = !{!16919, !16921}
!16919 = !DILocalVariable(name: "__i", scope: !16920, file: !2538, line: 998, type: !15674)
!16920 = distinct !DILexicalBlock(scope: !16917, file: !2538, line: 998, column: 2)
!16921 = !DILocalVariable(name: "__key", scope: !16920, file: !2538, line: 998, type: !15674)
!16922 = !DILocation(line: 0, scope: !16920)
!16923 = !DILocation(line: 0, scope: !15682, inlinedAt: !16924)
!16924 = distinct !DILocation(line: 998, column: 2, scope: !16920)
!16925 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !16926)
!16926 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !16924)
!16927 = !DILocation(line: 0, scope: !15691, inlinedAt: !16926)
!16928 = !DILocation(line: 1002, column: 5, scope: !16929)
!16929 = distinct !DILexicalBlock(scope: !16930, file: !2538, line: 998, column: 26)
!16930 = distinct !DILexicalBlock(scope: !16920, file: !2538, line: 998, column: 2)
!16931 = !DILocation(line: 1002, column: 20, scope: !16929)
!16932 = !DILocation(line: 1002, column: 3, scope: !16929)
!16933 = !DILocation(line: 1003, column: 3, scope: !16929)
!16934 = !DILocation(line: 0, scope: !15709, inlinedAt: !16935)
!16935 = distinct !DILocation(line: 998, column: 2, scope: !16930)
!16936 = !DILocation(line: 0, scope: !15717, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !16935)
!16938 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !16937)
!16939 = !DILocation(line: 1011, column: 2, scope: !16917)
!16940 = !DILocation(line: 1012, column: 1, scope: !16917)
!16941 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2538, file: !2538, line: 1014, type: !15990, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!16942 = !DILocation(line: 1028, column: 25, scope: !16941)
!16943 = !DILocation(line: 1028, column: 2, scope: !16941)
!16944 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2538, file: !2538, line: 1155, type: !16945, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16947)
!16945 = !DISubroutineType(types: !16946)
!16946 = !{!136, !2462, !2462}
!16947 = !{!16948, !16949, !16950, !16951, !16952}
!16948 = !DILocalVariable(name: "a", arg: 1, scope: !16944, file: !2538, line: 1155, type: !2462)
!16949 = !DILocalVariable(name: "b", arg: 2, scope: !16944, file: !2538, line: 1155, type: !2462)
!16950 = !DILocalVariable(name: "thread_a", scope: !16944, file: !2538, line: 1157, type: !2433)
!16951 = !DILocalVariable(name: "thread_b", scope: !16944, file: !2538, line: 1157, type: !2433)
!16952 = !DILocalVariable(name: "cmp", scope: !16944, file: !2538, line: 1158, type: !334)
!16953 = !DILocation(line: 0, scope: !16944)
!16954 = !DILocation(line: 1160, column: 13, scope: !16944)
!16955 = !DILocation(line: 1161, column: 13, scope: !16944)
!16956 = !DILocation(line: 1163, column: 8, scope: !16944)
!16957 = !DILocation(line: 1165, column: 10, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16944, file: !2538, line: 1165, column: 6)
!16959 = !DILocation(line: 1165, column: 6, scope: !16944)
!16960 = !DILocation(line: 1167, column: 17, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16958, file: !2538, line: 1167, column: 13)
!16962 = !DILocation(line: 1167, column: 13, scope: !16958)
!16963 = !DILocation(line: 1170, column: 25, scope: !16964)
!16964 = distinct !DILexicalBlock(scope: !16961, file: !2538, line: 1169, column: 9)
!16965 = !DILocation(line: 1170, column: 52, scope: !16964)
!16966 = !DILocation(line: 1170, column: 35, scope: !16964)
!16967 = !DILocation(line: 1170, column: 3, scope: !16964)
!16968 = !DILocation(line: 0, scope: !16958)
!16969 = !DILocation(line: 1173, column: 1, scope: !16944)
!16970 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2538, file: !2538, line: 1175, type: !16971, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !16986)
!16971 = !DISubroutineType(types: !16972)
!16972 = !{null, !16973, !2433}
!16973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16974, size: 32)
!16974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16975, line: 37, size: 128, elements: !16976)
!16975 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16976 = !{!16977, !16985}
!16977 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16974, file: !16975, line: 38, baseType: !16978, size: 96)
!16978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !180, line: 83, size: 96, elements: !16979)
!16979 = !{!16980, !16981, !16984}
!16980 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16978, file: !180, line: 84, baseType: !2462, size: 32)
!16981 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16978, file: !180, line: 85, baseType: !16982, size: 32, offset: 32)
!16982 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !180, line: 81, baseType: !16983)
!16983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16945, size: 32)
!16984 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16978, file: !180, line: 86, baseType: !107, size: 32, offset: 64)
!16985 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16974, file: !16975, line: 39, baseType: !107, size: 32, offset: 96)
!16986 = !{!16987, !16988, !16989, !16990, !16999}
!16987 = !DILocalVariable(name: "pq", arg: 1, scope: !16970, file: !2538, line: 1175, type: !16973)
!16988 = !DILocalVariable(name: "thread", arg: 2, scope: !16970, file: !2538, line: 1175, type: !2433)
!16989 = !DILocalVariable(name: "t", scope: !16970, file: !2538, line: 1177, type: !2433)
!16990 = !DILocalVariable(name: "__f", scope: !16991, file: !2538, line: 1190, type: !16994)
!16991 = distinct !DILexicalBlock(scope: !16992, file: !2538, line: 1190, column: 3)
!16992 = distinct !DILexicalBlock(scope: !16993, file: !2538, line: 1189, column: 27)
!16993 = distinct !DILexicalBlock(scope: !16970, file: !2538, line: 1189, column: 6)
!16994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !180, line: 155, size: 96, elements: !16995)
!16995 = !{!16996, !16997, !16998}
!16996 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16994, file: !180, line: 156, baseType: !2533, size: 32)
!16997 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16994, file: !180, line: 157, baseType: !401, size: 32, offset: 32)
!16998 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16994, file: !180, line: 158, baseType: !334, size: 32, offset: 64)
!16999 = !DILocalVariable(name: "n", scope: !17000, file: !2538, line: 1190, type: !2462)
!17000 = distinct !DILexicalBlock(scope: !17001, file: !2538, line: 1190, column: 3)
!17001 = distinct !DILexicalBlock(scope: !16991, file: !2538, line: 1190, column: 3)
!17002 = !DILocation(line: 0, scope: !16970)
!17003 = !DILocation(line: 1181, column: 31, scope: !16970)
!17004 = !DILocation(line: 1181, column: 45, scope: !16970)
!17005 = !DILocation(line: 1181, column: 15, scope: !16970)
!17006 = !DILocation(line: 1181, column: 25, scope: !16970)
!17007 = !DILocation(line: 1189, column: 11, scope: !16993)
!17008 = !DILocation(line: 1189, column: 7, scope: !16993)
!17009 = !DILocation(line: 1189, column: 6, scope: !16970)
!17010 = !DILocation(line: 1190, column: 3, scope: !16991)
!17011 = !DILocation(line: 1190, column: 3, scope: !17000)
!17012 = !DILocation(line: 0, scope: !17000)
!17013 = !DILocation(line: 1190, column: 3, scope: !17001)
!17014 = !DILocation(line: 1193, column: 2, scope: !16992)
!17015 = !DILocation(line: 1191, column: 42, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !17001, file: !2538, line: 1190, column: 54)
!17017 = !DILocation(line: 1191, column: 12, scope: !17016)
!17018 = !DILocation(line: 1191, column: 22, scope: !17016)
!17019 = distinct !{!17019, !17010, !17020}
!17020 = !DILocation(line: 1192, column: 3, scope: !16991)
!17021 = !DILocation(line: 1195, column: 17, scope: !16970)
!17022 = !DILocation(line: 1195, column: 37, scope: !16970)
!17023 = !DILocation(line: 1195, column: 2, scope: !16970)
!17024 = !DILocation(line: 1196, column: 1, scope: !16970)
!17025 = !DISubprogram(name: "z_rb_foreach_next", scope: !180, file: !180, line: 176, type: !17026, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17026 = !DISubroutineType(types: !17027)
!17027 = !{!2462, !17028, !17029}
!17028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16978, size: 32)
!17029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16994, size: 32)
!17030 = !DISubprogram(name: "rb_insert", scope: !180, file: !180, line: 105, type: !17031, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17031 = !DISubroutineType(types: !17032)
!17032 = !{null, !17028, !2462}
!17033 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2538, file: !2538, line: 1198, type: !16971, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17034)
!17034 = !{!17035, !17036}
!17035 = !DILocalVariable(name: "pq", arg: 1, scope: !17033, file: !2538, line: 1198, type: !16973)
!17036 = !DILocalVariable(name: "thread", arg: 2, scope: !17033, file: !2538, line: 1198, type: !2433)
!17037 = !DILocation(line: 0, scope: !17033)
!17038 = !DILocation(line: 1202, column: 17, scope: !17033)
!17039 = !DILocation(line: 1202, column: 37, scope: !17033)
!17040 = !DILocation(line: 1202, column: 2, scope: !17033)
!17041 = !DILocation(line: 1204, column: 16, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17033, file: !2538, line: 1204, column: 6)
!17043 = !DILocation(line: 1204, column: 7, scope: !17042)
!17044 = !DILocation(line: 1204, column: 6, scope: !17033)
!17045 = !DILocation(line: 1205, column: 7, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !17042, file: !2538, line: 1204, column: 22)
!17047 = !DILocation(line: 1205, column: 22, scope: !17046)
!17048 = !DILocation(line: 1206, column: 2, scope: !17046)
!17049 = !DILocation(line: 1207, column: 1, scope: !17033)
!17050 = !DISubprogram(name: "rb_remove", scope: !180, file: !180, line: 110, type: !17031, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17051 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2538, file: !2538, line: 1209, type: !17052, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17054)
!17052 = !DISubroutineType(types: !17053)
!17053 = !{!2433, !16973}
!17054 = !{!17055, !17056, !17057}
!17055 = !DILocalVariable(name: "pq", arg: 1, scope: !17051, file: !2538, line: 1209, type: !16973)
!17056 = !DILocalVariable(name: "thread", scope: !17051, file: !2538, line: 1211, type: !2433)
!17057 = !DILocalVariable(name: "n", scope: !17051, file: !2538, line: 1212, type: !2462)
!17058 = !DILocation(line: 0, scope: !17051)
!17059 = !DILocation(line: 1212, column: 37, scope: !17051)
!17060 = !DILocation(line: 1212, column: 21, scope: !17051)
!17061 = !DILocation(line: 1217, column: 2, scope: !17051)
!17062 = distinct !DISubprogram(name: "rb_get_min", scope: !180, file: !180, line: 115, type: !17063, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17065)
!17063 = !DISubroutineType(types: !17064)
!17064 = !{!2462, !17028}
!17065 = !{!17066}
!17066 = !DILocalVariable(name: "tree", arg: 1, scope: !17062, file: !180, line: 115, type: !17028)
!17067 = !DILocation(line: 0, scope: !17062)
!17068 = !DILocation(line: 117, column: 9, scope: !17062)
!17069 = !DILocation(line: 117, column: 2, scope: !17062)
!17070 = !DISubprogram(name: "z_rb_get_minmax", scope: !180, file: !180, line: 100, type: !17071, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17071 = !DISubroutineType(types: !17072)
!17072 = !{!2462, !17028, !190}
!17073 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2538, file: !2538, line: 1246, type: !17074, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17084)
!17074 = !DISubroutineType(types: !17075)
!17075 = !{!2433, !17076}
!17076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17077, size: 32)
!17077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16975, line: 53, size: 2080, elements: !17078)
!17078 = !{!17079, !17083}
!17079 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17077, file: !16975, line: 54, baseType: !17080, size: 2048)
!17080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2469, size: 2048, elements: !17081)
!17081 = !{!17082}
!17082 = !DISubrange(count: 32)
!17083 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17077, file: !16975, line: 55, baseType: !32, size: 32, offset: 2048)
!17084 = !{!17085, !17086, !17087, !17088}
!17085 = !DILocalVariable(name: "pq", arg: 1, scope: !17073, file: !2538, line: 1246, type: !17076)
!17086 = !DILocalVariable(name: "thread", scope: !17073, file: !2538, line: 1252, type: !2433)
!17087 = !DILocalVariable(name: "l", scope: !17073, file: !2538, line: 1253, type: !15885)
!17088 = !DILocalVariable(name: "n", scope: !17073, file: !2538, line: 1254, type: !2534)
!17089 = !DILocation(line: 0, scope: !17073)
!17090 = !DILocation(line: 1248, column: 11, scope: !17091)
!17091 = distinct !DILexicalBlock(scope: !17073, file: !2538, line: 1248, column: 6)
!17092 = !DILocation(line: 1248, column: 7, scope: !17091)
!17093 = !DILocation(line: 1248, column: 6, scope: !17073)
!17094 = !DILocation(line: 1253, column: 31, scope: !17073)
!17095 = !DILocation(line: 1253, column: 20, scope: !17073)
!17096 = !DILocation(line: 1254, column: 19, scope: !17073)
!17097 = !DILocation(line: 1260, column: 1, scope: !17073)
!17098 = distinct !DISubprogram(name: "z_unpend_all", scope: !2538, file: !2538, line: 1262, type: !17099, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17101)
!17099 = !DISubroutineType(types: !17100)
!17100 = !{!107, !2464}
!17101 = !{!17102, !17103, !17104}
!17102 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17098, file: !2538, line: 1262, type: !2464)
!17103 = !DILocalVariable(name: "need_sched", scope: !17098, file: !2538, line: 1264, type: !107)
!17104 = !DILocalVariable(name: "thread", scope: !17098, file: !2538, line: 1265, type: !2433)
!17105 = !DILocation(line: 0, scope: !17098)
!17106 = !DILocation(line: 1267, column: 19, scope: !17098)
!17107 = !DILocation(line: 1267, column: 41, scope: !17098)
!17108 = !DILocation(line: 1267, column: 2, scope: !17098)
!17109 = !DILocation(line: 1268, column: 3, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17098, file: !2538, line: 1267, column: 50)
!17111 = !DILocation(line: 1269, column: 3, scope: !17110)
!17112 = distinct !{!17112, !17108, !17113}
!17113 = !DILocation(line: 1271, column: 2, scope: !17098)
!17114 = !DILocation(line: 1273, column: 2, scope: !17098)
!17115 = distinct !DISubprogram(name: "z_waitq_head", scope: !14533, file: !14533, line: 52, type: !16731, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17116)
!17116 = !{!17117}
!17117 = !DILocalVariable(name: "w", arg: 1, scope: !17115, file: !14533, line: 52, type: !2464)
!17118 = !DILocation(line: 0, scope: !17115)
!17119 = !DILocation(line: 54, column: 52, scope: !17115)
!17120 = !DILocation(line: 54, column: 28, scope: !17115)
!17121 = !DILocation(line: 54, column: 9, scope: !17115)
!17122 = !DILocation(line: 54, column: 2, scope: !17115)
!17123 = distinct !DISubprogram(name: "init_ready_q", scope: !2538, file: !2538, line: 1276, type: !17124, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17131)
!17124 = !DISubroutineType(types: !17125)
!17125 = !{null, !17126}
!17126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17127, size: 32)
!17127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !146, line: 83, size: 96, elements: !17128)
!17128 = !{!17129, !17130}
!17129 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17127, file: !146, line: 86, baseType: !2433, size: 32)
!17130 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17127, file: !146, line: 90, baseType: !2469, size: 64, offset: 32)
!17131 = !{!17132}
!17132 = !DILocalVariable(name: "rq", arg: 1, scope: !17123, file: !2538, line: 1276, type: !17126)
!17133 = !DILocation(line: 0, scope: !17123)
!17134 = !DILocation(line: 1289, column: 22, scope: !17123)
!17135 = !DILocation(line: 1289, column: 2, scope: !17123)
!17136 = !DILocation(line: 1291, column: 1, scope: !17123)
!17137 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !17138, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17140)
!17138 = !DISubroutineType(types: !17139)
!17139 = !{null, !15885}
!17140 = !{!17141}
!17141 = !DILocalVariable(name: "list", arg: 1, scope: !17137, file: !151, line: 197, type: !15885)
!17142 = !DILocation(line: 0, scope: !17137)
!17143 = !DILocation(line: 199, column: 8, scope: !17137)
!17144 = !DILocation(line: 199, column: 13, scope: !17137)
!17145 = !DILocation(line: 200, column: 8, scope: !17137)
!17146 = !DILocation(line: 200, column: 13, scope: !17137)
!17147 = !DILocation(line: 201, column: 1, scope: !17137)
!17148 = distinct !DISubprogram(name: "z_sched_init", scope: !2538, file: !2538, line: 1293, type: !337, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!17149 = !DILocation(line: 1302, column: 2, scope: !17148)
!17150 = !DILocation(line: 1306, column: 2, scope: !17148)
!17151 = !DILocation(line: 1309, column: 1, scope: !17148)
!17152 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2538, file: !2538, line: 1311, type: !17153, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17156)
!17153 = !DISubroutineType(types: !17154)
!17154 = !{!107, !17155}
!17155 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !2433)
!17156 = !{!17157}
!17157 = !DILocalVariable(name: "thread", arg: 1, scope: !17152, file: !2538, line: 1311, type: !17155)
!17158 = !DILocation(line: 0, scope: !17152)
!17159 = !DILocation(line: 1313, column: 22, scope: !17152)
!17160 = !DILocation(line: 1313, column: 9, scope: !17152)
!17161 = !DILocation(line: 1313, column: 2, scope: !17152)
!17162 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2538, file: !2538, line: 1325, type: !17163, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17165)
!17163 = !DISubroutineType(types: !17164)
!17164 = !{null, !17155, !107}
!17165 = !{!17166, !17167, !17168}
!17166 = !DILocalVariable(name: "thread", arg: 1, scope: !17162, file: !2538, line: 1325, type: !17155)
!17167 = !DILocalVariable(name: "prio", arg: 2, scope: !17162, file: !2538, line: 1325, type: !107)
!17168 = !DILocalVariable(name: "th", scope: !17162, file: !2538, line: 1334, type: !2433)
!17169 = !DILocation(line: 0, scope: !17162)
!17170 = !DILocation(line: 1336, column: 2, scope: !17162)
!17171 = !DILocation(line: 1337, column: 1, scope: !17162)
!17172 = distinct !DISubprogram(name: "k_can_yield", scope: !2538, file: !2538, line: 1384, type: !8394, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!17173 = !DILocation(line: 1386, column: 11, scope: !17172)
!17174 = !DILocation(line: 1386, column: 29, scope: !17172)
!17175 = !DILocation(line: 1386, column: 32, scope: !17172)
!17176 = !DILocation(line: 1386, column: 46, scope: !17172)
!17177 = !DILocation(line: 1387, column: 28, scope: !17172)
!17178 = !DILocation(line: 1387, column: 4, scope: !17172)
!17179 = !DILocation(line: 1386, column: 2, scope: !17172)
!17180 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !142, file: !142, line: 989, type: !8394, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!17181 = !DILocation(line: 993, column: 10, scope: !17180)
!17182 = !DILocation(line: 993, column: 2, scope: !17180)
!17183 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2538, file: !2538, line: 1390, type: !337, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17184)
!17184 = !{!17185}
!17185 = !DILocalVariable(name: "key", scope: !17183, file: !2538, line: 1396, type: !15674)
!17186 = !DILocation(line: 0, scope: !15682, inlinedAt: !17187)
!17187 = distinct !DILocation(line: 1396, column: 25, scope: !17183)
!17188 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !17189)
!17189 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !17187)
!17190 = !DILocation(line: 0, scope: !15691, inlinedAt: !17189)
!17191 = !DILocation(line: 0, scope: !17183)
!17192 = !DILocation(line: 1400, column: 18, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17194, file: !2538, line: 1399, column: 36)
!17194 = distinct !DILexicalBlock(scope: !17183, file: !2538, line: 1398, column: 6)
!17195 = !DILocation(line: 0, scope: !15851, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 1400, column: 3, scope: !17193)
!17197 = !DILocation(line: 266, column: 15, scope: !15851, inlinedAt: !17196)
!17198 = !DILocation(line: 266, column: 28, scope: !15851, inlinedAt: !17196)
!17199 = !DILocation(line: 0, scope: !15859, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 268, column: 3, scope: !15863, inlinedAt: !17196)
!17201 = !DILocation(line: 234, column: 2, scope: !15859, inlinedAt: !17200)
!17202 = !DILocation(line: 1402, column: 15, scope: !17183)
!17203 = !DILocation(line: 0, scope: !15868, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 1402, column: 2, scope: !17183)
!17205 = !DILocation(line: 252, column: 15, scope: !15868, inlinedAt: !17204)
!17206 = !DILocation(line: 252, column: 28, scope: !15868, inlinedAt: !17204)
!17207 = !DILocation(line: 0, scope: !15875, inlinedAt: !17208)
!17208 = distinct !DILocation(line: 254, column: 3, scope: !15879, inlinedAt: !17204)
!17209 = !DILocation(line: 0, scope: !15882, inlinedAt: !17210)
!17210 = distinct !DILocation(line: 229, column: 2, scope: !15875, inlinedAt: !17208)
!17211 = !DILocation(line: 188, column: 2, scope: !15892, inlinedAt: !17210)
!17212 = !DILocation(line: 188, column: 2, scope: !15894, inlinedAt: !17210)
!17213 = !DILocation(line: 0, scope: !15892, inlinedAt: !17210)
!17214 = !DILocation(line: 189, column: 7, scope: !15897, inlinedAt: !17210)
!17215 = !DILocation(line: 189, column: 35, scope: !15897, inlinedAt: !17210)
!17216 = !DILocation(line: 189, column: 7, scope: !15898, inlinedAt: !17210)
!17217 = !DILocation(line: 191, column: 21, scope: !15902, inlinedAt: !17210)
!17218 = !DILocation(line: 190, column: 4, scope: !15902, inlinedAt: !17210)
!17219 = !DILocation(line: 192, column: 4, scope: !15902, inlinedAt: !17210)
!17220 = distinct !{!17220, !17211, !17221}
!17221 = !DILocation(line: 194, column: 2, scope: !15892, inlinedAt: !17210)
!17222 = !DILocation(line: 196, column: 37, scope: !15882, inlinedAt: !17210)
!17223 = !DILocation(line: 196, column: 2, scope: !15882, inlinedAt: !17210)
!17224 = !DILocation(line: 197, column: 1, scope: !15882, inlinedAt: !17210)
!17225 = !DILocation(line: 1403, column: 2, scope: !17183)
!17226 = !DILocation(line: 0, scope: !16291, inlinedAt: !17227)
!17227 = distinct !DILocation(line: 1404, column: 2, scope: !17183)
!17228 = !DILocation(line: 196, column: 9, scope: !16291, inlinedAt: !17227)
!17229 = !DILocation(line: 1405, column: 1, scope: !17183)
!17230 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2538, file: !2538, line: 1459, type: !17231, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17233)
!17231 = !DISubroutineType(types: !17232)
!17232 = !{!334, !16471}
!17233 = !{!17234, !17235, !17236}
!17234 = !DILocalVariable(name: "timeout", arg: 1, scope: !17230, file: !2538, line: 1459, type: !16471)
!17235 = !DILocalVariable(name: "ticks", scope: !17230, file: !2538, line: 1461, type: !102)
!17236 = !DILocalVariable(name: "ret", scope: !17230, file: !2538, line: 1480, type: !334)
!17237 = !DILocation(line: 0, scope: !17230)
!17238 = !DILocation(line: 1468, column: 6, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17230, file: !2538, line: 1468, column: 6)
!17240 = !DILocation(line: 1468, column: 6, scope: !17230)
!17241 = !DILocation(line: 1469, column: 20, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17239, file: !2538, line: 1468, column: 40)
!17243 = !DILocation(line: 1469, column: 3, scope: !17242)
!17244 = !DILocation(line: 1473, column: 3, scope: !17242)
!17245 = !DILocation(line: 1478, column: 10, scope: !17230)
!17246 = !DILocation(line: 1480, column: 16, scope: !17230)
!17247 = !DILocation(line: 1485, column: 1, scope: !17230)
!17248 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3668, file: !3668, line: 310, type: !17249, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17251)
!17249 = !DISubroutineType(types: !17250)
!17250 = !{null, !17155}
!17251 = !{!17252}
!17252 = !DILocalVariable(name: "thread", arg: 1, scope: !17248, file: !3668, line: 310, type: !17155)
!17253 = !DILocation(line: 0, scope: !17248)
!17254 = !DILocation(line: 319, column: 2, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17248, file: !3668, line: 319, column: 2)
!17256 = !{i64 2154785848}
!17257 = !DILocation(line: 320, column: 2, scope: !17248)
!17258 = !DILocation(line: 321, column: 1, scope: !17248)
!17259 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2538, file: !2538, line: 1415, type: !17260, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17262)
!17260 = !DISubroutineType(types: !17261)
!17261 = !{!334, !102}
!17262 = !{!17263, !17264, !17265, !17266}
!17263 = !DILocalVariable(name: "ticks", arg: 1, scope: !17259, file: !2538, line: 1415, type: !102)
!17264 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17259, file: !2538, line: 1418, type: !108)
!17265 = !DILocalVariable(name: "timeout", scope: !17259, file: !2538, line: 1430, type: !16471)
!17266 = !DILocalVariable(name: "key", scope: !17259, file: !2538, line: 1437, type: !15674)
!17267 = !DILocation(line: 0, scope: !17259)
!17268 = !DILocation(line: 1425, column: 12, scope: !17269)
!17269 = distinct !DILexicalBlock(scope: !17259, file: !2538, line: 1425, column: 6)
!17270 = !DILocation(line: 1425, column: 6, scope: !17259)
!17271 = !DILocation(line: 1426, column: 3, scope: !17272)
!17272 = distinct !DILexicalBlock(scope: !17269, file: !2538, line: 1425, column: 18)
!17273 = !DILocation(line: 1427, column: 3, scope: !17272)
!17274 = !DILocation(line: 1431, column: 24, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17259, file: !2538, line: 1431, column: 6)
!17276 = !DILocation(line: 1431, column: 6, scope: !17259)
!17277 = !DILocation(line: 1432, column: 35, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17275, file: !2538, line: 1431, column: 30)
!17279 = !DILocation(line: 1432, column: 27, scope: !17278)
!17280 = !DILocation(line: 1433, column: 2, scope: !17278)
!17281 = !DILocation(line: 1434, column: 27, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17275, file: !2538, line: 1433, column: 9)
!17283 = !DILocation(line: 0, scope: !17275)
!17284 = !DILocation(line: 0, scope: !15682, inlinedAt: !17285)
!17285 = distinct !DILocation(line: 1437, column: 25, scope: !17259)
!17286 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !17287)
!17287 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !17285)
!17288 = !DILocation(line: 0, scope: !15691, inlinedAt: !17287)
!17289 = !DILocation(line: 1440, column: 20, scope: !17259)
!17290 = !DILocation(line: 1440, column: 18, scope: !17259)
!17291 = !DILocation(line: 1442, column: 2, scope: !17259)
!17292 = !DILocation(line: 1443, column: 23, scope: !17259)
!17293 = !DILocation(line: 1443, column: 2, scope: !17259)
!17294 = !DILocation(line: 1444, column: 29, scope: !17259)
!17295 = !DILocation(line: 1444, column: 2, scope: !17259)
!17296 = !DILocation(line: 0, scope: !16291, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 1446, column: 8, scope: !17259)
!17298 = !DILocation(line: 196, column: 9, scope: !16291, inlinedAt: !17297)
!17299 = !DILocation(line: 1450, column: 10, scope: !17259)
!17300 = !DILocation(line: 1450, column: 45, scope: !17259)
!17301 = !DILocation(line: 1450, column: 43, scope: !17259)
!17302 = !DILocation(line: 1451, column: 6, scope: !17259)
!17303 = !DILocation(line: 1457, column: 1, scope: !17259)
!17304 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3505, file: !3505, line: 1103, type: !3506, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17305)
!17305 = !{!17306}
!17306 = !DILocalVariable(name: "t", arg: 1, scope: !17304, file: !3505, line: 1103, type: !109)
!17307 = !DILocation(line: 0, scope: !17304)
!17308 = !DILocation(line: 0, scope: !15729, inlinedAt: !17309)
!17309 = distinct !DILocation(line: 1106, column: 9, scope: !17304)
!17310 = !DILocation(line: 139, column: 13, scope: !17311, inlinedAt: !17309)
!17311 = distinct !DILexicalBlock(scope: !17312, file: !3505, line: 138, column: 10)
!17312 = distinct !DILexicalBlock(scope: !17313, file: !3505, line: 136, column: 7)
!17313 = distinct !DILexicalBlock(scope: !15750, file: !3505, line: 134, column: 17)
!17314 = !DILocation(line: 1106, column: 2, scope: !17304)
!17315 = distinct !DISubprogram(name: "k_yield", scope: !3668, file: !3668, line: 140, type: !337, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!17316 = !DILocation(line: 148, column: 2, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17315, file: !3668, line: 148, column: 2)
!17318 = !{i64 2154785168}
!17319 = !DILocation(line: 149, column: 2, scope: !17315)
!17320 = !DILocation(line: 150, column: 1, scope: !17315)
!17321 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2538, file: !2538, line: 1495, type: !17322, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17324)
!17322 = !DISubroutineType(types: !17323)
!17323 = !{!334, !107}
!17324 = !{!17325, !17326}
!17325 = !DILocalVariable(name: "us", arg: 1, scope: !17321, file: !2538, line: 1495, type: !107)
!17326 = !DILocalVariable(name: "ticks", scope: !17321, file: !2538, line: 1497, type: !334)
!17327 = !DILocation(line: 0, scope: !17321)
!17328 = !DILocation(line: 1501, column: 31, scope: !17321)
!17329 = !DILocation(line: 1501, column: 10, scope: !17321)
!17330 = !DILocation(line: 1502, column: 23, scope: !17321)
!17331 = !DILocation(line: 1502, column: 10, scope: !17321)
!17332 = !DILocation(line: 1506, column: 31, scope: !17321)
!17333 = !DILocation(line: 1506, column: 9, scope: !17321)
!17334 = !DILocation(line: 1506, column: 2, scope: !17321)
!17335 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3505, file: !3505, line: 571, type: !3506, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17336)
!17336 = !{!17337}
!17337 = !DILocalVariable(name: "t", arg: 1, scope: !17335, file: !3505, line: 571, type: !109)
!17338 = !DILocation(line: 0, scope: !17335)
!17339 = !DILocation(line: 0, scope: !15729, inlinedAt: !17340)
!17340 = distinct !DILocation(line: 574, column: 9, scope: !17335)
!17341 = !DILocation(line: 135, column: 5, scope: !17313, inlinedAt: !17340)
!17342 = !DILocation(line: 139, column: 13, scope: !17311, inlinedAt: !17340)
!17343 = !DILocation(line: 574, column: 2, scope: !17335)
!17344 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3505, file: !3505, line: 1187, type: !3506, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17345)
!17345 = !{!17346}
!17346 = !DILocalVariable(name: "t", arg: 1, scope: !17344, file: !3505, line: 1187, type: !109)
!17347 = !DILocation(line: 0, scope: !17344)
!17348 = !DILocation(line: 0, scope: !15729, inlinedAt: !17349)
!17349 = distinct !DILocation(line: 1190, column: 9, scope: !17344)
!17350 = !DILocation(line: 145, column: 13, scope: !17351, inlinedAt: !17349)
!17351 = distinct !DILexicalBlock(scope: !15747, file: !3505, line: 144, column: 10)
!17352 = !DILocation(line: 1190, column: 2, scope: !17344)
!17353 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2538, file: !2538, line: 1517, type: !17249, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17354)
!17354 = !{!17355}
!17355 = !DILocalVariable(name: "thread", arg: 1, scope: !17353, file: !2538, line: 1517, type: !17155)
!17356 = !DILocation(line: 0, scope: !17353)
!17357 = !DILocation(line: 1521, column: 6, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17353, file: !2538, line: 1521, column: 6)
!17359 = !DILocation(line: 1521, column: 6, scope: !17353)
!17360 = !DILocation(line: 1525, column: 6, scope: !17361)
!17361 = distinct !DILexicalBlock(scope: !17353, file: !2538, line: 1525, column: 6)
!17362 = !DILocation(line: 1525, column: 37, scope: !17361)
!17363 = !DILocation(line: 1525, column: 6, scope: !17353)
!17364 = !DILocation(line: 1527, column: 20, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17366, file: !2538, line: 1527, column: 7)
!17366 = distinct !DILexicalBlock(scope: !17361, file: !2538, line: 1525, column: 42)
!17367 = !DILocation(line: 1527, column: 33, scope: !17365)
!17368 = !DILocation(line: 1527, column: 7, scope: !17366)
!17369 = !DILocation(line: 1532, column: 2, scope: !17353)
!17370 = !DILocation(line: 1533, column: 2, scope: !17353)
!17371 = !DILocation(line: 1031, column: 3, scope: !16324, inlinedAt: !17372)
!17372 = distinct !DILocation(line: 48, column: 10, scope: !16328, inlinedAt: !17373)
!17373 = distinct !DILocation(line: 1537, column: 7, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17353, file: !2538, line: 1537, column: 6)
!17375 = !DILocation(line: 0, scope: !16324, inlinedAt: !17372)
!17376 = !DILocation(line: 48, column: 9, scope: !16328, inlinedAt: !17373)
!17377 = !DILocation(line: 1537, column: 6, scope: !17353)
!17378 = !DILocation(line: 1538, column: 3, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17374, file: !2538, line: 1537, column: 25)
!17380 = !DILocation(line: 1539, column: 2, scope: !17379)
!17381 = !DILocation(line: 1540, column: 1, scope: !17353)
!17382 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14207, file: !14207, line: 101, type: !15800, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17383)
!17383 = !{!17384}
!17384 = !DILocalVariable(name: "thread", arg: 1, scope: !17382, file: !14207, line: 101, type: !2433)
!17385 = !DILocation(line: 0, scope: !17382)
!17386 = !DILocation(line: 103, column: 23, scope: !17382)
!17387 = !DILocation(line: 103, column: 36, scope: !17382)
!17388 = !DILocation(line: 103, column: 55, scope: !17382)
!17389 = !DILocation(line: 103, column: 2, scope: !17382)
!17390 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2538, file: !2538, line: 1567, type: !17391, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17393)
!17391 = !DISubroutineType(types: !17392)
!17392 = !{!17155}
!17393 = !{!17394}
!17394 = !DILocalVariable(name: "ret", scope: !17390, file: !2538, line: 1577, type: !17155)
!17395 = !DILocation(line: 1577, column: 30, scope: !17390)
!17396 = !DILocation(line: 0, scope: !17390)
!17397 = !DILocation(line: 1582, column: 2, scope: !17390)
!17398 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2538, file: !2538, line: 1593, type: !8682, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !256)
!17399 = !DILocation(line: 1031, column: 3, scope: !16324, inlinedAt: !17400)
!17400 = distinct !DILocation(line: 48, column: 10, scope: !16328, inlinedAt: !17401)
!17401 = distinct !DILocation(line: 1595, column: 10, scope: !17398)
!17402 = !DILocation(line: 0, scope: !16324, inlinedAt: !17400)
!17403 = !DILocation(line: 48, column: 9, scope: !16328, inlinedAt: !17401)
!17404 = !DILocation(line: 1595, column: 27, scope: !17398)
!17405 = !DILocation(line: 1595, column: 41, scope: !17398)
!17406 = !DILocation(line: 1595, column: 30, scope: !17398)
!17407 = !DILocation(line: 1595, column: 2, scope: !17398)
!17408 = distinct !DISubprogram(name: "z_thread_abort", scope: !2538, file: !2538, line: 1725, type: !15640, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17409)
!17409 = !{!17410, !17411}
!17410 = !DILocalVariable(name: "thread", arg: 1, scope: !17408, file: !2538, line: 1725, type: !2433)
!17411 = !DILocalVariable(name: "key", scope: !17408, file: !2538, line: 1727, type: !15674)
!17412 = !DILocation(line: 0, scope: !17408)
!17413 = !DILocation(line: 0, scope: !15682, inlinedAt: !17414)
!17414 = distinct !DILocation(line: 1727, column: 25, scope: !17408)
!17415 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !17416)
!17416 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !17414)
!17417 = !DILocation(line: 0, scope: !15691, inlinedAt: !17416)
!17418 = !DILocation(line: 1729, column: 20, scope: !17419)
!17419 = distinct !DILexicalBlock(scope: !17408, file: !2538, line: 1729, column: 6)
!17420 = !DILocation(line: 1729, column: 33, scope: !17419)
!17421 = !DILocation(line: 1729, column: 48, scope: !17419)
!17422 = !DILocation(line: 1729, column: 6, scope: !17408)
!17423 = !DILocation(line: 0, scope: !15709, inlinedAt: !17424)
!17424 = distinct !DILocation(line: 1730, column: 3, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17419, file: !2538, line: 1729, column: 54)
!17426 = !DILocation(line: 0, scope: !15717, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !17424)
!17428 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !17427)
!17429 = !DILocation(line: 1732, column: 3, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17425, file: !2538, line: 1732, column: 3)
!17431 = !{i64 2155521173, i64 2155521189, i64 2155521215, i64 2155521243, i64 2155521263}
!17432 = !DILocation(line: 1733, column: 3, scope: !17425)
!17433 = !DILocation(line: 1736, column: 20, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17408, file: !2538, line: 1736, column: 6)
!17435 = !DILocation(line: 1736, column: 33, scope: !17434)
!17436 = !DILocation(line: 1736, column: 49, scope: !17434)
!17437 = !DILocation(line: 1736, column: 6, scope: !17408)
!17438 = !DILocation(line: 0, scope: !15709, inlinedAt: !17439)
!17439 = distinct !DILocation(line: 1737, column: 3, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !17434, file: !2538, line: 1736, column: 56)
!17441 = !DILocation(line: 0, scope: !15717, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !17439)
!17443 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !17442)
!17444 = !DILocation(line: 1738, column: 3, scope: !17440)
!17445 = !DILocation(line: 1775, column: 2, scope: !17408)
!17446 = !DILocation(line: 1776, column: 16, scope: !17447)
!17447 = distinct !DILexicalBlock(scope: !17408, file: !2538, line: 1776, column: 6)
!17448 = !DILocation(line: 1776, column: 13, scope: !17447)
!17449 = !DILocation(line: 1776, column: 25, scope: !17447)
!17450 = !DILocation(line: 1031, column: 3, scope: !16324, inlinedAt: !17451)
!17451 = distinct !DILocation(line: 48, column: 10, scope: !16328, inlinedAt: !17452)
!17452 = distinct !DILocation(line: 1776, column: 29, scope: !17447)
!17453 = !DILocation(line: 0, scope: !16324, inlinedAt: !17451)
!17454 = !DILocation(line: 48, column: 9, scope: !16328, inlinedAt: !17452)
!17455 = !DILocation(line: 1776, column: 6, scope: !17408)
!17456 = !DILocation(line: 0, scope: !16291, inlinedAt: !17457)
!17457 = distinct !DILocation(line: 1777, column: 3, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17447, file: !2538, line: 1776, column: 47)
!17459 = !DILocation(line: 196, column: 9, scope: !16291, inlinedAt: !17457)
!17460 = !DILocation(line: 1779, column: 2, scope: !17458)
!17461 = !DILocation(line: 0, scope: !15709, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 1780, column: 2, scope: !17408)
!17463 = !DILocation(line: 0, scope: !15717, inlinedAt: !17464)
!17464 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !17462)
!17465 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !17464)
!17466 = !DILocation(line: 1781, column: 1, scope: !17408)
!17467 = distinct !DISubprogram(name: "end_thread", scope: !2538, file: !2538, line: 1690, type: !15640, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17468)
!17468 = !{!17469}
!17469 = !DILocalVariable(name: "thread", arg: 1, scope: !17467, file: !2538, line: 1690, type: !2433)
!17470 = !DILocation(line: 0, scope: !17467)
!17471 = !DILocation(line: 1695, column: 20, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17467, file: !2538, line: 1695, column: 6)
!17473 = !DILocation(line: 1695, column: 33, scope: !17472)
!17474 = !DILocation(line: 1695, column: 49, scope: !17472)
!17475 = !DILocation(line: 1695, column: 6, scope: !17467)
!17476 = !DILocation(line: 1697, column: 29, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17472, file: !2538, line: 1695, column: 56)
!17478 = !DILocation(line: 1698, column: 7, scope: !17479)
!17479 = distinct !DILexicalBlock(scope: !17477, file: !2538, line: 1698, column: 7)
!17480 = !DILocation(line: 1698, column: 7, scope: !17477)
!17481 = !DILocation(line: 0, scope: !15851, inlinedAt: !17482)
!17482 = distinct !DILocation(line: 1699, column: 4, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17479, file: !2538, line: 1698, column: 35)
!17484 = !DILocation(line: 266, column: 28, scope: !15851, inlinedAt: !17482)
!17485 = !DILocation(line: 0, scope: !15859, inlinedAt: !17486)
!17486 = distinct !DILocation(line: 268, column: 3, scope: !15863, inlinedAt: !17482)
!17487 = !DILocation(line: 234, column: 2, scope: !15859, inlinedAt: !17486)
!17488 = !DILocation(line: 1700, column: 3, scope: !17483)
!17489 = !DILocation(line: 1701, column: 20, scope: !17490)
!17490 = distinct !DILexicalBlock(scope: !17477, file: !2538, line: 1701, column: 7)
!17491 = !DILocation(line: 1701, column: 30, scope: !17490)
!17492 = !DILocation(line: 1701, column: 7, scope: !17477)
!17493 = !DILocation(line: 1702, column: 4, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17490, file: !2538, line: 1701, column: 39)
!17495 = !DILocation(line: 1703, column: 3, scope: !17494)
!17496 = !DILocation(line: 1704, column: 9, scope: !17477)
!17497 = !DILocation(line: 1705, column: 23, scope: !17477)
!17498 = !DILocation(line: 1705, column: 3, scope: !17477)
!17499 = !DILocation(line: 1706, column: 3, scope: !17477)
!17500 = !DILocation(line: 1722, column: 2, scope: !17477)
!17501 = !DILocation(line: 1723, column: 1, scope: !17467)
!17502 = distinct !DISubprogram(name: "unpend_all", scope: !2538, file: !2538, line: 1674, type: !17503, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17505)
!17503 = !DISubroutineType(types: !17504)
!17504 = !{null, !2464}
!17505 = !{!17506, !17507}
!17506 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17502, file: !2538, line: 1674, type: !2464)
!17507 = !DILocalVariable(name: "thread", scope: !17502, file: !2538, line: 1676, type: !2433)
!17508 = !DILocation(line: 0, scope: !17502)
!17509 = !DILocation(line: 1678, column: 19, scope: !17502)
!17510 = !DILocation(line: 1678, column: 41, scope: !17502)
!17511 = !DILocation(line: 1678, column: 2, scope: !17502)
!17512 = !DILocation(line: 1679, column: 3, scope: !17513)
!17513 = distinct !DILexicalBlock(scope: !17502, file: !2538, line: 1678, column: 50)
!17514 = !DILocation(line: 1680, column: 9, scope: !17513)
!17515 = !DILocalVariable(name: "thread", arg: 1, scope: !17516, file: !14227, line: 65, type: !2433)
!17516 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14227, file: !14227, line: 65, type: !17517, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17519)
!17517 = !DISubroutineType(types: !17518)
!17518 = !{null, !2433, !32}
!17519 = !{!17515, !17520}
!17520 = !DILocalVariable(name: "value", arg: 2, scope: !17516, file: !14227, line: 65, type: !32)
!17521 = !DILocation(line: 0, scope: !17516, inlinedAt: !17522)
!17522 = distinct !DILocation(line: 1681, column: 3, scope: !17513)
!17523 = !DILocation(line: 67, column: 15, scope: !17516, inlinedAt: !17522)
!17524 = !DILocation(line: 67, column: 33, scope: !17516, inlinedAt: !17522)
!17525 = !DILocation(line: 1682, column: 3, scope: !17513)
!17526 = distinct !{!17526, !17511, !17527}
!17527 = !DILocation(line: 1683, column: 2, scope: !17502)
!17528 = !DILocation(line: 1684, column: 1, scope: !17502)
!17529 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2538, file: !2538, line: 1794, type: !17530, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17532)
!17530 = !DISubroutineType(types: !17531)
!17531 = !{!107, !2433, !16471}
!17532 = !{!17533, !17534, !17535, !17536}
!17533 = !DILocalVariable(name: "thread", arg: 1, scope: !17529, file: !2538, line: 1794, type: !2433)
!17534 = !DILocalVariable(name: "timeout", arg: 2, scope: !17529, file: !2538, line: 1794, type: !16471)
!17535 = !DILocalVariable(name: "key", scope: !17529, file: !2538, line: 1796, type: !15674)
!17536 = !DILocalVariable(name: "ret", scope: !17529, file: !2538, line: 1797, type: !107)
!17537 = !DILocation(line: 0, scope: !17529)
!17538 = !DILocation(line: 0, scope: !15682, inlinedAt: !17539)
!17539 = distinct !DILocation(line: 1796, column: 25, scope: !17529)
!17540 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !17541)
!17541 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !17539)
!17542 = !DILocation(line: 0, scope: !15691, inlinedAt: !17541)
!17543 = !DILocation(line: 1801, column: 20, scope: !17544)
!17544 = distinct !DILexicalBlock(scope: !17529, file: !2538, line: 1801, column: 6)
!17545 = !DILocation(line: 1801, column: 33, scope: !17544)
!17546 = !DILocation(line: 1801, column: 49, scope: !17544)
!17547 = !DILocation(line: 1801, column: 6, scope: !17529)
!17548 = !DILocation(line: 1803, column: 13, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17544, file: !2538, line: 1803, column: 13)
!17550 = !DILocation(line: 1803, column: 13, scope: !17544)
!17551 = !DILocation(line: 1805, column: 24, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17549, file: !2538, line: 1805, column: 13)
!17553 = !DILocation(line: 1805, column: 21, scope: !17552)
!17554 = !DILocation(line: 1805, column: 34, scope: !17552)
!17555 = !DILocation(line: 1806, column: 20, scope: !17552)
!17556 = !DILocation(line: 1806, column: 44, scope: !17552)
!17557 = !DILocation(line: 1806, column: 30, scope: !17552)
!17558 = !DILocation(line: 1805, column: 13, scope: !17549)
!17559 = !DILocation(line: 1810, column: 42, scope: !17560)
!17560 = distinct !DILexicalBlock(scope: !17552, file: !2538, line: 1808, column: 9)
!17561 = !DILocation(line: 1810, column: 3, scope: !17560)
!17562 = !DILocation(line: 1811, column: 22, scope: !17560)
!17563 = !DILocation(line: 1811, column: 3, scope: !17560)
!17564 = !DILocation(line: 0, scope: !16291, inlinedAt: !17565)
!17565 = distinct !DILocation(line: 1814, column: 9, scope: !17560)
!17566 = !DILocation(line: 196, column: 9, scope: !16291, inlinedAt: !17565)
!17567 = !DILocation(line: 1817, column: 3, scope: !17560)
!17568 = !DILocation(line: 0, scope: !17544)
!17569 = !DILocation(line: 0, scope: !15709, inlinedAt: !17570)
!17570 = distinct !DILocation(line: 1822, column: 2, scope: !17529)
!17571 = !DILocation(line: 0, scope: !15717, inlinedAt: !17572)
!17572 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !17570)
!17573 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !17572)
!17574 = !DILocation(line: 1823, column: 2, scope: !17529)
!17575 = !DILocation(line: 1824, column: 1, scope: !17529)
!17576 = distinct !DISubprogram(name: "z_sched_wake", scope: !2538, file: !2538, line: 1882, type: !17577, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17579)
!17577 = !DISubroutineType(types: !17578)
!17578 = !{!136, !2464, !107, !106}
!17579 = !{!17580, !17581, !17582, !17583, !17584, !17585, !17587}
!17580 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17576, file: !2538, line: 1882, type: !2464)
!17581 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17576, file: !2538, line: 1882, type: !107)
!17582 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17576, file: !2538, line: 1882, type: !106)
!17583 = !DILocalVariable(name: "thread", scope: !17576, file: !2538, line: 1884, type: !2433)
!17584 = !DILocalVariable(name: "ret", scope: !17576, file: !2538, line: 1885, type: !136)
!17585 = !DILocalVariable(name: "__i", scope: !17586, file: !2538, line: 1887, type: !15674)
!17586 = distinct !DILexicalBlock(scope: !17576, file: !2538, line: 1887, column: 2)
!17587 = !DILocalVariable(name: "__key", scope: !17586, file: !2538, line: 1887, type: !15674)
!17588 = !DILocation(line: 0, scope: !17576)
!17589 = !DILocation(line: 0, scope: !17586)
!17590 = !DILocation(line: 0, scope: !15682, inlinedAt: !17591)
!17591 = distinct !DILocation(line: 1887, column: 2, scope: !17586)
!17592 = !DILocation(line: 55, column: 2, scope: !15691, inlinedAt: !17593)
!17593 = distinct !DILocation(line: 145, column: 10, scope: !15682, inlinedAt: !17591)
!17594 = !DILocation(line: 0, scope: !15691, inlinedAt: !17593)
!17595 = !DILocation(line: 1888, column: 12, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17597, file: !2538, line: 1887, column: 26)
!17597 = distinct !DILexicalBlock(scope: !17586, file: !2538, line: 1887, column: 2)
!17598 = !DILocation(line: 1890, column: 14, scope: !17599)
!17599 = distinct !DILexicalBlock(scope: !17596, file: !2538, line: 1890, column: 7)
!17600 = !DILocation(line: 1890, column: 7, scope: !17596)
!17601 = !DILocalVariable(name: "thread", arg: 1, scope: !17602, file: !14977, line: 134, type: !2433)
!17602 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14977, file: !14977, line: 134, type: !17603, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17605)
!17603 = !DISubroutineType(types: !17604)
!17604 = !{null, !2433, !32, !106}
!17605 = !{!17601, !17606, !17607}
!17606 = !DILocalVariable(name: "value", arg: 2, scope: !17602, file: !14977, line: 135, type: !32)
!17607 = !DILocalVariable(name: "data", arg: 3, scope: !17602, file: !14977, line: 136, type: !106)
!17608 = !DILocation(line: 0, scope: !17602, inlinedAt: !17609)
!17609 = distinct !DILocation(line: 1891, column: 4, scope: !17610)
!17610 = distinct !DILexicalBlock(scope: !17599, file: !2538, line: 1890, column: 23)
!17611 = !DILocation(line: 0, scope: !17516, inlinedAt: !17612)
!17612 = distinct !DILocation(line: 138, column: 2, scope: !17602, inlinedAt: !17609)
!17613 = !DILocation(line: 67, column: 15, scope: !17516, inlinedAt: !17612)
!17614 = !DILocation(line: 67, column: 33, scope: !17516, inlinedAt: !17612)
!17615 = !DILocation(line: 139, column: 15, scope: !17602, inlinedAt: !17609)
!17616 = !DILocation(line: 139, column: 25, scope: !17602, inlinedAt: !17609)
!17617 = !DILocation(line: 1894, column: 4, scope: !17610)
!17618 = !DILocation(line: 1895, column: 10, scope: !17610)
!17619 = !DILocation(line: 1896, column: 4, scope: !17610)
!17620 = !DILocation(line: 1898, column: 3, scope: !17610)
!17621 = !DILocation(line: 0, scope: !15709, inlinedAt: !17622)
!17622 = distinct !DILocation(line: 1887, column: 2, scope: !17597)
!17623 = !DILocation(line: 0, scope: !15717, inlinedAt: !17624)
!17624 = distinct !DILocation(line: 215, column: 2, scope: !15709, inlinedAt: !17622)
!17625 = !DILocation(line: 95, column: 2, scope: !15717, inlinedAt: !17624)
!17626 = !DILocation(line: 1901, column: 2, scope: !17576)
!17627 = distinct !DISubprogram(name: "z_sched_wait", scope: !2538, file: !2538, line: 1904, type: !17628, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !17631)
!17628 = !DISubroutineType(types: !17629)
!17629 = !{!107, !15685, !15674, !2464, !16471, !17630}
!17630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!17631 = !{!17632, !17633, !17634, !17635, !17636, !17637}
!17632 = !DILocalVariable(name: "lock", arg: 1, scope: !17627, file: !2538, line: 1904, type: !15685)
!17633 = !DILocalVariable(name: "key", arg: 2, scope: !17627, file: !2538, line: 1904, type: !15674)
!17634 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17627, file: !2538, line: 1905, type: !2464)
!17635 = !DILocalVariable(name: "timeout", arg: 4, scope: !17627, file: !2538, line: 1905, type: !16471)
!17636 = !DILocalVariable(name: "data", arg: 5, scope: !17627, file: !2538, line: 1905, type: !17630)
!17637 = !DILocalVariable(name: "ret", scope: !17627, file: !2538, line: 1907, type: !107)
!17638 = !DILocation(line: 0, scope: !17627)
!17639 = !DILocation(line: 1907, column: 12, scope: !17627)
!17640 = !DILocation(line: 1909, column: 11, scope: !17641)
!17641 = distinct !DILexicalBlock(scope: !17627, file: !2538, line: 1909, column: 6)
!17642 = !DILocation(line: 1909, column: 6, scope: !17627)
!17643 = !DILocation(line: 1910, column: 11, scope: !17644)
!17644 = distinct !DILexicalBlock(scope: !17641, file: !2538, line: 1909, column: 20)
!17645 = !DILocation(line: 1910, column: 26, scope: !17644)
!17646 = !DILocation(line: 1910, column: 9, scope: !17644)
!17647 = !DILocation(line: 1911, column: 2, scope: !17644)
!17648 = !DILocation(line: 1912, column: 2, scope: !17627)
!17649 = distinct !DISubprogram(name: "z_data_copy", scope: !17650, file: !17650, line: 22, type: !337, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3316, retainedNodes: !256)
!17650 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17651 = !DILocation(line: 24, column: 2, scope: !17649)
!17652 = !DILocation(line: 27, column: 2, scope: !17649)
!17653 = !DILocation(line: 71, column: 1, scope: !17649)
!17654 = distinct !DISubprogram(name: "z_add_timeout", scope: !2575, file: !2575, line: 88, type: !17655, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17661)
!17655 = !DISubroutineType(types: !17656)
!17656 = !{null, !2548, !2567, !17657}
!17657 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !17658)
!17658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !17659)
!17659 = !{!17660}
!17660 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17658, file: !103, line: 66, baseType: !102, size: 64)
!17661 = !{!17662, !17663, !17664, !17665, !17671, !17672, !17675, !17678}
!17662 = !DILocalVariable(name: "to", arg: 1, scope: !17654, file: !2575, line: 88, type: !2548)
!17663 = !DILocalVariable(name: "fn", arg: 2, scope: !17654, file: !2575, line: 88, type: !2567)
!17664 = !DILocalVariable(name: "timeout", arg: 3, scope: !17654, file: !2575, line: 89, type: !17657)
!17665 = !DILocalVariable(name: "__i", scope: !17666, file: !2575, line: 102, type: !17667)
!17666 = distinct !DILexicalBlock(scope: !17654, file: !2575, line: 102, column: 2)
!17667 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !17668)
!17668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !17669)
!17669 = !{!17670}
!17670 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17668, file: !255, line: 33, baseType: !107, size: 32)
!17671 = !DILocalVariable(name: "__key", scope: !17666, file: !2575, line: 102, type: !17667)
!17672 = !DILocalVariable(name: "t", scope: !17673, file: !2575, line: 103, type: !2548)
!17673 = distinct !DILexicalBlock(scope: !17674, file: !2575, line: 102, column: 24)
!17674 = distinct !DILexicalBlock(scope: !17666, file: !2575, line: 102, column: 2)
!17675 = !DILocalVariable(name: "ticks", scope: !17676, file: !2575, line: 107, type: !102)
!17676 = distinct !DILexicalBlock(scope: !17677, file: !2575, line: 106, column: 39)
!17677 = distinct !DILexicalBlock(scope: !17673, file: !2575, line: 105, column: 7)
!17678 = !DILocalVariable(name: "next_time", scope: !17679, file: !2575, line: 137, type: !334)
!17679 = distinct !DILexicalBlock(scope: !17680, file: !2575, line: 127, column: 22)
!17680 = distinct !DILexicalBlock(scope: !17673, file: !2575, line: 127, column: 7)
!17681 = !DILocation(line: 0, scope: !17654)
!17682 = !DILocation(line: 91, column: 6, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17654, file: !2575, line: 91, column: 6)
!17684 = !DILocation(line: 91, column: 6, scope: !17654)
!17685 = !DILocation(line: 100, column: 6, scope: !17654)
!17686 = !DILocation(line: 100, column: 9, scope: !17654)
!17687 = !DILocation(line: 0, scope: !17666)
!17688 = !DILocalVariable(name: "l", arg: 1, scope: !17689, file: !255, line: 136, type: !17692)
!17689 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !17690, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17693)
!17690 = !DISubroutineType(types: !17691)
!17691 = !{!17667, !17692}
!17692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!17693 = !{!17688, !17694}
!17694 = !DILocalVariable(name: "k", scope: !17689, file: !255, line: 139, type: !17667)
!17695 = !DILocation(line: 0, scope: !17689, inlinedAt: !17696)
!17696 = distinct !DILocation(line: 102, column: 2, scope: !17666)
!17697 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !17702)
!17698 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17699)
!17699 = !{!17700, !17701}
!17700 = !DILocalVariable(name: "key", scope: !17698, file: !7054, line: 44, type: !32)
!17701 = !DILocalVariable(name: "tmp", scope: !17698, file: !7054, line: 53, type: !32)
!17702 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !17696)
!17703 = !{i64 2246135}
!17704 = !DILocation(line: 0, scope: !17698, inlinedAt: !17702)
!17705 = !DILocation(line: 106, column: 33, scope: !17677)
!17706 = !DILocation(line: 105, column: 7, scope: !17673)
!17707 = !DILocation(line: 107, column: 50, scope: !17676)
!17708 = !DILocation(line: 107, column: 48, scope: !17676)
!17709 = !DILocation(line: 0, scope: !17676)
!17710 = !DILocation(line: 109, column: 17, scope: !17676)
!17711 = !DILocation(line: 110, column: 3, scope: !17676)
!17712 = !DILocation(line: 111, column: 31, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !17677, file: !2575, line: 110, column: 10)
!17714 = !DILocation(line: 111, column: 37, scope: !17713)
!17715 = !DILocation(line: 111, column: 35, scope: !17713)
!17716 = !DILocation(line: 0, scope: !17677)
!17717 = !DILocation(line: 109, column: 8, scope: !17676)
!17718 = !DILocation(line: 109, column: 15, scope: !17676)
!17719 = !DILocation(line: 114, column: 12, scope: !17720)
!17720 = distinct !DILexicalBlock(scope: !17673, file: !2575, line: 114, column: 3)
!17721 = !DILocation(line: 0, scope: !17673)
!17722 = !DILocation(line: 114, column: 3, scope: !17720)
!17723 = !DILocation(line: 115, column: 24, scope: !17724)
!17724 = distinct !DILexicalBlock(scope: !17725, file: !2575, line: 115, column: 8)
!17725 = distinct !DILexicalBlock(scope: !17726, file: !2575, line: 114, column: 45)
!17726 = distinct !DILexicalBlock(scope: !17720, file: !2575, line: 114, column: 3)
!17727 = !DILocation(line: 115, column: 11, scope: !17724)
!17728 = !DILocation(line: 115, column: 18, scope: !17724)
!17729 = !DILocation(line: 115, column: 8, scope: !17725)
!17730 = !DILocation(line: 116, column: 15, scope: !17731)
!17731 = distinct !DILexicalBlock(scope: !17724, file: !2575, line: 115, column: 32)
!17732 = !DILocation(line: 117, column: 26, scope: !17731)
!17733 = !DILocation(line: 117, column: 37, scope: !17731)
!17734 = !DILocation(line: 117, column: 5, scope: !17731)
!17735 = !DILocation(line: 123, column: 7, scope: !17673)
!17736 = !DILocation(line: 120, column: 15, scope: !17725)
!17737 = !DILocation(line: 114, column: 36, scope: !17726)
!17738 = distinct !{!17738, !17722, !17739}
!17739 = !DILocation(line: 121, column: 3, scope: !17720)
!17740 = !DILocation(line: 124, column: 41, scope: !17741)
!17741 = distinct !DILexicalBlock(scope: !17742, file: !2575, line: 123, column: 18)
!17742 = distinct !DILexicalBlock(scope: !17673, file: !2575, line: 123, column: 7)
!17743 = !DILocation(line: 124, column: 4, scope: !17741)
!17744 = !DILocation(line: 125, column: 3, scope: !17741)
!17745 = !DILocation(line: 127, column: 13, scope: !17680)
!17746 = !DILocation(line: 127, column: 10, scope: !17680)
!17747 = !DILocation(line: 127, column: 7, scope: !17673)
!17748 = !DILocation(line: 137, column: 24, scope: !17679)
!17749 = !DILocation(line: 0, scope: !17679)
!17750 = !DILocation(line: 139, column: 18, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17679, file: !2575, line: 139, column: 8)
!17752 = !DILocation(line: 139, column: 23, scope: !17751)
!17753 = !DILocation(line: 141, column: 5, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17751, file: !2575, line: 140, column: 48)
!17755 = !DILocation(line: 142, column: 4, scope: !17754)
!17756 = !DILocalVariable(name: "key", arg: 2, scope: !17757, file: !255, line: 190, type: !17667)
!17757 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !17758, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17760)
!17758 = !DISubroutineType(types: !17759)
!17759 = !{null, !17692, !17667}
!17760 = !{!17761, !17756}
!17761 = !DILocalVariable(name: "l", arg: 1, scope: !17757, file: !255, line: 189, type: !17692)
!17762 = !DILocation(line: 0, scope: !17757, inlinedAt: !17763)
!17763 = distinct !DILocation(line: 102, column: 2, scope: !17674)
!17764 = !DILocalVariable(name: "key", arg: 1, scope: !17765, file: !7054, line: 84, type: !32)
!17765 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17766)
!17766 = !{!17764}
!17767 = !DILocation(line: 0, scope: !17765, inlinedAt: !17768)
!17768 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !17763)
!17769 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !17768)
!17770 = !{i64 2246952}
!17771 = !DILocation(line: 148, column: 1, scope: !17654)
!17772 = distinct !DISubprogram(name: "elapsed", scope: !2575, file: !2575, line: 62, type: !17773, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !256)
!17773 = !DISubroutineType(types: !17774)
!17774 = !{!334}
!17775 = !DILocation(line: 64, column: 9, scope: !17772)
!17776 = !DILocation(line: 64, column: 28, scope: !17772)
!17777 = !DILocation(line: 64, column: 35, scope: !17772)
!17778 = !DILocation(line: 64, column: 2, scope: !17772)
!17779 = distinct !DISubprogram(name: "first", scope: !2575, file: !2575, line: 39, type: !17780, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17782)
!17780 = !DISubroutineType(types: !17781)
!17781 = !{!2548}
!17782 = !{!17783}
!17783 = !DILocalVariable(name: "t", scope: !17779, file: !2575, line: 41, type: !17784)
!17784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!17785 = !DILocation(line: 41, column: 19, scope: !17779)
!17786 = !DILocation(line: 0, scope: !17779)
!17787 = !DILocation(line: 43, column: 9, scope: !17779)
!17788 = !DILocation(line: 43, column: 2, scope: !17779)
!17789 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !151, file: !151, line: 443, type: !17790, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17792)
!17790 = !DISubroutineType(types: !17791)
!17791 = !{null, !17784, !17784}
!17792 = !{!17793, !17794, !17795}
!17793 = !DILocalVariable(name: "successor", arg: 1, scope: !17789, file: !151, line: 443, type: !17784)
!17794 = !DILocalVariable(name: "node", arg: 2, scope: !17789, file: !151, line: 443, type: !17784)
!17795 = !DILocalVariable(name: "prev", scope: !17789, file: !151, line: 445, type: !17796)
!17796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17784)
!17797 = !DILocation(line: 0, scope: !17789)
!17798 = !DILocation(line: 445, column: 39, scope: !17789)
!17799 = !DILocation(line: 447, column: 8, scope: !17789)
!17800 = !DILocation(line: 447, column: 13, scope: !17789)
!17801 = !DILocation(line: 448, column: 8, scope: !17789)
!17802 = !DILocation(line: 448, column: 13, scope: !17789)
!17803 = !DILocation(line: 449, column: 8, scope: !17789)
!17804 = !DILocation(line: 449, column: 13, scope: !17789)
!17805 = !DILocation(line: 450, column: 18, scope: !17789)
!17806 = !DILocation(line: 451, column: 1, scope: !17789)
!17807 = distinct !DISubprogram(name: "next", scope: !2575, file: !2575, line: 46, type: !17808, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17810)
!17808 = !DISubroutineType(types: !17809)
!17809 = !{!2548, !2548}
!17810 = !{!17811, !17812}
!17811 = !DILocalVariable(name: "t", arg: 1, scope: !17807, file: !2575, line: 46, type: !2548)
!17812 = !DILocalVariable(name: "n", scope: !17807, file: !2575, line: 48, type: !17784)
!17813 = !DILocation(line: 0, scope: !17807)
!17814 = !DILocation(line: 48, column: 58, scope: !17807)
!17815 = !DILocation(line: 48, column: 19, scope: !17807)
!17816 = !DILocation(line: 50, column: 9, scope: !17807)
!17817 = !DILocation(line: 50, column: 2, scope: !17807)
!17818 = distinct !DISubprogram(name: "sys_dlist_append", scope: !151, file: !151, line: 404, type: !17819, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17822)
!17819 = !DISubroutineType(types: !17820)
!17820 = !{null, !17821, !17784}
!17821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!17822 = !{!17823, !17824, !17825}
!17823 = !DILocalVariable(name: "list", arg: 1, scope: !17818, file: !151, line: 404, type: !17821)
!17824 = !DILocalVariable(name: "node", arg: 2, scope: !17818, file: !151, line: 404, type: !17784)
!17825 = !DILocalVariable(name: "tail", scope: !17818, file: !151, line: 406, type: !17796)
!17826 = !DILocation(line: 0, scope: !17818)
!17827 = !DILocation(line: 406, column: 34, scope: !17818)
!17828 = !DILocation(line: 408, column: 8, scope: !17818)
!17829 = !DILocation(line: 408, column: 13, scope: !17818)
!17830 = !DILocation(line: 409, column: 8, scope: !17818)
!17831 = !DILocation(line: 409, column: 13, scope: !17818)
!17832 = !DILocation(line: 411, column: 8, scope: !17818)
!17833 = !DILocation(line: 411, column: 13, scope: !17818)
!17834 = !DILocation(line: 412, column: 13, scope: !17818)
!17835 = !DILocation(line: 413, column: 1, scope: !17818)
!17836 = distinct !DISubprogram(name: "next_timeout", scope: !2575, file: !2575, line: 67, type: !17773, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17837)
!17837 = !{!17838, !17839, !17840}
!17838 = !DILocalVariable(name: "to", scope: !17836, file: !2575, line: 69, type: !2548)
!17839 = !DILocalVariable(name: "ticks_elapsed", scope: !17836, file: !2575, line: 70, type: !334)
!17840 = !DILocalVariable(name: "ret", scope: !17836, file: !2575, line: 71, type: !334)
!17841 = !DILocation(line: 69, column: 24, scope: !17836)
!17842 = !DILocation(line: 0, scope: !17836)
!17843 = !DILocation(line: 70, column: 26, scope: !17836)
!17844 = !DILocation(line: 73, column: 10, scope: !17845)
!17845 = distinct !DILexicalBlock(scope: !17836, file: !2575, line: 73, column: 6)
!17846 = !DILocation(line: 73, column: 19, scope: !17845)
!17847 = !DILocation(line: 74, column: 21, scope: !17845)
!17848 = !DILocation(line: 74, column: 30, scope: !17845)
!17849 = !DILocation(line: 74, column: 28, scope: !17845)
!17850 = !DILocation(line: 74, column: 45, scope: !17845)
!17851 = !DILocation(line: 73, column: 6, scope: !17836)
!17852 = !DILocation(line: 77, column: 9, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17845, file: !2575, line: 76, column: 9)
!17854 = !DILocation(line: 0, scope: !17845)
!17855 = !DILocation(line: 81, column: 20, scope: !17856)
!17856 = distinct !DILexicalBlock(scope: !17836, file: !2575, line: 81, column: 6)
!17857 = !DILocation(line: 81, column: 6, scope: !17856)
!17858 = !DILocation(line: 81, column: 32, scope: !17856)
!17859 = !DILocation(line: 85, column: 2, scope: !17836)
!17860 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !151, file: !151, line: 341, type: !17861, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17863)
!17861 = !DISubroutineType(types: !17862)
!17862 = !{!17784, !17821, !17784}
!17863 = !{!17864, !17865}
!17864 = !DILocalVariable(name: "list", arg: 1, scope: !17860, file: !151, line: 341, type: !17821)
!17865 = !DILocalVariable(name: "node", arg: 2, scope: !17860, file: !151, line: 342, type: !17784)
!17866 = !DILocation(line: 0, scope: !17860)
!17867 = !DILocation(line: 344, column: 15, scope: !17860)
!17868 = !DILocation(line: 344, column: 9, scope: !17860)
!17869 = !DILocation(line: 344, column: 26, scope: !17860)
!17870 = !DILocation(line: 344, column: 2, scope: !17860)
!17871 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !151, file: !151, line: 325, type: !17861, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17872)
!17872 = !{!17873, !17874}
!17873 = !DILocalVariable(name: "list", arg: 1, scope: !17871, file: !151, line: 325, type: !17821)
!17874 = !DILocalVariable(name: "node", arg: 2, scope: !17871, file: !151, line: 326, type: !17784)
!17875 = !DILocation(line: 0, scope: !17871)
!17876 = !DILocation(line: 328, column: 24, scope: !17871)
!17877 = !DILocation(line: 328, column: 15, scope: !17871)
!17878 = !DILocation(line: 328, column: 9, scope: !17871)
!17879 = !DILocation(line: 328, column: 45, scope: !17871)
!17880 = !DILocation(line: 328, column: 2, scope: !17871)
!17881 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !17882, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17884)
!17882 = !DISubroutineType(types: !17883)
!17883 = !{!17784, !17821}
!17884 = !{!17885}
!17885 = !DILocalVariable(name: "list", arg: 1, scope: !17881, file: !151, line: 294, type: !17821)
!17886 = !DILocation(line: 0, scope: !17881)
!17887 = !DILocation(line: 296, column: 9, scope: !17881)
!17888 = !DILocation(line: 296, column: 2, scope: !17881)
!17889 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !17890, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17892)
!17890 = !DISubroutineType(types: !17891)
!17891 = !{!136, !17821}
!17892 = !{!17893}
!17893 = !DILocalVariable(name: "list", arg: 1, scope: !17889, file: !151, line: 266, type: !17821)
!17894 = !DILocation(line: 0, scope: !17889)
!17895 = !DILocation(line: 268, column: 15, scope: !17889)
!17896 = !DILocation(line: 268, column: 20, scope: !17889)
!17897 = !DILocation(line: 268, column: 2, scope: !17889)
!17898 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2575, file: !2575, line: 150, type: !17899, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17901)
!17899 = !DISubroutineType(types: !17900)
!17900 = !{!107, !2548}
!17901 = !{!17902, !17903, !17904, !17906}
!17902 = !DILocalVariable(name: "to", arg: 1, scope: !17898, file: !2575, line: 150, type: !2548)
!17903 = !DILocalVariable(name: "ret", scope: !17898, file: !2575, line: 152, type: !107)
!17904 = !DILocalVariable(name: "__i", scope: !17905, file: !2575, line: 154, type: !17667)
!17905 = distinct !DILexicalBlock(scope: !17898, file: !2575, line: 154, column: 2)
!17906 = !DILocalVariable(name: "__key", scope: !17905, file: !2575, line: 154, type: !17667)
!17907 = !DILocation(line: 0, scope: !17898)
!17908 = !DILocation(line: 0, scope: !17905)
!17909 = !DILocation(line: 0, scope: !17689, inlinedAt: !17910)
!17910 = distinct !DILocation(line: 154, column: 2, scope: !17905)
!17911 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !17912)
!17912 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !17910)
!17913 = !DILocation(line: 0, scope: !17698, inlinedAt: !17912)
!17914 = !DILocation(line: 155, column: 7, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17916, file: !2575, line: 155, column: 7)
!17916 = distinct !DILexicalBlock(scope: !17917, file: !2575, line: 154, column: 24)
!17917 = distinct !DILexicalBlock(scope: !17905, file: !2575, line: 154, column: 2)
!17918 = !DILocation(line: 155, column: 7, scope: !17916)
!17919 = !DILocation(line: 156, column: 4, scope: !17920)
!17920 = distinct !DILexicalBlock(scope: !17915, file: !2575, line: 155, column: 39)
!17921 = !DILocation(line: 158, column: 3, scope: !17920)
!17922 = !DILocation(line: 0, scope: !17757, inlinedAt: !17923)
!17923 = distinct !DILocation(line: 154, column: 2, scope: !17917)
!17924 = !DILocation(line: 0, scope: !17765, inlinedAt: !17925)
!17925 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !17923)
!17926 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !17925)
!17927 = !DILocation(line: 161, column: 2, scope: !17898)
!17928 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !151, file: !151, line: 225, type: !17929, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17933)
!17929 = !DISubroutineType(types: !17930)
!17930 = !{!136, !17931}
!17931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17932, size: 32)
!17932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2552)
!17933 = !{!17934}
!17934 = !DILocalVariable(name: "node", arg: 1, scope: !17928, file: !151, line: 225, type: !17931)
!17935 = !DILocation(line: 0, scope: !17928)
!17936 = !DILocation(line: 227, column: 15, scope: !17928)
!17937 = !DILocation(line: 227, column: 20, scope: !17928)
!17938 = !DILocation(line: 227, column: 2, scope: !17928)
!17939 = distinct !DISubprogram(name: "remove_timeout", scope: !2575, file: !2575, line: 53, type: !2569, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17940)
!17940 = !{!17941}
!17941 = !DILocalVariable(name: "t", arg: 1, scope: !17939, file: !2575, line: 53, type: !2548)
!17942 = !DILocation(line: 0, scope: !17939)
!17943 = !DILocation(line: 55, column: 6, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17939, file: !2575, line: 55, column: 6)
!17945 = !DILocation(line: 55, column: 14, scope: !17944)
!17946 = !DILocation(line: 55, column: 6, scope: !17939)
!17947 = !DILocation(line: 56, column: 25, scope: !17948)
!17948 = distinct !DILexicalBlock(scope: !17944, file: !2575, line: 55, column: 23)
!17949 = !DILocation(line: 56, column: 12, scope: !17948)
!17950 = !DILocation(line: 56, column: 19, scope: !17948)
!17951 = !DILocation(line: 57, column: 2, scope: !17948)
!17952 = !DILocation(line: 59, column: 23, scope: !17939)
!17953 = !DILocation(line: 59, column: 2, scope: !17939)
!17954 = !DILocation(line: 60, column: 1, scope: !17939)
!17955 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !151, file: !151, line: 496, type: !17956, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17958)
!17956 = !DISubroutineType(types: !17957)
!17957 = !{null, !17784}
!17958 = !{!17959, !17960, !17961}
!17959 = !DILocalVariable(name: "node", arg: 1, scope: !17955, file: !151, line: 496, type: !17784)
!17960 = !DILocalVariable(name: "prev", scope: !17955, file: !151, line: 498, type: !17796)
!17961 = !DILocalVariable(name: "next", scope: !17955, file: !151, line: 499, type: !17796)
!17962 = !DILocation(line: 0, scope: !17955)
!17963 = !DILocation(line: 498, column: 34, scope: !17955)
!17964 = !DILocation(line: 499, column: 34, scope: !17955)
!17965 = !DILocation(line: 501, column: 8, scope: !17955)
!17966 = !DILocation(line: 501, column: 13, scope: !17955)
!17967 = !DILocation(line: 502, column: 8, scope: !17955)
!17968 = !DILocation(line: 502, column: 13, scope: !17955)
!17969 = !DILocation(line: 503, column: 2, scope: !17955)
!17970 = !DILocation(line: 504, column: 1, scope: !17955)
!17971 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !17956, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17972)
!17972 = !{!17973}
!17973 = !DILocalVariable(name: "node", arg: 1, scope: !17971, file: !151, line: 211, type: !17784)
!17974 = !DILocation(line: 0, scope: !17971)
!17975 = !DILocation(line: 213, column: 8, scope: !17971)
!17976 = !DILocation(line: 213, column: 13, scope: !17971)
!17977 = !DILocation(line: 214, column: 8, scope: !17971)
!17978 = !DILocation(line: 214, column: 13, scope: !17971)
!17979 = !DILocation(line: 215, column: 1, scope: !17971)
!17980 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2575, file: !2575, line: 183, type: !17981, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !17985)
!17981 = !DISubroutineType(types: !17982)
!17982 = !{!102, !17983}
!17983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17984, size: 32)
!17984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2549)
!17985 = !{!17986, !17987, !17988, !17990}
!17986 = !DILocalVariable(name: "timeout", arg: 1, scope: !17980, file: !2575, line: 183, type: !17983)
!17987 = !DILocalVariable(name: "ticks", scope: !17980, file: !2575, line: 185, type: !102)
!17988 = !DILocalVariable(name: "__i", scope: !17989, file: !2575, line: 187, type: !17667)
!17989 = distinct !DILexicalBlock(scope: !17980, file: !2575, line: 187, column: 2)
!17990 = !DILocalVariable(name: "__key", scope: !17989, file: !2575, line: 187, type: !17667)
!17991 = !DILocation(line: 0, scope: !17980)
!17992 = !DILocation(line: 0, scope: !17989)
!17993 = !DILocation(line: 0, scope: !17689, inlinedAt: !17994)
!17994 = distinct !DILocation(line: 187, column: 2, scope: !17989)
!17995 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !17996)
!17996 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !17994)
!17997 = !DILocation(line: 0, scope: !17698, inlinedAt: !17996)
!17998 = !DILocation(line: 188, column: 11, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !18000, file: !2575, line: 187, column: 24)
!18000 = distinct !DILexicalBlock(scope: !17989, file: !2575, line: 187, column: 2)
!18001 = !DILocation(line: 0, scope: !17757, inlinedAt: !18002)
!18002 = distinct !DILocation(line: 187, column: 2, scope: !18000)
!18003 = !DILocation(line: 0, scope: !17765, inlinedAt: !18004)
!18004 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !18002)
!18005 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !18004)
!18006 = !DILocation(line: 191, column: 2, scope: !17980)
!18007 = distinct !DISubprogram(name: "timeout_rem", scope: !2575, file: !2575, line: 165, type: !17981, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18008)
!18008 = !{!18009, !18010, !18011}
!18009 = !DILocalVariable(name: "timeout", arg: 1, scope: !18007, file: !2575, line: 165, type: !17983)
!18010 = !DILocalVariable(name: "ticks", scope: !18007, file: !2575, line: 167, type: !102)
!18011 = !DILocalVariable(name: "t", scope: !18012, file: !2575, line: 173, type: !2548)
!18012 = distinct !DILexicalBlock(scope: !18007, file: !2575, line: 173, column: 2)
!18013 = !DILocation(line: 0, scope: !18007)
!18014 = !DILocation(line: 169, column: 6, scope: !18015)
!18015 = distinct !DILexicalBlock(scope: !18007, file: !2575, line: 169, column: 6)
!18016 = !DILocation(line: 169, column: 6, scope: !18007)
!18017 = !DILocation(line: 173, column: 28, scope: !18012)
!18018 = !DILocation(line: 0, scope: !18012)
!18019 = !DILocation(line: 173, column: 39, scope: !18020)
!18020 = distinct !DILexicalBlock(scope: !18012, file: !2575, line: 173, column: 2)
!18021 = !DILocation(line: 173, column: 2, scope: !18012)
!18022 = !DILocation(line: 174, column: 15, scope: !18023)
!18023 = distinct !DILexicalBlock(scope: !18020, file: !2575, line: 173, column: 61)
!18024 = !DILocation(line: 174, column: 9, scope: !18023)
!18025 = !DILocation(line: 175, column: 15, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !18023, file: !2575, line: 175, column: 7)
!18027 = !DILocation(line: 175, column: 7, scope: !18023)
!18028 = !DILocation(line: 173, column: 52, scope: !18020)
!18029 = distinct !{!18029, !18021, !18030}
!18030 = !DILocation(line: 178, column: 2, scope: !18012)
!18031 = !DILocation(line: 180, column: 17, scope: !18007)
!18032 = !DILocation(line: 180, column: 15, scope: !18007)
!18033 = !DILocation(line: 180, column: 2, scope: !18007)
!18034 = !DILocation(line: 181, column: 1, scope: !18007)
!18035 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14601, file: !14601, line: 35, type: !18036, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18038)
!18036 = !DISubroutineType(types: !18037)
!18037 = !{!136, !17983}
!18038 = !{!18039}
!18039 = !DILocalVariable(name: "to", arg: 1, scope: !18035, file: !14601, line: 35, type: !17983)
!18040 = !DILocation(line: 0, scope: !18035)
!18041 = !DILocation(line: 37, column: 35, scope: !18035)
!18042 = !DILocation(line: 37, column: 10, scope: !18035)
!18043 = !DILocation(line: 37, column: 9, scope: !18035)
!18044 = !DILocation(line: 37, column: 2, scope: !18035)
!18045 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2575, file: !2575, line: 194, type: !17981, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18046)
!18046 = !{!18047, !18048, !18049, !18051}
!18047 = !DILocalVariable(name: "timeout", arg: 1, scope: !18045, file: !2575, line: 194, type: !17983)
!18048 = !DILocalVariable(name: "ticks", scope: !18045, file: !2575, line: 196, type: !102)
!18049 = !DILocalVariable(name: "__i", scope: !18050, file: !2575, line: 198, type: !17667)
!18050 = distinct !DILexicalBlock(scope: !18045, file: !2575, line: 198, column: 2)
!18051 = !DILocalVariable(name: "__key", scope: !18050, file: !2575, line: 198, type: !17667)
!18052 = !DILocation(line: 0, scope: !18045)
!18053 = !DILocation(line: 0, scope: !18050)
!18054 = !DILocation(line: 0, scope: !17689, inlinedAt: !18055)
!18055 = distinct !DILocation(line: 198, column: 2, scope: !18050)
!18056 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !18057)
!18057 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !18055)
!18058 = !DILocation(line: 0, scope: !17698, inlinedAt: !18057)
!18059 = !DILocation(line: 199, column: 11, scope: !18060)
!18060 = distinct !DILexicalBlock(scope: !18061, file: !2575, line: 198, column: 24)
!18061 = distinct !DILexicalBlock(scope: !18050, file: !2575, line: 198, column: 2)
!18062 = !DILocation(line: 199, column: 23, scope: !18060)
!18063 = !DILocation(line: 0, scope: !17757, inlinedAt: !18064)
!18064 = distinct !DILocation(line: 198, column: 2, scope: !18061)
!18065 = !DILocation(line: 0, scope: !17765, inlinedAt: !18066)
!18066 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !18064)
!18067 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !18066)
!18068 = !DILocation(line: 199, column: 21, scope: !18060)
!18069 = !DILocation(line: 202, column: 2, scope: !18045)
!18070 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2575, file: !2575, line: 205, type: !17773, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18071)
!18071 = !{!18072, !18073, !18075}
!18072 = !DILocalVariable(name: "ret", scope: !18070, file: !2575, line: 207, type: !334)
!18073 = !DILocalVariable(name: "__i", scope: !18074, file: !2575, line: 209, type: !17667)
!18074 = distinct !DILexicalBlock(scope: !18070, file: !2575, line: 209, column: 2)
!18075 = !DILocalVariable(name: "__key", scope: !18074, file: !2575, line: 209, type: !17667)
!18076 = !DILocation(line: 0, scope: !18070)
!18077 = !DILocation(line: 0, scope: !18074)
!18078 = !DILocation(line: 0, scope: !17689, inlinedAt: !18079)
!18079 = distinct !DILocation(line: 209, column: 2, scope: !18074)
!18080 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !18081)
!18081 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !18079)
!18082 = !DILocation(line: 0, scope: !17698, inlinedAt: !18081)
!18083 = !DILocation(line: 210, column: 9, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18085, file: !2575, line: 209, column: 24)
!18085 = distinct !DILexicalBlock(scope: !18074, file: !2575, line: 209, column: 2)
!18086 = !DILocation(line: 0, scope: !17757, inlinedAt: !18087)
!18087 = distinct !DILocation(line: 209, column: 2, scope: !18085)
!18088 = !DILocation(line: 0, scope: !17765, inlinedAt: !18089)
!18089 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !18087)
!18090 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !18089)
!18091 = !DILocation(line: 212, column: 2, scope: !18070)
!18092 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2575, file: !2575, line: 215, type: !12175, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18093)
!18093 = !{!18094, !18095, !18096, !18098, !18099, !18102, !18103}
!18094 = !DILocalVariable(name: "ticks", arg: 1, scope: !18092, file: !2575, line: 215, type: !334)
!18095 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18092, file: !2575, line: 215, type: !136)
!18096 = !DILocalVariable(name: "__i", scope: !18097, file: !2575, line: 217, type: !17667)
!18097 = distinct !DILexicalBlock(scope: !18092, file: !2575, line: 217, column: 2)
!18098 = !DILocalVariable(name: "__key", scope: !18097, file: !2575, line: 217, type: !17667)
!18099 = !DILocalVariable(name: "next_to", scope: !18100, file: !2575, line: 218, type: !107)
!18100 = distinct !DILexicalBlock(scope: !18101, file: !2575, line: 217, column: 24)
!18101 = distinct !DILexicalBlock(scope: !18097, file: !2575, line: 217, column: 2)
!18102 = !DILocalVariable(name: "sooner", scope: !18100, file: !2575, line: 219, type: !136)
!18103 = !DILocalVariable(name: "imminent", scope: !18100, file: !2575, line: 221, type: !136)
!18104 = !DILocation(line: 0, scope: !18092)
!18105 = !DILocation(line: 0, scope: !18097)
!18106 = !DILocation(line: 0, scope: !17689, inlinedAt: !18107)
!18107 = distinct !DILocation(line: 217, column: 2, scope: !18097)
!18108 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !18109)
!18109 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !18107)
!18110 = !DILocation(line: 0, scope: !17698, inlinedAt: !18109)
!18111 = !DILocation(line: 218, column: 17, scope: !18100)
!18112 = !DILocation(line: 0, scope: !18100)
!18113 = !DILocation(line: 221, column: 27, scope: !18100)
!18114 = !DILocation(line: 233, column: 17, scope: !18115)
!18115 = distinct !DILexicalBlock(scope: !18100, file: !2575, line: 233, column: 7)
!18116 = !DILocation(line: 234, column: 26, scope: !18117)
!18117 = distinct !DILexicalBlock(scope: !18115, file: !2575, line: 233, column: 56)
!18118 = !DILocation(line: 234, column: 4, scope: !18117)
!18119 = !DILocation(line: 235, column: 3, scope: !18117)
!18120 = !DILocation(line: 0, scope: !17757, inlinedAt: !18121)
!18121 = distinct !DILocation(line: 217, column: 2, scope: !18101)
!18122 = !DILocation(line: 0, scope: !17765, inlinedAt: !18123)
!18123 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !18121)
!18124 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !18123)
!18125 = !DILocation(line: 237, column: 1, scope: !18092)
!18126 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2575, file: !2575, line: 239, type: !18127, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18129)
!18127 = !DISubroutineType(types: !18128)
!18128 = !{null, !334}
!18129 = !{!18130, !18131, !18132, !18134}
!18130 = !DILocalVariable(name: "ticks", arg: 1, scope: !18126, file: !2575, line: 239, type: !334)
!18131 = !DILocalVariable(name: "key", scope: !18126, file: !2575, line: 245, type: !17667)
!18132 = !DILocalVariable(name: "t", scope: !18133, file: !2575, line: 262, type: !2548)
!18133 = distinct !DILexicalBlock(scope: !18126, file: !2575, line: 261, column: 67)
!18134 = !DILocalVariable(name: "dt", scope: !18133, file: !2575, line: 263, type: !107)
!18135 = !DILocation(line: 0, scope: !18126)
!18136 = !DILocation(line: 242, column: 2, scope: !18126)
!18137 = !DILocation(line: 0, scope: !17689, inlinedAt: !18138)
!18138 = distinct !DILocation(line: 245, column: 25, scope: !18126)
!18139 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !18140)
!18140 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !18138)
!18141 = !DILocation(line: 0, scope: !17698, inlinedAt: !18140)
!18142 = !DILocation(line: 261, column: 9, scope: !18126)
!18143 = !DILocation(line: 261, column: 17, scope: !18126)
!18144 = !DILocation(line: 261, column: 25, scope: !18126)
!18145 = !DILocation(line: 261, column: 37, scope: !18126)
!18146 = !DILocation(line: 261, column: 47, scope: !18126)
!18147 = !DILocation(line: 261, column: 44, scope: !18126)
!18148 = !DILocation(line: 261, column: 2, scope: !18126)
!18149 = !DILocation(line: 0, scope: !18133)
!18150 = !DILocation(line: 263, column: 12, scope: !18133)
!18151 = !DILocation(line: 265, column: 16, scope: !18133)
!18152 = !DILocation(line: 265, column: 13, scope: !18133)
!18153 = !DILocation(line: 266, column: 13, scope: !18133)
!18154 = !DILocation(line: 267, column: 3, scope: !18133)
!18155 = !DILocation(line: 0, scope: !17757, inlinedAt: !18156)
!18156 = distinct !DILocation(line: 269, column: 3, scope: !18133)
!18157 = !DILocation(line: 0, scope: !17765, inlinedAt: !18158)
!18158 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !18156)
!18159 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !18158)
!18160 = !DILocation(line: 270, column: 6, scope: !18133)
!18161 = !DILocation(line: 270, column: 3, scope: !18133)
!18162 = !DILocation(line: 0, scope: !17689, inlinedAt: !18163)
!18163 = distinct !DILocation(line: 271, column: 9, scope: !18133)
!18164 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !18165)
!18165 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !18163)
!18166 = !DILocation(line: 0, scope: !17698, inlinedAt: !18165)
!18167 = !DILocation(line: 272, column: 22, scope: !18133)
!18168 = distinct !{!18168, !18148, !18169}
!18169 = !DILocation(line: 273, column: 2, scope: !18126)
!18170 = !DILocation(line: 276, column: 19, scope: !18171)
!18171 = distinct !DILexicalBlock(scope: !18172, file: !2575, line: 275, column: 23)
!18172 = distinct !DILexicalBlock(scope: !18126, file: !2575, line: 275, column: 6)
!18173 = !DILocation(line: 277, column: 2, scope: !18171)
!18174 = !DILocation(line: 279, column: 15, scope: !18126)
!18175 = !DILocation(line: 279, column: 12, scope: !18126)
!18176 = !DILocation(line: 280, column: 21, scope: !18126)
!18177 = !DILocation(line: 282, column: 24, scope: !18126)
!18178 = !DILocation(line: 282, column: 2, scope: !18126)
!18179 = !DILocation(line: 0, scope: !17757, inlinedAt: !18180)
!18180 = distinct !DILocation(line: 284, column: 2, scope: !18126)
!18181 = !DILocation(line: 0, scope: !17765, inlinedAt: !18182)
!18182 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !18180)
!18183 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !18182)
!18184 = !DILocation(line: 285, column: 1, scope: !18126)
!18185 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2575, file: !2575, line: 287, type: !18186, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18188)
!18186 = !DISubroutineType(types: !18187)
!18187 = !{!104}
!18188 = !{!18189, !18190, !18192}
!18189 = !DILocalVariable(name: "t", scope: !18185, file: !2575, line: 289, type: !109)
!18190 = !DILocalVariable(name: "__i", scope: !18191, file: !2575, line: 291, type: !17667)
!18191 = distinct !DILexicalBlock(scope: !18185, file: !2575, line: 291, column: 2)
!18192 = !DILocalVariable(name: "__key", scope: !18191, file: !2575, line: 291, type: !17667)
!18193 = !DILocation(line: 0, scope: !18185)
!18194 = !DILocation(line: 0, scope: !18191)
!18195 = !DILocation(line: 0, scope: !17689, inlinedAt: !18196)
!18196 = distinct !DILocation(line: 291, column: 2, scope: !18191)
!18197 = !DILocation(line: 55, column: 2, scope: !17698, inlinedAt: !18198)
!18198 = distinct !DILocation(line: 145, column: 10, scope: !17689, inlinedAt: !18196)
!18199 = !DILocation(line: 0, scope: !17698, inlinedAt: !18198)
!18200 = !DILocation(line: 292, column: 7, scope: !18201)
!18201 = distinct !DILexicalBlock(scope: !18202, file: !2575, line: 291, column: 24)
!18202 = distinct !DILexicalBlock(scope: !18191, file: !2575, line: 291, column: 2)
!18203 = !DILocation(line: 292, column: 19, scope: !18201)
!18204 = !DILocation(line: 0, scope: !17757, inlinedAt: !18205)
!18205 = distinct !DILocation(line: 291, column: 2, scope: !18202)
!18206 = !DILocation(line: 0, scope: !17765, inlinedAt: !18207)
!18207 = distinct !DILocation(line: 215, column: 2, scope: !17757, inlinedAt: !18205)
!18208 = !DILocation(line: 95, column: 2, scope: !17765, inlinedAt: !18207)
!18209 = !DILocation(line: 292, column: 17, scope: !18201)
!18210 = !DILocation(line: 294, column: 2, scope: !18185)
!18211 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2575, file: !2575, line: 297, type: !7456, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !256)
!18212 = !DILocation(line: 300, column: 19, scope: !18211)
!18213 = !DILocation(line: 300, column: 9, scope: !18211)
!18214 = !DILocation(line: 300, column: 2, scope: !18211)
!18215 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2575, file: !2575, line: 306, type: !18186, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !256)
!18216 = !DILocation(line: 308, column: 9, scope: !18215)
!18217 = !DILocation(line: 308, column: 2, scope: !18215)
!18218 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2575, file: !2575, line: 319, type: !7466, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18219)
!18219 = !{!18220, !18221, !18222, !18223}
!18220 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18218, file: !2575, line: 319, type: !108)
!18221 = !DILocalVariable(name: "start_cycles", scope: !18218, file: !2575, line: 328, type: !108)
!18222 = !DILocalVariable(name: "cycles_to_wait", scope: !18218, file: !2575, line: 331, type: !108)
!18223 = !DILocalVariable(name: "current_cycles", scope: !18224, file: !2575, line: 338, type: !108)
!18224 = distinct !DILexicalBlock(scope: !18225, file: !2575, line: 337, column: 11)
!18225 = distinct !DILexicalBlock(scope: !18226, file: !2575, line: 337, column: 2)
!18226 = distinct !DILexicalBlock(scope: !18218, file: !2575, line: 337, column: 2)
!18227 = !DILocation(line: 0, scope: !18218)
!18228 = !DILocation(line: 322, column: 19, scope: !18229)
!18229 = distinct !DILexicalBlock(scope: !18218, file: !2575, line: 322, column: 6)
!18230 = !DILocation(line: 322, column: 6, scope: !18218)
!18231 = !DILocation(line: 328, column: 26, scope: !18218)
!18232 = !DILocation(line: 333, column: 43, scope: !18218)
!18233 = !DILocation(line: 337, column: 2, scope: !18218)
!18234 = !DILocation(line: 338, column: 29, scope: !18224)
!18235 = !DILocation(line: 0, scope: !18224)
!18236 = !DILocation(line: 341, column: 23, scope: !18237)
!18237 = distinct !DILexicalBlock(scope: !18224, file: !2575, line: 341, column: 7)
!18238 = !DILocation(line: 341, column: 39, scope: !18237)
!18239 = !DILocation(line: 349, column: 1, scope: !18218)
!18240 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !142, file: !142, line: 1675, type: !7456, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !256)
!18241 = !DILocation(line: 1677, column: 9, scope: !18240)
!18242 = !DILocation(line: 1677, column: 2, scope: !18240)
!18243 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18244, file: !18244, line: 24, type: !7456, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !256)
!18244 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18245 = !DILocation(line: 26, column: 9, scope: !18243)
!18246 = !DILocation(line: 26, column: 2, scope: !18243)
!18247 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2575, file: !2575, line: 364, type: !18248, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !18250)
!18248 = !DISubroutineType(types: !18249)
!18249 = !{!109, !17657}
!18250 = !{!18251, !18252}
!18251 = !DILocalVariable(name: "timeout", arg: 1, scope: !18247, file: !2575, line: 364, type: !17657)
!18252 = !DILocalVariable(name: "dt", scope: !18247, file: !2575, line: 366, type: !102)
!18253 = !DILocation(line: 0, scope: !18247)
!18254 = !DILocation(line: 368, column: 6, scope: !18247)
!18255 = !DILocation(line: 371, column: 10, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18257, file: !2575, line: 370, column: 47)
!18257 = distinct !DILexicalBlock(scope: !18258, file: !2575, line: 370, column: 13)
!18258 = distinct !DILexicalBlock(scope: !18247, file: !2575, line: 368, column: 6)
!18259 = !DILocation(line: 371, column: 3, scope: !18256)
!18260 = !DILocation(line: 376, column: 58, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18262, file: !2575, line: 376, column: 7)
!18262 = distinct !DILexicalBlock(scope: !18257, file: !2575, line: 372, column: 9)
!18263 = !DILocation(line: 376, column: 7, scope: !18262)
!18264 = !DILocation(line: 376, column: 43, scope: !18261)
!18265 = !DILocation(line: 377, column: 4, scope: !18266)
!18266 = distinct !DILexicalBlock(scope: !18261, file: !2575, line: 376, column: 64)
!18267 = !DILocation(line: 379, column: 10, scope: !18262)
!18268 = !DILocation(line: 379, column: 33, scope: !18262)
!18269 = !DILocation(line: 379, column: 31, scope: !18262)
!18270 = !DILocation(line: 379, column: 3, scope: !18262)
!18271 = !DILocation(line: 0, scope: !18258)
!18272 = !DILocation(line: 381, column: 1, scope: !18247)
!18273 = distinct !DISubprogram(name: "boot_banner", scope: !18274, file: !18274, line: 26, type: !337, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3319, retainedNodes: !256)
!18274 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18275 = !DILocation(line: 36, column: 1, scope: !18273)
!18276 = distinct !DISubprogram(name: "statics_init", scope: !2603, file: !2603, line: 21, type: !2609, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18277)
!18277 = !{!18278, !18279}
!18278 = !DILocalVariable(name: "unused", arg: 1, scope: !18276, file: !2603, line: 21, type: !2611)
!18279 = !DILocalVariable(name: "h", scope: !18280, file: !2603, line: 24, type: !18281)
!18280 = distinct !DILexicalBlock(scope: !18276, file: !2603, line: 24, column: 2)
!18281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18282, size: 32)
!18282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !18283)
!18283 = !{!18284, !18290, !18296}
!18284 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18282, file: !142, line: 5074, baseType: !18285, size: 96)
!18285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !18286)
!18286 = !{!18287, !18288, !18289}
!18287 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18285, file: !245, line: 57, baseType: !248, size: 32)
!18288 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18285, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!18289 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18285, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!18290 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18282, file: !142, line: 5075, baseType: !18291, size: 64, offset: 96)
!18291 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !18292)
!18292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !18293)
!18293 = !{!18294}
!18294 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18292, file: !146, line: 232, baseType: !18295, size: 64)
!18295 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2589)
!18296 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18282, file: !142, line: 5076, baseType: !18297, offset: 160)
!18297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!18298 = !DILocation(line: 0, scope: !18276)
!18299 = !DILocation(line: 0, scope: !18280)
!18300 = !DILocation(line: 24, column: 2, scope: !18280)
!18301 = !DILocation(line: 52, column: 2, scope: !18276)
!18302 = !DILocation(line: 49, column: 27, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18304, file: !2603, line: 48, column: 3)
!18304 = distinct !DILexicalBlock(scope: !18305, file: !2603, line: 24, column: 36)
!18305 = distinct !DILexicalBlock(scope: !18280, file: !2603, line: 24, column: 2)
!18306 = !DILocation(line: 49, column: 45, scope: !18303)
!18307 = !DILocation(line: 49, column: 4, scope: !18303)
!18308 = !DILocation(line: 24, column: 2, scope: !18305)
!18309 = !DILocation(line: 24, column: 2, scope: !18310)
!18310 = distinct !DILexicalBlock(scope: !18305, file: !2603, line: 24, column: 2)
!18311 = distinct !{!18311, !18300, !18312}
!18312 = !DILocation(line: 51, column: 2, scope: !18280)
!18313 = distinct !DISubprogram(name: "k_heap_init", scope: !2603, file: !2603, line: 13, type: !18314, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18316)
!18314 = !DISubroutineType(types: !18315)
!18315 = !{null, !18281, !106, !137}
!18316 = !{!18317, !18318, !18319}
!18317 = !DILocalVariable(name: "h", arg: 1, scope: !18313, file: !2603, line: 13, type: !18281)
!18318 = !DILocalVariable(name: "mem", arg: 2, scope: !18313, file: !2603, line: 13, type: !106)
!18319 = !DILocalVariable(name: "bytes", arg: 3, scope: !18313, file: !2603, line: 13, type: !137)
!18320 = !DILocation(line: 0, scope: !18313)
!18321 = !DILocation(line: 15, column: 19, scope: !18313)
!18322 = !DILocation(line: 15, column: 2, scope: !18313)
!18323 = !DILocation(line: 16, column: 20, scope: !18313)
!18324 = !DILocation(line: 16, column: 2, scope: !18313)
!18325 = !DILocation(line: 19, column: 1, scope: !18313)
!18326 = distinct !DISubprogram(name: "z_waitq_init", scope: !14533, file: !14533, line: 47, type: !18327, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18330)
!18327 = !DISubroutineType(types: !18328)
!18328 = !{null, !18329}
!18329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18291, size: 32)
!18330 = !{!18331}
!18331 = !DILocalVariable(name: "w", arg: 1, scope: !18326, file: !14533, line: 47, type: !18329)
!18332 = !DILocation(line: 0, scope: !18326)
!18333 = !DILocation(line: 49, column: 21, scope: !18326)
!18334 = !DILocation(line: 49, column: 2, scope: !18326)
!18335 = !DILocation(line: 50, column: 1, scope: !18326)
!18336 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !18337, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18340)
!18337 = !DISubroutineType(types: !18338)
!18338 = !{null, !18339}
!18339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18295, size: 32)
!18340 = !{!18341}
!18341 = !DILocalVariable(name: "list", arg: 1, scope: !18336, file: !151, line: 197, type: !18339)
!18342 = !DILocation(line: 0, scope: !18336)
!18343 = !DILocation(line: 199, column: 8, scope: !18336)
!18344 = !DILocation(line: 199, column: 13, scope: !18336)
!18345 = !DILocation(line: 200, column: 8, scope: !18336)
!18346 = !DILocation(line: 200, column: 13, scope: !18336)
!18347 = !DILocation(line: 201, column: 1, scope: !18336)
!18348 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2603, file: !2603, line: 64, type: !18349, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18355)
!18349 = !DISubroutineType(types: !18350)
!18350 = !{!106, !18281, !137, !137, !18351}
!18351 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !18352)
!18352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !18353)
!18353 = !{!18354}
!18354 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18352, file: !103, line: 66, baseType: !102, size: 64)
!18355 = !{!18356, !18357, !18358, !18359, !18360, !18361, !18362, !18363, !18368}
!18356 = !DILocalVariable(name: "h", arg: 1, scope: !18348, file: !2603, line: 64, type: !18281)
!18357 = !DILocalVariable(name: "align", arg: 2, scope: !18348, file: !2603, line: 64, type: !137)
!18358 = !DILocalVariable(name: "bytes", arg: 3, scope: !18348, file: !2603, line: 64, type: !137)
!18359 = !DILocalVariable(name: "timeout", arg: 4, scope: !18348, file: !2603, line: 65, type: !18351)
!18360 = !DILocalVariable(name: "now", scope: !18348, file: !2603, line: 67, type: !104)
!18361 = !DILocalVariable(name: "end", scope: !18348, file: !2603, line: 67, type: !104)
!18362 = !DILocalVariable(name: "ret", scope: !18348, file: !2603, line: 68, type: !106)
!18363 = !DILocalVariable(name: "key", scope: !18348, file: !2603, line: 72, type: !18364)
!18364 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !18365)
!18365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !18366)
!18366 = !{!18367}
!18367 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18365, file: !255, line: 33, baseType: !107, size: 32)
!18368 = !DILocalVariable(name: "blocked_alloc", scope: !18348, file: !2603, line: 78, type: !136)
!18369 = !DILocation(line: 0, scope: !18348)
!18370 = !DILocation(line: 67, column: 21, scope: !18348)
!18371 = !DILocation(line: 70, column: 8, scope: !18348)
!18372 = !DILocation(line: 72, column: 41, scope: !18348)
!18373 = !DILocalVariable(name: "l", arg: 1, scope: !18374, file: !255, line: 136, type: !18377)
!18374 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !18375, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18378)
!18375 = !DISubroutineType(types: !18376)
!18376 = !{!18364, !18377}
!18377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18297, size: 32)
!18378 = !{!18373, !18379}
!18379 = !DILocalVariable(name: "k", scope: !18374, file: !255, line: 139, type: !18364)
!18380 = !DILocation(line: 0, scope: !18374, inlinedAt: !18381)
!18381 = distinct !DILocation(line: 72, column: 25, scope: !18348)
!18382 = !DILocation(line: 55, column: 2, scope: !18383, inlinedAt: !18387)
!18383 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7054, file: !7054, line: 42, type: !7055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18384)
!18384 = !{!18385, !18386}
!18385 = !DILocalVariable(name: "key", scope: !18383, file: !7054, line: 44, type: !32)
!18386 = !DILocalVariable(name: "tmp", scope: !18383, file: !7054, line: 53, type: !32)
!18387 = distinct !DILocation(line: 145, column: 10, scope: !18374, inlinedAt: !18381)
!18388 = !{i64 2241189}
!18389 = !DILocation(line: 0, scope: !18383, inlinedAt: !18387)
!18390 = !DILocation(line: 81, column: 9, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18348, file: !2603, line: 80, column: 22)
!18392 = !DILocation(line: 83, column: 9, scope: !18391)
!18393 = !DILocation(line: 85, column: 12, scope: !18394)
!18394 = distinct !DILexicalBlock(scope: !18391, file: !2603, line: 84, column: 7)
!18395 = !DILocation(line: 85, column: 21, scope: !18394)
!18396 = !DILocation(line: 85, column: 30, scope: !18394)
!18397 = !DILocation(line: 85, column: 37, scope: !18394)
!18398 = !DILocation(line: 84, column: 7, scope: !18391)
!18399 = !DILocation(line: 99, column: 10, scope: !18391)
!18400 = !DILocation(line: 0, scope: !18374, inlinedAt: !18401)
!18401 = distinct !DILocation(line: 101, column: 9, scope: !18391)
!18402 = !DILocation(line: 55, column: 2, scope: !18383, inlinedAt: !18403)
!18403 = distinct !DILocation(line: 145, column: 10, scope: !18374, inlinedAt: !18401)
!18404 = !DILocation(line: 0, scope: !18383, inlinedAt: !18403)
!18405 = distinct !{!18405, !18406, !18407}
!18406 = !DILocation(line: 80, column: 2, scope: !18348)
!18407 = !DILocation(line: 102, column: 2, scope: !18348)
!18408 = !DILocalVariable(name: "key", arg: 2, scope: !18409, file: !255, line: 190, type: !18364)
!18409 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !18410, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18412)
!18410 = !DISubroutineType(types: !18411)
!18411 = !{null, !18377, !18364}
!18412 = !{!18413, !18408}
!18413 = !DILocalVariable(name: "l", arg: 1, scope: !18409, file: !255, line: 189, type: !18377)
!18414 = !DILocation(line: 0, scope: !18409, inlinedAt: !18415)
!18415 = distinct !DILocation(line: 106, column: 2, scope: !18348)
!18416 = !DILocalVariable(name: "key", arg: 1, scope: !18417, file: !7054, line: 84, type: !32)
!18417 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7054, file: !7054, line: 84, type: !7065, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18418)
!18418 = !{!18416}
!18419 = !DILocation(line: 0, scope: !18417, inlinedAt: !18420)
!18420 = distinct !DILocation(line: 215, column: 2, scope: !18409, inlinedAt: !18415)
!18421 = !DILocation(line: 95, column: 2, scope: !18417, inlinedAt: !18420)
!18422 = !{i64 2242006}
!18423 = !DILocation(line: 107, column: 2, scope: !18348)
!18424 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2603, file: !2603, line: 110, type: !18425, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18427)
!18425 = !DISubroutineType(types: !18426)
!18426 = !{!106, !18281, !137, !18351}
!18427 = !{!18428, !18429, !18430, !18431}
!18428 = !DILocalVariable(name: "h", arg: 1, scope: !18424, file: !2603, line: 110, type: !18281)
!18429 = !DILocalVariable(name: "bytes", arg: 2, scope: !18424, file: !2603, line: 110, type: !137)
!18430 = !DILocalVariable(name: "timeout", arg: 3, scope: !18424, file: !2603, line: 110, type: !18351)
!18431 = !DILocalVariable(name: "ret", scope: !18424, file: !2603, line: 114, type: !106)
!18432 = !DILocation(line: 0, scope: !18424)
!18433 = !DILocation(line: 114, column: 14, scope: !18424)
!18434 = !DILocation(line: 118, column: 2, scope: !18424)
!18435 = distinct !DISubprogram(name: "k_heap_free", scope: !2603, file: !2603, line: 121, type: !18436, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !18438)
!18436 = !DISubroutineType(types: !18437)
!18437 = !{null, !18281, !106}
!18438 = !{!18439, !18440, !18441}
!18439 = !DILocalVariable(name: "h", arg: 1, scope: !18435, file: !2603, line: 121, type: !18281)
!18440 = !DILocalVariable(name: "mem", arg: 2, scope: !18435, file: !2603, line: 121, type: !106)
!18441 = !DILocalVariable(name: "key", scope: !18435, file: !2603, line: 123, type: !18364)
!18442 = !DILocation(line: 0, scope: !18435)
!18443 = !DILocation(line: 0, scope: !18374, inlinedAt: !18444)
!18444 = distinct !DILocation(line: 123, column: 25, scope: !18435)
!18445 = !DILocation(line: 55, column: 2, scope: !18383, inlinedAt: !18446)
!18446 = distinct !DILocation(line: 145, column: 10, scope: !18374, inlinedAt: !18444)
!18447 = !DILocation(line: 0, scope: !18383, inlinedAt: !18446)
!18448 = !DILocation(line: 125, column: 20, scope: !18435)
!18449 = !DILocation(line: 125, column: 2, scope: !18435)
!18450 = !DILocation(line: 128, column: 60, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18435, file: !2603, line: 128, column: 6)
!18452 = !DILocation(line: 128, column: 43, scope: !18451)
!18453 = !DILocation(line: 128, column: 68, scope: !18451)
!18454 = !DILocation(line: 128, column: 6, scope: !18435)
!18455 = !DILocation(line: 123, column: 41, scope: !18435)
!18456 = !DILocation(line: 129, column: 3, scope: !18457)
!18457 = distinct !DILexicalBlock(scope: !18451, file: !2603, line: 128, column: 74)
!18458 = !DILocation(line: 130, column: 2, scope: !18457)
!18459 = !DILocation(line: 0, scope: !18409, inlinedAt: !18460)
!18460 = distinct !DILocation(line: 131, column: 3, scope: !18461)
!18461 = distinct !DILexicalBlock(scope: !18451, file: !2603, line: 130, column: 9)
!18462 = !DILocation(line: 0, scope: !18417, inlinedAt: !18463)
!18463 = distinct !DILocation(line: 215, column: 2, scope: !18409, inlinedAt: !18460)
!18464 = !DILocation(line: 95, column: 2, scope: !18417, inlinedAt: !18463)
!18465 = !DILocation(line: 133, column: 1, scope: !18435)
