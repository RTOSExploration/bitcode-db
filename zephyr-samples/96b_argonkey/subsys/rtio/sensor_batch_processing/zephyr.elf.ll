; ModuleID = 'build/96b_argonkey/sensor_batch_processing/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.rtio_executor_api = type { i32 (%struct.rtio*)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)* }
%struct.rtio = type { %struct.rtio_executor*, i32, %struct.rtio_sq*, %struct.rtio_cq* }
%struct.rtio_executor = type { %struct.rtio_executor_api* }
%struct.rtio_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_sqe] }
%struct.rtio_spsc = type { i32, i32, i32, i32, i32 }
%struct.rtio_sqe = type { i8, i8, i16, %struct.rtio_iodev*, i8*, %union.anon.3 }
%struct.rtio_iodev = type { %struct.rtio_iodev_api*, %struct.rtio_iodev_sq*, i8* }
%struct.rtio_iodev_api = type { void (%struct.rtio_sqe*, %struct.rtio*)* }
%struct.rtio_iodev_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_iodev_sqe] }
%struct.rtio_iodev_sqe = type { %struct.rtio_sqe*, %struct.rtio* }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i8* }
%struct.rtio_cq = type { %struct.rtio_spsc, [0 x %struct.anon.4] }
%struct.rtio_simple_executor = type { %struct.rtio_executor }
%struct.rtio_spsc__sq_ez_io = type { %struct.rtio_spsc, [8 x %struct.rtio_sqe] }
%struct.rtio_spsc__cq_ez_io = type { %struct.rtio_spsc, [8 x %struct.anon.4] }
%struct.rtio_spsc_vnd_sensor_iodev_sq_0 = type { %struct.rtio_spsc, [8 x %struct.rtio_iodev_sqe] }
%struct.vnd_sensor_config = type { i32, i32 }
%struct.device_state = type { i8, i8 }
%struct.vnd_sensor_data = type { %struct.rtio_iodev, %struct.k_timer, %struct.device*, %struct.k_msgq, i32 }
%struct.k_timer = type { %struct._timeout, %struct._wait_q_t, void (%struct.k_timer*)*, void (%struct.k_timer*)*, %struct.k_timeout_t, i32, i8* }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._wait_q_t = type { %struct._dnode }
%struct.k_timeout_t = type { i64 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon }
%union.anon = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon, i32*, i32, %struct.vnd_sensor_config }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.vnd_sensor_config*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.vnd_sensor_config*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.vnd_sensor_config }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %struct.k_timeout_t, %struct.conversion }
%struct.conversion = type { [3 x i8], i8, %union.anon, %union.anon }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, i32 }
%struct.rtio_concurrent_executor = type { %struct.rtio_executor, %struct.k_spinlock, i16, i16, i16, %struct.rtio_sqe*, %struct.rtio_sqe*, i8*, %struct.rtio_sqe** }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %union.anon*, %union.anon* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231661 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231641 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231631 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231731 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231721 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231711 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231701 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231691 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231681 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231671 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233444 to i8*), void (i8*)* inttoptr (i32 134231651 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [48 x i8*] [i8* bitcast (%struct.rtio* @ez_io to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.device* @__device_dts_ord_13 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_13 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_vnd_sensor to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_simple to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_concurrent to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_38 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_27 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_80 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_81 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_82 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_27 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_80 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_81 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_82 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@z_rtio_simple_api = internal constant %struct.rtio_executor_api { i32 (%struct.rtio*)* @rtio_simple_submit, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_ok, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_err }, align 4, !dbg !235
@simple_exec = dso_local global %struct.rtio_simple_executor { %struct.rtio_executor { %struct.rtio_executor_api* @z_rtio_simple_api } }, align 4, !dbg !117
@_sq_ez_io = internal global %struct.rtio_spsc__sq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_sqe] zeroinitializer }, align 4, !dbg !237
@_cq_ez_io = internal global %struct.rtio_spsc__cq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.anon.4] zeroinitializer }, align 4, !dbg !245
@ez_io = dso_local global %struct.rtio { %struct.rtio_executor* getelementptr inbounds (%struct.rtio_simple_executor, %struct.rtio_simple_executor* @simple_exec, i32 0, i32 0), i32 0, %struct.rtio_sq* bitcast (%struct.rtio_spsc__sq_ez_io* @_sq_ez_io to %struct.rtio_sq*), %struct.rtio_cq* bitcast (%struct.rtio_spsc__cq_ez_io* @_cq_ez_io to %struct.rtio_cq*) }, section "._rtio.static.ez_io", align 4, !dbg !227
@bufs = internal global [8 x [16 x i8]] zeroinitializer, align 1, !dbg !229
@.str.1 = private unnamed_addr constant [33 x i8] c"%c: Submitting %d read requests\0A\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"%c: No completion events available\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"%c: Consumed completion event %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"%c: Operation failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"%c: Start processing %d samples\0A\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Sample data:\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"%c: Finished processing %d samples\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"vnd_sensor\00", align 1
@log_const_vnd_sensor = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8 4 }, section ".log_const_vnd_sensor", align 4, !dbg !258
@vnd_sensor_iodev_sq_0 = dso_local global %struct.rtio_spsc_vnd_sensor_iodev_sq_0 { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_iodev_sqe] zeroinitializer }, align 4, !dbg !451
@__devicehdl_dts_ord_13 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !494
@.str.1.12 = private unnamed_addr constant [9 x i8] c"sensor@0\00", align 1
@vnd_sensor_config_0 = internal constant %struct.vnd_sensor_config { i32 100, i32 16 }, align 4, !dbg !478
@__devstate_dts_ord_13 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !476
@vnd_sensor_data_0 = internal global %struct.vnd_sensor_data { %struct.rtio_iodev { %struct.rtio_iodev_api* @vnd_sensor_iodev_api, %struct.rtio_iodev_sq* bitcast (%struct.rtio_spsc_vnd_sensor_iodev_sq_0* @vnd_sensor_iodev_sq_0 to %struct.rtio_iodev_sq*), i8* null }, %struct.k_timer zeroinitializer, %struct.device* null, %struct.k_msgq zeroinitializer, i32 0 }, align 8, !dbg !485
@__device_dts_ord_13 = dso_local constant %struct.device { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.12, i32 0, i32 0), i8* bitcast (%struct.vnd_sensor_config* @vnd_sensor_config_0 to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_13, i8* bitcast (%struct.vnd_sensor_data* @vnd_sensor_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_13, i32 0, i32 0) }, section ".z_device_POST_KERNEL50_", align 4, !dbg !463
@__init___device_dts_ord_13 = internal constant %struct.init_entry { i32 (%struct.device*)* @vnd_sensor_init, %struct.device* @__device_dts_ord_13 }, section ".z_init_POST_KERNEL50_", align 4, !dbg !465
@vnd_sensor_iodev_api = internal constant %struct.rtio_iodev_api { void (%struct.rtio_sqe*, %struct.rtio*)* @vnd_sensor_iodev_submit }, align 4, !dbg !487
@.str.2.16 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not put a msg\0A\00", align 1
@.str.3.19 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not get a msg\0A\00", align 1
@.str.4.20 = private unnamed_addr constant [20 x i8] c"%c: %s: Invalid op\0A\00", align 1
@.str.5.21 = private unnamed_addr constant [32 x i8] c"%c: %s: buf_len = %d, buf = %p\0A\00", align 1
@.str.6.22 = private unnamed_addr constant [29 x i8] c"%c: %s: Buffer is too small\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !528
@.str.1.25 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !549
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !559
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !602
@.str.36 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.38 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.39 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.37 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.41 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.45 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.46 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.60 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.55 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.56 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.57 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.59 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.53 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.50 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.49 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !631
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon { i32 101384192 } }], align 4, !dbg !772
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !637
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !781
@.str.72 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !817
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), %union.anon { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.85, i32 0, i32 0), %union.anon { i32 285933602 } }], align 4, !dbg !827
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !832
@.str.84 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.85 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"rtio_executor_simple\00", align 1
@log_const_rtio_executor_simple = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_simple", align 4, !dbg !852
@.str.96 = private unnamed_addr constant [25 x i8] c"rtio_executor_concurrent\00", align 1
@log_const_rtio_executor_concurrent = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_concurrent", align 4, !dbg !863
@.str.1.98 = private unnamed_addr constant [12 x i8] c"%c: submit\0A\00", align 1
@.str.2.100 = private unnamed_addr constant [26 x i8] c"%c: head SQE in chain %p\0A\00", align 1
@.str.3.101 = private unnamed_addr constant [24 x i8] c"%c: setting up task %d\0A\00", align 1
@.str.4.102 = private unnamed_addr constant [22 x i8] c"%c: submitted sqe %p\0A\00", align 1
@.str.5.103 = private unnamed_addr constant [26 x i8] c"%c: tail SQE in chain %p\0A\00", align 1
@.str.6.104 = private unnamed_addr constant [32 x i8] c"%c: resuming suspended task %d\0A\00", align 1
@.str.7.107 = private unnamed_addr constant [29 x i8] c"%c: sweeping oldest task %d\0A\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !980
@__devicehdl_dts_ord_38 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !505
@.str.110 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_38 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1131
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1114
@__device_dts_ord_38 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_38, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_38, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1087
@__init___device_dts_ord_38 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_38 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1103
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1133
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1146
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1148
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1150
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1152
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1154
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1156
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1158
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1160
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1162
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_38 to i8*) }, section ".intList", align 4, !dbg !1164
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !499
@.str.112 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1169
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1264
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1253
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1305
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !524
@.str.121 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.vnd_sensor_config { i32 48, i32 1 } }, align 4, !dbg !1371
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1652
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1622
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1608
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1550
@__devicehdl_dts_ord_27 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !522
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.vnd_sensor_config { i32 48, i32 2 } }, align 4, !dbg !1654
@__devstate_dts_ord_27 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1626
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1624
@__init___device_dts_ord_27 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_27 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1564
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !520
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.vnd_sensor_config { i32 48, i32 4 } }, align 4, !dbg !1667
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1630
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1628
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1573
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !518
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.vnd_sensor_config { i32 48, i32 8 } }, align 4, !dbg !1669
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1634
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1632
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1582
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !516
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.vnd_sensor_config { i32 48, i32 16 } }, align 4, !dbg !1671
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1638
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1636
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1588
@__devicehdl_dts_ord_80 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !514
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct.vnd_sensor_config { i32 48, i32 32 } }, align 4, !dbg !1673
@__devstate_dts_ord_80 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1642
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1640
@__init___device_dts_ord_80 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_80 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1594
@__devicehdl_dts_ord_81 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !512
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct.vnd_sensor_config { i32 48, i32 64 } }, align 4, !dbg !1675
@__devstate_dts_ord_81 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1646
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1644
@__init___device_dts_ord_81 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_81 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1600
@__devicehdl_dts_ord_82 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !510
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct.vnd_sensor_config { i32 48, i32 128 } }, align 4, !dbg !1677
@__devstate_dts_ord_82 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1650
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1648
@__init___device_dts_ord_82 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_82 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1606
@.str.132 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1679
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !526
@.str.1.135 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1833
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1888
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1831
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1890
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.135, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1822
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1824
@pclken_0 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 68, i32 16 }], align 4, !dbg !1877
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1880
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1882
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 295, i32 512 }, %struct.vnd_sensor_config { i32 327, i32 0 }], align 4, !dbg !1885
@.str.2.137 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.140 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.142 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.143 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1237
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1901
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2008
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2010
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2006
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1977
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_27, %struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* @__device_dts_ord_80, %struct.device* @__device_dts_ord_81, %struct.device* @__device_dts_ord_82, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2012
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1548
@__device_dts_ord_27 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_27, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_27, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1562
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1571
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1580
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1586
@__device_dts_ord_80 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_80, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_80, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1592
@__device_dts_ord_81 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_81, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_81, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1598
@__device_dts_ord_82 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_82, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_82, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1604
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2102
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2143
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2146
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2152
@.str.178 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.182 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.183 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.184 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.188 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.189 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.190 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.191 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.192 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.187 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.186 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.188, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.189, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.190, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.191, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.192, i32 0, i32 0)], align 4
@.str.194 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2159
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2382
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2368
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2377
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2389
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2394
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.203 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.210, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.211, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.213, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.207, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.214, i32 0, i32 0)], align 4, !dbg !2422
@.str.208 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.209 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.210 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.211 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.212 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.213 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.207 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.214 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2534
@.str.8.206 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2547
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2655
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2658
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2660
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2387
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2379
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2662
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2698
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2246
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2696
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2701
@.str.287 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3404 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3416, !srcloc !3417
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3418, !srcloc !3419
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3424, !srcloc !3425
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3426, !srcloc !3427
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3428, !srcloc !3429
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3430, !srcloc !3431
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3432, !srcloc !3433
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3434, !srcloc !3435
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3436, !srcloc !3437
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3438, !srcloc !3439
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3440, !srcloc !3441
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3442, !srcloc !3443
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3444, !srcloc !3445
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3446, !srcloc !3447
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3448, !srcloc !3449
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3450, !srcloc !3451
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3452, !srcloc !3453
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3454, !srcloc !3455
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3456, !srcloc !3457
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3458, !srcloc !3459
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3460, !srcloc !3461
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3462, !srcloc !3465
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3466, !srcloc !3467
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3468, !srcloc !3469
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3470, !srcloc !3471
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3472, !srcloc !3473
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3474, !srcloc !3475
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3476, !srcloc !3477
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3478, !srcloc !3479
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3480, !srcloc !3481
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3482, !srcloc !3483
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3484, !srcloc !3485
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3486, !srcloc !3487
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3488, !srcloc !3489
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3490, !srcloc !3491
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3492, !srcloc !3493
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3494, !srcloc !3495
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3496, !srcloc !3497
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3498, !srcloc !3499
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3500, !srcloc !3501
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3502, !srcloc !3503
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3504, !srcloc !3505
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3506, !srcloc !3507
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3508, !srcloc !3509
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3510, !srcloc !3511
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3512, !srcloc !3513
  ret void, !dbg !3514
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3517 {
  %1 = alloca [4 x i8*], align 4
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_13, metadata !3519, metadata !DIExpression()), !dbg !3571
  %2 = load %struct.rtio_iodev*, %struct.rtio_iodev** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_13, i32 0, i32 4) to %struct.rtio_iodev**), align 4, !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %2, metadata !3536, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i32 0, metadata !3538, metadata !DIExpression()), !dbg !3573
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3574
  br label %8, !dbg !3575

4:                                                ; preds = %46
  %5 = bitcast [4 x i8*]* %1 to i8*
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #24, !dbg !3571
  %7 = zext i8 %6 to i32
  br label %50, !dbg !3576

8:                                                ; preds = %0, %46
  %9 = phi %struct.rtio_sq* [ %3, %0 ], [ %47, %46 ], !dbg !3574
  %10 = phi i32 [ 0, %0 ], [ %48, %46 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !3538, metadata !DIExpression()), !dbg !3573
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !3574
  %12 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %11) #24, !dbg !3574
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3574
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 0, !dbg !3574
  %15 = load i32, i32* %14, align 4, !dbg !3574
  %16 = add i32 %15, %12, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %16, metadata !3544, metadata !DIExpression()), !dbg !3577
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !3574
  %18 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %17) #24, !dbg !3574
  %19 = sub i32 %16, %18, !dbg !3574
  %20 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3574
  %21 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 4, !dbg !3574
  %22 = load i32, i32* %21, align 4, !dbg !3574
  %23 = add i32 %22, 1, !dbg !3574
  %24 = icmp ult i32 %19, %23, !dbg !3574
  call void @llvm.dbg.value(metadata i1 %24, metadata !3546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3577
  br i1 %24, label %25, label %34, !dbg !3574

25:                                               ; preds = %8
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 0, !dbg !3578
  %27 = load i32, i32* %26, align 4, !dbg !3578
  %28 = add i32 %27, 1, !dbg !3578
  store i32 %28, i32* %26, align 4, !dbg !3578
  %29 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3574
  %30 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 0, i32 4, !dbg !3574
  %31 = load i32, i32* %30, align 4, !dbg !3574
  %32 = and i32 %31, %16, !dbg !3574
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 1, i32 %32, !dbg !3574
  br label %34, !dbg !3574

34:                                               ; preds = %8, %25
  %35 = phi %struct.rtio_sqe* [ %33, %25 ], [ null, %8 ], !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !3540, metadata !DIExpression()), !dbg !3581
  %36 = getelementptr inbounds [8 x [16 x i8]], [8 x [16 x i8]]* @bufs, i32 0, i32 %10, i32 0, !dbg !3582
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %35, %struct.rtio_iodev* noundef %2, i8* noundef nonnull %36, i8* noundef nonnull %36) #24, !dbg !3583
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3584
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 0, !dbg !3584
  %39 = load i32, i32* %38, align 4, !dbg !3584
  %40 = icmp eq i32 %39, 0, !dbg !3584
  br i1 %40, label %46, label %41, !dbg !3587

41:                                               ; preds = %34
  %42 = add i32 %39, -1, !dbg !3588
  store i32 %42, i32* %38, align 4, !dbg !3588
  %43 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3588
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %43, i32 0, i32 0, i32 2, !dbg !3588
  tail call fastcc void @atomic_add(i32* noundef nonnull %44, i32 noundef 1) #24, !dbg !3588
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3574
  br label %46, !dbg !3588

46:                                               ; preds = %41, %34
  %47 = phi %struct.rtio_sq* [ %45, %41 ], [ %37, %34 ]
  %48 = add nuw nsw i32 %10, 1, !dbg !3590
  call void @llvm.dbg.value(metadata i32 %48, metadata !3538, metadata !DIExpression()), !dbg !3573
  %49 = icmp eq i32 %48, 8, !dbg !3591
  br i1 %49, label %4, label %8, !dbg !3575, !llvm.loop !3592

50:                                               ; preds = %4, %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3547, metadata !DIExpression()), !dbg !3594
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3595
  call void @llvm.dbg.declare(metadata [4 x i8*]* %1, metadata !3549, metadata !DIExpression()), !dbg !3596
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3597
  tail call fastcc void @rtio_submit() #24, !dbg !3602
  call void @llvm.dbg.value(metadata i32 0, metadata !3547, metadata !DIExpression()), !dbg !3594
  br label %51, !dbg !3603

51:                                               ; preds = %50, %97
  %52 = phi i32 [ 0, %50 ], [ %98, %97 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !3547, metadata !DIExpression()), !dbg !3594
  %53 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3604
  %54 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %53, i32 0, i32 0, i32 3, !dbg !3604
  %55 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %54) #24, !dbg !3604
  %56 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3604
  %57 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 1, !dbg !3604
  %58 = load i32, i32* %57, align 4, !dbg !3604
  %59 = add i32 %58, %55, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %59, metadata !3554, metadata !DIExpression()), !dbg !3605
  %60 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 2, !dbg !3604
  %61 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %60) #24, !dbg !3604
  %62 = icmp eq i32 %59, %61, !dbg !3604
  call void @llvm.dbg.value(metadata i1 %62, metadata !3556, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3605
  br i1 %62, label %63, label %66, !dbg !3604

63:                                               ; preds = %51
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3606
  %64 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3607
  %65 = zext i8 %64 to i32, !dbg !3607
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i32 0, i32 0), i32 noundef %65) #25, !dbg !3607
  tail call fastcc void @k_msleep(i32 noundef 100) #24, !dbg !3614
  br label %97, !dbg !3615, !llvm.loop !3616

66:                                               ; preds = %51
  %67 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3618
  %68 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %67, i32 0, i32 0, i32 1, !dbg !3618
  %69 = load i32, i32* %68, align 4, !dbg !3618
  %70 = add i32 %69, 1, !dbg !3618
  store i32 %70, i32* %68, align 4, !dbg !3618
  %71 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3604
  %72 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 0, i32 4, !dbg !3604
  %73 = load i32, i32* %72, align 4, !dbg !3604
  %74 = and i32 %73, %59, !dbg !3604
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3606
  %75 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3621
  %76 = zext i8 %75 to i32, !dbg !3621
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 noundef %76, i32 noundef %52) #25, !dbg !3621
  %77 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 0, !dbg !3626
  %78 = load i32, i32* %77, align 4, !dbg !3626
  %79 = icmp slt i32 %78, 0, !dbg !3628
  br i1 %79, label %80, label %83, !dbg !3629

80:                                               ; preds = %66
  %81 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #24, !dbg !3630
  %82 = zext i8 %81 to i32, !dbg !3630
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i32 noundef %82) #25, !dbg !3630
  br label %83, !dbg !3636

83:                                               ; preds = %80, %66
  %84 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 1, !dbg !3637
  %85 = load i8*, i8** %84, align 4, !dbg !3637
  %86 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %52, !dbg !3638
  store i8* %85, i8** %86, align 4, !dbg !3639
  %87 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3640
  %88 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %87, i32 0, i32 0, i32 1, !dbg !3640
  %89 = load i32, i32* %88, align 4, !dbg !3640
  %90 = icmp eq i32 %89, 0, !dbg !3640
  br i1 %90, label %95, label %91, !dbg !3643

91:                                               ; preds = %83
  %92 = add i32 %89, -1, !dbg !3644
  store i32 %92, i32* %88, align 4, !dbg !3644
  %93 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3644
  %94 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %93, i32 0, i32 0, i32 3, !dbg !3644
  tail call fastcc void @atomic_add(i32* noundef nonnull %94, i32 noundef 1) #24, !dbg !3644
  br label %95, !dbg !3644

95:                                               ; preds = %91, %83
  %96 = add nsw i32 %52, 1, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %96, metadata !3547, metadata !DIExpression()), !dbg !3594
  br label %97, !dbg !3617

97:                                               ; preds = %95, %63
  %98 = phi i32 [ %52, %63 ], [ %96, %95 ], !dbg !3594
  call void @llvm.dbg.value(metadata i32 %98, metadata !3547, metadata !DIExpression()), !dbg !3594
  %99 = icmp slt i32 %98, 4, !dbg !3647
  br i1 %99, label %51, label %100, !dbg !3603

100:                                              ; preds = %97
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3648
  call void @llvm.dbg.value(metadata i32 0, metadata !3547, metadata !DIExpression()), !dbg !3594
  %101 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3571
  %102 = zext i8 %101 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !3547, metadata !DIExpression()), !dbg !3594
  br label %103, !dbg !3653

103:                                              ; preds = %100, %103
  %104 = phi i32 [ 0, %100 ], [ %107, %103 ]
  call void @llvm.dbg.value(metadata i32 %104, metadata !3547, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), metadata !3557, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i1 false, metadata !3562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3654
  call void @llvm.dbg.value(metadata i32 0, metadata !3563, metadata !DIExpression()), !dbg !3654
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 noundef %102, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0)) #25, !dbg !3655
  %105 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %104, !dbg !3659
  %106 = load i8*, i8** %105, align 4, !dbg !3659
  tail call void @z_log_minimal_hexdump_print(i32 noundef 4, i8* noundef %106, i32 noundef 16) #25, !dbg !3659
  %107 = add nuw nsw i32 %104, 1, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %107, metadata !3547, metadata !DIExpression()), !dbg !3594
  %108 = icmp eq i32 %107, 4, !dbg !3661
  br i1 %108, label %109, label %103, !dbg !3653, !llvm.loop !3662

109:                                              ; preds = %103
  tail call fastcc void @k_msleep(i32 noundef 300) #24, !dbg !3664
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3665
  call void @llvm.dbg.value(metadata i32 0, metadata !3547, metadata !DIExpression()), !dbg !3594
  %110 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3670
  br label %111, !dbg !3671

111:                                              ; preds = %109, %150
  %112 = phi %struct.rtio_sq* [ %110, %109 ], [ %151, %150 ], !dbg !3670
  %113 = phi i32 [ 0, %109 ], [ %152, %150 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !3547, metadata !DIExpression()), !dbg !3594
  %114 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %112, i32 0, i32 0, i32 2, !dbg !3670
  %115 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %114) #24, !dbg !3670
  %116 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3670
  %117 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 0, !dbg !3670
  %118 = load i32, i32* %117, align 4, !dbg !3670
  %119 = add i32 %118, %115, !dbg !3670
  call void @llvm.dbg.value(metadata i32 %119, metadata !3568, metadata !DIExpression()), !dbg !3672
  %120 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 3, !dbg !3670
  %121 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %120) #24, !dbg !3670
  %122 = sub i32 %119, %121, !dbg !3670
  %123 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3670
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 4, !dbg !3670
  %125 = load i32, i32* %124, align 4, !dbg !3670
  %126 = add i32 %125, 1, !dbg !3670
  %127 = icmp ult i32 %122, %126, !dbg !3670
  call void @llvm.dbg.value(metadata i1 %127, metadata !3570, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3672
  br i1 %127, label %128, label %137, !dbg !3670

128:                                              ; preds = %111
  %129 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 0, !dbg !3673
  %130 = load i32, i32* %129, align 4, !dbg !3673
  %131 = add i32 %130, 1, !dbg !3673
  store i32 %131, i32* %129, align 4, !dbg !3673
  %132 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3670
  %133 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 0, i32 4, !dbg !3670
  %134 = load i32, i32* %133, align 4, !dbg !3670
  %135 = and i32 %134, %119, !dbg !3670
  %136 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 1, i32 %135, !dbg !3670
  br label %137, !dbg !3670

137:                                              ; preds = %111, %128
  %138 = phi %struct.rtio_sqe* [ %136, %128 ], [ null, %111 ], !dbg !3670
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %138, metadata !3564, metadata !DIExpression()), !dbg !3676
  %139 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %113, !dbg !3677
  %140 = load i8*, i8** %139, align 4, !dbg !3677
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %138, %struct.rtio_iodev* noundef %2, i8* noundef %140, i8* noundef %140) #24, !dbg !3678
  %141 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3679
  %142 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %141, i32 0, i32 0, i32 0, !dbg !3679
  %143 = load i32, i32* %142, align 4, !dbg !3679
  %144 = icmp eq i32 %143, 0, !dbg !3679
  br i1 %144, label %150, label %145, !dbg !3682

145:                                              ; preds = %137
  %146 = add i32 %143, -1, !dbg !3683
  store i32 %146, i32* %142, align 4, !dbg !3683
  %147 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3683
  %148 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %147, i32 0, i32 0, i32 2, !dbg !3683
  tail call fastcc void @atomic_add(i32* noundef nonnull %148, i32 noundef 1) #24, !dbg !3683
  %149 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3670
  br label %150, !dbg !3683

150:                                              ; preds = %145, %137
  %151 = phi %struct.rtio_sq* [ %149, %145 ], [ %141, %137 ]
  %152 = add nuw nsw i32 %113, 1, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %152, metadata !3547, metadata !DIExpression()), !dbg !3594
  %153 = icmp eq i32 %152, 4, !dbg !3686
  br i1 %153, label %154, label %111, !dbg !3671, !llvm.loop !3687

154:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3689
  br label %50, !dbg !3576, !llvm.loop !3690
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !3691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3696, metadata !DIExpression()), !dbg !3697
  %2 = add i32 %0, -1, !dbg !3698
  %3 = icmp ult i32 %2, 4, !dbg !3698
  %4 = shl i32 %2, 3, !dbg !3698
  %5 = lshr i32 1145657157, %4, !dbg !3698
  %6 = trunc i32 %5 to i8, !dbg !3698
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3698
  ret i8 %7, !dbg !3699
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3700 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3708, metadata !DIExpression()), !dbg !3709
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3710
  ret i32 %2, !dbg !3711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* nocapture noundef writeonly %0, %struct.rtio_iodev* noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #6 !dbg !3712 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3716, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %1, metadata !3717, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i8 -1, metadata !3718, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i8* %2, metadata !3719, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 16, metadata !3720, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i8* %3, metadata !3721, metadata !DIExpression()), !dbg !3722
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 0, !dbg !3723
  store i8 1, i8* %5, align 4, !dbg !3724
  %6 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 1, !dbg !3725
  store i8 -1, i8* %6, align 1, !dbg !3726
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3727
  store %struct.rtio_iodev* %1, %struct.rtio_iodev** %7, align 4, !dbg !3728
  %8 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 0, !dbg !3729
  store i32 16, i32* %8, align 4, !dbg !3730
  %9 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 1, !dbg !3731
  store i8* %2, i8** %9, align 4, !dbg !3732
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 4, !dbg !3733
  store i8* %3, i8** %10, align 4, !dbg !3734
  ret void, !dbg !3735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3736 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3741, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i32 %1, metadata !3742, metadata !DIExpression()), !dbg !3743
  %3 = atomicrmw add i32* %0, i32 %1 seq_cst, align 4, !dbg !3744
  ret void, !dbg !3745
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_submit() unnamed_addr #1 !dbg !3746 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3751, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 4, metadata !3752, metadata !DIExpression()), !dbg !3753
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3754, !srcloc !3756
  tail call fastcc void @z_impl_rtio_submit() #24, !dbg !3757
  ret void, !dbg !3758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3763, metadata !DIExpression()), !dbg !3764
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3765
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3766
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3766
  ret void, !dbg !3767
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3768 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3773, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i64 %0, metadata !3775, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 1000, metadata !3780, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 10000, metadata !3781, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 1, metadata !3782, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 0, metadata !3783, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 1, metadata !3784, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 0, metadata !3785, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 1, metadata !3786, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i8 0, metadata !3787, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i64 0, metadata !3788, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i64 0, metadata !3788, metadata !DIExpression()), !dbg !3792
  %2 = mul i64 %0, 10, !dbg !3794
  ret i64 %2, !dbg !3800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3801 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3810, metadata !DIExpression()), !dbg !3811
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3812, !srcloc !3814
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3815
  ret void, !dbg !3816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_rtio_submit() unnamed_addr #1 !dbg !3817 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3819, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i32 4, metadata !3820, metadata !DIExpression()), !dbg !3826
  %1 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3827
  %2 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %1, i32 0, i32 0, i32 0, !dbg !3827
  %3 = load i32, i32* %2, align 4, !dbg !3827
  %4 = icmp eq i32 %3, 0, !dbg !3827
  br i1 %4, label %8, label %5, !dbg !3828

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 %3, metadata !3822, metadata !DIExpression()), !dbg !3829
  store i32 0, i32* %2, align 4, !dbg !3830
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3830
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !3830
  tail call fastcc void @atomic_add(i32* noundef nonnull %7, i32 noundef %3) #24, !dbg !3830
  br label %8, !dbg !3830

8:                                                ; preds = %5, %0
  %9 = load %struct.rtio_executor*, %struct.rtio_executor** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 0), align 4, !dbg !3831
  %10 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %9, i32 0, i32 0, !dbg !3832
  %11 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %10, align 4, !dbg !3832
  %12 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %11, i32 0, i32 0, !dbg !3833
  %13 = load i32 (%struct.rtio*)*, i32 (%struct.rtio*)** %12, align 4, !dbg !3833
  %14 = tail call i32 %13(%struct.rtio* noundef nonnull @ez_io) #25, !dbg !3834
  call void @llvm.dbg.value(metadata i32 %14, metadata !3821, metadata !DIExpression()), !dbg !3826
  %15 = icmp eq i32 %14, 0, !dbg !3835
  br i1 %15, label %16, label %38, !dbg !3837

16:                                               ; preds = %8
  %17 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3838
  %18 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 2, !dbg !3838
  %19 = load i32, i32* %18, align 4, !dbg !3838
  %20 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 3, !dbg !3838
  %21 = load i32, i32* %20, align 4, !dbg !3838
  %22 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 1, !dbg !3838
  %23 = load i32, i32* %22, align 4, !dbg !3838
  %24 = add i32 %21, %23, !dbg !3838
  %25 = sub i32 %19, %24, !dbg !3838
  %26 = icmp ult i32 %25, 4, !dbg !3840
  br i1 %26, label %27, label %38, !dbg !3841

27:                                               ; preds = %16, %27
  tail call fastcc void @k_yield() #24, !dbg !3842
  %28 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3838
  %29 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 2, !dbg !3838
  %30 = load i32, i32* %29, align 4, !dbg !3838
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 3, !dbg !3838
  %32 = load i32, i32* %31, align 4, !dbg !3838
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 1, !dbg !3838
  %34 = load i32, i32* %33, align 4, !dbg !3838
  %35 = add i32 %32, %34, !dbg !3838
  %36 = sub i32 %30, %35, !dbg !3838
  %37 = icmp ult i32 %36, 4, !dbg !3840
  br i1 %37, label %27, label %38, !dbg !3841, !llvm.loop !3844

38:                                               ; preds = %27, %16, %8
  ret void, !dbg !3846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !3847 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3848, !srcloc !3850
  tail call void @z_impl_k_yield() #25, !dbg !3851
  ret void, !dbg !3852
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #1 !dbg !3853 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3855, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !3856, metadata !DIExpression()), !dbg !3864
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3865
  %4 = bitcast %struct.rtio_iodev** %3 to %struct.vnd_sensor_data**, !dbg !3865
  %5 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %4, align 4, !dbg !3865
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %5, metadata !3857, metadata !DIExpression()), !dbg !3864
  %6 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 2, !dbg !3866
  %7 = load %struct.device*, %struct.device** %6, align 8, !dbg !3866
  call void @llvm.dbg.value(metadata %struct.device* %7, metadata !3858, metadata !DIExpression()), !dbg !3864
  %8 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 0, i32 1, !dbg !3867
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3867
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !3867
  %11 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %10) #24, !dbg !3867
  %12 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3867
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 0, !dbg !3867
  %14 = load i32, i32* %13, align 4, !dbg !3867
  %15 = add i32 %14, %11, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %15, metadata !3861, metadata !DIExpression()), !dbg !3868
  %16 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 3, !dbg !3867
  %17 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %16) #24, !dbg !3867
  %18 = sub i32 %15, %17, !dbg !3867
  %19 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3867
  %20 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 4, !dbg !3867
  %21 = load i32, i32* %20, align 4, !dbg !3867
  %22 = add i32 %21, 1, !dbg !3867
  %23 = icmp ult i32 %18, %22, !dbg !3867
  call void @llvm.dbg.value(metadata i1 %23, metadata !3863, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3868
  br i1 %23, label %24, label %42, !dbg !3867

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 0, !dbg !3869
  %26 = load i32, i32* %25, align 4, !dbg !3869
  %27 = add i32 %26, 1, !dbg !3869
  store i32 %27, i32* %25, align 4, !dbg !3869
  %28 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3867
  %29 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 0, i32 4, !dbg !3867
  %30 = load i32, i32* %29, align 4, !dbg !3867
  %31 = and i32 %30, %15, !dbg !3867
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3859, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3864
  %32 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 0, !dbg !3872
  store %struct.rtio_sqe* %0, %struct.rtio_sqe** %32, align 4, !dbg !3875
  %33 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 1, !dbg !3876
  store %struct.rtio* %1, %struct.rtio** %33, align 4, !dbg !3877
  %34 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3878
  %35 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %34, i32 0, i32 0, i32 0, !dbg !3878
  %36 = load i32, i32* %35, align 4, !dbg !3878
  %37 = icmp eq i32 %36, 0, !dbg !3878
  br i1 %37, label %47, label %38, !dbg !3881

38:                                               ; preds = %24
  %39 = add i32 %36, -1, !dbg !3882
  store i32 %39, i32* %35, align 4, !dbg !3882
  %40 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3882
  %41 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %40, i32 0, i32 0, i32 2, !dbg !3882
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %41) #24, !dbg !3882
  br label %47, !dbg !3882

42:                                               ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3859, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3864
  %43 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !3884
  %44 = zext i8 %43 to i32, !dbg !3884
  %45 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !3884
  %46 = load i8*, i8** %45, align 4, !dbg !3884
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef %44, i8* noundef %46) #25, !dbg !3884
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %1, %struct.rtio_sqe* noundef nonnull %0, i32 noundef -11) #24, !dbg !3890
  br label %47

47:                                               ; preds = %24, %38, %42
  ret void, !dbg !3891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.13(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3892 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3894, metadata !DIExpression()), !dbg !3895
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3896
  ret i32 %2, !dbg !3897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.14(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3898 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3900, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata i32 1, metadata !3901, metadata !DIExpression()), !dbg !3902
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !3903
  ret void, !dbg !3904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef %0) unnamed_addr #4 !dbg !3905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3907, metadata !DIExpression()), !dbg !3908
  %2 = add i32 %0, -1, !dbg !3909
  %3 = icmp ult i32 %2, 4, !dbg !3909
  %4 = shl i32 %2, 3, !dbg !3909
  %5 = lshr i32 1145657157, %4, !dbg !3909
  %6 = trunc i32 %5 to i8, !dbg !3909
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3909
  ret i8 %7, !dbg !3910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3911 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !3913, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !3914, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.value(metadata i32 %2, metadata !3915, metadata !DIExpression()), !dbg !3916
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !3917
  %5 = load %struct.rtio_executor*, %struct.rtio_executor** %4, align 4, !dbg !3917
  %6 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %5, i32 0, i32 0, !dbg !3918
  %7 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %6, align 4, !dbg !3918
  %8 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %7, i32 0, i32 2, !dbg !3919
  %9 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %8, align 4, !dbg !3919
  tail call void %9(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) #25, !dbg !3920
  ret void, !dbg !3921
}

; Function Attrs: noinline nounwind optsize
define internal i32 @vnd_sensor_init(%struct.device* noundef %0) #1 !dbg !3922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3924, metadata !DIExpression()), !dbg !3929
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3930
  %3 = bitcast i8** %2 to %struct.vnd_sensor_config**, !dbg !3930
  %4 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %3, align 4, !dbg !3930
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %4, metadata !3925, metadata !DIExpression()), !dbg !3929
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3931
  %6 = bitcast i8** %5 to %struct.vnd_sensor_data**, !dbg !3931
  %7 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %6, align 4, !dbg !3931
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %7, metadata !3927, metadata !DIExpression()), !dbg !3929
  %8 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %4, i32 0, i32 0, !dbg !3932
  %9 = load i32, i32* %8, align 4, !dbg !3932
  call void @llvm.dbg.value(metadata i32 %9, metadata !3928, metadata !DIExpression()), !dbg !3929
  %10 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 2, !dbg !3933
  store %struct.device* %0, %struct.device** %10, align 8, !dbg !3934
  %11 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 1, !dbg !3935
  tail call void @k_timer_init(%struct.k_timer* noundef nonnull %11, void (%struct.k_timer*)* noundef nonnull @vnd_sensor_timer_expiry, void (%struct.k_timer*)* noundef null) #25, !dbg !3936
  %12 = zext i32 %9 to i64, !dbg !3937
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %12) #24, !dbg !3937
  %14 = insertvalue [1 x i64] poison, i64 %13, 0, !dbg !3938
  tail call fastcc void @k_timer_start(%struct.k_timer* noundef nonnull %11, [1 x i64] %14, [1 x i64] %14) #24, !dbg !3938
  ret i32 0, !dbg !3939
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_timer_expiry(%struct.k_timer* nocapture noundef readonly %0) #1 !dbg !3940 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3942, metadata !DIExpression()), !dbg !3944
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 -1, i32 4, !dbg !3945
  call void @llvm.dbg.value(metadata %struct.k_timeout_t* %2, metadata !3943, metadata !DIExpression()), !dbg !3944
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 9, !dbg !3946
  %4 = bitcast %struct.k_timeout_t* %3 to %struct.device**, !dbg !3946
  %5 = load %struct.device*, %struct.device** %4, align 8, !dbg !3946
  tail call fastcc void @vnd_sensor_handle_int(%struct.device* noundef %5) #24, !dbg !3947
  ret void, !dbg !3948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %0) unnamed_addr #4 !dbg !3949 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3951, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i64 %0, metadata !3953, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i32 1000, metadata !3956, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i32 10000, metadata !3957, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8 1, metadata !3958, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8 0, metadata !3959, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8 1, metadata !3960, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8 0, metadata !3961, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8 1, metadata !3962, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8 0, metadata !3963, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i64 0, metadata !3964, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i64 0, metadata !3964, metadata !DIExpression()), !dbg !3968
  %2 = mul i64 %0, 10, !dbg !3970
  ret i64 %2, !dbg !3976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) unnamed_addr #1 !dbg !3977 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3982, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i64 undef, metadata !3983, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3981, metadata !DIExpression()), !dbg !3984
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3985, !srcloc !3987
  tail call void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) #25, !dbg !3988
  ret void, !dbg !3989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_handle_int(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3990 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3994, metadata !DIExpression()), !dbg !4000
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4001
  %3 = bitcast i8** %2 to %struct.vnd_sensor_data**, !dbg !4001
  %4 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %3, align 4, !dbg !4001
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %4, metadata !3995, metadata !DIExpression()), !dbg !4000
  %5 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %4, i32 0, i32 0, i32 1, !dbg !4002
  %6 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4002
  %7 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %6, i32 0, i32 0, i32 3, !dbg !4002
  %8 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %7) #24, !dbg !4002
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4002
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 1, !dbg !4002
  %11 = load i32, i32* %10, align 4, !dbg !4002
  %12 = add i32 %11, %8, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %12, metadata !3997, metadata !DIExpression()), !dbg !4003
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !4002
  %14 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %13) #24, !dbg !4002
  %15 = icmp eq i32 %12, %14, !dbg !4002
  call void @llvm.dbg.value(metadata i1 %15, metadata !3999, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4003
  br i1 %15, label %37, label %16, !dbg !4002

16:                                               ; preds = %1
  %17 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4004
  %18 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %17, i32 0, i32 0, i32 1, !dbg !4004
  %19 = load i32, i32* %18, align 4, !dbg !4004
  %20 = add i32 %19, 1, !dbg !4004
  store i32 %20, i32* %18, align 4, !dbg !4004
  %21 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4002
  %22 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 0, i32 4, !dbg !4002
  %23 = load i32, i32* %22, align 4, !dbg !4002
  %24 = and i32 %23, %12, !dbg !4002
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !3996, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4000
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 0, !dbg !4007
  %26 = load %struct.rtio_sqe*, %struct.rtio_sqe** %25, align 4, !dbg !4007
  %27 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 1, !dbg !4010
  %28 = load %struct.rtio*, %struct.rtio** %27, align 4, !dbg !4010
  tail call fastcc void @vnd_sensor_iodev_execute(%struct.device* noundef nonnull %0, %struct.rtio_sqe* noundef %26, %struct.rtio* noundef %28) #24, !dbg !4011
  %29 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4012
  %30 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %29, i32 0, i32 0, i32 1, !dbg !4012
  %31 = load i32, i32* %30, align 4, !dbg !4012
  %32 = icmp eq i32 %31, 0, !dbg !4012
  br i1 %32, label %42, label %33, !dbg !4015

33:                                               ; preds = %16
  %34 = add i32 %31, -1, !dbg !4016
  store i32 %34, i32* %30, align 4, !dbg !4016
  %35 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4016
  %36 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %35, i32 0, i32 0, i32 3, !dbg !4016
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %36) #24, !dbg !4016
  br label %42, !dbg !4016

37:                                               ; preds = %1
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !3996, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4000
  %38 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4018
  %39 = zext i8 %38 to i32, !dbg !4018
  %40 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4018
  %41 = load i8*, i8** %40, align 4, !dbg !4018
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.19, i32 0, i32 0), i32 noundef %39, i8* noundef %41) #25, !dbg !4018
  br label %42

42:                                               ; preds = %16, %33, %37
  ret void, !dbg !4024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_iodev_execute(%struct.device* nocapture noundef readonly %0, %struct.rtio_sqe* noundef %1, %struct.rtio* noundef %2) unnamed_addr #1 !dbg !4025 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4029, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4030, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata %struct.rtio* %2, metadata !4031, metadata !DIExpression()), !dbg !4033
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 0, !dbg !4034
  %5 = load i8, i8* %4, align 4, !dbg !4034
  %6 = icmp eq i8 %5, 1, !dbg !4036
  br i1 %6, label %12, label %7, !dbg !4037

7:                                                ; preds = %3
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4038
  %9 = zext i8 %8 to i32, !dbg !4038
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4038
  %11 = load i8*, i8** %10, align 4, !dbg !4038
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.20, i32 0, i32 0), i32 noundef %9, i8* noundef %11) #25, !dbg !4038
  call void @llvm.dbg.value(metadata i32 %17, metadata !4032, metadata !DIExpression()), !dbg !4033
  br label %19, !dbg !4044

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 1, !dbg !4045
  %14 = load i8*, i8** %13, align 4, !dbg !4045
  %15 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 0, !dbg !4047
  %16 = load i32, i32* %15, align 4, !dbg !4047
  %17 = tail call fastcc i32 @vnd_sensor_iodev_read(%struct.device* noundef %0, i8* noundef %14, i32 noundef %16) #24, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %17, metadata !4032, metadata !DIExpression()), !dbg !4033
  %18 = icmp slt i32 %17, 0, !dbg !4049
  br i1 %18, label %19, label %21, !dbg !4044

19:                                               ; preds = %7, %12
  %20 = phi i32 [ -22, %7 ], [ %17, %12 ]
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1, i32 noundef %20) #24, !dbg !4051
  br label %22, !dbg !4053

21:                                               ; preds = %12
  tail call fastcc void @rtio_sqe_ok(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1) #24, !dbg !4054
  br label %22

22:                                               ; preds = %21, %19
  ret void, !dbg !4056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @vnd_sensor_iodev_read(%struct.device* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !4057 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4061, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8* %1, metadata !4062, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i32 %2, metadata !4063, metadata !DIExpression()), !dbg !4070
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4071
  %5 = bitcast i8** %4 to %struct.vnd_sensor_config**, !dbg !4071
  %6 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %5, align 4, !dbg !4071
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %6, metadata !4064, metadata !DIExpression()), !dbg !4070
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4072
  %8 = bitcast i8** %7 to %struct.vnd_sensor_data**, !dbg !4072
  %9 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %8, align 4, !dbg !4072
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %9, metadata !4065, metadata !DIExpression()), !dbg !4070
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 4) #24, !dbg !4073
  %11 = zext i8 %10 to i32, !dbg !4073
  %12 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4073
  %13 = load i8*, i8** %12, align 4, !dbg !4073
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.21, i32 0, i32 0), i32 noundef %11, i8* noundef %13, i32 noundef %2, i8* noundef %1) #25, !dbg !4073
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4078, !srcloc !4087
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %15, metadata !4084, metadata !DIExpression()) #23, !dbg !4088
  call void @llvm.dbg.value(metadata i32 undef, metadata !4085, metadata !DIExpression()) #23, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %15, metadata !4067, metadata !DIExpression()), !dbg !4070
  %16 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %9, i32 0, i32 4, !dbg !4089
  %17 = load i32, i32* %16, align 4, !dbg !4090
  %18 = add i32 %17, 1, !dbg !4090
  store i32 %18, i32* %16, align 4, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %17, metadata !4066, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i32 %15, metadata !4091, metadata !DIExpression()) #23, !dbg !4096
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !4098, !srcloc !4099
  %19 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %6, i32 0, i32 1, !dbg !4100
  %20 = load i32, i32* %19, align 4, !dbg !4100
  %21 = icmp ugt i32 %20, %2, !dbg !4102
  br i1 %21, label %26, label %22, !dbg !4103

22:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !4068, metadata !DIExpression()), !dbg !4104
  %23 = icmp ult i32 %20, %2, !dbg !4105
  %24 = select i1 %23, i32 %20, i32 %2, !dbg !4105
  %25 = icmp eq i32 %24, 0, !dbg !4107
  br i1 %25, label %42, label %30, !dbg !4108

26:                                               ; preds = %3
  %27 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4109
  %28 = zext i8 %27 to i32, !dbg !4109
  %29 = load i8*, i8** %12, align 4, !dbg !4109
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.22, i32 0, i32 0), i32 noundef %28, i8* noundef %29) #25, !dbg !4109
  br label %42, !dbg !4115

30:                                               ; preds = %22, %30
  %31 = phi i32 [ %38, %30 ], [ %20, %22 ]
  %32 = phi i32 [ %37, %30 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !4068, metadata !DIExpression()), !dbg !4104
  %33 = mul i32 %31, %17, !dbg !4116
  %34 = add i32 %33, %32, !dbg !4118
  %35 = trunc i32 %34 to i8, !dbg !4119
  %36 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !4120
  store i8 %35, i8* %36, align 1, !dbg !4121
  %37 = add nuw nsw i32 %32, 1, !dbg !4122
  call void @llvm.dbg.value(metadata i32 %37, metadata !4068, metadata !DIExpression()), !dbg !4104
  %38 = load i32, i32* %19, align 4, !dbg !4105
  %39 = icmp ult i32 %38, %2, !dbg !4105
  %40 = select i1 %39, i32 %38, i32 %2, !dbg !4105
  %41 = icmp ult i32 %37, %40, !dbg !4107
  br i1 %41, label %30, label %42, !dbg !4108, !llvm.loop !4123

42:                                               ; preds = %30, %22, %26
  %43 = phi i32 [ -12, %26 ], [ 0, %22 ], [ 0, %30 ], !dbg !4070
  ret i32 %43, !dbg !4125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1) unnamed_addr #1 !dbg !4126 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !4128, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4129, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i32 0, metadata !4130, metadata !DIExpression()), !dbg !4131
  %3 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !4132
  %4 = load %struct.rtio_executor*, %struct.rtio_executor** %3, align 4, !dbg !4132
  %5 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %4, i32 0, i32 0, !dbg !4133
  %6 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %5, align 4, !dbg !4133
  %7 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %6, i32 0, i32 1, !dbg !4134
  %8 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %7, align 4, !dbg !4134
  tail call void %8(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef 0) #25, !dbg !4135
  ret void, !dbg !4136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4137 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %0, metadata !4148, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %1, metadata !4149, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %2, metadata !4150, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %3, metadata !4151, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %0, metadata !4153, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %0, metadata !4154, metadata !DIExpression()), !dbg !4215
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4216
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4216
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4157, metadata !DIExpression()), !dbg !4217
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4218
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4218
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4159, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 0, metadata !4160, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 0, metadata !4161, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 0, metadata !4162, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 -1, metadata !4163, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 0, metadata !4166, metadata !DIExpression()), !dbg !4215
  %12 = and i32 %2, 4, !dbg !4220
  %13 = icmp eq i32 %12, 0, !dbg !4221
  call void @llvm.dbg.value(metadata i1 %13, metadata !4167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4215
  %14 = lshr i32 %2, 3, !dbg !4222
  %15 = and i32 %14, 7, !dbg !4222
  %16 = add nuw nsw i32 %15, 1, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %16, metadata !4168, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 0, metadata !4169, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %0, metadata !4170, metadata !DIExpression()), !dbg !4215
  %17 = ptrtoint i8* %0 to i32, !dbg !4224
  %18 = and i32 %17, 3, !dbg !4226
  %19 = icmp eq i32 %18, 0, !dbg !4226
  br i1 %19, label %20, label %316, !dbg !4227

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4228
  call void @llvm.dbg.value(metadata i8* %21, metadata !4154, metadata !DIExpression()), !dbg !4215
  %22 = icmp eq i8* %0, null, !dbg !4229
  %23 = and i32 %1, 7, !dbg !4231
  %24 = sub nuw nsw i32 8, %23, !dbg !4231
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4231
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4231
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %27, metadata !4149, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %26, metadata !4154, metadata !DIExpression()), !dbg !4215
  br i1 %22, label %33, label %28, !dbg !4232

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4234
  %30 = sub i32 4, %17, !dbg !4234
  %31 = add i32 %30, %29, !dbg !4235
  %32 = icmp ugt i32 %31, %27, !dbg !4236
  br i1 %32, label %316, label %33, !dbg !4237

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4238
  call void @llvm.dbg.value(metadata i8* %34, metadata !4151, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %3, metadata !4165, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 4, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 4, metadata !4155, metadata !DIExpression()), !dbg !4215
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4239

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %42, metadata !4151, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %43, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %44, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %45, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %72, metadata !4163, metadata !DIExpression()), !dbg !4215
  br i1 %46, label %73, label %47, !dbg !4240

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4241
  %49 = zext i1 %48 to i32, !dbg !4245
  %50 = add nsw i32 %72, %49, !dbg !4245
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4245
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %52, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %51, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %50, metadata !4163, metadata !DIExpression()), !dbg !4215
  br label %53, !dbg !4246

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %40, metadata !4151, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %58, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %57, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %56, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %54, metadata !4163, metadata !DIExpression()), !dbg !4215
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4247
  call void @llvm.dbg.value(metadata i8* %60, metadata !4151, metadata !DIExpression()), !dbg !4215
  %61 = load i8, i8* %60, align 1, !dbg !4249
  %62 = icmp eq i8 %61, 0, !dbg !4250
  br i1 %62, label %223, label %63, !dbg !4251, !llvm.loop !4252

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4240

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4255

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4166, metadata !DIExpression()), !dbg !4215
  %75 = add nsw i32 %72, -1, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %75, metadata !4163, metadata !DIExpression()), !dbg !4215
  br label %53, !dbg !4257

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4258

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 4, metadata !4155, metadata !DIExpression()), !dbg !4215
  br label %53, !dbg !4259

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 4, metadata !4155, metadata !DIExpression()), !dbg !4215
  br label %53, !dbg !4260

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4261
  %81 = icmp eq i8 %80, 108, !dbg !4263
  br i1 %81, label %82, label %109, !dbg !4264

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4265
  %84 = load i8, i8* %83, align 1, !dbg !4265
  %85 = icmp eq i8 %84, 108, !dbg !4268
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4269
  %89 = add i32 %88, 7, !dbg !4269
  %90 = and i32 %89, -8, !dbg !4269
  %91 = inttoptr i32 %90 to i8*, !dbg !4269
  %92 = inttoptr i32 %90 to double*, !dbg !4269
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4269
  %94 = load double, double* %92, align 8, !dbg !4269
  call void @llvm.dbg.value(metadata i8* %93, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 8, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 8, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata double %94, metadata !4183, metadata !DIExpression()), !dbg !4271
  %95 = ptrtoint i8* %43 to i32, !dbg !4272
  %96 = add i32 %95, 7, !dbg !4272
  %97 = and i32 %96, -8, !dbg !4272
  %98 = inttoptr i32 %97 to i8*, !dbg !4273
  call void @llvm.dbg.value(metadata i8* %98, metadata !4154, metadata !DIExpression()), !dbg !4215
  br i1 %22, label %104, label %99, !dbg !4274

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4275
  %101 = icmp ugt i32 %100, %194, !dbg !4279
  br i1 %101, label %316, label %102, !dbg !4280

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4281
  store double %94, double* %103, align 8, !dbg !4281
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4284
  call void @llvm.dbg.value(metadata i8* %105, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4215
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4166, metadata !DIExpression()), !dbg !4215
  br label %53, !dbg !4285

107:                                              ; preds = %73, %73
  br label %109, !dbg !4286

108:                                              ; preds = %73
  br label %109, !dbg !4286

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4215
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4215
  call void @llvm.dbg.value(metadata i32 %113, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %112, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4169, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4215
  %114 = ptrtoint i8* %43 to i32, !dbg !4286
  %115 = add i32 %114, -1, !dbg !4286
  %116 = add i32 %115, %112, !dbg !4286
  %117 = sub i32 0, %112, !dbg !4286
  %118 = and i32 %116, %117, !dbg !4286
  %119 = inttoptr i32 %118 to i8*, !dbg !4287
  call void @llvm.dbg.value(metadata i8* %119, metadata !4154, metadata !DIExpression()), !dbg !4215
  br i1 %22, label %124, label %120, !dbg !4288

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4290
  %122 = add i32 %121, %118, !dbg !4291
  %123 = icmp ugt i32 %122, %194, !dbg !4292
  br i1 %123, label %316, label %124, !dbg !4293

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4294

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4287
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4295
  call void @llvm.dbg.value(metadata i8* %127, metadata !4152, metadata !DIExpression()), !dbg !4215
  %128 = bitcast i8* %41 to i8**, !dbg !4295
  %129 = load i8*, i8** %128, align 4, !dbg !4295
  call void @llvm.dbg.value(metadata i8* %129, metadata !4165, metadata !DIExpression()), !dbg !4215
  br label %130, !dbg !4296

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4297
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4298
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4215
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4299
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4215
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4300
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4215
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4215
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4215
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4215
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4301
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %142, metadata !4149, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %141, metadata !4151, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %140, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %139, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %138, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %137, metadata !4160, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %136, metadata !4168, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %135, metadata !4161, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %133, metadata !4165, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %132, metadata !4163, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %131, metadata !4162, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.label(metadata !4214), !dbg !4303
  br i1 %22, label %146, label %144, !dbg !4304

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4305
  store i8* %133, i8** %145, align 4, !dbg !4308
  br label %146, !dbg !4309

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4310
  call void @llvm.dbg.value(metadata i32 %147, metadata !4168, metadata !DIExpression()), !dbg !4215
  %148 = icmp sgt i32 %136, 0, !dbg !4311
  br i1 %148, label %152, label %149, !dbg !4312

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !4313
  %151 = zext i1 %150 to i32, !dbg !4313
  br label %152, !dbg !4312

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4312
  %154 = icmp eq i32 %153, 0, !dbg !4312
  call void @llvm.dbg.value(metadata i1 %154, metadata !4192, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4314
  call void @llvm.dbg.value(metadata i1 %36, metadata !4195, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4314
  %155 = or i1 %36, %154, !dbg !4315
  br i1 %155, label %156, label %190, !dbg !4315

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4316
  %158 = sub i32 %157, %17, !dbg !4316
  %159 = lshr i32 %158, 2, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %159, metadata !4196, metadata !DIExpression()), !dbg !4318
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4319
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4319
  br i1 %163, label %316, label %164, !dbg !4319

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4321

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4322
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4325
  store i8 %166, i8* %167, align 1, !dbg !4326
  %168 = trunc i32 %132 to i8, !dbg !4327
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4328
  store i8 %168, i8* %169, align 1, !dbg !4329
  br i1 %154, label %173, label %170, !dbg !4330

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4331
  store i8 %171, i8* %167, align 1, !dbg !4331
  %172 = add i32 %131, 1, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %172, metadata !4162, metadata !DIExpression()), !dbg !4215
  br label %185, !dbg !4335

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4336
  call void @llvm.dbg.value(metadata i32 %174, metadata !4161, metadata !DIExpression()), !dbg !4215
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4338

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %177, metadata !4149, metadata !DIExpression()), !dbg !4215
  br label %185, !dbg !4342

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4343

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4344
  call void @llvm.dbg.value(metadata i32 %180, metadata !4149, metadata !DIExpression()), !dbg !4215
  br label %185, !dbg !4347

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !4348
  %183 = add i32 %142, 2, !dbg !4350
  %184 = add i32 %183, %182, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %184, metadata !4149, metadata !DIExpression()), !dbg !4215
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4215
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4215
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4215
  call void @llvm.dbg.value(metadata i32 %188, metadata !4149, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %187, metadata !4161, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %186, metadata !4162, metadata !DIExpression()), !dbg !4215
  %189 = add nuw nsw i32 %137, 1, !dbg !4352
  call void @llvm.dbg.value(metadata i32 undef, metadata !4149, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 undef, metadata !4160, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 undef, metadata !4161, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 undef, metadata !4162, metadata !DIExpression()), !dbg !4215
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4297
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4299
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4300
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4301
  call void @llvm.dbg.value(metadata i32 %194, metadata !4149, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %193, metadata !4160, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %192, metadata !4161, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %191, metadata !4162, metadata !DIExpression()), !dbg !4215
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4353
  call void @llvm.dbg.value(metadata i8* %195, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %143, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %141, metadata !4151, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %139, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %138, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4169, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %132, metadata !4163, metadata !DIExpression()), !dbg !4215
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4247
  call void @llvm.dbg.value(metadata i8* %196, metadata !4151, metadata !DIExpression()), !dbg !4215
  %197 = load i8, i8* %196, align 1, !dbg !4249
  %198 = icmp eq i8 %197, 0, !dbg !4250
  br i1 %198, label %223, label %63, !dbg !4251

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4354

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4355
  call void @llvm.dbg.value(metadata i8* %201, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 undef, metadata !4199, metadata !DIExpression()), !dbg !4356
  br i1 %22, label %216, label %202, !dbg !4357

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4355
  %204 = load i32, i32* %203, align 4, !dbg !4355
  call void @llvm.dbg.value(metadata i32 %204, metadata !4199, metadata !DIExpression()), !dbg !4356
  %205 = inttoptr i32 %118 to i32*, !dbg !4358
  store i32 %204, i32* %205, align 4, !dbg !4361
  br label %216, !dbg !4362

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4363
  %208 = add i32 %207, 7, !dbg !4363
  %209 = and i32 %208, -8, !dbg !4363
  %210 = inttoptr i32 %209 to i8*, !dbg !4363
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4363
  call void @llvm.dbg.value(metadata i8* %211, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i64 undef, metadata !4205, metadata !DIExpression()), !dbg !4364
  br i1 %22, label %216, label %212, !dbg !4365

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4363
  %214 = load i64, i64* %213, align 8, !dbg !4363
  call void @llvm.dbg.value(metadata i64 %214, metadata !4205, metadata !DIExpression()), !dbg !4364
  %215 = inttoptr i32 %118 to i64*, !dbg !4366
  store i64 %214, i64* %215, align 8, !dbg !4371
  br label %216, !dbg !4372

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4373
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %218, metadata !4152, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %40, metadata !4151, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %219, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %113, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %112, metadata !4156, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4169, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %72, metadata !4163, metadata !DIExpression()), !dbg !4215
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4247
  call void @llvm.dbg.value(metadata i8* %220, metadata !4151, metadata !DIExpression()), !dbg !4215
  %221 = load i8, i8* %220, align 1, !dbg !4249
  %222 = icmp eq i8 %221, 0, !dbg !4250
  br i1 %222, label %223, label %38, !dbg !4251

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4374
  %225 = ptrtoint i8* %224 to i32, !dbg !4375
  %226 = sub i32 %225, %17, !dbg !4375
  %227 = lshr i32 %226, 2, !dbg !4377
  %228 = icmp ugt i32 %226, 1023, !dbg !4378
  br i1 %228, label %316, label %229, !dbg !4379

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4380

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4381
  %232 = add i32 %231, %226, !dbg !4384
  br label %316, !dbg !4385

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4386
  store i8 %234, i8* %0, align 1, !dbg !4387
  %235 = trunc i32 %192 to i8, !dbg !4388
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4390
  store i8 %236, i8* %238, align 1, !dbg !4392
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4393
  store i8 %237, i8* %239, align 1, !dbg !4394
  %240 = trunc i32 %191 to i8, !dbg !4395
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4396
  store i8 %240, i8* %241, align 1, !dbg !4397
  %242 = icmp eq i32 %191, 0, !dbg !4398
  %243 = xor i1 %242, true, !dbg !4399
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4399
  call void @llvm.dbg.value(metadata i8* %224, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 0, metadata !4164, metadata !DIExpression()), !dbg !4215
  br i1 %245, label %246, label %265, !dbg !4399

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4400

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %250, metadata !4164, metadata !DIExpression()), !dbg !4215
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4401
  %252 = load i8, i8* %251, align 1, !dbg !4401
  %253 = icmp sgt i8 %252, -1, !dbg !4403
  br i1 %253, label %261, label %254, !dbg !4404

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4208, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4405
  %255 = ptrtoint i8* %249 to i32, !dbg !4406
  %256 = add i32 %247, %255, !dbg !4408
  %257 = icmp ugt i32 %256, %194, !dbg !4409
  br i1 %257, label %316, label %258, !dbg !4410

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4411
  call void @llvm.dbg.value(metadata i8 %259, metadata !4208, metadata !DIExpression()), !dbg !4405
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4412
  call void @llvm.dbg.value(metadata i8* %260, metadata !4154, metadata !DIExpression()), !dbg !4215
  store i8 %259, i8* %249, align 1, !dbg !4413
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4353
  call void @llvm.dbg.value(metadata i8* %262, metadata !4154, metadata !DIExpression()), !dbg !4215
  %263 = add nuw i32 %250, 1, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %263, metadata !4164, metadata !DIExpression()), !dbg !4215
  %264 = icmp eq i32 %263, %193, !dbg !4415
  br i1 %264, label %265, label %248, !dbg !4400, !llvm.loop !4416

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4353
  call void @llvm.dbg.value(metadata i8* %266, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 0, metadata !4164, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %133, metadata !4165, metadata !DIExpression()), !dbg !4215
  %267 = icmp eq i32 %193, 0, !dbg !4418
  br i1 %267, label %312, label %268, !dbg !4421

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4421

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %272, metadata !4165, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %273, metadata !4164, metadata !DIExpression()), !dbg !4215
  br i1 %242, label %278, label %274, !dbg !4422

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4425
  %276 = load i8, i8* %275, align 1, !dbg !4425
  %277 = icmp sgt i8 %276, -1, !dbg !4426
  br i1 %277, label %278, label %307, !dbg !4427

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4428

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4155, metadata !DIExpression()), !dbg !4215
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4429
  %281 = load i8, i8* %280, align 1, !dbg !4429
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4432
  call void @llvm.dbg.value(metadata i8* %282, metadata !4154, metadata !DIExpression()), !dbg !4215
  store i8 %281, i8* %271, align 1, !dbg !4433
  br label %293, !dbg !4434

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4435
  %285 = load i8, i8* %284, align 1, !dbg !4435
  %286 = zext i8 %285 to i32, !dbg !4435
  %287 = shl nuw nsw i32 %286, 2, !dbg !4437
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4438
  %289 = bitcast i8* %288 to i8**, !dbg !4439
  %290 = load i8*, i8** %289, align 4, !dbg !4439
  call void @llvm.dbg.value(metadata i8* %290, metadata !4165, metadata !DIExpression()), !dbg !4215
  store i8* null, i8** %289, align 4, !dbg !4440
  %291 = tail call i32 @strlen(i8* noundef %290) #25, !dbg !4441
  %292 = add i32 %291, 1, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %292, metadata !4155, metadata !DIExpression()), !dbg !4215
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4215
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4443
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4215
  call void @llvm.dbg.value(metadata i8* %296, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %295, metadata !4155, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %294, metadata !4165, metadata !DIExpression()), !dbg !4215
  %297 = ptrtoint i8* %296 to i32, !dbg !4444
  %298 = add i32 %269, %295, !dbg !4446
  %299 = add i32 %298, %297, !dbg !4447
  %300 = icmp ugt i32 %299, %194, !dbg !4448
  br i1 %300, label %316, label %301, !dbg !4449

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4450
  %303 = load i8, i8* %302, align 1, !dbg !4450
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4451
  call void @llvm.dbg.value(metadata i8* %304, metadata !4154, metadata !DIExpression()), !dbg !4215
  store i8 %303, i8* %296, align 1, !dbg !4452
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #25, !dbg !4453
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4454
  call void @llvm.dbg.value(metadata i8* %306, metadata !4154, metadata !DIExpression()), !dbg !4215
  br label %307, !dbg !4455

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4456
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4215
  call void @llvm.dbg.value(metadata i8* %309, metadata !4154, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %308, metadata !4165, metadata !DIExpression()), !dbg !4215
  %310 = add nuw i32 %273, 1, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %310, metadata !4164, metadata !DIExpression()), !dbg !4215
  %311 = icmp eq i32 %310, %193, !dbg !4418
  br i1 %311, label %312, label %270, !dbg !4421, !llvm.loop !4458

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4353
  %314 = ptrtoint i8* %313 to i32, !dbg !4460
  %315 = sub i32 %314, %17, !dbg !4460
  br label %316, !dbg !4461

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4215
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4462
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4462
  ret i32 %317, !dbg !4462
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4463 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4467, metadata !DIExpression()), !dbg !4468
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !4469
  ret i1 %2, !dbg !4470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4476, metadata !DIExpression()), !dbg !4477
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4478
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4479
  %4 = and i1 %2, %3, !dbg !4479
  ret i1 %4, !dbg !4480
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4481 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4485, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i32 %1, metadata !4486, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i32 %2, metadata !4487, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i8* %3, metadata !4488, metadata !DIExpression()), !dbg !4491
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4492
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4492
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4489, metadata !DIExpression()), !dbg !4493
  call void @llvm.va_start(i8* nonnull %6), !dbg !4494
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4495
  %8 = load i32, i32* %7, align 4, !dbg !4495
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4495
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !4495
  call void @llvm.dbg.value(metadata i32 %10, metadata !4490, metadata !DIExpression()), !dbg !4491
  call void @llvm.va_end(i8* nonnull %6), !dbg !4496
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4497
  ret i32 %10, !dbg !4498
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4499 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4511, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4512, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i8* %2, metadata !4513, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i8* %3, metadata !4514, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i8* %3, metadata !4515, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i8* %3, metadata !4516, metadata !DIExpression()), !dbg !4530
  %5 = icmp eq i8* %3, null, !dbg !4531
  br i1 %5, label %45, label %6, !dbg !4533

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4525, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4530
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4534
  %8 = load i8, i8* %7, align 1, !dbg !4534
  %9 = zext i8 %8 to i32, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %9, metadata !4526, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i8 undef, metadata !4527, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4530
  call void @llvm.dbg.value(metadata i8 undef, metadata !4528, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4530
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  call void @llvm.dbg.value(metadata i32 0, metadata !4524, metadata !DIExpression()), !dbg !4530
  %10 = icmp eq i8 %8, 0, !dbg !4536
  br i1 %10, label %39, label %11, !dbg !4539

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4540
  call void @llvm.dbg.value(metadata i8 %12, metadata !4525, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4530
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %13 = zext i8 %12 to i32, !dbg !4541
  call void @llvm.dbg.value(metadata i32 %13, metadata !4525, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4530
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %14 = shl nuw nsw i32 %13, 2, !dbg !4542
  call void @llvm.dbg.value(metadata i32 %14, metadata !4525, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4543
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4544
  %17 = load i8, i8* %16, align 1, !dbg !4544
  call void @llvm.dbg.value(metadata i8 %17, metadata !4527, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4530
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %18 = zext i8 %17 to i32, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %18, metadata !4527, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4546
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4547
  %21 = load i8, i8* %20, align 1, !dbg !4547
  call void @llvm.dbg.value(metadata i8 %21, metadata !4528, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4530
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %22 = zext i8 %21 to i32, !dbg !4548
  call void @llvm.dbg.value(metadata i32 %22, metadata !4528, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %23 = shl nuw nsw i32 %22, 1, !dbg !4549
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4530
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4550
  call void @llvm.dbg.value(metadata i8* %24, metadata !4522, metadata !DIExpression()), !dbg !4530
  br label %25, !dbg !4539

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4522, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %27, metadata !4524, metadata !DIExpression()), !dbg !4530
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4551
  call void @llvm.dbg.value(metadata i8* %28, metadata !4522, metadata !DIExpression()), !dbg !4530
  %29 = load i8, i8* %26, align 1, !dbg !4553
  %30 = zext i8 %29 to i32, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %30, metadata !4529, metadata !DIExpression()), !dbg !4530
  %31 = shl nuw nsw i32 %30, 2, !dbg !4554
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4555
  %33 = bitcast i8* %32 to i8**, !dbg !4556
  call void @llvm.dbg.value(metadata i8** %33, metadata !4523, metadata !DIExpression()), !dbg !4530
  store i8* %28, i8** %33, align 4, !dbg !4557
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !4558
  %35 = add i32 %34, 1, !dbg !4559
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4560
  call void @llvm.dbg.value(metadata i8* %36, metadata !4522, metadata !DIExpression()), !dbg !4530
  %37 = add nuw nsw i32 %27, 1, !dbg !4561
  call void @llvm.dbg.value(metadata i32 %37, metadata !4524, metadata !DIExpression()), !dbg !4530
  %38 = icmp eq i32 %37, %9, !dbg !4536
  br i1 %38, label %39, label %25, !dbg !4539, !llvm.loop !4562

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4564
  call void @llvm.dbg.value(metadata i8* %40, metadata !4515, metadata !DIExpression()), !dbg !4530
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4565
  %42 = bitcast i8* %41 to i8**, !dbg !4565
  %43 = load i8*, i8** %42, align 1, !dbg !4565
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !4566
  br label %45, !dbg !4567

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4530
  ret i32 %46, !dbg !4568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4569 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4573, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4574, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %2, metadata !4575, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %3, metadata !4576, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %4, metadata !4577, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %4, metadata !4578, metadata !DIExpression()), !dbg !4583
  %6 = ptrtoint i8* %4 to i32, !dbg !4584
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4584
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !4584
  ret i32 %8, !dbg !4585
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !4586 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4590, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %1, metadata !4591, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8 0, metadata !4593, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 0, metadata !4594, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8 poison, metadata !4593, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %0, metadata !4590, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4595
  %3 = load i8, i8* %0, align 1, !dbg !4596
  call void @llvm.dbg.value(metadata i8 %3, metadata !4592, metadata !DIExpression()), !dbg !4595
  %4 = icmp eq i8 %3, 0, !dbg !4597
  br i1 %4, label %29, label %5, !dbg !4598

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %8, metadata !4594, metadata !DIExpression()), !dbg !4595
  br i1 %9, label %11, label %22, !dbg !4600

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4602
  br i1 %12, label %13, label %17, !dbg !4606

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4607
  br i1 %14, label %29, label %15, !dbg !4610

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4611
  br i1 %16, label %29, label %22, !dbg !4613

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4614
  %19 = xor i1 %18, true, !dbg !4616
  %20 = zext i1 %18 to i32, !dbg !4616
  %21 = add nsw i32 %8, %20, !dbg !4616
  br label %22, !dbg !4616

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %24, metadata !4594, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8 poison, metadata !4593, metadata !DIExpression()), !dbg !4595
  %25 = icmp eq i8 %6, 37, !dbg !4617
  %26 = xor i1 %25, %23, !dbg !4619
  call void @llvm.dbg.value(metadata i8* %10, metadata !4590, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %10, metadata !4590, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4595
  %27 = load i8, i8* %10, align 1, !dbg !4596
  call void @llvm.dbg.value(metadata i8 %27, metadata !4592, metadata !DIExpression()), !dbg !4595
  %28 = icmp eq i8 %27, 0, !dbg !4597
  br i1 %28, label %29, label %5, !dbg !4598, !llvm.loop !4620

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4595
  ret i1 %30, !dbg !4622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4623 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4627, metadata !DIExpression()), !dbg !4628
  %2 = add i8 %0, -64, !dbg !4629
  %3 = icmp ult i8 %2, 59, !dbg !4629
  ret i1 %3, !dbg !4630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4631 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4639, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %1, metadata !4640, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4641, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8* %3, metadata !4642, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %4, metadata !4643, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i16* %5, metadata !4644, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %6, metadata !4645, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8* %0, metadata !4646, metadata !DIExpression()), !dbg !4708
  %11 = bitcast i8* %0 to i32*, !dbg !4709
  call void @llvm.dbg.value(metadata i32* %11, metadata !4647, metadata !DIExpression()), !dbg !4708
  %12 = and i32 %4, 8, !dbg !4710
  %13 = icmp eq i32 %12, 0, !dbg !4711
  call void @llvm.dbg.value(metadata i1 %13, metadata !4651, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4708
  call void @llvm.dbg.value(metadata i8* %0, metadata !4654, metadata !DIExpression()), !dbg !4708
  %14 = icmp eq i32 %1, 0, !dbg !4712
  br i1 %14, label %15, label %17, !dbg !4713

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #24, !dbg !4714
  br label %17, !dbg !4713

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4713
  call void @llvm.dbg.value(metadata i32 %18, metadata !4640, metadata !DIExpression()), !dbg !4708
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4715
  %20 = load i8, i8* %19, align 1, !dbg !4715
  %21 = zext i8 %20 to i32, !dbg !4716
  call void @llvm.dbg.value(metadata i32 %21, metadata !4649, metadata !DIExpression()), !dbg !4708
  %22 = icmp ne i8 %20, 0, !dbg !4717
  %23 = and i32 %4, 1, !dbg !4718
  %24 = icmp ne i32 %23, 0, !dbg !4718
  %25 = and i1 %24, %22, !dbg !4718
  call void @llvm.dbg.value(metadata i1 %25, metadata !4653, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4708
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4719
  %27 = load i8, i8* %26, align 1, !dbg !4719
  %28 = zext i8 %27 to i32, !dbg !4720
  call void @llvm.dbg.value(metadata i32 %28, metadata !4650, metadata !DIExpression()), !dbg !4708
  %29 = icmp ne i8 %27, 0, !dbg !4721
  %30 = and i32 %4, 2, !dbg !4722
  %31 = icmp ne i32 %30, 0, !dbg !4722
  %32 = and i1 %31, %29, !dbg !4722
  call void @llvm.dbg.value(metadata i1 %32, metadata !4652, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4708
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4723
  br i1 %33, label %38, label %34, !dbg !4723

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4725
  br i1 %35, label %267, label %36, !dbg !4728

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #25, !dbg !4729
  br label %267, !dbg !4731

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4732
  %40 = zext i8 %39 to i32, !dbg !4733
  %41 = shl nuw nsw i32 %40, 2, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %41, metadata !4648, metadata !DIExpression()), !dbg !4708
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4735
  %43 = bitcast i8* %42 to i8**, !dbg !4736
  %44 = load i8*, i8** %43, align 4, !dbg !4736
  call void @llvm.dbg.value(metadata i8* %44, metadata !4657, metadata !DIExpression()), !dbg !4708
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4737
  call void @llvm.dbg.value(metadata i8* %45, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 0, metadata !4659, metadata !DIExpression()), !dbg !4708
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4738
  br i1 %46, label %47, label %132, !dbg !4739

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4656, metadata !DIExpression()), !dbg !4708
  br i1 %25, label %48, label %73, !dbg !4740

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8* %45, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 0, metadata !4659, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 0, metadata !4660, metadata !DIExpression()), !dbg !4741
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4742

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8* %52, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %53, metadata !4659, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %54, metadata !4660, metadata !DIExpression()), !dbg !4741
  %55 = load i8, i8* %52, align 1, !dbg !4743
  %56 = zext i8 %55 to i32, !dbg !4744
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4744
  %58 = bitcast i32* %57 to i8**, !dbg !4745
  %59 = load i8*, i8** %58, align 4, !dbg !4745
  call void @llvm.dbg.value(metadata i8* %59, metadata !4666, metadata !DIExpression()), !dbg !4746
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #24, !dbg !4747
  call void @llvm.dbg.value(metadata i32 %60, metadata !4669, metadata !DIExpression()), !dbg !4746
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4748
  br i1 %62, label %63, label %67, !dbg !4748

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4750
  %65 = add nuw i32 %53, 1, !dbg !4752
  call void @llvm.dbg.value(metadata i32 %65, metadata !4659, metadata !DIExpression()), !dbg !4708
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4753
  store i16 %64, i16* %66, align 2, !dbg !4754
  br label %67, !dbg !4755

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4708
  call void @llvm.dbg.value(metadata i32 %68, metadata !4659, metadata !DIExpression()), !dbg !4708
  %69 = add nsw i32 %60, %51, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %69, metadata !4656, metadata !DIExpression()), !dbg !4708
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4757
  call void @llvm.dbg.value(metadata i8* %70, metadata !4658, metadata !DIExpression()), !dbg !4708
  %71 = add nuw nsw i32 %54, 1, !dbg !4758
  call void @llvm.dbg.value(metadata i32 %71, metadata !4660, metadata !DIExpression()), !dbg !4741
  %72 = icmp eq i32 %71, %21, !dbg !4759
  br i1 %72, label %79, label %50, !dbg !4742, !llvm.loop !4760

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4762
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4762
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4762
  br label %79, !dbg !4762

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4765
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4708
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4766
  call void @llvm.dbg.value(metadata i1 undef, metadata !4670, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4767
  call void @llvm.dbg.value(metadata i32 0, metadata !4671, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.value(metadata i32 %82, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8* %81, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %80, metadata !4659, metadata !DIExpression()), !dbg !4708
  %83 = icmp eq i8 %27, 0, !dbg !4769
  br i1 %83, label %267, label %84, !dbg !4770

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4771
  %86 = icmp eq i32 %85, 0, !dbg !4772
  call void @llvm.dbg.value(metadata i1 %86, metadata !4670, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4767
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4770

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8* %93, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %94, metadata !4659, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %95, metadata !4671, metadata !DIExpression()), !dbg !4768
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4773
  call void @llvm.dbg.value(metadata i8* %96, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8 undef, metadata !4673, metadata !DIExpression()), !dbg !4774
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4775
  call void @llvm.dbg.value(metadata i8* %97, metadata !4658, metadata !DIExpression()), !dbg !4708
  %98 = load i8, i8* %96, align 1, !dbg !4776
  call void @llvm.dbg.value(metadata i8 %98, metadata !4676, metadata !DIExpression()), !dbg !4774
  %99 = zext i8 %98 to i32, !dbg !4777
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4777
  %101 = bitcast i32* %100 to i8**, !dbg !4778
  %102 = load i8*, i8** %101, align 4, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %102, metadata !4677, metadata !DIExpression()), !dbg !4774
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #24, !dbg !4779
  call void @llvm.dbg.value(metadata i1 %103, metadata !4678, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4774
  br i1 %13, label %110, label %104, !dbg !4780

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4782
  call void @llvm.dbg.value(metadata i8 %105, metadata !4673, metadata !DIExpression()), !dbg !4774
  %106 = zext i8 %105 to i32, !dbg !4783
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #24, !dbg !4784
  br i1 %107, label %108, label %110, !dbg !4785

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.25, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #25, !dbg !4786
  %109 = add nsw i32 %92, -2, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %109, metadata !4656, metadata !DIExpression()), !dbg !4708
  br label %127, !dbg !4793

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4794

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4795

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %113, metadata !4656, metadata !DIExpression()), !dbg !4708
  br label %127, !dbg !4800

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4801

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4704), !dbg !4802
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #24, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %116, metadata !4679, metadata !DIExpression()), !dbg !4774
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4804
  br i1 %118, label %119, label %123, !dbg !4804

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4806
  %121 = add nuw i32 %94, 1, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %121, metadata !4659, metadata !DIExpression()), !dbg !4708
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4809
  store i16 %120, i16* %122, align 2, !dbg !4810
  br label %123, !dbg !4811

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4708
  call void @llvm.dbg.value(metadata i32 %124, metadata !4659, metadata !DIExpression()), !dbg !4708
  %125 = add i32 %92, -1, !dbg !4812
  %126 = add i32 %125, %116, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %126, metadata !4656, metadata !DIExpression()), !dbg !4708
  br label %127, !dbg !4814

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4708
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4774
  call void @llvm.dbg.value(metadata i32 %129, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %128, metadata !4659, metadata !DIExpression()), !dbg !4708
  %130 = add nuw nsw i32 %95, 1, !dbg !4815
  call void @llvm.dbg.value(metadata i8* %97, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %130, metadata !4671, metadata !DIExpression()), !dbg !4768
  %131 = icmp eq i32 %130, %28, !dbg !4769
  br i1 %131, label %267, label %91, !dbg !4770, !llvm.loop !4816

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4681, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4682, metadata !DIExpression()), !dbg !4819
  br i1 %25, label %133, label %135, !dbg !4820

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4683, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8 0, metadata !4684, metadata !DIExpression()), !dbg !4708
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4821
  call void @llvm.dbg.value(metadata i8* %134, metadata !4685, metadata !DIExpression()), !dbg !4708
  br label %140, !dbg !4824

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4825
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4825

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4685, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8 undef, metadata !4684, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8 0, metadata !4683, metadata !DIExpression()), !dbg !4708
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #25, !dbg !4827
  br label %145, !dbg !4830

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %148, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 0, metadata !4687, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.value(metadata i8 %146, metadata !4684, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8 %147, metadata !4683, metadata !DIExpression()), !dbg !4708
  %149 = icmp eq i8 %27, 0, !dbg !4833
  br i1 %149, label %150, label %152, !dbg !4834

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4835
  br label %157, !dbg !4834

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4834

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4835
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4836
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4837
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4708
  call void @llvm.dbg.value(metadata i8 undef, metadata !4680, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4708
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4838
  %163 = load i8, i8* %162, align 1, !dbg !4838
  %164 = zext i8 %159 to i32, !dbg !4839
  %165 = add i8 %163, %159, !dbg !4840
  call void @llvm.dbg.value(metadata i8 %165, metadata !4680, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4708
  %166 = icmp eq i32 %30, 0, !dbg !4841
  %167 = lshr i8 %160, 1, !dbg !4842
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4842
  call void @llvm.dbg.value(metadata i8 %168, metadata !4680, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4708
  %169 = icmp eq i32 %23, 0, !dbg !4843
  %170 = icmp eq i32 %158, 0, !dbg !4835
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4835
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4835
  call void @llvm.dbg.value(metadata i8 %172, metadata !4680, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4708
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4695, metadata !DIExpression()), !dbg !4844
  %173 = load i32, i32* %11, align 1, !dbg !4845
  store i8 %165, i8* %162, align 1, !dbg !4846
  store i8 %172, i8* %19, align 1, !dbg !4846
  store i8 %168, i8* %26, align 1, !dbg !4846
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #25, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %174, metadata !4686, metadata !DIExpression()), !dbg !4708
  %175 = icmp slt i32 %174, 0, !dbg !4848
  br i1 %175, label %267, label %220, !dbg !4850

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %178, metadata !4687, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.value(metadata i8 %179, metadata !4684, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8 %180, metadata !4683, metadata !DIExpression()), !dbg !4708
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %181, metadata !4658, metadata !DIExpression()), !dbg !4708
  %182 = load i8, i8* %177, align 1, !dbg !4852
  call void @llvm.dbg.value(metadata i8 %182, metadata !4689, metadata !DIExpression()), !dbg !4853
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4854
  call void @llvm.dbg.value(metadata i8* %183, metadata !4658, metadata !DIExpression()), !dbg !4708
  %184 = load i8, i8* %181, align 1, !dbg !4855
  call void @llvm.dbg.value(metadata i8 %184, metadata !4692, metadata !DIExpression()), !dbg !4853
  %185 = zext i8 %184 to i32, !dbg !4856
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4856
  %187 = bitcast i32* %186 to i8**, !dbg !4857
  %188 = load i8*, i8** %187, align 4, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %188, metadata !4693, metadata !DIExpression()), !dbg !4853
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #24, !dbg !4858
  call void @llvm.dbg.value(metadata i1 %189, metadata !4694, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4853
  br i1 %13, label %193, label %190, !dbg !4859

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4861
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #24, !dbg !4862
  br i1 %192, label %215, label %193, !dbg !4863

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4864

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4865

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4868
  call void @llvm.dbg.value(metadata i8 %196, metadata !4683, metadata !DIExpression()), !dbg !4708
  br label %208, !dbg !4871

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4872

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4873
  call void @llvm.dbg.value(metadata i8 %199, metadata !4684, metadata !DIExpression()), !dbg !4708
  br label %208, !dbg !4876

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4877

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4879
  call void @llvm.dbg.value(metadata i8 %202, metadata !4683, metadata !DIExpression()), !dbg !4708
  br label %208, !dbg !4882

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4883
  call void @llvm.dbg.value(metadata i8 %204, metadata !4684, metadata !DIExpression()), !dbg !4708
  %205 = zext i8 %179 to i32, !dbg !4885
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4885
  store i8 %182, i8* %206, align 1, !dbg !4886
  %207 = add i8 %179, 2, !dbg !4887
  call void @llvm.dbg.value(metadata i8 %207, metadata !4684, metadata !DIExpression()), !dbg !4708
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4888
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4888
  store i8 %184, i8* %214, align 1, !dbg !4888
  br label %215, !dbg !4889

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4708
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4837
  call void @llvm.dbg.value(metadata i8 %217, metadata !4684, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i8 %216, metadata !4683, metadata !DIExpression()), !dbg !4708
  %218 = add nuw nsw i32 %178, 1, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %183, metadata !4658, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %218, metadata !4687, metadata !DIExpression()), !dbg !4832
  %219 = icmp eq i32 %218, %28, !dbg !4833
  br i1 %219, label %157, label %176, !dbg !4834, !llvm.loop !4890

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %174, metadata !4656, metadata !DIExpression()), !dbg !4708
  store i32 %173, i32* %11, align 1, !dbg !4892
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4893
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #25, !dbg !4894
  call void @llvm.dbg.value(metadata i32 %223, metadata !4686, metadata !DIExpression()), !dbg !4708
  %224 = icmp slt i32 %223, 0, !dbg !4895
  br i1 %224, label %267, label %225, !dbg !4897

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4656, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4708
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4898
  %228 = add nuw nsw i32 %41, %21, !dbg !4898
  %229 = sub i32 %227, %228, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %229, metadata !4696, metadata !DIExpression()), !dbg !4708
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #25, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %230, metadata !4686, metadata !DIExpression()), !dbg !4708
  %231 = icmp slt i32 %230, 0, !dbg !4900
  br i1 %231, label %267, label %232, !dbg !4902

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4903
  call void @llvm.dbg.value(metadata i32 %233, metadata !4656, metadata !DIExpression()), !dbg !4708
  %234 = add nuw nsw i32 %233, %230, !dbg !4904
  call void @llvm.dbg.value(metadata i32 %234, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 0, metadata !4697, metadata !DIExpression()), !dbg !4905
  %235 = icmp eq i8 %159, 0, !dbg !4906
  br i1 %235, label %264, label %236, !dbg !4907

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4907

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4697, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.value(metadata i32 %240, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4908
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4909
  %242 = load i8, i8* %241, align 1, !dbg !4909
  call void @llvm.dbg.value(metadata i8 %242, metadata !4699, metadata !DIExpression()), !dbg !4910
  store i8 %242, i8* %10, align 1, !dbg !4911
  %243 = zext i8 %242 to i32, !dbg !4912
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4912
  %245 = bitcast i32* %244 to i8**, !dbg !4913
  %246 = load i8*, i8** %245, align 4, !dbg !4913
  call void @llvm.dbg.value(metadata i8* %246, metadata !4702, metadata !DIExpression()), !dbg !4910
  br i1 %237, label %250, label %247, !dbg !4914

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4915
  %249 = load i16, i16* %248, align 2, !dbg !4915
  br label %250, !dbg !4914

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4914
  call void @llvm.dbg.value(metadata i32 undef, metadata !4703, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %10, metadata !4699, metadata !DIExpression(DW_OP_deref)), !dbg !4910
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %252, metadata !4686, metadata !DIExpression()), !dbg !4708
  %253 = icmp slt i32 %252, 0, !dbg !4917
  br i1 %253, label %257, label %254, !dbg !4919

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4703, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4656, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4708
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #24, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %255, metadata !4686, metadata !DIExpression()), !dbg !4708
  %256 = icmp slt i32 %255, 0, !dbg !4921
  br i1 %256, label %257, label %259, !dbg !4923

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4924
  call void @llvm.dbg.value(metadata i32 undef, metadata !4656, metadata !DIExpression()), !dbg !4708
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %260, metadata !4656, metadata !DIExpression()), !dbg !4708
  %261 = add nsw i32 %260, %255, !dbg !4926
  call void @llvm.dbg.value(metadata i32 %261, metadata !4656, metadata !DIExpression()), !dbg !4708
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4924
  %262 = add nuw nsw i32 %239, 1, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %262, metadata !4697, metadata !DIExpression()), !dbg !4905
  %263 = icmp eq i32 %262, %164, !dbg !4906
  br i1 %263, label %264, label %238, !dbg !4907, !llvm.loop !4928

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4904
  call void @llvm.dbg.value(metadata i32 %265, metadata !4656, metadata !DIExpression()), !dbg !4708
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4930
  br label %267, !dbg !4931

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4708
  ret i32 %268, !dbg !4932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4933 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4937, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %0, metadata !4938, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %0, metadata !4939, metadata !DIExpression()), !dbg !4945
  %2 = load i8, i8* %0, align 1, !dbg !4946
  %3 = zext i8 %2 to i32, !dbg !4946
  %4 = shl nuw nsw i32 %3, 2, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %4, metadata !4940, metadata !DIExpression()), !dbg !4945
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4948
  %6 = load i8, i8* %5, align 1, !dbg !4948
  %7 = zext i8 %6 to i32, !dbg !4948
  call void @llvm.dbg.value(metadata i32 %7, metadata !4941, metadata !DIExpression()), !dbg !4945
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4949
  %9 = load i8, i8* %8, align 1, !dbg !4949
  %10 = zext i8 %9 to i32, !dbg !4949
  call void @llvm.dbg.value(metadata i32 %10, metadata !4942, metadata !DIExpression()), !dbg !4945
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4950
  call void @llvm.dbg.value(metadata i8* %11, metadata !4938, metadata !DIExpression()), !dbg !4945
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4951
  call void @llvm.dbg.value(metadata i8* %12, metadata !4938, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 0, metadata !4943, metadata !DIExpression()), !dbg !4952
  %13 = icmp eq i8 %6, 0, !dbg !4953
  br i1 %13, label %14, label %19, !dbg !4955

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4945
  %16 = ptrtoint i8* %15 to i32, !dbg !4956
  %17 = ptrtoint i8* %0 to i32, !dbg !4956
  %18 = sub i32 %16, %17, !dbg !4956
  ret i32 %18, !dbg !4957

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4943, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata i8* %21, metadata !4938, metadata !DIExpression()), !dbg !4945
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4958
  call void @llvm.dbg.value(metadata i8* %22, metadata !4938, metadata !DIExpression()), !dbg !4945
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #25, !dbg !4960
  %24 = add i32 %23, 1, !dbg !4961
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4962
  call void @llvm.dbg.value(metadata i8* %25, metadata !4938, metadata !DIExpression()), !dbg !4945
  %26 = add nuw nsw i32 %20, 1, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %26, metadata !4943, metadata !DIExpression()), !dbg !4952
  %27 = icmp eq i32 %26, %7, !dbg !4953
  br i1 %27, label %14, label %19, !dbg !4955, !llvm.loop !4964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4966 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4970, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i8* %1, metadata !4971, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i8* %2, metadata !4972, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i16 %3, metadata !4973, metadata !DIExpression()), !dbg !4974
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4975
  br i1 %5, label %6, label %9, !dbg !4977

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4978
  %8 = add i32 %7, 1, !dbg !4980
  br label %20, !dbg !4981

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4982
  br i1 %10, label %13, label %11, !dbg !4983

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4983
  br label %16, !dbg !4983

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4984
  %15 = add i32 %14, 1, !dbg !4985
  br label %16, !dbg !4983

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4983
  %18 = and i32 %17, 65535, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %17, metadata !4973, metadata !DIExpression()), !dbg !4974
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4987
  br label %20, !dbg !4988

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4974
  ret i32 %21, !dbg !4989
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4992, metadata !DIExpression()), !dbg !4993
  ret i32 0, !dbg !4994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !4995 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4999, metadata !DIExpression()), !dbg !5000
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5001
  ret void, !dbg !5002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5003 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5006
  ret i8* %1, !dbg !5007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5008 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5019, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8* %0, metadata !5018, metadata !DIExpression()), !dbg !5030
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !5031
  ret void, !dbg !5033
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5038, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i8* %1, metadata !5039, metadata !DIExpression()), !dbg !5040
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5041
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !5041
  ret i32 %4, !dbg !5042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5043 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5050, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5047, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %1, metadata !5048, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %2, metadata !5049, metadata !DIExpression()), !dbg !5051
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !5052
  ret void, !dbg !5053
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5054 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5058, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i32 %1, metadata !5059, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i32 0, metadata !5060, metadata !DIExpression()), !dbg !5061
  %3 = icmp eq i32 %1, 0, !dbg !5062
  br i1 %3, label %13, label %4, !dbg !5065

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5060, metadata !DIExpression()), !dbg !5061
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5066
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5068
  %8 = load i8, i8* %7, align 1, !dbg !5068
  %9 = zext i8 %8 to i32, !dbg !5068
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !5066
  %11 = add nuw i32 %5, 1, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %11, metadata !5060, metadata !DIExpression()), !dbg !5061
  %12 = icmp eq i32 %11, %1, !dbg !5062
  br i1 %12, label %13, label %4, !dbg !5065, !llvm.loop !5070

13:                                               ; preds = %4, %2
  ret void, !dbg !5072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5073 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5077, metadata !DIExpression()), !dbg !5079
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5080
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5080
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5078, metadata !DIExpression()), !dbg !5081
  call void @llvm.va_start(i8* nonnull %3), !dbg !5082
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5083
  %5 = load i32, i32* %4, align 4, !dbg !5083
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5083
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5083
  call void @llvm.va_end(i8* nonnull %3), !dbg !5084
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5085
  ret void, !dbg !5085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5086 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5090, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i32 %1, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i8* %2, metadata !5092, metadata !DIExpression()), !dbg !5095
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5096
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5096
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5093, metadata !DIExpression()), !dbg !5097
  call void @llvm.va_start(i8* nonnull %5), !dbg !5098
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5099
  %7 = load i32, i32* %6, align 4, !dbg !5099
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5099
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !5099
  call void @llvm.dbg.value(metadata i32 %9, metadata !5094, metadata !DIExpression()), !dbg !5095
  call void @llvm.va_end(i8* nonnull %5), !dbg !5100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5101
  ret i32 %9, !dbg !5102
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5103 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5110, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i8* %0, metadata !5107, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i32 %1, metadata !5108, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i8* %2, metadata !5109, metadata !DIExpression()), !dbg !5117
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5118
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5118
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5111, metadata !DIExpression()), !dbg !5119
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5120
  store i8* %0, i8** %7, align 4, !dbg !5120
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5120
  store i32 %1, i32* %8, align 4, !dbg !5120
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5120
  store i32 0, i32* %9, align 4, !dbg !5120
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !5121
  %10 = load i32, i32* %9, align 4, !dbg !5122
  %11 = load i32, i32* %8, align 4, !dbg !5124
  %12 = icmp slt i32 %10, %11, !dbg !5125
  br i1 %12, label %13, label %15, !dbg !5126

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5127
  store i8 0, i8* %14, align 1, !dbg !5129
  br label %15, !dbg !5130

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5131
  ret i32 %10, !dbg !5132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5138, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5139, metadata !DIExpression()), !dbg !5140
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5141
  %4 = load i8*, i8** %3, align 4, !dbg !5141
  %5 = icmp eq i8* %4, null, !dbg !5143
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5144
  br i1 %5, label %12, label %8, !dbg !5145

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5146
  %10 = load i32, i32* %9, align 4, !dbg !5146
  %11 = icmp slt i32 %7, %10, !dbg !5147
  br i1 %11, label %15, label %12, !dbg !5148

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5149
  %14 = add nsw i32 %7, 1, !dbg !5151
  store i32 %14, i32* %13, align 4, !dbg !5151
  br label %25, !dbg !5152

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5153
  %17 = icmp eq i32 %7, %16, !dbg !5155
  br i1 %17, label %18, label %21, !dbg !5156

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5157
  store i32 %19, i32* %6, align 4, !dbg !5157
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5159
  store i8 0, i8* %20, align 1, !dbg !5160
  br label %25, !dbg !5161

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5162
  %23 = add nsw i32 %7, 1, !dbg !5164
  store i32 %23, i32* %6, align 4, !dbg !5164
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5165
  store i8 %22, i8* %24, align 1, !dbg !5166
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5167
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5168 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5178, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.value(metadata i8* %1, metadata !5179, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.value(metadata i8* %2, metadata !5180, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.value(metadata i8* %3, metadata !5181, metadata !DIExpression()), !dbg !5182
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !5183
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5184
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !5185
  unreachable, !dbg !5186
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5187 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5291
  ret %struct.k_thread* %1, !dbg !5292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5293 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5297, metadata !DIExpression()), !dbg !5298
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5299, !srcloc !5301
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5302
  ret void, !dbg !5303
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5304 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5305, !srcloc !5307
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !5308
  ret %struct.k_thread* %1, !dbg !5309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5310 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5323, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5320, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8* %1, metadata !5321, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8* %2, metadata !5322, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %4, metadata !5324, metadata !DIExpression()), !dbg !5449
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5450
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5450
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5325, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 0, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i1 undef, metadata !5331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5449
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5452

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5452

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5453
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5323, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8* %30, metadata !5322, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %29, metadata !5329, metadata !DIExpression()), !dbg !5449
  %31 = load i8, i8* %30, align 1, !dbg !5454
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5452

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5454
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5455
  call void @llvm.dbg.value(metadata i8* %34, metadata !5322, metadata !DIExpression()), !dbg !5449
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5455
  call void @llvm.dbg.value(metadata i32 %35, metadata !5333, metadata !DIExpression()), !dbg !5456
  %36 = icmp slt i32 %35, 0, !dbg !5457
  %37 = add i32 %29, 1, !dbg !5455
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %36, label %365, label %28, !llvm.loop !5459

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5461
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5338, metadata !DIExpression()), !dbg !5462
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5462
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5381, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5384, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i8* %30, metadata !5387, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 -1, metadata !5388, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 -1, metadata !5389, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i8* null, metadata !5390, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i8* %14, metadata !5391, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i8 0, metadata !5392, metadata !DIExpression()), !dbg !5463
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !5464
  call void @llvm.dbg.value(metadata i8* %39, metadata !5322, metadata !DIExpression()), !dbg !5449
  %40 = load i24, i24* %15, align 8, !dbg !5465
  %41 = and i24 %40, 256, !dbg !5465
  %42 = icmp eq i24 %41, 0, !dbg !5465
  br i1 %42, label %51, label %43, !dbg !5467

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5468
  call void @llvm.dbg.value(metadata i8* %44, metadata !5323, metadata !DIExpression()), !dbg !5449
  %45 = bitcast i8* %27 to i32*, !dbg !5468
  %46 = load i32, i32* %45, align 4, !dbg !5468
  call void @llvm.dbg.value(metadata i32 %46, metadata !5388, metadata !DIExpression()), !dbg !5463
  %47 = icmp slt i32 %46, 0, !dbg !5470
  br i1 %47, label %48, label %56, !dbg !5472

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5473
  store i24 %49, i24* %15, align 8, !dbg !5473
  %50 = sub nsw i32 0, %46, !dbg !5475
  call void @llvm.dbg.value(metadata i32 %50, metadata !5388, metadata !DIExpression()), !dbg !5463
  br label %56, !dbg !5476

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5477
  %53 = icmp eq i24 %52, 0, !dbg !5477
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5479
  br label %56, !dbg !5479

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5480
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5463
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5323, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %58, metadata !5388, metadata !DIExpression()), !dbg !5463
  %60 = and i24 %57, 1024, !dbg !5480
  %61 = icmp eq i24 %60, 0, !dbg !5480
  br i1 %61, label %69, label %62, !dbg !5481

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5482
  call void @llvm.dbg.value(metadata i8* %63, metadata !5323, metadata !DIExpression()), !dbg !5449
  %64 = bitcast i8* %59 to i32*, !dbg !5482
  %65 = load i32, i32* %64, align 4, !dbg !5482
  call void @llvm.dbg.value(metadata i32 %65, metadata !5393, metadata !DIExpression()), !dbg !5483
  %66 = icmp slt i32 %65, 0, !dbg !5484
  br i1 %66, label %67, label %74, !dbg !5486

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5487
  store i24 %68, i24* %15, align 8, !dbg !5487
  br label %74, !dbg !5489

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5490
  %71 = icmp eq i24 %70, 0, !dbg !5490
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5492
  br label %74, !dbg !5492

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5493
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5463
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5463
  call void @llvm.dbg.value(metadata i8* %77, metadata !5323, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %76, metadata !5389, metadata !DIExpression()), !dbg !5463
  store i32 0, i32* %16, align 4, !dbg !5494
  store i32 0, i32* %17, align 8, !dbg !5495
  %78 = lshr i24 %75, 16, !dbg !5493
  call void @llvm.dbg.value(metadata i24 %78, metadata !5396, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5463
  %79 = lshr i24 %75, 11, !dbg !5496
  %80 = and i24 %79, 15, !dbg !5496
  %81 = zext i24 %80 to i32, !dbg !5496
  call void @llvm.dbg.value(metadata i32 %81, metadata !5397, metadata !DIExpression()), !dbg !5463
  %82 = trunc i24 %78 to i3, !dbg !5497
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5497

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5498

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5501
  call void @llvm.dbg.value(metadata i8* %85, metadata !5323, metadata !DIExpression()), !dbg !5449
  %86 = bitcast i8* %77 to i32*, !dbg !5501
  %87 = load i32, i32* %86, align 4, !dbg !5501
  %88 = sext i32 %87 to i64, !dbg !5501
  store i64 %88, i64* %20, align 8, !dbg !5503
  br label %115, !dbg !5504

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5505
  call void @llvm.dbg.value(metadata i8* %90, metadata !5323, metadata !DIExpression()), !dbg !5449
  %91 = bitcast i8* %77 to i32*, !dbg !5505
  %92 = load i32, i32* %91, align 4, !dbg !5505
  %93 = sext i32 %92 to i64, !dbg !5505
  store i64 %93, i64* %20, align 8, !dbg !5508
  br label %115, !dbg !5509

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5510
  %96 = add i32 %95, 7, !dbg !5510
  %97 = and i32 %96, -8, !dbg !5510
  %98 = inttoptr i32 %97 to i8*, !dbg !5510
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5510
  call void @llvm.dbg.value(metadata i8* %99, metadata !5323, metadata !DIExpression()), !dbg !5449
  %100 = inttoptr i32 %97 to i64*, !dbg !5510
  %101 = load i64, i64* %100, align 8, !dbg !5510
  store i64 %101, i64* %20, align 8, !dbg !5511
  br label %115, !dbg !5512

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5513
  %104 = add i32 %103, 7, !dbg !5513
  %105 = and i32 %104, -8, !dbg !5513
  %106 = inttoptr i32 %105 to i8*, !dbg !5513
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5513
  call void @llvm.dbg.value(metadata i8* %107, metadata !5323, metadata !DIExpression()), !dbg !5449
  %108 = inttoptr i32 %105 to i64*, !dbg !5513
  %109 = load i64, i64* %108, align 8, !dbg !5513
  store i64 %109, i64* %20, align 8, !dbg !5514
  br label %115, !dbg !5515

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5516
  call void @llvm.dbg.value(metadata i8* %111, metadata !5323, metadata !DIExpression()), !dbg !5449
  %112 = bitcast i8* %77 to i32*, !dbg !5516
  %113 = load i32, i32* %112, align 4, !dbg !5516
  %114 = sext i32 %113 to i64, !dbg !5517
  store i64 %114, i64* %20, align 8, !dbg !5518
  br label %115, !dbg !5519

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5520
  call void @llvm.dbg.value(metadata i8* %117, metadata !5323, metadata !DIExpression()), !dbg !5449
  %118 = trunc i24 %79 to i4, !dbg !5521
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5521

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5522
  %121 = ashr exact i64 %120, 56, !dbg !5522
  store i64 %121, i64* %20, align 8, !dbg !5525
  br label %177, !dbg !5526

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5527
  %124 = ashr exact i64 %123, 48, !dbg !5527
  store i64 %124, i64* %20, align 8, !dbg !5530
  br label %177, !dbg !5531

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5532

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5535
  call void @llvm.dbg.value(metadata i8* %127, metadata !5323, metadata !DIExpression()), !dbg !5449
  %128 = bitcast i8* %77 to i32*, !dbg !5535
  %129 = load i32, i32* %128, align 4, !dbg !5535
  %130 = zext i32 %129 to i64, !dbg !5535
  store i64 %130, i64* %20, align 8, !dbg !5537
  br label %157, !dbg !5538

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5539
  call void @llvm.dbg.value(metadata i8* %132, metadata !5323, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8* %132, metadata !5323, metadata !DIExpression()), !dbg !5449
  %133 = bitcast i8* %77 to i32*, !dbg !5539
  %134 = load i32, i32* %133, align 4, !dbg !5539
  %135 = zext i32 %134 to i64, !dbg !5539
  store i64 %135, i64* %20, align 8, !dbg !5539
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5541
  %138 = add i32 %137, 7, !dbg !5541
  %139 = and i32 %138, -8, !dbg !5541
  %140 = inttoptr i32 %139 to i8*, !dbg !5541
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5541
  call void @llvm.dbg.value(metadata i8* %141, metadata !5323, metadata !DIExpression()), !dbg !5449
  %142 = inttoptr i32 %139 to i64*, !dbg !5541
  %143 = load i64, i64* %142, align 8, !dbg !5541
  store i64 %143, i64* %20, align 8, !dbg !5542
  br label %157, !dbg !5543

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5544
  %146 = add i32 %145, 7, !dbg !5544
  %147 = and i32 %146, -8, !dbg !5544
  %148 = inttoptr i32 %147 to i8*, !dbg !5544
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5544
  call void @llvm.dbg.value(metadata i8* %149, metadata !5323, metadata !DIExpression()), !dbg !5449
  %150 = inttoptr i32 %147 to i64*, !dbg !5544
  %151 = load i64, i64* %150, align 8, !dbg !5544
  store i64 %151, i64* %20, align 8, !dbg !5545
  br label %157, !dbg !5546

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5547
  call void @llvm.dbg.value(metadata i8* %153, metadata !5323, metadata !DIExpression()), !dbg !5449
  %154 = bitcast i8* %77 to i32*, !dbg !5547
  %155 = load i32, i32* %154, align 4, !dbg !5547
  %156 = zext i32 %155 to i64, !dbg !5548
  store i64 %156, i64* %20, align 8, !dbg !5549
  br label %157, !dbg !5550

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5551
  call void @llvm.dbg.value(metadata i8* %159, metadata !5323, metadata !DIExpression()), !dbg !5449
  %160 = trunc i24 %79 to i4, !dbg !5552
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5552

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5553
  store i64 %162, i64* %20, align 8, !dbg !5556
  br label %177, !dbg !5557

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5558
  store i64 %164, i64* %20, align 8, !dbg !5561
  br label %177, !dbg !5562

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5563
  %167 = add i32 %166, 7, !dbg !5563
  %168 = and i32 %167, -8, !dbg !5563
  %169 = inttoptr i32 %168 to i8*, !dbg !5563
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5563
  call void @llvm.dbg.value(metadata i8* %170, metadata !5323, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8* %170, metadata !5323, metadata !DIExpression()), !dbg !5449
  %171 = inttoptr i32 %168 to double*, !dbg !5563
  %172 = load double, double* %171, align 8, !dbg !5563
  store double %172, double* %19, align 8, !dbg !5563
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5567
  call void @llvm.dbg.value(metadata i8* %174, metadata !5323, metadata !DIExpression()), !dbg !5449
  %175 = bitcast i8* %77 to i8**, !dbg !5567
  %176 = load i8*, i8** %175, align 4, !dbg !5567
  store i8* %176, i8** %18, align 8, !dbg !5570
  br label %177, !dbg !5571

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5463
  call void @llvm.dbg.value(metadata i8* %178, metadata !5323, metadata !DIExpression()), !dbg !5449
  %179 = and i24 %75, 3, !dbg !5572
  %180 = icmp eq i24 %179, 0, !dbg !5572
  br i1 %180, label %185, label %181, !dbg !5572

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %182, metadata !5398, metadata !DIExpression()), !dbg !5574
  %183 = icmp slt i32 %182, 0, !dbg !5575
  %184 = add i32 %182, %29, !dbg !5573
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5577
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5578

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5579
  call void @llvm.dbg.value(metadata i32 %188, metadata !5402, metadata !DIExpression()), !dbg !5580
  %189 = icmp slt i32 %188, 0, !dbg !5581
  %190 = add i32 %29, 1, !dbg !5579
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5583
  call void @llvm.dbg.value(metadata i8* %192, metadata !5390, metadata !DIExpression()), !dbg !5463
  %193 = icmp sgt i32 %76, -1, !dbg !5584
  br i1 %193, label %194, label %196, !dbg !5586

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %195, metadata !5405, metadata !DIExpression()), !dbg !5589
  br label %241, !dbg !5590

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5591
  call void @llvm.dbg.value(metadata i32 %197, metadata !5405, metadata !DIExpression()), !dbg !5589
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5390, metadata !DIExpression()), !dbg !5463
  %199 = load i64, i64* %20, align 8, !dbg !5593
  %200 = trunc i64 %199 to i8, !dbg !5594
  store i8 %200, i8* %10, align 1, !dbg !5595
  call void @llvm.dbg.value(metadata i8* %23, metadata !5391, metadata !DIExpression()), !dbg !5463
  br label %245, !dbg !5596

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5597
  %203 = icmp eq i24 %202, 0, !dbg !5597
  %204 = trunc i24 %75 to i8, !dbg !5599
  %205 = shl i8 %204, 1, !dbg !5599
  %206 = and i8 %205, 32, !dbg !5599
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5599
  call void @llvm.dbg.value(metadata i8 %207, metadata !5392, metadata !DIExpression()), !dbg !5463
  %208 = load i64, i64* %20, align 8, !dbg !5600
  call void @llvm.dbg.value(metadata i64 %208, metadata !5330, metadata !DIExpression()), !dbg !5449
  %209 = icmp slt i64 %208, 0, !dbg !5601
  br i1 %209, label %210, label %212, !dbg !5603

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5392, metadata !DIExpression()), !dbg !5463
  %211 = sub nsw i64 0, %208, !dbg !5604
  store i64 %211, i64* %20, align 8, !dbg !5606
  br label %212, !dbg !5607

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5463
  call void @llvm.dbg.value(metadata i8 %213, metadata !5392, metadata !DIExpression()), !dbg !5463
  %214 = load i64, i64* %20, align 8, !dbg !5608
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5609
  call void @llvm.dbg.value(metadata i8* %215, metadata !5390, metadata !DIExpression()), !dbg !5463
  br label %216, !dbg !5610

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5611
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5612
  call void @llvm.dbg.value(metadata i8* %218, metadata !5390, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i8 %217, metadata !5392, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.label(metadata !5448), !dbg !5613
  %219 = icmp sgt i32 %76, -1, !dbg !5614
  br i1 %219, label %222, label %220, !dbg !5615

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5616
  br label %245, !dbg !5615

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5618
  %224 = sub i32 %22, %223, !dbg !5618
  call void @llvm.dbg.value(metadata i32 %224, metadata !5407, metadata !DIExpression()), !dbg !5619
  %225 = load i24, i24* %15, align 8, !dbg !5620
  %226 = and i24 %225, -65, !dbg !5620
  store i24 %226, i24* %15, align 8, !dbg !5620
  %227 = icmp ugt i32 %76, %224, !dbg !5621
  br i1 %227, label %228, label %245, !dbg !5623

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5624
  store i32 %229, i32* %16, align 4, !dbg !5626
  br label %245, !dbg !5627

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5628
  %232 = icmp eq i8* %231, null, !dbg !5630
  br i1 %232, label %245, label %233, !dbg !5631

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5632
  %235 = zext i32 %234 to i64, !dbg !5632
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5634
  call void @llvm.dbg.value(metadata i8* %236, metadata !5390, metadata !DIExpression()), !dbg !5463
  %237 = load i24, i24* %15, align 8, !dbg !5635
  %238 = or i24 %237, 1048576, !dbg !5635
  store i24 %238, i24* %15, align 8, !dbg !5635
  store i8 120, i8* %21, align 1, !dbg !5636
  br label %216, !dbg !5637

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5638
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5641
  br label %363, !dbg !5642

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5643
  call void @llvm.dbg.value(metadata i32 %242, metadata !5405, metadata !DIExpression()), !dbg !5589
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5644
  call void @llvm.dbg.value(metadata i32 -1, metadata !5389, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 %29, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8* %192, metadata !5390, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i8* %243, metadata !5391, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i8 0, metadata !5392, metadata !DIExpression()), !dbg !5463
  %244 = icmp eq i8* %192, null, !dbg !5645
  br i1 %244, label %363, label %245, !dbg !5647, !llvm.loop !5459

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5616
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5463
  call void @llvm.dbg.value(metadata i32 0, metadata !5411, metadata !DIExpression()), !dbg !5463
  %250 = zext i8 %249 to i32, !dbg !5648
  %251 = icmp eq i8 %249, 0, !dbg !5650
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  call void @llvm.dbg.value(metadata i32 undef, metadata !5410, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  call void @llvm.dbg.value(metadata i32 undef, metadata !5410, metadata !DIExpression()), !dbg !5463
  %252 = icmp sgt i32 %58, 0, !dbg !5651
  br i1 %252, label %253, label %302, !dbg !5652

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5616
  %255 = icmp eq i24 %254, 0, !dbg !5616
  %256 = ptrtoint i8* %248 to i32, !dbg !5653
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  %257 = ptrtoint i8* %247 to i32, !dbg !5653
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  %258 = xor i1 %251, true, !dbg !5654
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  %259 = sext i1 %258 to i32, !dbg !5654
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  %260 = lshr i24 %246, 19, !dbg !5655
  %261 = and i24 %260, 1, !dbg !5655
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5655
  %263 = zext i24 %262 to i32, !dbg !5655
  %264 = add i32 %257, %259, !dbg !5655
  %265 = add i32 %256, %263, !dbg !5655
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  %266 = and i24 %246, 4194304, !dbg !5656
  %267 = icmp eq i24 %266, 0, !dbg !5656
  %268 = load i32, i32* %16, align 4, !dbg !5658
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5463
  call void @llvm.dbg.value(metadata i32 undef, metadata !5410, metadata !DIExpression()), !dbg !5463
  %269 = load i32, i32* %17, align 8, !dbg !5659
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5659
  call void @llvm.dbg.value(metadata i32 undef, metadata !5410, metadata !DIExpression()), !dbg !5463
  %271 = add i32 %264, %58, !dbg !5659
  %272 = add i32 %265, %268, !dbg !5659
  %273 = add i32 %272, %270, !dbg !5660
  %274 = sub i32 %271, %273, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %274, metadata !5388, metadata !DIExpression()), !dbg !5463
  %275 = and i24 %246, 4, !dbg !5661
  %276 = icmp eq i24 %275, 0, !dbg !5661
  br i1 %276, label %277, label %302, !dbg !5662

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5412, metadata !DIExpression()), !dbg !5663
  %278 = and i24 %246, 64, !dbg !5664
  %279 = icmp eq i24 %278, 0, !dbg !5664
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5665
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5665
  %282 = select i1 %279, i32 32, i32 48, !dbg !5665
  br i1 %280, label %287, label %283, !dbg !5665

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %284, metadata !5417, metadata !DIExpression()), !dbg !5667
  %285 = icmp slt i32 %284, 0, !dbg !5668
  %286 = add i32 %29, 1, !dbg !5666
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5463
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5453
  call void @llvm.dbg.value(metadata i32 %290, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8 undef, metadata !5412, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.value(metadata i8 %288, metadata !5392, metadata !DIExpression()), !dbg !5463
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5670
  %292 = add i32 %291, -1, !dbg !5670
  br label %293, !dbg !5670

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5671
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5453
  call void @llvm.dbg.value(metadata i32 %295, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %294, metadata !5388, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 %294, metadata !5388, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5463
  %296 = icmp sgt i32 %294, 0, !dbg !5672
  br i1 %296, label %297, label %302, !dbg !5670

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5673
  call void @llvm.dbg.value(metadata i32 %298, metadata !5388, metadata !DIExpression()), !dbg !5463
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5674
  call void @llvm.dbg.value(metadata i32 %299, metadata !5423, metadata !DIExpression()), !dbg !5675
  %300 = icmp slt i32 %299, 0, !dbg !5676
  %301 = add i32 %295, 1, !dbg !5674
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %300, label %361, label %293, !llvm.loop !5678

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5463
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5463
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5453
  call void @llvm.dbg.value(metadata i32 %305, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %304, metadata !5388, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i8 %303, metadata !5392, metadata !DIExpression()), !dbg !5463
  %306 = icmp eq i8 %303, 0, !dbg !5680
  br i1 %306, label %312, label %307, !dbg !5681

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5682
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5683
  call void @llvm.dbg.value(metadata i32 %309, metadata !5426, metadata !DIExpression()), !dbg !5684
  %310 = icmp slt i32 %309, 0, !dbg !5685
  %311 = add i32 %305, 1, !dbg !5683
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5453
  call void @llvm.dbg.value(metadata i32 %313, metadata !5329, metadata !DIExpression()), !dbg !5449
  %314 = lshr i24 %246, 20, !dbg !5687
  %315 = lshr i24 %246, 19, !dbg !5688
  %316 = or i24 %314, %315, !dbg !5689
  %317 = and i24 %316, 1, !dbg !5689
  %318 = icmp eq i24 %317, 0, !dbg !5689
  br i1 %318, label %323, label %319, !dbg !5690

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5691
  call void @llvm.dbg.value(metadata i32 %320, metadata !5430, metadata !DIExpression()), !dbg !5692
  %321 = icmp slt i32 %320, 0, !dbg !5693
  %322 = add i32 %313, 1, !dbg !5691
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5453
  call void @llvm.dbg.value(metadata i32 %324, metadata !5329, metadata !DIExpression()), !dbg !5449
  %325 = and i24 %246, 1048576, !dbg !5695
  %326 = icmp eq i24 %325, 0, !dbg !5695
  br i1 %326, label %333, label %327, !dbg !5696

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5697
  %329 = zext i8 %328 to i32, !dbg !5697
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %330, metadata !5436, metadata !DIExpression()), !dbg !5698
  %331 = icmp slt i32 %330, 0, !dbg !5699
  %332 = add i32 %324, 1, !dbg !5697
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5453
  call void @llvm.dbg.value(metadata i32 %334, metadata !5329, metadata !DIExpression()), !dbg !5449
  %335 = load i32, i32* %16, align 4, !dbg !5701
  call void @llvm.dbg.value(metadata i32 %335, metadata !5411, metadata !DIExpression()), !dbg !5463
  br label %336, !dbg !5702

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5703
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5453
  call void @llvm.dbg.value(metadata i32 %338, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %337, metadata !5411, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5463
  %339 = icmp sgt i32 %337, 0, !dbg !5704
  br i1 %339, label %340, label %345, !dbg !5702

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5705
  call void @llvm.dbg.value(metadata i32 %341, metadata !5411, metadata !DIExpression()), !dbg !5463
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5706
  call void @llvm.dbg.value(metadata i32 %342, metadata !5440, metadata !DIExpression()), !dbg !5707
  %343 = icmp slt i32 %342, 0, !dbg !5708
  %344 = add i32 %338, 1, !dbg !5706
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %343, label %361, label %336, !llvm.loop !5710

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5712
  call void @llvm.dbg.value(metadata i32 %346, metadata !5443, metadata !DIExpression()), !dbg !5713
  %347 = icmp slt i32 %346, 0, !dbg !5714
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5712
  call void @llvm.dbg.value(metadata i32 %349, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %304, metadata !5388, metadata !DIExpression()), !dbg !5463
  %350 = icmp sgt i32 %304, 0, !dbg !5716
  br i1 %350, label %351, label %363, !dbg !5717

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5717
  %353 = add i32 %352, %338, !dbg !5717
  br label %354, !dbg !5717

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %355, metadata !5388, metadata !DIExpression()), !dbg !5463
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %356, metadata !5445, metadata !DIExpression()), !dbg !5719
  %357 = icmp slt i32 %356, 0, !dbg !5720
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5722
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %359, metadata !5388, metadata !DIExpression()), !dbg !5463
  %360 = icmp sgt i32 %355, 1, !dbg !5716
  br i1 %360, label %354, label %363, !dbg !5717, !llvm.loop !5723

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5460
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5453
  call void @llvm.dbg.value(metadata i32 %364, metadata !5329, metadata !DIExpression()), !dbg !5449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5460
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5449
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5725
  ret i32 %366, !dbg !5725
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5726 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5730, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.value(metadata i8* %1, metadata !5731, metadata !DIExpression()), !dbg !5732
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5733
  store i24 0, i24* %3, align 4, !dbg !5733
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5733
  store i8 0, i8* %4, align 1, !dbg !5733
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5733
  store i32 0, i32* %5, align 4, !dbg !5733
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5733
  store i32 0, i32* %6, align 4, !dbg !5733
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5734
  call void @llvm.dbg.value(metadata i8* %7, metadata !5731, metadata !DIExpression()), !dbg !5732
  %8 = load i8, i8* %7, align 1, !dbg !5735
  %9 = icmp eq i8 %8, 37, !dbg !5737
  br i1 %9, label %10, label %12, !dbg !5738

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5739
  call void @llvm.dbg.value(metadata i8* %11, metadata !5731, metadata !DIExpression()), !dbg !5732
  store i8 37, i8* %4, align 1, !dbg !5741
  br label %18, !dbg !5742

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5743
  call void @llvm.dbg.value(metadata i8* %13, metadata !5731, metadata !DIExpression()), !dbg !5732
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5744
  call void @llvm.dbg.value(metadata i8* %14, metadata !5731, metadata !DIExpression()), !dbg !5732
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5745
  call void @llvm.dbg.value(metadata i8* %15, metadata !5731, metadata !DIExpression()), !dbg !5732
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5746
  call void @llvm.dbg.value(metadata i8* %16, metadata !5731, metadata !DIExpression()), !dbg !5732
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5747
  call void @llvm.dbg.value(metadata i8* %17, metadata !5731, metadata !DIExpression()), !dbg !5732
  br label %18, !dbg !5748

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5732
  ret i8* %19, !dbg !5749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5750 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5754, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %1, metadata !5755, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %2, metadata !5756, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %3, metadata !5757, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 0, metadata !5758, metadata !DIExpression()), !dbg !5761
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5762

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5763
  call void @llvm.dbg.value(metadata i32 %9, metadata !5758, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %8, metadata !5756, metadata !DIExpression()), !dbg !5761
  %10 = icmp ult i8* %8, %3, !dbg !5764
  br i1 %10, label %11, label %13, !dbg !5765

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5766
  br label %17, !dbg !5765

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5767

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5768
  %16 = icmp eq i8 %15, 0, !dbg !5767
  br i1 %16, label %24, label %17, !dbg !5762

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5766
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5769
  call void @llvm.dbg.value(metadata i8* %19, metadata !5756, metadata !DIExpression()), !dbg !5761
  %20 = zext i8 %18 to i32, !dbg !5770
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5771
  call void @llvm.dbg.value(metadata i32 %21, metadata !5759, metadata !DIExpression()), !dbg !5772
  %22 = icmp slt i32 %21, 0, !dbg !5773
  %23 = add i32 %9, 1, !dbg !5775
  call void @llvm.dbg.value(metadata i32 undef, metadata !5758, metadata !DIExpression()), !dbg !5761
  br i1 %22, label %24, label %7, !llvm.loop !5776

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5761
  ret i32 %25, !dbg !5778
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5779 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5783, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5784, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i8* %2, metadata !5785, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i8* %3, metadata !5786, metadata !DIExpression()), !dbg !5793
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5794
  %6 = load i8, i8* %5, align 1, !dbg !5794
  %7 = zext i8 %6 to i32, !dbg !5795
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5796
  %9 = icmp eq i32 %8, 0, !dbg !5796
  call void @llvm.dbg.value(metadata i1 %9, metadata !5787, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5793
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5797
  call void @llvm.dbg.value(metadata i32 %10, metadata !5788, metadata !DIExpression()), !dbg !5793
  %11 = ptrtoint i8* %3 to i32, !dbg !5798
  %12 = ptrtoint i8* %2 to i32, !dbg !5798
  %13 = sub i32 %11, %12, !dbg !5798
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5799
  call void @llvm.dbg.value(metadata i8* %14, metadata !5790, metadata !DIExpression()), !dbg !5793
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5800

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5793
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5783, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata i8* %18, metadata !5790, metadata !DIExpression()), !dbg !5793
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5801
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5802
  call void @llvm.dbg.value(metadata i32 %25, metadata !5791, metadata !DIExpression()), !dbg !5803
  %26 = icmp ult i32 %25, 10, !dbg !5804
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5805
  %28 = add i32 %27, %25, !dbg !5803
  %29 = trunc i32 %28 to i8, !dbg !5805
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5806
  call void @llvm.dbg.value(metadata i8* %30, metadata !5790, metadata !DIExpression()), !dbg !5793
  store i8 %29, i8* %30, align 1, !dbg !5807
  call void @llvm.dbg.value(metadata i64 %22, metadata !5783, metadata !DIExpression()), !dbg !5793
  %31 = icmp uge i64 %19, %15, !dbg !5808
  %32 = icmp ugt i8* %30, %2, !dbg !5809
  %33 = and i1 %31, %32, !dbg !5809
  br i1 %33, label %17, label %34, !dbg !5810, !llvm.loop !5811

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5813
  %36 = load i24, i24* %35, align 4, !dbg !5813
  %37 = and i24 %36, 32, !dbg !5813
  %38 = icmp eq i24 %37, 0, !dbg !5813
  br i1 %38, label %44, label %39, !dbg !5815

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5816

40:                                               ; preds = %39
  br label %41, !dbg !5818

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5822
  store i24 %43, i24* %35, align 4, !dbg !5822
  br label %44, !dbg !5823

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5824 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5830, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i8* %1, metadata !5831, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i32 %2, metadata !5832, metadata !DIExpression()), !dbg !5833
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5834
  %5 = load i24, i24* %4, align 4, !dbg !5834
  %6 = lshr i24 %5, 11, !dbg !5834
  %7 = and i24 %6, 15, !dbg !5834
  %8 = zext i24 %7 to i32, !dbg !5834
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5835

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5836
  store i32 %2, i32* %10, align 4, !dbg !5838
  br label %28, !dbg !5839

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5840
  store i8 %12, i8* %1, align 1, !dbg !5841
  br label %28, !dbg !5842

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5843
  %15 = bitcast i8* %1 to i16*, !dbg !5844
  store i16 %14, i16* %15, align 2, !dbg !5845
  br label %28, !dbg !5846

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5847
  store i32 %2, i32* %17, align 4, !dbg !5848
  br label %28, !dbg !5849

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5850
  %20 = bitcast i8* %1 to i64*, !dbg !5851
  store i64 %19, i64* %20, align 8, !dbg !5852
  br label %28, !dbg !5853

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5854
  %23 = bitcast i8* %1 to i64*, !dbg !5855
  store i64 %22, i64* %23, align 8, !dbg !5856
  br label %28, !dbg !5857

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5858
  store i32 %2, i32* %25, align 4, !dbg !5859
  br label %28, !dbg !5860

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5861
  store i32 %2, i32* %27, align 4, !dbg !5862
  br label %28, !dbg !5863

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5864
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5868, metadata !DIExpression()), !dbg !5869
  %2 = add i32 %0, -65, !dbg !5870
  %3 = icmp ult i32 %2, 26, !dbg !5871
  %4 = zext i1 %3 to i32, !dbg !5871
  ret i32 %4, !dbg !5872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5873 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5877, metadata !DIExpression()), !dbg !5878
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5879

2:                                                ; preds = %1
  br label %4, !dbg !5880

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5882

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5883
  ret i32 %5, !dbg !5884
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5885 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5887, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8* %1, metadata !5888, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8 1, metadata !5889, metadata !DIExpression()), !dbg !5890
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5891

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8* %5, metadata !5888, metadata !DIExpression()), !dbg !5890
  %6 = load i8, i8* %5, align 1, !dbg !5892
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5894

7:                                                ; preds = %4
  br label %11, !dbg !5895

8:                                                ; preds = %4
  br label %11, !dbg !5897

9:                                                ; preds = %4
  br label %11, !dbg !5898

10:                                               ; preds = %4
  br label %11, !dbg !5899

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5900
  %14 = or i24 %13, %12, !dbg !5900
  store i24 %14, i24* %3, align 4, !dbg !5900
  call void @llvm.dbg.value(metadata i8 poison, metadata !5889, metadata !DIExpression()), !dbg !5890
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5888, metadata !DIExpression()), !dbg !5890
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8* %15, metadata !5888, metadata !DIExpression()), !dbg !5890
  %17 = load i24, i24* %3, align 4, !dbg !5901
  %18 = and i24 %17, 68, !dbg !5903
  %19 = icmp eq i24 %18, 68, !dbg !5903
  br i1 %19, label %20, label %22, !dbg !5903

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5904
  store i24 %21, i24* %3, align 4, !dbg !5904
  br label %22, !dbg !5906

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5907
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5908 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5910, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i8* %1, metadata !5911, metadata !DIExpression()), !dbg !5914
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5915
  %5 = load i24, i24* %4, align 4, !dbg !5916
  %6 = or i24 %5, 128, !dbg !5916
  store i24 %6, i24* %4, align 4, !dbg !5916
  call void @llvm.dbg.value(metadata i8* %1, metadata !5911, metadata !DIExpression()), !dbg !5914
  %7 = load i8, i8* %1, align 1, !dbg !5917
  %8 = icmp eq i8 %7, 42, !dbg !5919
  br i1 %8, label %9, label %12, !dbg !5920

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5921
  store i24 %10, i24* %4, align 4, !dbg !5921
  call void @llvm.dbg.value(metadata i8* %1, metadata !5911, metadata !DIExpression()), !dbg !5914
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5923
  call void @llvm.dbg.value(metadata i8* %11, metadata !5911, metadata !DIExpression()), !dbg !5914
  store i8* %11, i8** %3, align 4, !dbg !5923
  br label %29, !dbg !5924

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5912, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i8** %3, metadata !5911, metadata !DIExpression(DW_OP_deref)), !dbg !5914
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %13, metadata !5913, metadata !DIExpression()), !dbg !5914
  %14 = load i8*, i8** %3, align 4, !dbg !5926
  call void @llvm.dbg.value(metadata i8* %14, metadata !5911, metadata !DIExpression()), !dbg !5914
  %15 = icmp eq i8* %14, %1, !dbg !5928
  br i1 %15, label %29, label %16, !dbg !5929

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5930
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5932
  store i32 %13, i32* %18, align 4, !dbg !5933
  %19 = lshr i32 %13, 31, !dbg !5934
  %20 = lshr i24 %17, 1, !dbg !5935
  %21 = and i24 %20, 1, !dbg !5935
  %22 = zext i24 %21 to i32, !dbg !5935
  %23 = or i32 %19, %22, !dbg !5935
  %24 = trunc i32 %23 to i24, !dbg !5935
  %25 = shl nuw nsw i24 %24, 1, !dbg !5935
  %26 = and i24 %17, -131, !dbg !5935
  %27 = or i24 %26, 128, !dbg !5935
  %28 = or i24 %25, %27, !dbg !5935
  store i24 %28, i24* %4, align 4, !dbg !5935
  br label %29, !dbg !5936

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5914
  ret i8* %30, !dbg !5937
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5938 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5940, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i8* %1, metadata !5941, metadata !DIExpression()), !dbg !5943
  %4 = load i8, i8* %1, align 1, !dbg !5944
  %5 = icmp eq i8 %4, 46, !dbg !5945
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5946
  %7 = load i24, i24* %6, align 4, !dbg !5947
  %8 = select i1 %5, i24 512, i24 0, !dbg !5947
  %9 = and i24 %7, -513, !dbg !5947
  %10 = or i24 %9, %8, !dbg !5947
  store i24 %10, i24* %6, align 4, !dbg !5947
  br i1 %5, label %11, label %32, !dbg !5948

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5941, metadata !DIExpression()), !dbg !5943
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5949
  call void @llvm.dbg.value(metadata i8* %12, metadata !5941, metadata !DIExpression()), !dbg !5943
  store i8* %12, i8** %3, align 4, !dbg !5949
  %13 = load i8, i8* %12, align 1, !dbg !5950
  %14 = icmp eq i8 %13, 42, !dbg !5952
  br i1 %14, label %15, label %18, !dbg !5953

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5954
  store i24 %16, i24* %6, align 4, !dbg !5954
  call void @llvm.dbg.value(metadata i8* %12, metadata !5941, metadata !DIExpression()), !dbg !5943
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5956
  call void @llvm.dbg.value(metadata i8* %17, metadata !5941, metadata !DIExpression()), !dbg !5943
  store i8* %17, i8** %3, align 4, !dbg !5956
  br label %32, !dbg !5957

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5941, metadata !DIExpression(DW_OP_deref)), !dbg !5943
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %19, metadata !5942, metadata !DIExpression()), !dbg !5943
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5959
  store i32 %19, i32* %20, align 4, !dbg !5960
  %21 = lshr i32 %19, 31, !dbg !5961
  %22 = load i24, i24* %6, align 4, !dbg !5962
  %23 = lshr i24 %22, 1, !dbg !5962
  %24 = and i24 %23, 1, !dbg !5962
  %25 = zext i24 %24 to i32, !dbg !5962
  %26 = or i32 %21, %25, !dbg !5962
  %27 = trunc i32 %26 to i24, !dbg !5962
  %28 = shl nuw nsw i24 %27, 1, !dbg !5962
  %29 = and i24 %22, -3, !dbg !5962
  %30 = or i24 %28, %29, !dbg !5962
  store i24 %30, i24* %6, align 4, !dbg !5962
  %31 = load i8*, i8** %3, align 4, !dbg !5963
  call void @llvm.dbg.value(metadata i8* %31, metadata !5941, metadata !DIExpression()), !dbg !5943
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5943
  ret i8* %33, !dbg !5964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5965 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5967, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata i8* %1, metadata !5968, metadata !DIExpression()), !dbg !5969
  %3 = load i8, i8* %1, align 1, !dbg !5970
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5971

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5972
  call void @llvm.dbg.value(metadata i8* %5, metadata !5968, metadata !DIExpression()), !dbg !5969
  %6 = load i8, i8* %5, align 1, !dbg !5975
  %7 = icmp eq i8 %6, 104, !dbg !5976
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5977
  %9 = load i24, i24* %8, align 4, !dbg !5977
  %10 = and i24 %9, -30721, !dbg !5977
  br i1 %7, label %11, label %14, !dbg !5978

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5979
  store i24 %12, i24* %8, align 4, !dbg !5979
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5981
  call void @llvm.dbg.value(metadata i8* %13, metadata !5968, metadata !DIExpression()), !dbg !5969
  br label %56, !dbg !5982

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5983
  store i24 %15, i24* %8, align 4, !dbg !5983
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5985
  call void @llvm.dbg.value(metadata i8* %17, metadata !5968, metadata !DIExpression()), !dbg !5969
  %18 = load i8, i8* %17, align 1, !dbg !5987
  %19 = icmp eq i8 %18, 108, !dbg !5988
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5989
  %21 = load i24, i24* %20, align 4, !dbg !5989
  %22 = and i24 %21, -30721, !dbg !5989
  br i1 %19, label %23, label %26, !dbg !5990

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5991
  store i24 %24, i24* %20, align 4, !dbg !5991
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5993
  call void @llvm.dbg.value(metadata i8* %25, metadata !5968, metadata !DIExpression()), !dbg !5969
  br label %56, !dbg !5994

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5995
  store i24 %27, i24* %20, align 4, !dbg !5995
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5997
  %30 = load i24, i24* %29, align 4, !dbg !5998
  %31 = and i24 %30, -30721, !dbg !5998
  %32 = or i24 %31, 10240, !dbg !5998
  store i24 %32, i24* %29, align 4, !dbg !5998
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5999
  call void @llvm.dbg.value(metadata i8* %33, metadata !5968, metadata !DIExpression()), !dbg !5969
  br label %56, !dbg !6000

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6001
  %36 = load i24, i24* %35, align 4, !dbg !6002
  %37 = and i24 %36, -30721, !dbg !6002
  %38 = or i24 %37, 12288, !dbg !6002
  store i24 %38, i24* %35, align 4, !dbg !6002
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6003
  call void @llvm.dbg.value(metadata i8* %39, metadata !5968, metadata !DIExpression()), !dbg !5969
  br label %56, !dbg !6004

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6005
  %42 = load i24, i24* %41, align 4, !dbg !6006
  %43 = and i24 %42, -30721, !dbg !6006
  %44 = or i24 %43, 14336, !dbg !6006
  store i24 %44, i24* %41, align 4, !dbg !6006
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6007
  call void @llvm.dbg.value(metadata i8* %45, metadata !5968, metadata !DIExpression()), !dbg !5969
  br label %56, !dbg !6008

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6009
  %48 = load i24, i24* %47, align 4, !dbg !6010
  %49 = and i24 %48, -30723, !dbg !6010
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6011
  call void @llvm.dbg.value(metadata i8* %50, metadata !5968, metadata !DIExpression()), !dbg !5969
  %51 = or i24 %49, 16386, !dbg !6012
  store i24 %51, i24* %47, align 4, !dbg !6012
  br label %56, !dbg !6013

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6014
  %54 = load i24, i24* %53, align 4, !dbg !6015
  %55 = and i24 %54, -30721, !dbg !6015
  store i24 %55, i24* %53, align 4, !dbg !6015
  br label %56, !dbg !6016

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5968, metadata !DIExpression()), !dbg !5969
  ret i8* %57, !dbg !6017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6018 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6020, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.value(metadata i8* %1, metadata !6021, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.value(metadata i8 0, metadata !6022, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.value(metadata i8* %1, metadata !6021, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6025
  %3 = load i8, i8* %1, align 1, !dbg !6026
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6027
  store i8 %3, i8* %4, align 1, !dbg !6028
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6029

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6030

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6031
  %9 = load i24, i24* %8, align 4, !dbg !6031
  %10 = and i24 %9, -458753, !dbg !6031
  %11 = or i24 %10, %7, !dbg !6031
  call void @llvm.dbg.label(metadata !6023), !dbg !6032
  %12 = and i24 %9, 30720, !dbg !6033
  %13 = icmp eq i24 %12, 16384, !dbg !6033
  %14 = zext i1 %13 to i24, !dbg !6035
  %15 = or i24 %11, %14, !dbg !6035
  %16 = icmp eq i8 %3, 99, !dbg !6036
  br i1 %16, label %17, label %43, !dbg !6038

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6039
  %19 = icmp ne i24 %18, 0, !dbg !6039
  call void @llvm.dbg.value(metadata i1 %19, metadata !6022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6025
  br label %43, !dbg !6041

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6042
  %22 = load i24, i24* %21, align 4, !dbg !6043
  %23 = and i24 %22, -458753, !dbg !6043
  %24 = or i24 %23, 262144, !dbg !6043
  call void @llvm.dbg.value(metadata i8 1, metadata !6022, metadata !DIExpression()), !dbg !6025
  br label %43, !dbg !6044

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6047
  %27 = load i24, i24* %26, align 4, !dbg !6048
  %28 = and i24 %27, -458753, !dbg !6048
  %29 = or i24 %28, 196608, !dbg !6048
  %30 = and i24 %27, 30720, !dbg !6049
  %31 = icmp eq i24 %30, 16384, !dbg !6049
  br label %43, !dbg !6051

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6052
  %34 = load i24, i24* %33, align 4, !dbg !6053
  %35 = and i24 %34, -458753, !dbg !6053
  %36 = or i24 %35, 196608, !dbg !6053
  %37 = and i24 %34, 30720, !dbg !6054
  %38 = icmp ne i24 %37, 0, !dbg !6054
  br label %43, !dbg !6056

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6057
  %41 = load i24, i24* %40, align 4, !dbg !6058
  %42 = or i24 %41, 1, !dbg !6058
  br label %43, !dbg !6059

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6060
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6061
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6062
  call void @llvm.dbg.value(metadata i8* %48, metadata !6021, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.value(metadata i8 poison, metadata !6022, metadata !DIExpression()), !dbg !6025
  %49 = lshr i24 %44, 1, !dbg !6060
  %50 = and i24 %49, 1, !dbg !6060
  %51 = zext i24 %50 to i32, !dbg !6060
  %52 = or i32 %51, %47, !dbg !6060
  %53 = trunc i32 %52 to i24, !dbg !6060
  %54 = shl nuw nsw i24 %53, 1, !dbg !6060
  %55 = and i24 %44, -3, !dbg !6060
  %56 = or i24 %54, %55, !dbg !6060
  store i24 %56, i24* %46, align 4, !dbg !6060
  ret i8* %48, !dbg !6063
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6064 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6068, metadata !DIExpression()), !dbg !6071
  %2 = load i8*, i8** %0, align 4, !dbg !6072
  call void @llvm.dbg.value(metadata i8* %2, metadata !6069, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 0, metadata !6070, metadata !DIExpression()), !dbg !6071
  %3 = load i8, i8* %2, align 1, !dbg !6073
  %4 = zext i8 %3 to i32, !dbg !6074
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !6075
  %6 = icmp eq i32 %5, 0, !dbg !6076
  br i1 %6, label %19, label %7, !dbg !6076

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6070, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i8* %10, metadata !6069, metadata !DIExpression()), !dbg !6071
  %11 = mul i32 %9, 10, !dbg !6077
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6079
  call void @llvm.dbg.value(metadata i8* %12, metadata !6069, metadata !DIExpression()), !dbg !6071
  %13 = add i32 %11, -48, !dbg !6080
  %14 = add i32 %13, %8, !dbg !6081
  call void @llvm.dbg.value(metadata i32 %14, metadata !6070, metadata !DIExpression()), !dbg !6071
  %15 = load i8, i8* %12, align 1, !dbg !6073
  %16 = zext i8 %15 to i32, !dbg !6074
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !6075
  %18 = icmp eq i32 %17, 0, !dbg !6076
  br i1 %18, label %19, label %7, !dbg !6076, !llvm.loop !6082

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6071
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6071
  store i8* %20, i8** %0, align 4, !dbg !6084
  ret i32 %21, !dbg !6085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6088, metadata !DIExpression()), !dbg !6089
  %2 = add i32 %0, -48, !dbg !6090
  %3 = icmp ult i32 %2, 10, !dbg !6091
  %4 = zext i1 %3 to i32, !dbg !6091
  ret i32 %4, !dbg !6092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6093 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6117, !srcloc !6118
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6119, !srcloc !6120
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6121, !srcloc !6122
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6123, !srcloc !6124
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6125, !srcloc !6126
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6127, !srcloc !6128
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6129, !srcloc !6130
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6131, !srcloc !6132
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !6133, !srcloc !6134
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6135, !srcloc !6136
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6137, !srcloc !6138
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6139, !srcloc !6140
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !6141, !srcloc !6142
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6143, !srcloc !6144
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6145, !srcloc !6146
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6147, !srcloc !6148
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !6149, !srcloc !6150
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6151, !srcloc !6152
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !6153, !srcloc !6154
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !6155, !srcloc !6156
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6157, !srcloc !6158
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !6159, !srcloc !6160
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6161, !srcloc !6162
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #23, !dbg !6163, !srcloc !6164
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !6165, !srcloc !6166
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #23, !dbg !6167, !srcloc !6168
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !6169, !srcloc !6170
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !6171, !srcloc !6172
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !6173, !srcloc !6174
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6175, !srcloc !6176
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !6177, !srcloc !6178
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !6179, !srcloc !6180
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !6181, !srcloc !6182
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !6183, !srcloc !6184
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6185, !srcloc !6186
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !6187, !srcloc !6188
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !6189, !srcloc !6190
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !6191, !srcloc !6192
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !6193, !srcloc !6194
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !6195, !srcloc !6196
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !6197, !srcloc !6198
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6199, !srcloc !6200
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !6201, !srcloc !6202
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #23, !dbg !6203, !srcloc !6204
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !6205, !srcloc !6206
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !6207, !srcloc !6208
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_VND_SENSOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,%object", ""() #23, !dbg !6209, !srcloc !6210
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6211, !srcloc !6212
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6213, !srcloc !6214
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6215, !srcloc !6216
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6217, !srcloc !6218
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6219, !srcloc !6220
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6221, !srcloc !6222
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6223, !srcloc !6224
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6225, !srcloc !6226
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6227, !srcloc !6228
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6229, !srcloc !6230
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6231, !srcloc !6232
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6233, !srcloc !6234
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6235, !srcloc !6236
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6237, !srcloc !6238
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6239, !srcloc !6240
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6241, !srcloc !6242
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6243, !srcloc !6244
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6245, !srcloc !6246
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6247, !srcloc !6248
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6249, !srcloc !6250
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6251, !srcloc !6252
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6253, !srcloc !6254
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6255, !srcloc !6256
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6257, !srcloc !6258
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6259, !srcloc !6260
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6261, !srcloc !6262
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6263, !srcloc !6264
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6265, !srcloc !6266
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6267, !srcloc !6268
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6269, !srcloc !6270
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6271, !srcloc !6272
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6273, !srcloc !6274
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !6275, !srcloc !6276
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !6277, !srcloc !6278
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6279, !srcloc !6280
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #23, !dbg !6281, !srcloc !6282
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !6283, !srcloc !6284
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !6285, !srcloc !6286
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !6287, !srcloc !6288
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6289, !srcloc !6290
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !6291, !srcloc !6292
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #23, !dbg !6293, !srcloc !6294
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6295, !srcloc !6296
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6297, !srcloc !6298
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6299, !srcloc !6300
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6301, !srcloc !6302
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6303, !srcloc !6304
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6305, !srcloc !6306
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6307, !srcloc !6308
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6309, !srcloc !6310
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6311, !srcloc !6312
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6313, !srcloc !6314
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !6315, !srcloc !6316
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6317, !srcloc !6318
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6319, !srcloc !6320
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6321, !srcloc !6322
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6323, !srcloc !6324
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6325, !srcloc !6326
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6327, !srcloc !6328
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6329, !srcloc !6330
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6331, !srcloc !6332
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6333, !srcloc !6334
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6335, !srcloc !6336
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6337, !srcloc !6338
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6339, !srcloc !6340
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6341, !srcloc !6342
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !6343, !srcloc !6344
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !6345, !srcloc !6346
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !6347, !srcloc !6348
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !6349, !srcloc !6350
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6351, !srcloc !6352
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6353, !srcloc !6354
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6355, !srcloc !6356
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6357, !srcloc !6358
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6359, !srcloc !6360
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6361, !srcloc !6362
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6363, !srcloc !6364
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6365, !srcloc !6366
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !6367, !srcloc !6368
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !6369, !srcloc !6370
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !6371, !srcloc !6372
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !6373, !srcloc !6374
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6375, !srcloc !6376
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6377, !srcloc !6378
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6379, !srcloc !6380
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6381, !srcloc !6382
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6383, !srcloc !6384
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6385, !srcloc !6386
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6387, !srcloc !6388
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6389, !srcloc !6390
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !6391, !srcloc !6392
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !6393, !srcloc !6394
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !6395, !srcloc !6396
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6397, !srcloc !6398
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6399, !srcloc !6400
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6401, !srcloc !6402
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6403, !srcloc !6404
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6405, !srcloc !6406
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6541, !srcloc !6542
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6543, !srcloc !6544
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !6545, !srcloc !6546
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !6547, !srcloc !6548
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !6549, !srcloc !6550
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !6551, !srcloc !6552
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !6553, !srcloc !6554
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !6555, !srcloc !6556
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !6559, !srcloc !6560
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !6561, !srcloc !6562
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !6563, !srcloc !6564
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6565, !srcloc !6566
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !6567, !srcloc !6568
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6569, !srcloc !6570
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6571, !srcloc !6572
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6573, !srcloc !6574
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6575, !srcloc !6576
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6577, !srcloc !6578
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !6581, !srcloc !6582
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !6583, !srcloc !6584
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !6585, !srcloc !6586
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !6587, !srcloc !6588
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6589, !srcloc !6590
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !6591, !srcloc !6592
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !6593, !srcloc !6594
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !6595, !srcloc !6596
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6597, !srcloc !6598
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6599, !srcloc !6600
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6601, !srcloc !6602
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6603, !srcloc !6604
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6605, !srcloc !6606
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6607, !srcloc !6608
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6609, !srcloc !6610
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6611, !srcloc !6612
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6613, !srcloc !6614
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6615, !srcloc !6616
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6617, !srcloc !6618
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6619, !srcloc !6620
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6621, !srcloc !6622
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6623, !srcloc !6624
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6625, !srcloc !6626
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6627, !srcloc !6628
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6629, !srcloc !6630
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6631, !srcloc !6632
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6633, !srcloc !6634
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6635, !srcloc !6636
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6637, !srcloc !6638
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6639, !srcloc !6640
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6641, !srcloc !6642
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6643, !srcloc !6644
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6645, !srcloc !6646
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6647, !srcloc !6648
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6649, !srcloc !6650
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6651, !srcloc !6652
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6653, !srcloc !6654
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6655, !srcloc !6656
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6657, !srcloc !6658
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6659, !srcloc !6660
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6661, !srcloc !6662
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6663, !srcloc !6664
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6665, !srcloc !6666
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,4\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6667, !srcloc !6668
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6671, !srcloc !6672
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6673, !srcloc !6674
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6675, !srcloc !6676
  tail call void asm sideeffect ".globl\09CONFIG_RTIO\0A\09.equ\09CONFIG_RTIO,1\0A\09.type\09CONFIG_RTIO,%object", ""() #23, !dbg !6677, !srcloc !6678
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_SIMPLE\0A\09.equ\09CONFIG_RTIO_EXECUTOR_SIMPLE,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_SIMPLE,%object", ""() #23, !dbg !6679, !srcloc !6680
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_CONCURRENT\0A\09.equ\09CONFIG_RTIO_EXECUTOR_CONCURRENT,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_CONCURRENT,%object", ""() #23, !dbg !6681, !srcloc !6682
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_RTIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6683, !srcloc !6684
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL,3\0A\09.type\09CONFIG_RTIO_LOG_LEVEL,%object", ""() #23, !dbg !6685, !srcloc !6686
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6687, !srcloc !6688
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6689, !srcloc !6690
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6691, !srcloc !6692
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6693, !srcloc !6694
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6695, !srcloc !6696
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6697, !srcloc !6698
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6699, !srcloc !6700
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6701, !srcloc !6702
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6703, !srcloc !6704
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6705, !srcloc !6706
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6707, !srcloc !6708
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6709, !srcloc !6710
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6711, !srcloc !6712
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6713, !srcloc !6714
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6715, !srcloc !6716
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6717, !srcloc !6718
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6719, !srcloc !6720
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6721, !srcloc !6722
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6723, !srcloc !6724
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6725, !srcloc !6726
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6727, !srcloc !6728
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6729, !srcloc !6730
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6731, !srcloc !6732
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6733, !srcloc !6734
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6735, !srcloc !6736
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6737, !srcloc !6738
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6739, !srcloc !6740
  ret void, !dbg !6741
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6742 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6744, metadata !DIExpression()), !dbg !6746
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6747
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6748
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6749, !srcloc !6755
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6749
  call void @llvm.dbg.value(metadata i32 %3, metadata !6752, metadata !DIExpression()) #23, !dbg !6756
  call void @llvm.dbg.value(metadata i32 undef, metadata !6753, metadata !DIExpression()) #23, !dbg !6756
  call void @llvm.dbg.value(metadata i32 %3, metadata !6745, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i32 %3, metadata !6757, metadata !DIExpression()) #23, !dbg !6760
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6762, !srcloc !6763
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6764
  ret i32 0, !dbg !6765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6766 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6768
  %2 = or i32 %1, 512, !dbg !6768
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6768
  ret void, !dbg !6769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6770 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6771
  %2 = or i32 %1, 1024, !dbg !6771
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6771
  ret void, !dbg !6772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6775, metadata !DIExpression()), !dbg !6776
  ret i32 0, !dbg !6777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6778 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6781, metadata !DIExpression()), !dbg !6789
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6790
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6790
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6782, metadata !DIExpression()), !dbg !6791
  call void @llvm.va_start(i8* nonnull %3), !dbg !6792
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6793
  %5 = load i32, i32* %4, align 4, !dbg !6793
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6793
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6793
  call void @llvm.va_end(i8* nonnull %3), !dbg !6794
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6795
  ret void, !dbg !6795
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6796 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6801, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata i8* %0, metadata !6800, metadata !DIExpression()), !dbg !6802
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6803
  ret void, !dbg !6804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6809, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i8* %1, metadata !6810, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %2, metadata !6811, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i8* %1, metadata !6812, metadata !DIExpression()), !dbg !6813
  %4 = icmp eq i32 %2, 0, !dbg !6814
  br i1 %4, label %14, label %5, !dbg !6815

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) #24, !dbg !6813
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6815

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6812, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %10, metadata !6811, metadata !DIExpression()), !dbg !6813
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 noundef %7) #25, !dbg !6816
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6818
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6819
  call void @llvm.dbg.value(metadata i32 %11, metadata !6811, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i8* %12, metadata !6812, metadata !DIExpression()), !dbg !6813
  br i1 %13, label %14, label %8, !dbg !6819, !llvm.loop !6820

14:                                               ; preds = %8, %3
  ret void, !dbg !6822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) unnamed_addr #4 !dbg !6823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6825, metadata !DIExpression()), !dbg !6826
  %2 = add i32 %0, -1, !dbg !6827
  %3 = icmp ult i32 %2, 4, !dbg !6827
  %4 = shl i32 %2, 3, !dbg !6827
  %5 = lshr i32 1145657157, %4, !dbg !6827
  %6 = trunc i32 %5 to i8, !dbg !6827
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6827
  ret i8 %7, !dbg !6828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6829 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6833, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 %1, metadata !6834, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 0, metadata !6835, metadata !DIExpression()), !dbg !6845
  br label %4, !dbg !6846

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.37, i32 0, i32 0)) #25, !dbg !6847
  call void @llvm.dbg.value(metadata i32 0, metadata !6837, metadata !DIExpression()), !dbg !6848
  br label %16, !dbg !6849

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6835, metadata !DIExpression()), !dbg !6845
  %6 = icmp ult i32 %5, %1, !dbg !6850
  br i1 %6, label %7, label %11, !dbg !6854

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6855
  %9 = load i8, i8* %8, align 1, !dbg !6855
  %10 = zext i8 %9 to i32, !dbg !6857
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef %10) #25, !dbg !6858
  br label %12, !dbg !6859

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.39, i32 0, i32 0)) #25, !dbg !6860
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6862
  call void @llvm.dbg.value(metadata i32 %13, metadata !6835, metadata !DIExpression()), !dbg !6845
  %14 = icmp eq i32 %13, 8, !dbg !6863
  br i1 %14, label %3, label %4, !dbg !6846, !llvm.loop !6864

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.40, i32 0, i32 0)) #25, !dbg !6866
  ret void, !dbg !6867

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6837, metadata !DIExpression()), !dbg !6848
  %18 = icmp ult i32 %17, %1, !dbg !6868
  br i1 %18, label %19, label %26, !dbg !6869

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6870
  %21 = load i8, i8* %20, align 1, !dbg !6870
  call void @llvm.dbg.value(metadata i8 %21, metadata !6839, metadata !DIExpression()), !dbg !6871
  %22 = zext i8 %21 to i32, !dbg !6872
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6873
  %24 = icmp eq i32 %23, 0, !dbg !6874
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6873
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.41, i32 0, i32 0), i32 noundef %25) #25, !dbg !6875
  br label %27, !dbg !6876

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.42, i32 0, i32 0)) #25, !dbg !6877
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6879
  call void @llvm.dbg.value(metadata i32 %28, metadata !6837, metadata !DIExpression()), !dbg !6848
  %29 = icmp eq i32 %28, 8, !dbg !6880
  br i1 %29, label %15, label %16, !dbg !6849, !llvm.loop !6881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6885, metadata !DIExpression()), !dbg !6886
  %2 = add i32 %0, -32, !dbg !6887
  %3 = icmp ult i32 %2, 95, !dbg !6887
  %4 = zext i1 %3 to i32, !dbg !6887
  ret i32 %4, !dbg !6888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6938, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6939, metadata !DIExpression()), !dbg !6940
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6941
  br i1 %3, label %5, label %4, !dbg !6943

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6944
  br label %5, !dbg !6946

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6947
  ret void, !dbg !6948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6949 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6953, metadata !DIExpression()), !dbg !6954
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6955
  %3 = load i32, i32* %2, align 4, !dbg !6955
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6955
  %5 = load i32, i32* %4, align 4, !dbg !6955
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6955
  %7 = load i32, i32* %6, align 4, !dbg !6955
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6955
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6960
  %9 = load i32, i32* %8, align 4, !dbg !6960
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6960
  %11 = load i32, i32* %10, align 4, !dbg !6960
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6960
  %13 = load i32, i32* %12, align 4, !dbg !6960
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.44, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6960
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6965
  %15 = load i32, i32* %14, align 4, !dbg !6965
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6965
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6970
  %17 = load i32, i32* %16, align 4, !dbg !6970
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.46, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6970
  ret void, !dbg !6975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6976 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6993, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6994, metadata !DIExpression()), !dbg !6996
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6997
  %4 = load i32, i32* %3, align 4, !dbg !6997
  call void @llvm.dbg.value(metadata i32 %4, metadata !6995, metadata !DIExpression()), !dbg !6996
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6998
  ret void, !dbg !6999
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7000 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7004, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i8* %0, metadata !7005, metadata !DIExpression()), !dbg !7007
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7008
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7008
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7006, metadata !DIExpression()), !dbg !7009
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7009
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7010
  %5 = bitcast i8* %4 to i32*, !dbg !7010
  %6 = load i32, i32* %5, align 4, !dbg !7010
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7011
  store i32 %6, i32* %7, align 4, !dbg !7012
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !7013
  unreachable, !dbg !7014
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7018, metadata !DIExpression()), !dbg !7019
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !7020
  ret void, !dbg !7021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7026, metadata !DIExpression()), !dbg !7027
  %2 = icmp sgt i32 %0, -1, !dbg !7028
  br i1 %2, label %3, label %8, !dbg !7030

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7031, !srcloc !7033
  %4 = and i32 %0, 31, !dbg !7034
  %5 = shl nuw i32 1, %4, !dbg !7035
  %6 = lshr i32 %0, 5, !dbg !7036
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7037
  store volatile i32 %5, i32* %7, align 4, !dbg !7038
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7039, !srcloc !7040
  br label %8, !dbg !7041

8:                                                ; preds = %3, %1
  ret void, !dbg !7042
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7045, metadata !DIExpression()), !dbg !7046
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !7047
  ret void, !dbg !7048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7051, metadata !DIExpression()), !dbg !7052
  %2 = icmp sgt i32 %0, -1, !dbg !7053
  br i1 %2, label %3, label %8, !dbg !7055

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7056
  %5 = shl nuw i32 1, %4, !dbg !7058
  %6 = lshr i32 %0, 5, !dbg !7059
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7060
  store volatile i32 %5, i32* %7, align 4, !dbg !7061
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7062, !srcloc !7066
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7067, !srcloc !7070
  br label %8, !dbg !7071

8:                                                ; preds = %3, %1
  ret void, !dbg !7072
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !7073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7077, metadata !DIExpression()), !dbg !7078
  %2 = lshr i32 %0, 5, !dbg !7079
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7080
  %4 = load volatile i32, i32* %3, align 4, !dbg !7080
  %5 = and i32 %0, 31, !dbg !7081
  %6 = shl nuw i32 1, %5, !dbg !7081
  %7 = and i32 %4, %6, !dbg !7082
  ret i32 %7, !dbg !7083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7088, metadata !DIExpression()), !dbg !7091
  call void @llvm.dbg.value(metadata i32 %1, metadata !7089, metadata !DIExpression()), !dbg !7091
  call void @llvm.dbg.value(metadata i32 %2, metadata !7090, metadata !DIExpression()), !dbg !7091
  %4 = add i32 %1, 1, !dbg !7092
  call void @llvm.dbg.value(metadata i32 %4, metadata !7089, metadata !DIExpression()), !dbg !7091
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !7095
  ret void, !dbg !7096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7101, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i32 %1, metadata !7102, metadata !DIExpression()), !dbg !7103
  %3 = trunc i32 %1 to i8, !dbg !7104
  %4 = shl i8 %3, 4, !dbg !7104
  %5 = and i32 %0, 15, !dbg !7106
  %6 = add nsw i32 %5, -4, !dbg !7106
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7106
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7106
  %9 = icmp slt i32 %0, 0, !dbg !7106
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7106
  store volatile i8 %4, i8* %10, align 1, !dbg !7104
  ret void, !dbg !7107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7108 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7110, metadata !DIExpression()), !dbg !7111
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7112
  ret void, !dbg !7113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7114 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7116
  tail call void @z_arm_int_exit() #25, !dbg !7117
  ret void, !dbg !7118
}

; Function Attrs: optsize
declare !dbg !7119 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7120 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7122 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !7124
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !7125
  tail call void @z_bss_zero() #25, !dbg !7126
  tail call void @z_data_copy() #25, !dbg !7127
  tail call void @z_arm_interrupt_init() #25, !dbg !7128
  tail call void @z_cstart() #27, !dbg !7129
  unreachable, !dbg !7129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7130 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7131
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7132, !srcloc !7135
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7136, !srcloc !7139
  ret void, !dbg !7140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7141 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7142
  %2 = and i32 %1, -15728641, !dbg !7142
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7142
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7143, !srcloc !7150
  call void @llvm.dbg.value(metadata i32 %3, metadata !7148, metadata !DIExpression()) #23, !dbg !7151
  %4 = and i32 %3, -5, !dbg !7152
  call void @llvm.dbg.value(metadata i32 %4, metadata !7153, metadata !DIExpression()) #23, !dbg !7158
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7160, !srcloc !7161
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7162, !srcloc !7139
  ret void, !dbg !7164
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7168, metadata !DIExpression()), !dbg !7169
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7170
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7171
  store i32 %0, i32* %3, align 4, !dbg !7172
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7173
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7174
  store i32 %4, i32* %5, align 4, !dbg !7175
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7176
  %7 = or i32 %6, 268435456, !dbg !7176
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7176
  call void @llvm.dbg.value(metadata i32 0, metadata !7177, metadata !DIExpression()) #23, !dbg !7180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7182, !srcloc !7183
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7184
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7185
  %10 = load i32, i32* %9, align 4, !dbg !7185
  ret i32 %10, !dbg !7186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !7187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7297, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7298, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.value(metadata i8* %2, metadata !7299, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7300, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.value(metadata i8* %4, metadata !7301, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.value(metadata i8* %5, metadata !7302, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.value(metadata i8* %6, metadata !7303, metadata !DIExpression()), !dbg !7305
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7306
  call void @llvm.dbg.value(metadata i8* %8, metadata !7304, metadata !DIExpression()), !dbg !7305
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7307
  %10 = bitcast i8* %9 to i32*, !dbg !7307
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7308
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7309
  %12 = bitcast i8* %8 to i32*, !dbg !7310
  store i32 %11, i32* %12, align 4, !dbg !7311
  %13 = ptrtoint i8* %4 to i32, !dbg !7312
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7313
  %15 = bitcast i8* %14 to i32*, !dbg !7313
  store i32 %13, i32* %15, align 4, !dbg !7314
  %16 = ptrtoint i8* %5 to i32, !dbg !7315
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7316
  %18 = bitcast i8* %17 to i32*, !dbg !7316
  store i32 %16, i32* %18, align 4, !dbg !7317
  %19 = ptrtoint i8* %6 to i32, !dbg !7318
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7319
  %21 = bitcast i8* %20 to i32*, !dbg !7319
  store i32 %19, i32* %21, align 4, !dbg !7320
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7321
  %23 = bitcast i8* %22 to i32*, !dbg !7321
  store i32 16777216, i32* %23, align 4, !dbg !7322
  %24 = ptrtoint i8* %8 to i32, !dbg !7323
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7324
  store i32 %24, i32* %25, align 8, !dbg !7325
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7326
  store i32 0, i32* %26, align 4, !dbg !7327
  ret void, !dbg !7328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7334, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 %1, metadata !7335, metadata !DIExpression()), !dbg !7340
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7341
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7336, metadata !DIExpression()), !dbg !7340
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7342
  br i1 %4, label %19, label %5, !dbg !7344

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7339, metadata !DIExpression()), !dbg !7340
  %6 = icmp eq i32 %0, -22, !dbg !7345
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7345
  %8 = load i32, i32* %7, align 4, !dbg !7345
  br i1 %6, label %16, label %9, !dbg !7347

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7345
  %11 = icmp ule i32 %10, %0, !dbg !7345
  %12 = icmp ugt i32 %8, %0, !dbg !7345
  %13 = and i1 %12, %11, !dbg !7345
  %14 = icmp ugt i32 %8, %1, !dbg !7345
  %15 = and i1 %14, %13, !dbg !7345
  br i1 %15, label %18, label %19, !dbg !7345

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7345
  br i1 %17, label %18, label %19, !dbg !7347

18:                                               ; preds = %9, %16
  br label %19, !dbg !7348

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7340
  ret i32 %20, !dbg !7350
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7351 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7355, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.value(metadata i8* %1, metadata !7356, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7357, metadata !DIExpression()), !dbg !7358
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7359
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7360
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7361, !srcloc !7362
  unreachable, !dbg !7363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7364 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7382, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 %1, metadata !7383, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 %2, metadata !7384, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7385, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 0, metadata !7386, metadata !DIExpression()), !dbg !7392
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7393
  %9 = and i32 %8, 511, !dbg !7394
  call void @llvm.dbg.value(metadata i32 %9, metadata !7387, metadata !DIExpression()), !dbg !7392
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7395
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7395
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7396
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7396
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7391, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.value(metadata i32 0, metadata !7398, metadata !DIExpression()) #23, !dbg !7401
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7403, !srcloc !7404
  call void @llvm.dbg.value(metadata i8* %6, metadata !7389, metadata !DIExpression(DW_OP_deref)), !dbg !7392
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !7405
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7390, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i8* %5, metadata !7388, metadata !DIExpression(DW_OP_deref)), !dbg !7392
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %12, metadata !7386, metadata !DIExpression()), !dbg !7392
  %13 = load i8, i8* %5, align 1, !dbg !7407, !range !7409
  call void @llvm.dbg.value(metadata i8 %13, metadata !7388, metadata !DIExpression()), !dbg !7392
  %14 = icmp eq i8 %13, 0, !dbg !7407
  br i1 %14, label %15, label %32, !dbg !7410

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7411
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7412
  %18 = load i8, i8* %6, align 1, !dbg !7413, !range !7409
  call void @llvm.dbg.value(metadata i8 %18, metadata !7389, metadata !DIExpression()), !dbg !7392
  %19 = icmp eq i8 %18, 0, !dbg !7413
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7415
  %21 = load i32, i32* %20, align 4, !dbg !7415
  br i1 %19, label %27, label %22, !dbg !7416

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7417
  %24 = icmp eq i32 %23, 0, !dbg !7420
  br i1 %24, label %25, label %31, !dbg !7421

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7422
  br label %29, !dbg !7424

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7425
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7415
  br label %31, !dbg !7427

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7427
  br label %32, !dbg !7428

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7428
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7428
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7428
  ret void, !dbg !7428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7434, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %1, metadata !7435, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %2, metadata !7436, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i8* %3, metadata !7437, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i8 0, metadata !7438, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7439, metadata !DIExpression()), !dbg !7440
  store i8 0, i8* %3, align 1, !dbg !7441
  %5 = icmp ugt i32 %2, -16777217, !dbg !7442
  br i1 %5, label %6, label %17, !dbg !7444

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7445
  %8 = icmp eq i32 %7, 8, !dbg !7445
  br i1 %8, label %9, label %10, !dbg !7445

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !7447
  br label %17, !dbg !7453

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7454
  %12 = icmp eq i32 %11, 0, !dbg !7454
  br i1 %12, label %13, label %14, !dbg !7455

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7439, metadata !DIExpression()), !dbg !7440
  store i8 1, i8* %3, align 1, !dbg !7458
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7440
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7439, metadata !DIExpression()), !dbg !7440
  br label %17, !dbg !7461

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7440
  ret %struct.__esf* %18, !dbg !7462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7463 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7467, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i32 %1, metadata !7468, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i8* %2, metadata !7469, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i32 0, metadata !7470, metadata !DIExpression()), !dbg !7471
  store i8 0, i8* %2, align 1, !dbg !7472
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7473

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !7474
  call void @llvm.dbg.value(metadata i32 %5, metadata !7470, metadata !DIExpression()), !dbg !7471
  br label %12, !dbg !7476

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7477
  call void @llvm.dbg.value(metadata i32 %7, metadata !7470, metadata !DIExpression()), !dbg !7471
  br label %12, !dbg !7478

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7479
  call void @llvm.dbg.value(metadata i32 0, metadata !7470, metadata !DIExpression()), !dbg !7471
  br label %12, !dbg !7480

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !7481
  call void @llvm.dbg.value(metadata i32 0, metadata !7470, metadata !DIExpression()), !dbg !7471
  br label %12, !dbg !7482

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !7483
  br label %12, !dbg !7484

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !7485
  br label %12, !dbg !7486

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7471
  call void @llvm.dbg.value(metadata i32 %13, metadata !7470, metadata !DIExpression()), !dbg !7471
  ret i32 %13, !dbg !7487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7488 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7492, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i8* %1, metadata !7493, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i32 0, metadata !7494, metadata !DIExpression()), !dbg !7495
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !7496
  store i8 0, i8* %1, align 1, !dbg !7501
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7502
  %4 = and i32 %3, 2, !dbg !7504
  %5 = icmp eq i32 %4, 0, !dbg !7505
  br i1 %5, label %7, label %6, !dbg !7506

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7507
  br label %36, !dbg !7513

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7514
  %9 = icmp sgt i32 %8, -1, !dbg !7516
  br i1 %9, label %11, label %10, !dbg !7517

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7518
  br label %36, !dbg !7524

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7525
  %13 = and i32 %12, 1073741824, !dbg !7527
  %14 = icmp eq i32 %13, 0, !dbg !7528
  br i1 %14, label %36, label %15, !dbg !7529

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !7530
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !7536
  br i1 %16, label %17, label %21, !dbg !7538

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7539
  %19 = load i32, i32* %18, align 4, !dbg !7539
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.59, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7539
  %20 = load i32, i32* %18, align 4, !dbg !7545
  call void @llvm.dbg.value(metadata i32 %20, metadata !7494, metadata !DIExpression()), !dbg !7495
  br label %36, !dbg !7546

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7547
  %23 = and i32 %22, 255, !dbg !7549
  %24 = icmp eq i32 %23, 0, !dbg !7550
  br i1 %24, label %27, label %25, !dbg !7551

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %26, metadata !7494, metadata !DIExpression()), !dbg !7495
  br label %36, !dbg !7554

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7555
  %29 = and i32 %28, 65280, !dbg !7557
  %30 = icmp eq i32 %29, 0, !dbg !7558
  br i1 %30, label %32, label %31, !dbg !7559

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7560
  call void @llvm.dbg.value(metadata i32 0, metadata !7494, metadata !DIExpression()), !dbg !7495
  br label %36, !dbg !7562

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7563
  %34 = icmp ult i32 %33, 65536, !dbg !7565
  br i1 %34, label %36, label %35, !dbg !7566

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7567
  call void @llvm.dbg.value(metadata i32 0, metadata !7494, metadata !DIExpression()), !dbg !7495
  br label %36, !dbg !7569

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7495
  call void @llvm.dbg.value(metadata i32 %37, metadata !7494, metadata !DIExpression()), !dbg !7495
  ret i32 %37, !dbg !7570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7571 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7573, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i32 %1, metadata !7574, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %2, metadata !7575, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i32 0, metadata !7576, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i32 -22, metadata !7577, metadata !DIExpression()), !dbg !7586
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !7587
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7592
  %5 = and i32 %4, 16, !dbg !7594
  %6 = icmp eq i32 %5, 0, !dbg !7595
  br i1 %6, label %8, label %7, !dbg !7596

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !7597
  br label %8, !dbg !7603

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7604
  %10 = and i32 %9, 8, !dbg !7606
  %11 = icmp eq i32 %10, 0, !dbg !7607
  br i1 %11, label %13, label %12, !dbg !7608

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7609
  br label %13, !dbg !7615

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7616
  %15 = and i32 %14, 2, !dbg !7617
  %16 = icmp eq i32 %15, 0, !dbg !7618
  br i1 %16, label %27, label %17, !dbg !7619

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69) #25, !dbg !7620
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7625
  call void @llvm.dbg.value(metadata i32 %18, metadata !7578, metadata !DIExpression()), !dbg !7626
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7627
  %20 = and i32 %19, 128, !dbg !7629
  %21 = icmp eq i32 %20, 0, !dbg !7630
  br i1 %21, label %27, label %22, !dbg !7631

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7577, metadata !DIExpression()), !dbg !7586
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7632
  %23 = icmp eq i32 %1, 0, !dbg !7638
  br i1 %23, label %27, label %24, !dbg !7640

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7641
  %26 = and i32 %25, -129, !dbg !7641
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7641
  br label %27, !dbg !7643

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7586
  call void @llvm.dbg.value(metadata i32 %28, metadata !7577, metadata !DIExpression()), !dbg !7586
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7644
  %30 = and i32 %29, 1, !dbg !7646
  %31 = icmp eq i32 %30, 0, !dbg !7647
  br i1 %31, label %33, label %32, !dbg !7648

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #25, !dbg !7649
  br label %33, !dbg !7655

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7656
  %35 = and i32 %34, 32, !dbg !7658
  %36 = icmp eq i32 %35, 0, !dbg !7659
  br i1 %36, label %38, label %37, !dbg !7660

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #25, !dbg !7661
  br label %38, !dbg !7667

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7668
  %40 = and i32 %39, 16, !dbg !7669
  %41 = icmp eq i32 %40, 0, !dbg !7669
  br i1 %41, label %42, label %46, !dbg !7670

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7671
  %44 = and i32 %43, 2, !dbg !7672
  %45 = icmp eq i32 %44, 0, !dbg !7672
  br i1 %45, label %55, label %46, !dbg !7673

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7674
  %48 = and i32 %47, 2048, !dbg !7675
  %49 = icmp eq i32 %48, 0, !dbg !7675
  br i1 %49, label %55, label %50, !dbg !7676

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7677
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7678
  call void @llvm.dbg.value(metadata i32 %52, metadata !7581, metadata !DIExpression()), !dbg !7679
  %53 = icmp eq i32 %52, 0, !dbg !7680
  br i1 %53, label %55, label %54, !dbg !7682

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7683, metadata !DIExpression()) #23, !dbg !7686
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7689, !srcloc !7690
  call void @llvm.dbg.value(metadata i32 2, metadata !7576, metadata !DIExpression()), !dbg !7586
  br label %55, !dbg !7691

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7586
  call void @llvm.dbg.value(metadata i32 %56, metadata !7576, metadata !DIExpression()), !dbg !7586
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7692
  %58 = and i32 %57, 32, !dbg !7694
  %59 = icmp eq i32 %58, 0, !dbg !7695
  br i1 %59, label %63, label %60, !dbg !7696

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7697
  %62 = and i32 %61, -8193, !dbg !7697
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7697
  br label %63, !dbg !7699

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7700
  %65 = or i32 %64, 255, !dbg !7700
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7700
  store i8 0, i8* %2, align 1, !dbg !7701
  ret i32 %56, !dbg !7702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7703 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7707, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i32 %0, metadata !7708, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i8* %1, metadata !7709, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i32 0, metadata !7710, metadata !DIExpression()), !dbg !7714
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7715
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7720
  %4 = and i32 %3, 4096, !dbg !7722
  %5 = icmp eq i32 %4, 0, !dbg !7722
  br i1 %5, label %7, label %6, !dbg !7723

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7724
  br label %7, !dbg !7730

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7731
  %9 = and i32 %8, 2048, !dbg !7733
  %10 = icmp eq i32 %9, 0, !dbg !7733
  br i1 %10, label %12, label %11, !dbg !7734

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7735
  br label %12, !dbg !7741

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7742
  %14 = and i32 %13, 512, !dbg !7743
  %15 = icmp eq i32 %14, 0, !dbg !7743
  br i1 %15, label %26, label %16, !dbg !7744

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7745
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7750
  call void @llvm.dbg.value(metadata i32 %17, metadata !7711, metadata !DIExpression()), !dbg !7751
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7752
  %19 = and i32 %18, 32768, !dbg !7754
  %20 = icmp eq i32 %19, 0, !dbg !7755
  br i1 %20, label %26, label %21, !dbg !7756

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7757
  %22 = icmp eq i32 %0, 0, !dbg !7763
  br i1 %22, label %26, label %23, !dbg !7765

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7766
  %25 = and i32 %24, -32769, !dbg !7766
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7766
  br label %26, !dbg !7768

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7769
  %28 = and i32 %27, 1024, !dbg !7771
  %29 = icmp eq i32 %28, 0, !dbg !7771
  br i1 %29, label %31, label %30, !dbg !7772

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #25, !dbg !7773
  br label %31, !dbg !7779

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7780
  %33 = and i32 %32, 256, !dbg !7782
  %34 = icmp eq i32 %33, 0, !dbg !7783
  br i1 %34, label %35, label %39, !dbg !7784

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7785
  %37 = and i32 %36, 8192, !dbg !7787
  %38 = icmp eq i32 %37, 0, !dbg !7787
  br i1 %38, label %41, label %39, !dbg !7788

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7789
  br label %41, !dbg !7790

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7790
  %43 = or i32 %42, 65280, !dbg !7790
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7790
  store i8 0, i8* %1, align 1, !dbg !7791
  ret void, !dbg !7792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7793 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7799, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 0, metadata !7800, metadata !DIExpression()), !dbg !7801
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7802
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7807
  %2 = and i32 %1, 33554432, !dbg !7809
  %3 = icmp eq i32 %2, 0, !dbg !7810
  br i1 %3, label %5, label %4, !dbg !7811

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #25, !dbg !7812
  br label %5, !dbg !7818

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7819
  %7 = and i32 %6, 16777216, !dbg !7821
  %8 = icmp eq i32 %7, 0, !dbg !7822
  br i1 %8, label %10, label %9, !dbg !7823

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7824
  br label %10, !dbg !7830

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7831
  %12 = and i32 %11, 524288, !dbg !7833
  %13 = icmp eq i32 %12, 0, !dbg !7834
  br i1 %13, label %15, label %14, !dbg !7835

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7836
  br label %15, !dbg !7842

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7843
  %17 = and i32 %16, 262144, !dbg !7845
  %18 = icmp eq i32 %17, 0, !dbg !7846
  br i1 %18, label %20, label %19, !dbg !7847

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !7848
  br label %20, !dbg !7854

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7855
  %22 = and i32 %21, 131072, !dbg !7857
  %23 = icmp eq i32 %22, 0, !dbg !7858
  br i1 %23, label %25, label %24, !dbg !7859

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7860
  br label %25, !dbg !7866

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7867
  %27 = and i32 %26, 65536, !dbg !7869
  %28 = icmp eq i32 %27, 0, !dbg !7870
  br i1 %28, label %30, label %29, !dbg !7871

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !7872
  br label %30, !dbg !7878

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7879
  %32 = or i32 %31, -65536, !dbg !7879
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7879
  ret void, !dbg !7880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7881 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %0, metadata !7886, metadata !DIExpression()), !dbg !7887
  store i8 0, i8* %0, align 1, !dbg !7888
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7889
  ret void, !dbg !7894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7895 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7899, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i32 %0, metadata !7900, metadata !DIExpression()), !dbg !7901
  %2 = icmp slt i32 %0, 16, !dbg !7902
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.49, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !7902
  %4 = add nsw i32 %0, -16, !dbg !7902
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7902
  ret void, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7908 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7912, metadata !DIExpression()), !dbg !7915
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7916
  %3 = load i32, i32* %2, align 4, !dbg !7916
  %4 = inttoptr i32 %3 to i16*, !dbg !7917
  call void @llvm.dbg.value(metadata i16* %4, metadata !7913, metadata !DIExpression()), !dbg !7915
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7918
  %6 = or i32 %5, 256, !dbg !7918
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7918
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7919, !srcloc !7922
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7923, !srcloc !7926
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7927
  %8 = load i16, i16* %7, align 2, !dbg !7928
  call void @llvm.dbg.value(metadata i16 %8, metadata !7914, metadata !DIExpression()), !dbg !7915
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7929
  %10 = and i32 %9, -257, !dbg !7929
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7929
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7930, !srcloc !7922
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7932, !srcloc !7926
  %11 = icmp eq i16 %8, -8446, !dbg !7934
  ret i1 %11, !dbg !7936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7937 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7938
  %2 = or i32 %1, 16, !dbg !7938
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7938
  ret void, !dbg !7939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7940 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7943, metadata !DIExpression()), !dbg !7944
  br label %1, !dbg !7945

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7943, metadata !DIExpression()), !dbg !7944
  tail call fastcc void @__NVIC_SetPriority.63(i32 noundef %2) #24, !dbg !7947
  %3 = add nuw nsw i32 %2, 1, !dbg !7950
  call void @llvm.dbg.value(metadata i32 %3, metadata !7943, metadata !DIExpression()), !dbg !7944
  %4 = icmp eq i32 %3, 97, !dbg !7951
  br i1 %4, label %5, label %1, !dbg !7945, !llvm.loop !7952

5:                                                ; preds = %1
  ret void, !dbg !7954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63(i32 noundef %0) unnamed_addr #15 !dbg !7955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7957, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i32 1, metadata !7958, metadata !DIExpression()), !dbg !7959
  %2 = and i32 %0, 15, !dbg !7960
  %3 = add nsw i32 %2, -4, !dbg !7960
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7960
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7960
  %6 = icmp slt i32 %0, 0, !dbg !7960
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7960
  store volatile i8 16, i8* %7, align 1, !dbg !7961
  ret void, !dbg !7963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8070, metadata !DIExpression()), !dbg !8071
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8072
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8074
  br i1 %3, label %4, label %12, !dbg !8075

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8076, !srcloc !8088
  call void @llvm.dbg.value(metadata i32 %5, metadata !8079, metadata !DIExpression()) #23, !dbg !8089
  %6 = icmp eq i32 %5, 0, !dbg !8090
  br i1 %6, label %12, label %7, !dbg !8091

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8092
  %9 = or i32 %8, 268435456, !dbg !8092
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8092
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8094
  %11 = and i32 %10, -32769, !dbg !8094
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8094
  br label %12, !dbg !8095

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8096
  ret void, !dbg !8097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8098 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !8099
  ret void, !dbg !8100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !754, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8 0, metadata !755, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 64, metadata !757, metadata !DIExpression()), !dbg !8101
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8102
  %3 = load i32, i32* %2, align 4, !dbg !8102
  %4 = add i32 %3, -64, !dbg !8104
  call void @llvm.dbg.value(metadata i32 %4, metadata !756, metadata !DIExpression()), !dbg !8101
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8105
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8106
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8107
  call void @llvm.dbg.value(metadata i8 1, metadata !755, metadata !DIExpression()), !dbg !8101
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !8108
  ret void, !dbg !8109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8110 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8111
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8112, !srcloc !8115
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8116, !srcloc !8119
  ret void, !dbg !8120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8121 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !8122, !srcloc !8125
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8126
  ret void, !dbg !8127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8128 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8143, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i8 %1, metadata !8144, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i32 %2, metadata !8145, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i32 %3, metadata !8146, metadata !DIExpression()), !dbg !8147
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8148
  ret void, !dbg !8150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8151 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8156, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8 %1, metadata !8157, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 undef, metadata !8158, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 undef, metadata !8159, metadata !DIExpression()), !dbg !8161
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8162
  call void @llvm.dbg.value(metadata i8 %3, metadata !8160, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8161
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !8163
  call void @llvm.dbg.value(metadata i32 %4, metadata !8160, metadata !DIExpression()), !dbg !8161
  %5 = trunc i32 %4 to i8, !dbg !8164
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8165
  ret void, !dbg !8166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8167 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8171, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i8 %1, metadata !8172, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i8 %2, metadata !8173, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i1 %3, metadata !8174, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8177
  %5 = zext i8 %2 to i32, !dbg !8178
  call void @llvm.dbg.value(metadata i32 %5, metadata !8176, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i32 0, metadata !8175, metadata !DIExpression()), !dbg !8177
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8176, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i32 0, metadata !8175, metadata !DIExpression()), !dbg !8177
  %7 = icmp eq i8 %1, 0, !dbg !8179
  br i1 %7, label %30, label %8, !dbg !8182

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8176, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i32 %10, metadata !8175, metadata !DIExpression()), !dbg !8177
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8183
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8186
  %13 = load i32, i32* %12, align 4, !dbg !8186
  %14 = icmp eq i32 %13, 0, !dbg !8187
  br i1 %14, label %26, label %15, !dbg !8188

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8189

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8191
  %18 = icmp eq i32 %17, 0, !dbg !8191
  br i1 %18, label %19, label %20, !dbg !8192

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !8193
  br label %30, !dbg !8199

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8200
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8201
  call void @llvm.dbg.value(metadata i32 %22, metadata !8176, metadata !DIExpression()), !dbg !8177
  %23 = icmp eq i32 %22, -22, !dbg !8202
  br i1 %23, label %30, label %24, !dbg !8204

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8205
  call void @llvm.dbg.value(metadata i32 %25, metadata !8176, metadata !DIExpression()), !dbg !8177
  br label %26, !dbg !8206

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8177
  call void @llvm.dbg.value(metadata i32 %27, metadata !8176, metadata !DIExpression()), !dbg !8177
  %28 = add nuw nsw i32 %10, 1, !dbg !8207
  call void @llvm.dbg.value(metadata i32 %28, metadata !8175, metadata !DIExpression()), !dbg !8177
  %29 = icmp eq i32 %28, %6, !dbg !8179
  br i1 %29, label %30, label %8, !dbg !8182, !llvm.loop !8208

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8177
  ret i32 %31, !dbg !8210
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !8211 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8215, metadata !DIExpression()), !dbg !8217
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8218
  %3 = load i32, i32* %2, align 4, !dbg !8218
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8219, !range !8220
  %5 = icmp ult i32 %4, 2, !dbg !8219
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8221
  br i1 %7, label %8, label %15, !dbg !8221

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8222
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8223
  %11 = load i32, i32* %10, align 4, !dbg !8223
  %12 = and i32 %11, %9, !dbg !8224
  %13 = icmp eq i32 %12, 0, !dbg !8225
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8216, metadata !DIExpression()), !dbg !8217
  ret i32 %16, !dbg !8226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8227 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8231, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8232, metadata !DIExpression()), !dbg !8234
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8235
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8235
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8233, metadata !DIExpression()), !dbg !8236
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8237
  %6 = load i32, i32* %5, align 4, !dbg !8237
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8238
  store i32 %6, i32* %7, align 4, !dbg !8239
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8240
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8241
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8242
  %11 = load i32, i32* %10, align 4, !dbg !8242
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* noundef nonnull %8, %union.anon* noundef nonnull %9, i32 noundef %11) #24, !dbg !8243
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !8244
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8245
  ret i32 %12, !dbg !8246
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* nocapture noundef writeonly %0, %union.anon* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !8247 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !8254, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !8255, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 undef, metadata !8256, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 %2, metadata !8257, metadata !DIExpression()), !dbg !8258
  %4 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !8259
  %5 = load i32, i32* %4, align 4, !dbg !8259
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !8260
  %7 = or i32 %6, %5, !dbg !8261
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !8262
  store i32 %7, i32* %8, align 4, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8265 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8270, metadata !DIExpression()), !dbg !8271
  %3 = zext i8 %0 to i32, !dbg !8272
  %4 = icmp ugt i8 %0, 7, !dbg !8274
  br i1 %4, label %5, label %6, !dbg !8275

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !8276
  br label %7, !dbg !8282

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !8283
  br label %7, !dbg !8284

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8271
  ret i32 %8, !dbg !8285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !8286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8290, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8291, metadata !DIExpression()), !dbg !8292
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !8293
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8294
  %4 = load i32, i32* %3, align 4, !dbg !8294
  %5 = and i32 %4, -32, !dbg !8295
  %6 = or i32 %5, %0, !dbg !8296
  %7 = or i32 %6, 16, !dbg !8296
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8297
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8298
  %9 = load i32, i32* %8, align 4, !dbg !8298
  %10 = or i32 %9, 1, !dbg !8299
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8300
  ret void, !dbg !8301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !8302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8305, metadata !DIExpression()), !dbg !8306
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8307
  ret void, !dbg !8308
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8313, metadata !DIExpression()), !dbg !8314
  %2 = icmp ult i32 %0, 33, !dbg !8315
  br i1 %2, label %11, label %3, !dbg !8317

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8318
  br i1 %4, label %11, label %5, !dbg !8320

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8321
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8322, !range !8220
  %8 = mul nsw i32 %7, -2, !dbg !8323
  %9 = add nsw i32 %8, 62, !dbg !8323
  %10 = and i32 %9, 62, !dbg !8324
  br label %11, !dbg !8325

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8314
  ret i32 %12, !dbg !8326
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8327 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8331, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i8 %1, metadata !8332, metadata !DIExpression()), !dbg !8333
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8334
  ret void, !dbg !8336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8337 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8341, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i8 %1, metadata !8342, metadata !DIExpression()), !dbg !8348
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8349
  call void @llvm.dbg.value(metadata i8 %3, metadata !8343, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8348
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %4, metadata !8343, metadata !DIExpression()), !dbg !8348
  %5 = icmp ne i32 %4, -22, !dbg !8351
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %4, metadata !8344, metadata !DIExpression()), !dbg !8353
  br i1 %7, label %8, label %12, !dbg !8352

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8344, metadata !DIExpression()), !dbg !8353
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !8354
  %10 = add i32 %9, 1, !dbg !8357
  call void @llvm.dbg.value(metadata i32 %10, metadata !8344, metadata !DIExpression()), !dbg !8353
  %11 = icmp eq i32 %10, 8, !dbg !8358
  br i1 %11, label %12, label %8, !dbg !8359, !llvm.loop !8360

12:                                               ; preds = %8, %2
  ret void, !dbg !8362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !8363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8366, metadata !DIExpression()), !dbg !8367
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8368
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8369
  ret void, !dbg !8370
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8371 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8376
  %2 = icmp ugt i32 %1, 8, !dbg !8378
  br i1 %2, label %14, label %3, !dbg !8379

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !8380
  call void @llvm.dbg.value(metadata i32 0, metadata !8375, metadata !DIExpression()), !dbg !8381
  %4 = icmp eq i32 %1, 0, !dbg !8382
  br i1 %4, label %12, label %5, !dbg !8385

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8385

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8375, metadata !DIExpression()), !dbg !8381
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8386
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !8388
  %10 = add nuw i32 %8, 1, !dbg !8389
  call void @llvm.dbg.value(metadata i32 %10, metadata !8375, metadata !DIExpression()), !dbg !8381
  %11 = icmp eq i32 %10, %1, !dbg !8382
  br i1 %11, label %12, label %7, !dbg !8385, !llvm.loop !8390

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8392
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8393
  tail call void @arm_core_mpu_enable() #24, !dbg !8394
  br label %14, !dbg !8395

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8381
  ret i32 %15, !dbg !8396
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8397 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8404, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata i8* %1, metadata !8405, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata i8* %0, metadata !8406, metadata !DIExpression()), !dbg !8407
  %3 = load i8, i8* %1, align 1, !dbg !8408
  %4 = icmp eq i8 %3, 0, !dbg !8409
  br i1 %4, label %13, label %5, !dbg !8410

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8404, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata i8* %8, metadata !8405, metadata !DIExpression()), !dbg !8407
  store i8 %6, i8* %7, align 1, !dbg !8411
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8413
  call void @llvm.dbg.value(metadata i8* %9, metadata !8404, metadata !DIExpression()), !dbg !8407
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8414
  call void @llvm.dbg.value(metadata i8* %10, metadata !8405, metadata !DIExpression()), !dbg !8407
  %11 = load i8, i8* %10, align 1, !dbg !8408
  %12 = icmp eq i8 %11, 0, !dbg !8409
  br i1 %12, label %13, label %5, !dbg !8410, !llvm.loop !8415

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8417
  ret i8* %0, !dbg !8418
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8419 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8423, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.value(metadata i8* %1, metadata !8424, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.value(metadata i32 %2, metadata !8425, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.value(metadata i8* %0, metadata !8426, metadata !DIExpression()), !dbg !8427
  %4 = icmp eq i32 %2, 0, !dbg !8428
  br i1 %4, label %22, label %5, !dbg !8429

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8423, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.value(metadata i32 %7, metadata !8425, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.value(metadata i8* %8, metadata !8424, metadata !DIExpression()), !dbg !8427
  %9 = load i8, i8* %8, align 1, !dbg !8430
  %10 = icmp eq i8 %9, 0, !dbg !8431
  br i1 %10, label %16, label %11, !dbg !8432

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8433
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8435
  call void @llvm.dbg.value(metadata i8* %12, metadata !8424, metadata !DIExpression()), !dbg !8427
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8436
  call void @llvm.dbg.value(metadata i8* %13, metadata !8423, metadata !DIExpression()), !dbg !8427
  %14 = add i32 %7, -1, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %14, metadata !8425, metadata !DIExpression()), !dbg !8427
  %15 = icmp eq i32 %14, 0, !dbg !8428
  br i1 %15, label %22, label %5, !dbg !8429, !llvm.loop !8438

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8423, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.value(metadata i32 %18, metadata !8425, metadata !DIExpression()), !dbg !8427
  store i8 0, i8* %17, align 1, !dbg !8440
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8442
  call void @llvm.dbg.value(metadata i8* %19, metadata !8423, metadata !DIExpression()), !dbg !8427
  %20 = add i32 %18, -1, !dbg !8443
  call void @llvm.dbg.value(metadata i32 %20, metadata !8425, metadata !DIExpression()), !dbg !8427
  %21 = icmp eq i32 %20, 0, !dbg !8444
  br i1 %21, label %22, label %16, !dbg !8445, !llvm.loop !8446

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8448
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8449 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8453, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.value(metadata i32 %1, metadata !8454, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.value(metadata i32 %1, metadata !8455, metadata !DIExpression()), !dbg !8456
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8457

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8453, metadata !DIExpression()), !dbg !8456
  %6 = load i8, i8* %5, align 1, !dbg !8458
  %7 = icmp eq i8 %6, %3, !dbg !8459
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8460
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8461
  call void @llvm.dbg.value(metadata i8* %10, metadata !8453, metadata !DIExpression()), !dbg !8456
  br i1 %9, label %11, label %4, !dbg !8460, !llvm.loop !8463

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8465
  ret i8* %12, !dbg !8466
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8467 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8469, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 %1, metadata !8470, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i8* null, metadata !8471, metadata !DIExpression()), !dbg !8472
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8473

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8472
  call void @llvm.dbg.value(metadata i8* %6, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i8* %5, metadata !8469, metadata !DIExpression()), !dbg !8472
  %7 = load i8, i8* %5, align 1, !dbg !8474
  %8 = icmp eq i8 %7, %3, !dbg !8477
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8478
  call void @llvm.dbg.value(metadata i8* %9, metadata !8471, metadata !DIExpression()), !dbg !8472
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8479
  call void @llvm.dbg.value(metadata i8* %10, metadata !8469, metadata !DIExpression()), !dbg !8472
  %11 = icmp eq i8 %7, 0, !dbg !8480
  br i1 %11, label %12, label %4, !dbg !8480, !llvm.loop !8481

12:                                               ; preds = %4
  ret i8* %9, !dbg !8483
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !8484 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8488, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.value(metadata i32 0, metadata !8489, metadata !DIExpression()), !dbg !8490
  %2 = load i8, i8* %0, align 1, !dbg !8491
  %3 = icmp eq i8 %2, 0, !dbg !8492
  br i1 %3, label %11, label %4, !dbg !8493

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8489, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.value(metadata i8* %6, metadata !8488, metadata !DIExpression()), !dbg !8490
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8494
  call void @llvm.dbg.value(metadata i8* %7, metadata !8488, metadata !DIExpression()), !dbg !8490
  %8 = add i32 %5, 1, !dbg !8496
  call void @llvm.dbg.value(metadata i32 %8, metadata !8489, metadata !DIExpression()), !dbg !8490
  %9 = load i8, i8* %7, align 1, !dbg !8491
  %10 = icmp eq i8 %9, 0, !dbg !8492
  br i1 %10, label %11, label %4, !dbg !8493, !llvm.loop !8497

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8490
  ret i32 %12, !dbg !8499
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8504, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.value(metadata i32 %1, metadata !8505, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.value(metadata i32 0, metadata !8506, metadata !DIExpression()), !dbg !8507
  %3 = load i8, i8* %0, align 1, !dbg !8508
  %4 = icmp ne i8 %3, 0, !dbg !8509
  %5 = icmp ne i32 %1, 0, !dbg !8510
  %6 = and i1 %4, %5, !dbg !8510
  br i1 %6, label %7, label %16, !dbg !8511

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8506, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.value(metadata i8* %9, metadata !8504, metadata !DIExpression()), !dbg !8507
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8512
  call void @llvm.dbg.value(metadata i8* %10, metadata !8504, metadata !DIExpression()), !dbg !8507
  %11 = add nuw i32 %8, 1, !dbg !8514
  call void @llvm.dbg.value(metadata i32 %11, metadata !8506, metadata !DIExpression()), !dbg !8507
  %12 = load i8, i8* %10, align 1, !dbg !8508
  %13 = icmp ne i8 %12, 0, !dbg !8509
  %14 = icmp ult i32 %11, %1, !dbg !8510
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8510
  br i1 %15, label %7, label %16, !dbg !8511, !llvm.loop !8515

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8507
  ret i32 %17, !dbg !8517
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !8518 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8522, metadata !DIExpression()), !dbg !8524
  call void @llvm.dbg.value(metadata i8* %1, metadata !8523, metadata !DIExpression()), !dbg !8524
  %3 = load i8, i8* %0, align 1, !dbg !8525
  %4 = load i8, i8* %1, align 1, !dbg !8526
  %5 = icmp ne i8 %3, %4, !dbg !8527
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8528
  br i1 %7, label %18, label %8, !dbg !8528

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8523, metadata !DIExpression()), !dbg !8524
  call void @llvm.dbg.value(metadata i8* %10, metadata !8522, metadata !DIExpression()), !dbg !8524
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8529
  call void @llvm.dbg.value(metadata i8* %11, metadata !8522, metadata !DIExpression()), !dbg !8524
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8531
  call void @llvm.dbg.value(metadata i8* %12, metadata !8523, metadata !DIExpression()), !dbg !8524
  %13 = load i8, i8* %11, align 1, !dbg !8525
  %14 = load i8, i8* %12, align 1, !dbg !8526
  %15 = icmp ne i8 %13, %14, !dbg !8527
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8528
  br i1 %17, label %18, label %8, !dbg !8528, !llvm.loop !8532

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8525
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8526
  %21 = zext i8 %19 to i32, !dbg !8535
  %22 = zext i8 %20 to i32, !dbg !8536
  %23 = sub nsw i32 %21, %22, !dbg !8537
  ret i32 %23, !dbg !8538
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8539 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8543, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %1, metadata !8544, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i32 %2, metadata !8545, metadata !DIExpression()), !dbg !8546
  %4 = icmp eq i32 %2, 0, !dbg !8547
  br i1 %4, label %23, label %5, !dbg !8547

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8545, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %7, metadata !8544, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %8, metadata !8543, metadata !DIExpression()), !dbg !8546
  %9 = load i8, i8* %8, align 1, !dbg !8548
  %10 = load i8, i8* %7, align 1, !dbg !8549
  %11 = icmp ne i8 %9, %10, !dbg !8550
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8551
  br i1 %13, label %19, label %14, !dbg !8551

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8552
  call void @llvm.dbg.value(metadata i8* %15, metadata !8543, metadata !DIExpression()), !dbg !8546
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8554
  call void @llvm.dbg.value(metadata i8* %16, metadata !8544, metadata !DIExpression()), !dbg !8546
  %17 = add i32 %6, -1, !dbg !8555
  call void @llvm.dbg.value(metadata i32 %17, metadata !8545, metadata !DIExpression()), !dbg !8546
  %18 = icmp eq i32 %17, 0, !dbg !8547
  br i1 %18, label %23, label %5, !dbg !8547, !llvm.loop !8556

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8559
  %21 = zext i8 %10 to i32, !dbg !8560
  %22 = sub nsw i32 %20, %21, !dbg !8561
  br label %23, !dbg !8562

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8562
  ret i32 %24, !dbg !8563
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8564 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8568, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata i8* %1, metadata !8569, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata i8** %2, metadata !8570, metadata !DIExpression()), !dbg !8573
  %4 = icmp eq i8* %0, null, !dbg !8574
  br i1 %4, label %5, label %7, !dbg !8574

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8575
  br label %7, !dbg !8574

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8574
  call void @llvm.dbg.value(metadata i8* %8, metadata !8571, metadata !DIExpression()), !dbg !8573
  %9 = load i8, i8* %8, align 1, !dbg !8576
  %10 = icmp eq i8 %9, 0, !dbg !8576
  br i1 %10, label %33, label %11, !dbg !8577

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8571, metadata !DIExpression()), !dbg !8573
  %14 = zext i8 %12 to i32, !dbg !8576
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8578
  %16 = icmp eq i8* %15, null, !dbg !8577
  br i1 %16, label %21, label %17, !dbg !8579

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8580
  call void @llvm.dbg.value(metadata i8* %18, metadata !8571, metadata !DIExpression()), !dbg !8573
  %19 = load i8, i8* %18, align 1, !dbg !8576
  %20 = icmp eq i8 %19, 0, !dbg !8576
  br i1 %20, label %33, label %11, !dbg !8577, !llvm.loop !8582

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8572, metadata !DIExpression()), !dbg !8573
  %24 = zext i8 %22 to i32, !dbg !8584
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8585
  %26 = icmp eq i8* %25, null, !dbg !8586
  br i1 %26, label %27, label %31, !dbg !8587

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8588
  call void @llvm.dbg.value(metadata i8* %28, metadata !8572, metadata !DIExpression()), !dbg !8573
  %29 = load i8, i8* %28, align 1, !dbg !8584
  %30 = icmp eq i8 %29, 0, !dbg !8584
  br i1 %30, label %33, label %21, !dbg !8590, !llvm.loop !8591

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8593
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8596
  br label %33, !dbg !8597

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8573
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8573
  store i8* %34, i8** %2, align 4, !dbg !8573
  ret i8* %35, !dbg !8598
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8601, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.value(metadata i8* %1, metadata !8602, metadata !DIExpression()), !dbg !8603
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8604
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8605
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8606
  ret i8* %0, !dbg !8607
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8608 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8610, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8* %1, metadata !8611, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i32 %2, metadata !8612, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8* %0, metadata !8613, metadata !DIExpression()), !dbg !8615
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %4, metadata !8614, metadata !DIExpression()), !dbg !8615
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8617
  call void @llvm.dbg.value(metadata i8* %5, metadata !8610, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8* %1, metadata !8611, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i32 %2, metadata !8612, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i32 %2, metadata !8612, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8615
  %6 = icmp eq i32 %2, 0, !dbg !8618
  br i1 %6, label %18, label %7, !dbg !8619

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8620
  call void @llvm.dbg.value(metadata i8* %9, metadata !8610, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8* %10, metadata !8611, metadata !DIExpression()), !dbg !8615
  %12 = load i8, i8* %10, align 1, !dbg !8621
  %13 = icmp eq i8 %12, 0, !dbg !8622
  br i1 %13, label %18, label %14, !dbg !8623

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8624
  call void @llvm.dbg.value(metadata i8* %15, metadata !8611, metadata !DIExpression()), !dbg !8615
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8626
  call void @llvm.dbg.value(metadata i8* %16, metadata !8610, metadata !DIExpression()), !dbg !8615
  store i8 %12, i8* %9, align 1, !dbg !8627
  call void @llvm.dbg.value(metadata i32 %11, metadata !8612, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i32 %11, metadata !8612, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8615
  %17 = icmp eq i32 %11, 0, !dbg !8618
  br i1 %17, label %18, label %7, !dbg !8619, !llvm.loop !8628

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8615
  store i8 0, i8* %19, align 1, !dbg !8630
  ret i8* %0, !dbg !8631
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8632 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8636, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i8* %1, metadata !8637, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i32 %2, metadata !8638, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i8* %0, metadata !8639, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i8* %1, metadata !8640, metadata !DIExpression()), !dbg !8641
  %4 = icmp eq i32 %2, 0, !dbg !8642
  br i1 %4, label %31, label %5, !dbg !8644

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8640, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i8* %0, metadata !8639, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i32 %2, metadata !8638, metadata !DIExpression()), !dbg !8641
  %6 = add i32 %2, -1, !dbg !8645
  call void @llvm.dbg.value(metadata i32 %6, metadata !8638, metadata !DIExpression()), !dbg !8641
  %7 = icmp eq i32 %6, 0, !dbg !8646
  br i1 %7, label %23, label %8, !dbg !8647

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8648
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8648
  br label %11, !dbg !8648

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8640, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i8* %14, metadata !8639, metadata !DIExpression()), !dbg !8641
  %15 = load i8, i8* %14, align 1, !dbg !8649
  %16 = load i8, i8* %13, align 1, !dbg !8650
  %17 = icmp eq i8 %15, %16, !dbg !8651
  br i1 %17, label %18, label %23, !dbg !8648

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8652
  call void @llvm.dbg.value(metadata i8* %19, metadata !8639, metadata !DIExpression()), !dbg !8641
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8654
  call void @llvm.dbg.value(metadata i8* %20, metadata !8640, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i32 %12, metadata !8638, metadata !DIExpression()), !dbg !8641
  %21 = add i32 %12, -1, !dbg !8645
  call void @llvm.dbg.value(metadata i32 %21, metadata !8638, metadata !DIExpression()), !dbg !8641
  %22 = icmp eq i32 %21, 0, !dbg !8646
  br i1 %22, label %23, label %11, !dbg !8647, !llvm.loop !8655

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8641
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8641
  %26 = load i8, i8* %24, align 1, !dbg !8657
  %27 = zext i8 %26 to i32, !dbg !8657
  %28 = load i8, i8* %25, align 1, !dbg !8658
  %29 = zext i8 %28 to i32, !dbg !8658
  %30 = sub nsw i32 %27, %29, !dbg !8659
  br label %31, !dbg !8660

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8641
  ret i32 %32, !dbg !8661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8666, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i8* %1, metadata !8667, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i32 %2, metadata !8668, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i8* %0, metadata !8669, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i8* %1, metadata !8670, metadata !DIExpression()), !dbg !8671
  %4 = ptrtoint i8* %0 to i32, !dbg !8672
  %5 = ptrtoint i8* %1 to i32, !dbg !8672
  %6 = sub i32 %4, %5, !dbg !8672
  %7 = icmp ult i32 %6, %2, !dbg !8674
  br i1 %7, label %10, label %8, !dbg !8675

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8670, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i8* %0, metadata !8669, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i32 %2, metadata !8668, metadata !DIExpression()), !dbg !8671
  %9 = icmp eq i32 %2, 0, !dbg !8676
  br i1 %9, label %26, label %17, !dbg !8678

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8668, metadata !DIExpression()), !dbg !8671
  %12 = add i32 %11, -1, !dbg !8679
  call void @llvm.dbg.value(metadata i32 %12, metadata !8668, metadata !DIExpression()), !dbg !8671
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8682
  %14 = load i8, i8* %13, align 1, !dbg !8682
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8683
  store i8 %14, i8* %15, align 1, !dbg !8684
  %16 = icmp eq i32 %12, 0, !dbg !8685
  br i1 %16, label %26, label %10, !dbg !8686, !llvm.loop !8687

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8670, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i8* %19, metadata !8669, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i32 %20, metadata !8668, metadata !DIExpression()), !dbg !8671
  %21 = load i8, i8* %18, align 1, !dbg !8689
  store i8 %21, i8* %19, align 1, !dbg !8691
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8692
  call void @llvm.dbg.value(metadata i8* %22, metadata !8669, metadata !DIExpression()), !dbg !8671
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8693
  call void @llvm.dbg.value(metadata i8* %23, metadata !8670, metadata !DIExpression()), !dbg !8671
  %24 = add i32 %20, -1, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %24, metadata !8668, metadata !DIExpression()), !dbg !8671
  %25 = icmp eq i32 %24, 0, !dbg !8676
  br i1 %25, label %26, label %17, !dbg !8678, !llvm.loop !8695

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8697
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8704, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8* %1, metadata !8705, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 %2, metadata !8706, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8* %0, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8* %1, metadata !8708, metadata !DIExpression()), !dbg !8709
  %4 = icmp eq i32 %2, 0, !dbg !8710
  br i1 %4, label %14, label %5, !dbg !8711

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8708, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8* %7, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 %8, metadata !8706, metadata !DIExpression()), !dbg !8709
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8712
  call void @llvm.dbg.value(metadata i8* %9, metadata !8708, metadata !DIExpression()), !dbg !8709
  %10 = load i8, i8* %6, align 1, !dbg !8714
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8715
  call void @llvm.dbg.value(metadata i8* %11, metadata !8707, metadata !DIExpression()), !dbg !8709
  store i8 %10, i8* %7, align 1, !dbg !8716
  %12 = add i32 %8, -1, !dbg !8717
  call void @llvm.dbg.value(metadata i32 %12, metadata !8706, metadata !DIExpression()), !dbg !8709
  %13 = icmp eq i32 %12, 0, !dbg !8710
  br i1 %13, label %14, label %5, !dbg !8711, !llvm.loop !8718

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8720
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8721 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8725, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 %1, metadata !8726, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 %2, metadata !8727, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i8* %0, metadata !8728, metadata !DIExpression()), !dbg !8730
  %4 = trunc i32 %1 to i8, !dbg !8731
  call void @llvm.dbg.value(metadata i8 %4, metadata !8729, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 %2, metadata !8727, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i8* %0, metadata !8728, metadata !DIExpression()), !dbg !8730
  %5 = icmp eq i32 %2, 0, !dbg !8732
  br i1 %5, label %12, label %6, !dbg !8733

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8727, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i8* %8, metadata !8728, metadata !DIExpression()), !dbg !8730
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8734
  call void @llvm.dbg.value(metadata i8* %9, metadata !8728, metadata !DIExpression()), !dbg !8730
  store i8 %4, i8* %8, align 1, !dbg !8736
  %10 = add i32 %7, -1, !dbg !8737
  call void @llvm.dbg.value(metadata i32 %10, metadata !8727, metadata !DIExpression()), !dbg !8730
  %11 = icmp eq i32 %10, 0, !dbg !8732
  br i1 %11, label %12, label %6, !dbg !8733, !llvm.loop !8738

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8740
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8745, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %1, metadata !8746, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %2, metadata !8747, metadata !DIExpression()), !dbg !8751
  %4 = icmp eq i32 %2, 0, !dbg !8752
  br i1 %4, label %17, label %5, !dbg !8753

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8754

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8755
  call void @llvm.dbg.value(metadata i8* %9, metadata !8748, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32 %8, metadata !8747, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i8* %9, metadata !8748, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8755
  %10 = load i8, i8* %9, align 1, !dbg !8756
  %11 = icmp eq i8 %10, %6, !dbg !8759
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8760
  call void @llvm.dbg.value(metadata i8* %12, metadata !8748, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32 %13, metadata !8747, metadata !DIExpression()), !dbg !8751
  br i1 %15, label %16, label %7, !dbg !8760, !llvm.loop !8761

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8763

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8751
  ret i8* %19, !dbg !8764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !8765 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8767, metadata !DIExpression()), !dbg !8768
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8769
  ret void, !dbg !8770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8773, metadata !DIExpression()), !dbg !8774
  ret i32 -1, !dbg !8775
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8780, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i32* %1, metadata !8781, metadata !DIExpression()), !dbg !8782
  %3 = ptrtoint i32* %1 to i32, !dbg !8783
  %4 = and i32 %3, -2, !dbg !8783
  %5 = icmp eq i32 %4, 2, !dbg !8783
  br i1 %5, label %6, label %9, !dbg !8783

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8784
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8784
  br label %9, !dbg !8785

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8785
  ret i32 %10, !dbg !8786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8789, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata i32* %1, metadata !8790, metadata !DIExpression()), !dbg !8791
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8792
  ret i32 %3, !dbg !8793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32* %1, metadata !8798, metadata !DIExpression()), !dbg !8799
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8800, !srcloc !8802
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8803
  ret i32 %3, !dbg !8804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8805 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8810, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32* %1, metadata !8811, metadata !DIExpression()), !dbg !8814
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8815
  call void @llvm.dbg.value(metadata i32 %3, metadata !8812, metadata !DIExpression()), !dbg !8814
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %4, metadata !8813, metadata !DIExpression()), !dbg !8814
  %5 = icmp ne i32 %3, %4, !dbg !8817
  %6 = sext i1 %5 to i32, !dbg !8818
  ret i32 %6, !dbg !8819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8820 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8824, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i32 %1, metadata !8825, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i32 %2, metadata !8826, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i32* %3, metadata !8827, metadata !DIExpression()), !dbg !8828
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8829
  ret i32 %5, !dbg !8830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8831 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8833, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 %2, metadata !8835, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32* %3, metadata !8836, metadata !DIExpression()), !dbg !8837
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8838, !srcloc !8840
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8841
  ret i32 %5, !dbg !8842
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8843 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8845, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 %1, metadata !8846, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 %2, metadata !8847, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32* %3, metadata !8848, metadata !DIExpression()), !dbg !8853
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8854
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8856
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8856
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8856
  br i1 %11, label %33, label %12, !dbg !8856

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8853
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8853
  call void @llvm.dbg.value(metadata i8* %14, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 %13, metadata !8849, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 %1, metadata !8850, metadata !DIExpression()), !dbg !8853
  br label %15, !dbg !8857

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8859
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8853
  call void @llvm.dbg.value(metadata i8* %17, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 %16, metadata !8850, metadata !DIExpression()), !dbg !8853
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8860
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8863
  call void @llvm.dbg.value(metadata i8* %19, metadata !8851, metadata !DIExpression()), !dbg !8853
  %20 = load i8, i8* %17, align 1, !dbg !8864
  %21 = zext i8 %20 to i32, !dbg !8865
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8860
  %23 = icmp eq i32 %22, -1, !dbg !8866
  br i1 %23, label %30, label %24, !dbg !8867

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8868
  call void @llvm.dbg.value(metadata i32 %25, metadata !8850, metadata !DIExpression()), !dbg !8853
  %26 = icmp eq i32 %25, 0, !dbg !8869
  br i1 %26, label %27, label %15, !dbg !8870, !llvm.loop !8871

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8873
  call void @llvm.dbg.value(metadata i32 %28, metadata !8849, metadata !DIExpression()), !dbg !8853
  %29 = icmp eq i32 %28, 0, !dbg !8874
  br i1 %29, label %30, label %12, !dbg !8875, !llvm.loop !8876

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8853
  call void @llvm.dbg.value(metadata i32 %31, metadata !8849, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.label(metadata !8852), !dbg !8879
  %32 = sub i32 %2, %31, !dbg !8880
  br label %33, !dbg !8881

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8853
  ret i32 %34, !dbg !8882
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8883 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8887, metadata !DIExpression()), !dbg !8888
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8889
  %3 = icmp eq i32 %2, -1, !dbg !8891
  br i1 %3, label %8, label %4, !dbg !8892

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8893
  %6 = icmp eq i32 %5, -1, !dbg !8894
  %7 = sext i1 %6 to i32, !dbg !8893
  br label %8, !dbg !8895

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8888
  ret i32 %9, !dbg !8896
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_simple_submit(%struct.rtio* noundef %0) #1 !dbg !8897 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !8988, metadata !DIExpression()), !dbg !8994
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !8995
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8995
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !8995
  %5 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %4) #24, !dbg !8995
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8995
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !8995
  %8 = load i32, i32* %7, align 4, !dbg !8995
  %9 = add i32 %8, %5, !dbg !8995
  call void @llvm.dbg.value(metadata i32 %9, metadata !8991, metadata !DIExpression()), !dbg !8996
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !8995
  %11 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %10) #24, !dbg !8995
  %12 = icmp eq i32 %9, %11, !dbg !8995
  call void @llvm.dbg.value(metadata i1 %12, metadata !8993, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8996
  br i1 %12, label %23, label %13, !dbg !8995

13:                                               ; preds = %1
  %14 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8997
  %15 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %14, i32 0, i32 0, i32 1, !dbg !8997
  %16 = load i32, i32* %15, align 4, !dbg !8997
  %17 = add i32 %16, 1, !dbg !8997
  store i32 %17, i32* %15, align 4, !dbg !8997
  %18 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8995
  %19 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 0, i32 4, !dbg !8995
  %20 = load i32, i32* %19, align 4, !dbg !8995
  %21 = and i32 %20, %9, !dbg !8995
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 1, i32 %21, !dbg !8995
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %22, metadata !8989, metadata !DIExpression()), !dbg !8994
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %22, %struct.rtio* noundef nonnull %0) #24, !dbg !9000
  br label %23, !dbg !9003

23:                                               ; preds = %1, %13
  ret i32 0, !dbg !9004
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.90(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9005 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9007, metadata !DIExpression()), !dbg !9008
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9009
  ret i32 %2, !dbg !9010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9011 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9013, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9014, metadata !DIExpression()), !dbg !9015
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9016
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9016
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9017
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9017
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9018
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9018
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9019
  ret void, !dbg !9020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9021 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9023, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9024, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %2, metadata !9025, metadata !DIExpression()), !dbg !9027
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9028
  %5 = load i8*, i8** %4, align 4, !dbg !9028
  call void @llvm.dbg.value(metadata i8* %5, metadata !9026, metadata !DIExpression()), !dbg !9027
  %6 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9029
  %7 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9029
  %8 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %7, i32 0, i32 0, i32 1, !dbg !9029
  %9 = load i32, i32* %8, align 4, !dbg !9029
  %10 = icmp eq i32 %9, 0, !dbg !9029
  br i1 %10, label %15, label %11, !dbg !9032

11:                                               ; preds = %3
  %12 = add i32 %9, -1, !dbg !9033
  store i32 %12, i32* %8, align 4, !dbg !9033
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9033
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !9033
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %14) #24, !dbg !9033
  br label %15, !dbg !9033

15:                                               ; preds = %11, %3
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %5) #24, !dbg !9035
  %16 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9036
  ret void, !dbg !9037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.93(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9038 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9040, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata i32 1, metadata !9041, metadata !DIExpression()), !dbg !9042
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9043
  ret void, !dbg !9044
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9045 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9049, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata i32 %1, metadata !9050, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata i8* %2, metadata !9051, metadata !DIExpression()), !dbg !9057
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9058
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9058
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9058
  %7 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %6) #24, !dbg !9058
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9058
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9058
  %10 = load i32, i32* %9, align 4, !dbg !9058
  %11 = add i32 %10, %7, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %11, metadata !9054, metadata !DIExpression()), !dbg !9059
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9058
  %13 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %12) #24, !dbg !9058
  %14 = sub i32 %11, %13, !dbg !9058
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9058
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9058
  %17 = load i32, i32* %16, align 4, !dbg !9058
  %18 = add i32 %17, 1, !dbg !9058
  %19 = icmp ult i32 %14, %18, !dbg !9058
  call void @llvm.dbg.value(metadata i1 %19, metadata !9056, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9059
  br i1 %19, label %22, label %20, !dbg !9058

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9052, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9057
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9060
  tail call fastcc void @atomic_inc(i32* noundef nonnull %21) #24, !dbg !9063
  br label %40, !dbg !9064

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9065
  %24 = load i32, i32* %23, align 4, !dbg !9065
  %25 = add i32 %24, 1, !dbg !9065
  store i32 %25, i32* %23, align 4, !dbg !9065
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9058
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9058
  %28 = load i32, i32* %27, align 4, !dbg !9058
  %29 = and i32 %28, %11, !dbg !9058
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9052, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9057
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9068
  store i32 %1, i32* %30, align 4, !dbg !9070
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9071
  store i8* %2, i8** %31, align 4, !dbg !9072
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9073
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9073
  %34 = load i32, i32* %33, align 4, !dbg !9073
  %35 = icmp eq i32 %34, 0, !dbg !9073
  br i1 %35, label %40, label %36, !dbg !9076

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9077
  store i32 %37, i32* %33, align 4, !dbg !9077
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9077
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9077
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %39) #24, !dbg !9077
  br label %40, !dbg !9077

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9080 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9084, metadata !DIExpression()), !dbg !9085
  tail call fastcc void @atomic_add.93(i32* noundef %0) #24, !dbg !9086
  ret void, !dbg !9087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_err(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9088 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9090, metadata !DIExpression()), !dbg !9105
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9091, metadata !DIExpression()), !dbg !9105
  call void @llvm.dbg.value(metadata i32 %2, metadata !9092, metadata !DIExpression()), !dbg !9105
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9106
  call void @llvm.dbg.value(metadata i8* undef, metadata !9094, metadata !DIExpression()), !dbg !9105
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9107
  %6 = load i16, i16* %5, align 2, !dbg !9107
  %7 = and i16 %6, 1, !dbg !9108
  %8 = icmp eq i16 %7, 0, !dbg !9109
  call void @llvm.dbg.value(metadata i1 %8, metadata !9095, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9105
  %9 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9110
  %10 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9110
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %10, i32 0, i32 0, i32 1, !dbg !9110
  %12 = load i32, i32* %11, align 4, !dbg !9110
  %13 = icmp eq i32 %12, 0, !dbg !9110
  br i1 %13, label %18, label %14, !dbg !9113

14:                                               ; preds = %3
  %15 = add i32 %12, -1, !dbg !9114
  store i32 %15, i32* %11, align 4, !dbg !9114
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9114
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 3, !dbg !9114
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %17) #24, !dbg !9114
  br label %18, !dbg !9114

18:                                               ; preds = %14, %3
  %19 = load i8*, i8** %4, align 4, !dbg !9116
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %19) #24, !dbg !9117
  br i1 %8, label %69, label %20, !dbg !9118

20:                                               ; preds = %18
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9119
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 3, !dbg !9119
  %23 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %22) #24, !dbg !9119
  %24 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9119
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 1, !dbg !9119
  %26 = load i32, i32* %25, align 4, !dbg !9119
  %27 = add i32 %26, %23, !dbg !9119
  call void @llvm.dbg.value(metadata i32 %27, metadata !9096, metadata !DIExpression()), !dbg !9120
  %28 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 2, !dbg !9119
  %29 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %28) #24, !dbg !9119
  %30 = icmp eq i32 %27, %29, !dbg !9119
  call void @llvm.dbg.value(metadata i1 %30, metadata !9100, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9120
  br i1 %30, label %71, label %31, !dbg !9119

31:                                               ; preds = %20, %56
  %32 = phi i32 [ %63, %56 ], [ %27, %20 ]
  %33 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9121
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %33, i32 0, i32 0, i32 1, !dbg !9121
  %35 = load i32, i32* %34, align 4, !dbg !9121
  %36 = add i32 %35, 1, !dbg !9121
  store i32 %36, i32* %34, align 4, !dbg !9121
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9121
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 4, !dbg !9121
  %39 = load i32, i32* %38, align 4, !dbg !9121
  %40 = and i32 %39, %32, !dbg !9121
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %37, i32 %40), metadata !9093, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9105
  %41 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 2, !dbg !9122
  %42 = load i16, i16* %41, align 2, !dbg !9122
  %43 = and i16 %42, 1, !dbg !9123
  %44 = icmp eq i16 %43, 0, !dbg !9124
  br i1 %44, label %67, label %45, !dbg !9125

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 4, !dbg !9126
  %47 = load i8*, i8** %46, align 4, !dbg !9126
  call void @llvm.dbg.value(metadata i8* %47, metadata !9094, metadata !DIExpression()), !dbg !9105
  %48 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9127
  %49 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %48, i32 0, i32 0, i32 1, !dbg !9127
  %50 = load i32, i32* %49, align 4, !dbg !9127
  %51 = icmp eq i32 %50, 0, !dbg !9127
  br i1 %51, label %56, label %52, !dbg !9130

52:                                               ; preds = %45
  %53 = add i32 %50, -1, !dbg !9131
  store i32 %53, i32* %49, align 4, !dbg !9131
  %54 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9131
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %54, i32 0, i32 0, i32 3, !dbg !9131
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %55) #24, !dbg !9131
  br label %56, !dbg !9131

56:                                               ; preds = %52, %45
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %47) #24, !dbg !9133
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9134
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 3, !dbg !9134
  %59 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %58) #24, !dbg !9134
  %60 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9134
  %61 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 1, !dbg !9134
  %62 = load i32, i32* %61, align 4, !dbg !9134
  %63 = add i32 %62, %59, !dbg !9134
  call void @llvm.dbg.value(metadata i32 %63, metadata !9101, metadata !DIExpression()), !dbg !9135
  %64 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 2, !dbg !9134
  %65 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %64) #24, !dbg !9134
  %66 = icmp eq i32 %63, %65, !dbg !9134
  call void @llvm.dbg.value(metadata i1 %66, metadata !9104, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9135
  br i1 %66, label %71, label %31, !dbg !9134

67:                                               ; preds = %31
  %68 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, !dbg !9121
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %68, metadata !9093, metadata !DIExpression()), !dbg !9105
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %68, %struct.rtio* noundef nonnull %0) #24, !dbg !9136
  br label %71, !dbg !9139

69:                                               ; preds = %18
  %70 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9140
  br label %71

71:                                               ; preds = %56, %20, %67, %69
  ret void, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_concurrent_submit(%struct.rtio* noundef %0) local_unnamed_addr #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9145, metadata !DIExpression()), !dbg !9176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.98, i32 0, i32 0), i32 noundef 73) #25, !dbg !9177
  %2 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9182
  %3 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %2, align 4, !dbg !9182
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %3, metadata !9146, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9183, metadata !DIExpression()) #23, !dbg !9190
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9192, !srcloc !9198
  call void @llvm.dbg.value(metadata i32 undef, metadata !9195, metadata !DIExpression()) #23, !dbg !9199
  call void @llvm.dbg.value(metadata i32 undef, metadata !9196, metadata !DIExpression()) #23, !dbg !9199
  call void @llvm.dbg.value(metadata i32 undef, metadata !9189, metadata !DIExpression()) #23, !dbg !9190
  call void @llvm.dbg.value(metadata i32 undef, metadata !9149, metadata !DIExpression()), !dbg !9176
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 6, !dbg !9200
  %6 = load %struct.rtio_sqe*, %struct.rtio_sqe** %5, align 4, !dbg !9200
  %7 = icmp eq %struct.rtio_sqe* %6, null, !dbg !9201
  %8 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9202
  %9 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9202
  br i1 %7, label %10, label %26, !dbg !9203

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 3, !dbg !9204
  %12 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %11) #24, !dbg !9204
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9204
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 1, !dbg !9204
  %15 = load i32, i32* %14, align 4, !dbg !9204
  %16 = add i32 %15, %12, !dbg !9204
  call void @llvm.dbg.value(metadata i32 %16, metadata !9154, metadata !DIExpression()), !dbg !9205
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 2, !dbg !9204
  %18 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %17) #24, !dbg !9204
  %19 = icmp eq i32 %16, %18, !dbg !9204
  call void @llvm.dbg.value(metadata i1 %19, metadata !9158, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9205
  br i1 %19, label %45, label %20, !dbg !9204

20:                                               ; preds = %10
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9204
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 4, !dbg !9204
  %23 = load i32, i32* %22, align 4, !dbg !9204
  %24 = and i32 %23, %16, !dbg !9204
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 1, i32 %24, !dbg !9204
  br label %47, !dbg !9204

26:                                               ; preds = %1
  %27 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 1, i32 0, !dbg !9206
  %28 = ptrtoint %struct.rtio_sqe* %6 to i32, !dbg !9206
  %29 = ptrtoint %struct.rtio_sqe* %27 to i32, !dbg !9206
  %30 = sub i32 %28, %29, !dbg !9206
  %31 = sdiv exact i32 %30, 20, !dbg !9206
  call void @llvm.dbg.value(metadata i32 %31, metadata !9159, metadata !DIExpression()), !dbg !9207
  %32 = add nsw i32 %31, 1, !dbg !9206
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 4, !dbg !9206
  %34 = load i32, i32* %33, align 4, !dbg !9206
  %35 = and i32 %32, %34, !dbg !9206
  %36 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !9206
  %37 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %36) #24, !dbg !9206
  %38 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9206
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 4, !dbg !9206
  %40 = load i32, i32* %39, align 4, !dbg !9206
  %41 = and i32 %40, %37, !dbg !9206
  %42 = icmp eq i32 %35, %41, !dbg !9206
  call void @llvm.dbg.value(metadata i1 %42, metadata !9162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9207
  %43 = and i32 %32, %40, !dbg !9206
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 1, i32 %43, !dbg !9206
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9147, metadata !DIExpression()), !dbg !9176
  br i1 %42, label %45, label %47

45:                                               ; preds = %26, %10
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9148, metadata !DIExpression()), !dbg !9176
  %46 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9208
  store %struct.rtio_sqe* null, %struct.rtio_sqe** %46, align 4, !dbg !9209
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9148, metadata !DIExpression()), !dbg !9176
  br label %140, !dbg !9210

47:                                               ; preds = %20, %26
  %48 = phi %struct.rtio_sqe* [ %44, %26 ], [ %25, %20 ], !dbg !9202
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9148, metadata !DIExpression()), !dbg !9176
  %49 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 8
  %50 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 7
  %51 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9148, metadata !DIExpression()), !dbg !9176
  %52 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9211
  br i1 %52, label %55, label %110, !dbg !9212

53:                                               ; preds = %89
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %109, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9148, metadata !DIExpression()), !dbg !9176
  %54 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9211
  br i1 %54, label %55, label %110, !dbg !9212

55:                                               ; preds = %47, %53
  %56 = phi %struct.rtio_sqe* [ %109, %53 ], [ %48, %47 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9147, metadata !DIExpression()), !dbg !9176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.100, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9213
  %57 = tail call fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9218
  call void @llvm.dbg.value(metadata i16 %57, metadata !9163, metadata !DIExpression()), !dbg !9219
  %58 = zext i16 %57 to i32, !dbg !9220
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.101, i32 0, i32 0), i32 noundef 73, i32 noundef %58) #25, !dbg !9220
  %59 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %49, align 4, !dbg !9225
  %60 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %59, i32 %58, !dbg !9226
  store %struct.rtio_sqe* %56, %struct.rtio_sqe** %60, align 4, !dbg !9227
  %61 = load i8*, i8** %50, align 4, !dbg !9228
  %62 = getelementptr inbounds i8, i8* %61, i32 %58, !dbg !9229
  store i8 2, i8* %62, align 1, !dbg !9230
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.102, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9231
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9147, metadata !DIExpression()), !dbg !9176
  br label %63, !dbg !9236

63:                                               ; preds = %55, %69
  %64 = phi %struct.rtio_sqe* [ %56, %55 ], [ %88, %69 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %64, metadata !9147, metadata !DIExpression()), !dbg !9176
  %65 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %64, i32 0, i32 2, !dbg !9237
  %66 = load i16, i16* %65, align 2, !dbg !9237
  %67 = and i16 %66, 1, !dbg !9238
  %68 = icmp eq i16 %67, 0, !dbg !9236
  br i1 %68, label %89, label %69, !dbg !9239

69:                                               ; preds = %63
  %70 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9240
  %71 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 1, i32 0, !dbg !9240
  %72 = ptrtoint %struct.rtio_sqe* %64 to i32, !dbg !9240
  %73 = ptrtoint %struct.rtio_sqe* %71 to i32, !dbg !9240
  %74 = sub i32 %72, %73, !dbg !9240
  %75 = sdiv exact i32 %74, 20, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %75, metadata !9165, metadata !DIExpression()), !dbg !9241
  %76 = add nsw i32 %75, 1, !dbg !9240
  %77 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 4, !dbg !9240
  %78 = load i32, i32* %77, align 4, !dbg !9240
  %79 = and i32 %76, %78, !dbg !9240
  %80 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 2, !dbg !9240
  %81 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %80) #24, !dbg !9240
  %82 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9240
  %83 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 0, i32 4, !dbg !9240
  %84 = load i32, i32* %83, align 4, !dbg !9240
  %85 = and i32 %84, %81, !dbg !9240
  %86 = icmp eq i32 %79, %85, !dbg !9240
  call void @llvm.dbg.value(metadata i1 %86, metadata !9168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9241
  %87 = and i32 %76, %84, !dbg !9240
  %88 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 1, i32 %87, !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9147, metadata !DIExpression()), !dbg !9176
  br i1 %86, label %89, label %63, !dbg !9236

89:                                               ; preds = %63, %69
  %90 = phi %struct.rtio_sqe* [ null, %69 ], [ %64, %63 ], !dbg !9176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.103, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef %90) #25, !dbg !9242
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9148, metadata !DIExpression()), !dbg !9176
  %91 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9247
  %92 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 1, i32 0, !dbg !9247
  %93 = ptrtoint %struct.rtio_sqe* %90 to i32, !dbg !9247
  %94 = ptrtoint %struct.rtio_sqe* %92 to i32, !dbg !9247
  %95 = sub i32 %93, %94, !dbg !9247
  %96 = sdiv exact i32 %95, 20, !dbg !9247
  call void @llvm.dbg.value(metadata i32 %96, metadata !9169, metadata !DIExpression()), !dbg !9248
  %97 = add nsw i32 %96, 1, !dbg !9247
  %98 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 4, !dbg !9247
  %99 = load i32, i32* %98, align 4, !dbg !9247
  %100 = and i32 %97, %99, !dbg !9247
  %101 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 2, !dbg !9247
  %102 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %101) #24, !dbg !9247
  %103 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9247
  %104 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 0, i32 4, !dbg !9247
  %105 = load i32, i32* %104, align 4, !dbg !9247
  %106 = and i32 %105, %102, !dbg !9247
  %107 = icmp eq i32 %100, %106, !dbg !9247
  call void @llvm.dbg.value(metadata i1 %107, metadata !9171, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9248
  %108 = and i32 %97, %105, !dbg !9247
  %109 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 1, i32 %108, !dbg !9247
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9147, metadata !DIExpression()), !dbg !9176
  br i1 %107, label %110, label %53, !dbg !9249

110:                                              ; preds = %89, %53, %47
  %111 = phi %struct.rtio_sqe* [ %48, %47 ], [ %90, %53 ], [ %90, %89 ], !dbg !9176
  %112 = phi %struct.rtio_sqe* [ %48, %47 ], [ null, %89 ], [ %109, %53 ], !dbg !9176
  %113 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9208
  store %struct.rtio_sqe* %112, %struct.rtio_sqe** %113, align 4, !dbg !9209
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9148, metadata !DIExpression()), !dbg !9176
  %114 = icmp eq %struct.rtio_sqe* %112, null, !dbg !9250
  br i1 %114, label %140, label %115, !dbg !9210

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  %117 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9251
  %118 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %117, i32 0, i32 0, i32 4
  %119 = load i32, i32* %118, align 4, !dbg !9251
  br label %120, !dbg !9210

120:                                              ; preds = %115, %120
  %121 = phi i32 [ %119, %115 ], [ %135, %120 ], !dbg !9251
  %122 = phi %struct.rtio_sq* [ %117, %115 ], [ %133, %120 ], !dbg !9251
  %123 = phi %struct.rtio_sqe* [ %112, %115 ], [ %139, %120 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9148, metadata !DIExpression()), !dbg !9176
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 1, i32 0, !dbg !9251
  %125 = ptrtoint %struct.rtio_sqe* %123 to i32, !dbg !9251
  %126 = ptrtoint %struct.rtio_sqe* %124 to i32, !dbg !9251
  %127 = sub i32 %125, %126, !dbg !9251
  %128 = sdiv exact i32 %127, 20, !dbg !9251
  call void @llvm.dbg.value(metadata i32 %128, metadata !9172, metadata !DIExpression()), !dbg !9252
  %129 = add nsw i32 %128, 1, !dbg !9251
  %130 = and i32 %129, %121, !dbg !9251
  %131 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 0, i32 2, !dbg !9251
  %132 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %131) #24, !dbg !9251
  %133 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9251
  %134 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 0, i32 4, !dbg !9251
  %135 = load i32, i32* %134, align 4, !dbg !9251
  %136 = and i32 %135, %132, !dbg !9251
  %137 = icmp eq i32 %130, %136, !dbg !9251
  call void @llvm.dbg.value(metadata i1 %137, metadata !9175, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9252
  %138 = and i32 %129, %135, !dbg !9251
  %139 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 1, i32 %138, !dbg !9251
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9147, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9147, metadata !DIExpression()), !dbg !9176
  br i1 %137, label %140, label %120, !dbg !9210

140:                                              ; preds = %120, %45, %110
  %141 = phi %struct.rtio_sqe* [ %111, %110 ], [ null, %45 ], [ %123, %120 ], !dbg !9176
  %142 = extractvalue { i32, i32 } %4, 0, !dbg !9192
  call void @llvm.dbg.value(metadata i32 %142, metadata !9195, metadata !DIExpression()) #23, !dbg !9199
  call void @llvm.dbg.value(metadata i32 %142, metadata !9189, metadata !DIExpression()) #23, !dbg !9190
  call void @llvm.dbg.value(metadata i32 %142, metadata !9149, metadata !DIExpression()), !dbg !9176
  store %struct.rtio_sqe* %141, %struct.rtio_sqe** %5, align 4, !dbg !9253
  tail call fastcc void @conex_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9254
  call void @llvm.dbg.value(metadata i32 undef, metadata !9255, metadata !DIExpression()) #23, !dbg !9261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9260, metadata !DIExpression()) #23, !dbg !9261
  call void @llvm.dbg.value(metadata i32 undef, metadata !9263, metadata !DIExpression()) #23, !dbg !9266
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %142) #23, !dbg !9268, !srcloc !9269
  ret i32 0, !dbg !9270
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.99(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9271 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9273, metadata !DIExpression()), !dbg !9274
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9275
  ret i32 %2, !dbg !9276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9281, metadata !DIExpression()), !dbg !9282
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9283
  %3 = load i16, i16* %2, align 4, !dbg !9283
  %4 = zext i16 %3 to i32, !dbg !9284
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9285
  %6 = load i16, i16* %5, align 2, !dbg !9285
  %7 = zext i16 %6 to i32, !dbg !9286
  %8 = sub nsw i32 %4, %7, !dbg !9287
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4, !dbg !9288
  %10 = load i16, i16* %9, align 4, !dbg !9288
  %11 = zext i16 %10 to i32, !dbg !9289
  %12 = icmp sle i32 %8, %11, !dbg !9290
  ret i1 %12, !dbg !9291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* nocapture noundef %0) unnamed_addr #11 !dbg !9292 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9296, metadata !DIExpression()), !dbg !9298
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9299
  %3 = load i16, i16* %2, align 4, !dbg !9299
  call void @llvm.dbg.value(metadata i16 %3, metadata !9297, metadata !DIExpression()), !dbg !9298
  %4 = add i16 %3, 1, !dbg !9300
  store i16 %4, i16* %2, align 4, !dbg !9300
  ret i16 %3, !dbg !9301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9302 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9306, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9307, metadata !DIExpression()), !dbg !9310
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9311
  %4 = load i16, i16* %3, align 2, !dbg !9311
  call void @llvm.dbg.value(metadata i16 %4, metadata !9308, metadata !DIExpression()), !dbg !9312
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9308, metadata !DIExpression()), !dbg !9312
  %6 = load i16, i16* %5, align 4, !dbg !9313
  %7 = icmp ult i16 %4, %6, !dbg !9315
  br i1 %7, label %8, label %13, !dbg !9316

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 8
  %12 = zext i16 %4 to i32, !dbg !9316
  br label %14, !dbg !9316

13:                                               ; preds = %35, %2
  ret void, !dbg !9317

14:                                               ; preds = %8, %35
  %15 = phi i16 [ %6, %8 ], [ %36, %35 ]
  %16 = phi i32 [ %12, %8 ], [ %37, %35 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9308, metadata !DIExpression()), !dbg !9312
  %17 = load i8*, i8** %9, align 4, !dbg !9318
  %18 = load i16, i16* %10, align 4, !dbg !9321
  %19 = trunc i32 %16 to i16, !dbg !9322
  %20 = and i16 %18, %19, !dbg !9322
  %21 = zext i16 %20 to i32, !dbg !9322
  %22 = getelementptr inbounds i8, i8* %17, i32 %21, !dbg !9323
  %23 = load i8, i8* %22, align 1, !dbg !9323
  %24 = and i8 %23, 2, !dbg !9324
  %25 = icmp eq i8 %24, 0, !dbg !9324
  br i1 %25, label %35, label %26, !dbg !9325

26:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.104, i32 0, i32 0), i32 noundef 73, i32 noundef %16) #25, !dbg !9326
  %27 = load i8*, i8** %9, align 4, !dbg !9332
  %28 = getelementptr inbounds i8, i8* %27, i32 %16, !dbg !9333
  %29 = load i8, i8* %28, align 1, !dbg !9334
  %30 = and i8 %29, -3, !dbg !9334
  store i8 %30, i8* %28, align 1, !dbg !9334
  %31 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %11, align 4, !dbg !9335
  %32 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %31, i32 %16, !dbg !9336
  %33 = load %struct.rtio_sqe*, %struct.rtio_sqe** %32, align 4, !dbg !9336
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %33, %struct.rtio* noundef %0) #24, !dbg !9337
  %34 = load i16, i16* %5, align 4, !dbg !9313
  br label %35, !dbg !9338

35:                                               ; preds = %14, %26
  %36 = phi i16 [ %15, %14 ], [ %34, %26 ], !dbg !9313
  %37 = add nuw nsw i32 %16, 1, !dbg !9339
  call void @llvm.dbg.value(metadata i32 %37, metadata !9308, metadata !DIExpression()), !dbg !9312
  %38 = zext i16 %36 to i32, !dbg !9315
  %39 = icmp ult i32 %37, %38, !dbg !9315
  br i1 %39, label %14, label %13, !dbg !9316, !llvm.loop !9340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9344, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9345, metadata !DIExpression()), !dbg !9346
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9347
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9347
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9348
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9348
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9349
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9349
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9350
  ret void, !dbg !9351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9352 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9354, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9355, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i32 %2, metadata !9356, metadata !DIExpression()), !dbg !9366
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9367
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9367
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9359, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9183, metadata !DIExpression()) #23, !dbg !9368
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9370, !srcloc !9198
  call void @llvm.dbg.value(metadata i32 undef, metadata !9195, metadata !DIExpression()) #23, !dbg !9372
  call void @llvm.dbg.value(metadata i32 undef, metadata !9196, metadata !DIExpression()) #23, !dbg !9372
  call void @llvm.dbg.value(metadata i32 undef, metadata !9189, metadata !DIExpression()) #23, !dbg !9368
  call void @llvm.dbg.value(metadata i32 undef, metadata !9358, metadata !DIExpression()), !dbg !9366
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9373
  %8 = load i8*, i8** %7, align 4, !dbg !9373
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9374
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9375
  call void @llvm.dbg.value(metadata i16 %9, metadata !9360, metadata !DIExpression()), !dbg !9366
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9376
  %11 = load i16, i16* %10, align 2, !dbg !9376
  %12 = and i16 %11, 1, !dbg !9377
  %13 = icmp eq i16 %12, 0, !dbg !9377
  br i1 %13, label %40, label %14, !dbg !9378

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9379
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9379
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9379
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9379
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9379
  %20 = sub i32 %18, %19, !dbg !9379
  %21 = sdiv exact i32 %20, 20, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %21, metadata !9361, metadata !DIExpression()), !dbg !9380
  %22 = add nsw i32 %21, 1, !dbg !9379
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9379
  %24 = load i32, i32* %23, align 4, !dbg !9379
  %25 = and i32 %22, %24, !dbg !9379
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9379
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9379
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9379
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9379
  %30 = load i32, i32* %29, align 4, !dbg !9379
  %31 = and i32 %30, %27, !dbg !9379
  %32 = icmp eq i32 %25, %31, !dbg !9379
  call void @llvm.dbg.value(metadata i1 %32, metadata !9365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9380
  %33 = and i32 %22, %30, !dbg !9379
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %33, !dbg !9379
  %35 = select i1 %32, %struct.rtio_sqe* null, %struct.rtio_sqe* %34, !dbg !9379
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9357, metadata !DIExpression()), !dbg !9366
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %35, %struct.rtio* noundef nonnull %0) #24, !dbg !9381
  %36 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 8, !dbg !9382
  %37 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %36, align 4, !dbg !9382
  %38 = zext i16 %9 to i32, !dbg !9383
  %39 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %37, i32 %38, !dbg !9383
  store %struct.rtio_sqe* %35, %struct.rtio_sqe** %39, align 4, !dbg !9384
  br label %47, !dbg !9385

40:                                               ; preds = %3
  %41 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9386
  %42 = load i8*, i8** %41, align 4, !dbg !9386
  %43 = zext i16 %9 to i32, !dbg !9388
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !9388
  %45 = load i8, i8* %44, align 1, !dbg !9389
  %46 = or i8 %45, 1, !dbg !9389
  store i8 %46, i8* %44, align 1, !dbg !9389
  br label %47

47:                                               ; preds = %40, %14
  %48 = extractvalue { i32, i32 } %6, 0, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %48, metadata !9195, metadata !DIExpression()) #23, !dbg !9372
  call void @llvm.dbg.value(metadata i32 %48, metadata !9189, metadata !DIExpression()) #23, !dbg !9368
  call void @llvm.dbg.value(metadata i32 %48, metadata !9358, metadata !DIExpression()), !dbg !9366
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef nonnull %5) #24, !dbg !9390
  call void @llvm.dbg.value(metadata i32 undef, metadata !9255, metadata !DIExpression()) #23, !dbg !9391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9260, metadata !DIExpression()) #23, !dbg !9391
  call void @llvm.dbg.value(metadata i32 undef, metadata !9263, metadata !DIExpression()) #23, !dbg !9393
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #23, !dbg !9395, !srcloc !9269
  ret void, !dbg !9396
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit.106(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9397 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9401, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata i32 %1, metadata !9402, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata i8* %2, metadata !9403, metadata !DIExpression()), !dbg !9409
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9410
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9410
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9410
  %7 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %6) #24, !dbg !9410
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9410
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9410
  %10 = load i32, i32* %9, align 4, !dbg !9410
  %11 = add i32 %10, %7, !dbg !9410
  call void @llvm.dbg.value(metadata i32 %11, metadata !9406, metadata !DIExpression()), !dbg !9411
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9410
  %13 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %12) #24, !dbg !9410
  %14 = sub i32 %11, %13, !dbg !9410
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9410
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9410
  %17 = load i32, i32* %16, align 4, !dbg !9410
  %18 = add i32 %17, 1, !dbg !9410
  %19 = icmp ult i32 %14, %18, !dbg !9410
  call void @llvm.dbg.value(metadata i1 %19, metadata !9408, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9411
  br i1 %19, label %22, label %20, !dbg !9410

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9404, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9409
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9412
  tail call fastcc void @atomic_inc.109(i32* noundef nonnull %21) #24, !dbg !9415
  br label %40, !dbg !9416

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9417
  %24 = load i32, i32* %23, align 4, !dbg !9417
  %25 = add i32 %24, 1, !dbg !9417
  store i32 %25, i32* %23, align 4, !dbg !9417
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9410
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9410
  %28 = load i32, i32* %27, align 4, !dbg !9410
  %29 = and i32 %28, %11, !dbg !9410
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9404, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9409
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9420
  store i32 %1, i32* %30, align 4, !dbg !9422
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9423
  store i8* %2, i8** %31, align 4, !dbg !9424
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9425
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9425
  %34 = load i32, i32* %33, align 4, !dbg !9425
  %35 = icmp eq i32 %34, 0, !dbg !9425
  br i1 %35, label %40, label %36, !dbg !9428

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9429
  store i32 %37, i32* %33, align 4, !dbg !9429
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9429
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9429
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %39) #24, !dbg !9429
  br label %40, !dbg !9429

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9431
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* nocapture noundef readonly %0, %struct.rtio_sqe* noundef readnone %1) unnamed_addr #9 !dbg !9432 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9436, metadata !DIExpression()), !dbg !9439
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9437, metadata !DIExpression()), !dbg !9439
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9440
  %4 = load i16, i16* %3, align 2, !dbg !9440
  call void @llvm.dbg.value(metadata i16 %4, metadata !9438, metadata !DIExpression()), !dbg !9439
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2
  %6 = load i16, i16* %5, align 4
  call void @llvm.dbg.value(metadata i16 %4, metadata !9438, metadata !DIExpression()), !dbg !9439
  %7 = icmp ult i16 %4, %6, !dbg !9441
  br i1 %7, label %8, label %23, !dbg !9444

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 8, !dbg !9445
  %10 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %9, align 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4
  %12 = load i16, i16* %11, align 4
  br label %13, !dbg !9444

13:                                               ; preds = %8, %20
  %14 = phi i16 [ %4, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i16 %14, metadata !9438, metadata !DIExpression()), !dbg !9439
  %15 = and i16 %12, %14, !dbg !9448
  %16 = zext i16 %15 to i32, !dbg !9448
  %17 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %10, i32 %16, !dbg !9449
  %18 = load %struct.rtio_sqe*, %struct.rtio_sqe** %17, align 4, !dbg !9449
  %19 = icmp eq %struct.rtio_sqe* %18, %1, !dbg !9450
  br i1 %19, label %23, label %20, !dbg !9451

20:                                               ; preds = %13
  %21 = add nuw i16 %14, 1, !dbg !9452
  call void @llvm.dbg.value(metadata i16 %21, metadata !9438, metadata !DIExpression()), !dbg !9439
  %22 = icmp ult i16 %21, %6, !dbg !9441
  br i1 %22, label %13, label %23, !dbg !9444, !llvm.loop !9453

23:                                               ; preds = %20, %13, %2
  %24 = phi i16 [ %4, %2 ], [ %14, %13 ], [ %6, %20 ], !dbg !9439
  ret i16 %24, !dbg !9455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9458, metadata !DIExpression()), !dbg !9460
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9459, metadata !DIExpression()), !dbg !9460
  tail call fastcc void @conex_sweep(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9461
  tail call fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9462
  ret void, !dbg !9463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep(%struct.rtio* nocapture noundef readonly %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9464 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9466, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9467, metadata !DIExpression()), !dbg !9470
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9471
  %4 = load i16, i16* %3, align 2, !dbg !9471
  call void @llvm.dbg.value(metadata i16 %4, metadata !9468, metadata !DIExpression()), !dbg !9472
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7, !dbg !9473
  %6 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9468, metadata !DIExpression()), !dbg !9472
  %7 = load i16, i16* %6, align 4, !dbg !9477
  %8 = icmp ult i16 %4, %7, !dbg !9478
  br i1 %8, label %9, label %30, !dbg !9479

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = zext i16 %4 to i32, !dbg !9479
  br label %12, !dbg !9479

12:                                               ; preds = %9, %23
  %13 = phi i32 [ %11, %9 ], [ %26, %23 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !9468, metadata !DIExpression()), !dbg !9472
  %14 = load i8*, i8** %5, align 4, !dbg !9473
  %15 = load i16, i16* %10, align 4, !dbg !9480
  %16 = trunc i32 %13 to i16, !dbg !9481
  %17 = and i16 %15, %16, !dbg !9481
  %18 = zext i16 %17 to i32, !dbg !9481
  %19 = getelementptr inbounds i8, i8* %14, i32 %18, !dbg !9482
  %20 = load i8, i8* %19, align 1, !dbg !9482
  %21 = and i8 %20, 1, !dbg !9483
  %22 = icmp eq i8 %21, 0, !dbg !9483
  br i1 %22, label %30, label %23, !dbg !9484

23:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.107, i32 0, i32 0), i32 noundef 73, i32 noundef %13) #25, !dbg !9485
  tail call fastcc void @conex_sweep_task(%struct.rtio* noundef %0) #24, !dbg !9491
  %24 = load i16, i16* %3, align 2, !dbg !9492
  %25 = add i16 %24, 1, !dbg !9492
  store i16 %25, i16* %3, align 2, !dbg !9492
  %26 = add nuw nsw i32 %13, 1, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %26, metadata !9468, metadata !DIExpression()), !dbg !9472
  %27 = load i16, i16* %6, align 4, !dbg !9477
  %28 = zext i16 %27 to i32, !dbg !9478
  %29 = icmp ult i32 %26, %28, !dbg !9478
  br i1 %29, label %12, label %30, !dbg !9479, !llvm.loop !9494

30:                                               ; preds = %23, %12, %2
  ret void, !dbg !9496
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @conex_sweep_task(%struct.rtio* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9497 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9499, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* undef, metadata !9500, metadata !DIExpression()), !dbg !9509
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9510
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9510
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9510
  %5 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %4) #24, !dbg !9510
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9510
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9510
  %8 = load i32, i32* %7, align 4, !dbg !9510
  %9 = add i32 %8, %5, !dbg !9510
  call void @llvm.dbg.value(metadata i32 %9, metadata !9502, metadata !DIExpression()), !dbg !9511
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9510
  %11 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %10) #24, !dbg !9510
  %12 = icmp eq i32 %9, %11, !dbg !9510
  call void @llvm.dbg.value(metadata i1 %12, metadata !9504, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9511
  br i1 %12, label %48, label %13, !dbg !9510

13:                                               ; preds = %1, %37
  %14 = phi i32 [ %44, %37 ], [ %9, %1 ]
  %15 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9509
  %16 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %15, i32 0, i32 0, i32 1, !dbg !9509
  %17 = load i32, i32* %16, align 4, !dbg !9509
  %18 = add i32 %17, 1, !dbg !9509
  store i32 %18, i32* %16, align 4, !dbg !9509
  %19 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9509
  %20 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 0, i32 4, !dbg !9509
  %21 = load i32, i32* %20, align 4, !dbg !9509
  %22 = and i32 %21, %14, !dbg !9509
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %19, i32 %22), metadata !9501, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9509
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 1, i32 %22, i32 2, !dbg !9512
  %24 = load i16, i16* %23, align 2, !dbg !9512
  %25 = and i16 %24, 1, !dbg !9513
  %26 = icmp eq i16 %25, 0, !dbg !9514
  br i1 %26, label %48, label %27, !dbg !9515

27:                                               ; preds = %13
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9516
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 1, !dbg !9516
  %30 = load i32, i32* %29, align 4, !dbg !9516
  %31 = icmp eq i32 %30, 0, !dbg !9516
  br i1 %31, label %37, label %32, !dbg !9519

32:                                               ; preds = %27
  %33 = add i32 %30, -1, !dbg !9520
  store i32 %33, i32* %29, align 4, !dbg !9520
  %34 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9520
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %34, i32 0, i32 0, i32 3, !dbg !9520
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %35) #24, !dbg !9520
  %36 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9522
  br label %37, !dbg !9520

37:                                               ; preds = %32, %27
  %38 = phi %struct.rtio_sq* [ %36, %32 ], [ %28, %27 ], !dbg !9522
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 3, !dbg !9522
  %40 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %39) #24, !dbg !9522
  %41 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9522
  %42 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 1, !dbg !9522
  %43 = load i32, i32* %42, align 4, !dbg !9522
  %44 = add i32 %43, %40, !dbg !9522
  call void @llvm.dbg.value(metadata i32 %44, metadata !9505, metadata !DIExpression()), !dbg !9523
  %45 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 2, !dbg !9522
  %46 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %45) #24, !dbg !9522
  %47 = icmp eq i32 %44, %46, !dbg !9522
  call void @llvm.dbg.value(metadata i1 %47, metadata !9508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9523
  br i1 %47, label %48, label %13, !dbg !9522

48:                                               ; preds = %37, %13, %1
  %49 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9524
  %50 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %49, i32 0, i32 0, i32 1, !dbg !9524
  %51 = load i32, i32* %50, align 4, !dbg !9524
  %52 = icmp eq i32 %51, 0, !dbg !9524
  br i1 %52, label %57, label %53, !dbg !9527

53:                                               ; preds = %48
  %54 = add i32 %51, -1, !dbg !9528
  store i32 %54, i32* %50, align 4, !dbg !9528
  %55 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9528
  %56 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %55, i32 0, i32 0, i32 3, !dbg !9528
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %56) #24, !dbg !9528
  br label %57, !dbg !9528

57:                                               ; preds = %53, %48
  ret void, !dbg !9530
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.108(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9531 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9533, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata i32 1, metadata !9534, metadata !DIExpression()), !dbg !9535
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9536
  ret void, !dbg !9537
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc.109(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9538 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9540, metadata !DIExpression()), !dbg !9541
  tail call fastcc void @atomic_add.108(i32* noundef %0) #24, !dbg !9542
  ret void, !dbg !9543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9544 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9546, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9547, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i32 %2, metadata !9548, metadata !DIExpression()), !dbg !9562
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9563
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9563
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9551, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9183, metadata !DIExpression()) #23, !dbg !9564
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9566, !srcloc !9198
  call void @llvm.dbg.value(metadata i32 undef, metadata !9195, metadata !DIExpression()) #23, !dbg !9568
  call void @llvm.dbg.value(metadata i32 undef, metadata !9196, metadata !DIExpression()) #23, !dbg !9568
  call void @llvm.dbg.value(metadata i32 undef, metadata !9189, metadata !DIExpression()) #23, !dbg !9564
  call void @llvm.dbg.value(metadata i32 undef, metadata !9550, metadata !DIExpression()), !dbg !9562
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9569
  %8 = load i8*, i8** %7, align 4, !dbg !9569
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9570
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9571
  call void @llvm.dbg.value(metadata i16 %9, metadata !9552, metadata !DIExpression()), !dbg !9562
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9572
  %11 = load i16, i16* %10, align 2, !dbg !9572
  %12 = and i16 %11, 1, !dbg !9573
  %13 = icmp eq i16 %12, 0, !dbg !9573
  br i1 %13, label %64, label %14, !dbg !9574

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9575
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9575
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9575
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9575
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9575
  %20 = sub i32 %18, %19, !dbg !9575
  %21 = sdiv exact i32 %20, 20, !dbg !9575
  call void @llvm.dbg.value(metadata i32 %21, metadata !9553, metadata !DIExpression()), !dbg !9576
  %22 = add nsw i32 %21, 1, !dbg !9575
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9575
  %24 = load i32, i32* %23, align 4, !dbg !9575
  %25 = and i32 %22, %24, !dbg !9575
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9575
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9575
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9575
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9575
  %30 = load i32, i32* %29, align 4, !dbg !9575
  %31 = and i32 %30, %27, !dbg !9575
  %32 = icmp eq i32 %25, %31, !dbg !9575
  call void @llvm.dbg.value(metadata i1 %32, metadata !9557, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9576
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9549, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9549, metadata !DIExpression()), !dbg !9562
  br i1 %32, label %64, label %33, !dbg !9577

33:                                               ; preds = %14
  %34 = and i32 %22, %30, !dbg !9575
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %34, !dbg !9575
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9549, metadata !DIExpression()), !dbg !9562
  br label %36, !dbg !9578

36:                                               ; preds = %33, %42
  %37 = phi %struct.rtio_sqe* [ %63, %42 ], [ %35, %33 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %37, metadata !9549, metadata !DIExpression()), !dbg !9562
  %38 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 2, !dbg !9579
  %39 = load i16, i16* %38, align 2, !dbg !9579
  %40 = and i16 %39, 1, !dbg !9580
  %41 = icmp eq i16 %40, 0, !dbg !9577
  br i1 %41, label %64, label %42, !dbg !9578

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 4, !dbg !9581
  %44 = load i8*, i8** %43, align 4, !dbg !9581
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %44) #24, !dbg !9582
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9583
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 1, i32 0, !dbg !9583
  %47 = ptrtoint %struct.rtio_sqe* %37 to i32, !dbg !9583
  %48 = ptrtoint %struct.rtio_sqe* %46 to i32, !dbg !9583
  %49 = sub i32 %47, %48, !dbg !9583
  %50 = sdiv exact i32 %49, 20, !dbg !9583
  call void @llvm.dbg.value(metadata i32 %50, metadata !9558, metadata !DIExpression()), !dbg !9584
  %51 = add nsw i32 %50, 1, !dbg !9583
  %52 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 4, !dbg !9583
  %53 = load i32, i32* %52, align 4, !dbg !9583
  %54 = and i32 %51, %53, !dbg !9583
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 2, !dbg !9583
  %56 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %55) #24, !dbg !9583
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9583
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 4, !dbg !9583
  %59 = load i32, i32* %58, align 4, !dbg !9583
  %60 = and i32 %59, %56, !dbg !9583
  %61 = icmp eq i32 %54, %60, !dbg !9583
  call void @llvm.dbg.value(metadata i1 %61, metadata !9561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9584
  %62 = and i32 %51, %59, !dbg !9583
  %63 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 1, i32 %62, !dbg !9583
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9549, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9549, metadata !DIExpression()), !dbg !9562
  br i1 %61, label %64, label %36, !dbg !9577

64:                                               ; preds = %42, %36, %14, %3
  %65 = extractvalue { i32, i32 } %6, 0, !dbg !9566
  call void @llvm.dbg.value(metadata i32 %65, metadata !9195, metadata !DIExpression()) #23, !dbg !9568
  call void @llvm.dbg.value(metadata i32 %65, metadata !9189, metadata !DIExpression()) #23, !dbg !9564
  call void @llvm.dbg.value(metadata i32 %65, metadata !9550, metadata !DIExpression()), !dbg !9562
  %66 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9585
  %67 = load i8*, i8** %66, align 4, !dbg !9585
  %68 = zext i16 %9 to i32, !dbg !9586
  %69 = getelementptr inbounds i8, i8* %67, i32 %68, !dbg !9586
  %70 = load i8, i8* %69, align 1, !dbg !9587
  %71 = or i8 %70, 1, !dbg !9587
  store i8 %71, i8* %69, align 1, !dbg !9587
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %5) #24, !dbg !9588
  call void @llvm.dbg.value(metadata i32 undef, metadata !9255, metadata !DIExpression()) #23, !dbg !9589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9260, metadata !DIExpression()) #23, !dbg !9589
  call void @llvm.dbg.value(metadata i32 undef, metadata !9263, metadata !DIExpression()) #23, !dbg !9591
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %65) #23, !dbg !9593, !srcloc !9269
  ret void, !dbg !9594
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9597, metadata !DIExpression()), !dbg !9598
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9599
  ret void, !dbg !9600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9605, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %1, metadata !9606, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9607, metadata !DIExpression()), !dbg !9611
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9612
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9612
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9612
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9608, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %0, metadata !9610, metadata !DIExpression()), !dbg !9611
  %7 = icmp slt i32 %0, %1, !dbg !9613
  br i1 %7, label %8, label %22, !dbg !9616

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9610, metadata !DIExpression()), !dbg !9611
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9617
  %11 = icmp eq i32 %10, 0, !dbg !9617
  br i1 %11, label %19, label %12, !dbg !9620

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9621
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9623
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9623
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9625
  br i1 %15, label %19, label %16, !dbg !9626

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9627
  %18 = load i8*, i8** %17, align 4, !dbg !9627
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9628
  br label %19, !dbg !9629

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %20, metadata !9610, metadata !DIExpression()), !dbg !9611
  %21 = icmp eq i32 %20, %1, !dbg !9613
  br i1 %21, label %22, label %8, !dbg !9616, !llvm.loop !9631

22:                                               ; preds = %19, %3
  ret void, !dbg !9633
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !9634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9636, metadata !DIExpression()), !dbg !9637
  %2 = shl nuw i32 1, %0, !dbg !9638
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9641
  ret i32 %3, !dbg !9642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !9643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9647, metadata !DIExpression()), !dbg !9648
  %2 = shl nuw i32 1, %0, !dbg !9649
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9652
  ret void, !dbg !9653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9657, metadata !DIExpression()), !dbg !9658
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9659
  ret void, !dbg !9660
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !9661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9663, metadata !DIExpression()), !dbg !9664
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9665
  %3 = and i32 %2, %0, !dbg !9665
  %4 = icmp eq i32 %3, %0, !dbg !9666
  %5 = zext i1 %4 to i32, !dbg !9666
  ret i32 %5, !dbg !9667
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9668 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9670, metadata !DIExpression()), !dbg !9671
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9672
  ret void, !dbg !9673
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9676, metadata !DIExpression()), !dbg !9677
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9678
  ret void, !dbg !9679
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9682, metadata !DIExpression()), !dbg !9683
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9684
  ret void, !dbg !9685
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9688, metadata !DIExpression()), !dbg !9689
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9690
  ret void, !dbg !9691
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9692 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9694, metadata !DIExpression()), !dbg !9695
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9696
  ret void, !dbg !9697
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9700, metadata !DIExpression()), !dbg !9701
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9704 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9706, metadata !DIExpression()), !dbg !9707
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9708
  ret void, !dbg !9709
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9712, metadata !DIExpression()), !dbg !9713
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9714
  ret void, !dbg !9715
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9716 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9718, metadata !DIExpression()), !dbg !9719
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9720
  ret void, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9724, metadata !DIExpression()), !dbg !9725
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9726
  ret void, !dbg !9727
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9730, metadata !DIExpression()), !dbg !9731
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9732
  ret i32 0, !dbg !9733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1135 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1139, metadata !DIExpression()), !dbg !9734
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9735
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9737
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9739
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9741
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9743
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9745
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9747
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9749
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9751
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9753
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9755
  ret void, !dbg !9757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9760, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32 0, metadata !9761, metadata !DIExpression()), !dbg !9762
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9763
  %3 = load i32, i32* %2, align 4, !dbg !9763
  call void @llvm.dbg.value(metadata i32 %3, metadata !9761, metadata !DIExpression()), !dbg !9762
  %4 = shl nuw i32 1, %0, !dbg !9764
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9765
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9770, metadata !DIExpression()), !dbg !9771
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9772
  %3 = or i32 %2, %0, !dbg !9772
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9772
  ret void, !dbg !9773
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !9774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9776, metadata !DIExpression()), !dbg !9777
  %2 = icmp slt i32 %0, 32, !dbg !9778
  br i1 %2, label %3, label %5, !dbg !9780

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9781
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9783
  br label %5, !dbg !9784

5:                                                ; preds = %1, %3
  ret void, !dbg !9785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9788, metadata !DIExpression()), !dbg !9789
  %2 = xor i32 %0, -1, !dbg !9790
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9790
  %4 = and i32 %3, %2, !dbg !9790
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9790
  ret void, !dbg !9791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9796, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.value(metadata i32 %1, metadata !9797, metadata !DIExpression()), !dbg !9798
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9799

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9800
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9802
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9803
  br label %11, !dbg !9804

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9805
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9806
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9807
  br label %11, !dbg !9808

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9809
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9810
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9811
  br label %11, !dbg !9812

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9813
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9814
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9815
  br label %11, !dbg !9816

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9820, metadata !DIExpression()), !dbg !9821
  %2 = xor i32 %0, -1, !dbg !9822
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9822
  %4 = and i32 %3, %2, !dbg !9822
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9822
  ret void, !dbg !9823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9826, metadata !DIExpression()), !dbg !9827
  %2 = xor i32 %0, -1, !dbg !9828
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9828
  %4 = and i32 %3, %2, !dbg !9828
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9828
  ret void, !dbg !9829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9832, metadata !DIExpression()), !dbg !9833
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9834
  %3 = or i32 %2, %0, !dbg !9834
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9834
  ret void, !dbg !9835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9838, metadata !DIExpression()), !dbg !9839
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9840
  %3 = or i32 %2, %0, !dbg !9840
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9840
  ret void, !dbg !9841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !9842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9846, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9847, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i8* %2, metadata !9848, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_38, metadata !9849, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9851, metadata !DIExpression()), !dbg !9852
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9853
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9853
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9855
  br i1 %6, label %7, label %9, !dbg !9856

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9857
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9858
  store i8* %2, i8** %8, align 4, !dbg !9859
  br label %9, !dbg !9860

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9852
  ret i32 %10, !dbg !9861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !9862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9864, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_38, metadata !9865, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9866, metadata !DIExpression()), !dbg !9867
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9868
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9869
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9870
  store i8* null, i8** %3, align 4, !dbg !9871
  ret void, !dbg !9872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9875, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9876, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9877, metadata !DIExpression()), !dbg !9880
  %3 = bitcast i8* %1 to i32*, !dbg !9881
  %4 = load i32, i32* %3, align 4, !dbg !9881
  %5 = add i32 %4, -169, !dbg !9881
  %6 = icmp ult i32 %5, -121, !dbg !9881
  br i1 %6, label %15, label %7, !dbg !9883

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9884
  %9 = inttoptr i32 %8 to i32*, !dbg !9885
  call void @llvm.dbg.value(metadata i32* %9, metadata !9878, metadata !DIExpression()), !dbg !9880
  %10 = load volatile i32, i32* %9, align 4, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %10, metadata !9879, metadata !DIExpression()), !dbg !9880
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9887
  %12 = bitcast i8* %11 to i32*, !dbg !9887
  %13 = load i32, i32* %12, align 4, !dbg !9887
  %14 = or i32 %13, %10, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %14, metadata !9879, metadata !DIExpression()), !dbg !9880
  store volatile i32 %14, i32* %9, align 4, !dbg !9889
  br label %15, !dbg !9890

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9880
  ret i32 %16, !dbg !9891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9894, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i8* %1, metadata !9895, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i8* %1, metadata !9896, metadata !DIExpression()), !dbg !9899
  %3 = bitcast i8* %1 to i32*, !dbg !9900
  %4 = load i32, i32* %3, align 4, !dbg !9900
  %5 = add i32 %4, -169, !dbg !9900
  %6 = icmp ult i32 %5, -121, !dbg !9900
  br i1 %6, label %16, label %7, !dbg !9902

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9903
  %9 = inttoptr i32 %8 to i32*, !dbg !9904
  call void @llvm.dbg.value(metadata i32* %9, metadata !9897, metadata !DIExpression()), !dbg !9899
  %10 = load volatile i32, i32* %9, align 4, !dbg !9905
  call void @llvm.dbg.value(metadata i32 %10, metadata !9898, metadata !DIExpression()), !dbg !9899
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9906
  %12 = bitcast i8* %11 to i32*, !dbg !9906
  %13 = load i32, i32* %12, align 4, !dbg !9906
  %14 = xor i32 %13, -1, !dbg !9907
  %15 = and i32 %10, %14, !dbg !9908
  call void @llvm.dbg.value(metadata i32 %15, metadata !9898, metadata !DIExpression()), !dbg !9899
  store volatile i32 %15, i32* %9, align 4, !dbg !9909
  br label %16, !dbg !9910

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9899
  ret i32 %17, !dbg !9911
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9914, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.value(metadata i8* %1, metadata !9915, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.value(metadata i32* %2, metadata !9916, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.value(metadata i8* %1, metadata !9917, metadata !DIExpression()), !dbg !9922
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9923
  call void @llvm.dbg.value(metadata i32 %4, metadata !9918, metadata !DIExpression()), !dbg !9922
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #24, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %5, metadata !9919, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.value(metadata i32 %5, metadata !9920, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.value(metadata i32 %4, metadata !9921, metadata !DIExpression()), !dbg !9922
  %6 = bitcast i8* %1 to i32*, !dbg !9925
  %7 = load i32, i32* %6, align 4, !dbg !9925
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !9926

8:                                                ; preds = %3
  br label %18, !dbg !9927

9:                                                ; preds = %3
  br label %18, !dbg !9929

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9930
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #24, !dbg !9931
  br label %18, !dbg !9932

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9933
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #24, !dbg !9934
  br label %18, !dbg !9935

16:                                               ; preds = %3
  br label %18, !dbg !9936

17:                                               ; preds = %3
  br label %18, !dbg !9937

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !9938
  br label %20, !dbg !9939

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !9922
  ret i32 %21, !dbg !9939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !9940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9942, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %1, metadata !9943, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %2, metadata !9944, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %1, metadata !9945, metadata !DIExpression()), !dbg !9950
  %4 = bitcast i8* %1 to i32*, !dbg !9951
  %5 = load i32, i32* %4, align 4, !dbg !9951
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %6, metadata !9949, metadata !DIExpression()), !dbg !9950
  %7 = icmp slt i32 %6, 0, !dbg !9953
  br i1 %7, label %22, label %8, !dbg !9955

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9945, metadata !DIExpression()), !dbg !9950
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9956
  %10 = bitcast i8* %9 to i32*, !dbg !9956
  %11 = load i32, i32* %10, align 4, !dbg !9956
  %12 = lshr i32 %11, 16, !dbg !9956
  %13 = and i32 %12, 7, !dbg !9956
  %14 = lshr i32 %11, 8, !dbg !9957
  %15 = and i32 %14, 31, !dbg !9957
  %16 = shl i32 %13, %15, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %16, metadata !9948, metadata !DIExpression()), !dbg !9950
  %17 = and i32 %11, 255, !dbg !9959
  %18 = or i32 %17, 1073887232, !dbg !9960
  %19 = inttoptr i32 %18 to i32*, !dbg !9961
  call void @llvm.dbg.value(metadata i32* %19, metadata !9946, metadata !DIExpression()), !dbg !9950
  %20 = load volatile i32, i32* %19, align 4, !dbg !9962
  call void @llvm.dbg.value(metadata i32 %20, metadata !9947, metadata !DIExpression()), !dbg !9950
  %21 = or i32 %16, %20, !dbg !9963
  call void @llvm.dbg.value(metadata i32 %21, metadata !9947, metadata !DIExpression()), !dbg !9950
  store volatile i32 %21, i32* %19, align 4, !dbg !9964
  br label %22, !dbg !9965

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9950
  ret i32 %23, !dbg !9966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9971, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i32 0, metadata !9972, metadata !DIExpression()), !dbg !9973
  %2 = add i32 %0, -1, !dbg !9974
  %3 = icmp ult i32 %2, 6, !dbg !9974
  br i1 %3, label %4, label %7, !dbg !9974

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9974
  %6 = load i32, i32* %5, align 4, !dbg !9974
  call void @llvm.dbg.value(metadata i32 %6, metadata !9972, metadata !DIExpression()), !dbg !9973
  br label %7, !dbg !9975

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9973
  ret i32 %8, !dbg !9976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #4 !dbg !9977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9981, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata i32 2, metadata !9982, metadata !DIExpression()), !dbg !9983
  %2 = lshr i32 %0, 1, !dbg !9984
  ret i32 %2, !dbg !9985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9990, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i32 8, metadata !9991, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i32 84, metadata !9992, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i32 %1, metadata !9993, metadata !DIExpression()), !dbg !9994
  %3 = mul i32 %0, 84, !dbg !9995
  %4 = shl nsw i32 %1, 3, !dbg !9996
  %5 = udiv i32 %3, %4, !dbg !9997
  ret i32 %5, !dbg !9998
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10001, metadata !DIExpression()), !dbg !10004
  tail call void @config_enable_default_clocks() #25, !dbg !10005
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !10006
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !10006
  %4 = lshr i32 %3, 4, !dbg !10006
  %5 = and i32 %4, 15, !dbg !10006
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10006
  %7 = load i8, i8* %6, align 1, !dbg !10006
  %8 = zext i8 %7 to i32, !dbg !10006
  %9 = lshr i32 %2, %8, !dbg !10006
  call void @llvm.dbg.value(metadata i32 %9, metadata !10002, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10003, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10004
  %10 = icmp ult i32 %9, 84000000, !dbg !10007
  br i1 %10, label %11, label %13, !dbg !10009

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !10010
  br label %13, !dbg !10012

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !10013
  tail call fastcc void @set_up_plls() #24, !dbg !10014
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10015
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !10018
  br label %14, !dbg !10019

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10020
  %16 = icmp eq i32 %15, 8, !dbg !10021
  br i1 %16, label %17, label %14, !dbg !10019, !llvm.loop !10022

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10024
  br i1 %18, label %19, label %21, !dbg !10026

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !10027
  br label %21, !dbg !10029

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10030
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !10031
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !10032
  ret i32 0, !dbg !10033
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !10034 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10036
  %2 = and i32 %1, 240, !dbg !10036
  ret i32 %2, !dbg !10037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10038 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !10039
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !10044
  br label %1, !dbg !10045

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10046
  %3 = icmp eq i32 %2, 1, !dbg !10047
  br i1 %3, label %4, label %1, !dbg !10045, !llvm.loop !10048

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !10050
  br label %5, !dbg !10053

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !10054
  %7 = icmp eq i32 %6, 1, !dbg !10055
  br i1 %7, label %8, label %5, !dbg !10053, !llvm.loop !10056

8:                                                ; preds = %5
  ret void, !dbg !10058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10059 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10060
  %2 = icmp eq i32 %1, 8, !dbg !10062
  br i1 %2, label %3, label %4, !dbg !10063

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10064
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !10066
  br label %4, !dbg !10067

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !10068
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10069
  %6 = and i32 %5, -196609, !dbg !10069
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10069
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10070
  %8 = and i32 %7, -251658241, !dbg !10070
  %9 = or i32 %8, 134217728, !dbg !10070
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10070
  tail call void @config_pll_sysclock() #25, !dbg !10071
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !10072
  br label %10, !dbg !10073

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !10074
  %12 = icmp eq i32 %11, 1, !dbg !10075
  br i1 %12, label %13, label %10, !dbg !10073, !llvm.loop !10076

13:                                               ; preds = %10
  ret void, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10079 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10081, metadata !DIExpression()), !dbg !10082
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10083
  %2 = and i32 %1, -241, !dbg !10083
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10087, metadata !DIExpression()), !dbg !10088
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10089
  %3 = and i32 %2, -4, !dbg !10089
  %4 = or i32 %3, %0, !dbg !10089
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10089
  ret void, !dbg !10090
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !10091 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10092
  %2 = and i32 %1, 12, !dbg !10092
  ret i32 %2, !dbg !10093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10094 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10096, metadata !DIExpression()), !dbg !10097
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10098
  %2 = and i32 %1, -7169, !dbg !10098
  %3 = or i32 %2, 4096, !dbg !10098
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10098
  ret void, !dbg !10099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10100 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10102, metadata !DIExpression()), !dbg !10103
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10104
  %2 = and i32 %1, -57345, !dbg !10104
  %3 = or i32 %2, 32768, !dbg !10104
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10104
  ret void, !dbg !10105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10106 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10107
  %2 = icmp eq i32 %1, 1, !dbg !10109
  br i1 %2, label %7, label %3, !dbg !10110

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10111
  br label %4, !dbg !10113

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10114
  %6 = icmp eq i32 %5, 1, !dbg !10115
  br i1 %6, label %7, label %4, !dbg !10113, !llvm.loop !10116

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !10118
  br label %8, !dbg !10119

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10120
  %10 = icmp eq i32 %9, 0, !dbg !10121
  br i1 %10, label %11, label %8, !dbg !10119, !llvm.loop !10122

11:                                               ; preds = %8
  ret void, !dbg !10124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10126
  %2 = and i32 %1, -16777217, !dbg !10126
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10126
  ret void, !dbg !10127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10128 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10129
  %2 = or i32 %1, 16777216, !dbg !10129
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10129
  ret void, !dbg !10130
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !10131 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10132
  %2 = lshr i32 %1, 25, !dbg !10133
  %3 = and i32 %2, 1, !dbg !10133
  ret i32 %3, !dbg !10134
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !10135 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10136
  %2 = lshr i32 %1, 1, !dbg !10137
  %3 = and i32 %2, 1, !dbg !10137
  ret i32 %3, !dbg !10138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10139 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10140
  %2 = or i32 %1, 1, !dbg !10140
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10140
  ret void, !dbg !10141
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10142 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10143
  %2 = and i32 %1, -262145, !dbg !10143
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10143
  ret void, !dbg !10144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10145 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  %2 = or i32 %1, 65536, !dbg !10146
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  ret void, !dbg !10147
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !10148 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10149
  %2 = lshr i32 %1, 17, !dbg !10150
  %3 = and i32 %2, 1, !dbg !10150
  ret i32 %3, !dbg !10151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10152 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10153
  %2 = or i32 %1, 1, !dbg !10153
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10153
  ret void, !dbg !10154
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !10155 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10156
  %2 = lshr i32 %1, 1, !dbg !10157
  %3 = and i32 %2, 1, !dbg !10157
  ret i32 %3, !dbg !10158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10159 {
  ret i32 16000000, !dbg !10161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10165 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !10166
  ret void, !dbg !10167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10172, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 8, metadata !10173, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 84, metadata !10174, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 0, metadata !10175, metadata !DIExpression()), !dbg !10176
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10177
  %2 = and i32 %1, -4227072, !dbg !10177
  %3 = or i32 %2, 4199688, !dbg !10177
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10177
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10178
  %5 = and i32 %4, -196609, !dbg !10178
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10178
  ret void, !dbg !10179
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !10180 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !10181
  ret void, !dbg !10182
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !10183 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10186, metadata !DIExpression()), !dbg !10188
  %2 = bitcast i32* %1 to i8*, !dbg !10189
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10189
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10187, metadata !DIExpression()), !dbg !10190
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10191
  %4 = or i32 %3, 268435456, !dbg !10191
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10191
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10192
  %6 = and i32 %5, 268435456, !dbg !10192
  store volatile i32 %6, i32* %1, align 4, !dbg !10193
  %7 = load volatile i32, i32* %1, align 4, !dbg !10194
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10195
  ret void, !dbg !10195
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10196 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10198, metadata !DIExpression()), !dbg !10199
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !10200
  br i1 %2, label %3, label %4, !dbg !10202

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !10203
  br label %4, !dbg !10204

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10199
  ret i32 %5, !dbg !10205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10206 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10211, metadata !DIExpression()), !dbg !10212
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10213, !srcloc !10215
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !10216
  ret i1 %1, !dbg !10217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10218 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10219
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10220
  ret void, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10224, metadata !DIExpression()), !dbg !10225
  %2 = icmp eq i32 %0, 10, !dbg !10226
  br i1 %2, label %3, label %4, !dbg !10228

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !10229
  br label %4, !dbg !10231

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10232
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !10233
  ret i32 %0, !dbg !10234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10235 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10238, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.value(metadata i8 %0, metadata !10239, metadata !DIExpression()), !dbg !10240
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10241, !srcloc !10243
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !10244
  ret void, !dbg !10245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10246 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10248, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.value(metadata i8 %0, metadata !10249, metadata !DIExpression()), !dbg !10251
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10252
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10250, metadata !DIExpression()), !dbg !10251
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10253
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10253
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #25, !dbg !10254
  ret void, !dbg !10255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10256 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10258, metadata !DIExpression()), !dbg !10259
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #25, !dbg !10260
  ret i1 %1, !dbg !10261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10309, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10310, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10311, metadata !DIExpression()), !dbg !10312
  ret void, !dbg !10313
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10314 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10316, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.value(metadata i8 %1, metadata !10317, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.value(metadata i32 %2, metadata !10318, metadata !DIExpression()), !dbg !10321
  %5 = bitcast i32* %4 to i8*, !dbg !10322
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10322
  call void @llvm.dbg.value(metadata i32* %4, metadata !10320, metadata !DIExpression(DW_OP_deref)), !dbg !10321
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !10323
  call void @llvm.dbg.value(metadata i32 %6, metadata !10319, metadata !DIExpression()), !dbg !10321
  %7 = icmp eq i32 %6, 0, !dbg !10324
  br i1 %7, label %8, label %31, !dbg !10326

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10319, metadata !DIExpression()), !dbg !10321
  %9 = and i32 %2, 131072, !dbg !10327
  %10 = icmp eq i32 %9, 0, !dbg !10329
  br i1 %10, label %28, label %11, !dbg !10330

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10331
  %13 = icmp eq i32 %12, 0, !dbg !10334
  br i1 %13, label %18, label %14, !dbg !10335

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10336
  %16 = shl nuw i32 1, %15, !dbg !10336
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !10338
  br label %25, !dbg !10339

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10340
  %20 = icmp eq i32 %19, 0, !dbg !10342
  %21 = zext i8 %1 to i32, !dbg !10321
  br i1 %20, label %25, label %22, !dbg !10343

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10344
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !10346
  br label %25, !dbg !10347

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10348
  %27 = load i32, i32* %4, align 4, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %30, metadata !10320, metadata !DIExpression()), !dbg !10321
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !10350
  br label %31, !dbg !10351

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10348
  %30 = load i32, i32* %4, align 4, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %30, metadata !10320, metadata !DIExpression()), !dbg !10321
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !10350
  call void @llvm.dbg.value(metadata i32 0, metadata !10319, metadata !DIExpression()), !dbg !10321
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10352
  ret i32 %6, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10357, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.value(metadata i32* %1, metadata !10358, metadata !DIExpression()), !dbg !10362
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10363
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10363
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10363
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10359, metadata !DIExpression()), !dbg !10362
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10364
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10364
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10364
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10361, metadata !DIExpression()), !dbg !10362
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !10365
  store i32 %9, i32* %1, align 4, !dbg !10366
  ret i32 0, !dbg !10367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !10368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10370, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata i32 %1, metadata !10371, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata i32 %2, metadata !10372, metadata !DIExpression()), !dbg !10376
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10377
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10377
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10377
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10373, metadata !DIExpression()), !dbg !10376
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10378
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10378
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10378
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10374, metadata !DIExpression()), !dbg !10376
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %10, metadata !10375, metadata !DIExpression()), !dbg !10376
  %11 = xor i32 %1, -1, !dbg !10380
  %12 = and i32 %10, %11, !dbg !10381
  %13 = and i32 %2, %1, !dbg !10382
  %14 = or i32 %12, %13, !dbg !10383
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !10384
  ret i32 0, !dbg !10385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10388, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %1, metadata !10389, metadata !DIExpression()), !dbg !10392
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10393
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10393
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10393
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10390, metadata !DIExpression()), !dbg !10392
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10394
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10394
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10394
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10391, metadata !DIExpression()), !dbg !10392
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10395
  store volatile i32 %1, i32* %9, align 4, !dbg !10395
  ret i32 0, !dbg !10396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10399, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i32 %1, metadata !10400, metadata !DIExpression()), !dbg !10403
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10404
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10404
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10404
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10401, metadata !DIExpression()), !dbg !10403
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10405
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10405
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10405
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10402, metadata !DIExpression()), !dbg !10403
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10406
  ret i32 0, !dbg !10407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10410, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i32 %1, metadata !10411, metadata !DIExpression()), !dbg !10414
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10415
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10415
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10415
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10412, metadata !DIExpression()), !dbg !10414
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10416
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10416
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10416
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10413, metadata !DIExpression()), !dbg !10414
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10417
  %10 = load volatile i32, i32* %9, align 4, !dbg !10417
  %11 = xor i32 %10, %1, !dbg !10417
  store volatile i32 %11, i32* %9, align 4, !dbg !10417
  ret i32 0, !dbg !10418
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10419 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10421, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8 %1, metadata !10422, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i32 %2, metadata !10423, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i32 %3, metadata !10424, metadata !DIExpression()), !dbg !10431
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10432
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10432
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10432
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10425, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8* undef, metadata !10426, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i32 0, metadata !10428, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i32 0, metadata !10429, metadata !DIExpression()), !dbg !10431
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10433

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10434
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10438
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10439
  %12 = load i32, i32* %11, align 4, !dbg !10439
  %13 = icmp eq i32 %10, %12, !dbg !10440
  br i1 %13, label %14, label %29, !dbg !10441

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10442
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10444
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10445
  br label %29, !dbg !10446

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10447
  %17 = load i8*, i8** %16, align 4, !dbg !10447
  call void @llvm.dbg.value(metadata i8* %17, metadata !10426, metadata !DIExpression()), !dbg !10431
  %18 = zext i8 %1 to i32, !dbg !10448
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10450
  %20 = icmp eq i32 %19, 0, !dbg !10451
  br i1 %20, label %21, label %29, !dbg !10452

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10453
  %23 = load i32, i32* %22, align 4, !dbg !10453
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10454
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10455

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10428, metadata !DIExpression()), !dbg !10431
  br label %27, !dbg !10456

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10428, metadata !DIExpression()), !dbg !10431
  br label %27, !dbg !10458

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10428, metadata !DIExpression()), !dbg !10431
  br label %27, !dbg !10459

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10431
  call void @llvm.dbg.value(metadata i32 %28, metadata !10428, metadata !DIExpression()), !dbg !10431
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10460
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10461
  br label %29, !dbg !10461

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10431
  call void @llvm.dbg.value(metadata i32 %30, metadata !10429, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.label(metadata !10430), !dbg !10462
  ret i32 %30, !dbg !10463
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !10464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10466, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10467, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i1 %2, metadata !10468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10470
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10471
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10471
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10469, metadata !DIExpression()), !dbg !10470
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10472
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10473
  ret i32 %8, !dbg !10474
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !10475 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10481, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i1 %2, metadata !10483, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10484
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10485
  br i1 %4, label %10, label %5, !dbg !10487

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10488
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !10491
  %8 = or i1 %7, %2, !dbg !10492
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10492
  br i1 %2, label %11, label %13, !dbg !10492

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10493

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10494
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !10497
  br label %13, !dbg !10498

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10484
  ret i32 %14, !dbg !10499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10500 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10504, metadata !DIExpression()), !dbg !10505
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10506
  %3 = icmp eq %struct._snode* %2, null, !dbg !10506
  ret i1 %3, !dbg !10506
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10507 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10512, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10513, metadata !DIExpression()), !dbg !10515
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10516
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10513, metadata !DIExpression()), !dbg !10515
  %4 = icmp eq %struct._snode* %3, null, !dbg !10518
  br i1 %4, label %15, label %5, !dbg !10516

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10513, metadata !DIExpression()), !dbg !10515
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10520
  br i1 %6, label %9, label %11, !dbg !10523

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10513, metadata !DIExpression()), !dbg !10515
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10520
  br i1 %8, label %9, label %11, !dbg !10523, !llvm.loop !10524

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10525
  br label %15, !dbg !10525

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10513, metadata !DIExpression()), !dbg !10515
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10518
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10514, metadata !DIExpression()), !dbg !10515
  %14 = icmp eq %struct._snode* %13, null, !dbg !10518
  br i1 %14, label %15, label %7, !dbg !10516, !llvm.loop !10524

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10528 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10532, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10533, metadata !DIExpression()), !dbg !10534
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10535
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10535
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10535
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10536
  %5 = icmp eq %struct._snode* %4, null, !dbg !10536
  br i1 %5, label %6, label %8, !dbg !10535

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10538
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10538
  br label %8, !dbg !10538

8:                                                ; preds = %6, %2
  ret void, !dbg !10535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10540 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10544, metadata !DIExpression()), !dbg !10545
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10546
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10546
  ret %struct._snode* %3, !dbg !10547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10548 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10552, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10553, metadata !DIExpression()), !dbg !10554
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10555
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10556
  ret void, !dbg !10557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10558 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10560, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10561, metadata !DIExpression()), !dbg !10562
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10563
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10564
  ret void, !dbg !10565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10566 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10568, metadata !DIExpression()), !dbg !10569
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10570
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10570
  ret %struct._snode* %3, !dbg !10571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10572 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10574, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10575, metadata !DIExpression()), !dbg !10576
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10577
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10578
  ret void, !dbg !10579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10580 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10584, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10585, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10586, metadata !DIExpression()), !dbg !10587
  %4 = icmp eq %struct._snode* %1, null, !dbg !10588
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10590
  br i1 %4, label %6, label %11, !dbg !10591

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10592
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10594
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10594
  br i1 %8, label %9, label %15, !dbg !10592

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10596
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10596
  br label %15, !dbg !10596

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10598
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10600
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10600
  br i1 %13, label %14, label %15, !dbg !10598

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10602
  br label %15, !dbg !10602

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10591
  ret void, !dbg !10591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10604 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10608, metadata !DIExpression()), !dbg !10609
  %2 = icmp eq %struct._snode* %0, null, !dbg !10610
  br i1 %2, label %5, label %3, !dbg !10610

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10610
  br label %5, !dbg !10610

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10610
  ret %struct._snode* %6, !dbg !10610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10611 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10613, metadata !DIExpression()), !dbg !10614
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10615
  ret %struct._snode* %2, !dbg !10615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10618, metadata !DIExpression()), !dbg !10619
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10620
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10620
  ret %struct._snode* %3, !dbg !10621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10624, metadata !DIExpression()), !dbg !10627
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10628, !range !10629
  call void @llvm.dbg.value(metadata i32 %2, metadata !10625, metadata !DIExpression()), !dbg !10627
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10630
  call void @llvm.dbg.value(metadata i32 %3, metadata !10626, metadata !DIExpression()), !dbg !10627
  ret i32 %3, !dbg !10631
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10634, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8* %1, metadata !10635, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8* %1, metadata !10636, metadata !DIExpression()), !dbg !10637
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10638
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10638
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10639
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10639
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10639
  %8 = shl nuw i32 1, %0, !dbg !10640
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10641
  ret void, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10643 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10647, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i32 %1, metadata !10648, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10649, metadata !DIExpression()), !dbg !10653
  %4 = bitcast i64* %3 to i8*, !dbg !10654
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10654
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10651, metadata !DIExpression()), !dbg !10653
  store i64 70368744177732, i64* %3, align 8, !dbg !10655
  call void @llvm.dbg.value(metadata i64* %3, metadata !10651, metadata !DIExpression(DW_OP_deref)), !dbg !10653
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %5, metadata !10652, metadata !DIExpression()), !dbg !10653
  %6 = icmp eq i32 %5, 0, !dbg !10657
  br i1 %6, label %7, label %8, !dbg !10659

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10660
  br label %8, !dbg !10661

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10662
  ret void, !dbg !10662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10663 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10665, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.value(metadata i8* %0, metadata !10666, metadata !DIExpression()), !dbg !10668
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10669
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10667, metadata !DIExpression()), !dbg !10668
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10670
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10670
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10671
  ret i32 %5, !dbg !10672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10675, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata i32 %1, metadata !10676, metadata !DIExpression()), !dbg !10678
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %3, metadata !10677, metadata !DIExpression()), !dbg !10678
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10680
  ret void, !dbg !10681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10686, metadata !DIExpression()), !dbg !10687
  %2 = sdiv i32 %0, 4, !dbg !10688
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10689
  %6 = add nsw i32 %5, 16, !dbg !10690
  %7 = shl i32 15, %6, !dbg !10691
  %8 = or i32 %7, %2, !dbg !10692
  ret i32 %8, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10698, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.value(metadata i32 %1, metadata !10699, metadata !DIExpression()), !dbg !10700
  %3 = and i32 %1, 255, !dbg !10701
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10701
  %5 = load volatile i32, i32* %4, align 4, !dbg !10701
  %6 = lshr i32 %1, 16, !dbg !10701
  %7 = xor i32 %6, -1, !dbg !10701
  %8 = and i32 %5, %7, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %6, metadata !10702, metadata !DIExpression()) #23, !dbg !10706
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10708, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %9, metadata !10705, metadata !DIExpression()) #23, !dbg !10706
  call void @llvm.dbg.value(metadata i32 %9, metadata !10710, metadata !DIExpression()) #23, !dbg !10715
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10717, !range !8220
  %11 = shl i32 %0, %10, !dbg !10701
  %12 = or i32 %11, %8, !dbg !10701
  store volatile i32 %12, i32* %4, align 4, !dbg !10701
  ret void, !dbg !10718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10719 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10723, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10724, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i32 %2, metadata !10725, metadata !DIExpression()), !dbg !10728
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10729
  %5 = icmp eq %struct._snode* %4, null, !dbg !10729
  br i1 %5, label %21, label %6, !dbg !10729

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10731
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10727, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10726, metadata !DIExpression()), !dbg !10728
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10732
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10732
  %11 = load i32, i32* %10, align 4, !dbg !10732
  %12 = and i32 %11, %2, !dbg !10736
  %13 = icmp eq i32 %12, 0, !dbg !10736
  br i1 %13, label %19, label %14, !dbg !10737

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10726, metadata !DIExpression()), !dbg !10728
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10738
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10738
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10738
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10740
  br label %19, !dbg !10741

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10726, metadata !DIExpression()), !dbg !10728
  %20 = icmp eq %struct._snode* %8, null, !dbg !10742
  br i1 %20, label %21, label %6, !dbg !10742

21:                                               ; preds = %19, %3
  ret void, !dbg !10743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10746, metadata !DIExpression()), !dbg !10747
  %2 = and i32 %0, 255, !dbg !10748
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10748
  %4 = load volatile i32, i32* %3, align 4, !dbg !10748
  %5 = lshr i32 %0, 16, !dbg !10748
  %6 = and i32 %4, %5, !dbg !10748
  call void @llvm.dbg.value(metadata i32 %5, metadata !10702, metadata !DIExpression()) #23, !dbg !10749
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10751, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %7, metadata !10705, metadata !DIExpression()) #23, !dbg !10749
  call void @llvm.dbg.value(metadata i32 %7, metadata !10710, metadata !DIExpression()) #23, !dbg !10752
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10754, !range !8220
  %9 = lshr i32 %6, %8, !dbg !10755
  ret i32 %9, !dbg !10756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10762, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.value(metadata i32 %1, metadata !10763, metadata !DIExpression()), !dbg !10764
  %3 = shl i32 %1, 16, !dbg !10765
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10765
  store volatile i32 %3, i32* %4, align 4, !dbg !10765
  ret void, !dbg !10766
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10767 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10771, metadata !DIExpression()), !dbg !10772
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10773
  %3 = load volatile i32, i32* %2, align 4, !dbg !10773
  ret i32 %3, !dbg !10774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10775 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10777, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata i32 %1, metadata !10778, metadata !DIExpression()), !dbg !10779
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10780
  store volatile i32 %1, i32* %3, align 4, !dbg !10780
  ret void, !dbg !10781
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10782 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10784, metadata !DIExpression()), !dbg !10785
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10786
  %3 = load volatile i32, i32* %2, align 4, !dbg !10786
  ret i32 %3, !dbg !10787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !10788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10792, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.value(metadata i32* %1, metadata !10793, metadata !DIExpression()), !dbg !10794
  %3 = and i32 %0, 131072, !dbg !10795
  %4 = icmp eq i32 %3, 0, !dbg !10797
  br i1 %4, label %22, label %5, !dbg !10798

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10799
  %6 = and i32 %0, 2, !dbg !10801
  %7 = icmp eq i32 %6, 0, !dbg !10803
  br i1 %7, label %11, label %8, !dbg !10804

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10805
  %10 = icmp eq i32 %9, 0, !dbg !10805
  br i1 %10, label %33, label %11, !dbg !10808

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10809
  store i32 %12, i32* %1, align 4, !dbg !10809
  %13 = and i32 %0, 16, !dbg !10810
  %14 = icmp eq i32 %13, 0, !dbg !10812
  br i1 %14, label %17, label %15, !dbg !10813

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10814
  br label %31, !dbg !10816

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10817
  %19 = icmp eq i32 %18, 0, !dbg !10819
  br i1 %19, label %33, label %20, !dbg !10820

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10821
  br label %31, !dbg !10823

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10824
  %24 = icmp eq i32 %23, 0, !dbg !10826
  br i1 %24, label %31, label %25, !dbg !10827

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10828
  %27 = icmp eq i32 %26, 0, !dbg !10831
  br i1 %27, label %28, label %31, !dbg !10832

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10833
  br label %33, !dbg !10834

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10794
  ret i32 %34, !dbg !10834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10839, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %1, metadata !10840, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10841, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %3, metadata !10842, metadata !DIExpression()), !dbg !10850
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10851
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10851
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10851
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10843, metadata !DIExpression()), !dbg !10850
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10852
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10852
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10852
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10844, metadata !DIExpression()), !dbg !10850
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10853
  call void @llvm.dbg.value(metadata i32 %11, metadata !10845, metadata !DIExpression()), !dbg !10850
  %12 = and i32 %2, 48, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %12, metadata !10846, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10847, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10848, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10849, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10850
  %13 = lshr i32 %2, 6, !dbg !10855
  %14 = and i32 %13, 1, !dbg !10855
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10856
  %15 = lshr i32 %2, 7, !dbg !10857
  %16 = and i32 %15, 3, !dbg !10857
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10858
  %17 = lshr i32 %2, 9, !dbg !10859
  %18 = and i32 %17, 3, !dbg !10859
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10860
  %19 = icmp eq i32 %12, 32, !dbg !10861
  br i1 %19, label %20, label %24, !dbg !10863

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10864
  br i1 %21, label %22, label %23, !dbg !10867

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10868
  br label %24, !dbg !10870

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10871
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10873
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10874
  ret void, !dbg !10875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10878, metadata !DIExpression()), !dbg !10880
  %2 = shl nuw i32 1, %0, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %2, metadata !10879, metadata !DIExpression()), !dbg !10880
  ret i32 %2, !dbg !10882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10883 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10887, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 %1, metadata !10888, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 %2, metadata !10889, metadata !DIExpression()), !dbg !10890
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10891
  %5 = load volatile i32, i32* %4, align 4, !dbg !10891
  %6 = xor i32 %1, -1, !dbg !10891
  %7 = and i32 %5, %6, !dbg !10891
  %8 = mul i32 %2, %1, !dbg !10891
  %9 = or i32 %7, %8, !dbg !10891
  store volatile i32 %9, i32* %4, align 4, !dbg !10891
  ret void, !dbg !10892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10893 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10895, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %1, metadata !10896, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %2, metadata !10897, metadata !DIExpression()), !dbg !10898
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10899
  %5 = load volatile i32, i32* %4, align 4, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10900
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10902, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10903
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10905, !range !8220
  %8 = shl nuw nsw i32 %7, 1, !dbg !10899
  %9 = shl i32 3, %8, !dbg !10899
  %10 = xor i32 %9, -1, !dbg !10899
  %11 = and i32 %5, %10, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10908
  %12 = shl i32 %2, %8, !dbg !10899
  %13 = or i32 %11, %12, !dbg !10899
  store volatile i32 %13, i32* %4, align 4, !dbg !10899
  ret void, !dbg !10910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10911 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10913, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %1, metadata !10914, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %2, metadata !10915, metadata !DIExpression()), !dbg !10916
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10917
  %5 = load volatile i32, i32* %4, align 4, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10918
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10920, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10921
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10923, !range !8220
  %8 = shl nuw nsw i32 %7, 1, !dbg !10917
  %9 = shl i32 3, %8, !dbg !10917
  %10 = xor i32 %9, -1, !dbg !10917
  %11 = and i32 %5, %10, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10926
  %12 = shl i32 %2, %8, !dbg !10917
  %13 = or i32 %11, %12, !dbg !10917
  store volatile i32 %13, i32* %4, align 4, !dbg !10917
  ret void, !dbg !10928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10929 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10931, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.value(metadata i32 %1, metadata !10932, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.value(metadata i32 %2, metadata !10933, metadata !DIExpression()), !dbg !10934
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10935
  %5 = load volatile i32, i32* %4, align 4, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10936
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10938, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10939
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10941, !range !8220
  %8 = shl nuw nsw i32 %7, 2, !dbg !10935
  %9 = shl i32 15, %8, !dbg !10935
  %10 = xor i32 %9, -1, !dbg !10935
  %11 = and i32 %5, %10, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10944
  %12 = shl i32 %2, %8, !dbg !10935
  %13 = or i32 %11, %12, !dbg !10935
  store volatile i32 %13, i32* %4, align 4, !dbg !10935
  ret void, !dbg !10946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10947 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10949, metadata !DIExpression()), !dbg !10952
  call void @llvm.dbg.value(metadata i32 %1, metadata !10950, metadata !DIExpression()), !dbg !10952
  call void @llvm.dbg.value(metadata i32 %2, metadata !10951, metadata !DIExpression()), !dbg !10952
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10953
  %5 = load volatile i32, i32* %4, align 4, !dbg !10953
  %6 = lshr i32 %1, 8, !dbg !10953
  call void @llvm.dbg.value(metadata i32 %6, metadata !10702, metadata !DIExpression()) #23, !dbg !10954
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10956, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %7, metadata !10705, metadata !DIExpression()) #23, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %7, metadata !10710, metadata !DIExpression()) #23, !dbg !10957
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10959, !range !8220
  %9 = shl nuw nsw i32 %8, 2, !dbg !10953
  %10 = shl i32 15, %9, !dbg !10953
  %11 = xor i32 %10, -1, !dbg !10953
  %12 = and i32 %5, %11, !dbg !10953
  call void @llvm.dbg.value(metadata i32 %6, metadata !10702, metadata !DIExpression()) #23, !dbg !10960
  call void @llvm.dbg.value(metadata i32 %7, metadata !10705, metadata !DIExpression()) #23, !dbg !10960
  call void @llvm.dbg.value(metadata i32 %7, metadata !10710, metadata !DIExpression()) #23, !dbg !10962
  %13 = shl i32 %2, %9, !dbg !10953
  %14 = or i32 %12, %13, !dbg !10953
  store volatile i32 %14, i32* %4, align 4, !dbg !10953
  ret void, !dbg !10964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10965 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10967, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %1, metadata !10968, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %2, metadata !10969, metadata !DIExpression()), !dbg !10970
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10971
  %5 = load volatile i32, i32* %4, align 4, !dbg !10971
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10972
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10974, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10975
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10977, !range !8220
  %8 = shl nuw nsw i32 %7, 1, !dbg !10971
  %9 = shl i32 3, %8, !dbg !10971
  %10 = xor i32 %9, -1, !dbg !10971
  %11 = and i32 %5, %10, !dbg !10971
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10978
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10978
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10980
  %12 = shl i32 %2, %8, !dbg !10971
  %13 = or i32 %11, %12, !dbg !10971
  store volatile i32 %13, i32* %4, align 4, !dbg !10971
  ret void, !dbg !10982
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10985, metadata !DIExpression()), !dbg !10988
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10989
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10989
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10989
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10986, metadata !DIExpression()), !dbg !10988
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10990
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10991
  %6 = tail call fastcc zeroext i1 @device_is_ready.130() #24, !dbg !10992
  br i1 %6, label %7, label %11, !dbg !10994

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %8, metadata !10987, metadata !DIExpression()), !dbg !10988
  %9 = icmp slt i32 %8, 0, !dbg !10996
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10998
  br label %11, !dbg !10998

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10988
  ret i32 %12, !dbg !10999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.130() unnamed_addr #1 !dbg !11000 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11004, metadata !DIExpression()), !dbg !11005
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11006, !srcloc !11008
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.131() #24, !dbg !11009
  ret i1 %1, !dbg !11010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11015, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i8 1, metadata !11016, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11017, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i32 0, metadata !11018, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11019, metadata !DIExpression()), !dbg !11020
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11021
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11021
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11021
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11017, metadata !DIExpression()), !dbg !11020
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11022
  %6 = bitcast %struct.vnd_sensor_config* %5 to i8*, !dbg !11025
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !11026
  call void @llvm.dbg.value(metadata i32 %7, metadata !11018, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i32 %7, metadata !11018, metadata !DIExpression()), !dbg !11020
  ret i32 %7, !dbg !11027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.131() unnamed_addr #1 !dbg !11028 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11030, metadata !DIExpression()), !dbg !11031
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !11032
  ret i1 %1, !dbg !11033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11038, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 %1, metadata !11039, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 %2, metadata !11040, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 %3, metadata !11041, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 0, metadata !11042, metadata !DIExpression()), !dbg !11046
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !11047
  %5 = icmp eq i32 %3, 17, !dbg !11048
  br i1 %5, label %6, label %14, !dbg !11049

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %7, metadata !11043, metadata !DIExpression()), !dbg !11051
  %8 = icmp eq i32 %7, 0, !dbg !11052
  %9 = shl nuw i32 1, %1, !dbg !11054
  br i1 %8, label %12, label %10, !dbg !11055

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11056
  br label %14, !dbg !11058

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11059
  br label %14, !dbg !11062

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11063
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !11064 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11066, metadata !DIExpression()), !dbg !11070
  call void @llvm.dbg.value(metadata i8* %1, metadata !11067, metadata !DIExpression()), !dbg !11070
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11071
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11071
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11071
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11068, metadata !DIExpression()), !dbg !11070
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11072
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11072
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !11074
  %9 = icmp eq i32 %8, 0, !dbg !11074
  br i1 %9, label %12, label %10, !dbg !11075

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11076
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !11078
  br label %12, !dbg !11079

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11080
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11082
  %15 = icmp eq i32 %14, 0, !dbg !11082
  br i1 %15, label %19, label %16, !dbg !11083

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11084
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !11085
  store i8 %18, i8* %1, align 1, !dbg !11086
  br label %19, !dbg !11087

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11070
  ret i32 %20, !dbg !11088
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11091, metadata !DIExpression()), !dbg !11095
  call void @llvm.dbg.value(metadata i8 %1, metadata !11092, metadata !DIExpression()), !dbg !11095
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11096
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11096
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11096
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11093, metadata !DIExpression()), !dbg !11095
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11097

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11098
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !11101
  %10 = icmp eq i32 %9, 0, !dbg !11101
  br i1 %10, label %18, label %11, !dbg !11102

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11103, !srcloc !11110
  call void @llvm.dbg.value(metadata i32 undef, metadata !11106, metadata !DIExpression()) #23, !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()) #23, !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11094, metadata !DIExpression()), !dbg !11095
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11112
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11114
  %15 = icmp eq i32 %14, 0, !dbg !11114
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11103
  br i1 %15, label %17, label %19, !dbg !11115

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11106, metadata !DIExpression()) #23, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %16, metadata !11094, metadata !DIExpression()), !dbg !11095
  call void @llvm.dbg.value(metadata i32 undef, metadata !11116, metadata !DIExpression()) #23, !dbg !11119
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !11121, !srcloc !11122
  br label %18, !dbg !11123

18:                                               ; preds = %17, %7
  br label %7, !dbg !11098, !llvm.loop !11124

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11103
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11126
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !11127
  call void @llvm.dbg.value(metadata i32 %20, metadata !11116, metadata !DIExpression()) #23, !dbg !11128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !11130, !srcloc !11122
  ret void, !dbg !11131
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !11132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11134, metadata !DIExpression()), !dbg !11137
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11138
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11138
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11138
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11135, metadata !DIExpression()), !dbg !11137
  call void @llvm.dbg.value(metadata i32 0, metadata !11136, metadata !DIExpression()), !dbg !11137
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11139
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11139
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !11141
  %8 = icmp ne i32 %7, 0, !dbg !11141
  %9 = zext i1 %8 to i32, !dbg !11142
  call void @llvm.dbg.value(metadata i32 %9, metadata !11136, metadata !DIExpression()), !dbg !11137
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11143
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !11145
  %12 = icmp eq i32 %11, 0, !dbg !11145
  %13 = or i32 %9, 2, !dbg !11146
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11146
  call void @llvm.dbg.value(metadata i32 %14, metadata !11136, metadata !DIExpression()), !dbg !11137
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11147
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !11149
  %17 = icmp eq i32 %16, 0, !dbg !11149
  %18 = or i32 %14, 4, !dbg !11150
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11150
  call void @llvm.dbg.value(metadata i32 %19, metadata !11136, metadata !DIExpression()), !dbg !11137
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11151
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !11153
  %22 = icmp eq i32 %21, 0, !dbg !11153
  %23 = or i32 %19, 8, !dbg !11154
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11154
  call void @llvm.dbg.value(metadata i32 %24, metadata !11136, metadata !DIExpression()), !dbg !11137
  %25 = and i32 %24, 8, !dbg !11155
  %26 = icmp eq i32 %25, 0, !dbg !11155
  br i1 %26, label %29, label %27, !dbg !11157

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11158
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !11160
  br label %29, !dbg !11161

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11162
  %31 = icmp eq i32 %30, 0, !dbg !11162
  br i1 %31, label %34, label %32, !dbg !11164

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11165
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !11167
  br label %34, !dbg !11168

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11169
  %36 = icmp eq i32 %35, 0, !dbg !11169
  br i1 %36, label %39, label %37, !dbg !11171

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11172
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !11174
  br label %39, !dbg !11175

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11176
  %41 = icmp eq i32 %40, 0, !dbg !11176
  br i1 %41, label %44, label %42, !dbg !11178

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11179
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !11181
  br label %44, !dbg !11182

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11183
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !11184
  ret i32 %24, !dbg !11185
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11188, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11189, metadata !DIExpression()), !dbg !11197
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11198
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11198
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11198
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11190, metadata !DIExpression()), !dbg !11197
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11199
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11199
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11199
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11191, metadata !DIExpression()), !dbg !11197
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11200
  %10 = load i8, i8* %9, align 4, !dbg !11200
  %11 = zext i8 %10 to i32, !dbg !11201
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %12, metadata !11193, metadata !DIExpression()), !dbg !11197
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11203
  %14 = load i8, i8* %13, align 1, !dbg !11203
  %15 = zext i8 %14 to i32, !dbg !11204
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %16, metadata !11194, metadata !DIExpression()), !dbg !11197
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11206
  %18 = load i8, i8* %17, align 2, !dbg !11206
  %19 = zext i8 %18 to i32, !dbg !11207
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !11208
  call void @llvm.dbg.value(metadata i32 %20, metadata !11195, metadata !DIExpression()), !dbg !11197
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11209
  %22 = load i8, i8* %21, align 1, !dbg !11209
  %23 = zext i8 %22 to i32, !dbg !11210
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !11211
  call void @llvm.dbg.value(metadata i32 %24, metadata !11196, metadata !DIExpression()), !dbg !11197
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11212

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11214
  br i1 %26, label %69, label %27, !dbg !11216

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11217

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11218
  br i1 %29, label %65, label %30, !dbg !11218

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11220
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11197
  br i1 %31, label %38, label %34, !dbg !11222

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11223
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !11223

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11226
  br i1 %37, label %38, label %69, !dbg !11227

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11228
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !11229
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !11230
  %41 = icmp eq i32 %12, %40, !dbg !11232
  br i1 %41, label %43, label %42, !dbg !11233

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !11234
  br label %43, !dbg !11236

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !11237
  %45 = icmp eq i32 %16, %44, !dbg !11239
  br i1 %45, label %47, label %46, !dbg !11240

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !11241
  br label %47, !dbg !11243

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !11244
  %49 = icmp eq i32 %20, %48, !dbg !11246
  br i1 %49, label %51, label %50, !dbg !11247

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !11248
  br label %51, !dbg !11250

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !11251
  %53 = icmp eq i32 %24, %52, !dbg !11253
  br i1 %53, label %55, label %54, !dbg !11254

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !11255
  br label %55, !dbg !11257

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11258
  %57 = load i32, i32* %56, align 4, !dbg !11258
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11260
  %59 = load i32, i32* %58, align 4, !dbg !11260
  %60 = icmp eq i32 %57, %59, !dbg !11261
  br i1 %60, label %63, label %61, !dbg !11262

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !11263
  %62 = load i32, i32* %56, align 4, !dbg !11265
  store i32 %62, i32* %58, align 4, !dbg !11266
  br label %63, !dbg !11267

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11268
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !11269
  br label %69, !dbg !11270

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11218
  %67 = and i8 %66, 1, !dbg !11218
  %68 = icmp eq i8 %67, 0, !dbg !11218
  br i1 %68, label %30, label %69, !dbg !11218

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11197
  ret i32 %70, !dbg !11271
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !11272 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11274, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11275, metadata !DIExpression()), !dbg !11277
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11278
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11278
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11278
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11276, metadata !DIExpression()), !dbg !11277
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11279
  %7 = load i32, i32* %6, align 4, !dbg !11279
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11280
  store i32 %7, i32* %8, align 4, !dbg !11281
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11282, !range !11283
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !11284
  %11 = trunc i32 %10 to i8, !dbg !11284
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11285
  store i8 %11, i8* %12, align 4, !dbg !11286
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !11287, !range !11288
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !11289
  %15 = trunc i32 %14 to i8, !dbg !11289
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11290
  store i8 %15, i8* %16, align 1, !dbg !11291
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !11292
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11293, !range !11283
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !11294
  %20 = trunc i32 %19 to i8, !dbg !11294
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11295
  store i8 %20, i8* %21, align 2, !dbg !11296
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !11297, !range !11298
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !11299
  %24 = trunc i32 %23 to i8, !dbg !11299
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11300
  store i8 %24, i8* %25, align 1, !dbg !11301
  ret i32 0, !dbg !11302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11303 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11307, metadata !DIExpression()), !dbg !11309
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11310
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11310
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11310
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11308, metadata !DIExpression()), !dbg !11309
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11311
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11311
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !11312
  ret i32 %7, !dbg !11313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  %2 = icmp eq i32 %0, 1024, !dbg !11320
  %3 = select i1 %2, i32 2, i32 0, !dbg !11320
  %4 = icmp eq i32 %0, 1536, !dbg !11320
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11320
  ret i32 %5, !dbg !11321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11322 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11324, metadata !DIExpression()), !dbg !11326
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11327
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11327
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11327
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11325, metadata !DIExpression()), !dbg !11326
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11328
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11328
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !11329
  ret i32 %7, !dbg !11330
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11335, metadata !DIExpression()), !dbg !11336
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11337
  %3 = icmp ult i32 %2, 4, !dbg !11337
  br i1 %3, label %4, label %7, !dbg !11337

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11337
  %6 = load i32, i32* %5, align 4, !dbg !11337
  br label %7, !dbg !11337

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11338
  ret i32 %8, !dbg !11340
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11343, metadata !DIExpression()), !dbg !11345
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11346
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11346
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11346
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11344, metadata !DIExpression()), !dbg !11345
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11347
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11347
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !11348
  ret i32 %7, !dbg !11349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11354, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.value(metadata i32 %1, metadata !11355, metadata !DIExpression()), !dbg !11356
  %3 = icmp eq i32 %0, 4096, !dbg !11357
  %4 = icmp eq i32 %1, 0, !dbg !11357
  %5 = select i1 %4, i32 4, i32 3, !dbg !11357
  %6 = select i1 %4, i32 3, i32 2, !dbg !11357
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11357
  ret i32 %7, !dbg !11358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11359 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11361, metadata !DIExpression()), !dbg !11363
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11364
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11364
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11364
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11362, metadata !DIExpression()), !dbg !11363
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11365
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11365
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !11366
  ret i32 %7, !dbg !11367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11372, metadata !DIExpression()), !dbg !11373
  %2 = icmp eq i32 %0, 768, !dbg !11374
  %3 = zext i1 %2 to i32, !dbg !11373
  ret i32 %3, !dbg !11376
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11382, metadata !DIExpression()), !dbg !11383
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11384
  %3 = load volatile i32, i32* %2, align 4, !dbg !11384
  %4 = and i32 %3, 768, !dbg !11384
  ret i32 %4, !dbg !11385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11386 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11388, metadata !DIExpression()), !dbg !11389
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11390
  %3 = load volatile i32, i32* %2, align 4, !dbg !11390
  %4 = and i32 %3, 4096, !dbg !11390
  ret i32 %4, !dbg !11391
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11392 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11394, metadata !DIExpression()), !dbg !11395
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11396
  %3 = load volatile i32, i32* %2, align 4, !dbg !11396
  %4 = and i32 %3, 12288, !dbg !11396
  ret i32 %4, !dbg !11397
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11398 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11400, metadata !DIExpression()), !dbg !11401
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11402
  %3 = load volatile i32, i32* %2, align 4, !dbg !11402
  %4 = and i32 %3, 1536, !dbg !11402
  ret i32 %4, !dbg !11403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11408, metadata !DIExpression()), !dbg !11409
  %2 = icmp eq i32 %0, 2, !dbg !11410
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11410
  %4 = icmp eq i32 %0, 1, !dbg !11410
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11410
  ret i32 %5, !dbg !11411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11416, metadata !DIExpression()), !dbg !11417
  %2 = icmp ult i32 %0, 3, !dbg !11418
  br i1 %2, label %3, label %6, !dbg !11418

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11418
  %5 = load i32, i32* %4, align 4, !dbg !11418
  br label %6, !dbg !11418

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11419
  ret i32 %7, !dbg !11421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11426, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.value(metadata i32 %1, metadata !11427, metadata !DIExpression()), !dbg !11428
  %3 = icmp eq i32 %0, 4, !dbg !11429
  %4 = icmp eq i32 %1, 0, !dbg !11429
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11429
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11429
  ret i32 %6, !dbg !11430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11435, metadata !DIExpression()), !dbg !11436
  %2 = icmp eq i32 %0, 1, !dbg !11437
  %3 = select i1 %2, i32 768, i32 0, !dbg !11436
  ret i32 %3, !dbg !11439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11440 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11444, metadata !DIExpression()), !dbg !11445
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11446
  %3 = load volatile i32, i32* %2, align 4, !dbg !11446
  %4 = and i32 %3, -8193, !dbg !11446
  store volatile i32 %4, i32* %2, align 4, !dbg !11446
  ret void, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11452, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 %1, metadata !11453, metadata !DIExpression()), !dbg !11455
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11456
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11456
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11456
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11454, metadata !DIExpression()), !dbg !11455
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11457
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11457
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11458
  ret void, !dbg !11459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11462, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.value(metadata i32 %1, metadata !11463, metadata !DIExpression()), !dbg !11465
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11466
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11466
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11466
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11464, metadata !DIExpression()), !dbg !11465
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11467
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11467
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11468
  ret void, !dbg !11469
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11470 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11472, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i32 %1, metadata !11473, metadata !DIExpression()), !dbg !11475
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11476
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11476
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11476
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11474, metadata !DIExpression()), !dbg !11475
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11477
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11477
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11478
  ret void, !dbg !11479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11482, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.value(metadata i32 %1, metadata !11483, metadata !DIExpression()), !dbg !11485
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11486
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11486
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11486
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11484, metadata !DIExpression()), !dbg !11485
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11487
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11487
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11488
  ret void, !dbg !11489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11490 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11492, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i32 %1, metadata !11493, metadata !DIExpression()), !dbg !11497
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11498
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11498
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11498
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11494, metadata !DIExpression()), !dbg !11497
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11499
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11499
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11499
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11495, metadata !DIExpression()), !dbg !11497
  %10 = bitcast i32* %3 to i8*, !dbg !11500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11500
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11501
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11501
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11505
  %14 = bitcast %struct.vnd_sensor_config** %13 to i8**, !dbg !11505
  %15 = load i8*, i8** %14, align 4, !dbg !11505
  call void @llvm.dbg.value(metadata i32* %3, metadata !11496, metadata !DIExpression(DW_OP_deref)), !dbg !11497
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11506
  %17 = icmp slt i32 %16, 0, !dbg !11507
  br i1 %17, label %18, label %21, !dbg !11508

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11509
  %20 = zext i8 %19 to i32, !dbg !11509
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.137, i32 0, i32 0), i32 noundef %20) #25, !dbg !11509
  br label %26, !dbg !11515

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11516
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11516
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11517
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11518
  %25 = load i32, i32* %3, align 4, !dbg !11519
  call void @llvm.dbg.value(metadata i32 %25, metadata !11496, metadata !DIExpression()), !dbg !11497
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11520
  br label %26, !dbg !11521

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11521
  ret void, !dbg !11521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11522 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11524, metadata !DIExpression()), !dbg !11525
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11526
  %3 = load volatile i32, i32* %2, align 4, !dbg !11526
  %4 = or i32 %3, 8192, !dbg !11526
  store volatile i32 %4, i32* %2, align 4, !dbg !11526
  ret void, !dbg !11527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11530, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i8* %1, metadata !11531, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i32* %2, metadata !11532, metadata !DIExpression()), !dbg !11534
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11535
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11535
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11535
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11533, metadata !DIExpression()), !dbg !11534
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11536
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11536
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11538
  br i1 %9, label %12, label %10, !dbg !11539

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11540
  br label %12, !dbg !11541

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11534
  ret i32 %13, !dbg !11542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef %0) unnamed_addr #4 !dbg !11543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11545, metadata !DIExpression()), !dbg !11546
  %2 = icmp eq i32 %0, 2, !dbg !11547
  %3 = select i1 %2, i8 87, i8 63, !dbg !11547
  %4 = icmp eq i32 %0, 1, !dbg !11547
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11547
  ret i8 %5, !dbg !11548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11549 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11553, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 0, metadata !11554, metadata !DIExpression()), !dbg !11555
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11556
  %3 = load volatile i32, i32* %2, align 4, !dbg !11556
  %4 = and i32 %3, -32769, !dbg !11556
  store volatile i32 %4, i32* %2, align 4, !dbg !11556
  ret void, !dbg !11557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11558 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11562, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.value(metadata i32 %1, metadata !11563, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.value(metadata i32 0, metadata !11564, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.value(metadata i32 %2, metadata !11565, metadata !DIExpression()), !dbg !11566
  %4 = zext i32 %1 to i64, !dbg !11567
  %5 = mul nuw nsw i64 %4, 25, !dbg !11567
  %6 = zext i32 %2 to i64, !dbg !11567
  %7 = shl nuw nsw i64 %6, 2, !dbg !11567
  %8 = udiv i64 %5, %7, !dbg !11567
  %9 = trunc i64 %8 to i32, !dbg !11567
  %10 = udiv i32 %9, 100, !dbg !11567
  %11 = shl nuw nsw i32 %10, 4, !dbg !11567
  %12 = mul i32 %10, -100, !dbg !11567
  %13 = add i32 %12, %9, !dbg !11567
  %14 = shl i32 %13, 4, !dbg !11567
  %15 = add i32 %14, 50, !dbg !11567
  %16 = udiv i32 %15, 100, !dbg !11567
  %17 = and i32 %16, 240, !dbg !11567
  %18 = add nuw nsw i32 %17, %11, !dbg !11567
  %19 = and i32 %16, 15, !dbg !11567
  %20 = and i32 %18, 65520, !dbg !11570
  %21 = or i32 %20, %19, !dbg !11570
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11571
  store volatile i32 %21, i32* %22, align 4, !dbg !11572
  ret void, !dbg !11573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11574 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11576, metadata !DIExpression()), !dbg !11578
  call void @llvm.dbg.value(metadata i32 %1, metadata !11577, metadata !DIExpression()), !dbg !11578
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11579
  %4 = load volatile i32, i32* %3, align 4, !dbg !11579
  %5 = and i32 %4, -769, !dbg !11579
  %6 = or i32 %5, %1, !dbg !11579
  store volatile i32 %6, i32* %3, align 4, !dbg !11579
  ret void, !dbg !11580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11581 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11583, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 %1, metadata !11584, metadata !DIExpression()), !dbg !11585
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11586
  %4 = load volatile i32, i32* %3, align 4, !dbg !11586
  %5 = and i32 %4, -4097, !dbg !11586
  %6 = or i32 %5, %1, !dbg !11586
  store volatile i32 %6, i32* %3, align 4, !dbg !11586
  ret void, !dbg !11587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11588 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11590, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.value(metadata i32 %1, metadata !11591, metadata !DIExpression()), !dbg !11592
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11593
  %4 = load volatile i32, i32* %3, align 4, !dbg !11593
  %5 = and i32 %4, -12289, !dbg !11593
  %6 = or i32 %5, %1, !dbg !11593
  store volatile i32 %6, i32* %3, align 4, !dbg !11593
  ret void, !dbg !11594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11595 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11597, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata i32 %1, metadata !11598, metadata !DIExpression()), !dbg !11599
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11600
  %4 = load volatile i32, i32* %3, align 4, !dbg !11600
  %5 = and i32 %4, -1537, !dbg !11600
  %6 = or i32 %5, %1, !dbg !11600
  store volatile i32 %6, i32* %3, align 4, !dbg !11600
  ret void, !dbg !11601
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11602 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11604, metadata !DIExpression()), !dbg !11605
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11606
  %3 = load volatile i32, i32* %2, align 4, !dbg !11606
  %4 = lshr i32 %3, 3, !dbg !11607
  %5 = and i32 %4, 1, !dbg !11607
  ret i32 %5, !dbg !11608
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11609 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11611, metadata !DIExpression()), !dbg !11612
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11613
  %3 = load volatile i32, i32* %2, align 4, !dbg !11613
  %4 = and i32 %3, 1, !dbg !11613
  ret i32 %4, !dbg !11614
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11617, metadata !DIExpression()), !dbg !11618
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11619
  %3 = load volatile i32, i32* %2, align 4, !dbg !11619
  %4 = lshr i32 %3, 1, !dbg !11620
  %5 = and i32 %4, 1, !dbg !11620
  ret i32 %5, !dbg !11621
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11622 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11624, metadata !DIExpression()), !dbg !11625
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11626
  %3 = load volatile i32, i32* %2, align 4, !dbg !11626
  %4 = lshr i32 %3, 8, !dbg !11627
  %5 = and i32 %4, 1, !dbg !11627
  ret i32 %5, !dbg !11628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11629 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11631, metadata !DIExpression()), !dbg !11632
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11633
  store volatile i32 -257, i32* %2, align 4, !dbg !11633
  ret void, !dbg !11634
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11635 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11637, metadata !DIExpression()), !dbg !11639
  %3 = bitcast i32* %2 to i8*, !dbg !11640
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11638, metadata !DIExpression()), !dbg !11641
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11642
  %5 = load volatile i32, i32* %4, align 4, !dbg !11642
  store volatile i32 %5, i32* %2, align 4, !dbg !11643
  %6 = load volatile i32, i32* %2, align 4, !dbg !11644
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11645
  %8 = load volatile i32, i32* %7, align 4, !dbg !11645
  store volatile i32 %8, i32* %2, align 4, !dbg !11646
  %9 = load volatile i32, i32* %2, align 4, !dbg !11647
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11648
  ret void, !dbg !11648
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11649 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11651, metadata !DIExpression()), !dbg !11653
  %3 = bitcast i32* %2 to i8*, !dbg !11654
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11654
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11652, metadata !DIExpression()), !dbg !11655
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11656
  %5 = load volatile i32, i32* %4, align 4, !dbg !11656
  store volatile i32 %5, i32* %2, align 4, !dbg !11657
  %6 = load volatile i32, i32* %2, align 4, !dbg !11658
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11659
  %8 = load volatile i32, i32* %7, align 4, !dbg !11659
  store volatile i32 %8, i32* %2, align 4, !dbg !11660
  %9 = load volatile i32, i32* %2, align 4, !dbg !11661
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11662
  ret void, !dbg !11662
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11663 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11665, metadata !DIExpression()), !dbg !11667
  %3 = bitcast i32* %2 to i8*, !dbg !11668
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11668
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11666, metadata !DIExpression()), !dbg !11669
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11670
  %5 = load volatile i32, i32* %4, align 4, !dbg !11670
  store volatile i32 %5, i32* %2, align 4, !dbg !11671
  %6 = load volatile i32, i32* %2, align 4, !dbg !11672
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11673
  %8 = load volatile i32, i32* %7, align 4, !dbg !11673
  store volatile i32 %8, i32* %2, align 4, !dbg !11674
  %9 = load volatile i32, i32* %2, align 4, !dbg !11675
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11676
  ret void, !dbg !11676
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11677 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11679, metadata !DIExpression()), !dbg !11681
  %3 = bitcast i32* %2 to i8*, !dbg !11682
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11682
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11680, metadata !DIExpression()), !dbg !11683
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11684
  %5 = load volatile i32, i32* %4, align 4, !dbg !11684
  store volatile i32 %5, i32* %2, align 4, !dbg !11685
  %6 = load volatile i32, i32* %2, align 4, !dbg !11686
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11687
  %8 = load volatile i32, i32* %7, align 4, !dbg !11687
  store volatile i32 %8, i32* %2, align 4, !dbg !11688
  %9 = load volatile i32, i32* %2, align 4, !dbg !11689
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11690
  ret void, !dbg !11690
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11691 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11693, metadata !DIExpression()), !dbg !11694
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11695
  %3 = load volatile i32, i32* %2, align 4, !dbg !11695
  %4 = lshr i32 %3, 7, !dbg !11696
  %5 = and i32 %4, 1, !dbg !11696
  ret i32 %5, !dbg !11697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11698 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11702, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.value(metadata i8 %1, metadata !11703, metadata !DIExpression()), !dbg !11704
  %3 = zext i8 %1 to i32, !dbg !11705
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11706
  store volatile i32 %3, i32* %4, align 4, !dbg !11707
  ret void, !dbg !11708
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11709 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11711, metadata !DIExpression()), !dbg !11712
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11713
  %3 = load volatile i32, i32* %2, align 4, !dbg !11713
  %4 = lshr i32 %3, 5, !dbg !11714
  %5 = and i32 %4, 1, !dbg !11714
  ret i32 %5, !dbg !11715
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11716 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11720, metadata !DIExpression()), !dbg !11721
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11722
  %3 = load volatile i32, i32* %2, align 4, !dbg !11722
  %4 = trunc i32 %3 to i8, !dbg !11723
  ret i8 %4, !dbg !11724
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11725 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11727, metadata !DIExpression()), !dbg !11733
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11734
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11734
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11734
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11728, metadata !DIExpression()), !dbg !11733
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11735
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11735
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11735
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11729, metadata !DIExpression()), !dbg !11733
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11736
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11737
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11737
  %10 = tail call fastcc zeroext i1 @device_is_ready.139(%struct.device* noundef %9) #24, !dbg !11739
  br i1 %10, label %14, label %11, !dbg !11740

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11741
  %13 = zext i8 %12 to i32, !dbg !11741
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.140, i32 0, i32 0), i32 noundef %13) #25, !dbg !11741
  br label %62, !dbg !11747

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11748
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11749
  %17 = bitcast %struct.vnd_sensor_config** %16 to i8**, !dbg !11749
  %18 = load i8*, i8** %17, align 4, !dbg !11749
  %19 = tail call fastcc i32 @clock_control_on.141(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %19, metadata !11732, metadata !DIExpression()), !dbg !11733
  %20 = icmp eq i32 %19, 0, !dbg !11751
  br i1 %20, label %24, label %21, !dbg !11753

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11754
  %23 = zext i8 %22 to i32, !dbg !11754
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.142, i32 0, i32 0), i32 noundef %23) #25, !dbg !11754
  br label %62, !dbg !11760

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11761
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11761
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11762
  call void @llvm.dbg.value(metadata i32 %27, metadata !11732, metadata !DIExpression()), !dbg !11733
  %28 = icmp slt i32 %27, 0, !dbg !11763
  br i1 %28, label %62, label %29, !dbg !11765

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11766
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11766
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11767
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11768
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11769
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11770
  %34 = load i32, i32* %33, align 4, !dbg !11770
  %35 = icmp ult i32 %34, 3, !dbg !11772
  br i1 %35, label %39, label %36, !dbg !11772

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 2) #24, !dbg !11773
  %38 = zext i8 %37 to i32, !dbg !11773
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.143, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11773
  call void @llvm.dbg.value(metadata i32 0, metadata !11730, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 0, metadata !11731, metadata !DIExpression()), !dbg !11733
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11772
  %41 = load i32, i32* %40, align 4, !dbg !11772
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !11772
  %43 = load i32, i32* %42, align 4, !dbg !11772
  br label %44, !dbg !11772

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11782
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11782
  call void @llvm.dbg.value(metadata i32 %46, metadata !11731, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %45, metadata !11730, metadata !DIExpression()), !dbg !11733
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11783
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11784
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11785
  %49 = load i8, i8* %48, align 4, !dbg !11785, !range !7409
  %50 = icmp eq i8 %49, 0, !dbg !11785
  br i1 %50, label %52, label %51, !dbg !11787

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11788
  br label %52, !dbg !11790

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11791
  %54 = load i32, i32* %53, align 4, !dbg !11791
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11792
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11793
  %56 = load i8, i8* %55, align 4, !dbg !11793, !range !7409
  %57 = icmp eq i8 %56, 0, !dbg !11793
  br i1 %57, label %60, label %58, !dbg !11795

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11796
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11798
  br label %60, !dbg !11799

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11800
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11801
  br label %62, !dbg !11802

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11733
  ret i32 %63, !dbg !11803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !11804 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11808, metadata !DIExpression()), !dbg !11812
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11813
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11813
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11813
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11809, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11810, metadata !DIExpression()), !dbg !11812
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11814
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11815
  ret void, !dbg !11816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.139(%struct.device* noundef %0) unnamed_addr #1 !dbg !11817 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11821, metadata !DIExpression()), !dbg !11822
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11823, !srcloc !11825
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.144(%struct.device* noundef %0) #24, !dbg !11826
  ret i1 %2, !dbg !11827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.141(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11828 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11830, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata i8* %1, metadata !11831, metadata !DIExpression()), !dbg !11833
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11834
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11834
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11834
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11832, metadata !DIExpression()), !dbg !11833
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11835
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11835
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11836
  ret i32 %8, !dbg !11837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11838 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11842, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.value(metadata i8 0, metadata !11843, metadata !DIExpression()), !dbg !11846
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11847
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11847
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11845, metadata !DIExpression(DW_OP_deref)), !dbg !11846
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11848
  call void @llvm.dbg.value(metadata i32 %4, metadata !11844, metadata !DIExpression()), !dbg !11846
  %5 = icmp slt i32 %4, 0, !dbg !11849
  br i1 %5, label %9, label %6, !dbg !11851

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11852
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11845, metadata !DIExpression()), !dbg !11846
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11853
  br label %9, !dbg !11854

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11855
  ret i32 %10, !dbg !11855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11856 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11858, metadata !DIExpression()), !dbg !11862
  call void @llvm.dbg.value(metadata i32 12, metadata !11859, metadata !DIExpression()), !dbg !11862
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11863

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11864, metadata !DIExpression()) #23, !dbg !11870
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11873, !srcloc !11874
  call void @llvm.dbg.value(metadata i32 %4, metadata !11869, metadata !DIExpression()) #23, !dbg !11870
  %5 = or i32 %4, 12, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %5, metadata !11860, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i32 %5, metadata !11877, metadata !DIExpression()) #23, !dbg !11884
  call void @llvm.dbg.value(metadata i32* %2, metadata !11882, metadata !DIExpression()) #23, !dbg !11884
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11886, !srcloc !11887
  call void @llvm.dbg.value(metadata i32 %6, metadata !11883, metadata !DIExpression()) #23, !dbg !11884
  %7 = icmp eq i32 %6, 0, !dbg !11863
  br i1 %7, label %8, label %3, !dbg !11875, !llvm.loop !11888

8:                                                ; preds = %3
  ret void, !dbg !11889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11890 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11892, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %1, metadata !11893, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %2, metadata !11894, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 0, metadata !11895, metadata !DIExpression()), !dbg !11896
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11897
  %5 = load volatile i32, i32* %4, align 4, !dbg !11897
  %6 = and i32 %5, -5633, !dbg !11897
  %7 = or i32 %2, %1, !dbg !11897
  %8 = or i32 %7, %6, !dbg !11897
  store volatile i32 %8, i32* %4, align 4, !dbg !11897
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11898
  %10 = load volatile i32, i32* %9, align 4, !dbg !11898
  %11 = and i32 %10, -12289, !dbg !11898
  store volatile i32 %11, i32* %9, align 4, !dbg !11898
  ret void, !dbg !11899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11900 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11902, metadata !DIExpression()), !dbg !11903
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11904
  %3 = load volatile i32, i32* %2, align 4, !dbg !11904
  %4 = or i32 %3, 8, !dbg !11904
  store volatile i32 %4, i32* %2, align 4, !dbg !11904
  ret void, !dbg !11905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11906 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11910, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11911, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i32 0, metadata !11912, metadata !DIExpression()), !dbg !11913
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11914
  %3 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %2, align 4, !dbg !11914
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11915
  %5 = load i8, i8* %4, align 4, !dbg !11915
  %6 = tail call i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11916
  ret i32 %6, !dbg !11917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.144(%struct.device* noundef %0) unnamed_addr #1 !dbg !11918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11920, metadata !DIExpression()), !dbg !11921
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11922
  ret i1 %2, !dbg !11923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11924 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11926, metadata !DIExpression()), !dbg !11927
  tail call fastcc void @__NVIC_SetPriority.146() #24, !dbg !11928
  store i32 8399, i32* @last_load, align 4, !dbg !11929
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11930
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11931
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11932
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11933
  %3 = or i32 %2, 7, !dbg !11933
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11933
  ret i32 0, !dbg !11934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.146() unnamed_addr #15 !dbg !11935 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11937, metadata !DIExpression()), !dbg !11939
  call void @llvm.dbg.value(metadata i32 1, metadata !11938, metadata !DIExpression()), !dbg !11939
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11940
  ret void, !dbg !11943
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11946, metadata !DIExpression()), !dbg !11948
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11949
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11950
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11951
  %5 = add i32 %4, %3, !dbg !11951
  store i32 %5, i32* @cycle_count, align 4, !dbg !11951
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11952
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11953
  %7 = sub i32 %5, %6, !dbg !11956
  %8 = udiv i32 %7, 8400, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %8, metadata !11947, metadata !DIExpression()), !dbg !11948
  %9 = mul nuw i32 %8, 8400, !dbg !11958
  %10 = add i32 %9, %6, !dbg !11959
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11959
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11960
  tail call void @z_arm_int_exit() #25, !dbg !11961
  ret void, !dbg !11962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11963 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11968
  call void @llvm.dbg.value(metadata i32 %1, metadata !11965, metadata !DIExpression()), !dbg !11969
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %2, metadata !11966, metadata !DIExpression()), !dbg !11969
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11971
  call void @llvm.dbg.value(metadata i32 %3, metadata !11967, metadata !DIExpression()), !dbg !11969
  %4 = and i32 %2, 65536, !dbg !11972
  %5 = icmp ne i32 %4, 0, !dbg !11972
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11974
  %8 = load i32, i32* @last_load, align 4, !dbg !11969
  br i1 %7, label %9, label %13, !dbg !11974

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11975
  %11 = add i32 %10, %8, !dbg !11975
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11975
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11977
  br label %13, !dbg !11978

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11979
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11980
  %16 = add i32 %14, %15, !dbg !11981
  ret i32 %16, !dbg !11982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11987, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i1 %1, metadata !11988, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12000
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12001
  br i1 %4, label %5, label %8, !dbg !12001

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12003
  %7 = and i32 %6, -2, !dbg !12003
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12003
  store i32 -16777216, i32* @last_load, align 4, !dbg !12005
  br label %54, !dbg !12006

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12007
  call void @llvm.dbg.value(metadata i32 %9, metadata !11992, metadata !DIExpression()), !dbg !12000
  br i1 %3, label %18, label %10, !dbg !12008

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12008
  call void @llvm.dbg.value(metadata i32 undef, metadata !11987, metadata !DIExpression()), !dbg !12000
  %12 = icmp slt i32 %11, 1, !dbg !12009
  br i1 %12, label %18, label %13, !dbg !12009

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12009
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12009
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12009
  %17 = add nuw nsw i32 %16, 8399, !dbg !12009
  br label %18, !dbg !12009

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11987, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12010, metadata !DIExpression()) #23, !dbg !12017
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12019, !srcloc !12025
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %21, metadata !12022, metadata !DIExpression()) #23, !dbg !12026
  call void @llvm.dbg.value(metadata i32 undef, metadata !12023, metadata !DIExpression()) #23, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %21, metadata !12016, metadata !DIExpression()) #23, !dbg !12017
  call void @llvm.dbg.value(metadata i32 %21, metadata !11993, metadata !DIExpression()), !dbg !12000
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %22, metadata !11998, metadata !DIExpression()), !dbg !12000
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12028
  call void @llvm.dbg.value(metadata i32 %23, metadata !11990, metadata !DIExpression()), !dbg !12000
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12029
  %25 = add i32 %24, %22, !dbg !12029
  store i32 %25, i32* @cycle_count, align 4, !dbg !12029
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12030
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12031
  %27 = sub i32 %25, %26, !dbg !12032
  call void @llvm.dbg.value(metadata i32 %27, metadata !11999, metadata !DIExpression()), !dbg !12000
  %28 = icmp slt i32 %27, 0, !dbg !12033
  br i1 %28, label %38, label %29, !dbg !12035

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11989, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 undef, metadata !11989, metadata !DIExpression()), !dbg !12000
  %30 = add nuw i32 %19, %27, !dbg !12036
  %31 = urem i32 %30, 8400, !dbg !12038
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11989, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12000
  %32 = sub nuw nsw i32 %19, %31, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %32, metadata !11989, metadata !DIExpression()), !dbg !12000
  %33 = icmp ugt i32 %32, 1024, !dbg !12040
  br i1 %33, label %34, label %36, !dbg !12040

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11989, metadata !DIExpression()), !dbg !12000
  %35 = icmp ugt i32 %32, 16766400, !dbg !12041
  br i1 %35, label %38, label %36, !dbg !12043

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12044
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12045
  call void @llvm.dbg.value(metadata i32 %40, metadata !11991, metadata !DIExpression()), !dbg !12000
  %41 = add nsw i32 %39, -1, !dbg !12046
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12047
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12048
  %42 = icmp ult i32 %23, %40, !dbg !12049
  br i1 %42, label %43, label %48, !dbg !12051

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12052
  %45 = add i32 %23, %9, !dbg !12054
  %46 = sub i32 %45, %40, !dbg !12055
  %47 = add i32 %46, %44, !dbg !12052
  br label %52, !dbg !12056

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12057
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12059
  %51 = add i32 %49, %50, !dbg !12059
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12060
  store i32 %53, i32* @cycle_count, align 4, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %21, metadata !12061, metadata !DIExpression()) #23, !dbg !12067
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12066, metadata !DIExpression()) #23, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %21, metadata !12069, metadata !DIExpression()) #23, !dbg !12072
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12074, !srcloc !12075
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12076
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12077 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12010, metadata !DIExpression()) #23, !dbg !12081
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12083, !srcloc !12025
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %2, metadata !12022, metadata !DIExpression()) #23, !dbg !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12023, metadata !DIExpression()) #23, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %2, metadata !12016, metadata !DIExpression()) #23, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %2, metadata !12079, metadata !DIExpression()), !dbg !12086
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12087
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12088
  %5 = add i32 %4, %3, !dbg !12089
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12090
  %7 = sub i32 %5, %6, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %7, metadata !12080, metadata !DIExpression()), !dbg !12086
  call void @llvm.dbg.value(metadata i32 %2, metadata !12061, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12066, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %2, metadata !12069, metadata !DIExpression()) #23, !dbg !12094
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12096, !srcloc !12075
  %8 = udiv i32 %7, 8400, !dbg !12097
  ret i32 %8, !dbg !12098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12099 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12010, metadata !DIExpression()) #23, !dbg !12103
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12105, !srcloc !12025
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12105
  call void @llvm.dbg.value(metadata i32 %2, metadata !12022, metadata !DIExpression()) #23, !dbg !12107
  call void @llvm.dbg.value(metadata i32 undef, metadata !12023, metadata !DIExpression()) #23, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %2, metadata !12016, metadata !DIExpression()) #23, !dbg !12103
  call void @llvm.dbg.value(metadata i32 %2, metadata !12101, metadata !DIExpression()), !dbg !12108
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12109
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12110
  %5 = add i32 %4, %3, !dbg !12111
  call void @llvm.dbg.value(metadata i32 %5, metadata !12102, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 %2, metadata !12061, metadata !DIExpression()) #23, !dbg !12112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12066, metadata !DIExpression()) #23, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %2, metadata !12069, metadata !DIExpression()) #23, !dbg !12114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12116, !srcloc !12075
  ret i32 %5, !dbg !12117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !12118 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12119
  %2 = icmp eq i32 %1, -16777216, !dbg !12121
  br i1 %2, label %3, label %6, !dbg !12122

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12123
  %5 = or i32 %4, 1, !dbg !12123
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12123
  br label %6, !dbg !12125

6:                                                ; preds = %3, %0
  ret void, !dbg !12126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !12127 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12128
  %2 = and i32 %1, -2, !dbg !12128
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12128
  ret void, !dbg !12129
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12130 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12156, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i8 %1, metadata !12157, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12158, metadata !DIExpression()), !dbg !12159
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12160
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12160
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12159
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12161
  %8 = load i8, i8* %6, align 4, !dbg !12162
  %9 = zext i8 %8 to i32, !dbg !12163
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12163
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12164
  br i1 %11, label %18, label %24, !dbg !12165

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12159
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12161
  %14 = load i8, i8* %6, align 4, !dbg !12162
  %15 = zext i8 %14 to i32, !dbg !12163
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12163
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12164
  br i1 %17, label %18, label %24, !dbg !12165, !llvm.loop !12166

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12168
  %21 = load i8, i8* %20, align 1, !dbg !12168
  %22 = icmp eq i8 %21, %1, !dbg !12171
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12172
  br i1 %22, label %24, label %12, !dbg !12173

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12159
  ret i32 %25, !dbg !12174
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12175 {
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %0, metadata !12186, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i8 %1, metadata !12187, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i32 %2, metadata !12188, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i32 0, metadata !12191, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i32 0, metadata !12192, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i8 0, metadata !12193, metadata !DIExpression()), !dbg !12203
  %4 = icmp eq i8 %1, 0, !dbg !12204
  br i1 %4, label %35, label %5, !dbg !12205

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12204
  br label %9, !dbg !12205

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12193, metadata !DIExpression()), !dbg !12203
  call void @llvm.dbg.value(metadata i32 %29, metadata !12191, metadata !DIExpression()), !dbg !12202
  %8 = icmp eq i32 %34, %6, !dbg !12204
  br i1 %8, label %35, label %9, !dbg !12205, !llvm.loop !12206

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12193, metadata !DIExpression()), !dbg !12203
  call void @llvm.dbg.value(metadata i32 %11, metadata !12191, metadata !DIExpression()), !dbg !12202
  %12 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 0, !dbg !12208
  %13 = load i32, i32* %12, align 4, !dbg !12208
  call void @llvm.dbg.value(metadata i32 %13, metadata !12190, metadata !DIExpression()), !dbg !12202
  %14 = and i32 %13, 31, !dbg !12209
  %15 = icmp ult i32 %14, 16, !dbg !12210
  br i1 %15, label %16, label %20, !dbg !12211

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12212
  %18 = load i32, i32* %17, align 4, !dbg !12212
  %19 = or i32 %18, 32, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %19, metadata !12191, metadata !DIExpression()), !dbg !12202
  br label %28, !dbg !12215

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12216

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12217
  %23 = load i32, i32* %22, align 4, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %23, metadata !12195, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12218
  %24 = lshr i32 %23, 7, !dbg !12219
  %25 = and i32 %24, 16, !dbg !12219
  %26 = or i32 %25, %23, !dbg !12219
  call void @llvm.dbg.value(metadata i32 %26, metadata !12191, metadata !DIExpression()), !dbg !12202
  br label %28, !dbg !12220

27:                                               ; preds = %20
  br label %28, !dbg !12221

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12202
  call void @llvm.dbg.value(metadata i32 %29, metadata !12191, metadata !DIExpression()), !dbg !12202
  %30 = lshr i32 %13, 5, !dbg !12221
  %31 = and i32 %30, 255, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %31, metadata !12189, metadata !DIExpression()), !dbg !12202
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %32, metadata !12192, metadata !DIExpression()), !dbg !12202
  %33 = icmp slt i32 %32, 0, !dbg !12223
  %34 = add nuw nsw i32 %10, 1, !dbg !12225
  call void @llvm.dbg.value(metadata i32 %34, metadata !12193, metadata !DIExpression()), !dbg !12203
  br i1 %33, label %35, label %7, !dbg !12226

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12227
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12232, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.value(metadata i32 %1, metadata !12233, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.value(metadata i32 %2, metadata !12234, metadata !DIExpression()), !dbg !12236
  %4 = icmp ugt i32 %0, 175, !dbg !12237
  br i1 %4, label %16, label %5, !dbg !12239

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12240
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12241
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12241
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12235, metadata !DIExpression()), !dbg !12236
  %9 = add nsw i32 %6, -8, !dbg !12242
  %10 = icmp ult i32 %9, 3, !dbg !12242
  br i1 %10, label %16, label %11, !dbg !12244

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.151(%struct.device* noundef %8) #24, !dbg !12245
  br i1 %12, label %13, label %16, !dbg !12246

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12247
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12248
  br label %16, !dbg !12249

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12236
  ret i32 %17, !dbg !12250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.151(%struct.device* noundef %0) unnamed_addr #1 !dbg !12251 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12255, metadata !DIExpression()), !dbg !12256
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12257, !srcloc !12259
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.152(%struct.device* noundef %0) #24, !dbg !12260
  ret i1 %2, !dbg !12261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.152(%struct.device* noundef %0) unnamed_addr #1 !dbg !12262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12264, metadata !DIExpression()), !dbg !12265
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12266
  ret i1 %2, !dbg !12267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12268 {
  ret void, !dbg !12269
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !12270 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12272, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 0, metadata !12273, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 2, metadata !12274, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 0, metadata !12275, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 2, metadata !12276, metadata !DIExpression()), !dbg !12277
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12278
  %2 = and i32 %1, 12, !dbg !12279
  call void @llvm.dbg.value(metadata i32 %2, metadata !12272, metadata !DIExpression()), !dbg !12277
  %3 = icmp eq i32 %2, 8, !dbg !12280
  br i1 %3, label %4, label %18, !dbg !12280

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12281
  call void @llvm.dbg.value(metadata i32 %5, metadata !12275, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12277
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12283
  %7 = and i32 %6, 63, !dbg !12284
  call void @llvm.dbg.value(metadata i32 %7, metadata !12276, metadata !DIExpression()), !dbg !12277
  %8 = udiv i32 16000000, %7, !dbg !12285
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12285
  %10 = lshr i32 %9, 6, !dbg !12285
  %11 = and i32 %10, 511, !dbg !12285
  %12 = mul i32 %11, %8, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %12, metadata !12273, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 %12, metadata !12273, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 %12, metadata !12273, metadata !DIExpression()), !dbg !12277
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12287
  %14 = lshr i32 %13, 15, !dbg !12288
  %15 = and i32 %14, 6, !dbg !12288
  %16 = add nuw nsw i32 %15, 2, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %16, metadata !12274, metadata !DIExpression()), !dbg !12277
  %17 = udiv i32 %12, %16, !dbg !12289
  br label %18, !dbg !12290

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12291
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12292
  %21 = lshr i32 %20, 4, !dbg !12293
  %22 = and i32 %21, 15, !dbg !12293
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12294
  %24 = load i8, i8* %23, align 1, !dbg !12294
  %25 = zext i8 %24 to i32, !dbg !12294
  call void @llvm.dbg.value(metadata i32 %25, metadata !12272, metadata !DIExpression()), !dbg !12277
  %26 = lshr i32 %19, %25, !dbg !12295
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12295
  ret void, !dbg !12296
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12297 {
  ret i32 0, !dbg !12302
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12303 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12330, metadata !DIExpression()), !dbg !12341
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12342
  br i1 %3, label %317, label %4, !dbg !12344

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12345
  %6 = load i32, i32* %5, align 4, !dbg !12345
  %7 = and i32 %6, 1, !dbg !12347
  %8 = icmp eq i32 %7, 0, !dbg !12348
  br i1 %8, label %66, label %9, !dbg !12349

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12350
  %11 = and i32 %10, 12, !dbg !12350
  %12 = icmp eq i32 %11, 4, !dbg !12353
  br i1 %12, label %21, label %13, !dbg !12354

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12355
  %15 = and i32 %14, 12, !dbg !12355
  %16 = icmp eq i32 %15, 8, !dbg !12356
  br i1 %16, label %17, label %29, !dbg !12357

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12358
  %19 = and i32 %18, 4194304, !dbg !12359
  %20 = icmp eq i32 %19, 0, !dbg !12360
  br i1 %20, label %29, label %21, !dbg !12361

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12362
  %23 = and i32 %22, 131072, !dbg !12362
  %24 = icmp eq i32 %23, 0, !dbg !12362
  br i1 %24, label %66, label %25, !dbg !12365

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12366
  %27 = load i32, i32* %26, align 4, !dbg !12366
  %28 = icmp eq i32 %27, 0, !dbg !12367
  br i1 %28, label %317, label %66, !dbg !12368

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12369
  %31 = load i32, i32* %30, align 4, !dbg !12369
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12373

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12374
  %34 = or i32 %33, 65536, !dbg !12374
  br label %45, !dbg !12374

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12376
  %37 = or i32 %36, 262144, !dbg !12376
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12376
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12376
  %39 = or i32 %38, 65536, !dbg !12376
  br label %45, !dbg !12376

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12379
  %42 = and i32 %41, -65537, !dbg !12379
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12379
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12379
  %44 = and i32 %43, -262145, !dbg !12379
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12381
  %47 = load i32, i32* %30, align 4, !dbg !12382
  %48 = icmp eq i32 %47, 0, !dbg !12384
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12385
  call void @llvm.dbg.value(metadata i32 %49, metadata !12331, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i32 %49, metadata !12331, metadata !DIExpression()), !dbg !12341
  br i1 %48, label %58, label %50, !dbg !12386

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12387
  %52 = and i32 %51, 131072, !dbg !12389
  %53 = icmp eq i32 %52, 0, !dbg !12389
  br i1 %53, label %54, label %66, !dbg !12390

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12391
  %56 = sub i32 %55, %49, !dbg !12394
  %57 = icmp ugt i32 %56, 100, !dbg !12395
  br i1 %57, label %317, label %50, !dbg !12396, !llvm.loop !12397

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12399
  %60 = and i32 %59, 131072, !dbg !12399
  %61 = icmp eq i32 %60, 0, !dbg !12399
  br i1 %61, label %66, label %62, !dbg !12401

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12402
  %64 = sub i32 %63, %49, !dbg !12405
  %65 = icmp ugt i32 %64, 100, !dbg !12406
  br i1 %65, label %317, label %58, !dbg !12407, !llvm.loop !12408

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12410
  %68 = and i32 %67, 2, !dbg !12412
  %69 = icmp eq i32 %68, 0, !dbg !12413
  br i1 %69, label %121, label %70, !dbg !12414

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12415
  %72 = and i32 %71, 12, !dbg !12415
  %73 = icmp eq i32 %72, 0, !dbg !12418
  br i1 %73, label %82, label %74, !dbg !12419

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12420
  %76 = and i32 %75, 12, !dbg !12420
  %77 = icmp eq i32 %76, 8, !dbg !12421
  br i1 %77, label %78, label %90, !dbg !12422

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12423
  %80 = and i32 %79, 4194304, !dbg !12424
  %81 = icmp eq i32 %80, 0, !dbg !12425
  br i1 %81, label %82, label %90, !dbg !12426

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12427
  %84 = and i32 %83, 2, !dbg !12427
  %85 = icmp eq i32 %84, 0, !dbg !12427
  br i1 %85, label %114, label %86, !dbg !12430

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12431
  %88 = load i32, i32* %87, align 4, !dbg !12431
  %89 = icmp eq i32 %88, 1, !dbg !12432
  br i1 %89, label %114, label %317, !dbg !12433

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12434
  %92 = load i32, i32* %91, align 4, !dbg !12434
  %93 = icmp eq i32 %92, 0, !dbg !12437
  br i1 %93, label %104, label %94, !dbg !12438

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12439
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12441
  call void @llvm.dbg.value(metadata i32 %95, metadata !12331, metadata !DIExpression()), !dbg !12341
  br label %96, !dbg !12442

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12443
  %98 = and i32 %97, 2, !dbg !12444
  %99 = icmp eq i32 %98, 0, !dbg !12444
  br i1 %99, label %100, label %114, !dbg !12442

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12445
  %102 = sub i32 %101, %95, !dbg !12448
  %103 = icmp ugt i32 %102, 2, !dbg !12449
  br i1 %103, label %317, label %96, !dbg !12450, !llvm.loop !12451

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12453
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12455
  call void @llvm.dbg.value(metadata i32 %105, metadata !12331, metadata !DIExpression()), !dbg !12341
  br label %106, !dbg !12456

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12457
  %108 = and i32 %107, 2, !dbg !12457
  %109 = icmp eq i32 %108, 0, !dbg !12457
  br i1 %109, label %121, label %110, !dbg !12456

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12458
  %112 = sub i32 %111, %105, !dbg !12461
  %113 = icmp ugt i32 %112, 2, !dbg !12462
  br i1 %113, label %317, label %106, !dbg !12463, !llvm.loop !12464

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12466
  %116 = and i32 %115, -249, !dbg !12466
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12466
  %118 = load i32, i32* %117, align 4, !dbg !12466
  %119 = shl i32 %118, 3, !dbg !12466
  %120 = or i32 %119, %116, !dbg !12466
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12466
  br label %121, !dbg !12467

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12467
  %123 = and i32 %122, 8, !dbg !12469
  %124 = icmp eq i32 %123, 0, !dbg !12470
  br i1 %124, label %149, label %125, !dbg !12471

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12472
  %127 = load i32, i32* %126, align 4, !dbg !12472
  %128 = icmp eq i32 %127, 0, !dbg !12475
  br i1 %128, label %139, label %129, !dbg !12476

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12477
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12479
  call void @llvm.dbg.value(metadata i32 %130, metadata !12331, metadata !DIExpression()), !dbg !12341
  br label %131, !dbg !12480

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12481
  %133 = and i32 %132, 2, !dbg !12482
  %134 = icmp eq i32 %133, 0, !dbg !12482
  br i1 %134, label %135, label %149, !dbg !12480

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12483
  %137 = sub i32 %136, %130, !dbg !12486
  %138 = icmp ugt i32 %137, 2, !dbg !12487
  br i1 %138, label %317, label %131, !dbg !12488, !llvm.loop !12489

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12491
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12493
  call void @llvm.dbg.value(metadata i32 %140, metadata !12331, metadata !DIExpression()), !dbg !12341
  br label %141, !dbg !12494

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12495
  %143 = and i32 %142, 2, !dbg !12495
  %144 = icmp eq i32 %143, 0, !dbg !12495
  br i1 %144, label %149, label %145, !dbg !12494

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12496
  %147 = sub i32 %146, %140, !dbg !12499
  %148 = icmp ugt i32 %147, 2, !dbg !12500
  br i1 %148, label %317, label %141, !dbg !12501, !llvm.loop !12502

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12504
  %151 = and i32 %150, 4, !dbg !12505
  %152 = icmp eq i32 %151, 0, !dbg !12506
  br i1 %152, label %221, label %153, !dbg !12507

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12333, metadata !DIExpression()), !dbg !12508
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12509
  %155 = and i32 %154, 268435456, !dbg !12509
  %156 = icmp eq i32 %155, 0, !dbg !12509
  br i1 %156, label %157, label %164, !dbg !12510

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12511
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12511
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12337, metadata !DIExpression()), !dbg !12511
  store volatile i32 0, i32* %2, align 4, !dbg !12511
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12511
  %160 = or i32 %159, 268435456, !dbg !12511
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12511
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12511
  %162 = and i32 %161, 268435456, !dbg !12511
  store volatile i32 %162, i32* %2, align 4, !dbg !12511
  %163 = load volatile i32, i32* %2, align 4, !dbg !12511
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12512
  call void @llvm.dbg.value(metadata i32 1, metadata !12333, metadata !DIExpression()), !dbg !12508
  br label %164, !dbg !12513

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12333, metadata !DIExpression()), !dbg !12508
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12514
  %166 = and i32 %165, 256, !dbg !12514
  %167 = icmp eq i32 %166, 0, !dbg !12514
  br i1 %167, label %168, label %180, !dbg !12516

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12517
  %170 = or i32 %169, 256, !dbg !12517
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12517
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12519
  call void @llvm.dbg.value(metadata i32 %171, metadata !12331, metadata !DIExpression()), !dbg !12341
  br label %172, !dbg !12520

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12521
  %174 = and i32 %173, 256, !dbg !12521
  %175 = icmp eq i32 %174, 0, !dbg !12521
  br i1 %175, label %176, label %180, !dbg !12520

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12522
  %178 = sub i32 %177, %171, !dbg !12525
  %179 = icmp ugt i32 %178, 2, !dbg !12526
  br i1 %179, label %317, label %172, !dbg !12527, !llvm.loop !12528

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12530
  %182 = load i32, i32* %181, align 4, !dbg !12530
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12533

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12534
  %185 = or i32 %184, 1, !dbg !12534
  br label %196, !dbg !12534

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12536
  %188 = or i32 %187, 4, !dbg !12536
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12536
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12536
  %190 = or i32 %189, 1, !dbg !12536
  br label %196, !dbg !12536

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12539
  %193 = and i32 %192, -2, !dbg !12539
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12539
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12539
  %195 = and i32 %194, -5, !dbg !12539
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12541
  %198 = load i32, i32* %181, align 4, !dbg !12542
  %199 = icmp eq i32 %198, 0, !dbg !12544
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12545
  call void @llvm.dbg.value(metadata i32 %200, metadata !12331, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i32 %200, metadata !12331, metadata !DIExpression()), !dbg !12341
  br i1 %199, label %209, label %201, !dbg !12546

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12547
  %203 = and i32 %202, 2, !dbg !12549
  %204 = icmp eq i32 %203, 0, !dbg !12549
  br i1 %204, label %205, label %217, !dbg !12550

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12551
  %207 = sub i32 %206, %200, !dbg !12554
  %208 = icmp ugt i32 %207, 5000, !dbg !12555
  br i1 %208, label %317, label %201, !dbg !12556, !llvm.loop !12557

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12559
  %211 = and i32 %210, 2, !dbg !12559
  %212 = icmp eq i32 %211, 0, !dbg !12559
  br i1 %212, label %217, label %213, !dbg !12561

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12562
  %215 = sub i32 %214, %200, !dbg !12565
  %216 = icmp ugt i32 %215, 5000, !dbg !12566
  br i1 %216, label %317, label %209, !dbg !12567, !llvm.loop !12568

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12570

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12571
  %220 = and i32 %219, -268435457, !dbg !12571
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12571
  br label %221, !dbg !12574

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12575
  %223 = load i32, i32* %222, align 4, !dbg !12575
  %224 = icmp eq i32 %223, 0, !dbg !12577
  br i1 %224, label %316, label %225, !dbg !12578

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12579
  %227 = and i32 %226, 12, !dbg !12579
  %228 = icmp eq i32 %227, 8, !dbg !12582
  br i1 %228, label %277, label %229, !dbg !12583

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12584
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12587
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12587
  call void @llvm.dbg.value(metadata i32 %231, metadata !12331, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i32 %231, metadata !12331, metadata !DIExpression()), !dbg !12341
  br i1 %230, label %232, label %269, !dbg !12588

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12589
  %234 = and i32 %233, 33554432, !dbg !12589
  %235 = icmp eq i32 %234, 0, !dbg !12589
  br i1 %235, label %240, label %236, !dbg !12591

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12592
  %238 = sub i32 %237, %231, !dbg !12595
  %239 = icmp ugt i32 %238, 2, !dbg !12596
  br i1 %239, label %317, label %232, !dbg !12597, !llvm.loop !12598

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12600
  %242 = load i32, i32* %241, align 4, !dbg !12600
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12600
  %244 = load i32, i32* %243, align 4, !dbg !12600
  %245 = or i32 %244, %242, !dbg !12600
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12600
  %247 = load i32, i32* %246, align 4, !dbg !12600
  %248 = shl i32 %247, 6, !dbg !12600
  %249 = or i32 %245, %248, !dbg !12600
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12600
  %251 = load i32, i32* %250, align 4, !dbg !12600
  %252 = shl i32 %251, 15, !dbg !12600
  %253 = add i32 %252, -65536, !dbg !12600
  %254 = and i32 %253, -65536, !dbg !12600
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12600
  %256 = load i32, i32* %255, align 4, !dbg !12600
  %257 = shl i32 %256, 24, !dbg !12600
  %258 = or i32 %249, %257, !dbg !12600
  %259 = or i32 %258, %254, !dbg !12600
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12600
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12601
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %260, metadata !12331, metadata !DIExpression()), !dbg !12341
  br label %261, !dbg !12603

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12604
  %263 = and i32 %262, 33554432, !dbg !12605
  %264 = icmp eq i32 %263, 0, !dbg !12605
  br i1 %264, label %265, label %316, !dbg !12603

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12606
  %267 = sub i32 %266, %260, !dbg !12609
  %268 = icmp ugt i32 %267, 2, !dbg !12610
  br i1 %268, label %317, label %261, !dbg !12611, !llvm.loop !12612

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12614
  %271 = and i32 %270, 33554432, !dbg !12614
  %272 = icmp eq i32 %271, 0, !dbg !12614
  br i1 %272, label %316, label %273, !dbg !12616

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12617
  %275 = sub i32 %274, %231, !dbg !12620
  %276 = icmp ugt i32 %275, 2, !dbg !12621
  br i1 %276, label %317, label %269, !dbg !12622, !llvm.loop !12623

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12625
  br i1 %278, label %317, label %279, !dbg !12628

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12629
  call void @llvm.dbg.value(metadata i32 %280, metadata !12332, metadata !DIExpression()), !dbg !12341
  %281 = and i32 %280, 4194304, !dbg !12631
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12633
  %283 = load i32, i32* %282, align 4, !dbg !12633
  %284 = icmp eq i32 %281, %283, !dbg !12634
  br i1 %284, label %285, label %317, !dbg !12635

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12636
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12637
  %288 = load i32, i32* %287, align 4, !dbg !12637
  %289 = icmp eq i32 %286, %288, !dbg !12638
  br i1 %289, label %290, label %317, !dbg !12639

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12640
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12641
  %293 = load i32, i32* %292, align 4, !dbg !12641
  %294 = shl i32 %293, 6, !dbg !12642
  %295 = icmp eq i32 %291, %294, !dbg !12643
  br i1 %295, label %296, label %317, !dbg !12644

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12645
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12646
  %299 = load i32, i32* %298, align 4, !dbg !12646
  %300 = shl i32 %299, 15, !dbg !12647
  %301 = add i32 %300, -65536, !dbg !12647
  %302 = and i32 %301, -65536, !dbg !12647
  %303 = icmp eq i32 %297, %302, !dbg !12648
  br i1 %303, label %304, label %317, !dbg !12649

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12650
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12651
  %307 = load i32, i32* %306, align 4, !dbg !12651
  %308 = shl i32 %307, 24, !dbg !12652
  %309 = icmp eq i32 %305, %308, !dbg !12653
  br i1 %309, label %310, label %317, !dbg !12654

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !12655
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12656
  %313 = load i32, i32* %312, align 4, !dbg !12656
  %314 = shl i32 %313, 28, !dbg !12657
  %315 = icmp eq i32 %311, %314, !dbg !12658
  br i1 %315, label %316, label %317, !dbg !12659

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !12660

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12341
  ret i32 %318, !dbg !12661
}

; Function Attrs: optsize
declare !dbg !12662 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.rtio_spsc* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12664 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12677, metadata !DIExpression()), !dbg !12680
  call void @llvm.dbg.value(metadata i32 %1, metadata !12678, metadata !DIExpression()), !dbg !12680
  %3 = icmp eq %struct.rtio_spsc* %0, null, !dbg !12681
  br i1 %3, label %115, label %4, !dbg !12683

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12684
  %6 = and i32 %5, 7, !dbg !12684
  %7 = icmp ult i32 %6, %1, !dbg !12686
  br i1 %7, label %8, label %13, !dbg !12687

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12688
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12688
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12690
  %11 = and i32 %10, 7, !dbg !12690
  %12 = icmp eq i32 %11, %1, !dbg !12692
  br i1 %12, label %13, label %115, !dbg !12693

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12694
  %15 = load i32, i32* %14, align 4, !dbg !12694
  %16 = and i32 %15, 2, !dbg !12696
  %17 = icmp eq i32 %16, 0, !dbg !12697
  br i1 %17, label %39, label %18, !dbg !12698

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12699
  %20 = icmp eq i32 %19, 0, !dbg !12702
  br i1 %20, label %25, label %21, !dbg !12703

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12704
  %23 = or i32 %22, 7168, !dbg !12704
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12704
  %24 = load i32, i32* %14, align 4, !dbg !12706
  br label %25, !dbg !12708

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12706
  %27 = and i32 %26, 8, !dbg !12709
  %28 = icmp eq i32 %27, 0, !dbg !12710
  br i1 %28, label %32, label %29, !dbg !12711

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12712
  %31 = or i32 %30, 57344, !dbg !12712
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12712
  br label %32, !dbg !12714

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12715
  %34 = and i32 %33, -241, !dbg !12715
  %35 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12715
  %36 = load i32, i32* %35, align 4, !dbg !12715
  %37 = or i32 %34, %36, !dbg !12715
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12715
  %38 = load i32, i32* %14, align 4, !dbg !12716
  br label %39, !dbg !12718

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12716
  %41 = and i32 %40, 1, !dbg !12719
  %42 = icmp eq i32 %41, 0, !dbg !12720
  br i1 %42, label %73, label %43, !dbg !12721

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12722
  %45 = load i32, i32* %44, align 4, !dbg !12722
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12725

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12726
  %48 = and i32 %47, 131072, !dbg !12729
  %49 = icmp eq i32 %48, 0, !dbg !12729
  br i1 %49, label %115, label %58, !dbg !12730

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12731
  %52 = and i32 %51, 33554432, !dbg !12735
  %53 = icmp eq i32 %52, 0, !dbg !12735
  br i1 %53, label %115, label %58, !dbg !12736

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12737
  %56 = and i32 %55, 2, !dbg !12740
  %57 = icmp eq i32 %56, 0, !dbg !12740
  br i1 %57, label %115, label %58, !dbg !12741

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12742
  %60 = and i32 %59, -4, !dbg !12742
  %61 = or i32 %60, %45, !dbg !12742
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12742
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12743
  call void @llvm.dbg.value(metadata i32 %62, metadata !12679, metadata !DIExpression()), !dbg !12680
  br label %63, !dbg !12744

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12745
  %65 = and i32 %64, 12, !dbg !12745
  %66 = load i32, i32* %44, align 4, !dbg !12746
  %67 = shl i32 %66, 2, !dbg !12747
  %68 = icmp eq i32 %65, %67, !dbg !12748
  br i1 %68, label %73, label %69, !dbg !12744

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12749
  %71 = sub i32 %70, %62, !dbg !12752
  %72 = icmp ugt i32 %71, 5000, !dbg !12753
  br i1 %72, label %115, label %63, !dbg !12754, !llvm.loop !12755

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12757
  %75 = and i32 %74, 7, !dbg !12757
  %76 = icmp ugt i32 %75, %1, !dbg !12759
  br i1 %76, label %77, label %82, !dbg !12760

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12761
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12761
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12763
  %80 = and i32 %79, 7, !dbg !12763
  %81 = icmp eq i32 %80, %1, !dbg !12765
  br i1 %81, label %82, label %115, !dbg !12766

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12767
  %84 = and i32 %83, 4, !dbg !12769
  %85 = icmp eq i32 %84, 0, !dbg !12770
  br i1 %85, label %93, label %86, !dbg !12771

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12772
  %88 = and i32 %87, -7169, !dbg !12772
  %89 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !12772
  %90 = load i32, i32* %89, align 4, !dbg !12772
  %91 = or i32 %88, %90, !dbg !12772
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12772
  %92 = load i32, i32* %14, align 4, !dbg !12774
  br label %93, !dbg !12776

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12774
  %95 = and i32 %94, 8, !dbg !12777
  %96 = icmp eq i32 %95, 0, !dbg !12778
  br i1 %96, label %104, label %97, !dbg !12779

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12780
  %99 = and i32 %98, -57345, !dbg !12780
  %100 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !12780
  %101 = load i32, i32* %100, align 4, !dbg !12780
  %102 = shl i32 %101, 3, !dbg !12780
  %103 = or i32 %102, %99, !dbg !12780
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12780
  br label %104, !dbg !12782

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12783
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12784
  %107 = lshr i32 %106, 4, !dbg !12785
  %108 = and i32 %107, 15, !dbg !12785
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12786
  %110 = load i8, i8* %109, align 1, !dbg !12786
  %111 = zext i8 %110 to i32, !dbg !12786
  %112 = lshr i32 %105, %111, !dbg !12787
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12788
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12789
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12790
  br label %115, !dbg !12791

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12680
  ret i32 %116, !dbg !12792
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12793 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12795, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i32 0, metadata !12796, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i32 0, metadata !12797, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i32 0, metadata !12798, metadata !DIExpression()), !dbg !12799
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12800
  %2 = and i32 %1, 12, !dbg !12801
  %3 = icmp eq i32 %2, 8, !dbg !12802
  br i1 %3, label %4, label %21, !dbg !12802

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12803
  %6 = and i32 %5, 63, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %6, metadata !12795, metadata !DIExpression()), !dbg !12799
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12807
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12809
  %9 = lshr i32 %8, 6, !dbg !12809
  %10 = and i32 %9, 511, !dbg !12809
  %11 = zext i32 %10 to i64, !dbg !12809
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12809
  %13 = zext i32 %6 to i64, !dbg !12809
  %14 = udiv i64 %12, %13, !dbg !12809
  %15 = trunc i64 %14 to i32, !dbg !12809
  call void @llvm.dbg.value(metadata i32 %15, metadata !12796, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i32 %15, metadata !12796, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata i32 %15, metadata !12796, metadata !DIExpression()), !dbg !12799
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12810
  %17 = lshr i32 %16, 15, !dbg !12811
  %18 = and i32 %17, 6, !dbg !12811
  %19 = add nuw nsw i32 %18, 2, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %19, metadata !12797, metadata !DIExpression()), !dbg !12799
  %20 = udiv i32 %15, %19, !dbg !12812
  call void @llvm.dbg.value(metadata i32 %20, metadata !12798, metadata !DIExpression()), !dbg !12799
  br label %21, !dbg !12813

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12814
  call void @llvm.dbg.value(metadata i32 %22, metadata !12798, metadata !DIExpression()), !dbg !12799
  ret i32 %22, !dbg !12815
}

; Function Attrs: optsize
declare !dbg !12816 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12819 {
  %4 = alloca %struct.rtio_spsc, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12823, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i32 %1, metadata !12824, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i32 %2, metadata !12825, metadata !DIExpression()), !dbg !12840
  %6 = bitcast %struct.rtio_spsc* %4 to i8*, !dbg !12841
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12841
  call void @llvm.dbg.declare(metadata %struct.rtio_spsc* %4, metadata !12826, metadata !DIExpression()), !dbg !12842
  %7 = icmp eq i32 %0, 0, !dbg !12843
  br i1 %7, label %8, label %24, !dbg !12844

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !12845
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !12845
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12836, metadata !DIExpression()), !dbg !12845
  store volatile i32 0, i32* %5, align 4, !dbg !12845
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12845
  %11 = or i32 %10, 1, !dbg !12845
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12845
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12845
  %13 = and i32 %12, 1, !dbg !12845
  store volatile i32 %13, i32* %5, align 4, !dbg !12845
  %14 = load volatile i32, i32* %5, align 4, !dbg !12845
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !12846
  %15 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12847
  store i32 256, i32* %15, align 4, !dbg !12848
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12849
  store i32 2, i32* %16, align 4, !dbg !12850
  %17 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12851
  store i32 3, i32* %17, align 4, !dbg !12852
  %18 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12853
  store i32 0, i32* %18, align 4, !dbg !12854
  %19 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12855
  store i32 0, i32* %19, align 4, !dbg !12856
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12857
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12858
  %21 = and i32 %20, -123731969, !dbg !12858
  %22 = or i32 %2, %1, !dbg !12858
  %23 = or i32 %22, %21, !dbg !12858
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12858
  br label %24, !dbg !12859

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12860
  ret void, !dbg !12860
}

; Function Attrs: optsize
declare !dbg !12861 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.rtio_spsc* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12865 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12866
  ret void, !dbg !12867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12868 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12869
  ret void, !dbg !12870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !12871 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12872
  ret i32 %1, !dbg !12873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !12874 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12875
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12876
  %3 = lshr i32 %2, 10, !dbg !12877
  %4 = and i32 %3, 7, !dbg !12877
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12878
  %6 = load i8, i8* %5, align 1, !dbg !12878
  %7 = zext i8 %6 to i32, !dbg !12878
  %8 = lshr i32 %1, %7, !dbg !12879
  ret i32 %8, !dbg !12880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !12881 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12882
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12883
  %3 = lshr i32 %2, 13, !dbg !12884
  %4 = and i32 %3, 7, !dbg !12884
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12885
  %6 = load i8, i8* %5, align 1, !dbg !12885
  %7 = zext i8 %6 to i32, !dbg !12885
  %8 = lshr i32 %1, %7, !dbg !12886
  ret i32 %8, !dbg !12887
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12888 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12892, metadata !DIExpression()), !dbg !12893
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12894
  store i32 15, i32* %2, align 4, !dbg !12895
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12896
  %4 = and i32 %3, 262144, !dbg !12898
  %5 = icmp eq i32 %4, 0, !dbg !12899
  br i1 %5, label %8, label %6, !dbg !12900

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12901
  store i32 327680, i32* %7, align 4, !dbg !12903
  br label %15, !dbg !12904

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12905
  %10 = and i32 %9, 65536, !dbg !12907
  %11 = icmp eq i32 %10, 0, !dbg !12908
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12909
  br i1 %11, label %14, label %13, !dbg !12910

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12911
  br label %15, !dbg !12913

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12914
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12916
  %17 = and i32 %16, 1, !dbg !12918
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12919
  store i32 %17, i32* %18, align 4, !dbg !12921
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12922
  %20 = lshr i32 %19, 3, !dbg !12923
  %21 = and i32 %20, 31, !dbg !12923
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12924
  store i32 %21, i32* %22, align 4, !dbg !12925
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12926
  %24 = and i32 %23, 4, !dbg !12928
  %25 = icmp eq i32 %24, 0, !dbg !12929
  br i1 %25, label %28, label %26, !dbg !12930

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12931
  store i32 5, i32* %27, align 4, !dbg !12933
  br label %35, !dbg !12934

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12935
  %30 = and i32 %29, 1, !dbg !12937
  %31 = icmp eq i32 %30, 0, !dbg !12938
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12939
  br i1 %31, label %34, label %33, !dbg !12940

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12941
  br label %35, !dbg !12943

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12944
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12946
  %37 = and i32 %36, 1, !dbg !12948
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12949
  store i32 %37, i32* %38, align 4, !dbg !12951
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12952
  %40 = and i32 %39, 16777216, !dbg !12954
  %41 = icmp eq i32 %40, 0, !dbg !12955
  %42 = select i1 %41, i32 1, i32 2, !dbg !12956
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12957
  store i32 %42, i32* %43, align 4, !dbg !12959
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12960
  %45 = and i32 %44, 4194304, !dbg !12961
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12962
  store i32 %45, i32* %46, align 4, !dbg !12963
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12964
  %48 = and i32 %47, 63, !dbg !12965
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12966
  store i32 %48, i32* %49, align 4, !dbg !12967
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12968
  %51 = lshr i32 %50, 6, !dbg !12969
  %52 = and i32 %51, 511, !dbg !12969
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12970
  store i32 %52, i32* %53, align 4, !dbg !12971
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12972
  %55 = shl i32 %54, 1, !dbg !12973
  %56 = and i32 %55, 393216, !dbg !12973
  %57 = add nuw nsw i32 %56, 131072, !dbg !12973
  %58 = lshr exact i32 %57, 16, !dbg !12974
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12975
  store i32 %58, i32* %59, align 4, !dbg !12976
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12977
  %61 = lshr i32 %60, 24, !dbg !12978
  %62 = and i32 %61, 15, !dbg !12978
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12979
  store i32 %62, i32* %63, align 4, !dbg !12980
  ret void, !dbg !12981
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.rtio_spsc* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !12982 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12986, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i32* %1, metadata !12987, metadata !DIExpression()), !dbg !12988
  %3 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12989
  store i32 15, i32* %3, align 4, !dbg !12990
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12991
  %5 = and i32 %4, 3, !dbg !12992
  %6 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12993
  store i32 %5, i32* %6, align 4, !dbg !12994
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12995
  %8 = and i32 %7, 240, !dbg !12996
  %9 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12997
  store i32 %8, i32* %9, align 4, !dbg !12998
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12999
  %11 = and i32 %10, 7168, !dbg !13000
  %12 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !13001
  store i32 %11, i32* %12, align 4, !dbg !13002
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13003
  %14 = lshr i32 %13, 3, !dbg !13004
  %15 = and i32 %14, 7168, !dbg !13004
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !13005
  store i32 %15, i32* %16, align 4, !dbg !13006
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13007
  %18 = and i32 %17, 7, !dbg !13008
  store i32 %18, i32* %1, align 4, !dbg !13009
  ret void, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13011 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13012
  %2 = and i32 %1, 128, !dbg !13012
  %3 = icmp eq i32 %2, 0, !dbg !13012
  br i1 %3, label %5, label %4, !dbg !13014

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !13015
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13017
  br label %5, !dbg !13018

5:                                                ; preds = %4, %0
  ret void, !dbg !13019
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13020 {
  ret void, !dbg !13021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13025, metadata !DIExpression()), !dbg !13026
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13027
  ret void, !dbg !13028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13032, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 1000, metadata !13033, metadata !DIExpression()), !dbg !13034
  %2 = udiv i32 %0, 1000, !dbg !13035
  %3 = add nsw i32 %2, -1, !dbg !13036
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13037
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13038
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !13041 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13043, metadata !DIExpression()), !dbg !13045
  %3 = bitcast i32* %2 to i8*, !dbg !13046
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13046
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13044, metadata !DIExpression()), !dbg !13047
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13048
  store volatile i32 %4, i32* %2, align 4, !dbg !13047
  %5 = load volatile i32, i32* %2, align 4, !dbg !13049
  %6 = icmp eq i32 %0, -1, !dbg !13050
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13043, metadata !DIExpression()), !dbg !13045
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %8, metadata !13043, metadata !DIExpression()), !dbg !13045
  br label %9, !dbg !13052

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13043, metadata !DIExpression()), !dbg !13045
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13043, metadata !DIExpression()), !dbg !13045
  %12 = shl i32 %11, 15, !dbg !13045
  %13 = ashr i32 %12, 31, !dbg !13045
  %14 = add i32 %13, %10, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %14, metadata !13043, metadata !DIExpression()), !dbg !13045
  %15 = icmp eq i32 %14, 0, !dbg !13052
  br i1 %15, label %16, label %9, !dbg !13052

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13056
  ret void, !dbg !13056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !13057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13059, metadata !DIExpression()), !dbg !13060
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !13063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13068, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 0, metadata !13071, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 0, metadata !13072, metadata !DIExpression()), !dbg !13073
  %2 = icmp eq i32 %0, 0, !dbg !13074
  br i1 %2, label %50, label %3, !dbg !13076

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13077
  %5 = icmp eq i32 %4, 49152, !dbg !13080
  br i1 %5, label %6, label %15, !dbg !13081

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13071, metadata !DIExpression()), !dbg !13073
  %7 = add i32 %0, -64000001, !dbg !13082
  %8 = icmp ult i32 %7, 26000000, !dbg !13082
  br i1 %8, label %15, label %9, !dbg !13082

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !13085
  %11 = select i1 %10, i32 0, i32 3, !dbg !13087
  call void @llvm.dbg.value(metadata i32 %11, metadata !13071, metadata !DIExpression()), !dbg !13073
  %12 = add i32 %0, -30000001, !dbg !13088
  %13 = icmp ult i32 %12, 60000000, !dbg !13088
  %14 = select i1 %13, i32 1, i32 %11, !dbg !13088
  call void @llvm.dbg.value(metadata i32 %14, metadata !13071, metadata !DIExpression()), !dbg !13073
  br label %15, !dbg !13088

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !13073
  call void @llvm.dbg.value(metadata i32 %16, metadata !13071, metadata !DIExpression()), !dbg !13073
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13091
  %18 = icmp eq i32 %17, 32768, !dbg !13093
  br i1 %18, label %19, label %27, !dbg !13094

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !13095
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !13098
  br i1 %22, label %27, label %23, !dbg !13098

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !13099
  %25 = and i1 %24, %21, !dbg !13102
  %26 = select i1 %25, i32 1, i32 %16, !dbg !13102
  call void @llvm.dbg.value(metadata i32 %26, metadata !13071, metadata !DIExpression()), !dbg !13073
  br label %27, !dbg !13102

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !13103
  call void @llvm.dbg.value(metadata i32 %28, metadata !13071, metadata !DIExpression()), !dbg !13073
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13104
  %30 = icmp eq i32 %29, 16384, !dbg !13106
  br i1 %30, label %31, label %39, !dbg !13107

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !13108
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !13111
  br i1 %34, label %39, label %35, !dbg !13111

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !13112
  %37 = select i1 %36, i1 %33, i1 false, !dbg !13115
  %38 = select i1 %37, i32 1, i32 %28, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %38, metadata !13071, metadata !DIExpression()), !dbg !13073
  br label %39, !dbg !13115

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !13103
  call void @llvm.dbg.value(metadata i32 %40, metadata !13071, metadata !DIExpression()), !dbg !13073
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !13116
  call void @llvm.dbg.value(metadata i32 2, metadata !13069, metadata !DIExpression()), !dbg !13073
  br label %41, !dbg !13117

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !13103
  call void @llvm.dbg.value(metadata i32 %42, metadata !13069, metadata !DIExpression()), !dbg !13073
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13118
  call void @llvm.dbg.value(metadata i32 %43, metadata !13070, metadata !DIExpression()), !dbg !13073
  %44 = add nsw i32 %42, -1, !dbg !13120
  call void @llvm.dbg.value(metadata i32 %44, metadata !13069, metadata !DIExpression()), !dbg !13073
  %45 = icmp ne i32 %43, %40, !dbg !13121
  %46 = icmp ne i32 %44, 0, !dbg !13122
  %47 = select i1 %45, i1 %46, i1 false, !dbg !13122
  br i1 %47, label %41, label %48, !dbg !13123, !llvm.loop !13124

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !13126
  call void @llvm.dbg.value(metadata i32 %51, metadata !13072, metadata !DIExpression()), !dbg !13073
  ret i32 %51, !dbg !13127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !13128 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13130
  %2 = and i32 %1, 49152, !dbg !13130
  ret i32 %2, !dbg !13131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !13132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13134, metadata !DIExpression()), !dbg !13135
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13136
  %3 = and i32 %2, -8, !dbg !13136
  %4 = or i32 %3, %0, !dbg !13136
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13136
  ret void, !dbg !13137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !13138 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13139
  %2 = and i32 %1, 7, !dbg !13139
  ret i32 %2, !dbg !13140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !13141 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13159, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13160, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.value(metadata i32 0, metadata !13161, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.value(metadata i32 0, metadata !13162, metadata !DIExpression()), !dbg !13163
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13164
  %4 = icmp eq i32 %3, 0, !dbg !13166
  br i1 %4, label %5, label %21, !dbg !13167

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !13168
  call void @llvm.dbg.value(metadata i32 %6, metadata !13162, metadata !DIExpression()), !dbg !13163
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.161() #24, !dbg !13170
  %8 = icmp eq i32 %7, 1, !dbg !13172
  br i1 %8, label %13, label %9, !dbg !13173

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.162() #24, !dbg !13174
  br label %10, !dbg !13176

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.161() #24, !dbg !13177
  %12 = icmp eq i32 %11, 1, !dbg !13178
  br i1 %12, label %13, label %10, !dbg !13176, !llvm.loop !13179

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13181
  %15 = load i32, i32* %14, align 4, !dbg !13181
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13182
  %17 = load i32, i32* %16, align 4, !dbg !13182
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13183
  %19 = load i32, i32* %18, align 4, !dbg !13183
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.163(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !13184
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !13185
  call void @llvm.dbg.value(metadata i32 %20, metadata !13161, metadata !DIExpression()), !dbg !13163
  br label %21, !dbg !13186

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13187
  call void @llvm.dbg.value(metadata i32 %22, metadata !13161, metadata !DIExpression()), !dbg !13163
  ret i32 %22, !dbg !13188
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !13189 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.165() #24, !dbg !13195
  %2 = icmp ne i32 %1, 0, !dbg !13197
  call void @llvm.dbg.value(metadata i1 %2, metadata !13193, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13194
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !13198
  %4 = icmp ne i32 %3, 0, !dbg !13200
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13201
  %6 = zext i1 %5 to i32, !dbg !13201
  call void @llvm.dbg.value(metadata i32 %6, metadata !13193, metadata !DIExpression()), !dbg !13194
  ret i32 %6, !dbg !13202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !13203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13207, metadata !DIExpression()), !dbg !13210
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13208, metadata !DIExpression()), !dbg !13210
  call void @llvm.dbg.value(metadata i32 0, metadata !13209, metadata !DIExpression()), !dbg !13210
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13211
  %4 = load i32, i32* %3, align 4, !dbg !13211
  %5 = and i32 %4, 63, !dbg !13212
  %6 = udiv i32 %0, %5, !dbg !13213
  call void @llvm.dbg.value(metadata i32 %6, metadata !13209, metadata !DIExpression()), !dbg !13210
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13214
  %8 = load i32, i32* %7, align 4, !dbg !13214
  %9 = and i32 %8, 511, !dbg !13215
  %10 = mul i32 %9, %6, !dbg !13216
  call void @llvm.dbg.value(metadata i32 %10, metadata !13209, metadata !DIExpression()), !dbg !13210
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13217
  %12 = load i32, i32* %11, align 4, !dbg !13217
  %13 = lshr i32 %12, 15, !dbg !13218
  %14 = and i32 %13, 131070, !dbg !13218
  %15 = add nuw nsw i32 %14, 2, !dbg !13218
  %16 = udiv i32 %10, %15, !dbg !13219
  call void @llvm.dbg.value(metadata i32 %16, metadata !13209, metadata !DIExpression()), !dbg !13210
  ret i32 %16, !dbg !13220
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.161() unnamed_addr #5 !dbg !13221 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13222
  %2 = lshr i32 %1, 1, !dbg !13223
  %3 = and i32 %2, 1, !dbg !13223
  ret i32 %3, !dbg !13224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.162() unnamed_addr #15 !dbg !13225 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13226
  %2 = or i32 %1, 1, !dbg !13226
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13226
  ret void, !dbg !13227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.163(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13230, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 %1, metadata !13231, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 %2, metadata !13232, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 %3, metadata !13233, metadata !DIExpression()), !dbg !13234
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13235
  %6 = and i32 %5, -4227072, !dbg !13235
  %7 = or i32 %1, %0, !dbg !13235
  %8 = shl i32 %2, 6, !dbg !13235
  %9 = or i32 %7, %8, !dbg !13235
  %10 = or i32 %9, %6, !dbg !13235
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13235
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13236
  %12 = and i32 %11, -196609, !dbg !13236
  %13 = or i32 %12, %3, !dbg !13236
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13236
  ret void, !dbg !13237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13242, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13243, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.value(metadata i32 0, metadata !13244, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.value(metadata i32 0, metadata !13245, metadata !DIExpression()), !dbg !13246
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13247
  %4 = load i32, i32* %3, align 4, !dbg !13247
  %5 = lshr i32 %4, 4, !dbg !13247
  %6 = and i32 %5, 15, !dbg !13247
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13247
  %8 = load i8, i8* %7, align 1, !dbg !13247
  %9 = zext i8 %8 to i32, !dbg !13247
  %10 = lshr i32 %0, %9, !dbg !13247
  call void @llvm.dbg.value(metadata i32 %10, metadata !13245, metadata !DIExpression()), !dbg !13246
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13248
  %12 = icmp ult i32 %11, %10, !dbg !13250
  br i1 %12, label %13, label %16, !dbg !13251

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13252
  call void @llvm.dbg.value(metadata i32 %14, metadata !13244, metadata !DIExpression()), !dbg !13246
  %15 = icmp eq i32 %14, 0, !dbg !13254
  br i1 %15, label %16, label %30, !dbg !13256

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.164() #24, !dbg !13257
  br label %17, !dbg !13259

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.165() #24, !dbg !13260
  %19 = icmp eq i32 %18, 1, !dbg !13261
  br i1 %19, label %20, label %17, !dbg !13259, !llvm.loop !13262

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13264
  tail call fastcc void @LL_RCC_SetAHBPrescaler.166(i32 noundef %21) #24, !dbg !13265
  tail call fastcc void @LL_RCC_SetSysClkSource.167() #24, !dbg !13266
  br label %22, !dbg !13267

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.168() #24, !dbg !13268
  %24 = icmp eq i32 %23, 8, !dbg !13269
  br i1 %24, label %25, label %22, !dbg !13267, !llvm.loop !13270

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13272
  %27 = load i32, i32* %26, align 4, !dbg !13272
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.169(i32 noundef %27) #24, !dbg !13273
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13274
  %29 = load i32, i32* %28, align 4, !dbg !13274
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.170(i32 noundef %29) #24, !dbg !13275
  br label %30, !dbg !13276

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13277
  %33 = icmp ugt i32 %32, %10, !dbg !13279
  br i1 %33, label %34, label %36, !dbg !13280

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13281
  call void @llvm.dbg.value(metadata i32 %35, metadata !13244, metadata !DIExpression()), !dbg !13246
  br label %36, !dbg !13283

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13246
  call void @llvm.dbg.value(metadata i32 %37, metadata !13244, metadata !DIExpression()), !dbg !13246
  %38 = icmp eq i32 %37, 0, !dbg !13284
  br i1 %38, label %39, label %40, !dbg !13286

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13287
  br label %40, !dbg !13289

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.164() unnamed_addr #15 !dbg !13291 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13292
  %2 = or i32 %1, 16777216, !dbg !13292
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13292
  ret void, !dbg !13293
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.165() unnamed_addr #5 !dbg !13294 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13295
  %2 = lshr i32 %1, 25, !dbg !13296
  %3 = and i32 %2, 1, !dbg !13296
  ret i32 %3, !dbg !13297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.166(i32 noundef %0) unnamed_addr #15 !dbg !13298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13300, metadata !DIExpression()), !dbg !13301
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13302
  %3 = and i32 %2, -241, !dbg !13302
  %4 = or i32 %3, %0, !dbg !13302
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13302
  ret void, !dbg !13303
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.167() unnamed_addr #15 !dbg !13304 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13306, metadata !DIExpression()), !dbg !13307
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13308
  %2 = and i32 %1, -4, !dbg !13308
  %3 = or i32 %2, 2, !dbg !13308
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13308
  ret void, !dbg !13309
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.168() unnamed_addr #5 !dbg !13310 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13311
  %2 = and i32 %1, 12, !dbg !13311
  ret i32 %2, !dbg !13312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.169(i32 noundef %0) unnamed_addr #15 !dbg !13313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13315, metadata !DIExpression()), !dbg !13316
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13317
  %3 = and i32 %2, -7169, !dbg !13317
  %4 = or i32 %3, %0, !dbg !13317
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13317
  ret void, !dbg !13318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.170(i32 noundef %0) unnamed_addr #15 !dbg !13319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13321, metadata !DIExpression()), !dbg !13322
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13323
  %3 = and i32 %2, -57345, !dbg !13323
  %4 = or i32 %3, %0, !dbg !13323
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13323
  ret void, !dbg !13324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !13325 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13326
  %2 = lshr i32 %1, 27, !dbg !13327
  %3 = and i32 %2, 1, !dbg !13327
  ret i32 %3, !dbg !13328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13333, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata i32 %1, metadata !13334, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13335, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13336, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata i32 0, metadata !13337, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata i32 0, metadata !13338, metadata !DIExpression()), !dbg !13339
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13340
  %6 = icmp eq i32 %5, 0, !dbg !13342
  br i1 %6, label %7, label %27, !dbg !13343

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !13344
  call void @llvm.dbg.value(metadata i32 %8, metadata !13338, metadata !DIExpression()), !dbg !13339
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.171() #24, !dbg !13346
  %10 = icmp eq i32 %9, 1, !dbg !13348
  br i1 %10, label %19, label %11, !dbg !13349

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13350
  br i1 %12, label %13, label %14, !dbg !13353

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13354
  br label %15, !dbg !13356

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.172() #24, !dbg !13357
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.173() #24, !dbg !13359
  br label %16, !dbg !13360

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.171() #24, !dbg !13361
  %18 = icmp eq i32 %17, 1, !dbg !13362
  br i1 %18, label %19, label %16, !dbg !13360, !llvm.loop !13363

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13365
  %21 = load i32, i32* %20, align 4, !dbg !13365
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13366
  %23 = load i32, i32* %22, align 4, !dbg !13366
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13367
  %25 = load i32, i32* %24, align 4, !dbg !13367
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.163(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !13368
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !13369
  call void @llvm.dbg.value(metadata i32 %26, metadata !13337, metadata !DIExpression()), !dbg !13339
  br label %27, !dbg !13370

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13371
  call void @llvm.dbg.value(metadata i32 %28, metadata !13337, metadata !DIExpression()), !dbg !13339
  ret i32 %28, !dbg !13372
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.171() unnamed_addr #5 !dbg !13373 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13374
  %2 = lshr i32 %1, 17, !dbg !13375
  %3 = and i32 %2, 1, !dbg !13375
  ret i32 %3, !dbg !13376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13377 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13378
  %2 = or i32 %1, 262144, !dbg !13378
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13378
  ret void, !dbg !13379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.172() unnamed_addr #15 !dbg !13380 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13381
  %2 = and i32 %1, -262145, !dbg !13381
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13381
  ret void, !dbg !13382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.173() unnamed_addr #15 !dbg !13383 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13384
  %2 = or i32 %1, 65536, !dbg !13384
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13384
  ret void, !dbg !13385
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13386 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13389, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.value(metadata i32 undef, metadata !13389, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.value(metadata i32 undef, metadata !13389, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13405
  ret void, !dbg !13406
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13407 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13411, metadata !DIExpression()), !dbg !13413
  %2 = icmp eq i8* %0, null, !dbg !13414
  br i1 %2, label %29, label %3, !dbg !13416

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13417
  %5 = icmp eq i8 %4, 0, !dbg !13418
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13419
  br i1 %6, label %29, label %8, !dbg !13419

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13412, metadata !DIExpression()), !dbg !13413
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13420

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13412, metadata !DIExpression()), !dbg !13413
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13422
  br i1 %10, label %11, label %15, !dbg !13427

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13428
  %13 = load i8*, i8** %12, align 4, !dbg !13428
  %14 = icmp eq i8* %13, %0, !dbg !13429
  br i1 %14, label %29, label %15, !dbg !13430

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13431
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13412, metadata !DIExpression()), !dbg !13413
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13432
  br i1 %17, label %7, label %8, !dbg !13433, !llvm.loop !13434

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13412, metadata !DIExpression()), !dbg !13413
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13436
  br i1 %20, label %21, label %26, !dbg !13440

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13441
  %23 = load i8*, i8** %22, align 4, !dbg !13441
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13442
  %25 = icmp eq i32 %24, 0, !dbg !13443
  br i1 %25, label %29, label %26, !dbg !13444

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13445
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13412, metadata !DIExpression()), !dbg !13413
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13446
  br i1 %28, label %29, label %18, !dbg !13420, !llvm.loop !13447

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13413
  ret %struct.device* %30, !dbg !13449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !13450 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13454, metadata !DIExpression()), !dbg !13455
  %2 = icmp eq %struct.device* %0, null, !dbg !13456
  br i1 %2, label %14, label %3, !dbg !13458

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13459
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13459
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13460
  %7 = load i8, i8* %6, align 1, !dbg !13460
  %8 = and i8 %7, 1, !dbg !13460
  %9 = icmp eq i8 %8, 0, !dbg !13460
  br i1 %9, label %14, label %10, !dbg !13461

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13462
  %12 = load i8, i8* %11, align 1, !dbg !13462
  %13 = icmp eq i8 %12, 0, !dbg !13463
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13455
  ret i1 %15, !dbg !13464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !13465 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13470, metadata !DIExpression()), !dbg !13471
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13472
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13473
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13474 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13482, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13483, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.value(metadata i8* %2, metadata !13484, metadata !DIExpression()), !dbg !13487
  %5 = bitcast i32* %4 to i8*, !dbg !13488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13488
  call void @llvm.dbg.value(metadata i32 0, metadata !13485, metadata !DIExpression()), !dbg !13487
  store i32 0, i32* %4, align 4, !dbg !13489
  call void @llvm.dbg.value(metadata i32* %4, metadata !13485, metadata !DIExpression(DW_OP_deref)), !dbg !13487
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13490
  call void @llvm.dbg.value(metadata i16* %6, metadata !13486, metadata !DIExpression()), !dbg !13487
  %7 = load i32, i32* %4, align 4, !dbg !13491
  call void @llvm.dbg.value(metadata i32 %7, metadata !13485, metadata !DIExpression()), !dbg !13487
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13493
  ret i32 %8, !dbg !13494
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13499, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i32* %1, metadata !13500, metadata !DIExpression()), !dbg !13505
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13506
  %4 = load i16*, i16** %3, align 4, !dbg !13506
  call void @llvm.dbg.value(metadata i16* %4, metadata !13501, metadata !DIExpression()), !dbg !13505
  %5 = icmp eq i16* %4, null, !dbg !13507
  br i1 %5, label %14, label %6, !dbg !13508

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13509
  call void @llvm.dbg.value(metadata i32 %7, metadata !13502, metadata !DIExpression()), !dbg !13509
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13510
  %9 = load i16, i16* %8, align 2, !dbg !13510
  %10 = add i16 %9, -32767, !dbg !13511
  %11 = icmp ult i16 %10, 2, !dbg !13511
  %12 = add i32 %7, 1, !dbg !13512
  call void @llvm.dbg.value(metadata i32 %12, metadata !13502, metadata !DIExpression()), !dbg !13509
  br i1 %11, label %13, label %6, !dbg !13511, !llvm.loop !13514

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13517
  br label %14, !dbg !13518

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13520 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13524, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i32 %1, metadata !13525, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13526, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i8* %3, metadata !13527, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i32 0, metadata !13528, metadata !DIExpression()), !dbg !13536
  %5 = icmp eq i32 %1, 0, !dbg !13537
  br i1 %5, label %16, label %8, !dbg !13538

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13528, metadata !DIExpression()), !dbg !13536
  %7 = icmp eq i32 %15, %1, !dbg !13537
  br i1 %7, label %16, label %8, !dbg !13538, !llvm.loop !13539

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13528, metadata !DIExpression()), !dbg !13536
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13541
  %11 = load i16, i16* %10, align 2, !dbg !13541
  call void @llvm.dbg.value(metadata i16 %11, metadata !13530, metadata !DIExpression()), !dbg !13542
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13543
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13533, metadata !DIExpression()), !dbg !13542
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13544
  call void @llvm.dbg.value(metadata i32 %13, metadata !13534, metadata !DIExpression()), !dbg !13542
  %14 = icmp slt i32 %13, 0, !dbg !13545
  %15 = add nuw i32 %9, 1, !dbg !13547
  call void @llvm.dbg.value(metadata i32 %15, metadata !13528, metadata !DIExpression()), !dbg !13536
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13549 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13553, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13554, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13555, metadata !DIExpression()), !dbg !13556
  %2 = sext i16 %0 to i32, !dbg !13557
  %3 = icmp slt i16 %0, 1, !dbg !13559
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13560
  %6 = add nsw i32 %2, -1, !dbg !13560
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13560
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13560
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13554, metadata !DIExpression()), !dbg !13556
  ret %struct.device* %8, !dbg !13561
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13562 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13564, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13565, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i8* %2, metadata !13566, metadata !DIExpression()), !dbg !13569
  %5 = bitcast i32* %4 to i8*, !dbg !13570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13570
  call void @llvm.dbg.value(metadata i32 0, metadata !13567, metadata !DIExpression()), !dbg !13569
  store i32 0, i32* %4, align 4, !dbg !13571
  call void @llvm.dbg.value(metadata i32* %4, metadata !13567, metadata !DIExpression(DW_OP_deref)), !dbg !13569
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13572
  call void @llvm.dbg.value(metadata i16* %6, metadata !13568, metadata !DIExpression()), !dbg !13569
  %7 = load i32, i32* %4, align 4, !dbg !13573
  call void @llvm.dbg.value(metadata i32 %7, metadata !13567, metadata !DIExpression()), !dbg !13569
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13574
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13575
  ret i32 %8, !dbg !13576
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13579, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i32* %1, metadata !13580, metadata !DIExpression()), !dbg !13584
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13585
  %4 = load i16*, i16** %3, align 4, !dbg !13585
  call void @llvm.dbg.value(metadata i16* %4, metadata !13581, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i32 0, metadata !13582, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i32 0, metadata !13583, metadata !DIExpression()), !dbg !13584
  %5 = icmp eq i16* %4, null, !dbg !13586
  br i1 %5, label %22, label %6, !dbg !13588

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13582, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i16* %8, metadata !13581, metadata !DIExpression()), !dbg !13584
  %9 = load i16, i16* %8, align 2, !dbg !13589
  %10 = icmp eq i16 %9, -32768, !dbg !13593
  call void @llvm.dbg.value(metadata i32 undef, metadata !13582, metadata !DIExpression()), !dbg !13584
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13594
  call void @llvm.dbg.value(metadata i16* %11, metadata !13581, metadata !DIExpression()), !dbg !13584
  %12 = zext i1 %10 to i32, !dbg !13595
  %13 = add i32 %7, %12, !dbg !13595
  call void @llvm.dbg.value(metadata i32 %13, metadata !13582, metadata !DIExpression()), !dbg !13584
  %14 = icmp eq i32 %13, 2, !dbg !13596
  br i1 %14, label %15, label %6, !dbg !13597

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13584
  call void @llvm.dbg.value(metadata i32 %16, metadata !13583, metadata !DIExpression()), !dbg !13584
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13598
  %18 = load i16, i16* %17, align 2, !dbg !13598
  %19 = icmp eq i16 %18, 32767, !dbg !13599
  %20 = add i32 %16, 1, !dbg !13600
  call void @llvm.dbg.value(metadata i32 %20, metadata !13583, metadata !DIExpression()), !dbg !13584
  br i1 %19, label %21, label %15, !dbg !13602, !llvm.loop !13603

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13605
  br label %22, !dbg !13606

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13607
  call void @llvm.dbg.value(metadata i16* %23, metadata !13581, metadata !DIExpression()), !dbg !13584
  ret i16* %23, !dbg !13608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !13609 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13612
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13613
  ret i32* %2, !dbg !13614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13615 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13763, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13764, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13765, metadata !DIExpression()), !dbg !13766
  ret void, !dbg !13767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13772, metadata !DIExpression()), !dbg !13774
  call void @llvm.dbg.value(metadata i32 %1, metadata !13773, metadata !DIExpression()), !dbg !13774
  ret void, !dbg !13775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13776 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13780, metadata !DIExpression()), !dbg !13782
  call void @llvm.dbg.value(metadata i32 %1, metadata !13781, metadata !DIExpression()), !dbg !13782
  ret void, !dbg !13783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13788, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i8* %1, metadata !13789, metadata !DIExpression()), !dbg !13790
  ret i32 -134, !dbg !13791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13796, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.value(metadata i8* %1, metadata !13797, metadata !DIExpression()), !dbg !13798
  ret i32 -134, !dbg !13799
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13803, metadata !DIExpression()), !dbg !13804
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13805, !srcloc !13811
  call void @llvm.dbg.value(metadata i32 undef, metadata !13808, metadata !DIExpression()) #23, !dbg !13812
  call void @llvm.dbg.value(metadata i32 undef, metadata !13809, metadata !DIExpression()) #23, !dbg !13812
  br label %3, !dbg !13813

3:                                                ; preds = %3, %1
  br label %3, !dbg !13814, !llvm.loop !13817
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13824, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13825, metadata !DIExpression()), !dbg !13826
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.178, i32 0, i32 0), i32 noundef 69) #25, !dbg !13827
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13832
  unreachable, !dbg !13832
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13835, metadata !DIExpression()), !dbg !13836
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13837
  unreachable, !dbg !13837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13840, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13841, metadata !DIExpression()), !dbg !13844
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13845, !srcloc !13811
  call void @llvm.dbg.value(metadata i32 undef, metadata !13808, metadata !DIExpression()) #23, !dbg !13847
  call void @llvm.dbg.value(metadata i32 undef, metadata !13809, metadata !DIExpression()) #23, !dbg !13847
  call void @llvm.dbg.value(metadata i32 undef, metadata !13842, metadata !DIExpression()), !dbg !13844
  %4 = tail call fastcc %struct.k_thread* @k_current_get.181() #26, !dbg !13848
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13843, metadata !DIExpression()), !dbg !13844
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13849
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.182, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !13849
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13854
  br i1 %6, label %15, label %7, !dbg !13856

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13857, metadata !DIExpression()), !dbg !13862
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13864
  %9 = load i32, i32* %8, align 4, !dbg !13864
  %10 = and i32 %9, 511, !dbg !13865
  %11 = icmp eq i32 %10, 0, !dbg !13866
  br i1 %11, label %13, label %12, !dbg !13867

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.183, i32 0, i32 0), i32 noundef 69) #25, !dbg !13868
  br label %13, !dbg !13874

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !13875
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.184, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !13875
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13880
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13857, metadata !DIExpression()), !dbg !13881
  br label %17, !dbg !13886

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !13875
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.184, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #25, !dbg !13875
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13880
  br label %17, !dbg !13887

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13845
  call void @llvm.dbg.value(metadata i32 %18, metadata !13808, metadata !DIExpression()) #23, !dbg !13847
  call void @llvm.dbg.value(metadata i32 %18, metadata !13842, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata i32 undef, metadata !13888, metadata !DIExpression()) #23, !dbg !13891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13893, !srcloc !13894
  tail call fastcc void @k_thread_abort.185(%struct.k_thread* noundef %4) #24, !dbg !13895
  ret void, !dbg !13898
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.181() unnamed_addr #12 !dbg !13899 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.193() #26, !dbg !13903
  ret %struct.k_thread* %1, !dbg !13904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13909, metadata !DIExpression()), !dbg !13910
  %2 = icmp ult i32 %0, 5, !dbg !13911
  br i1 %2, label %3, label %6, !dbg !13911

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13911
  %5 = load i8*, i8** %4, align 4, !dbg !13911
  br label %6, !dbg !13911

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.187, i32 0, i32 0), %1 ], !dbg !13912
  ret i8* %7, !dbg !13914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13919, metadata !DIExpression()), !dbg !13921
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13922
  br i1 %2, label %9, label %3, !dbg !13923

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13924
  call void @llvm.dbg.value(metadata i8* %4, metadata !13920, metadata !DIExpression()), !dbg !13921
  %5 = icmp eq i8* %4, null, !dbg !13925
  br i1 %5, label %9, label %6, !dbg !13927

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13928
  %8 = icmp eq i8 %7, 0, !dbg !13929
  br i1 %8, label %9, label %10, !dbg !13930

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.186, i32 0, i32 0), metadata !13920, metadata !DIExpression()), !dbg !13921
  br label %10, !dbg !13931

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.186, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13921
  call void @llvm.dbg.value(metadata i8* %11, metadata !13920, metadata !DIExpression()), !dbg !13921
  ret i8* %11, !dbg !13933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.185(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13934 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13938, metadata !DIExpression()), !dbg !13939
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13940, !srcloc !13942
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13943
  ret void, !dbg !13944
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.193() unnamed_addr #12 !dbg !13945 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13946, !srcloc !13948
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13949
  ret %struct.k_thread* %1, !dbg !13950
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13951 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13955, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i32 %1, metadata !13956, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i32 %2, metadata !13957, metadata !DIExpression()), !dbg !13958
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13959
  ret void, !dbg !13960
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13965, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata i8* %1, metadata !13966, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata i32 %2, metadata !13967, metadata !DIExpression()), !dbg !13968
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13969
  ret void, !dbg !13970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13971 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13972
  ret void, !dbg !13973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13976, metadata !DIExpression()), !dbg !13977
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13978
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13979
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13980
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13981
  %4 = trunc i32 %0 to i8, !dbg !13982
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13983
  store i8 %4, i8* %5, align 4, !dbg !13984
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13985
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13986
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13987
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13988
  store i8* %8, i8** %9, align 4, !dbg !13989
  ret void, !dbg !13990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13993, metadata !DIExpression()), !dbg !13999
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14000
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13994, metadata !DIExpression()), !dbg !13999
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14001
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13995, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata i8* null, metadata !13998, metadata !DIExpression()), !dbg !13999
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14002
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14003
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !14004
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !14005
  ret void, !dbg !14006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14007 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14011, metadata !DIExpression()), !dbg !14012
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14013
  ret i8* %2, !dbg !14014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14015 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14020, metadata !DIExpression()), !dbg !14021
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14022
  %3 = load i8, i8* %2, align 1, !dbg !14023
  %4 = and i8 %3, -5, !dbg !14023
  store i8 %4, i8* %2, align 1, !dbg !14023
  ret void, !dbg !14024
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14025 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14028
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14029
  %3 = ptrtoint i8* %2 to i32, !dbg !14038
  %4 = add i32 %3, 2048, !dbg !14039
  call void @llvm.dbg.value(metadata i32 %4, metadata !14033, metadata !DIExpression()) #23, !dbg !14040
  call void @llvm.dbg.value(metadata i32 %4, metadata !14041, metadata !DIExpression()) #23, !dbg !14044
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14046, !srcloc !14047
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14048
  %6 = or i32 %5, 512, !dbg !14048
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14048
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -2, i32 noundef 255) #25, !dbg !14049
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -5, i32 noundef 0) #25, !dbg !14052
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -12, i32 noundef 0) #25, !dbg !14053
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -11, i32 noundef 0) #25, !dbg !14054
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -10, i32 noundef 0) #25, !dbg !14055
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -4, i32 noundef 0) #25, !dbg !14056
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14057
  %8 = or i32 %7, 458752, !dbg !14057
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14057
  tail call void @z_arm_fault_init() #25, !dbg !14058
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14059
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14060
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14063
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14064
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14065
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14066
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !14066
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14027, metadata !DIExpression()), !dbg !14067
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14068
  call void @z_device_state_init() #25, !dbg !14069
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14070
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14071
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14072
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14073
  unreachable, !dbg !14073
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2400, metadata !DIExpression()), !dbg !14074
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14075
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14075
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2401, metadata !DIExpression()), !dbg !14074
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2401, metadata !DIExpression()), !dbg !14074
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14076
  br i1 %7, label %8, label %35, !dbg !14077

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2401, metadata !DIExpression()), !dbg !14074
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14078
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14078
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2411, metadata !DIExpression()), !dbg !14079
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14080
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14080
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14081
  call void @llvm.dbg.value(metadata i32 %14, metadata !2415, metadata !DIExpression()), !dbg !14079
  %15 = icmp eq %struct.device* %11, null, !dbg !14082
  br i1 %15, label %32, label %16, !dbg !14084

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14085
  br i1 %17, label %26, label %18, !dbg !14088

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14089
  call void @llvm.dbg.value(metadata i32 %19, metadata !2415, metadata !DIExpression()), !dbg !14079
  %20 = icmp ult i32 %19, 255, !dbg !14091
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %21, metadata !2415, metadata !DIExpression()), !dbg !14079
  %22 = trunc i32 %21 to i8, !dbg !14092
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14093
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14093
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14094
  store i8 %22, i8* %25, align 1, !dbg !14095
  br label %26, !dbg !14096

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14097
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14097
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14098
  %30 = load i8, i8* %29, align 1, !dbg !14099
  %31 = or i8 %30, 1, !dbg !14099
  store i8 %31, i8* %29, align 1, !dbg !14099
  br label %32, !dbg !14100

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14101
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2401, metadata !DIExpression()), !dbg !14074
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14076
  br i1 %34, label %8, label %35, !dbg !14077, !llvm.loop !14102

35:                                               ; preds = %32, %1
  ret void, !dbg !14104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.202(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !14105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14107, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata i32 %1, metadata !14108, metadata !DIExpression()), !dbg !14109
  %3 = trunc i32 %1 to i8, !dbg !14110
  %4 = shl i8 %3, 4, !dbg !14110
  %5 = and i32 %0, 15, !dbg !14113
  %6 = add nsw i32 %5, -4, !dbg !14114
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14115
  store volatile i8 %4, i8* %7, align 1, !dbg !14116
  ret void, !dbg !14117
}

; Function Attrs: optsize
declare !dbg !14118 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #6 !dbg !14119 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14122, metadata !DIExpression()), !dbg !14123
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14124
  store i8 1, i8* %2, align 1, !dbg !14125
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14126
  store i8 1, i8* %3, align 4, !dbg !14127
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14128
  store i32 0, i32* %4, align 4, !dbg !14129
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14130
  store i32 0, i32* %5, align 4, !dbg !14131
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14132
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14133
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14134
  ret void, !dbg !14135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14136 {
  tail call void @z_sched_init() #25, !dbg !14141
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14142
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.203, i32 0, i32 0)) #25, !dbg !14143
  call void @llvm.dbg.value(metadata i8* %1, metadata !14140, metadata !DIExpression()), !dbg !14144
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14145
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14146
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14147
  ret i8* %1, !dbg !14148
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14153, metadata !DIExpression()), !dbg !14154
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14155
  unreachable, !dbg !14156
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14159, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i8* %1, metadata !14160, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i8* %2, metadata !14161, metadata !DIExpression()), !dbg !14162
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14163
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14164
  tail call void @boot_banner() #25, !dbg !14165
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14166
  tail call void @z_init_static_threads() #25, !dbg !14167
  tail call void @main() #25, !dbg !14168
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14169
  %5 = and i8 %4, -2, !dbg !14169
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14169
  ret void, !dbg !14170
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14171 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14181, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata i8* %1, metadata !14182, metadata !DIExpression()), !dbg !14183
  ret void, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14185 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14187, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata i8* %1, metadata !14188, metadata !DIExpression()), !dbg !14189
  ret void, !dbg !14190
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14191 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14192, !srcloc !14199
  call void @llvm.dbg.value(metadata i32 %1, metadata !14195, metadata !DIExpression()) #23, !dbg !14200
  %2 = icmp ne i32 %1, 0, !dbg !14201
  ret i1 %2, !dbg !14202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !14203 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14204
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14205
  %3 = load i8, i8* %2, align 4, !dbg !14206
  %4 = or i8 %3, 1, !dbg !14206
  store i8 %4, i8* %2, align 4, !dbg !14206
  ret void, !dbg !14207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !14208 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14209
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14210
  %3 = load i8, i8* %2, align 4, !dbg !14211
  %4 = and i8 %3, -2, !dbg !14211
  store i8 %4, i8* %2, align 4, !dbg !14211
  ret void, !dbg !14212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !14213 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14214
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14215
  %3 = load i8, i8* %2, align 4, !dbg !14215
  %4 = and i8 %3, 1, !dbg !14216
  %5 = icmp ne i8 %4, 0, !dbg !14217
  ret i1 %5, !dbg !14218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14223, metadata !DIExpression()), !dbg !14225
  call void @llvm.dbg.value(metadata i8* %1, metadata !14224, metadata !DIExpression()), !dbg !14225
  ret i32 -88, !dbg !14226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14227 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14231, metadata !DIExpression()), !dbg !14232
  ret i8* null, !dbg !14233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14238, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.value(metadata i8* %1, metadata !14239, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.value(metadata i32 %2, metadata !14240, metadata !DIExpression()), !dbg !14241
  ret i32 -88, !dbg !14242
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2538, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i8* %1, metadata !2539, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i32 %2, metadata !2540, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i32 0, metadata !2541, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i8 undef, metadata !2543, metadata !DIExpression()), !dbg !14243
  %4 = icmp eq i8* %1, null, !dbg !14244
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14246
  br i1 %6, label %46, label %7, !dbg !14246

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14247
  %9 = load i8, i8* %8, align 1, !dbg !14247
  call void @llvm.dbg.value(metadata i8 %9, metadata !2543, metadata !DIExpression()), !dbg !14243
  %10 = add i32 %2, -1, !dbg !14248
  call void @llvm.dbg.value(metadata i32 %10, metadata !2540, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i8 0, metadata !2544, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i8 %9, metadata !2543, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i32 0, metadata !2541, metadata !DIExpression()), !dbg !14243
  %11 = icmp eq i8 %9, 0, !dbg !14250
  br i1 %11, label %12, label %15, !dbg !14252

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14253
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14254
  store i8 0, i8* %14, align 1, !dbg !14255
  br label %46, !dbg !14256

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2544, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i8 %17, metadata !2543, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i32 %18, metadata !2541, metadata !DIExpression()), !dbg !14243
  %19 = zext i8 %17 to i32, !dbg !14257
  %20 = zext i8 %16 to i32, !dbg !14258
  %21 = shl nuw i32 1, %20, !dbg !14258
  call void @llvm.dbg.value(metadata i32 %21, metadata !2542, metadata !DIExpression()), !dbg !14243
  %22 = and i32 %21, %19, !dbg !14260
  %23 = icmp eq i32 %22, 0, !dbg !14262
  br i1 %23, label %42, label %24, !dbg !14263

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14264
  %26 = sub i32 %10, %18, !dbg !14265
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14266
  %28 = load i8*, i8** %27, align 4, !dbg !14266
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14267
  %30 = load i32, i32* %29, align 4, !dbg !14267
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14268
  %32 = add i32 %31, %18, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %32, metadata !2541, metadata !DIExpression()), !dbg !14243
  %33 = trunc i32 %21 to i8, !dbg !14270
  %34 = xor i8 %33, -1, !dbg !14270
  %35 = and i8 %17, %34, !dbg !14270
  call void @llvm.dbg.value(metadata i8 %35, metadata !2543, metadata !DIExpression()), !dbg !14243
  %36 = icmp eq i8 %35, 0, !dbg !14271
  br i1 %36, label %12, label %37, !dbg !14273

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14274
  %39 = sub i32 %10, %32, !dbg !14276
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.206, i32 0, i32 0), i32 noundef 1) #24, !dbg !14277
  %41 = add i32 %40, %32, !dbg !14278
  call void @llvm.dbg.value(metadata i32 %41, metadata !2541, metadata !DIExpression()), !dbg !14243
  br label %42, !dbg !14279

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14243
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14243
  call void @llvm.dbg.value(metadata i8 %44, metadata !2543, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i32 %43, metadata !2541, metadata !DIExpression()), !dbg !14243
  %45 = add i8 %16, 1, !dbg !14280
  call void @llvm.dbg.value(metadata i8 %45, metadata !2544, metadata !DIExpression()), !dbg !14249
  br label %15, !dbg !14252

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.207, i32 0, i32 0), %3 ], !dbg !14243
  ret i8* %47, !dbg !14281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14282 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14286, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata i32 %1, metadata !14287, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata i8* %2, metadata !14288, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata i32 %3, metadata !14289, metadata !DIExpression()), !dbg !14291
  %5 = icmp ult i32 %1, %3, !dbg !14292
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14292
  call void @llvm.dbg.value(metadata i32 %6, metadata !14290, metadata !DIExpression()), !dbg !14291
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14293
  ret i32 %6, !dbg !14294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14295 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14299, metadata !DIExpression()), !dbg !14300
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14301
  ret void, !dbg !14302
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14312, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14313, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i32 %2, metadata !14314, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14315, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i8* %4, metadata !14316, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i8* %5, metadata !14317, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i8* %6, metadata !14318, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i32 %7, metadata !14319, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i32 %8, metadata !14320, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i8* undef, metadata !14321, metadata !DIExpression()), !dbg !14323
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14324
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !14325
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14326
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14327
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14328
  call void @llvm.dbg.value(metadata i8* %13, metadata !14322, metadata !DIExpression()), !dbg !14323
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14329
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14330
  store i8* null, i8** %14, align 4, !dbg !14331
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14332
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14332
  br i1 %16, label %20, label %17, !dbg !14334

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14335
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14335
  br label %20, !dbg !14336

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14323
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14337
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14339
  ret i8* %13, !dbg !14340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !14341 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14346, metadata !DIExpression()), !dbg !14347
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14348
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14349
  ret void, !dbg !14350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !14351 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14356, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 %1, metadata !14357, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 %2, metadata !14358, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 %3, metadata !14359, metadata !DIExpression()), !dbg !14360
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14361
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14362
  %6 = trunc i32 %3 to i8, !dbg !14363
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14364
  store i8 %6, i8* %7, align 4, !dbg !14365
  %8 = trunc i32 %2 to i8, !dbg !14366
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14367
  store i8 %8, i8* %9, align 1, !dbg !14368
  %10 = trunc i32 %1 to i8, !dbg !14369
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14370
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14370
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14370
  store i8 %10, i8* %13, align 2, !dbg !14371
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14372
  store i8 0, i8* %14, align 1, !dbg !14373
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14374
  ret void, !dbg !14375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !14376 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14380, metadata !DIExpression()), !dbg !14388
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14381, metadata !DIExpression()), !dbg !14388
  call void @llvm.dbg.value(metadata i32 %2, metadata !14382, metadata !DIExpression()), !dbg !14388
  call void @llvm.dbg.value(metadata i32 0, metadata !14387, metadata !DIExpression()), !dbg !14388
  %4 = add i32 %2, 7, !dbg !14389
  %5 = and i32 %4, -8, !dbg !14389
  %6 = add i32 %5, 64, !dbg !14389
  call void @llvm.dbg.value(metadata i32 %6, metadata !14383, metadata !DIExpression()), !dbg !14388
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.217(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14391
  call void @llvm.dbg.value(metadata i8* %7, metadata !14386, metadata !DIExpression()), !dbg !14388
  call void @llvm.dbg.value(metadata i32 %5, metadata !14384, metadata !DIExpression()), !dbg !14388
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14392
  call void @llvm.dbg.value(metadata i8* %8, metadata !14385, metadata !DIExpression()), !dbg !14388
  call void @llvm.dbg.value(metadata i32 0, metadata !14387, metadata !DIExpression()), !dbg !14388
  %9 = ptrtoint i8* %7 to i32, !dbg !14393
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14394
  store i32 %9, i32* %10, align 4, !dbg !14395
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14396
  store i32 %5, i32* %11, align 4, !dbg !14397
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14398
  store i32 0, i32* %12, align 4, !dbg !14399
  call void @llvm.dbg.value(metadata i8* %8, metadata !14385, metadata !DIExpression()), !dbg !14388
  ret i8* %8, !dbg !14400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.217(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14401 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14405, metadata !DIExpression()), !dbg !14406
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14407
  ret i8* %2, !dbg !14408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14409 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14414, metadata !DIExpression()), !dbg !14415
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14416
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14417
  ret void, !dbg !14418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14419 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14421, metadata !DIExpression()), !dbg !14422
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14423
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14424
  ret void, !dbg !14425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14426 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14430, metadata !DIExpression()), !dbg !14431
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14432
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14433
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14434
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14435
  ret void, !dbg !14436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !14437 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14442, metadata !DIExpression()), !dbg !14443
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14444
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14445
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14446
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14447
  ret void, !dbg !14448
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14449 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14466, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14457, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14458, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 %2, metadata !14459, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14460, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %4, metadata !14461, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %5, metadata !14462, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %6, metadata !14463, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 %7, metadata !14464, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 %8, metadata !14465, metadata !DIExpression()), !dbg !14467
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !14468
  %13 = icmp eq i64 %11, -1, !dbg !14469
  br i1 %13, label %15, label %14, !dbg !14471

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14472
  br label %15, !dbg !14474

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14476 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14481, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14480, metadata !DIExpression()), !dbg !14482
  %4 = icmp eq i64 %3, 0, !dbg !14483
  br i1 %4, label %5, label %6, !dbg !14485

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14486
  br label %7, !dbg !14488

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14489
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14496, metadata !DIExpression()), !dbg !14497
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14498, !srcloc !14500
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14501
  ret void, !dbg !14502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14503 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14506, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14505, metadata !DIExpression()), !dbg !14507
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14508
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14509
  ret void, !dbg !14510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14511 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14513, metadata !DIExpression()), !dbg !14533
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14534

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14535
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14531, metadata !DIExpression()), !dbg !14536
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14537

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14513, metadata !DIExpression()), !dbg !14533
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14538
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14538
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14541
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14541
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14542
  %9 = load i32, i32* %8, align 4, !dbg !14542
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14543
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14543
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14544
  %13 = load i8*, i8** %12, align 4, !dbg !14544
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14545
  %15 = load i8*, i8** %14, align 4, !dbg !14545
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14546
  %17 = load i8*, i8** %16, align 4, !dbg !14546
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14547
  %19 = load i32, i32* %18, align 4, !dbg !14547
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14548
  %21 = load i32, i32* %20, align 4, !dbg !14548
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !14549
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14550
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14551
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14552
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14552
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14553
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14513, metadata !DIExpression()), !dbg !14533
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14554
  br i1 %27, label %2, label %1, !dbg !14534, !llvm.loop !14556

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14535
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14531, metadata !DIExpression()), !dbg !14536
  br label %29, !dbg !14537

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14558
  ret void, !dbg !14559

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14531, metadata !DIExpression()), !dbg !14536
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14560
  %33 = load i32, i32* %32, align 4, !dbg !14560
  %34 = icmp eq i32 %33, -1, !dbg !14564
  br i1 %34, label %43, label %35, !dbg !14565

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14566
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14566
  %38 = icmp sgt i32 %33, 0, !dbg !14568
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14568
  %40 = zext i32 %39 to i64, !dbg !14568
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.220(i64 noundef %40) #24, !dbg !14568
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14569
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !14569
  br label %43, !dbg !14570

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14571
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14531, metadata !DIExpression()), !dbg !14536
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14572
  br i1 %45, label %30, label %29, !dbg !14537, !llvm.loop !14574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.220(i64 noundef %0) unnamed_addr #4 !dbg !14576 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14578, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.value(metadata i64 %0, metadata !14580, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i32 1000, metadata !14583, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i32 10000, metadata !14584, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i8 1, metadata !14585, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i8 0, metadata !14586, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i8 1, metadata !14587, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i8 0, metadata !14588, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i8 1, metadata !14589, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i8 0, metadata !14590, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i64 0, metadata !14591, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i64 0, metadata !14591, metadata !DIExpression()), !dbg !14595
  %2 = mul i64 %0, 10, !dbg !14597
  ret i64 %2, !dbg !14603
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14604 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14606, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i8* %1, metadata !14607, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i8* %2, metadata !14608, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i8* %3, metadata !14609, metadata !DIExpression()), !dbg !14610
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14611
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14612
  %7 = load i8, i8* %6, align 4, !dbg !14613
  %8 = or i8 %7, 4, !dbg !14613
  store i8 %8, i8* %6, align 4, !dbg !14613
  tail call void @z_thread_essential_clear() #24, !dbg !14614
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14615
  unreachable, !dbg !14615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14620, metadata !DIExpression()), !dbg !14621
  ret i32 -134, !dbg !14622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14627, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata i32 %1, metadata !14628, metadata !DIExpression()), !dbg !14629
  ret i32 -134, !dbg !14630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #4 !dbg !14631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14638, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14639, metadata !DIExpression()), !dbg !14640
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14641
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14643
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14640
  ret i32 %6, !dbg !14644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #4 !dbg !14645 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14649, metadata !DIExpression()), !dbg !14650
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14651
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14650
  ret i32 %3, !dbg !14653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14654 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14656
  ret void, !dbg !14657
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14658 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14660, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata i8* %1, metadata !14661, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata i8* %2, metadata !14662, metadata !DIExpression()), !dbg !14663
  br label %4, !dbg !14664

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14665, !srcloc !14672
  call void @llvm.dbg.value(metadata i32 undef, metadata !14668, metadata !DIExpression()) #23, !dbg !14673
  call void @llvm.dbg.value(metadata i32 undef, metadata !14669, metadata !DIExpression()) #23, !dbg !14673
  tail call fastcc void @k_cpu_idle() #24, !dbg !14674
  br label %4, !dbg !14664, !llvm.loop !14675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14677 {
  tail call void @arch_cpu_idle() #25, !dbg !14678
  ret void, !dbg !14679
}

; Function Attrs: optsize
declare !dbg !14680 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14685, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14686, metadata !DIExpression()), !dbg !14689
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14690
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14690
  %5 = load i8, i8* %4, align 2, !dbg !14690
  call void @llvm.dbg.value(metadata i8 %5, metadata !14687, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14689
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14691
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14691
  %8 = load i8, i8* %7, align 2, !dbg !14691
  call void @llvm.dbg.value(metadata i8 %8, metadata !14688, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14689
  %9 = icmp eq i8 %8, %5, !dbg !14692
  %10 = sext i8 %5 to i32, !dbg !14694
  %11 = sext i8 %8 to i32, !dbg !14694
  %12 = sub nsw i32 %11, %10, !dbg !14694
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14694
  ret i32 %13, !dbg !14695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14696 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14700, metadata !DIExpression()), !dbg !14701
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14702
  %3 = icmp eq i32 %2, 0, !dbg !14704
  br i1 %3, label %8, label %4, !dbg !14705

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14706
  %6 = add i32 %5, %2, !dbg !14708
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14709
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14710
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14711
  br label %8, !dbg !14712

8:                                                ; preds = %4, %1
  ret void, !dbg !14713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !14714 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14718, metadata !DIExpression()), !dbg !14720
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14721
  call void @llvm.dbg.value(metadata i32 %1, metadata !14719, metadata !DIExpression()), !dbg !14720
  ret i32 %1, !dbg !14722
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14727, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i32 %1, metadata !14728, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i32 0, metadata !14729, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !14745
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14747, !srcloc !14753
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14747
  call void @llvm.dbg.value(metadata i32 %4, metadata !14750, metadata !DIExpression()) #23, !dbg !14754
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !14754
  call void @llvm.dbg.value(metadata i32 %4, metadata !14744, metadata !DIExpression()) #23, !dbg !14745
  call void @llvm.dbg.value(metadata i32 %4, metadata !14735, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()), !dbg !14737
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14755
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14758
  %6 = icmp sgt i32 %0, 0, !dbg !14759
  %7 = icmp sgt i32 %5, 2, !dbg !14761
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14761
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14761
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14762
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14763
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14764
  call void @llvm.dbg.value(metadata i32 %4, metadata !14765, metadata !DIExpression()) #23, !dbg !14771
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !14771
  call void @llvm.dbg.value(metadata i32 %4, metadata !14773, metadata !DIExpression()) #23, !dbg !14776
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14778, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !14729, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()), !dbg !14737
  ret void, !dbg !14780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14783, metadata !DIExpression()), !dbg !14784
  call void @llvm.dbg.value(metadata i32 %0, metadata !14785, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14800
  call void @llvm.dbg.value(metadata i32 1000, metadata !14788, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i32 10000, metadata !14789, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i8 1, metadata !14790, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i1 true, metadata !14791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14800
  call void @llvm.dbg.value(metadata i1 true, metadata !14792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14800
  call void @llvm.dbg.value(metadata i8 0, metadata !14793, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i1 true, metadata !14794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14800
  call void @llvm.dbg.value(metadata i1 false, metadata !14795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14800
  call void @llvm.dbg.value(metadata i64 0, metadata !14796, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i64 0, metadata !14796, metadata !DIExpression()), !dbg !14800
  %2 = mul i32 %0, 10, !dbg !14802
  ret i32 %2, !dbg !14808
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14811, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !14814
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14816, !srcloc !14753
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14816
  call void @llvm.dbg.value(metadata i32 %3, metadata !14750, metadata !DIExpression()) #23, !dbg !14818
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !14818
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #23, !dbg !14814
  call void @llvm.dbg.value(metadata i32 %3, metadata !14812, metadata !DIExpression()), !dbg !14813
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14819
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14821
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14822
  br i1 %6, label %7, label %8, !dbg !14823

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !14828
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14830, !srcloc !14779
  br label %24, !dbg !14831

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14832
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !14833
  %10 = icmp eq i32 %9, 0, !dbg !14833
  br i1 %10, label %21, label %11, !dbg !14835

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !14836
  br i1 %12, label %13, label %21, !dbg !14837

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14838
  %15 = icmp sgt i32 %14, %0, !dbg !14841
  br i1 %15, label %19, label %16, !dbg !14842

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14843
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !14843
  call void @llvm.dbg.value(metadata i32 %18, metadata !14812, metadata !DIExpression()), !dbg !14813
  br label %22, !dbg !14845

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14846
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14846
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14848
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14813
  call void @llvm.dbg.value(metadata i32 %23, metadata !14812, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i32 %23, metadata !14765, metadata !DIExpression()) #23, !dbg !14850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !14850
  call void @llvm.dbg.value(metadata i32 %23, metadata !14773, metadata !DIExpression()) #23, !dbg !14852
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14854, !srcloc !14779
  br label %24, !dbg !14855

24:                                               ; preds = %22, %7
  ret void, !dbg !14855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !14856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14860, metadata !DIExpression()), !dbg !14862
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14863
  %3 = icmp eq i32 %2, 0, !dbg !14863
  br i1 %3, label %16, label %4, !dbg !14864

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14865
  br i1 %5, label %16, label %6, !dbg !14866

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14867
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14867
  %9 = load i8, i8* %8, align 2, !dbg !14867
  %10 = sext i8 %9 to i32, !dbg !14868
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14869
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14870
  br i1 %12, label %16, label %13, !dbg !14871

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14872
  %15 = xor i1 %14, true, !dbg !14873
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14862
  call void @llvm.dbg.value(metadata i1 %17, metadata !14861, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14862
  ret i1 %17, !dbg !14874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14875 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14879, metadata !DIExpression()), !dbg !14881
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14882
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14880, metadata !DIExpression()), !dbg !14881
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14883
  br i1 %3, label %5, label %4, !dbg !14885

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14886
  br label %5, !dbg !14888

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14879, metadata !DIExpression()), !dbg !14881
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14889
  ret i32 %6, !dbg !14890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14893, metadata !DIExpression()), !dbg !14895
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14896
  %3 = load i8, i8* %2, align 1, !dbg !14896
  call void @llvm.dbg.value(metadata i8 %3, metadata !14894, metadata !DIExpression()), !dbg !14895
  %4 = and i8 %3, 31, !dbg !14897
  %5 = icmp ne i8 %4, 0, !dbg !14898
  ret i1 %5, !dbg !14899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14900 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14902, metadata !DIExpression()), !dbg !14903
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14904
  br i1 %2, label %3, label %7, !dbg !14906

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()) #23, !dbg !14910
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14913
  %5 = load i8, i8* %4, align 1, !dbg !14914
  %6 = and i8 %5, 127, !dbg !14914
  store i8 %6, i8* %4, align 1, !dbg !14914
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14915, metadata !DIExpression()) #23, !dbg !14918
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14922
  br label %7, !dbg !14923

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !14927
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14929
  %9 = load i8, i8* %8, align 1, !dbg !14930
  %10 = or i8 %9, -128, !dbg !14930
  store i8 %10, i8* %8, align 1, !dbg !14930
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14931, metadata !DIExpression()) #23, !dbg !14934
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14938, metadata !DIExpression()) #23, !dbg !14946
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14944, metadata !DIExpression()) #23, !dbg !14946
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14948
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14945, metadata !DIExpression()) #23, !dbg !14946
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14950
  br i1 %12, label %23, label %13, !dbg !14948

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14945, metadata !DIExpression()) #23, !dbg !14946
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14952
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14945, metadata !DIExpression()) #23, !dbg !14946
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14953
  %17 = icmp sgt i32 %16, 0, !dbg !14956
  br i1 %17, label %18, label %20, !dbg !14957

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14958
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14960
  br label %25, !dbg !14961

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14950
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14945, metadata !DIExpression()) #23, !dbg !14946
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14950
  br i1 %22, label %23, label %13, !dbg !14948, !llvm.loop !14962

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14964
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14965
  br label %25, !dbg !14966

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14967
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14968
  %28 = zext i1 %27 to i32, !dbg !14968
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !14969
  ret void, !dbg !14970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14971 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14973, metadata !DIExpression()), !dbg !14974
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !14975
  ret i1 %2, !dbg !14976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !14977 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14979, metadata !DIExpression()), !dbg !14981
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14980, metadata !DIExpression()), !dbg !14981
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14982
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !14983
  ret void, !dbg !14984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !14985 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14989, metadata !DIExpression()), !dbg !14990
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14991
  br i1 %2, label %6, label %3, !dbg !14991

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14992
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14992
  br label %6, !dbg !14991

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14991
  ret %struct._dnode* %7, !dbg !14993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14994 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14998, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14999, metadata !DIExpression()), !dbg !15002
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15003
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15003
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15000, metadata !DIExpression()), !dbg !15002
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15004
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15005
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15006
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15007
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15008
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15009
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15010
  ret void, !dbg !15011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15012 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15016, metadata !DIExpression()), !dbg !15018
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15017, metadata !DIExpression()), !dbg !15018
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15019
  br i1 %3, label %6, label %4, !dbg !15020

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15021
  br label %6, !dbg !15020

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15020
  ret %struct._dnode* %7, !dbg !15022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15023 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15027, metadata !DIExpression()), !dbg !15030
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15028, metadata !DIExpression()), !dbg !15030
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15031
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15031
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15029, metadata !DIExpression()), !dbg !15030
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15032
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15033
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15034
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15035
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15036
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15037
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15038
  ret void, !dbg !15039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15042, metadata !DIExpression()), !dbg !15044
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15045
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15052, metadata !DIExpression()) #23, !dbg !15054
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15055
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15056
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15056
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15043, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15057, metadata !DIExpression()) #23, !dbg !15063
  call void @llvm.dbg.value(metadata i32 %0, metadata !15062, metadata !DIExpression()) #23, !dbg !15063
  %6 = icmp eq i32 %0, 0, !dbg !15066
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15068
  br i1 %6, label %8, label %15, !dbg !15069

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15070
  br i1 %9, label %15, label %10, !dbg !15072

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15073
  br i1 %11, label %15, label %12, !dbg !15075

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15076
  %14 = icmp eq i32 %13, 0, !dbg !15076
  br i1 %14, label %18, label %15, !dbg !15078

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15079
  br i1 %16, label %18, label %17, !dbg !15082

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15083
  br label %18, !dbg !15085

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15068
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15068
  ret void, !dbg !15086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !15087 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15091, metadata !DIExpression()), !dbg !15094
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15092, metadata !DIExpression()), !dbg !15094
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15095
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15093, metadata !DIExpression()), !dbg !15094
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15092, metadata !DIExpression()), !dbg !15094
  ret %struct.k_thread* %3, !dbg !15096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15099, metadata !DIExpression()), !dbg !15100
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15101
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15102
  %4 = xor i1 %3, true, !dbg !15103
  ret i1 %4, !dbg !15104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15107, metadata !DIExpression()), !dbg !15108
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15109
  %3 = load i16, i16* %2, align 2, !dbg !15109
  %4 = icmp ult i16 %3, 128, !dbg !15110
  %5 = zext i1 %4 to i32, !dbg !15110
  ret i32 %5, !dbg !15111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15112 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15118, metadata !DIExpression()), !dbg !15119
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15120
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15121
  %4 = xor i1 %3, true, !dbg !15122
  ret i1 %4, !dbg !15123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15124 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15130, metadata !DIExpression()), !dbg !15131
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15132
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15132
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15133
  ret i1 %4, !dbg !15134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15135 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15137, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15138, metadata !DIExpression()), !dbg !15139
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15140
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15140
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15141
  br i1 %5, label %9, label %6, !dbg !15142

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15143
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15143
  br label %9, !dbg !15142

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15142
  ret %struct._dnode* %10, !dbg !15144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15145 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15149, metadata !DIExpression()), !dbg !15150
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15151
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15151
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15152
  ret i1 %4, !dbg !15153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15154 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15158, metadata !DIExpression()), !dbg !15161
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15162
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15162
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15159, metadata !DIExpression()), !dbg !15161
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15163
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15163
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15160, metadata !DIExpression()), !dbg !15161
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15164
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15165
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15166
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15167
  tail call fastcc void @sys_dnode_init.223(%struct._dnode* noundef %0) #24, !dbg !15168
  ret void, !dbg !15169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.223(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15170 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15172, metadata !DIExpression()), !dbg !15173
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15174
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15175
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15176
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15177
  ret void, !dbg !15178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15179 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15183, metadata !DIExpression()), !dbg !15185
  call void @llvm.dbg.value(metadata i32 128, metadata !15184, metadata !DIExpression()), !dbg !15185
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15186
  %3 = load i8, i8* %2, align 1, !dbg !15186
  %4 = icmp slt i8 %3, 0, !dbg !15187
  ret i1 %4, !dbg !15188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15193, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 %1, metadata !15194, metadata !DIExpression()), !dbg !15195
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15196
  ret i1 %3, !dbg !15197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !15198 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15200, metadata !DIExpression()), !dbg !15201
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15202
  ret i1 %2, !dbg !15203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15206, metadata !DIExpression()), !dbg !15208
  call void @llvm.dbg.value(metadata i32 %1, metadata !15207, metadata !DIExpression()), !dbg !15208
  %3 = icmp slt i32 %0, %1, !dbg !15209
  ret i1 %3, !dbg !15210
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15213, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 0, metadata !15214, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15219
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15221, !srcloc !14753
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %3, metadata !14750, metadata !DIExpression()) #23, !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15223
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #23, !dbg !15219
  call void @llvm.dbg.value(metadata i32 %3, metadata !15216, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.value(metadata i32 undef, metadata !15214, metadata !DIExpression()), !dbg !15218
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15224
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15229
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !15231
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15233, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15214, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.value(metadata i32 undef, metadata !15214, metadata !DIExpression()), !dbg !15218
  ret void, !dbg !15234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15235 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15237, metadata !DIExpression()), !dbg !15238
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15239
  br i1 %2, label %24, label %3, !dbg !15241

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15242
  br i1 %4, label %5, label %24, !dbg !15243

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !15244
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15247
  %7 = load i8, i8* %6, align 1, !dbg !15248
  %8 = or i8 %7, -128, !dbg !15248
  store i8 %8, i8* %6, align 1, !dbg !15248
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14931, metadata !DIExpression()) #23, !dbg !15249
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14938, metadata !DIExpression()) #23, !dbg !15251
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14944, metadata !DIExpression()) #23, !dbg !15251
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15253
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14945, metadata !DIExpression()) #23, !dbg !15251
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15254
  br i1 %10, label %21, label %11, !dbg !15253

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14945, metadata !DIExpression()) #23, !dbg !15251
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15255
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14945, metadata !DIExpression()) #23, !dbg !15251
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15256
  %15 = icmp sgt i32 %14, 0, !dbg !15257
  br i1 %15, label %16, label %18, !dbg !15258

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15259
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15260
  br label %23, !dbg !15261

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15254
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14945, metadata !DIExpression()) #23, !dbg !15251
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15254
  br i1 %20, label %21, label %11, !dbg !15253, !llvm.loop !15262

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15264
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15265
  br label %23, !dbg !15266

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15267
  br label %24, !dbg !15268

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15272, metadata !DIExpression()), !dbg !15273
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15274
  br i1 %2, label %6, label %3, !dbg !15275

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15276
  %5 = xor i1 %4, true, !dbg !15275
  br label %6, !dbg !15275

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15280, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.value(metadata i32 0, metadata !15281, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15286
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15288, !srcloc !14753
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15288
  call void @llvm.dbg.value(metadata i32 %3, metadata !14750, metadata !DIExpression()) #23, !dbg !15290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #23, !dbg !15286
  call void @llvm.dbg.value(metadata i32 %3, metadata !15283, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i32 undef, metadata !15281, metadata !DIExpression()), !dbg !15285
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15291
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !15296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15298, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15281, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i32 undef, metadata !15281, metadata !DIExpression()), !dbg !15285
  ret void, !dbg !15299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15302, metadata !DIExpression()), !dbg !15304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15305
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15307, !srcloc !14753
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15307
  call void @llvm.dbg.value(metadata i32 %3, metadata !14750, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %3, metadata !15303, metadata !DIExpression()), !dbg !15304
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15310
  br i1 %4, label %5, label %6, !dbg !15312

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !15316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15318, !srcloc !14779
  br label %8, !dbg !15319

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.228(%struct.k_thread* noundef %0) #24, !dbg !15320
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15321
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15322
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15322
  br label %8, !dbg !15323

8:                                                ; preds = %6, %5
  ret void, !dbg !15323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15326, metadata !DIExpression()), !dbg !15327
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15328
  %3 = load i8, i8* %2, align 1, !dbg !15328
  %4 = and i8 %3, 4, !dbg !15329
  %5 = icmp eq i8 %4, 0, !dbg !15330
  ret i1 %5, !dbg !15331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.228(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15332 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15334, metadata !DIExpression()), !dbg !15335
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15336
  %3 = load i8, i8* %2, align 1, !dbg !15337
  %4 = and i8 %3, -5, !dbg !15337
  store i8 %4, i8* %2, align 1, !dbg !15337
  ret void, !dbg !15338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15339 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15342, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15341, metadata !DIExpression()), !dbg !15343
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15344
  br i1 %4, label %5, label %9, !dbg !15346

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15347
  br i1 %6, label %7, label %9, !dbg !15348

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15349, metadata !DIExpression()) #23, !dbg !15355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15354, metadata !DIExpression()) #23, !dbg !15355
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15358
  br label %10, !dbg !15359

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15360
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !15363
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15365, !srcloc !14779
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15371, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 %0, metadata !15373, metadata !DIExpression()), !dbg !15378
  %2 = icmp eq i32 %0, 0, !dbg !15380
  br i1 %2, label %3, label %6, !dbg !15381

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15382, !srcloc !15389
  call void @llvm.dbg.value(metadata i32 %4, metadata !15385, metadata !DIExpression()) #23, !dbg !15390
  %5 = icmp eq i32 %4, 0, !dbg !15391
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15372
  ret i1 %7, !dbg !15392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !15393 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15395, metadata !DIExpression()), !dbg !15397
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15398
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15399
  ret i1 %3, !dbg !15400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15403, metadata !DIExpression()), !dbg !15405
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15406
  call void @llvm.dbg.value(metadata i32 %2, metadata !15404, metadata !DIExpression()), !dbg !15405
  ret i32 %2, !dbg !15407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15408 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15410, metadata !DIExpression()), !dbg !15414
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15415
  call void @llvm.dbg.value(metadata i32 0, metadata !15411, metadata !DIExpression()), !dbg !15416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15417
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15419, !srcloc !14753
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %4, metadata !14750, metadata !DIExpression()) #23, !dbg !15421
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15421
  call void @llvm.dbg.value(metadata i32 %4, metadata !14744, metadata !DIExpression()) #23, !dbg !15417
  call void @llvm.dbg.value(metadata i32 %4, metadata !15413, metadata !DIExpression()), !dbg !15416
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()), !dbg !15416
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15422
  br i1 %5, label %6, label %10, !dbg !15426

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()) #23, !dbg !15427
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15430
  %8 = load i8, i8* %7, align 1, !dbg !15431
  %9 = and i8 %8, 127, !dbg !15431
  store i8 %9, i8* %7, align 1, !dbg !15431
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14915, metadata !DIExpression()) #23, !dbg !15432
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15434
  br label %10, !dbg !15435

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15436
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15437
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15438
  %13 = zext i1 %12 to i32, !dbg !15438
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !15439
  call void @llvm.dbg.value(metadata i32 %4, metadata !14765, metadata !DIExpression()) #23, !dbg !15440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15440
  call void @llvm.dbg.value(metadata i32 %4, metadata !14773, metadata !DIExpression()) #23, !dbg !15442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15444, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15411, metadata !DIExpression()), !dbg !15416
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()), !dbg !15416
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15445
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15447
  br i1 %15, label %16, label %17, !dbg !15448

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15449
  br label %17, !dbg !15451

17:                                               ; preds = %16, %10
  ret void, !dbg !15452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15455, metadata !DIExpression()), !dbg !15456
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15457
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15458
  ret i32 %3, !dbg !15459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15460 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15462, metadata !DIExpression()), !dbg !15463
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15464
  %3 = load i8, i8* %2, align 1, !dbg !15465
  %4 = or i8 %3, 16, !dbg !15465
  store i8 %4, i8* %2, align 1, !dbg !15465
  ret void, !dbg !15466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15467 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15468, !srcloc !14753
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %2, metadata !14750, metadata !DIExpression()) #23, !dbg !15470
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15470
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15471
  ret void, !dbg !15472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15475, metadata !DIExpression()), !dbg !15476
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15477
  br i1 %2, label %3, label %5, !dbg !15479

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15480
  br label %6, !dbg !15482

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14773, metadata !DIExpression()) #23, !dbg !15483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15486, !srcloc !14779
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15490, metadata !DIExpression()), !dbg !15492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15493
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15495, !srcloc !14753
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %3, metadata !14750, metadata !DIExpression()) #23, !dbg !15497
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15497
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #23, !dbg !15493
  call void @llvm.dbg.value(metadata i32 %3, metadata !15491, metadata !DIExpression()), !dbg !15492
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15498
  br i1 %4, label %6, label %5, !dbg !15500

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !15504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15506, !srcloc !14779
  br label %8, !dbg !15507

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15508
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15509
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15510
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15510
  br label %8, !dbg !15511

8:                                                ; preds = %6, %5
  ret void, !dbg !15511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15514, metadata !DIExpression()), !dbg !15515
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15516
  %3 = load i8, i8* %2, align 1, !dbg !15516
  %4 = and i8 %3, 16, !dbg !15517
  %5 = icmp ne i8 %4, 0, !dbg !15518
  ret i1 %5, !dbg !15519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15520 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15522, metadata !DIExpression()), !dbg !15523
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15524
  %3 = load i8, i8* %2, align 1, !dbg !15525
  %4 = and i8 %3, -17, !dbg !15525
  store i8 %4, i8* %2, align 1, !dbg !15525
  ret void, !dbg !15526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15527 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15537, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15535, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15536, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata i32 0, metadata !15538, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15543
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15545, !srcloc !14753
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15545
  call void @llvm.dbg.value(metadata i32 %5, metadata !14750, metadata !DIExpression()) #23, !dbg !15547
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15547
  call void @llvm.dbg.value(metadata i32 %5, metadata !14744, metadata !DIExpression()) #23, !dbg !15543
  call void @llvm.dbg.value(metadata i32 %5, metadata !15540, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata i32 undef, metadata !15538, metadata !DIExpression()), !dbg !15542
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15548
  call void @llvm.dbg.value(metadata i32 %5, metadata !14765, metadata !DIExpression()) #23, !dbg !15551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15551
  call void @llvm.dbg.value(metadata i32 %5, metadata !14773, metadata !DIExpression()) #23, !dbg !15553
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !15555, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15538, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata i32 undef, metadata !15538, metadata !DIExpression()), !dbg !15542
  ret void, !dbg !15556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15557 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15561, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15559, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15560, metadata !DIExpression()), !dbg !15562
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15563
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15564
  ret void, !dbg !15565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15570, metadata !DIExpression()), !dbg !15572
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15571, metadata !DIExpression()), !dbg !15572
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15573
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15574
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15575
  br i1 %3, label %21, label %4, !dbg !15577

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15578
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15580
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15581
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14938, metadata !DIExpression()) #23, !dbg !15582
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14944, metadata !DIExpression()) #23, !dbg !15582
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15584
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14945, metadata !DIExpression()) #23, !dbg !15582
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15585
  br i1 %8, label %19, label %9, !dbg !15584

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14945, metadata !DIExpression()) #23, !dbg !15582
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15586
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14945, metadata !DIExpression()) #23, !dbg !15582
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15587
  %13 = icmp sgt i32 %12, 0, !dbg !15588
  br i1 %13, label %14, label %16, !dbg !15589

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15590
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15591
  br label %21, !dbg !15592

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15585
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14945, metadata !DIExpression()) #23, !dbg !15582
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15585
  br i1 %18, label %19, label %9, !dbg !15584, !llvm.loop !15593

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15595
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15596
  br label %21, !dbg !15597

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15599 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15604, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15603, metadata !DIExpression()), !dbg !15605
  %4 = icmp eq i64 %3, -1, !dbg !15606
  br i1 %4, label %6, label %5, !dbg !15608

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.229(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15609
  br label %6, !dbg !15611

6:                                                ; preds = %5, %2
  ret void, !dbg !15612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.229(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15613 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15616, metadata !DIExpression()), !dbg !15617
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15615, metadata !DIExpression()), !dbg !15617
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15618
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15619
  ret void, !dbg !15620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15621 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15623, metadata !DIExpression()), !dbg !15631
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15632
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15632
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15624, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.value(metadata i32 0, metadata !15625, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15634
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15636, !srcloc !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15625, metadata !DIExpression()), !dbg !15633
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15639
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15640
  %7 = load i8, i8* %6, align 1, !dbg !15640
  %8 = and i8 %7, 40, !dbg !15641
  %9 = icmp eq i8 %8, 0, !dbg !15641
  call void @llvm.dbg.value(metadata i1 %9, metadata !15628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15642
  br i1 %9, label %10, label %17, !dbg !15643

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15644
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !15644
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !15644
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !15648
  br i1 %14, label %16, label %15, !dbg !15649

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15650
  br label %16, !dbg !15652

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.228(%struct.k_thread* noundef nonnull %3) #24, !dbg !15653
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15654
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15655
  br label %17, !dbg !15656

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15636
  call void @llvm.dbg.value(metadata i32 %18, metadata !14750, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 %18, metadata !14744, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %18, metadata !15627, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15657
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #23, !dbg !15659
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !15661, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15625, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15625, metadata !DIExpression()), !dbg !15633
  ret void, !dbg !15662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15665, metadata !DIExpression()), !dbg !15666
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15667
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15668
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15669
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !15670
  ret void, !dbg !15671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15672 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15674, metadata !DIExpression()), !dbg !15675
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15676
  %3 = load i8, i8* %2, align 1, !dbg !15677
  %4 = and i8 %3, -3, !dbg !15677
  store i8 %4, i8* %2, align 1, !dbg !15677
  ret void, !dbg !15678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15681, metadata !DIExpression()), !dbg !15682
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15683
  br i1 %2, label %3, label %7, !dbg !15685

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()) #23, !dbg !15686
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15689
  %5 = load i8, i8* %4, align 1, !dbg !15690
  %6 = and i8 %5, 127, !dbg !15690
  store i8 %6, i8* %4, align 1, !dbg !15690
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14915, metadata !DIExpression()) #23, !dbg !15691
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15693
  br label %7, !dbg !15694

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15695
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15696
  %10 = zext i1 %9 to i32, !dbg !15696
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15697
  ret void, !dbg !15698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15701, metadata !DIExpression()), !dbg !15702
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15703
  %3 = load i8, i8* %2, align 1, !dbg !15704
  %4 = or i8 %3, 2, !dbg !15704
  store i8 %4, i8* %2, align 1, !dbg !15704
  ret void, !dbg !15705
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !15706 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15708, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i32 0, metadata !15709, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15714
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15716, !srcloc !14753
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15716
  call void @llvm.dbg.value(metadata i32 %3, metadata !14750, metadata !DIExpression()) #23, !dbg !15718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15718
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15709, metadata !DIExpression()), !dbg !15713
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15719
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15722
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !15724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15726, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15709, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15709, metadata !DIExpression()), !dbg !15713
  ret void, !dbg !15727
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15728 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15734, metadata !DIExpression()), !dbg !15739
  call void @llvm.dbg.value(metadata i32 %0, metadata !15732, metadata !DIExpression()), !dbg !15739
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15733, metadata !DIExpression()), !dbg !15739
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15740
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15741
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15742
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15743
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15744
  call void @llvm.dbg.value(metadata i32 %6, metadata !15735, metadata !DIExpression()), !dbg !15739
  call void @llvm.dbg.value(metadata i32 0, metadata !15736, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15746
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15748, !srcloc !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #23, !dbg !15746
  call void @llvm.dbg.value(metadata i32 undef, metadata !15738, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !15736, metadata !DIExpression()), !dbg !15745
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15751
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15755
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15756
  br i1 %10, label %11, label %12, !dbg !15757

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15758
  br label %12, !dbg !15760

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15748
  call void @llvm.dbg.value(metadata i32 %13, metadata !14750, metadata !DIExpression()) #23, !dbg !15750
  call void @llvm.dbg.value(metadata i32 %13, metadata !14744, metadata !DIExpression()) #23, !dbg !15746
  call void @llvm.dbg.value(metadata i32 %13, metadata !15738, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15761
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #23, !dbg !15763
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !15765, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15736, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !15736, metadata !DIExpression()), !dbg !15745
  ret i32 %6, !dbg !15766
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15767 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15772, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.value(metadata i64 undef, metadata !15774, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15771, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15773, metadata !DIExpression()), !dbg !15775
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15776
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15778
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15780, !srcloc !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #23, !dbg !15778
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15783
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15784
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15349, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15354, metadata !DIExpression()) #23, !dbg !15785
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15787
  ret i32 %9, !dbg !15788
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15789 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15793, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15794, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i32 0, metadata !15795, metadata !DIExpression()), !dbg !15799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15800
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15802, !srcloc !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #23, !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15797, metadata !DIExpression()), !dbg !15799
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15794, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15795, metadata !DIExpression()), !dbg !15799
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15805
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15794, metadata !DIExpression()), !dbg !15798
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15808
  br i1 %5, label %7, label %6, !dbg !15810

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15811
  br label %7, !dbg !15813

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15802
  call void @llvm.dbg.value(metadata i32 %8, metadata !14750, metadata !DIExpression()) #23, !dbg !15804
  call void @llvm.dbg.value(metadata i32 %8, metadata !14744, metadata !DIExpression()) #23, !dbg !15800
  call void @llvm.dbg.value(metadata i32 %8, metadata !15797, metadata !DIExpression()), !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #23, !dbg !15816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15818, !srcloc !14779
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15794, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15795, metadata !DIExpression()), !dbg !15799
  ret %struct.k_thread* %4, !dbg !15819
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15820 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15822, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15823, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 0, metadata !15824, metadata !DIExpression()), !dbg !15828
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15829
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15831, !srcloc !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #23, !dbg !15829
  call void @llvm.dbg.value(metadata i32 undef, metadata !15826, metadata !DIExpression()), !dbg !15828
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15823, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()), !dbg !15828
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15823, metadata !DIExpression()), !dbg !15827
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15837
  br i1 %5, label %8, label %6, !dbg !15839

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15840
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15842
  br label %8, !dbg !15843

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15831
  call void @llvm.dbg.value(metadata i32 %9, metadata !14750, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata i32 %9, metadata !14744, metadata !DIExpression()) #23, !dbg !15829
  call void @llvm.dbg.value(metadata i32 %9, metadata !15826, metadata !DIExpression()), !dbg !15828
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #23, !dbg !15846
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15848, !srcloc !14779
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15823, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()), !dbg !15828
  ret %struct.k_thread* %4, !dbg !15849
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15852, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15708, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata i32 0, metadata !15709, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15857
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15859, !srcloc !14753
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15859
  call void @llvm.dbg.value(metadata i32 %3, metadata !14750, metadata !DIExpression()) #23, !dbg !15861
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15861
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #23, !dbg !15857
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata i32 undef, metadata !15709, metadata !DIExpression()) #23, !dbg !15856
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15862
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15863
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !15865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15867, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15709, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata i32 undef, metadata !15709, metadata !DIExpression()) #23, !dbg !15856
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15868
  ret void, !dbg !15869
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15872, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 %1, metadata !15873, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i8 0, metadata !15874, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 0, metadata !15875, metadata !DIExpression()), !dbg !15879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15880
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15882, !srcloc !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #23, !dbg !15884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #23, !dbg !15880
  call void @llvm.dbg.value(metadata i32 undef, metadata !15877, metadata !DIExpression()), !dbg !15879
  call void @llvm.dbg.value(metadata i8 poison, metadata !15874, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15875, metadata !DIExpression()), !dbg !15879
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15885
  call void @llvm.dbg.value(metadata i1 %6, metadata !15874, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15878
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15888

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()) #23, !dbg !15889
  %11 = load i8, i8* %4, align 1, !dbg !15895
  %12 = and i8 %11, 127, !dbg !15895
  store i8 %12, i8* %4, align 1, !dbg !15895
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14915, metadata !DIExpression()) #23, !dbg !15896
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15898
  store i8 %9, i8* %8, align 2, !dbg !15899
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !15900
  %13 = load i8, i8* %4, align 1, !dbg !15902
  %14 = or i8 %13, -128, !dbg !15902
  store i8 %14, i8* %4, align 1, !dbg !15902
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14931, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14938, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14944, metadata !DIExpression()) #23, !dbg !15905
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15907
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14945, metadata !DIExpression()) #23, !dbg !15905
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15908
  br i1 %16, label %26, label %17, !dbg !15907

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14945, metadata !DIExpression()) #23, !dbg !15905
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15909
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14945, metadata !DIExpression()) #23, !dbg !15905
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15910
  %21 = icmp sgt i32 %20, 0, !dbg !15911
  br i1 %21, label %22, label %23, !dbg !15912

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15913
  br label %27, !dbg !15914

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15908
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14945, metadata !DIExpression()) #23, !dbg !15905
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15908
  br i1 %25, label %26, label %17, !dbg !15907, !llvm.loop !15915

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15917
  br label %27, !dbg !15918

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15919
  br label %29, !dbg !15920

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15921
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15882
  call void @llvm.dbg.value(metadata i32 %30, metadata !14750, metadata !DIExpression()) #23, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %30, metadata !14744, metadata !DIExpression()) #23, !dbg !15880
  call void @llvm.dbg.value(metadata i32 %30, metadata !15877, metadata !DIExpression()), !dbg !15879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15923
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #23, !dbg !15925
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !15927, !srcloc !14779
  call void @llvm.dbg.value(metadata i8 poison, metadata !15874, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15875, metadata !DIExpression()), !dbg !15879
  ret i1 %6, !dbg !15928
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15929 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15933, metadata !DIExpression()), !dbg !15936
  call void @llvm.dbg.value(metadata i32 %1, metadata !15934, metadata !DIExpression()), !dbg !15936
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15937
  call void @llvm.dbg.value(metadata i1 %3, metadata !15935, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15936
  br i1 %3, label %4, label %12, !dbg !15938

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15940
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15941
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15941
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15941
  %9 = load i8, i8* %8, align 1, !dbg !15941
  %10 = icmp eq i8 %9, 0, !dbg !15942
  br i1 %10, label %11, label %12, !dbg !15943

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15944
  br label %12, !dbg !15946

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15948 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15950, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15954
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15956, !srcloc !14753
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15956
  call void @llvm.dbg.value(metadata i32 %2, metadata !14750, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata i32 %2, metadata !14744, metadata !DIExpression()) #23, !dbg !15954
  call void @llvm.dbg.value(metadata i32 %2, metadata !15952, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15953
  tail call fastcc void @z_sched_lock() #24, !dbg !15959
  call void @llvm.dbg.value(metadata i32 %2, metadata !14765, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %2, metadata !14773, metadata !DIExpression()) #23, !dbg !15964
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15966, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15950, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15953
  ret void, !dbg !15967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15968 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15969
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15970
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15970
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15970
  %5 = load i8, i8* %4, align 1, !dbg !15971
  %6 = add i8 %5, -1, !dbg !15971
  store i8 %6, i8* %4, align 1, !dbg !15971
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15972, !srcloc !15974
  ret void, !dbg !15975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15976 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15978, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !15982
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15984, !srcloc !14753
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %2, metadata !14750, metadata !DIExpression()) #23, !dbg !15986
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !15986
  call void @llvm.dbg.value(metadata i32 %2, metadata !14744, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %2, metadata !15980, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i32 undef, metadata !15978, metadata !DIExpression()), !dbg !15981
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15987
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15990
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15990
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15990
  %7 = load i8, i8* %6, align 1, !dbg !15991
  %8 = add i8 %7, 1, !dbg !15991
  store i8 %8, i8* %6, align 1, !dbg !15991
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15992
  call void @llvm.dbg.value(metadata i32 %2, metadata !14765, metadata !DIExpression()) #23, !dbg !15993
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !15993
  call void @llvm.dbg.value(metadata i32 %2, metadata !14773, metadata !DIExpression()) #23, !dbg !15995
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15997, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 1, metadata !15978, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i32 undef, metadata !15978, metadata !DIExpression()), !dbg !15981
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15998
  ret void, !dbg !15999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16000 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16001
  ret %struct.k_thread* %1, !dbg !16002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16003 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16007, metadata !DIExpression()), !dbg !16012
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16008, metadata !DIExpression()), !dbg !16012
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16013
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16009, metadata !DIExpression()), !dbg !16012
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16014
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16010, metadata !DIExpression()), !dbg !16012
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16015
  call void @llvm.dbg.value(metadata i32 %5, metadata !16011, metadata !DIExpression()), !dbg !16012
  %6 = icmp sgt i32 %5, 0, !dbg !16016
  br i1 %6, label %17, label %7, !dbg !16018

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16019
  br i1 %8, label %17, label %9, !dbg !16021

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16022
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16022
  %12 = load i32, i32* %11, align 8, !dbg !16022
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16024
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16024
  %15 = load i32, i32* %14, align 8, !dbg !16024
  %16 = icmp ult i32 %12, %15, !dbg !16025
  br label %17, !dbg !16026

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16027
  ret i1 %18, !dbg !16028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16029 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16046, metadata !DIExpression()), !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16047, metadata !DIExpression()), !dbg !16061
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16062
  %5 = load i32, i32* %4, align 4, !dbg !16063
  %6 = add nsw i32 %5, 1, !dbg !16063
  store i32 %6, i32* %4, align 4, !dbg !16063
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16064
  store i32 %5, i32* %7, align 8, !dbg !16065
  %8 = load i32, i32* %4, align 4, !dbg !16066
  %9 = icmp eq i32 %8, 0, !dbg !16067
  br i1 %9, label %10, label %32, !dbg !16068

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16069
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16069
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16049, metadata !DIExpression()), !dbg !16069
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16069
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16069
  %14 = load i32, i32* %13, align 4, !dbg !16069
  %15 = shl i32 %14, 2, !dbg !16069
  %16 = alloca i8, i32 %15, align 8, !dbg !16069
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16069
  store i8* %16, i8** %17, align 4, !dbg !16069
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16069
  %19 = alloca i8, i32 %14, align 8, !dbg !16069
  store i8* %19, i8** %18, align 4, !dbg !16069
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16069
  store i32 -1, i32* %20, align 4, !dbg !16069
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16070
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16058, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16048, metadata !DIExpression()), !dbg !16061
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16072
  br i1 %22, label %23, label %24, !dbg !16069

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16072
  br label %32, !dbg !16073

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16048, metadata !DIExpression()), !dbg !16061
  %26 = load i32, i32* %4, align 4, !dbg !16074
  %27 = add nsw i32 %26, 1, !dbg !16074
  store i32 %27, i32* %4, align 4, !dbg !16074
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16076
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16076
  store i32 %26, i32* %29, align 8, !dbg !16077
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16070
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16058, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16048, metadata !DIExpression()), !dbg !16061
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16072
  br i1 %31, label %23, label %24, !dbg !16069, !llvm.loop !16078

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16080
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16081
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16082
  ret void, !dbg !16083
}

; Function Attrs: optsize
declare !dbg !16084 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16089 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16092 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16094, metadata !DIExpression()), !dbg !16096
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16095, metadata !DIExpression()), !dbg !16096
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16097
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16098
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16099
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16100
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16100
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16102
  br i1 %7, label %8, label %10, !dbg !16103

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16104
  store i32 0, i32* %9, align 4, !dbg !16106
  br label %10, !dbg !16107

10:                                               ; preds = %8, %2
  ret void, !dbg !16108
}

; Function Attrs: optsize
declare !dbg !16109 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16110 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16114, metadata !DIExpression()), !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16115, metadata !DIExpression()), !dbg !16117
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16118
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16119
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16116, metadata !DIExpression()), !dbg !16117
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16115, metadata !DIExpression()), !dbg !16117
  ret %struct.k_thread* %4, !dbg !16120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16121 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16125, metadata !DIExpression()), !dbg !16126
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16127
  ret %struct.rbnode* %2, !dbg !16128
}

; Function Attrs: optsize
declare !dbg !16129 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16132 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16144, metadata !DIExpression()), !dbg !16148
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16149
  %3 = load i32, i32* %2, align 4, !dbg !16149
  %4 = icmp eq i32 %3, 0, !dbg !16151
  br i1 %4, label %10, label %5, !dbg !16152

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16145, metadata !DIExpression()), !dbg !16148
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16153, !range !8220
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16154
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16146, metadata !DIExpression()), !dbg !16148
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16155
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16147, metadata !DIExpression()), !dbg !16148
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16145, metadata !DIExpression()), !dbg !16148
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16148
  ret %struct.k_thread* %11, !dbg !16156
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16157 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16161, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 0, metadata !16162, metadata !DIExpression()), !dbg !16164
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16163, metadata !DIExpression()), !dbg !16164
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16166
  br i1 %3, label %8, label %4, !dbg !16167

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16168
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16170
  call void @llvm.dbg.value(metadata i32 1, metadata !16162, metadata !DIExpression()), !dbg !16164
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16163, metadata !DIExpression()), !dbg !16164
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16166
  br i1 %7, label %8, label %4, !dbg !16167, !llvm.loop !16171

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16164
  ret i32 %9, !dbg !16173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !16174 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16176, metadata !DIExpression()), !dbg !16177
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16178
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16179
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16180
  ret %struct.k_thread* %4, !dbg !16181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !16182 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16191, metadata !DIExpression()), !dbg !16192
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16193
  tail call fastcc void @sys_dlist_init.236(%struct._dnode* noundef nonnull %2) #24, !dbg !16194
  ret void, !dbg !16195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.236(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !16196 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16200, metadata !DIExpression()), !dbg !16201
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16202
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16203
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16204
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16205
  ret void, !dbg !16206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16207 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16208
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16209
  ret void, !dbg !16210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16216, metadata !DIExpression()), !dbg !16217
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16218
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16218
  %4 = load i8, i8* %3, align 2, !dbg !16218
  %5 = sext i8 %4 to i32, !dbg !16219
  ret i32 %5, !dbg !16220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16225, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata i32 %1, metadata !16226, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16227, metadata !DIExpression()), !dbg !16228
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16229
  ret void, !dbg !16230
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16231 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16232
  br i1 %1, label %8, label %2, !dbg !16233

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16234
  br i1 %3, label %8, label %4, !dbg !16235

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16236
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16237
  %7 = xor i1 %6, true, !dbg !16235
  br label %8, !dbg !16235

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !16239 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16240, !range !7409
  %2 = icmp eq i8 %1, 0, !dbg !16240
  ret i1 %2, !dbg !16241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16242 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !16245
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16247, !srcloc !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #23, !dbg !16249
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !16249
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #23, !dbg !16245
  call void @llvm.dbg.value(metadata i32 undef, metadata !16244, metadata !DIExpression()), !dbg !16250
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14907, metadata !DIExpression()) #23, !dbg !16254
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16256
  %4 = load i8, i8* %3, align 1, !dbg !16257
  %5 = and i8 %4, 127, !dbg !16257
  store i8 %5, i8* %3, align 1, !dbg !16257
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14915, metadata !DIExpression()) #23, !dbg !16258
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16260
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16261
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14924, metadata !DIExpression()) #23, !dbg !16262
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16264
  %8 = load i8, i8* %7, align 1, !dbg !16265
  %9 = or i8 %8, -128, !dbg !16265
  store i8 %9, i8* %7, align 1, !dbg !16265
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14931, metadata !DIExpression()) #23, !dbg !16266
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14938, metadata !DIExpression()) #23, !dbg !16268
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14944, metadata !DIExpression()) #23, !dbg !16268
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16270
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14945, metadata !DIExpression()) #23, !dbg !16268
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16271
  br i1 %11, label %22, label %12, !dbg !16270

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14945, metadata !DIExpression()) #23, !dbg !16268
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16272
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14945, metadata !DIExpression()) #23, !dbg !16268
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16273
  %16 = icmp sgt i32 %15, 0, !dbg !16274
  br i1 %16, label %17, label %19, !dbg !16275

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16276
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16277
  br label %24, !dbg !16278

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16271
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14945, metadata !DIExpression()) #23, !dbg !16268
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16271
  br i1 %21, label %22, label %12, !dbg !16270, !llvm.loop !16279

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16281
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16282
  br label %24, !dbg !16283

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %25, metadata !14750, metadata !DIExpression()) #23, !dbg !16249
  call void @llvm.dbg.value(metadata i32 %25, metadata !14744, metadata !DIExpression()) #23, !dbg !16245
  call void @llvm.dbg.value(metadata i32 %25, metadata !16244, metadata !DIExpression()), !dbg !16250
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !15349, metadata !DIExpression()) #23, !dbg !16285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15354, metadata !DIExpression()) #23, !dbg !16285
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16287
  ret void, !dbg !16288
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16289 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16293, metadata !DIExpression()), !dbg !16296
  %3 = icmp eq i64 %2, -1, !dbg !16297
  br i1 %3, label %4, label %6, !dbg !16299

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16300
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !16302
  br label %11, !dbg !16303

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16294, metadata !DIExpression()), !dbg !16296
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16304
  %8 = sext i32 %7 to i64, !dbg !16304
  call void @llvm.dbg.value(metadata i64 %8, metadata !16294, metadata !DIExpression()), !dbg !16296
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !16305
  %10 = trunc i64 %9 to i32, !dbg !16305
  call void @llvm.dbg.value(metadata i32 %10, metadata !16295, metadata !DIExpression()), !dbg !16296
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16296
  ret i32 %12, !dbg !16306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16307 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16311, metadata !DIExpression()), !dbg !16312
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16313, !srcloc !16315
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16316
  ret void, !dbg !16317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16318 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16322, metadata !DIExpression()), !dbg !16326
  %2 = icmp eq i64 %0, 0, !dbg !16327
  br i1 %2, label %3, label %4, !dbg !16329

3:                                                ; preds = %1
  tail call fastcc void @k_yield.243() #24, !dbg !16330
  br label %29, !dbg !16332

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16324, metadata !DIExpression()), !dbg !16326
  %5 = icmp sgt i64 %0, -3, !dbg !16333
  br i1 %5, label %6, label %10, !dbg !16335

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16336
  %8 = trunc i64 %0 to i32, !dbg !16338
  %9 = add i32 %7, %8, !dbg !16338
  call void @llvm.dbg.value(metadata i32 %9, metadata !16323, metadata !DIExpression()), !dbg !16326
  br label %13, !dbg !16339

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16340
  %12 = sub i32 -2, %11, !dbg !16340
  call void @llvm.dbg.value(metadata i32 %12, metadata !16323, metadata !DIExpression()), !dbg !16326
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16342
  call void @llvm.dbg.value(metadata i32 %14, metadata !16323, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !16343
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16345, !srcloc !14753
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16345
  call void @llvm.dbg.value(metadata i32 %16, metadata !14750, metadata !DIExpression()) #23, !dbg !16347
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !16347
  call void @llvm.dbg.value(metadata i32 %16, metadata !14744, metadata !DIExpression()) #23, !dbg !16343
  call void @llvm.dbg.value(metadata i32 %16, metadata !16325, metadata !DIExpression()), !dbg !16326
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16348
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16349
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !16350
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16351
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16352
  tail call fastcc void @z_add_thread_timeout.229(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !16352
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16353
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !16354
  call void @llvm.dbg.value(metadata i32 %16, metadata !15349, metadata !DIExpression()) #23, !dbg !16355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15354, metadata !DIExpression()) #23, !dbg !16355
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16357
  %22 = zext i32 %14 to i64, !dbg !16358
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16359
  %24 = zext i32 %23 to i64, !dbg !16359
  %25 = sub nsw i64 %22, %24, !dbg !16360
  call void @llvm.dbg.value(metadata i64 %25, metadata !16322, metadata !DIExpression()), !dbg !16326
  %26 = icmp sgt i64 %25, 0, !dbg !16361
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16361
  %28 = trunc i64 %27 to i32, !dbg !16361
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16326
  ret i32 %30, !dbg !16362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16363 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16365, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i64 %0, metadata !14785, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i32 10000, metadata !14788, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i32 1000, metadata !14789, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i8 1, metadata !14790, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i1 false, metadata !14791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16367
  call void @llvm.dbg.value(metadata i1 false, metadata !14792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16367
  call void @llvm.dbg.value(metadata i8 0, metadata !14793, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i1 false, metadata !14794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16367
  call void @llvm.dbg.value(metadata i1 true, metadata !14795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16367
  call void @llvm.dbg.value(metadata i64 0, metadata !14796, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i64 0, metadata !14796, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i64 %0, metadata !14785, metadata !DIExpression()), !dbg !16367
  %2 = udiv i64 %0, 10, !dbg !16369
  ret i64 %2, !dbg !16373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield.243() unnamed_addr #1 !dbg !16374 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16375, !srcloc !16377
  tail call void @z_impl_k_yield() #24, !dbg !16378
  ret void, !dbg !16379
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16384, metadata !DIExpression()), !dbg !16386
  %2 = sext i32 %0 to i64, !dbg !16387
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16388
  call void @llvm.dbg.value(metadata i64 %3, metadata !16385, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16386
  %4 = shl i64 %3, 32, !dbg !16389
  %5 = ashr exact i64 %4, 32, !dbg !16389
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16390
  call void @llvm.dbg.value(metadata i32 %6, metadata !16385, metadata !DIExpression()), !dbg !16386
  %7 = sext i32 %6 to i64, !dbg !16391
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16392
  %9 = trunc i64 %8 to i32, !dbg !16392
  ret i32 %9, !dbg !16393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16394 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16396, metadata !DIExpression()), !dbg !16397
  call void @llvm.dbg.value(metadata i64 %0, metadata !14785, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14788, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.value(metadata i32 10000, metadata !14789, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.value(metadata i8 1, metadata !14790, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.value(metadata i1 false, metadata !14791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16398
  call void @llvm.dbg.value(metadata i1 true, metadata !14792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16398
  call void @llvm.dbg.value(metadata i8 0, metadata !14793, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.value(metadata i1 false, metadata !14794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16398
  call void @llvm.dbg.value(metadata i1 true, metadata !14795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16398
  call void @llvm.dbg.value(metadata i64 0, metadata !14796, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.value(metadata i64 0, metadata !14796, metadata !DIExpression()), !dbg !16398
  %2 = add i64 %0, 99, !dbg !16400
  call void @llvm.dbg.value(metadata i64 %2, metadata !14785, metadata !DIExpression()), !dbg !16398
  %3 = udiv i64 %2, 100, !dbg !16401
  ret i64 %3, !dbg !16402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16403 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16405, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i64 %0, metadata !14785, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 10000, metadata !14788, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14789, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i8 1, metadata !14790, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i1 false, metadata !14791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16407
  call void @llvm.dbg.value(metadata i1 false, metadata !14792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16407
  call void @llvm.dbg.value(metadata i8 0, metadata !14793, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i1 true, metadata !14794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16407
  call void @llvm.dbg.value(metadata i1 false, metadata !14795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16407
  call void @llvm.dbg.value(metadata i64 0, metadata !14796, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i64 0, metadata !14796, metadata !DIExpression()), !dbg !16407
  %2 = mul i64 %0, 100, !dbg !16409
  ret i64 %2, !dbg !16411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16414, metadata !DIExpression()), !dbg !16415
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16416
  br i1 %2, label %14, label %3, !dbg !16418

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16419
  %5 = icmp slt i32 %4, 0, !dbg !16421
  br i1 %5, label %6, label %10, !dbg !16422

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16423
  %8 = load i8, i8* %7, align 1, !dbg !16423
  %9 = icmp eq i8 %8, 16, !dbg !16426
  br i1 %9, label %10, label %14, !dbg !16427

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16428
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16429
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16430, !srcloc !15389
  call void @llvm.dbg.value(metadata i32 %11, metadata !15385, metadata !DIExpression()) #23, !dbg !16434
  %12 = icmp eq i32 %11, 0, !dbg !16435
  br i1 %12, label %13, label %14, !dbg !16436

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16437
  br label %14, !dbg !16439

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16443, metadata !DIExpression()), !dbg !16444
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16445
  %3 = load i8, i8* %2, align 1, !dbg !16445
  %4 = and i8 %3, 2, !dbg !16446
  %5 = icmp ne i8 %4, 0, !dbg !16447
  ret i1 %5, !dbg !16448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !16449 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16454
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16453, metadata !DIExpression()), !dbg !16455
  ret %struct.k_thread* %1, !dbg !16456
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16457 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16458, !srcloc !15389
  call void @llvm.dbg.value(metadata i32 %1, metadata !15385, metadata !DIExpression()) #23, !dbg !16461
  %2 = icmp eq i32 %1, 0, !dbg !16462
  br i1 %2, label %3, label %8, !dbg !16463

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16464
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16465
  %6 = icmp ne i32 %5, 0, !dbg !16463
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16469, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !16472
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16474, !srcloc !14753
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16474
  call void @llvm.dbg.value(metadata i32 %3, metadata !14750, metadata !DIExpression()) #23, !dbg !16476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !16476
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #23, !dbg !16472
  call void @llvm.dbg.value(metadata i32 %3, metadata !16470, metadata !DIExpression()), !dbg !16471
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16477
  %5 = load i8, i8* %4, align 4, !dbg !16477
  %6 = and i8 %5, 1, !dbg !16479
  %7 = icmp eq i8 %6, 0, !dbg !16480
  br i1 %7, label %9, label %8, !dbg !16481

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !16482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !16482
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !16485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16487, !srcloc !14779
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !16488, !srcloc !16490
  br label %24, !dbg !16491

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16492
  %11 = load i8, i8* %10, align 1, !dbg !16492
  %12 = and i8 %11, 8, !dbg !16494
  %13 = icmp eq i8 %12, 0, !dbg !16495
  br i1 %13, label %15, label %14, !dbg !16496

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !16497
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !16497
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !16500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16502, !srcloc !14779
  br label %24, !dbg !16503

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16504
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16505
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16507
  br i1 %17, label %18, label %23, !dbg !16508

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16509, !srcloc !15389
  call void @llvm.dbg.value(metadata i32 %19, metadata !15385, metadata !DIExpression()) #23, !dbg !16512
  %20 = icmp eq i32 %19, 0, !dbg !16513
  br i1 %20, label %21, label %23, !dbg !16514

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15349, metadata !DIExpression()) #23, !dbg !16515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15354, metadata !DIExpression()) #23, !dbg !16515
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16518
  br label %23, !dbg !16519

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !16520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !16520
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()) #23, !dbg !16522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16524, !srcloc !14779
  br label %24, !dbg !16525

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16528, metadata !DIExpression()), !dbg !16529
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16530
  %3 = load i8, i8* %2, align 1, !dbg !16530
  %4 = and i8 %3, 8, !dbg !16532
  %5 = icmp eq i8 %4, 0, !dbg !16533
  br i1 %5, label %6, label %20, !dbg !16534

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16535
  %8 = or i8 %7, 8, !dbg !16535
  store i8 %8, i8* %2, align 1, !dbg !16535
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16537
  br i1 %9, label %10, label %12, !dbg !16539

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()) #23, !dbg !16540
  %11 = and i8 %8, 95, !dbg !16543
  store i8 %11, i8* %2, align 1, !dbg !16543
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14915, metadata !DIExpression()) #23, !dbg !16544
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16546
  br label %12, !dbg !16547

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16548
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16548
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16550
  br i1 %15, label %17, label %16, !dbg !16551

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16552
  br label %17, !dbg !16554

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16555
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16556
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16557
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16558
  br label %20, !dbg !16559

20:                                               ; preds = %17, %1
  ret void, !dbg !16560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16561 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16565, metadata !DIExpression()), !dbg !16567
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16568
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16566, metadata !DIExpression()), !dbg !16567
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16569
  br i1 %3, label %10, label %4, !dbg !16570

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16571
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16573
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16574, metadata !DIExpression()), !dbg !16580
  call void @llvm.dbg.value(metadata i32 0, metadata !16579, metadata !DIExpression()), !dbg !16580
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16582
  store i32 0, i32* %7, align 4, !dbg !16583
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16584
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16568
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16566, metadata !DIExpression()), !dbg !16567
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16569
  br i1 %9, label %10, label %4, !dbg !16570, !llvm.loop !16585

10:                                               ; preds = %4, %1
  ret void, !dbg !16587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16588 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16593, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16592, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !16597
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16599, !srcloc !14753
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16599
  call void @llvm.dbg.value(metadata i32 %4, metadata !14750, metadata !DIExpression()) #23, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !16601
  call void @llvm.dbg.value(metadata i32 %4, metadata !14744, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 %4, metadata !16594, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata i32 0, metadata !16595, metadata !DIExpression()), !dbg !16596
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16602
  %6 = load i8, i8* %5, align 1, !dbg !16602
  %7 = and i8 %6, 8, !dbg !16604
  %8 = icmp eq i8 %7, 0, !dbg !16605
  br i1 %8, label %9, label %24, !dbg !16606

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16593, metadata !DIExpression()), !dbg !16596
  %11 = icmp eq i64 %10, 0, !dbg !16607
  br i1 %11, label %24, label %12, !dbg !16609

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16610
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16612
  br i1 %14, label %24, label %15, !dbg !16613

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16614
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !16614
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16615
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !16616
  br i1 %19, label %24, label %20, !dbg !16617

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16618
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !16620
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16621
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !16622
  call void @llvm.dbg.value(metadata i32 %4, metadata !15349, metadata !DIExpression()) #23, !dbg !16623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15354, metadata !DIExpression()) #23, !dbg !16623
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16625
  call void @llvm.dbg.value(metadata i32 %23, metadata !16595, metadata !DIExpression()), !dbg !16596
  br label %26, !dbg !16626

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16627
  call void @llvm.dbg.value(metadata i32 %25, metadata !16595, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata i32 %4, metadata !14765, metadata !DIExpression()) #23, !dbg !16628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !16628
  call void @llvm.dbg.value(metadata i32 %4, metadata !14773, metadata !DIExpression()) #23, !dbg !16630
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16632, !srcloc !14779
  br label %26, !dbg !16633

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16596
  ret i32 %27, !dbg !16634
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16635 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16639, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i32 %1, metadata !16640, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i8* %2, metadata !16641, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i8 0, metadata !16643, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i32 0, metadata !16644, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14738, metadata !DIExpression()) #23, !dbg !16649
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16651, !srcloc !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #23, !dbg !16653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()) #23, !dbg !16653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #23, !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16646, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i8 poison, metadata !16643, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i32 undef, metadata !16644, metadata !DIExpression()), !dbg !16648
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !16654
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16642, metadata !DIExpression()), !dbg !16647
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16657
  br i1 %7, label %12, label %8, !dbg !16659

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16660, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i32 %1, metadata !16666, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i8* %2, metadata !16667, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16574, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 %1, metadata !16579, metadata !DIExpression()), !dbg !16671
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16673
  store i32 %1, i32* %9, align 4, !dbg !16674
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16675
  store i8* %2, i8** %10, align 4, !dbg !16676
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16677
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16678
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !16679
  call void @llvm.dbg.value(metadata i8 1, metadata !16643, metadata !DIExpression()), !dbg !16647
  br label %12, !dbg !16680

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16651
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16651
  call void @llvm.dbg.value(metadata i32 %14, metadata !14750, metadata !DIExpression()) #23, !dbg !16653
  call void @llvm.dbg.value(metadata i32 %14, metadata !14744, metadata !DIExpression()) #23, !dbg !16649
  call void @llvm.dbg.value(metadata i32 %14, metadata !16646, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i8 poison, metadata !16643, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !16681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14770, metadata !DIExpression()) #23, !dbg !16681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #23, !dbg !16683
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16685, !srcloc !14779
  call void @llvm.dbg.value(metadata i32 undef, metadata !16644, metadata !DIExpression()), !dbg !16648
  ret i1 %13, !dbg !16686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16687 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata i64 undef, metadata !16695, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16692, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16694, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata i8** %4, metadata !16696, metadata !DIExpression()), !dbg !16698
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16699
  call void @llvm.dbg.value(metadata i32 %6, metadata !16697, metadata !DIExpression()), !dbg !16698
  %7 = icmp eq i8** %4, null, !dbg !16700
  br i1 %7, label %12, label %8, !dbg !16702

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16703
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16705
  %11 = load i8*, i8** %10, align 4, !dbg !16705
  store i8* %11, i8** %4, align 4, !dbg !16706
  br label %12, !dbg !16707

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16708
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16709 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16711
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16712
  ret void, !dbg !16713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16714 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16724, metadata !DIExpression()), !dbg !16741
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16722, metadata !DIExpression()), !dbg !16741
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16723, metadata !DIExpression()), !dbg !16741
  %5 = icmp eq i64 %4, -1, !dbg !16742
  br i1 %5, label %55, label %6, !dbg !16744

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16745
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16746
  call void @llvm.dbg.value(metadata i32 0, metadata !16725, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !16755
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16757, !srcloc !16763
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16757
  call void @llvm.dbg.value(metadata i32 %9, metadata !16760, metadata !DIExpression()) #23, !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !16764
  call void @llvm.dbg.value(metadata i32 %9, metadata !16754, metadata !DIExpression()) #23, !dbg !16755
  call void @llvm.dbg.value(metadata i32 %9, metadata !16731, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata i32 undef, metadata !16725, metadata !DIExpression()), !dbg !16747
  %10 = icmp slt i64 %4, -1, !dbg !16765
  br i1 %10, label %11, label %17, !dbg !16766

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16767
  %13 = add i64 %4, %12, !dbg !16768
  %14 = sub i64 -2, %13, !dbg !16768
  call void @llvm.dbg.value(metadata i64 %14, metadata !16735, metadata !DIExpression()), !dbg !16769
  %15 = icmp sgt i64 %14, 1, !dbg !16770
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16770
  br label %22, !dbg !16771

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16772
  %19 = tail call fastcc i32 @elapsed.252() #24, !dbg !16774
  %20 = sext i32 %19 to i64, !dbg !16774
  %21 = add nsw i64 %18, %20, !dbg !16775
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16776
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16777
  store i64 %23, i64* %24, align 8, !dbg !16778
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !16779
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16732, metadata !DIExpression()), !dbg !16781
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16782
  br i1 %26, label %42, label %27, !dbg !16782

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16783
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16732, metadata !DIExpression()), !dbg !16781
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16787
  %31 = load i64, i64* %30, align 8, !dbg !16787
  %32 = icmp slt i64 %28, %31, !dbg !16788
  br i1 %32, label %33, label %38, !dbg !16789

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16787
  %35 = sub nsw i64 %31, %28, !dbg !16790
  store i64 %35, i64* %34, align 8, !dbg !16790
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16792
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16793
  tail call fastcc void @sys_dlist_insert.253(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !16794
  br label %44, !dbg !16795

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16796
  store i64 %39, i64* %24, align 8, !dbg !16796
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !16797
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16732, metadata !DIExpression()), !dbg !16781
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16782
  br i1 %41, label %42, label %27, !dbg !16782, !llvm.loop !16798

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16800
  tail call fastcc void @sys_dlist_append.254(%struct._dnode* noundef %43) #24, !dbg !16803
  br label %44, !dbg !16804

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !16805
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16806
  br i1 %46, label %47, label %54, !dbg !16807

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !16808
  call void @llvm.dbg.value(metadata i32 %48, metadata !16738, metadata !DIExpression()), !dbg !16809
  %49 = icmp ne i32 %48, 0, !dbg !16810
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16812
  br i1 %52, label %54, label %53, !dbg !16812

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16813
  br label %54, !dbg !16815

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16816, metadata !DIExpression()) #23, !dbg !16822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !16822
  call void @llvm.dbg.value(metadata i32 %9, metadata !16824, metadata !DIExpression()) #23, !dbg !16827
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16829, !srcloc !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !16725, metadata !DIExpression()), !dbg !16747
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.252() unnamed_addr #1 !dbg !16832 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16835
  %2 = icmp eq i32 %1, 0, !dbg !16836
  br i1 %2, label %3, label %5, !dbg !16835

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16837
  br label %5, !dbg !16835

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16835
  ret i32 %6, !dbg !16838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16839 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.257() #24, !dbg !16845
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16843, metadata !DIExpression()), !dbg !16846
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16847
  ret %struct._timeout* %2, !dbg !16848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.253(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16849 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16853, metadata !DIExpression()), !dbg !16857
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16854, metadata !DIExpression()), !dbg !16857
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16858
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16858
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16855, metadata !DIExpression()), !dbg !16857
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16859
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16860
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16861
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16862
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16863
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16864
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16865
  ret void, !dbg !16866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16867 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16871, metadata !DIExpression()), !dbg !16873
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16874
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.255(%struct._dnode* noundef %2) #24, !dbg !16875
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16872, metadata !DIExpression()), !dbg !16873
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16876
  ret %struct._timeout* %4, !dbg !16877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.254(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16878 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16883, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16884, metadata !DIExpression()), !dbg !16886
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16887
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16885, metadata !DIExpression()), !dbg !16886
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16888
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16889
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16890
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16891
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16892
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16893
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16894
  ret void, !dbg !16895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16896 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16901
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16898, metadata !DIExpression()), !dbg !16902
  %2 = tail call fastcc i32 @elapsed.252() #24, !dbg !16903
  call void @llvm.dbg.value(metadata i32 %2, metadata !16899, metadata !DIExpression()), !dbg !16902
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16904
  br i1 %3, label %14, label %4, !dbg !16906

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16907
  %6 = load i64, i64* %5, align 8, !dbg !16907
  %7 = sext i32 %2 to i64, !dbg !16908
  %8 = sub nsw i64 %6, %7, !dbg !16909
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16910
  br i1 %9, label %14, label %10, !dbg !16911

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16912
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16912
  %13 = trunc i64 %12 to i32, !dbg !16912
  call void @llvm.dbg.value(metadata i32 %13, metadata !16900, metadata !DIExpression()), !dbg !16902
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16914
  call void @llvm.dbg.value(metadata i32 %15, metadata !16900, metadata !DIExpression()), !dbg !16902
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16915
  %17 = icmp ne i32 %16, 0, !dbg !16917
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16918
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16918
  call void @llvm.dbg.value(metadata i32 %20, metadata !16900, metadata !DIExpression()), !dbg !16902
  ret i32 %20, !dbg !16919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.255(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16920 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16924, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16925, metadata !DIExpression()), !dbg !16926
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16927
  br i1 %2, label %5, label %3, !dbg !16928

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.256(%struct._dnode* noundef nonnull %0) #24, !dbg !16929
  br label %5, !dbg !16928

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16928
  ret %struct._dnode* %6, !dbg !16930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.256(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16931 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16933, metadata !DIExpression()), !dbg !16935
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16934, metadata !DIExpression()), !dbg !16935
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16936
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16937
  br i1 %3, label %7, label %4, !dbg !16938

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16939
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16939
  br label %7, !dbg !16938

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16938
  ret %struct._dnode* %8, !dbg !16940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.257() unnamed_addr #10 !dbg !16941 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16945, metadata !DIExpression()), !dbg !16946
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.258() #24, !dbg !16947
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16947
  ret %struct._dnode* %3, !dbg !16948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.258() unnamed_addr #10 !dbg !16949 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16953, metadata !DIExpression()), !dbg !16954
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16955
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16956
  ret i1 %2, !dbg !16957
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16958 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16962, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 -22, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 0, metadata !16964, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !16969
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16971, !srcloc !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #23, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !16969
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata i32 -22, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16964, metadata !DIExpression()), !dbg !16968
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16963, metadata !DIExpression()), !dbg !16967
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.261(%struct._dnode* noundef %3) #24, !dbg !16974
  br i1 %4, label %5, label %6, !dbg !16978

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16979
  call void @llvm.dbg.value(metadata i32 0, metadata !16963, metadata !DIExpression()), !dbg !16967
  br label %6, !dbg !16981

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16967
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16971
  call void @llvm.dbg.value(metadata i32 %8, metadata !16760, metadata !DIExpression()) #23, !dbg !16973
  call void @llvm.dbg.value(metadata i32 %8, metadata !16754, metadata !DIExpression()) #23, !dbg !16969
  call void @llvm.dbg.value(metadata i32 %8, metadata !16966, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata i32 %7, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16816, metadata !DIExpression()) #23, !dbg !16982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !16824, metadata !DIExpression()) #23, !dbg !16984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16986, !srcloc !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !16964, metadata !DIExpression()), !dbg !16968
  ret i32 %7, !dbg !16987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.261(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16988 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16994, metadata !DIExpression()), !dbg !16995
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16996
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16996
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16997
  ret i1 %4, !dbg !16998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !16999 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17001, metadata !DIExpression()), !dbg !17002
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17003
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17005
  br i1 %3, label %10, label %4, !dbg !17006

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17007
  %6 = load i64, i64* %5, align 8, !dbg !17007
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17009
  %8 = load i64, i64* %7, align 8, !dbg !17010
  %9 = add nsw i64 %8, %6, !dbg !17010
  store i64 %9, i64* %7, align 8, !dbg !17010
  br label %10, !dbg !17011

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17012
  tail call fastcc void @sys_dlist_remove.262(%struct._dnode* noundef %11) #24, !dbg !17013
  ret void, !dbg !17014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.262(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !17015 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17019, metadata !DIExpression()), !dbg !17022
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17023
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17023
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17020, metadata !DIExpression()), !dbg !17022
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17024
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17024
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17021, metadata !DIExpression()), !dbg !17022
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17025
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17026
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17027
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17028
  tail call fastcc void @sys_dnode_init.263(%struct._dnode* noundef %0) #24, !dbg !17029
  ret void, !dbg !17030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.263(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17031 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17033, metadata !DIExpression()), !dbg !17034
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17035
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17036
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17037
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17038
  ret void, !dbg !17039
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17040 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17046, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata i64 0, metadata !17047, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata i32 0, metadata !17048, metadata !DIExpression()), !dbg !17052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !17053
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17055, !srcloc !16763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17055
  call void @llvm.dbg.value(metadata i32 %3, metadata !16760, metadata !DIExpression()) #23, !dbg !17057
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !17057
  call void @llvm.dbg.value(metadata i32 %3, metadata !16754, metadata !DIExpression()) #23, !dbg !17053
  call void @llvm.dbg.value(metadata i32 %3, metadata !17050, metadata !DIExpression()), !dbg !17052
  call void @llvm.dbg.value(metadata i64 0, metadata !17047, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata i32 undef, metadata !17048, metadata !DIExpression()), !dbg !17052
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17058
  call void @llvm.dbg.value(metadata i64 %4, metadata !17047, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata i32 %3, metadata !16816, metadata !DIExpression()) #23, !dbg !17061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !17061
  call void @llvm.dbg.value(metadata i32 %3, metadata !16824, metadata !DIExpression()) #23, !dbg !17063
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17065, !srcloc !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !17048, metadata !DIExpression()), !dbg !17052
  ret i64 %4, !dbg !17066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17067 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17069, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i64 0, metadata !17070, metadata !DIExpression()), !dbg !17073
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.264(%struct._timeout* noundef %0) #24, !dbg !17074
  br i1 %2, label %21, label %3, !dbg !17076

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17077
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17071, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i64 0, metadata !17070, metadata !DIExpression()), !dbg !17073
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17079
  br i1 %5, label %16, label %6, !dbg !17081

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17071, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i64 %8, metadata !17070, metadata !DIExpression()), !dbg !17073
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17082
  %10 = load i64, i64* %9, align 8, !dbg !17082
  %11 = add nsw i64 %10, %8, !dbg !17084
  call void @llvm.dbg.value(metadata i64 %11, metadata !17070, metadata !DIExpression()), !dbg !17073
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17085
  br i1 %12, label %16, label %13, !dbg !17087

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17088
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17071, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i64 %11, metadata !17070, metadata !DIExpression()), !dbg !17073
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17079
  br i1 %15, label %16, label %6, !dbg !17081, !llvm.loop !17089

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17073
  call void @llvm.dbg.value(metadata i64 %17, metadata !17070, metadata !DIExpression()), !dbg !17073
  %18 = tail call fastcc i32 @elapsed.252() #24, !dbg !17091
  %19 = sext i32 %18 to i64, !dbg !17091
  %20 = sub nsw i64 %17, %19, !dbg !17092
  br label %21, !dbg !17093

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17073
  ret i64 %22, !dbg !17094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.264(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17095 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17099, metadata !DIExpression()), !dbg !17100
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17101
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.261(%struct._dnode* noundef %2) #24, !dbg !17102
  %4 = xor i1 %3, true, !dbg !17103
  ret i1 %4, !dbg !17104
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17105 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17107, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i64 0, metadata !17108, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i32 0, metadata !17109, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !17114
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17116, !srcloc !16763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17116
  call void @llvm.dbg.value(metadata i32 %3, metadata !16760, metadata !DIExpression()) #23, !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %3, metadata !16754, metadata !DIExpression()) #23, !dbg !17114
  call void @llvm.dbg.value(metadata i32 %3, metadata !17111, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.value(metadata i64 0, metadata !17108, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17113
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17119
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17122
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17108, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17112
  call void @llvm.dbg.value(metadata i32 %3, metadata !16816, metadata !DIExpression()) #23, !dbg !17123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !17123
  call void @llvm.dbg.value(metadata i32 %3, metadata !16824, metadata !DIExpression()) #23, !dbg !17125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17127, !srcloc !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17113
  %6 = add i64 %5, %4, !dbg !17128
  ret i64 %6, !dbg !17129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17130 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17132, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata i32 0, metadata !17133, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !17138
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17140, !srcloc !16763
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17140
  call void @llvm.dbg.value(metadata i32 %2, metadata !16760, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata i32 %2, metadata !16754, metadata !DIExpression()) #23, !dbg !17138
  call void @llvm.dbg.value(metadata i32 %2, metadata !17135, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata i32 -1, metadata !17132, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata i32 undef, metadata !17133, metadata !DIExpression()), !dbg !17137
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !17143
  call void @llvm.dbg.value(metadata i32 %3, metadata !17132, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata i32 %2, metadata !16816, metadata !DIExpression()) #23, !dbg !17146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !17146
  call void @llvm.dbg.value(metadata i32 %2, metadata !16824, metadata !DIExpression()) #23, !dbg !17148
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17150, !srcloc !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !17133, metadata !DIExpression()), !dbg !17137
  ret i32 %3, !dbg !17151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17154, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i1 %1, metadata !17155, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17164
  call void @llvm.dbg.value(metadata i32 0, metadata !17156, metadata !DIExpression()), !dbg !17165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !17166
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17168, !srcloc !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #23, !dbg !17170
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !17170
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17166
  call void @llvm.dbg.value(metadata i32 undef, metadata !17158, metadata !DIExpression()), !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !17156, metadata !DIExpression()), !dbg !17165
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !17171
  call void @llvm.dbg.value(metadata i32 %4, metadata !17159, metadata !DIExpression()), !dbg !17172
  call void @llvm.dbg.value(metadata i1 undef, metadata !17162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17172
  %5 = icmp slt i32 %4, 2, !dbg !17173
  call void @llvm.dbg.value(metadata i1 %5, metadata !17163, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17172
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17174
  call void @llvm.dbg.value(metadata i1 %6, metadata !17162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17172
  br i1 %7, label %11, label %8, !dbg !17174

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17176
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17176
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17178
  br label %11, !dbg !17179

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17168
  call void @llvm.dbg.value(metadata i32 %12, metadata !16760, metadata !DIExpression()) #23, !dbg !17170
  call void @llvm.dbg.value(metadata i32 %12, metadata !16754, metadata !DIExpression()) #23, !dbg !17166
  call void @llvm.dbg.value(metadata i32 %12, metadata !17158, metadata !DIExpression()), !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !16816, metadata !DIExpression()) #23, !dbg !17180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !16824, metadata !DIExpression()) #23, !dbg !17182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17184, !srcloc !16830
  call void @llvm.dbg.value(metadata i32 1, metadata !17156, metadata !DIExpression()), !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !17156, metadata !DIExpression()), !dbg !17165
  ret void, !dbg !17185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17190, metadata !DIExpression()), !dbg !17195
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !17197
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17199, !srcloc !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #23, !dbg !17201
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !17201
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17197
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17195
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17195
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !17202
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17203
  br i1 %4, label %28, label %5, !dbg !17204

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17205
  %10 = load i64, i64* %9, align 8, !dbg !17205
  %11 = sext i32 %8 to i64, !dbg !17206
  %12 = icmp sgt i64 %10, %11, !dbg !17207
  br i1 %12, label %26, label %13, !dbg !17208

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17195
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17192, metadata !DIExpression()), !dbg !17209
  %15 = trunc i64 %10 to i32, !dbg !17210
  call void @llvm.dbg.value(metadata i32 %15, metadata !17194, metadata !DIExpression()), !dbg !17209
  %16 = sext i32 %15 to i64, !dbg !17211
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17212
  %18 = add i64 %17, %16, !dbg !17212
  store i64 %18, i64* @curr_tick, align 8, !dbg !17212
  store i64 0, i64* %9, align 8, !dbg !17213
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !17214
  call void @llvm.dbg.value(metadata i32 %14, metadata !16816, metadata !DIExpression()) #23, !dbg !17215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !17215
  call void @llvm.dbg.value(metadata i32 %14, metadata !16824, metadata !DIExpression()) #23, !dbg !17217
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17219, !srcloc !16830
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17220
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17220
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17221
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !17222
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17224, !srcloc !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #23, !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17195
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17227
  %23 = sub nsw i32 %22, %15, !dbg !17227
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17195
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !17202
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17203
  br i1 %25, label %28, label %5, !dbg !17204, !llvm.loop !17228

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17230
  store i64 %27, i64* %9, align 8, !dbg !17230
  br label %32, !dbg !17233

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17195
  %31 = sext i32 %30 to i64, !dbg !17234
  br label %32, !dbg !17234

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17234
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17195
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17235
  %37 = add i64 %36, %33, !dbg !17235
  store i64 %37, i64* @curr_tick, align 8, !dbg !17235
  store i32 0, i32* @announce_remaining, align 4, !dbg !17236
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !17237
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17238
  call void @llvm.dbg.value(metadata i32 %35, metadata !16816, metadata !DIExpression()) #23, !dbg !17239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !17239
  call void @llvm.dbg.value(metadata i32 %35, metadata !16824, metadata !DIExpression()) #23, !dbg !17241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17243, !srcloc !16830
  ret void, !dbg !17244
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17245 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17249, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i32 0, metadata !17250, metadata !DIExpression()), !dbg !17254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16748, metadata !DIExpression()) #23, !dbg !17255
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17257, !srcloc !16763
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17257
  call void @llvm.dbg.value(metadata i32 %2, metadata !16760, metadata !DIExpression()) #23, !dbg !17259
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()) #23, !dbg !17259
  call void @llvm.dbg.value(metadata i32 %2, metadata !16754, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 %2, metadata !17252, metadata !DIExpression()), !dbg !17254
  call void @llvm.dbg.value(metadata i64 0, metadata !17249, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !17250, metadata !DIExpression()), !dbg !17254
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17260
  %4 = tail call fastcc i32 @elapsed.252() #24, !dbg !17263
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17253
  call void @llvm.dbg.value(metadata i32 %2, metadata !16816, metadata !DIExpression()) #23, !dbg !17264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16821, metadata !DIExpression()) #23, !dbg !17264
  call void @llvm.dbg.value(metadata i32 %2, metadata !16824, metadata !DIExpression()) #23, !dbg !17266
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17268, !srcloc !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !17250, metadata !DIExpression()), !dbg !17254
  %5 = sext i32 %4 to i64, !dbg !17263
  %6 = add i64 %3, %5, !dbg !17269
  ret i64 %6, !dbg !17270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17271 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17272
  %2 = trunc i64 %1 to i32, !dbg !17273
  ret i32 %2, !dbg !17274
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17275 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17276
  ret i64 %1, !dbg !17277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17280, metadata !DIExpression()), !dbg !17287
  %2 = icmp eq i32 %0, 0, !dbg !17288
  br i1 %2, label %10, label %3, !dbg !17290

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17291
  call void @llvm.dbg.value(metadata i32 %4, metadata !17281, metadata !DIExpression()), !dbg !17287
  %5 = mul i32 %0, 84, !dbg !17292
  call void @llvm.dbg.value(metadata i32 %5, metadata !17282, metadata !DIExpression()), !dbg !17287
  br label %6, !dbg !17293

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %7, metadata !17283, metadata !DIExpression()), !dbg !17295
  %8 = sub i32 %7, %4, !dbg !17296
  %9 = icmp ult i32 %8, %5, !dbg !17298
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17300 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17301
  ret i32 %1, !dbg !17302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17303 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17305
  ret i32 %1, !dbg !17306
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17307 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17311, metadata !DIExpression()), !dbg !17313
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17314

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17315
  br label %14, !dbg !17319

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17312, metadata !DIExpression()), !dbg !17313
  %6 = icmp slt i64 %2, -1, !dbg !17320
  br i1 %6, label %7, label %9, !dbg !17323

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17324
  br label %14, !dbg !17325

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17327
  %11 = icmp ugt i64 %2, 1, !dbg !17328
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17328
  %13 = add nsw i64 %10, %12, !dbg !17329
  br label %14, !dbg !17330

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17331
  ret i64 %15, !dbg !17332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_timer_expiration_handler(%struct._timeout* noundef %0) #1 !dbg !17333 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17335, metadata !DIExpression()), !dbg !17346
  %2 = bitcast %struct._timeout* %0 to %struct.k_timer*, !dbg !17347
  call void @llvm.dbg.value(metadata %struct.k_timer* %2, metadata !17336, metadata !DIExpression()), !dbg !17346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17348, metadata !DIExpression()) #23, !dbg !17355
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17357, !srcloc !17363
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17357
  call void @llvm.dbg.value(metadata i32 %4, metadata !17360, metadata !DIExpression()) #23, !dbg !17364
  call void @llvm.dbg.value(metadata i32 undef, metadata !17361, metadata !DIExpression()) #23, !dbg !17364
  call void @llvm.dbg.value(metadata i32 %4, metadata !17354, metadata !DIExpression()) #23, !dbg !17355
  call void @llvm.dbg.value(metadata i32 %4, metadata !17338, metadata !DIExpression()), !dbg !17346
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 2, !dbg !17365
  %6 = load i64, i64* %5, align 8, !dbg !17365
  switch i64 %6, label %7 [
    i64 0, label %21
    i64 -1, label %21
  ], !dbg !17366

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 undef, metadata !17343, metadata !DIExpression()), !dbg !17367
  %8 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17368
  %9 = add nsw i64 %8, 1, !dbg !17368
  %10 = load i64, i64* %5, align 8, !dbg !17368
  %11 = add nsw i64 %9, %10, !dbg !17368
  %12 = icmp sgt i64 %11, 0, !dbg !17368
  br i1 %12, label %13, label %18, !dbg !17368

13:                                               ; preds = %7
  %14 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17368
  %15 = load i64, i64* %5, align 8, !dbg !17368
  %16 = add i64 %14, %15, !dbg !17368
  %17 = sub i64 -3, %16, !dbg !17368
  br label %18, !dbg !17368

18:                                               ; preds = %7, %13
  %19 = phi i64 [ %17, %13 ], [ -2, %7 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !17343, metadata !DIExpression()), !dbg !17367
  %20 = insertvalue [1 x i64] poison, i64 %19, 0, !dbg !17369
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %0, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %20) #25, !dbg !17369
  br label %21, !dbg !17370

21:                                               ; preds = %1, %1, %18
  %22 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 2, !dbg !17371
  %23 = bitcast %struct._timeout* %22 to i32*, !dbg !17371
  %24 = load i32, i32* %23, align 8, !dbg !17372
  %25 = add i32 %24, 1, !dbg !17372
  store i32 %25, i32* %23, align 8, !dbg !17372
  %26 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 1, !dbg !17373
  %27 = bitcast void (%struct._timeout*)** %26 to void (%struct.k_timer*)**, !dbg !17373
  %28 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17373
  %29 = icmp eq void (%struct.k_timer*)* %28, null, !dbg !17375
  br i1 %29, label %34, label %30, !dbg !17376

30:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %4, metadata !17377, metadata !DIExpression()) #23, !dbg !17383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17383
  call void @llvm.dbg.value(metadata i32 %4, metadata !17386, metadata !DIExpression()) #23, !dbg !17389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !17391, !srcloc !17392
  %31 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17393
  tail call void %31(%struct.k_timer* noundef nonnull %2) #25, !dbg !17394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17348, metadata !DIExpression()) #23, !dbg !17395
  %32 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17397, !srcloc !17363
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !17397
  call void @llvm.dbg.value(metadata i32 %33, metadata !17360, metadata !DIExpression()) #23, !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !17361, metadata !DIExpression()) #23, !dbg !17399
  call void @llvm.dbg.value(metadata i32 %33, metadata !17354, metadata !DIExpression()) #23, !dbg !17395
  call void @llvm.dbg.value(metadata i32 %33, metadata !17338, metadata !DIExpression()), !dbg !17346
  br label %34, !dbg !17400

34:                                               ; preds = %30, %21
  %35 = phi i32 [ %33, %30 ], [ %4, %21 ], !dbg !17346
  call void @llvm.dbg.value(metadata i32 %35, metadata !17338, metadata !DIExpression()), !dbg !17346
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, !dbg !17401
  %37 = bitcast %struct._timeout* %36 to %struct._wait_q_t*, !dbg !17401
  %38 = tail call fastcc %struct.k_thread* @z_waitq_head.271(%struct._wait_q_t* noundef nonnull %37) #24, !dbg !17402
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17337, metadata !DIExpression()), !dbg !17346
  %39 = icmp eq %struct.k_thread* %38, null, !dbg !17403
  br i1 %39, label %40, label %41, !dbg !17405

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %35, metadata !17377, metadata !DIExpression()) #23, !dbg !17406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17406
  call void @llvm.dbg.value(metadata i32 %35, metadata !17386, metadata !DIExpression()) #23, !dbg !17409
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17411, !srcloc !17392
  br label %43, !dbg !17412

41:                                               ; preds = %34
  tail call void @z_unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %38) #25, !dbg !17413
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17414, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata i32 0, metadata !17419, metadata !DIExpression()), !dbg !17420
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %38, i32 0, i32 7, i32 1, !dbg !17422
  store i32 0, i32* %42, align 4, !dbg !17423
  call void @llvm.dbg.value(metadata i32 %35, metadata !17377, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata i32 %35, metadata !17386, metadata !DIExpression()) #23, !dbg !17426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17428, !srcloc !17392
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %38) #25, !dbg !17429
  br label %43, !dbg !17430

43:                                               ; preds = %41, %40
  ret void, !dbg !17430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !17431 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17432, !srcloc !17434
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !17435
  ret i64 %1, !dbg !17436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.271(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17437 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17441, metadata !DIExpression()), !dbg !17442
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17443
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.272(%struct._dnode* noundef %2) #24, !dbg !17444
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17445
  ret %struct.k_thread* %4, !dbg !17446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.272(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17447 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17452, metadata !DIExpression()), !dbg !17453
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.273(%struct._dnode* noundef %0) #24, !dbg !17454
  br i1 %2, label %6, label %3, !dbg !17454

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17455
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17455
  br label %6, !dbg !17454

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17454
  ret %struct._dnode* %7, !dbg !17456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.273(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17457 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17461, metadata !DIExpression()), !dbg !17462
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17463
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17463
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17464
  ret i1 %4, !dbg !17465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_timer_init(%struct.k_timer* noundef %0, void (%struct.k_timer*)* noundef %1, void (%struct.k_timer*)* noundef %2) local_unnamed_addr #6 !dbg !17466 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17472, metadata !DIExpression()), !dbg !17475
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %1, metadata !17473, metadata !DIExpression()), !dbg !17475
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %2, metadata !17474, metadata !DIExpression()), !dbg !17475
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 2, !dbg !17476
  store void (%struct.k_timer*)* %1, void (%struct.k_timer*)** %4, align 8, !dbg !17477
  %5 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17478
  store void (%struct.k_timer*)* %2, void (%struct.k_timer*)** %5, align 4, !dbg !17479
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17480
  store i32 0, i32* %6, align 8, !dbg !17481
  %7 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17482
  tail call fastcc void @z_waitq_init.276(%struct._wait_q_t* noundef nonnull %7) #24, !dbg !17485
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17486
  tail call fastcc void @z_init_timeout.277(%struct._timeout* noundef %8) #24, !dbg !17487
  %9 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 6, !dbg !17488
  store i8* null, i8** %9, align 4, !dbg !17489
  ret void, !dbg !17490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.276(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17491 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17495, metadata !DIExpression()), !dbg !17496
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17497
  tail call fastcc void @sys_dlist_init.279(%struct._dnode* noundef %2) #24, !dbg !17498
  ret void, !dbg !17499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.277(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17500 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17502, metadata !DIExpression()), !dbg !17503
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17504
  tail call fastcc void @sys_dnode_init.278(%struct._dnode* noundef %2) #24, !dbg !17505
  ret void, !dbg !17506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.278(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17507 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17511, metadata !DIExpression()), !dbg !17512
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17513
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17514
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17515
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17516
  ret void, !dbg !17517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.279(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17518 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17522, metadata !DIExpression()), !dbg !17523
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17524
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17525
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17526
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17527
  ret void, !dbg !17528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17529 {
  %4 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17534, metadata !DIExpression()), !dbg !17536
  %5 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17535, metadata !DIExpression()), !dbg !17536
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17533, metadata !DIExpression()), !dbg !17536
  %6 = icmp eq i64 %4, -1, !dbg !17537
  br i1 %6, label %23, label %7, !dbg !17539

7:                                                ; preds = %3
  %8 = icmp sgt i64 %5, 0, !dbg !17540
  %9 = icmp sgt i64 %5, 2, !dbg !17540
  %10 = select i1 %9, i64 %5, i64 2, !dbg !17540
  %11 = add nsw i64 %10, -1, !dbg !17540
  %12 = select i1 %8, i64 %11, i64 %5, !dbg !17540
  call void @llvm.dbg.value(metadata i64 %12, metadata !17535, metadata !DIExpression()), !dbg !17536
  %13 = icmp sgt i64 %4, -2, !dbg !17542
  %14 = icmp sgt i64 %4, 1, !dbg !17544
  %15 = select i1 %14, i64 %4, i64 1, !dbg !17544
  %16 = add nsw i64 %15, -1, !dbg !17544
  %17 = select i1 %13, i64 %16, i64 %4, !dbg !17544
  call void @llvm.dbg.value(metadata i64 %17, metadata !17534, metadata !DIExpression()), !dbg !17536
  %18 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17545
  %19 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %18) #25, !dbg !17546
  %20 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 4, i32 0, !dbg !17547
  store i64 %12, i64* %20, align 8, !dbg !17547
  %21 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17548
  store i32 0, i32* %21, align 8, !dbg !17549
  %22 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !17550
  tail call void @z_add_timeout(%struct._timeout* noundef %18, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %22) #25, !dbg !17550
  br label %23, !dbg !17551

23:                                               ; preds = %3, %7
  ret void, !dbg !17551
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_stop(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17552 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17554, metadata !DIExpression()), !dbg !17559
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17560
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %2) #25, !dbg !17561
  %4 = icmp eq i32 %3, 0, !dbg !17562
  call void @llvm.dbg.value(metadata i1 %4, metadata !17555, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17559
  br i1 %4, label %5, label %15, !dbg !17563

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17564
  %7 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %6, align 4, !dbg !17564
  %8 = icmp eq void (%struct.k_timer*)* %7, null, !dbg !17566
  br i1 %8, label %10, label %9, !dbg !17567

9:                                                ; preds = %5
  tail call void %7(%struct.k_timer* noundef nonnull %0) #25, !dbg !17568
  br label %10, !dbg !17570

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17571
  %12 = tail call %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef nonnull %11) #25, !dbg !17572
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !17556, metadata !DIExpression()), !dbg !17573
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !17574
  br i1 %13, label %15, label %14, !dbg !17576

14:                                               ; preds = %10
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %12) #25, !dbg !17577
  tail call fastcc void @z_reschedule_unlocked.282() #24, !dbg !17579
  br label %15, !dbg !17580

15:                                               ; preds = %10, %14, %1
  ret void, !dbg !17581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.282() unnamed_addr #1 !dbg !17582 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17583, !srcloc !17363
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17583
  call void @llvm.dbg.value(metadata i32 %2, metadata !17360, metadata !DIExpression()) #23, !dbg !17585
  call void @llvm.dbg.value(metadata i32 undef, metadata !17361, metadata !DIExpression()) #23, !dbg !17585
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !17586
  ret void, !dbg !17587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_get(%struct.k_timer* nocapture noundef %0) local_unnamed_addr #1 !dbg !17588 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17592, metadata !DIExpression()), !dbg !17595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17348, metadata !DIExpression()) #23, !dbg !17596
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17598, !srcloc !17363
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17598
  call void @llvm.dbg.value(metadata i32 %3, metadata !17360, metadata !DIExpression()) #23, !dbg !17600
  call void @llvm.dbg.value(metadata i32 undef, metadata !17361, metadata !DIExpression()) #23, !dbg !17600
  call void @llvm.dbg.value(metadata i32 %3, metadata !17354, metadata !DIExpression()) #23, !dbg !17596
  call void @llvm.dbg.value(metadata i32 %3, metadata !17593, metadata !DIExpression()), !dbg !17595
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17601
  %5 = load i32, i32* %4, align 8, !dbg !17601
  call void @llvm.dbg.value(metadata i32 %5, metadata !17594, metadata !DIExpression()), !dbg !17595
  store i32 0, i32* %4, align 8, !dbg !17602
  call void @llvm.dbg.value(metadata i32 %3, metadata !17377, metadata !DIExpression()) #23, !dbg !17603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17603
  call void @llvm.dbg.value(metadata i32 %3, metadata !17386, metadata !DIExpression()) #23, !dbg !17605
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17607, !srcloc !17392
  ret i32 %5, !dbg !17608
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17609 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17611, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17348, metadata !DIExpression()) #23, !dbg !17615
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17617, !srcloc !17363
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17617
  call void @llvm.dbg.value(metadata i32 %3, metadata !17360, metadata !DIExpression()) #23, !dbg !17619
  call void @llvm.dbg.value(metadata i32 undef, metadata !17361, metadata !DIExpression()) #23, !dbg !17619
  call void @llvm.dbg.value(metadata i32 %3, metadata !17354, metadata !DIExpression()) #23, !dbg !17615
  call void @llvm.dbg.value(metadata i32 %3, metadata !17612, metadata !DIExpression()), !dbg !17614
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17620
  %5 = load i32, i32* %4, align 8, !dbg !17620
  call void @llvm.dbg.value(metadata i32 %5, metadata !17613, metadata !DIExpression()), !dbg !17614
  %6 = icmp eq i32 %5, 0, !dbg !17621
  br i1 %6, label %7, label %17, !dbg !17623

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17624
  %9 = tail call fastcc zeroext i1 @z_is_inactive_timeout.283(%struct._timeout* noundef %8) #24, !dbg !17627
  br i1 %9, label %17, label %10, !dbg !17628

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17629
  %12 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17631
  %13 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %12, %struct._wait_q_t* noundef nonnull %11, [1 x i64] [i64 -1]) #25, !dbg !17631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17348, metadata !DIExpression()) #23, !dbg !17632
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17634, !srcloc !17363
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17634
  call void @llvm.dbg.value(metadata i32 %15, metadata !17360, metadata !DIExpression()) #23, !dbg !17636
  call void @llvm.dbg.value(metadata i32 undef, metadata !17361, metadata !DIExpression()) #23, !dbg !17636
  call void @llvm.dbg.value(metadata i32 %15, metadata !17354, metadata !DIExpression()) #23, !dbg !17632
  call void @llvm.dbg.value(metadata i32 %15, metadata !17612, metadata !DIExpression()), !dbg !17614
  %16 = load i32, i32* %4, align 8, !dbg !17637
  call void @llvm.dbg.value(metadata i32 %16, metadata !17613, metadata !DIExpression()), !dbg !17614
  br label %17, !dbg !17638

17:                                               ; preds = %1, %10, %7
  %18 = phi i32 [ 0, %7 ], [ %16, %10 ], [ %5, %1 ], !dbg !17614
  %19 = phi i32 [ %3, %7 ], [ %15, %10 ], [ %3, %1 ], !dbg !17614
  call void @llvm.dbg.value(metadata i32 %19, metadata !17612, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata i32 %18, metadata !17613, metadata !DIExpression()), !dbg !17614
  store i32 0, i32* %4, align 8, !dbg !17639
  call void @llvm.dbg.value(metadata i32 %19, metadata !17377, metadata !DIExpression()) #23, !dbg !17640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17640
  call void @llvm.dbg.value(metadata i32 %19, metadata !17386, metadata !DIExpression()) #23, !dbg !17642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !17644, !srcloc !17392
  ret i32 %18, !dbg !17645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.283(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17646 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17652, metadata !DIExpression()), !dbg !17653
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17654
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.284(%struct._dnode* noundef %2) #24, !dbg !17655
  %4 = xor i1 %3, true, !dbg !17656
  ret i1 %4, !dbg !17657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.284(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17658 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17664, metadata !DIExpression()), !dbg !17665
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17666
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17666
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17667
  ret i1 %4, !dbg !17668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17669 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.287, i32 0, i32 0)) #25, !dbg !17671
  ret void, !dbg !17672
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!496, !2, !2826, !27, !260, !530, !551, !2828, !2830, !2864, !561, !604, !2866, !2869, !2880, !2926, !2928, !2956, !2984, !3027, !3099, !3144, !633, !783, !3172, !819, !829, !854, !865, !982, !1171, !3177, !1307, !1373, !1681, !1903, !3215, !2014, !2104, !3217, !3302, !3366, !2154, !3369, !2161, !2529, !3387, !2549, !3389, !2664, !2703, !3392}
!llvm.ident = !{!3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394, !3394}
!llvm.module.flags = !{!3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !119, line: 12, type: !252, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !103, globals: !116, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_RTIO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_RTIO_IODEV", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_LAST", value: 68)
!103 = !{!104, !105, !108, !109, !113, !114}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !110, line: 46, baseType: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !112)
!112 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !{!25, !117, !227, !229, !235, !237, !245}
!117 = !DIGlobalVariableExpression(var: !118, expr: !DIExpression())
!118 = distinct !DIGlobalVariable(name: "simple_exec", scope: !27, file: !119, line: 24, type: !120, isLocal: false, isDefinition: true)
!119 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_simple_executor", file: !121, line: 57, size: 32, elements: !122)
!121 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_simple.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !120, file: !121, line: 58, baseType: !124, size: 32)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !126)
!125 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !124, file: !125, line: 211, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !131)
!131 = !{!132, !222, !226}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !130, file: !125, line: 177, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!108, !136}
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !138)
!138 = !{!139, !141, !145, !210}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !137, file: !125, line: 228, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !137, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !143, line: 22, baseType: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !137, file: !125, line: 254, baseType: !146, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !148)
!148 = !{!149, !159}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !147, file: !125, line: 143, baseType: !150, size: 160)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_spsc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = !{!153, !154, !155, !156, !157}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !150, file: !151, line: 60, baseType: !24, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !150, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !150, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !150, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !150, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !147, file: !125, line: 144, baseType: !160, offset: 160)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, elements: !197)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !162)
!162 = !{!163, !166, !167, !170, !200, !201}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !161, file: !125, line: 110, baseType: !164, size: 8)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !161, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !161, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !169)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !161, file: !125, line: 116, baseType: !171, size: 32, offset: 32)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !174)
!174 = !{!175, !186, !199}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !173, file: !125, line: 308, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !178, file: !125, line: 271, baseType: !181, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184, !136}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !173, file: !125, line: 311, baseType: !187, size: 32, offset: 32)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !188, file: !125, line: 299, baseType: !150, size: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !188, file: !125, line: 300, baseType: !192, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !197)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !194)
!194 = !{!195, !196}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !193, file: !125, line: 289, baseType: !184, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !193, file: !125, line: 290, baseType: !136, size: 32, offset: 32)
!197 = !{!198}
!198 = !DISubrange(count: -1)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !173, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !161, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !125, line: 127, baseType: !202, size: 64, offset: 96)
!202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !125, line: 127, size: 64, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !125, line: 128, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !202, file: !125, line: 128, size: 64, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !205, file: !125, line: 129, baseType: !113, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !205, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !137, file: !125, line: 257, baseType: !211, size: 32, offset: 96)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !213)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !212, file: !125, line: 162, baseType: !150, size: 160)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !212, file: !125, line: 163, baseType: !216, offset: 160)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, elements: !197)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !218)
!218 = !{!219, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !217, file: !125, line: 151, baseType: !220, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !108)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !217, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !130, file: !125, line: 182, baseType: !223, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DISubroutineType(types: !225)
!225 = !{null, !136, !184, !108}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !130, file: !125, line: 187, baseType: !223, size: 32, offset: 64)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "ez_io", scope: !27, file: !119, line: 25, type: !137, isLocal: false, isDefinition: true, align: 32)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "bufs", scope: !27, file: !119, line: 27, type: !231, isLocal: true, isDefinition: true)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 1024, elements: !232)
!232 = !{!233, !234}
!233 = !DISubrange(count: 8)
!234 = !DISubrange(count: 16)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(name: "z_rtio_simple_api", scope: !27, file: !121, line: 64, type: !129, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "_sq_ez_io", scope: !27, file: !119, line: 25, type: !239, isLocal: true, isDefinition: true)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__sq_ez_io", file: !119, line: 25, size: 1440, elements: !240)
!240 = !{!241, !242}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !239, file: !119, line: 25, baseType: !150, size: 160)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !239, file: !119, line: 25, baseType: !243, size: 1280, offset: 160)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1280, elements: !244)
!244 = !{!233}
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "_cq_ez_io", scope: !27, file: !119, line: 25, type: !247, isLocal: true, isDefinition: true)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__cq_ez_io", file: !119, line: 25, size: 672, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !247, file: !119, line: 25, baseType: !150, size: 160)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !247, file: !119, line: 25, baseType: !251, size: 512, offset: 160)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 512, elements: !244)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !253, file: !254, line: 17, baseType: !105, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !253, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "log_const_vnd_sensor", scope: !260, file: !265, line: 14, type: !489, isLocal: false, isDefinition: true)
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !262, globals: !450, splitDebugInlining: false, nameTableKind: None)
!261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!262 = !{!104, !108, !263, !109, !443, !113, !114}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_data", file: !265, line: 21, size: 960, elements: !266)
!265 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!266 = !{!267, !357, !407, !430, !449}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !264, file: !265, line: 22, baseType: !268, size: 96)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !269)
!269 = !{!270, !345, !356}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !268, file: !125, line: 308, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !274)
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !273, file: !125, line: 271, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !279, !298}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !282)
!282 = !{!283, !284, !285, !286, !289, !290}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !281, file: !125, line: 110, baseType: !164, size: 8)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !281, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !281, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !281, file: !125, line: 116, baseType: !287, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !281, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !125, line: 127, baseType: !291, size: 64, offset: 96)
!291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !125, line: 127, size: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, scope: !291, file: !125, line: 128, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !291, file: !125, line: 128, size: 64, elements: !295)
!295 = !{!296, !297}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !294, file: !125, line: 129, baseType: !113, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !294, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !300)
!300 = !{!301, !319, !320, !334}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !299, file: !125, line: 228, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !303, file: !125, line: 211, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !309)
!309 = !{!310, !314, !318}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !308, file: !125, line: 177, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{!108, !298}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !308, file: !125, line: 182, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !298, !279, !108}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !308, file: !125, line: 187, baseType: !315, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !299, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !299, file: !125, line: 254, baseType: !321, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !323)
!323 = !{!324, !332}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !322, file: !125, line: 143, baseType: !325, size: 160)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !326)
!326 = !{!327, !328, !329, !330, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !325, file: !151, line: 60, baseType: !24, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !325, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !325, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !325, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !325, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !322, file: !125, line: 144, baseType: !333, offset: 160)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !197)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !299, file: !125, line: 257, baseType: !335, size: 32, offset: 96)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !337)
!337 = !{!338, !339}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !336, file: !125, line: 162, baseType: !325, size: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !336, file: !125, line: 163, baseType: !340, offset: 160)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !197)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !341, file: !125, line: 151, baseType: !220, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !341, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !268, file: !125, line: 311, baseType: !346, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !347, file: !125, line: 299, baseType: !325, size: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !347, file: !125, line: 300, baseType: !351, offset: 160)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, elements: !197)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !353)
!353 = !{!354, !355}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !352, file: !125, line: 289, baseType: !279, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !352, file: !125, line: 290, baseType: !298, size: 32, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !268, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !264, file: !265, line: 23, baseType: !358, size: 448, offset: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !388, !394, !399, !400, !405, !406}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !359, line: 1324, baseType: !362, size: 192)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !381, !387}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !362, file: !363, line: 245, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !369)
!369 = !{!370, !376}
!370 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 38, baseType: !371, size: 32)
!371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 38, size: 32, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !371, file: !367, line: 39, baseType: !374, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !371, file: !367, line: 40, baseType: !374, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 42, baseType: !377, size: 32, offset: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 42, size: 32, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !377, file: !367, line: 43, baseType: !374, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !377, file: !367, line: 44, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !362, file: !363, line: 246, baseType: !382, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !386}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !362, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !358, file: !359, line: 1327, baseType: !389, size: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !363, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !358, file: !359, line: 1330, baseType: !395, size: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !358, file: !359, line: 1333, baseType: !395, size: 32, offset: 288)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !358, file: !359, line: 1336, baseType: !401, size: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !402, file: !110, line: 66, baseType: !109, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !358, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !358, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !265, line: 24, baseType: !408, size: 32, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !412)
!411 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!412 = !{!413, !414, !415, !416, !423, !424}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !411, line: 380, baseType: !105, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !410, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !410, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !410, file: !411, line: 386, baseType: !417, size: 32, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !418, file: !411, line: 359, baseType: !164, size: 8)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !418, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!422 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !410, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !410, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !411, line: 43, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !429)
!429 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !264, file: !265, line: 25, baseType: !431, size: 320, offset: 608)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !359, line: 4204, size: 320, elements: !432)
!432 = !{!433, !434, !438, !441, !442, !444, !445, !446, !447, !448}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !431, file: !359, line: 4206, baseType: !389, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !431, file: !359, line: 4208, baseType: !435, offset: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !431, file: !359, line: 4210, baseType: !439, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !440, line: 214, baseType: !32)
!440 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !431, file: !359, line: 4212, baseType: !113, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !431, file: !359, line: 4214, baseType: !443, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !431, file: !359, line: 4216, baseType: !443, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !431, file: !359, line: 4218, baseType: !443, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !431, file: !359, line: 4220, baseType: !443, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !431, file: !359, line: 4222, baseType: !113, size: 32, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !431, file: !359, line: 4227, baseType: !164, size: 8, offset: 288)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sample_number", scope: !264, file: !265, line: 26, baseType: !113, size: 32, offset: 928)
!450 = !{!258, !451, !458, !463, !465, !476, !478, !485, !487}
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_sq_0", scope: !260, file: !265, line: 152, type: !453, isLocal: false, isDefinition: true)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc_vnd_sensor_iodev_sq_0", file: !265, line: 152, size: 672, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !453, file: !265, line: 152, baseType: !325, size: 160)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !453, file: !265, line: 152, baseType: !457, size: 512, offset: 160)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 512, elements: !244)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_13", scope: !260, file: !265, line: 152, type: !460, isLocal: false, isDefinition: true, align: 16)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 4)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "__device_dts_ord_13", scope: !260, file: !265, line: 152, type: !409, isLocal: false, isDefinition: true, align: 32)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_13", scope: !260, file: !265, line: 152, type: !467, isLocal: true, isDefinition: true, align: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !470)
!469 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !468, file: !469, line: 60, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DISubroutineType(types: !474)
!474 = !{!108, !408}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !468, file: !469, line: 65, baseType: !408, size: 32, offset: 32)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_13", scope: !260, file: !265, line: 152, type: !418, isLocal: true, isDefinition: true, align: 8)
!478 = !DIGlobalVariableExpression(var: !479, expr: !DIExpression())
!479 = distinct !DIGlobalVariable(name: "vnd_sensor_config_0", scope: !260, file: !265, line: 152, type: !480, isLocal: true, isDefinition: true)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_config", file: !265, line: 16, size: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !481, file: !265, line: 17, baseType: !113, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !481, file: !265, line: 18, baseType: !439, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "vnd_sensor_data_0", scope: !260, file: !265, line: 152, type: !264, isLocal: true, isDefinition: true)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_api", scope: !260, file: !265, line: 127, type: !272, isLocal: true, isDefinition: true)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !254, line: 17, baseType: !105, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !490, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_13", scope: !496, file: !501, line: 90, type: !507, isLocal: false, isDefinition: true, align: 16)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !498, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!498 = !{!499, !505, !510, !512, !514, !516, !518, !520, !522, !524, !526, !494}
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !496, file: !501, line: 17, type: !502, isLocal: false, isDefinition: true, align: 16)
!501 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 192, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 12)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_38", scope: !496, file: !501, line: 22, type: !507, isLocal: false, isDefinition: true, align: 16)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 48, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 3)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_82", scope: !496, file: !501, line: 29, type: !460, isLocal: false, isDefinition: true, align: 16)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_81", scope: !496, file: !501, line: 36, type: !460, isLocal: false, isDefinition: true, align: 16)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_80", scope: !496, file: !501, line: 43, type: !460, isLocal: false, isDefinition: true, align: 16)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !496, file: !501, line: 50, type: !460, isLocal: false, isDefinition: true, align: 16)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !496, file: !501, line: 57, type: !460, isLocal: false, isDefinition: true, align: 16)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !496, file: !501, line: 64, type: !460, isLocal: false, isDefinition: true, align: 16)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_27", scope: !496, file: !501, line: 71, type: !460, isLocal: false, isDefinition: true, align: 16)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !496, file: !501, line: 78, type: !460, isLocal: false, isDefinition: true, align: 16)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !496, file: !501, line: 85, type: !460, isLocal: false, isDefinition: true, align: 16)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !530, file: !543, line: 18, type: !544, isLocal: false, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !532, globals: !542, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!532 = !{!22, !104, !24, !533, !535, !537, !439, !108, !538, !539, !540, !541, !443, !209, !168, !105}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!536 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!542 = !{!528}
!543 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !545, file: !254, line: 17, baseType: !105, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !545, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(name: "_char_out", scope: !551, file: !555, line: 54, type: !556, isLocal: false, isDefinition: true)
!551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, globals: !554, splitDebugInlining: false, nameTableKind: None)
!552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!553 = !{!104, !108}
!554 = !{!549}
!555 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 32)
!557 = !DISubroutineType(types: !558)
!558 = !{!108, !108}
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !561, file: !578, line: 56, type: !579, isLocal: true, isDefinition: true, align: 32)
!561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !563, globals: !577, splitDebugInlining: false, nameTableKind: None)
!562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!563 = !{!564}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !566, line: 379, baseType: !567)
!566 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 370, size: 224, elements: !568)
!568 = !{!569, !571, !572, !573, !574, !575, !576}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !567, file: !566, line: 372, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !567, file: !566, line: 373, baseType: !570, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !567, file: !566, line: 374, baseType: !570, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !567, file: !566, line: 375, baseType: !570, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !567, file: !566, line: 376, baseType: !570, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !567, file: !566, line: 377, baseType: !570, size: 32, offset: 160)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !567, file: !566, line: 378, baseType: !570, size: 32, offset: 192)
!577 = !{!559}
!578 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !581)
!581 = !{!582, !601}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !580, file: !469, line: 60, baseType: !583, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!584 = !DISubroutineType(types: !585)
!585 = !{!108, !586}
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !589)
!589 = !{!590, !591, !592, !593, !599, !600}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !588, file: !411, line: 380, baseType: !105, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !588, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !588, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !588, file: !411, line: 386, baseType: !594, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !596)
!596 = !{!597, !598}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !595, file: !411, line: 359, baseType: !164, size: 8)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !595, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !588, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !588, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !580, file: !469, line: 65, baseType: !586, size: 32, offset: 32)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !604, file: !607, line: 71, type: !608, isLocal: true, isDefinition: true, align: 32)
!604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !605, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !606, splitDebugInlining: false, nameTableKind: None)
!605 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!606 = !{!602}
!607 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !610)
!610 = !{!611, !630}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !609, file: !469, line: 60, baseType: !612, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 32)
!613 = !DISubroutineType(types: !614)
!614 = !{!108, !615}
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !618)
!618 = !{!619, !620, !621, !622, !628, !629}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !617, file: !411, line: 380, baseType: !105, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !617, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !617, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !617, file: !411, line: 386, baseType: !623, size: 32, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 32)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !625)
!625 = !{!626, !627}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !624, file: !411, line: 359, baseType: !164, size: 8)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !624, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !617, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !617, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !609, file: !469, line: 65, baseType: !615, size: 32, offset: 32)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !633, file: !640, line: 17, type: !776, isLocal: false, isDefinition: true)
!633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !635, globals: !636, splitDebugInlining: false, nameTableKind: None)
!634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!635 = !{!439, !108, !113, !104}
!636 = !{!631, !637, !772}
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !639, file: !640, line: 198, type: !758, isLocal: true, isDefinition: true)
!639 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !640, file: !640, line: 175, type: !641, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !753)
!640 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!641 = !DISubroutineType(types: !642)
!642 = !{null, !643}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 32)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !646)
!645 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!646 = !{!647, !710, !723, !724, !725, !726, !732, !748}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !644, file: !645, line: 247, baseType: !648, size: 384)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !649)
!649 = !{!650, !677, !684, !685, !686, !697, !698, !699}
!650 = !DIDerivedType(tag: DW_TAG_member, scope: !648, file: !645, line: 60, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !648, file: !645, line: 60, size: 64, elements: !652)
!652 = !{!653, !668}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !651, file: !645, line: 61, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !656)
!656 = !{!657, !663}
!657 = !DIDerivedType(tag: DW_TAG_member, scope: !655, file: !367, line: 38, baseType: !658, size: 32)
!658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !655, file: !367, line: 38, size: 32, elements: !659)
!659 = !{!660, !662}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !658, file: !367, line: 39, baseType: !661, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !658, file: !367, line: 40, baseType: !661, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, scope: !655, file: !367, line: 42, baseType: !664, size: 32, offset: 32)
!664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !655, file: !367, line: 42, size: 32, elements: !665)
!665 = !{!666, !667}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !664, file: !367, line: 43, baseType: !661, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !664, file: !367, line: 44, baseType: !661, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !651, file: !645, line: 62, baseType: !669, size: 64)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !671)
!670 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !{!672}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !669, file: !670, line: 50, baseType: !673, size: 64)
!673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 64, elements: !675)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 32)
!675 = !{!676}
!676 = !DISubrange(count: 2)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !648, file: !645, line: 68, baseType: !678, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !680, file: !363, line: 232, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !655)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !648, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !648, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!686 = !DIDerivedType(tag: DW_TAG_member, scope: !648, file: !645, line: 90, baseType: !687, size: 16, offset: 112)
!687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !648, file: !645, line: 90, size: 16, elements: !688)
!688 = !{!689, !696}
!689 = !DIDerivedType(tag: DW_TAG_member, scope: !687, file: !645, line: 91, baseType: !690, size: 16)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !687, file: !645, line: 91, size: 16, elements: !691)
!691 = !{!692, !695}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !690, file: !645, line: 96, baseType: !693, size: 8)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !694)
!694 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !690, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !687, file: !645, line: 100, baseType: !168, size: 16)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !648, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !648, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !648, file: !645, line: 131, baseType: !700, size: 192, offset: 192)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !701)
!701 = !{!702, !703, !709}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !700, file: !363, line: 245, baseType: !654, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !700, file: !363, line: 246, baseType: !704, size: 32, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !705)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{null, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !700, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !644, file: !645, line: 250, baseType: !711, size: 288, offset: 384)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !713)
!712 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!713 = !{!714, !715, !716, !717, !718, !719, !720, !721, !722}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !711, file: !712, line: 26, baseType: !113, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !711, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !711, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !711, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !711, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !711, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !711, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !711, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !711, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !644, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !644, file: !645, line: 256, baseType: !679, size: 64, offset: 704)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !644, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !644, file: !645, line: 300, baseType: !727, size: 96, offset: 800)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !728)
!728 = !{!729, !730, !731}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !727, file: !645, line: 153, baseType: !22, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !727, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !727, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !644, file: !645, line: 325, baseType: !733, size: 32, offset: 896)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 32)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !735)
!735 = !{!736, !745, !746}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !734, file: !359, line: 5074, baseType: !737, size: 96)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !739)
!738 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!739 = !{!740, !743, !744}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !737, file: !738, line: 57, baseType: !741, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !738, line: 57, flags: DIFlagFwdDecl)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !737, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !737, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !734, file: !359, line: 5075, baseType: !679, size: 64, offset: 96)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !734, file: !359, line: 5076, baseType: !747, offset: 160)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !644, file: !645, line: 343, baseType: !749, size: 64, offset: 928)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !749, file: !712, line: 63, baseType: !113, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !749, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!753 = !{!754, !755, !756, !757}
!754 = !DILocalVariable(name: "thread", arg: 1, scope: !639, file: !640, line: 175, type: !643)
!755 = !DILocalVariable(name: "region_num", scope: !639, file: !640, line: 200, type: !164)
!756 = !DILocalVariable(name: "guard_start", scope: !639, file: !640, line: 265, type: !22)
!757 = !DILocalVariable(name: "guard_size", scope: !639, file: !640, line: 266, type: !439)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 96, elements: !770)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !760, line: 52, size: 96, elements: !761)
!760 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!761 = !{!762, !763, !764}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !759, file: !760, line: 53, baseType: !22, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !759, file: !760, line: 54, baseType: !439, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !759, file: !760, line: 55, baseType: !765, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !766, line: 151, baseType: !767)
!766 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !766, line: 149, size: 32, elements: !768)
!768 = !{!769}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !767, file: !766, line: 150, baseType: !113, size: 32)
!770 = !{!771}
!771 = !DISubrange(count: 1)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "static_regions", scope: !633, file: !640, line: 62, type: !774, isLocal: true, isDefinition: true)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 96, elements: !770)
!775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !778)
!778 = !{!779, !780}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !777, file: !254, line: 17, baseType: !105, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !777, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !783, file: !816, line: 39, type: !164, isLocal: true, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !785, globals: !815, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!785 = !{!786, !104, !108, !803, !164}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !788, line: 1226, baseType: !789)
!788 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 1213, size: 352, elements: !790)
!790 = !{!791, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !789, file: !788, line: 1215, baseType: !792, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !789, file: !788, line: 1216, baseType: !570, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !789, file: !788, line: 1217, baseType: !570, size: 32, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !789, file: !788, line: 1218, baseType: !570, size: 32, offset: 96)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !789, file: !788, line: 1219, baseType: !570, size: 32, offset: 128)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !789, file: !788, line: 1220, baseType: !570, size: 32, offset: 160)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !789, file: !788, line: 1221, baseType: !570, size: 32, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !789, file: !788, line: 1222, baseType: !570, size: 32, offset: 224)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !789, file: !788, line: 1223, baseType: !570, size: 32, offset: 256)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !789, file: !788, line: 1224, baseType: !570, size: 32, offset: 288)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !789, file: !788, line: 1225, baseType: !570, size: 32, offset: 320)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !806, line: 27, size: 96, elements: !807)
!806 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!807 = !{!808, !809, !810}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !805, file: !806, line: 29, baseType: !113, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !805, file: !806, line: 31, baseType: !105, size: 32, offset: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !805, file: !806, line: 37, baseType: !811, size: 32, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !766, line: 146, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !766, line: 141, size: 32, elements: !813)
!813 = !{!814}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !812, file: !766, line: 143, baseType: !113, size: 32)
!815 = !{!781}
!816 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !819, file: !826, line: 21, type: !556, isLocal: true, isDefinition: true)
!819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !821, globals: !825, splitDebugInlining: false, nameTableKind: None)
!820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!821 = !{!822, !108, !104}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !824, line: 22, baseType: !108)
!824 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!825 = !{!817}
!826 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !829, file: !834, line: 13, type: !851, isLocal: true, isDefinition: true)
!829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !831, splitDebugInlining: false, nameTableKind: None)
!830 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!831 = !{!832, !827}
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "mpu_config", scope: !829, file: !834, line: 37, type: !835, isLocal: false, isDefinition: true)
!834 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !806, line: 41, size: 64, elements: !837)
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !836, file: !806, line: 43, baseType: !113, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !836, file: !806, line: 45, baseType: !840, size: 32, offset: 32)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !806, line: 27, size: 96, elements: !843)
!843 = !{!844, !845, !846}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !842, file: !806, line: 29, baseType: !113, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !806, line: 31, baseType: !105, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !842, file: !806, line: 37, baseType: !847, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !766, line: 146, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !766, line: 141, size: 32, elements: !849)
!849 = !{!850}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !848, file: !766, line: 143, baseType: !113, size: 32)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !841, size: 192, elements: !675)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_simple", scope: !854, file: !857, line: 12, type: !858, isLocal: false, isDefinition: true)
!854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, globals: !856, splitDebugInlining: false, nameTableKind: None)
!855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!856 = !{!852}
!857 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !859, file: !254, line: 17, baseType: !105, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !859, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_concurrent", scope: !865, file: !974, line: 13, type: !975, isLocal: false, isDefinition: true)
!865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !866, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !867, globals: !973, splitDebugInlining: false, nameTableKind: None)
!866 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!867 = !{!868, !104, !108}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_concurrent_executor", file: !870, line: 61, size: 224, elements: !871)
!870 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_concurrent.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!871 = !{!872, !962, !964, !965, !966, !967, !969, !970, !971}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !869, file: !870, line: 62, baseType: !873, size: 32)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !874)
!874 = !{!875}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !873, file: !125, line: 211, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !879)
!879 = !{!880, !957, !961}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !878, file: !125, line: 177, baseType: !881, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DISubroutineType(types: !883)
!883 = !{!108, !884}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !886)
!886 = !{!887, !889, !890, !946}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !885, file: !125, line: 228, baseType: !888, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !885, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !885, file: !125, line: 254, baseType: !891, size: 32, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !893)
!893 = !{!894, !902}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !892, file: !125, line: 143, baseType: !895, size: 160)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !896)
!896 = !{!897, !898, !899, !900, !901}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !895, file: !151, line: 60, baseType: !24, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !895, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !895, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !895, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !895, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !892, file: !125, line: 144, baseType: !903, offset: 160)
!903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, elements: !197)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !905)
!905 = !{!906, !907, !908, !909, !937, !938}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !904, file: !125, line: 110, baseType: !164, size: 8)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !904, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !904, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !904, file: !125, line: 116, baseType: !910, size: 32, offset: 32)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !913)
!913 = !{!914, !925, !936}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !912, file: !125, line: 308, baseType: !915, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !918)
!918 = !{!919}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !917, file: !125, line: 271, baseType: !920, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DISubroutineType(types: !922)
!922 = !{null, !923, !884}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !912, file: !125, line: 311, baseType: !926, size: 32, offset: 32)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !928)
!928 = !{!929, !930}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !927, file: !125, line: 299, baseType: !895, size: 160)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !927, file: !125, line: 300, baseType: !931, offset: 160)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, elements: !197)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !933)
!933 = !{!934, !935}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !932, file: !125, line: 289, baseType: !923, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !932, file: !125, line: 290, baseType: !884, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !912, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !904, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, scope: !904, file: !125, line: 127, baseType: !939, size: 64, offset: 96)
!939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !904, file: !125, line: 127, size: 64, elements: !940)
!940 = !{!941}
!941 = !DIDerivedType(tag: DW_TAG_member, scope: !939, file: !125, line: 128, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !939, file: !125, line: 128, size: 64, elements: !943)
!943 = !{!944, !945}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !942, file: !125, line: 129, baseType: !113, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !942, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !885, file: !125, line: 257, baseType: !947, size: 32, offset: 96)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !949)
!949 = !{!950, !951}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !948, file: !125, line: 162, baseType: !895, size: 160)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !948, file: !125, line: 163, baseType: !952, offset: 160)
!952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !953, elements: !197)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !953, file: !125, line: 151, baseType: !220, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !953, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !878, file: !125, line: 182, baseType: !958, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DISubroutineType(types: !960)
!960 = !{null, !884, !923, !108}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !878, file: !125, line: 187, baseType: !958, size: 32, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !869, file: !870, line: 65, baseType: !963, offset: 32)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "task_in", scope: !869, file: !870, line: 68, baseType: !168, size: 16, offset: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "task_out", scope: !869, file: !870, line: 68, baseType: !168, size: 16, offset: 48)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "task_mask", scope: !869, file: !870, line: 68, baseType: !168, size: 16, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sqe", scope: !869, file: !870, line: 71, baseType: !968, size: 32, offset: 96)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "last_sqe", scope: !869, file: !870, line: 74, baseType: !968, size: 32, offset: 128)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "task_status", scope: !869, file: !870, line: 77, baseType: !209, size: 32, offset: 160)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "task_cur", scope: !869, file: !870, line: 80, baseType: !972, size: 32, offset: 192)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!973 = !{!863}
!974 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !977)
!977 = !{!978, !979}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !976, file: !254, line: 17, baseType: !105, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !976, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !982, file: !1086, line: 72, type: !1166, isLocal: true, isDefinition: true)
!982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !984, retainedTypes: !1072, globals: !1083, splitDebugInlining: false, nameTableKind: None)
!983 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!984 = !{!30, !985}
!985 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !566, line: 65, baseType: !108, size: 32, elements: !986)
!986 = !{!987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071}
!987 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!988 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!989 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!990 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!991 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!992 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!993 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!994 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!995 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!996 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!997 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!998 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!999 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1000 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1001 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1002 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1003 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1004 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1005 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1006 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1007 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1008 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1009 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1010 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1011 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1012 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1013 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1014 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!1015 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!1016 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!1017 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!1018 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1019 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1020 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1021 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1022 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1023 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1024 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1025 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1026 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1027 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1028 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1029 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1030 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1031 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1032 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1033 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1034 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1035 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1036 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1037 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1038 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!1039 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!1040 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!1041 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!1042 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1043 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1044 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1045 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1046 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!1047 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!1048 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1049 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1050 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1051 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1052 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1053 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!1054 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!1055 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!1056 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!1057 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!1058 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!1059 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1060 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1061 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1062 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1063 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1064 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1065 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1066 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!1067 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1068 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!1069 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!1070 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!1071 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!1072 = !{!439, !108, !104, !1073}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !566, line: 364, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 356, size: 192, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1081, !1082}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1075, file: !566, line: 358, baseType: !570, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1075, file: !566, line: 359, baseType: !570, size: 32, offset: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1075, file: !566, line: 360, baseType: !570, size: 32, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1075, file: !566, line: 361, baseType: !570, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1075, file: !566, line: 362, baseType: !570, size: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1075, file: !566, line: 363, baseType: !570, size: 32, offset: 160)
!1083 = !{!1084, !1087, !1103, !1114, !1131, !980, !1133, !1146, !1148, !1150, !1152, !1154, !1156, !1158, !1160, !1162, !1164}
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_38", scope: !982, file: !1086, line: 424, type: !460, isLocal: false, isDefinition: true, align: 16)
!1086 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "__device_dts_ord_38", scope: !982, file: !1086, line: 424, type: !1089, isLocal: false, isDefinition: true, align: 32)
!1089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1101, !1102}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1090, file: !411, line: 380, baseType: !105, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1090, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1090, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1090, file: !411, line: 386, baseType: !1096, size: 32, offset: 96)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1098)
!1098 = !{!1099, !1100}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1097, file: !411, line: 359, baseType: !164, size: 8)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1097, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1090, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1090, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_38", scope: !982, file: !1086, line: 424, type: !1105, isLocal: true, isDefinition: true, align: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1107)
!1107 = !{!1108, !1113}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1106, file: !469, line: 60, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!108, !1112}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1106, file: !469, line: 65, baseType: !1112, size: 32, offset: 32)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "exti_data", scope: !982, file: !1086, line: 423, type: !1116, isLocal: true, isDefinition: true)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1086, line: 107, size: 1472, elements: !1117)
!1117 = !{!1118}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1116, file: !1086, line: 109, baseType: !1119, size: 1472)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1120, size: 1472, elements: !1129)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1086, line: 101, size: 64, elements: !1121)
!1121 = !{!1122, !1128}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1120, file: !1086, line: 102, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1124, line: 63, baseType: !1125)
!1124 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{null, !108, !104}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1120, file: !1086, line: 103, baseType: !104, size: 32, offset: 32)
!1129 = !{!1130}
!1130 = !DISubrange(count: 23)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_38", scope: !982, file: !1086, line: 424, type: !1097, isLocal: true, isDefinition: true, align: 8)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1135, file: !1086, line: 493, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1135 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1086, file: !1086, line: 460, type: !1136, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !1138)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{null, !1112}
!1138 = !{!1139}
!1139 = !DILocalVariable(name: "dev", arg: 1, scope: !1135, file: !1086, line: 460, type: !1112)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1141)
!1141 = !{!1142, !1143, !1144, !1145}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1140, file: !10, line: 55, baseType: !220, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1140, file: !10, line: 57, baseType: !220, size: 32, offset: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1140, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1140, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1135, file: !1086, line: 497, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1135, file: !1086, line: 507, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1135, file: !1086, line: 512, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1135, file: !1086, line: 516, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1135, file: !1086, line: 523, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1135, file: !1086, line: 527, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1135, file: !1086, line: 581, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1135, file: !1086, line: 586, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1135, file: !1086, line: 591, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1135, file: !1086, line: 595, type: !1140, isLocal: true, isDefinition: true, align: 32)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 736, elements: !1129)
!1167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1168)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !566, line: 154, baseType: !985)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1171, file: !1233, line: 398, type: !1266, isLocal: true, isDefinition: true)
!1171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1172, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1173, retainedTypes: !1186, globals: !1230, splitDebugInlining: false, nameTableKind: None)
!1172 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!1173 = !{!1174, !30, !1179}
!1174 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1175, line: 197, baseType: !32, size: 32, elements: !1176)
!1175 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1176 = !{!1177, !1178}
!1177 = !DIEnumerator(name: "SUCCESS", value: 0)
!1178 = !DIEnumerator(name: "ERROR", value: 1)
!1179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1180, line: 44, baseType: !32, size: 32, elements: !1181)
!1180 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1181 = !{!1182, !1183, !1184, !1185}
!1182 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1183 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1184 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1185 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1186 = !{!104, !108, !113, !1187, !1223, !1229}
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 510, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 477, size: 1216, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1195, !1196, !1197, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1189, file: !566, line: 479, baseType: !570, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1189, file: !566, line: 480, baseType: !570, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1189, file: !566, line: 481, baseType: !570, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1189, file: !566, line: 482, baseType: !570, size: 32, offset: 96)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1189, file: !566, line: 483, baseType: !570, size: 32, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1189, file: !566, line: 484, baseType: !570, size: 32, offset: 160)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1189, file: !566, line: 485, baseType: !1198, size: 64, offset: 192)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !675)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1189, file: !566, line: 486, baseType: !570, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1189, file: !566, line: 487, baseType: !570, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1189, file: !566, line: 488, baseType: !1198, size: 64, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1189, file: !566, line: 489, baseType: !570, size: 32, offset: 384)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1189, file: !566, line: 490, baseType: !570, size: 32, offset: 416)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1189, file: !566, line: 491, baseType: !1198, size: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1189, file: !566, line: 492, baseType: !570, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1189, file: !566, line: 493, baseType: !570, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1189, file: !566, line: 494, baseType: !1198, size: 64, offset: 576)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1189, file: !566, line: 495, baseType: !570, size: 32, offset: 640)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1189, file: !566, line: 496, baseType: !570, size: 32, offset: 672)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1189, file: !566, line: 497, baseType: !1198, size: 64, offset: 704)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1189, file: !566, line: 498, baseType: !570, size: 32, offset: 768)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1189, file: !566, line: 499, baseType: !570, size: 32, offset: 800)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1189, file: !566, line: 500, baseType: !1198, size: 64, offset: 832)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1189, file: !566, line: 501, baseType: !570, size: 32, offset: 896)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1189, file: !566, line: 502, baseType: !570, size: 32, offset: 928)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1189, file: !566, line: 503, baseType: !1198, size: 64, offset: 960)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1189, file: !566, line: 504, baseType: !570, size: 32, offset: 1024)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1189, file: !566, line: 505, baseType: !570, size: 32, offset: 1056)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1189, file: !566, line: 506, baseType: !113, size: 32, offset: 1088)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1189, file: !566, line: 507, baseType: !570, size: 32, offset: 1120)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1189, file: !566, line: 508, baseType: !570, size: 32, offset: 1152)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1189, file: !566, line: 509, baseType: !570, size: 32, offset: 1184)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1225, line: 343, size: 64, elements: !1226)
!1225 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1226 = !{!1227, !1228}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1224, file: !1225, line: 344, baseType: !113, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1224, file: !1225, line: 345, baseType: !113, size: 32, offset: 32)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1230 = !{!1231, !1237, !1253, !1264, !1169}
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !1171, file: !1233, line: 752, type: !1234, isLocal: false, isDefinition: true, align: 16)
!1233 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 848, elements: !1235)
!1235 = !{!1236}
!1236 = !DISubrange(count: 53)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !1171, file: !1233, line: 752, type: !1239, isLocal: false, isDefinition: true, align: 32)
!1239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245, !1251, !1252}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1240, file: !411, line: 380, baseType: !105, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1240, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1240, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1240, file: !411, line: 386, baseType: !1246, size: 32, offset: 96)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1248)
!1248 = !{!1249, !1250}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1247, file: !411, line: 359, baseType: !164, size: 8)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1247, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1240, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1240, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !1171, file: !1233, line: 752, type: !1255, isLocal: true, isDefinition: true, align: 32)
!1255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1257)
!1257 = !{!1258, !1263}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1256, file: !469, line: 60, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!108, !1262}
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1256, file: !469, line: 65, baseType: !1262, size: 32, offset: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !1171, file: !1233, line: 752, type: !1247, isLocal: true, isDefinition: true, align: 8)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1180, line: 100, size: 224, elements: !1267)
!1267 = !{!1268, !1274, !1275, !1284, !1289, !1294, !1300}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1266, file: !1180, line: 101, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1180, line: 76, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!108, !1262, !1273}
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1180, line: 56, baseType: !104)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1266, file: !1180, line: 102, baseType: !1269, size: 32, offset: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1266, file: !1180, line: 103, baseType: !1276, size: 32, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1180, line: 83, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!108, !1262, !1273, !1280, !104}
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1180, line: 72, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{null, !1262, !1273, !104}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1266, file: !1180, line: 104, baseType: !1285, size: 32, offset: 96)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1180, line: 79, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!108, !1262, !1273, !1229}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1266, file: !1180, line: 105, baseType: !1290, size: 32, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1180, line: 88, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!1179, !1262, !1273}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1266, file: !1180, line: 106, baseType: !1295, size: 32, offset: 160)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1180, line: 92, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!108, !1262, !1273, !1299}
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1180, line: 64, baseType: !104)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1266, file: !1180, line: 107, baseType: !1301, size: 32, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1180, line: 96, baseType: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!108, !1262, !1273, !104}
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1307, file: !1364, line: 603, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1309, globals: !1361, splitDebugInlining: false, nameTableKind: None)
!1308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!1309 = !{!104, !108, !1310}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1313, line: 336, size: 160, elements: !1314)
!1313 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1314 = !{!1315, !1335, !1339, !1343, !1356}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1312, file: !1313, line: 365, baseType: !1316, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!108, !1319, !1334}
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1322)
!1322 = !{!1323, !1324, !1325, !1326, !1332, !1333}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1321, file: !411, line: 380, baseType: !105, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1321, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1321, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1321, file: !411, line: 386, baseType: !1327, size: 32, offset: 96)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 32)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1329)
!1329 = !{!1330, !1331}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1328, file: !411, line: 359, baseType: !164, size: 8)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1328, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1321, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1321, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1312, file: !1313, line: 366, baseType: !1336, size: 32, offset: 32)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{null, !1319, !165}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1312, file: !1313, line: 374, baseType: !1340, size: 32, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!108, !1319}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1312, file: !1313, line: 377, baseType: !1344, size: 32, offset: 96)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!108, !1319, !1347}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1313, line: 122, size: 64, elements: !1350)
!1350 = !{!1351, !1352, !1353, !1354, !1355}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1349, file: !1313, line: 123, baseType: !113, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1349, file: !1313, line: 124, baseType: !164, size: 8, offset: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1349, file: !1313, line: 125, baseType: !164, size: 8, offset: 40)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1349, file: !1313, line: 126, baseType: !164, size: 8, offset: 48)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1349, file: !1313, line: 127, baseType: !164, size: 8, offset: 56)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1312, file: !1313, line: 379, baseType: !1357, size: 32, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 32)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!108, !1319, !1360}
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 32)
!1361 = !{!1305, !1362}
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1307, file: !1364, line: 38, type: !1365, isLocal: true, isDefinition: true)
!1364 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1368)
!1368 = !{!1369, !1370}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1367, file: !469, line: 60, baseType: !1340, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1367, file: !469, line: 65, baseType: !1319, size: 32, offset: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1373, file: !1544, line: 762, type: !1656, isLocal: true, isDefinition: true)
!1373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1374, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1375, retainedTypes: !1393, globals: !1541, splitDebugInlining: false, nameTableKind: None)
!1374 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!1375 = !{!30, !1376, !1382, !1387, !1179}
!1376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1377, line: 506, baseType: !32, size: 32, elements: !1378)
!1377 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1378 = !{!1379, !1380, !1381}
!1379 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1380 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1381 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1377, line: 512, baseType: !32, size: 32, elements: !1383)
!1383 = !{!1384, !1385, !1386}
!1384 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1385 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1386 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1124, line: 43, baseType: !32, size: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392}
!1389 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1390 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1391 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1392 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1393 = !{!104, !108, !1394, !1464, !1469, !1429, !1382, !1376, !1474, !1475, !113, !1489, !1444, !443, !1501, !1502}
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1377, line: 523, size: 288, elements: !1397)
!1397 = !{!1398, !1419, !1425, !1430, !1434, !1435, !1436, !1440, !1460}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1396, file: !1377, line: 524, baseType: !1399, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!108, !1402, !1417, !1418}
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1415, !1416}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1404, file: !411, line: 380, baseType: !105, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1404, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1404, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1404, file: !411, line: 386, baseType: !1410, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 32)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1412)
!1412 = !{!1413, !1414}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1411, file: !411, line: 359, baseType: !164, size: 8)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1411, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1404, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1404, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1377, line: 237, baseType: !164)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1377, line: 257, baseType: !113)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1396, file: !1377, line: 530, baseType: !1420, size: 32, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!108, !1402, !1423}
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1377, line: 229, baseType: !113)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1396, file: !1377, line: 532, baseType: !1426, size: 32, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!108, !1402, !1429, !1424}
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1377, line: 216, baseType: !113)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1396, file: !1377, line: 535, baseType: !1431, size: 32, offset: 96)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{!108, !1402, !1429}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1396, file: !1377, line: 537, baseType: !1431, size: 32, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1396, file: !1377, line: 539, baseType: !1431, size: 32, offset: 160)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1396, file: !1377, line: 541, baseType: !1437, size: 32, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!108, !1402, !1417, !1376, !1382}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1396, file: !1377, line: 544, baseType: !1441, size: 32, offset: 224)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!108, !1402, !1444, !422}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1377, line: 478, size: 96, elements: !1446)
!1446 = !{!1447, !1454, !1459}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1445, file: !1377, line: 482, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1449, line: 33, baseType: !1450)
!1449 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1449, line: 29, size: 32, elements: !1451)
!1451 = !{!1452}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1450, file: !1449, line: 30, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1445, file: !1377, line: 485, baseType: !1455, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1377, line: 464, baseType: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{null, !1402, !1444, !1429}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1445, file: !1377, line: 493, baseType: !1429, size: 32, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1396, file: !1377, line: 547, baseType: !1461, size: 32, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!113, !1402}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1377, line: 428, size: 32, elements: !1467)
!1467 = !{!1468}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1466, file: !1377, line: 434, baseType: !1429, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1471)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1377, line: 441, size: 32, elements: !1472)
!1472 = !{!1473}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1471, file: !1377, line: 447, baseType: !1429, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !566, line: 396, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 385, size: 320, elements: !1478)
!1478 = !{!1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1477, file: !566, line: 387, baseType: !570, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1477, file: !566, line: 388, baseType: !570, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1477, file: !566, line: 389, baseType: !570, size: 32, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1477, file: !566, line: 390, baseType: !570, size: 32, offset: 96)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1477, file: !566, line: 391, baseType: !570, size: 32, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1477, file: !566, line: 392, baseType: !570, size: 32, offset: 160)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1477, file: !566, line: 393, baseType: !570, size: 32, offset: 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1477, file: !566, line: 394, baseType: !570, size: 32, offset: 224)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1477, file: !566, line: 395, baseType: !1488, size: 64, offset: 256)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 64, elements: !675)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !566, line: 411, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 402, size: 320, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1497, !1498, !1499, !1500}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1491, file: !566, line: 404, baseType: !570, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1491, file: !566, line: 405, baseType: !570, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1491, file: !566, line: 406, baseType: !1496, size: 128, offset: 64)
!1496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 128, elements: !461)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1491, file: !566, line: 407, baseType: !113, size: 32, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1491, file: !566, line: 408, baseType: !570, size: 32, offset: 224)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1491, file: !566, line: 409, baseType: !570, size: 32, offset: 256)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1491, file: !566, line: 410, baseType: !570, size: 32, offset: 288)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1180, line: 100, size: 224, elements: !1505)
!1505 = !{!1506, !1511, !1512, !1521, !1526, !1531, !1536}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1504, file: !1180, line: 101, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1180, line: 76, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!108, !1402, !1273}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1504, file: !1180, line: 102, baseType: !1507, size: 32, offset: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1504, file: !1180, line: 103, baseType: !1513, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1180, line: 83, baseType: !1514)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!108, !1402, !1273, !1517, !104}
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1180, line: 72, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{null, !1402, !1273, !104}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1504, file: !1180, line: 104, baseType: !1522, size: 32, offset: 96)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1180, line: 79, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!108, !1402, !1273, !1229}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1504, file: !1180, line: 105, baseType: !1527, size: 32, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1180, line: 88, baseType: !1528)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!1179, !1402, !1273}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1504, file: !1180, line: 106, baseType: !1532, size: 32, offset: 160)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1180, line: 92, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!108, !1402, !1273, !1299}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1504, file: !1180, line: 107, baseType: !1537, size: 32, offset: 192)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1180, line: 96, baseType: !1538)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!108, !1402, !1273, !104}
!1541 = !{!1542, !1548, !1550, !1560, !1562, !1564, !1566, !1571, !1573, !1575, !1580, !1582, !1584, !1586, !1588, !1590, !1592, !1594, !1596, !1598, !1600, !1602, !1604, !1606, !1608, !1622, !1624, !1626, !1628, !1630, !1632, !1634, !1636, !1638, !1640, !1642, !1644, !1646, !1648, !1650, !1371, !1652, !1654, !1667, !1669, !1671, !1673, !1675, !1677}
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1373, file: !1544, line: 762, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1544 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 112, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 7)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1373, file: !1544, line: 762, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1373, file: !1544, line: 762, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1554)
!1554 = !{!1555, !1559}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1553, file: !469, line: 60, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!108, !1402}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1553, file: !469, line: 65, baseType: !1402, size: 32, offset: 32)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_27", scope: !1373, file: !1544, line: 766, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "__device_dts_ord_27", scope: !1373, file: !1544, line: 766, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_27", scope: !1373, file: !1544, line: 766, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1373, file: !1544, line: 770, type: !1568, isLocal: false, isDefinition: true, align: 16)
!1568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 96, elements: !1569)
!1569 = !{!1570}
!1570 = !DISubrange(count: 6)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1373, file: !1544, line: 770, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1373, file: !1544, line: 770, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1373, file: !1544, line: 774, type: !1577, isLocal: false, isDefinition: true, align: 16)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 80, elements: !1578)
!1578 = !{!1579}
!1579 = !DISubrange(count: 5)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1373, file: !1544, line: 774, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1373, file: !1544, line: 774, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1373, file: !1544, line: 778, type: !1577, isLocal: false, isDefinition: true, align: 16)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1373, file: !1544, line: 778, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1373, file: !1544, line: 778, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_80", scope: !1373, file: !1544, line: 782, type: !1577, isLocal: false, isDefinition: true, align: 16)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__device_dts_ord_80", scope: !1373, file: !1544, line: 782, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_80", scope: !1373, file: !1544, line: 782, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_81", scope: !1373, file: !1544, line: 786, type: !1577, isLocal: false, isDefinition: true, align: 16)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__device_dts_ord_81", scope: !1373, file: !1544, line: 786, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_81", scope: !1373, file: !1544, line: 786, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_82", scope: !1373, file: !1544, line: 790, type: !1577, isLocal: false, isDefinition: true, align: 16)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "__device_dts_ord_82", scope: !1373, file: !1544, line: 790, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_82", scope: !1373, file: !1544, line: 790, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1373, file: !1544, line: 762, type: !1610, isLocal: true, isDefinition: true)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1611, line: 237, size: 128, elements: !1612)
!1611 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1612 = !{!1613, !1614, !1615}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1610, file: !1611, line: 239, baseType: !1471, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1610, file: !1611, line: 241, baseType: !1402, size: 32, offset: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1610, file: !1611, line: 243, baseType: !1616, size: 64, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1449, line: 40, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1449, line: 35, size: 64, elements: !1618)
!1618 = !{!1619, !1621}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1617, file: !1449, line: 36, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1617, file: !1449, line: 37, baseType: !1620, size: 32, offset: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1373, file: !1544, line: 762, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1373, file: !1544, line: 766, type: !1610, isLocal: true, isDefinition: true)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_27", scope: !1373, file: !1544, line: 766, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1373, file: !1544, line: 770, type: !1610, isLocal: true, isDefinition: true)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1373, file: !1544, line: 770, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1373, file: !1544, line: 774, type: !1610, isLocal: true, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1373, file: !1544, line: 774, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1373, file: !1544, line: 778, type: !1610, isLocal: true, isDefinition: true)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1373, file: !1544, line: 778, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1373, file: !1544, line: 782, type: !1610, isLocal: true, isDefinition: true)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_80", scope: !1373, file: !1544, line: 782, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1373, file: !1544, line: 786, type: !1610, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_81", scope: !1373, file: !1544, line: 786, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1373, file: !1544, line: 790, type: !1610, isLocal: true, isDefinition: true)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_82", scope: !1373, file: !1544, line: 790, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1373, file: !1544, line: 656, type: !1395, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1373, file: !1544, line: 766, type: !1656, isLocal: true, isDefinition: true)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1611, line: 224, size: 160, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1657, file: !1611, line: 226, baseType: !1466, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1657, file: !1611, line: 228, baseType: !1229, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1657, file: !1611, line: 230, baseType: !108, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1657, file: !1611, line: 231, baseType: !1663, size: 64, offset: 96)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1225, line: 343, size: 64, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1663, file: !1225, line: 344, baseType: !113, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1663, file: !1225, line: 345, baseType: !113, size: 32, offset: 32)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1373, file: !1544, line: 770, type: !1656, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1373, file: !1544, line: 774, type: !1656, isLocal: true, isDefinition: true)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1373, file: !1544, line: 778, type: !1656, isLocal: true, isDefinition: true)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1373, file: !1544, line: 782, type: !1656, isLocal: true, isDefinition: true)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1373, file: !1544, line: 786, type: !1656, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1373, file: !1544, line: 790, type: !1656, isLocal: true, isDefinition: true)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1681, file: !1820, line: 44, type: !1896, isLocal: false, isDefinition: true)
!1681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1682, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1683, retainedTypes: !1716, globals: !1817, splitDebugInlining: false, nameTableKind: None)
!1682 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!1683 = !{!30, !1684, !1691, !1698, !1705, !1711, !1179}
!1684 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1313, line: 47, baseType: !32, size: 32, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689, !1690}
!1686 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1687 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1688 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1689 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1690 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1691 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1313, line: 75, baseType: !32, size: 32, elements: !1692)
!1692 = !{!1693, !1694, !1695, !1696, !1697}
!1693 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1694 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1695 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1696 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1697 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1698 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1313, line: 92, baseType: !32, size: 32, elements: !1699)
!1699 = !{!1700, !1701, !1702, !1703, !1704}
!1700 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1701 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1702 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1703 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1704 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1705 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1313, line: 84, baseType: !32, size: 32, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1710}
!1707 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1708 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1709 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1710 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1313, line: 107, baseType: !32, size: 32, elements: !1712)
!1712 = !{!1713, !1714, !1715}
!1713 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1714 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1715 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1716 = !{!104, !108, !1717, !165, !164, !1766, !113, !1273, !1777, !168, !114, !1816}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1313, line: 336, size: 160, elements: !1720)
!1720 = !{!1721, !1740, !1744, !1748, !1761}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1719, file: !1313, line: 365, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!108, !1725, !1334}
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1728)
!1728 = !{!1729, !1730, !1731, !1732, !1738, !1739}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1727, file: !411, line: 380, baseType: !105, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1727, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1727, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1727, file: !411, line: 386, baseType: !1733, size: 32, offset: 96)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1735)
!1735 = !{!1736, !1737}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1734, file: !411, line: 359, baseType: !164, size: 8)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1734, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1727, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1727, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1719, file: !1313, line: 366, baseType: !1741, size: 32, offset: 32)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{null, !1725, !165}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1719, file: !1313, line: 374, baseType: !1745, size: 32, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!108, !1725}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1719, file: !1313, line: 377, baseType: !1749, size: 32, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{!108, !1725, !1752}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1313, line: 122, size: 64, elements: !1755)
!1755 = !{!1756, !1757, !1758, !1759, !1760}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1754, file: !1313, line: 123, baseType: !113, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1754, file: !1313, line: 124, baseType: !164, size: 8, offset: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1754, file: !1313, line: 125, baseType: !164, size: 8, offset: 40)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1754, file: !1313, line: 126, baseType: !164, size: 8, offset: 48)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1754, file: !1313, line: 127, baseType: !164, size: 8, offset: 56)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1719, file: !1313, line: 379, baseType: !1762, size: 32, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{!108, !1725, !1765}
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !566, line: 648, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 639, size: 224, elements: !1769)
!1769 = !{!1770, !1771, !1772, !1773, !1774, !1775, !1776}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1768, file: !566, line: 641, baseType: !570, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1768, file: !566, line: 642, baseType: !570, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1768, file: !566, line: 643, baseType: !570, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1768, file: !566, line: 644, baseType: !570, size: 32, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1768, file: !566, line: 645, baseType: !570, size: 32, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1768, file: !566, line: 646, baseType: !570, size: 32, offset: 160)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1768, file: !566, line: 647, baseType: !570, size: 32, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1180, line: 100, size: 224, elements: !1780)
!1780 = !{!1781, !1786, !1787, !1796, !1801, !1806, !1811}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1779, file: !1180, line: 101, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1180, line: 76, baseType: !1783)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!108, !1725, !1273}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1779, file: !1180, line: 102, baseType: !1782, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1779, file: !1180, line: 103, baseType: !1788, size: 32, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1180, line: 83, baseType: !1789)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!108, !1725, !1273, !1792, !104}
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1180, line: 72, baseType: !1793)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{null, !1725, !1273, !104}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1779, file: !1180, line: 104, baseType: !1797, size: 32, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1180, line: 79, baseType: !1798)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!108, !1725, !1273, !1229}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1779, file: !1180, line: 105, baseType: !1802, size: 32, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1180, line: 88, baseType: !1803)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{!1179, !1725, !1273}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1779, file: !1180, line: 106, baseType: !1807, size: 32, offset: 160)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1180, line: 92, baseType: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!108, !1725, !1273, !1299}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1779, file: !1180, line: 107, baseType: !1812, size: 32, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1180, line: 96, baseType: !1813)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!108, !1725, !1273, !104}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!1817 = !{!1679, !1818, !1822, !1824, !1831, !1833, !1877, !1880, !1882, !1885, !1888, !1890}
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1681, file: !1820, line: 1914, type: !1821, isLocal: false, isDefinition: true, align: 16)
!1820 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 128, elements: !244)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1681, file: !1820, line: 1914, type: !1726, isLocal: false, isDefinition: true, align: 32)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1681, file: !1820, line: 1914, type: !1826, isLocal: true, isDefinition: true, align: 32)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1827)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1827, file: !469, line: 60, baseType: !1745, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1827, file: !469, line: 65, baseType: !1725, size: 32, offset: 32)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1681, file: !1820, line: 1914, type: !1734, isLocal: true, isDefinition: true, align: 8)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1681, file: !1820, line: 1914, type: !1835, isLocal: true, isDefinition: true)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1837, line: 22, size: 224, elements: !1838)
!1837 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1838 = !{!1839, !1840, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1836, file: !1837, line: 24, baseType: !1766, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1836, file: !1837, line: 26, baseType: !1841, size: 32, offset: 32)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1225, line: 343, size: 64, elements: !1844)
!1844 = !{!1845, !1846}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1843, file: !1225, line: 344, baseType: !113, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1843, file: !1225, line: 345, baseType: !113, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1836, file: !1837, line: 28, baseType: !439, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1836, file: !1837, line: 30, baseType: !422, size: 8, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1836, file: !1837, line: 32, baseType: !108, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1836, file: !1837, line: 34, baseType: !422, size: 8, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1836, file: !1837, line: 36, baseType: !422, size: 8, offset: 168)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1836, file: !1837, line: 38, baseType: !422, size: 8, offset: 176)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1836, file: !1837, line: 40, baseType: !422, size: 8, offset: 184)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1836, file: !1837, line: 41, baseType: !1855, size: 32, offset: 192)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1858, line: 60, size: 64, elements: !1859)
!1858 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1859 = !{!1860, !1876}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1857, file: !1858, line: 69, baseType: !1861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1858, line: 50, size: 64, elements: !1864)
!1864 = !{!1865, !1874, !1875}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1863, file: !1858, line: 52, baseType: !1866, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1869, line: 37, baseType: !1870)
!1869 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1869, line: 32, size: 64, elements: !1871)
!1871 = !{!1872, !1873}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1870, file: !1869, line: 34, baseType: !113, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1870, file: !1869, line: 36, baseType: !113, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1863, file: !1858, line: 54, baseType: !164, size: 8, offset: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1863, file: !1858, line: 56, baseType: !164, size: 8, offset: 40)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1857, file: !1858, line: 71, baseType: !164, size: 8, offset: 32)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1681, file: !1820, line: 1914, type: !1879, isLocal: true, isDefinition: true)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1842, size: 64, elements: !770)
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1681, file: !1820, line: 1914, type: !1856, isLocal: true, isDefinition: true)
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1681, file: !1820, line: 1914, type: !1884, isLocal: true, isDefinition: true)
!1884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 64, elements: !770)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1681, file: !1820, line: 1914, type: !1887, isLocal: true, isDefinition: true)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1867, size: 128, elements: !675)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1681, file: !1820, line: 1539, type: !1718, isLocal: true, isDefinition: true)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1681, file: !1820, line: 1914, type: !1892, isLocal: true, isDefinition: true)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1837, line: 74, size: 64, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1892, file: !1837, line: 76, baseType: !113, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1892, file: !1837, line: 78, baseType: !1725, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !1898)
!1898 = !{!1899, !1900}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1897, file: !254, line: 17, baseType: !105, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1897, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1903, file: !1979, line: 65, type: !570, isLocal: true, isDefinition: true)
!1903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1905, retainedTypes: !1906, globals: !1976, splitDebugInlining: false, nameTableKind: None)
!1904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!1905 = !{!985}
!1906 = !{!109, !1907, !220, !164, !113, !1915, !1946}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !788, line: 770, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 764, size: 128, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1909, file: !788, line: 766, baseType: !570, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1909, file: !788, line: 767, baseType: !570, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1909, file: !788, line: 768, baseType: !570, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1909, file: !788, line: 769, baseType: !792, size: 32, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !788, line: 426, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 411, size: 28704, elements: !1918)
!1918 = !{!1919, !1921, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1936, !1941, !1945}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1917, file: !788, line: 413, baseType: !1920, size: 256)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 256, elements: !244)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1917, file: !788, line: 414, baseType: !1922, size: 768, offset: 256)
!1922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1923)
!1923 = !{!1924}
!1924 = !DISubrange(count: 24)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1917, file: !788, line: 415, baseType: !1920, size: 256, offset: 1024)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1917, file: !788, line: 416, baseType: !1922, size: 768, offset: 1280)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1917, file: !788, line: 417, baseType: !1920, size: 256, offset: 2048)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1917, file: !788, line: 418, baseType: !1922, size: 768, offset: 2304)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1917, file: !788, line: 419, baseType: !1920, size: 256, offset: 3072)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1917, file: !788, line: 420, baseType: !1922, size: 768, offset: 3328)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1917, file: !788, line: 421, baseType: !1920, size: 256, offset: 4096)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1917, file: !788, line: 422, baseType: !1933, size: 1792, offset: 4352)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1934)
!1934 = !{!1935}
!1935 = !DISubrange(count: 56)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1917, file: !788, line: 423, baseType: !1937, size: 1920, offset: 6144)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 1920, elements: !1939)
!1938 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!1939 = !{!1940}
!1940 = !DISubrange(count: 240)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1917, file: !788, line: 424, baseType: !1942, size: 20608, offset: 8064)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1943)
!1943 = !{!1944}
!1944 = !DISubrange(count: 644)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1917, file: !788, line: 425, baseType: !570, size: 32, offset: 28672)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !1949)
!1949 = !{!1950, !1951, !1952, !1953, !1954, !1955, !1956, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1967, !1968, !1969, !1971, !1973, !1975}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1948, file: !788, line: 447, baseType: !792, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1948, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1948, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1948, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1948, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1948, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1948, file: !788, line: 453, baseType: !1957, size: 96, offset: 192)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 96, elements: !503)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1948, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1948, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1948, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1948, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1948, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1948, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1948, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1948, file: !788, line: 461, baseType: !1966, size: 64, offset: 512)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 64, elements: !675)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1948, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1948, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1948, file: !788, line: 464, baseType: !1970, size: 128, offset: 640)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 128, elements: !461)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1948, file: !788, line: 465, baseType: !1972, size: 160, offset: 768)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 160, elements: !1578)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1948, file: !788, line: 466, baseType: !1974, size: 160, offset: 928)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1578)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1948, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!1976 = !{!1977, !2003, !2006, !2008, !2010, !1901}
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1903, file: !1979, line: 285, type: !1980, isLocal: true, isDefinition: true, align: 32)
!1979 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1982)
!1982 = !{!1983, !2002}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1981, file: !469, line: 60, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!108, !1987}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994, !2000, !2001}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1989, file: !411, line: 380, baseType: !105, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1989, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1989, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1989, file: !411, line: 386, baseType: !1995, size: 32, offset: 96)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1997)
!1997 = !{!1998, !1999}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1996, file: !411, line: 359, baseType: !164, size: 8)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1996, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1989, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1989, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1981, file: !469, line: 65, baseType: !1987, size: 32, offset: 32)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "lock", scope: !1903, file: !1979, line: 34, type: !2005, isLocal: true, isDefinition: true)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "last_load", scope: !1903, file: !1979, line: 36, type: !113, isLocal: true, isDefinition: true)
!2008 = !DIGlobalVariableExpression(var: !2009, expr: !DIExpression())
!2009 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1903, file: !1979, line: 48, type: !113, isLocal: true, isDefinition: true)
!2010 = !DIGlobalVariableExpression(var: !2011, expr: !DIExpression())
!2011 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1903, file: !1979, line: 54, type: !113, isLocal: true, isDefinition: true)
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2014, file: !2096, line: 22, type: !2098, isLocal: true, isDefinition: true)
!2014 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2015, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2016, retainedTypes: !2017, globals: !2093, splitDebugInlining: false, nameTableKind: None)
!2015 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2016 = !{!1376, !1382}
!2017 = !{!2018, !2082, !2087, !1429, !1382, !1376, !2092, !104}
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1377, line: 523, size: 288, elements: !2021)
!2021 = !{!2022, !2041, !2045, !2049, !2053, !2054, !2055, !2059, !2078}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2020, file: !1377, line: 524, baseType: !2023, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{!108, !2026, !1417, !1418}
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2028)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2029)
!2029 = !{!2030, !2031, !2032, !2033, !2039, !2040}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2028, file: !411, line: 380, baseType: !105, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2028, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2028, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2028, file: !411, line: 386, baseType: !2034, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2035, file: !411, line: 359, baseType: !164, size: 8)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2035, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2028, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2028, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2020, file: !1377, line: 530, baseType: !2042, size: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 32)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{!108, !2026, !1423}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2020, file: !1377, line: 532, baseType: !2046, size: 32, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!108, !2026, !1429, !1424}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2020, file: !1377, line: 535, baseType: !2050, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!108, !2026, !1429}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2020, file: !1377, line: 537, baseType: !2050, size: 32, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2020, file: !1377, line: 539, baseType: !2050, size: 32, offset: 160)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2020, file: !1377, line: 541, baseType: !2056, size: 32, offset: 192)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!108, !2026, !1417, !1376, !1382}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2020, file: !1377, line: 544, baseType: !2060, size: 32, offset: 224)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 32)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!108, !2026, !2063, !422}
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 32)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1377, line: 478, size: 96, elements: !2065)
!2065 = !{!2066, !2072, !2077}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2064, file: !1377, line: 482, baseType: !2067, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1449, line: 33, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1449, line: 29, size: 32, elements: !2069)
!2069 = !{!2070}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2068, file: !1449, line: 30, baseType: !2071, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2064, file: !1377, line: 485, baseType: !2073, size: 32, offset: 32)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1377, line: 464, baseType: !2074)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 32)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{null, !2026, !2063, !1429}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2064, file: !1377, line: 493, baseType: !1429, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2020, file: !1377, line: 547, baseType: !2079, size: 32, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!113, !2026}
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1377, line: 428, size: 32, elements: !2085)
!2085 = !{!2086}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2084, file: !1377, line: 434, baseType: !1429, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1377, line: 441, size: 32, elements: !2090)
!2090 = !{!2091}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2089, file: !1377, line: 447, baseType: !1429, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2093 = !{!2094, !2012}
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2095 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2014, file: !2096, line: 37, type: !2097, isLocal: true, isDefinition: true)
!2096 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!2098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2099, size: 352, elements: !2100)
!2099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2026)
!2100 = !{!2101}
!2101 = !DISubrange(count: 11)
!2102 = !DIGlobalVariableExpression(var: !2103, expr: !DIExpression())
!2103 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2104, file: !2145, line: 139, type: !2151, isLocal: false, isDefinition: true)
!2104 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2105, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2106, globals: !2142, splitDebugInlining: false, nameTableKind: None)
!2105 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 510, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 477, size: 1216, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2109, file: !566, line: 479, baseType: !570, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2109, file: !566, line: 480, baseType: !570, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2109, file: !566, line: 481, baseType: !570, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2109, file: !566, line: 482, baseType: !570, size: 32, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2109, file: !566, line: 483, baseType: !570, size: 32, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2109, file: !566, line: 484, baseType: !570, size: 32, offset: 160)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2109, file: !566, line: 485, baseType: !1198, size: 64, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2109, file: !566, line: 486, baseType: !570, size: 32, offset: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2109, file: !566, line: 487, baseType: !570, size: 32, offset: 288)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2109, file: !566, line: 488, baseType: !1198, size: 64, offset: 320)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2109, file: !566, line: 489, baseType: !570, size: 32, offset: 384)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2109, file: !566, line: 490, baseType: !570, size: 32, offset: 416)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2109, file: !566, line: 491, baseType: !1198, size: 64, offset: 448)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2109, file: !566, line: 492, baseType: !570, size: 32, offset: 512)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2109, file: !566, line: 493, baseType: !570, size: 32, offset: 544)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2109, file: !566, line: 494, baseType: !1198, size: 64, offset: 576)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2109, file: !566, line: 495, baseType: !570, size: 32, offset: 640)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2109, file: !566, line: 496, baseType: !570, size: 32, offset: 672)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2109, file: !566, line: 497, baseType: !1198, size: 64, offset: 704)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2109, file: !566, line: 498, baseType: !570, size: 32, offset: 768)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2109, file: !566, line: 499, baseType: !570, size: 32, offset: 800)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2109, file: !566, line: 500, baseType: !1198, size: 64, offset: 832)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2109, file: !566, line: 501, baseType: !570, size: 32, offset: 896)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2109, file: !566, line: 502, baseType: !570, size: 32, offset: 928)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2109, file: !566, line: 503, baseType: !1198, size: 64, offset: 960)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2109, file: !566, line: 504, baseType: !570, size: 32, offset: 1024)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2109, file: !566, line: 505, baseType: !570, size: 32, offset: 1056)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2109, file: !566, line: 506, baseType: !113, size: 32, offset: 1088)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2109, file: !566, line: 507, baseType: !570, size: 32, offset: 1120)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2109, file: !566, line: 508, baseType: !570, size: 32, offset: 1152)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2109, file: !566, line: 509, baseType: !570, size: 32, offset: 1184)
!2142 = !{!2143, !2146, !2102}
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2104, file: !2145, line: 137, type: !113, isLocal: false, isDefinition: true)
!2145 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2104, file: !2145, line: 138, type: !2148, isLocal: false, isDefinition: true)
!2148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2149, size: 128, elements: !2150)
!2149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2150 = !{!234}
!2151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2149, size: 64, elements: !244)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2154, file: !2157, line: 23, type: !2158, isLocal: false, isDefinition: true)
!2154 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2155, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, globals: !2156, splitDebugInlining: false, nameTableKind: None)
!2155 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2156 = !{!2152}
!2157 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2161, file: !2165, line: 37, type: !2417, isLocal: false, isDefinition: true)
!2161 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2162, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2163, retainedTypes: !2172, globals: !2245, splitDebugInlining: false, nameTableKind: None)
!2162 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2163 = !{!2164, !30, !985}
!2164 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2165, line: 63, baseType: !32, size: 32, elements: !2166)
!2165 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2166 = !{!2167, !2168, !2169, !2170, !2171}
!2167 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2168 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2169 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2170 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2171 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2172 = !{!439, !104, !108, !2173, !443, !113, !2203, !220, !164, !2228}
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2175)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2176, line: 51, size: 64, elements: !2177)
!2176 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2177 = !{!2178, !2198}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2175, file: !2176, line: 52, baseType: !2179, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2176, line: 38, baseType: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!108, !2183, !209, !168}
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2196, !2197}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2185, file: !411, line: 380, baseType: !105, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2185, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2185, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2185, file: !411, line: 386, baseType: !2191, size: 32, offset: 96)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2193)
!2193 = !{!2194, !2195}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2192, file: !411, line: 359, baseType: !164, size: 8)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2192, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2185, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2185, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2175, file: !2176, line: 53, baseType: !2199, size: 32, offset: 32)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2176, line: 47, baseType: !2200)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!108, !2183, !209, !168, !113}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2205, file: !788, line: 447, baseType: !792, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2205, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2205, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2205, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2205, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2205, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2205, file: !788, line: 453, baseType: !1957, size: 96, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2205, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2205, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2205, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2205, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2205, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2205, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2205, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2205, file: !788, line: 461, baseType: !1966, size: 64, offset: 512)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2205, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2205, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2205, file: !788, line: 464, baseType: !1970, size: 128, offset: 640)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2205, file: !788, line: 465, baseType: !1972, size: 160, offset: 768)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2205, file: !788, line: 466, baseType: !1974, size: 160, offset: 928)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2205, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !788, line: 426, baseType: !2230)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 411, size: 28704, elements: !2231)
!2231 = !{!2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2230, file: !788, line: 413, baseType: !1920, size: 256)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2230, file: !788, line: 414, baseType: !1922, size: 768, offset: 256)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2230, file: !788, line: 415, baseType: !1920, size: 256, offset: 1024)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2230, file: !788, line: 416, baseType: !1922, size: 768, offset: 1280)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2230, file: !788, line: 417, baseType: !1920, size: 256, offset: 2048)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2230, file: !788, line: 418, baseType: !1922, size: 768, offset: 2304)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2230, file: !788, line: 419, baseType: !1920, size: 256, offset: 3072)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2230, file: !788, line: 420, baseType: !1922, size: 768, offset: 3328)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2230, file: !788, line: 421, baseType: !1920, size: 256, offset: 4096)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2230, file: !788, line: 422, baseType: !1933, size: 1792, offset: 4352)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2230, file: !788, line: 423, baseType: !1937, size: 1920, offset: 6144)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2230, file: !788, line: 424, baseType: !1942, size: 20608, offset: 8064)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2230, file: !788, line: 425, baseType: !570, size: 32, offset: 28672)
!2245 = !{!2159, !2246, !2368, !2377, !2379, !2382, !2387, !2389, !2394}
!2246 = !DIGlobalVariableExpression(var: !2247, expr: !DIExpression())
!2247 = distinct !DIGlobalVariable(name: "_kernel", scope: !2161, file: !2165, line: 40, type: !2248, isLocal: false, isDefinition: true)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !363, line: 158, size: 288, elements: !2249)
!2249 = !{!2250, !2363}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2248, file: !363, line: 159, baseType: !2251, size: 192)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2252, size: 192, elements: !770)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !363, line: 100, size: 192, elements: !2253)
!2253 = !{!2254, !2255, !2256, !2357, !2358, !2359, !2360}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2252, file: !363, line: 102, baseType: !113, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2252, file: !363, line: 105, baseType: !443, size: 32, offset: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2252, file: !363, line: 108, baseType: !2257, size: 32, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !2259)
!2259 = !{!2260, !2318, !2330, !2331, !2332, !2333, !2339, !2352}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2258, file: !645, line: 247, baseType: !2261, size: 384)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !2262)
!2262 = !{!2263, !2287, !2294, !2295, !2296, !2305, !2306, !2307}
!2263 = !DIDerivedType(tag: DW_TAG_member, scope: !2261, file: !645, line: 60, baseType: !2264, size: 64)
!2264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !645, line: 60, size: 64, elements: !2265)
!2265 = !{!2266, !2281}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2264, file: !645, line: 61, baseType: !2267, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2268)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2269)
!2269 = !{!2270, !2276}
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !2268, file: !367, line: 38, baseType: !2271, size: 32)
!2271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2268, file: !367, line: 38, size: 32, elements: !2272)
!2272 = !{!2273, !2275}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2271, file: !367, line: 39, baseType: !2274, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2271, file: !367, line: 40, baseType: !2274, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, scope: !2268, file: !367, line: 42, baseType: !2277, size: 32, offset: 32)
!2277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2268, file: !367, line: 42, size: 32, elements: !2278)
!2278 = !{!2279, !2280}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2277, file: !367, line: 43, baseType: !2274, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2277, file: !367, line: 44, baseType: !2274, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2264, file: !645, line: 62, baseType: !2282, size: 64)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !2283)
!2283 = !{!2284}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2282, file: !670, line: 50, baseType: !2285, size: 64)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2286, size: 64, elements: !675)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2261, file: !645, line: 68, baseType: !2288, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2290)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2291)
!2291 = !{!2292}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2290, file: !363, line: 232, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2268)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2261, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2261, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!2296 = !DIDerivedType(tag: DW_TAG_member, scope: !2261, file: !645, line: 90, baseType: !2297, size: 16, offset: 112)
!2297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !645, line: 90, size: 16, elements: !2298)
!2298 = !{!2299, !2304}
!2299 = !DIDerivedType(tag: DW_TAG_member, scope: !2297, file: !645, line: 91, baseType: !2300, size: 16)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2297, file: !645, line: 91, size: 16, elements: !2301)
!2301 = !{!2302, !2303}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2300, file: !645, line: 96, baseType: !693, size: 8)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2300, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2297, file: !645, line: 100, baseType: !168, size: 16)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2261, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2261, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2261, file: !645, line: 131, baseType: !2308, size: 192, offset: 192)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2309)
!2309 = !{!2310, !2311, !2317}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2308, file: !363, line: 245, baseType: !2267, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2308, file: !363, line: 246, baseType: !2312, size: 32, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2313)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{null, !2316}
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2308, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2258, file: !645, line: 250, baseType: !2319, size: 288, offset: 384)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !2320)
!2320 = !{!2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2319, file: !712, line: 26, baseType: !113, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2319, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2319, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2319, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2319, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2319, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2319, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2319, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2319, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2258, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2258, file: !645, line: 256, baseType: !2289, size: 64, offset: 704)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2258, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2258, file: !645, line: 300, baseType: !2334, size: 96, offset: 800)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !2335)
!2335 = !{!2336, !2337, !2338}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2334, file: !645, line: 153, baseType: !22, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2334, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2334, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2258, file: !645, line: 325, baseType: !2340, size: 32, offset: 896)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2342)
!2342 = !{!2343, !2349, !2350}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2341, file: !359, line: 5074, baseType: !2344, size: 96)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !2345)
!2345 = !{!2346, !2347, !2348}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2344, file: !738, line: 57, baseType: !741, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2344, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2344, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2341, file: !359, line: 5075, baseType: !2289, size: 64, offset: 96)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2341, file: !359, line: 5076, baseType: !2351, offset: 160)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2258, file: !645, line: 343, baseType: !2353, size: 64, offset: 928)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !2354)
!2354 = !{!2355, !2356}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2353, file: !712, line: 63, baseType: !113, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2353, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2252, file: !363, line: 111, baseType: !2257, size: 32, offset: 96)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2252, file: !363, line: 124, baseType: !108, size: 32, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2252, file: !363, line: 127, baseType: !164, size: 8, offset: 160)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2252, file: !363, line: 153, baseType: !2361, offset: 168)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2362, line: 33, elements: !437)
!2362 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2248, file: !363, line: 170, baseType: !2364, size: 96, offset: 192)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !2365)
!2365 = !{!2366, !2367}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2364, file: !363, line: 86, baseType: !2257, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2364, file: !363, line: 90, baseType: !2293, size: 64, offset: 32)
!2368 = !DIGlobalVariableExpression(var: !2369, expr: !DIExpression())
!2369 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2161, file: !2165, line: 43, type: !2370, isLocal: false, isDefinition: true, align: 512)
!2370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2371, size: 8704, elements: !2375)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2372, line: 47, size: 8, elements: !2373)
!2372 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2373 = !{!2374}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2371, file: !2372, line: 48, baseType: !107, size: 8)
!2375 = !{!2376}
!2376 = !DISubrange(count: 1088)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2161, file: !2165, line: 44, type: !2258, isLocal: false, isDefinition: true)
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2161, file: !2165, line: 48, type: !2381, isLocal: false, isDefinition: true)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2258, size: 1024, elements: !770)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2161, file: !2165, line: 86, type: !2384, isLocal: false, isDefinition: true, align: 512)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2371, size: 16896, elements: !2385)
!2385 = !{!771, !2386}
!2386 = !DISubrange(count: 2112)
!2387 = !DIGlobalVariableExpression(var: !2388, expr: !DIExpression())
!2388 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2161, file: !2165, line: 217, type: !422, isLocal: false, isDefinition: true)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2161, file: !2165, line: 50, type: !2391, isLocal: true, isDefinition: true, align: 512)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2371, size: 3072, elements: !2392)
!2392 = !{!771, !2393}
!2393 = !DISubrange(count: 384)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "levels", scope: !2396, file: !2165, line: 232, type: !2416, isLocal: true, isDefinition: true)
!2396 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2165, file: !2165, line: 230, type: !2397, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !2399)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{null, !2164}
!2399 = !{!2400, !2401, !2411, !2415}
!2400 = !DILocalVariable(name: "level", arg: 1, scope: !2396, file: !2165, line: 230, type: !2164)
!2401 = !DILocalVariable(name: "entry", scope: !2396, file: !2165, line: 244, type: !2402)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2405)
!2405 = !{!2406, !2410}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2404, file: !469, line: 60, baseType: !2407, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!108, !2183}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2404, file: !469, line: 65, baseType: !2183, size: 32, offset: 32)
!2411 = !DILocalVariable(name: "dev", scope: !2412, file: !2165, line: 247, type: !2183)
!2412 = distinct !DILexicalBlock(scope: !2413, file: !2165, line: 246, column: 64)
!2413 = distinct !DILexicalBlock(scope: !2414, file: !2165, line: 246, column: 2)
!2414 = distinct !DILexicalBlock(scope: !2396, file: !2165, line: 246, column: 2)
!2415 = !DILocalVariable(name: "rc", scope: !2412, file: !2165, line: 248, type: !108)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2402, size: 192, elements: !1569)
!2417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2418)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !2419)
!2419 = !{!2420, !2421}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2418, file: !254, line: 17, baseType: !105, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2418, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!2422 = !DIGlobalVariableExpression(var: !2423, expr: !DIExpression())
!2423 = distinct !DIGlobalVariable(name: "states_str", scope: !2424, file: !2425, line: 276, type: !2546, isLocal: true, isDefinition: true)
!2424 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2425, file: !2425, line: 271, type: !2426, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !2537)
!2425 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!105, !2428, !443, !439}
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !2429)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !2431)
!2431 = !{!2432, !2490, !2502, !2503, !2504, !2505, !2511, !2524}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2430, file: !645, line: 247, baseType: !2433, size: 384)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !2434)
!2434 = !{!2435, !2459, !2466, !2467, !2468, !2477, !2478, !2479}
!2435 = !DIDerivedType(tag: DW_TAG_member, scope: !2433, file: !645, line: 60, baseType: !2436, size: 64)
!2436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2433, file: !645, line: 60, size: 64, elements: !2437)
!2437 = !{!2438, !2453}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2436, file: !645, line: 61, baseType: !2439, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2441)
!2441 = !{!2442, !2448}
!2442 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !367, line: 38, baseType: !2443, size: 32)
!2443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !367, line: 38, size: 32, elements: !2444)
!2444 = !{!2445, !2447}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2443, file: !367, line: 39, baseType: !2446, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2443, file: !367, line: 40, baseType: !2446, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !367, line: 42, baseType: !2449, size: 32, offset: 32)
!2449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2440, file: !367, line: 42, size: 32, elements: !2450)
!2450 = !{!2451, !2452}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2449, file: !367, line: 43, baseType: !2446, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2449, file: !367, line: 44, baseType: !2446, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2436, file: !645, line: 62, baseType: !2454, size: 64)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !2455)
!2455 = !{!2456}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2454, file: !670, line: 50, baseType: !2457, size: 64)
!2457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2458, size: 64, elements: !675)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2433, file: !645, line: 68, baseType: !2460, size: 32, offset: 64)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2462)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2463)
!2463 = !{!2464}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2462, file: !363, line: 232, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2440)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2433, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2433, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!2468 = !DIDerivedType(tag: DW_TAG_member, scope: !2433, file: !645, line: 90, baseType: !2469, size: 16, offset: 112)
!2469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2433, file: !645, line: 90, size: 16, elements: !2470)
!2470 = !{!2471, !2476}
!2471 = !DIDerivedType(tag: DW_TAG_member, scope: !2469, file: !645, line: 91, baseType: !2472, size: 16)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2469, file: !645, line: 91, size: 16, elements: !2473)
!2473 = !{!2474, !2475}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2472, file: !645, line: 96, baseType: !693, size: 8)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2472, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2469, file: !645, line: 100, baseType: !168, size: 16)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2433, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2433, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2433, file: !645, line: 131, baseType: !2480, size: 192, offset: 192)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2481)
!2481 = !{!2482, !2483, !2489}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2480, file: !363, line: 245, baseType: !2439, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2480, file: !363, line: 246, baseType: !2484, size: 32, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2485)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{null, !2488}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2480, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2430, file: !645, line: 250, baseType: !2491, size: 288, offset: 384)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !2492)
!2492 = !{!2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2491, file: !712, line: 26, baseType: !113, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2491, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2491, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2491, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2491, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2491, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2491, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2491, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2491, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2430, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2430, file: !645, line: 256, baseType: !2461, size: 64, offset: 704)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2430, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2430, file: !645, line: 300, baseType: !2506, size: 96, offset: 800)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !2507)
!2507 = !{!2508, !2509, !2510}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2506, file: !645, line: 153, baseType: !22, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2506, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2506, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2430, file: !645, line: 325, baseType: !2512, size: 32, offset: 896)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2514)
!2514 = !{!2515, !2521, !2522}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2513, file: !359, line: 5074, baseType: !2516, size: 96)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !2517)
!2517 = !{!2518, !2519, !2520}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2516, file: !738, line: 57, baseType: !741, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2516, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2516, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2513, file: !359, line: 5075, baseType: !2461, size: 64, offset: 96)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2513, file: !359, line: 5076, baseType: !2523, offset: 160)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2430, file: !645, line: 343, baseType: !2525, size: 64, offset: 928)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !2526)
!2526 = !{!2527, !2528}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2525, file: !712, line: 63, baseType: !113, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2525, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!2529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2531, globals: !2533, splitDebugInlining: false, nameTableKind: None)
!2530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2531 = !{!104, !105, !109, !164, !108, !2532, !24, !439, !443, !22, !113, !114}
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2533 = !{!2422, !2534}
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "states_sz", scope: !2424, file: !2425, line: 279, type: !2536, isLocal: true, isDefinition: true)
!2536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2097, size: 256, elements: !244)
!2537 = !{!2538, !2539, !2540, !2541, !2542, !2543, !2544}
!2538 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2424, file: !2425, line: 271, type: !2428)
!2539 = !DILocalVariable(name: "buf", arg: 2, scope: !2424, file: !2425, line: 271, type: !443)
!2540 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2424, file: !2425, line: 271, type: !439)
!2541 = !DILocalVariable(name: "off", scope: !2424, file: !2425, line: 273, type: !439)
!2542 = !DILocalVariable(name: "bit", scope: !2424, file: !2425, line: 274, type: !164)
!2543 = !DILocalVariable(name: "thread_state", scope: !2424, file: !2425, line: 275, type: !164)
!2544 = !DILocalVariable(name: "index", scope: !2545, file: !2425, line: 293, type: !164)
!2545 = distinct !DILexicalBlock(scope: !2424, file: !2425, line: 293, column: 2)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !244)
!2547 = !DIGlobalVariableExpression(var: !2548, expr: !DIExpression())
!2548 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2549, file: !2657, line: 56, type: !2646, isLocal: false, isDefinition: true)
!2549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2551, globals: !2654, splitDebugInlining: false, nameTableKind: None)
!2550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2551 = !{!2552, !443, !104, !2652, !209, !109, !220, !108, !113, !114, !2653}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !2554)
!2554 = !{!2555, !2613, !2625, !2626, !2627, !2628, !2634, !2647}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2553, file: !645, line: 247, baseType: !2556, size: 384)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !2557)
!2557 = !{!2558, !2582, !2589, !2590, !2591, !2600, !2601, !2602}
!2558 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !645, line: 60, baseType: !2559, size: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !645, line: 60, size: 64, elements: !2560)
!2560 = !{!2561, !2576}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2559, file: !645, line: 61, baseType: !2562, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2563)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2564)
!2564 = !{!2565, !2571}
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !367, line: 38, baseType: !2566, size: 32)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !367, line: 38, size: 32, elements: !2567)
!2567 = !{!2568, !2570}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2566, file: !367, line: 39, baseType: !2569, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2566, file: !367, line: 40, baseType: !2569, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !367, line: 42, baseType: !2572, size: 32, offset: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !367, line: 42, size: 32, elements: !2573)
!2573 = !{!2574, !2575}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2572, file: !367, line: 43, baseType: !2569, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2572, file: !367, line: 44, baseType: !2569, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2559, file: !645, line: 62, baseType: !2577, size: 64)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !2578)
!2578 = !{!2579}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2577, file: !670, line: 50, baseType: !2580, size: 64)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2581, size: 64, elements: !675)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2556, file: !645, line: 68, baseType: !2583, size: 32, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2585)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2586)
!2586 = !{!2587}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2585, file: !363, line: 232, baseType: !2588, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2563)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2556, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2556, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !645, line: 90, baseType: !2592, size: 16, offset: 112)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !645, line: 90, size: 16, elements: !2593)
!2593 = !{!2594, !2599}
!2594 = !DIDerivedType(tag: DW_TAG_member, scope: !2592, file: !645, line: 91, baseType: !2595, size: 16)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2592, file: !645, line: 91, size: 16, elements: !2596)
!2596 = !{!2597, !2598}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2595, file: !645, line: 96, baseType: !693, size: 8)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2595, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2592, file: !645, line: 100, baseType: !168, size: 16)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2556, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2556, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2556, file: !645, line: 131, baseType: !2603, size: 192, offset: 192)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2604)
!2604 = !{!2605, !2606, !2612}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2603, file: !363, line: 245, baseType: !2562, size: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2603, file: !363, line: 246, baseType: !2607, size: 32, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2608)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{null, !2611}
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2603, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2553, file: !645, line: 250, baseType: !2614, size: 288, offset: 384)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !2615)
!2615 = !{!2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2614, file: !712, line: 26, baseType: !113, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2614, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2614, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2614, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2614, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2614, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2614, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2614, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2614, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2553, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2553, file: !645, line: 256, baseType: !2584, size: 64, offset: 704)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2553, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2553, file: !645, line: 300, baseType: !2629, size: 96, offset: 800)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !2630)
!2630 = !{!2631, !2632, !2633}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2629, file: !645, line: 153, baseType: !22, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2629, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2629, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2553, file: !645, line: 325, baseType: !2635, size: 32, offset: 896)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 32)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2637)
!2637 = !{!2638, !2644, !2645}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2636, file: !359, line: 5074, baseType: !2639, size: 96)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !2640)
!2640 = !{!2641, !2642, !2643}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2639, file: !738, line: 57, baseType: !741, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2639, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2639, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2636, file: !359, line: 5075, baseType: !2584, size: 64, offset: 96)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2636, file: !359, line: 5076, baseType: !2646, offset: 160)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2553, file: !645, line: 343, baseType: !2648, size: 64, offset: 928)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2648, file: !712, line: 63, baseType: !113, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2648, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2654 = !{!2547, !2655, !2658, !2660}
!2655 = !DIGlobalVariableExpression(var: !2656, expr: !DIExpression())
!2656 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2549, file: !2657, line: 404, type: !108, isLocal: true, isDefinition: true)
!2657 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2658 = !DIGlobalVariableExpression(var: !2659, expr: !DIExpression())
!2659 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2549, file: !2657, line: 405, type: !108, isLocal: true, isDefinition: true)
!2660 = !DIGlobalVariableExpression(var: !2661, expr: !DIExpression())
!2661 = distinct !DIGlobalVariable(name: "pending_current", scope: !2549, file: !2657, line: 425, type: !2552, isLocal: true, isDefinition: true)
!2662 = !DIGlobalVariableExpression(var: !2663, expr: !DIExpression())
!2663 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2664, file: !2694, line: 15, type: !114, isLocal: true, isDefinition: true)
!2664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2665, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2666, globals: !2691, splitDebugInlining: false, nameTableKind: None)
!2665 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2666 = !{!109, !104, !220, !113, !114, !108, !2667, !443, !111}
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 32)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2669)
!2669 = !{!2670, !2685, !2690}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2668, file: !363, line: 245, baseType: !2671, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2673)
!2673 = !{!2674, !2680}
!2674 = !DIDerivedType(tag: DW_TAG_member, scope: !2672, file: !367, line: 38, baseType: !2675, size: 32)
!2675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2672, file: !367, line: 38, size: 32, elements: !2676)
!2676 = !{!2677, !2679}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2675, file: !367, line: 39, baseType: !2678, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2675, file: !367, line: 40, baseType: !2678, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, scope: !2672, file: !367, line: 42, baseType: !2681, size: 32, offset: 32)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2672, file: !367, line: 42, size: 32, elements: !2682)
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2681, file: !367, line: 43, baseType: !2678, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2681, file: !367, line: 44, baseType: !2678, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2668, file: !363, line: 246, baseType: !2686, size: 32, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2687)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 32)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{null, !2667}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2668, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2691 = !{!2662, !2692, !2696, !2698}
!2692 = !DIGlobalVariableExpression(var: !2693, expr: !DIExpression())
!2693 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2664, file: !2694, line: 19, type: !2695, isLocal: true, isDefinition: true)
!2694 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2696 = !DIGlobalVariableExpression(var: !2697, expr: !DIExpression())
!2697 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2664, file: !2694, line: 25, type: !108, isLocal: true, isDefinition: true)
!2698 = !DIGlobalVariableExpression(var: !2699, expr: !DIExpression())
!2699 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2664, file: !2694, line: 17, type: !2700, isLocal: true, isDefinition: true)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2672)
!2701 = !DIGlobalVariableExpression(var: !2702, expr: !DIExpression())
!2702 = distinct !DIGlobalVariable(name: "lock", scope: !2703, file: !2825, line: 16, type: !2817, isLocal: true, isDefinition: true)
!2703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2704, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2705, globals: !2824, splitDebugInlining: false, nameTableKind: None)
!2704 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2705 = !{!2706, !443, !109, !104, !108, !2752, !2823}
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 32)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !2708)
!2708 = !{!2709, !2734, !2740, !2744, !2745, !2750, !2751}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2707, file: !359, line: 1324, baseType: !2710, size: 192)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2711)
!2711 = !{!2712, !2727, !2733}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2710, file: !363, line: 245, baseType: !2713, size: 64)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2714)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2715)
!2715 = !{!2716, !2722}
!2716 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !367, line: 38, baseType: !2717, size: 32)
!2717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !367, line: 38, size: 32, elements: !2718)
!2718 = !{!2719, !2721}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2717, file: !367, line: 39, baseType: !2720, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2717, file: !367, line: 40, baseType: !2720, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !367, line: 42, baseType: !2723, size: 32, offset: 32)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !367, line: 42, size: 32, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2723, file: !367, line: 43, baseType: !2720, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2723, file: !367, line: 44, baseType: !2720, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2710, file: !363, line: 246, baseType: !2728, size: 32, offset: 64)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2729)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 32)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{null, !2732}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2710, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2707, file: !359, line: 1327, baseType: !2735, size: 64, offset: 192)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2736)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2737)
!2737 = !{!2738}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2736, file: !363, line: 232, baseType: !2739, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2714)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !2707, file: !359, line: 1330, baseType: !2741, size: 32, offset: 256)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{null, !2706}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !2707, file: !359, line: 1333, baseType: !2741, size: 32, offset: 288)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2707, file: !359, line: 1336, baseType: !2746, size: 64, offset: 320)
!2746 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !2747)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !2748)
!2748 = !{!2749}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2747, file: !110, line: 66, baseType: !109, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2707, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2707, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 32)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !2754)
!2754 = !{!2755, !2784, !2796, !2797, !2798, !2799, !2805, !2818}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2753, file: !645, line: 247, baseType: !2756, size: 384)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !2757)
!2757 = !{!2758, !2768, !2770, !2771, !2772, !2781, !2782, !2783}
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2756, file: !645, line: 60, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2756, file: !645, line: 60, size: 64, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2759, file: !645, line: 61, baseType: !2713, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2759, file: !645, line: 62, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !2764)
!2764 = !{!2765}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2763, file: !670, line: 50, baseType: !2766, size: 64)
!2766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2767, size: 64, elements: !675)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2756, file: !645, line: 68, baseType: !2769, size: 32, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2756, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2756, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!2772 = !DIDerivedType(tag: DW_TAG_member, scope: !2756, file: !645, line: 90, baseType: !2773, size: 16, offset: 112)
!2773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2756, file: !645, line: 90, size: 16, elements: !2774)
!2774 = !{!2775, !2780}
!2775 = !DIDerivedType(tag: DW_TAG_member, scope: !2773, file: !645, line: 91, baseType: !2776, size: 16)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2773, file: !645, line: 91, size: 16, elements: !2777)
!2777 = !{!2778, !2779}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2776, file: !645, line: 96, baseType: !693, size: 8)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2776, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2773, file: !645, line: 100, baseType: !168, size: 16)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2756, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2756, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2756, file: !645, line: 131, baseType: !2710, size: 192, offset: 192)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2753, file: !645, line: 250, baseType: !2785, size: 288, offset: 384)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2785, file: !712, line: 26, baseType: !113, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2785, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2785, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2785, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2785, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2785, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2785, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2785, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2785, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2753, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2753, file: !645, line: 256, baseType: !2735, size: 64, offset: 704)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2753, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2753, file: !645, line: 300, baseType: !2800, size: 96, offset: 800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !2801)
!2801 = !{!2802, !2803, !2804}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2800, file: !645, line: 153, baseType: !22, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2800, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2800, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2753, file: !645, line: 325, baseType: !2806, size: 32, offset: 896)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 32)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2808)
!2808 = !{!2809, !2815, !2816}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2807, file: !359, line: 5074, baseType: !2810, size: 96)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !2811)
!2811 = !{!2812, !2813, !2814}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2810, file: !738, line: 57, baseType: !741, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2810, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2810, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2807, file: !359, line: 5075, baseType: !2735, size: 64, offset: 96)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2807, file: !359, line: 5076, baseType: !2817, offset: 160)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2753, file: !645, line: 343, baseType: !2819, size: 64, offset: 928)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !2820)
!2820 = !{!2821, !2822}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2819, file: !712, line: 63, baseType: !113, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2819, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 32)
!2824 = !{!2701}
!2825 = !DIFile(filename: "zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!2827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!2829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2831, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2832, retainedTypes: !2852, splitDebugInlining: false, nameTableKind: None)
!2831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2832 = !{!2833, !2841}
!2833 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2834, line: 69, baseType: !32, size: 32, elements: !2835)
!2834 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2835 = !{!2836, !2837, !2838, !2839, !2840}
!2836 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2837 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2838 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2839 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2840 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2841 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2834, line: 56, baseType: !32, size: 32, elements: !2842)
!2842 = !{!2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851}
!2843 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2844 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2845 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2846 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2847 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2848 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2849 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2850 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2851 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2852 = !{!108, !2833, !2841, !2853, !694, !429, !2855, !2856, !165, !169, !105, !439, !104, !22, !32, !538, !2858, !2859, !144, !539, !112, !540, !2854, !2860, !2861, !2862, !2863}
!2853 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2834, line: 31, baseType: !2854)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !112)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !440, line: 329, baseType: !32)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2834, line: 32, baseType: !2857)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !440, line: 145, baseType: !108)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2864 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2865, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2865 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2867, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2868, splitDebugInlining: false, nameTableKind: None)
!2867 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2868 = !{!105, !165, !108, !32}
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2871, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!2870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2871 = !{!2872, !30}
!2872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2873, line: 27, baseType: !32, size: 32, elements: !2874)
!2873 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2874 = !{!2875, !2876, !2877, !2878, !2879}
!2875 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2876 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2877 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2878 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2879 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2881, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2882, retainedTypes: !2883, splitDebugInlining: false, nameTableKind: None)
!2881 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2882 = !{!985, !2872, !30}
!2883 = !{!1168, !2884, !104, !108, !220, !113, !164, !2901}
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !788, line: 426, baseType: !2886)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 411, size: 28704, elements: !2887)
!2887 = !{!2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2886, file: !788, line: 413, baseType: !1920, size: 256)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2886, file: !788, line: 414, baseType: !1922, size: 768, offset: 256)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2886, file: !788, line: 415, baseType: !1920, size: 256, offset: 1024)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2886, file: !788, line: 416, baseType: !1922, size: 768, offset: 1280)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2886, file: !788, line: 417, baseType: !1920, size: 256, offset: 2048)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2886, file: !788, line: 418, baseType: !1922, size: 768, offset: 2304)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2886, file: !788, line: 419, baseType: !1920, size: 256, offset: 3072)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2886, file: !788, line: 420, baseType: !1922, size: 768, offset: 3328)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2886, file: !788, line: 421, baseType: !1920, size: 256, offset: 4096)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2886, file: !788, line: 422, baseType: !1933, size: 1792, offset: 4352)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2886, file: !788, line: 423, baseType: !1937, size: 1920, offset: 6144)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2886, file: !788, line: 424, baseType: !1942, size: 20608, offset: 8064)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2886, file: !788, line: 425, baseType: !570, size: 32, offset: 28672)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !2903)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !2904)
!2904 = !{!2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2903, file: !788, line: 447, baseType: !792, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2903, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2903, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2903, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2903, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2903, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2903, file: !788, line: 453, baseType: !1957, size: 96, offset: 192)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2903, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2903, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2903, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2903, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2903, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2903, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2903, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2903, file: !788, line: 461, baseType: !1966, size: 64, offset: 512)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2903, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2903, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2903, file: !788, line: 464, baseType: !1970, size: 128, offset: 640)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2903, file: !788, line: 465, baseType: !1972, size: 160, offset: 768)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2903, file: !788, line: 466, baseType: !1974, size: 160, offset: 928)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2903, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!2926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2927, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!2927 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2928 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2929, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2930, splitDebugInlining: false, nameTableKind: None)
!2929 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2930 = !{!104, !108, !22, !2931}
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 32)
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !2933)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !2934)
!2934 = !{!2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2933, file: !788, line: 447, baseType: !792, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2933, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2933, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2933, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2933, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2933, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2933, file: !788, line: 453, baseType: !1957, size: 96, offset: 192)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2933, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2933, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2933, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2933, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2933, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2933, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2933, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2933, file: !788, line: 461, baseType: !1966, size: 64, offset: 512)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2933, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2933, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2933, file: !788, line: 464, baseType: !1970, size: 128, offset: 640)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2933, file: !788, line: 465, baseType: !1972, size: 160, offset: 768)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2933, file: !788, line: 466, baseType: !1974, size: 160, offset: 928)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2933, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!2956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2958, splitDebugInlining: false, nameTableKind: None)
!2957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2958 = !{!2959, !104, !108}
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2961, file: !788, line: 447, baseType: !792, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2961, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2961, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2961, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2961, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2961, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2961, file: !788, line: 453, baseType: !1957, size: 96, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2961, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2961, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2961, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2961, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2961, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2961, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2961, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2961, file: !788, line: 461, baseType: !1966, size: 64, offset: 512)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2961, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2961, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2961, file: !788, line: 464, baseType: !1970, size: 128, offset: 640)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2961, file: !788, line: 465, baseType: !1972, size: 160, offset: 768)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2961, file: !788, line: 466, baseType: !1974, size: 160, offset: 928)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2961, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!2984 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2985, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2986, splitDebugInlining: false, nameTableKind: None)
!2985 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!2986 = !{!2987, !113, !104, !108}
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 32)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2989, line: 98, size: 256, elements: !2990)
!2989 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2990 = !{!2991, !2996, !3001, !3006, !3011, !3016, !3021, !3026}
!2991 = !DIDerivedType(tag: DW_TAG_member, scope: !2988, file: !2989, line: 99, baseType: !2992, size: 32)
!2992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2988, file: !2989, line: 99, size: 32, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2992, file: !2989, line: 99, baseType: !113, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2992, file: !2989, line: 99, baseType: !113, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, scope: !2988, file: !2989, line: 100, baseType: !2997, size: 32, offset: 32)
!2997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2988, file: !2989, line: 100, size: 32, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2997, file: !2989, line: 100, baseType: !113, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2997, file: !2989, line: 100, baseType: !113, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !2988, file: !2989, line: 101, baseType: !3002, size: 32, offset: 64)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2988, file: !2989, line: 101, size: 32, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3002, file: !2989, line: 101, baseType: !113, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3002, file: !2989, line: 101, baseType: !113, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, scope: !2988, file: !2989, line: 102, baseType: !3007, size: 32, offset: 96)
!3007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2988, file: !2989, line: 102, size: 32, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3007, file: !2989, line: 102, baseType: !113, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3007, file: !2989, line: 102, baseType: !113, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, scope: !2988, file: !2989, line: 103, baseType: !3012, size: 32, offset: 128)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2988, file: !2989, line: 103, size: 32, elements: !3013)
!3013 = !{!3014, !3015}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3012, file: !2989, line: 103, baseType: !113, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3012, file: !2989, line: 103, baseType: !113, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !2988, file: !2989, line: 104, baseType: !3017, size: 32, offset: 160)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2988, file: !2989, line: 104, size: 32, elements: !3018)
!3018 = !{!3019, !3020}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3017, file: !2989, line: 104, baseType: !113, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3017, file: !2989, line: 104, baseType: !113, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, scope: !2988, file: !2989, line: 105, baseType: !3022, size: 32, offset: 192)
!3022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2988, file: !2989, line: 105, size: 32, elements: !3023)
!3023 = !{!3024, !3025}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3022, file: !2989, line: 105, baseType: !113, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3022, file: !2989, line: 105, baseType: !113, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2988, file: !2989, line: 106, baseType: !113, size: 32, offset: 224)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2871, retainedTypes: !3029, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3029 = !{!3030, !104, !108, !3055, !3098, !113}
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !3032)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !3033)
!3033 = !{!3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3032, file: !788, line: 447, baseType: !792, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3032, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3032, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3032, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3032, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3032, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3032, file: !788, line: 453, baseType: !1957, size: 96, offset: 192)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3032, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3032, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3032, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3032, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3032, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3032, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3032, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3032, file: !788, line: 461, baseType: !1966, size: 64, offset: 512)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3032, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3032, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3032, file: !788, line: 464, baseType: !1970, size: 128, offset: 640)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3032, file: !788, line: 465, baseType: !1972, size: 160, offset: 768)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3032, file: !788, line: 466, baseType: !1974, size: 160, offset: 928)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3032, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2989, line: 141, baseType: !3057)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2989, line: 97, size: 256, elements: !3058)
!3058 = !{!3059}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3057, file: !2989, line: 107, baseType: !3060, size: 256)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2989, line: 98, size: 256, elements: !3061)
!3061 = !{!3062, !3067, !3072, !3077, !3082, !3087, !3092, !3097}
!3062 = !DIDerivedType(tag: DW_TAG_member, scope: !3060, file: !2989, line: 99, baseType: !3063, size: 32)
!3063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3060, file: !2989, line: 99, size: 32, elements: !3064)
!3064 = !{!3065, !3066}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3063, file: !2989, line: 99, baseType: !113, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3063, file: !2989, line: 99, baseType: !113, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, scope: !3060, file: !2989, line: 100, baseType: !3068, size: 32, offset: 32)
!3068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3060, file: !2989, line: 100, size: 32, elements: !3069)
!3069 = !{!3070, !3071}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3068, file: !2989, line: 100, baseType: !113, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3068, file: !2989, line: 100, baseType: !113, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, scope: !3060, file: !2989, line: 101, baseType: !3073, size: 32, offset: 64)
!3073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3060, file: !2989, line: 101, size: 32, elements: !3074)
!3074 = !{!3075, !3076}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3073, file: !2989, line: 101, baseType: !113, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3073, file: !2989, line: 101, baseType: !113, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, scope: !3060, file: !2989, line: 102, baseType: !3078, size: 32, offset: 96)
!3078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3060, file: !2989, line: 102, size: 32, elements: !3079)
!3079 = !{!3080, !3081}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3078, file: !2989, line: 102, baseType: !113, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3078, file: !2989, line: 102, baseType: !113, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, scope: !3060, file: !2989, line: 103, baseType: !3083, size: 32, offset: 128)
!3083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3060, file: !2989, line: 103, size: 32, elements: !3084)
!3084 = !{!3085, !3086}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3083, file: !2989, line: 103, baseType: !113, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3083, file: !2989, line: 103, baseType: !113, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, scope: !3060, file: !2989, line: 104, baseType: !3088, size: 32, offset: 160)
!3088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3060, file: !2989, line: 104, size: 32, elements: !3089)
!3089 = !{!3090, !3091}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3088, file: !2989, line: 104, baseType: !113, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3088, file: !2989, line: 104, baseType: !113, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, scope: !3060, file: !2989, line: 105, baseType: !3093, size: 32, offset: 192)
!3093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3060, file: !2989, line: 105, size: 32, elements: !3094)
!3094 = !{!3095, !3096}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3093, file: !2989, line: 105, baseType: !113, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3093, file: !2989, line: 105, baseType: !113, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3060, file: !2989, line: 106, baseType: !113, size: 32, offset: 224)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!3099 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3100, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1905, retainedTypes: !3101, splitDebugInlining: false, nameTableKind: None)
!3100 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3101 = !{!1168, !220, !164, !113, !3102, !3119}
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !788, line: 426, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 411, size: 28704, elements: !3105)
!3105 = !{!3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3104, file: !788, line: 413, baseType: !1920, size: 256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3104, file: !788, line: 414, baseType: !1922, size: 768, offset: 256)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3104, file: !788, line: 415, baseType: !1920, size: 256, offset: 1024)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3104, file: !788, line: 416, baseType: !1922, size: 768, offset: 1280)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3104, file: !788, line: 417, baseType: !1920, size: 256, offset: 2048)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3104, file: !788, line: 418, baseType: !1922, size: 768, offset: 2304)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3104, file: !788, line: 419, baseType: !1920, size: 256, offset: 3072)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3104, file: !788, line: 420, baseType: !1922, size: 768, offset: 3328)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3104, file: !788, line: 421, baseType: !1920, size: 256, offset: 4096)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3104, file: !788, line: 422, baseType: !1933, size: 1792, offset: 4352)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3104, file: !788, line: 423, baseType: !1937, size: 1920, offset: 6144)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3104, file: !788, line: 424, baseType: !1942, size: 20608, offset: 8064)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3104, file: !788, line: 425, baseType: !570, size: 32, offset: 28672)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !3121)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3121, file: !788, line: 447, baseType: !792, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3121, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3121, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3121, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3121, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3121, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3121, file: !788, line: 453, baseType: !1957, size: 96, offset: 192)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3121, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3121, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3121, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3121, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3121, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3121, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3121, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3121, file: !788, line: 461, baseType: !1966, size: 64, offset: 512)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3121, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3121, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3121, file: !788, line: 464, baseType: !1970, size: 128, offset: 640)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3121, file: !788, line: 465, baseType: !1972, size: 160, offset: 768)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3121, file: !788, line: 466, baseType: !1974, size: 160, offset: 928)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3121, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!3144 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3145, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3146, splitDebugInlining: false, nameTableKind: None)
!3145 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3146 = !{!3147, !104, !108}
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !788, line: 468, baseType: !3149)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 445, size: 1120, elements: !3150)
!3150 = !{!3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3149, file: !788, line: 447, baseType: !792, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3149, file: !788, line: 448, baseType: !570, size: 32, offset: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3149, file: !788, line: 449, baseType: !570, size: 32, offset: 64)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3149, file: !788, line: 450, baseType: !570, size: 32, offset: 96)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3149, file: !788, line: 451, baseType: !570, size: 32, offset: 128)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3149, file: !788, line: 452, baseType: !570, size: 32, offset: 160)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3149, file: !788, line: 453, baseType: !1957, size: 96, offset: 192)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3149, file: !788, line: 454, baseType: !570, size: 32, offset: 288)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3149, file: !788, line: 455, baseType: !570, size: 32, offset: 320)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3149, file: !788, line: 456, baseType: !570, size: 32, offset: 352)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3149, file: !788, line: 457, baseType: !570, size: 32, offset: 384)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3149, file: !788, line: 458, baseType: !570, size: 32, offset: 416)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3149, file: !788, line: 459, baseType: !570, size: 32, offset: 448)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3149, file: !788, line: 460, baseType: !570, size: 32, offset: 480)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3149, file: !788, line: 461, baseType: !1966, size: 64, offset: 512)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3149, file: !788, line: 462, baseType: !792, size: 32, offset: 576)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3149, file: !788, line: 463, baseType: !792, size: 32, offset: 608)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3149, file: !788, line: 464, baseType: !1970, size: 128, offset: 640)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3149, file: !788, line: 465, baseType: !1972, size: 160, offset: 768)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3149, file: !788, line: 466, baseType: !1974, size: 160, offset: 928)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3149, file: !788, line: 467, baseType: !570, size: 32, offset: 1088)
!3172 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3173, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3174, splitDebugInlining: false, nameTableKind: None)
!3173 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3174 = !{!107, !443, !439, !1334, !3175, !165, !104}
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3179, splitDebugInlining: false, nameTableKind: None)
!3178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3179 = !{!3180}
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 510, baseType: !3182)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 477, size: 1216, elements: !3183)
!3183 = !{!3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3182, file: !566, line: 479, baseType: !570, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3182, file: !566, line: 480, baseType: !570, size: 32, offset: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3182, file: !566, line: 481, baseType: !570, size: 32, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3182, file: !566, line: 482, baseType: !570, size: 32, offset: 96)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3182, file: !566, line: 483, baseType: !570, size: 32, offset: 128)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3182, file: !566, line: 484, baseType: !570, size: 32, offset: 160)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3182, file: !566, line: 485, baseType: !1198, size: 64, offset: 192)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3182, file: !566, line: 486, baseType: !570, size: 32, offset: 256)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3182, file: !566, line: 487, baseType: !570, size: 32, offset: 288)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3182, file: !566, line: 488, baseType: !1198, size: 64, offset: 320)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3182, file: !566, line: 489, baseType: !570, size: 32, offset: 384)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3182, file: !566, line: 490, baseType: !570, size: 32, offset: 416)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3182, file: !566, line: 491, baseType: !1198, size: 64, offset: 448)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3182, file: !566, line: 492, baseType: !570, size: 32, offset: 512)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3182, file: !566, line: 493, baseType: !570, size: 32, offset: 544)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3182, file: !566, line: 494, baseType: !1198, size: 64, offset: 576)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3182, file: !566, line: 495, baseType: !570, size: 32, offset: 640)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3182, file: !566, line: 496, baseType: !570, size: 32, offset: 672)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3182, file: !566, line: 497, baseType: !1198, size: 64, offset: 704)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3182, file: !566, line: 498, baseType: !570, size: 32, offset: 768)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3182, file: !566, line: 499, baseType: !570, size: 32, offset: 800)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3182, file: !566, line: 500, baseType: !1198, size: 64, offset: 832)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3182, file: !566, line: 501, baseType: !570, size: 32, offset: 896)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3182, file: !566, line: 502, baseType: !570, size: 32, offset: 928)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3182, file: !566, line: 503, baseType: !1198, size: 64, offset: 960)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3182, file: !566, line: 504, baseType: !570, size: 32, offset: 1024)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3182, file: !566, line: 505, baseType: !570, size: 32, offset: 1056)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3182, file: !566, line: 506, baseType: !113, size: 32, offset: 1088)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3182, file: !566, line: 507, baseType: !570, size: 32, offset: 1120)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3182, file: !566, line: 508, baseType: !570, size: 32, offset: 1152)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3182, file: !566, line: 509, baseType: !570, size: 32, offset: 1184)
!3215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3216, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3216 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3219, retainedTypes: !3235, splitDebugInlining: false, nameTableKind: None)
!3218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3219 = !{!3220, !3227, !3231}
!3220 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3221, line: 38, baseType: !32, size: 32, elements: !3222)
!3221 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3222 = !{!3223, !3224, !3225, !3226}
!3223 = !DIEnumerator(name: "HAL_OK", value: 0)
!3224 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3225 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3226 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3227 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1175, line: 184, baseType: !32, size: 32, elements: !3228)
!3228 = !{!3229, !3230}
!3229 = !DIEnumerator(name: "RESET", value: 0)
!3230 = !DIEnumerator(name: "SET", value: 1)
!3231 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1175, line: 190, baseType: !32, size: 32, elements: !3232)
!3232 = !{!3233, !3234}
!3233 = !DIEnumerator(name: "DISABLE", value: 0)
!3234 = !DIEnumerator(name: "ENABLE", value: 1)
!3235 = !{!104, !3236, !164, !113, !1816, !3271, !3277, !3288, !168, !3289, !114}
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 32)
!3237 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 510, baseType: !3238)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 477, size: 1216, elements: !3239)
!3239 = !{!3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3238, file: !566, line: 479, baseType: !570, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3238, file: !566, line: 480, baseType: !570, size: 32, offset: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3238, file: !566, line: 481, baseType: !570, size: 32, offset: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3238, file: !566, line: 482, baseType: !570, size: 32, offset: 96)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3238, file: !566, line: 483, baseType: !570, size: 32, offset: 128)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3238, file: !566, line: 484, baseType: !570, size: 32, offset: 160)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3238, file: !566, line: 485, baseType: !1198, size: 64, offset: 192)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3238, file: !566, line: 486, baseType: !570, size: 32, offset: 256)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3238, file: !566, line: 487, baseType: !570, size: 32, offset: 288)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3238, file: !566, line: 488, baseType: !1198, size: 64, offset: 320)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3238, file: !566, line: 489, baseType: !570, size: 32, offset: 384)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3238, file: !566, line: 490, baseType: !570, size: 32, offset: 416)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3238, file: !566, line: 491, baseType: !1198, size: 64, offset: 448)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3238, file: !566, line: 492, baseType: !570, size: 32, offset: 512)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3238, file: !566, line: 493, baseType: !570, size: 32, offset: 544)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3238, file: !566, line: 494, baseType: !1198, size: 64, offset: 576)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3238, file: !566, line: 495, baseType: !570, size: 32, offset: 640)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3238, file: !566, line: 496, baseType: !570, size: 32, offset: 672)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3238, file: !566, line: 497, baseType: !1198, size: 64, offset: 704)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3238, file: !566, line: 498, baseType: !570, size: 32, offset: 768)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3238, file: !566, line: 499, baseType: !570, size: 32, offset: 800)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3238, file: !566, line: 500, baseType: !1198, size: 64, offset: 832)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3238, file: !566, line: 501, baseType: !570, size: 32, offset: 896)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3238, file: !566, line: 502, baseType: !570, size: 32, offset: 928)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3238, file: !566, line: 503, baseType: !1198, size: 64, offset: 960)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3238, file: !566, line: 504, baseType: !570, size: 32, offset: 1024)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3238, file: !566, line: 505, baseType: !570, size: 32, offset: 1056)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3238, file: !566, line: 506, baseType: !113, size: 32, offset: 1088)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3238, file: !566, line: 507, baseType: !570, size: 32, offset: 1120)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3238, file: !566, line: 508, baseType: !570, size: 32, offset: 1152)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3238, file: !566, line: 509, baseType: !570, size: 32, offset: 1184)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !566, line: 471, baseType: !3273)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 467, size: 64, elements: !3274)
!3274 = !{!3275, !3276}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3273, file: !566, line: 469, baseType: !570, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3273, file: !566, line: 470, baseType: !570, size: 32, offset: 32)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 32)
!3278 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !566, line: 379, baseType: !3279)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 370, size: 224, elements: !3280)
!3280 = !{!3281, !3282, !3283, !3284, !3285, !3286, !3287}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3279, file: !566, line: 372, baseType: !570, size: 32)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3279, file: !566, line: 373, baseType: !570, size: 32, offset: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3279, file: !566, line: 374, baseType: !570, size: 32, offset: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3279, file: !566, line: 375, baseType: !570, size: 32, offset: 96)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3279, file: !566, line: 376, baseType: !570, size: 32, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3279, file: !566, line: 377, baseType: !570, size: 32, offset: 160)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3279, file: !566, line: 378, baseType: !570, size: 32, offset: 192)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !566, line: 396, baseType: !3291)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 385, size: 320, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3291, file: !566, line: 387, baseType: !570, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3291, file: !566, line: 388, baseType: !570, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3291, file: !566, line: 389, baseType: !570, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3291, file: !566, line: 390, baseType: !570, size: 32, offset: 96)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3291, file: !566, line: 391, baseType: !570, size: 32, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3291, file: !566, line: 392, baseType: !570, size: 32, offset: 160)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3291, file: !566, line: 393, baseType: !570, size: 32, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3291, file: !566, line: 394, baseType: !570, size: 32, offset: 224)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3291, file: !566, line: 395, baseType: !1488, size: 64, offset: 256)
!3302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3303, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3304, retainedTypes: !3305, splitDebugInlining: false, nameTableKind: None)
!3303 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3304 = !{!1174}
!3305 = !{!3306, !113, !3314, !3320, !3331}
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !788, line: 770, baseType: !3308)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 764, size: 128, elements: !3309)
!3309 = !{!3310, !3311, !3312, !3313}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3308, file: !788, line: 766, baseType: !570, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3308, file: !788, line: 767, baseType: !570, size: 32, offset: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3308, file: !788, line: 768, baseType: !570, size: 32, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3308, file: !788, line: 769, baseType: !792, size: 32, offset: 96)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !566, line: 471, baseType: !3316)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 467, size: 64, elements: !3317)
!3317 = !{!3318, !3319}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3316, file: !566, line: 469, baseType: !570, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3316, file: !566, line: 470, baseType: !570, size: 32, offset: 32)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 32)
!3321 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !566, line: 379, baseType: !3322)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 370, size: 224, elements: !3323)
!3323 = !{!3324, !3325, !3326, !3327, !3328, !3329, !3330}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3322, file: !566, line: 372, baseType: !570, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3322, file: !566, line: 373, baseType: !570, size: 32, offset: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3322, file: !566, line: 374, baseType: !570, size: 32, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3322, file: !566, line: 375, baseType: !570, size: 32, offset: 96)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3322, file: !566, line: 376, baseType: !570, size: 32, offset: 128)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3322, file: !566, line: 377, baseType: !570, size: 32, offset: 160)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3322, file: !566, line: 378, baseType: !570, size: 32, offset: 192)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 32)
!3332 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !566, line: 510, baseType: !3333)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 477, size: 1216, elements: !3334)
!3334 = !{!3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3333, file: !566, line: 479, baseType: !570, size: 32)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3333, file: !566, line: 480, baseType: !570, size: 32, offset: 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3333, file: !566, line: 481, baseType: !570, size: 32, offset: 64)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3333, file: !566, line: 482, baseType: !570, size: 32, offset: 96)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3333, file: !566, line: 483, baseType: !570, size: 32, offset: 128)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3333, file: !566, line: 484, baseType: !570, size: 32, offset: 160)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3333, file: !566, line: 485, baseType: !1198, size: 64, offset: 192)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3333, file: !566, line: 486, baseType: !570, size: 32, offset: 256)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3333, file: !566, line: 487, baseType: !570, size: 32, offset: 288)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3333, file: !566, line: 488, baseType: !1198, size: 64, offset: 320)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3333, file: !566, line: 489, baseType: !570, size: 32, offset: 384)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3333, file: !566, line: 490, baseType: !570, size: 32, offset: 416)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3333, file: !566, line: 491, baseType: !1198, size: 64, offset: 448)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3333, file: !566, line: 492, baseType: !570, size: 32, offset: 512)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3333, file: !566, line: 493, baseType: !570, size: 32, offset: 544)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3333, file: !566, line: 494, baseType: !1198, size: 64, offset: 576)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3333, file: !566, line: 495, baseType: !570, size: 32, offset: 640)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3333, file: !566, line: 496, baseType: !570, size: 32, offset: 672)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3333, file: !566, line: 497, baseType: !1198, size: 64, offset: 704)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3333, file: !566, line: 498, baseType: !570, size: 32, offset: 768)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3333, file: !566, line: 499, baseType: !570, size: 32, offset: 800)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3333, file: !566, line: 500, baseType: !1198, size: 64, offset: 832)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3333, file: !566, line: 501, baseType: !570, size: 32, offset: 896)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3333, file: !566, line: 502, baseType: !570, size: 32, offset: 928)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3333, file: !566, line: 503, baseType: !1198, size: 64, offset: 960)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3333, file: !566, line: 504, baseType: !570, size: 32, offset: 1024)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3333, file: !566, line: 505, baseType: !570, size: 32, offset: 1056)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3333, file: !566, line: 506, baseType: !113, size: 32, offset: 1088)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3333, file: !566, line: 507, baseType: !570, size: 32, offset: 1120)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3333, file: !566, line: 508, baseType: !570, size: 32, offset: 1152)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3333, file: !566, line: 509, baseType: !570, size: 32, offset: 1184)
!3366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3368, splitDebugInlining: false, nameTableKind: None)
!3367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3368 = !{!104, !439}
!3369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3370, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3371, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!3370 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3371 = !{!3372, !3379, !30}
!3372 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3373, line: 14, baseType: !32, size: 32, elements: !3374)
!3373 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3374 = !{!3375, !3376, !3377, !3378}
!3375 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3376 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3377 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3378 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3373, line: 42, baseType: !32, size: 32, elements: !3380)
!3380 = !{!3381, !3382, !3383, !3384, !3385, !3386}
!3381 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3382 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3383 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3384 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3385 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3386 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!3388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3389 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3390, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3391, splitDebugInlining: false, nameTableKind: None)
!3390 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3391 = !{!22, !104, !108}
!3392 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3393, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, splitDebugInlining: false, nameTableKind: None)
!3393 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3394 = !{!"Ubuntu clang version 14.0.6"}
!3395 = !{i32 7, !"Dwarf Version", i32 4}
!3396 = !{i32 2, !"Debug Info Version", i32 3}
!3397 = !{i32 1, !"wchar_size", i32 4}
!3398 = !{i32 1, !"min_enum_size", i32 4}
!3399 = !{i32 1, !"branch-target-enforcement", i32 0}
!3400 = !{i32 1, !"sign-return-address", i32 0}
!3401 = !{i32 1, !"sign-return-address-all", i32 0}
!3402 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3403 = !{i32 7, !"frame-pointer", i32 2}
!3404 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3405, file: !3405, line: 26, type: !3406, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !437)
!3405 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3406 = !DISubroutineType(types: !3407)
!3407 = !{null}
!3408 = !DILocation(line: 28, column: 1, scope: !3404)
!3409 = !{i64 2155044168, i64 2155044188, i64 2155044251}
!3410 = !DILocation(line: 29, column: 1, scope: !3404)
!3411 = !{i64 2155044583, i64 2155044603, i64 2155044666}
!3412 = !DILocation(line: 30, column: 1, scope: !3404)
!3413 = !{i64 2155045002, i64 2155045022, i64 2155045085}
!3414 = !DILocation(line: 31, column: 1, scope: !3404)
!3415 = !{i64 2155045421, i64 2155045441, i64 2155045504}
!3416 = !DILocation(line: 33, column: 1, scope: !3404)
!3417 = !{i64 2155045713, i64 2155045733, i64 2155045796}
!3418 = !DILocation(line: 35, column: 1, scope: !3404)
!3419 = !{i64 2155046038, i64 2155046058, i64 2155046121}
!3420 = !DILocation(line: 50, column: 1, scope: !3404)
!3421 = !{i64 2155046465, i64 2155046485, i64 2155046548}
!3422 = !DILocation(line: 54, column: 1, scope: !3404)
!3423 = !{i64 2155046904, i64 2155046924, i64 2155046987}
!3424 = !DILocation(line: 61, column: 1, scope: !3404)
!3425 = !{i64 2155047221, i64 2155047241, i64 2155047304}
!3426 = !DILocation(line: 63, column: 1, scope: !3404)
!3427 = !{i64 2155047601, i64 2155047621, i64 2155047684}
!3428 = !DILocation(line: 64, column: 1, scope: !3404)
!3429 = !{i64 2155048123, i64 2155048143, i64 2155048206}
!3430 = !DILocation(line: 65, column: 1, scope: !3404)
!3431 = !{i64 2155048621, i64 2155048641, i64 2155048704}
!3432 = !DILocation(line: 66, column: 1, scope: !3404)
!3433 = !{i64 2155049103, i64 2155049123, i64 2155049186}
!3434 = !DILocation(line: 67, column: 1, scope: !3404)
!3435 = !{i64 2155049610, i64 2155049630, i64 2155049693}
!3436 = !DILocation(line: 68, column: 1, scope: !3404)
!3437 = !{i64 2155050098, i64 2155050118, i64 2155050181}
!3438 = !DILocation(line: 70, column: 1, scope: !3404)
!3439 = !{i64 2155054627, i64 2155054647, i64 2155054710}
!3440 = !DILocation(line: 71, column: 1, scope: !3404)
!3441 = !{i64 2155055069, i64 2155055089, i64 2155055152}
!3442 = !DILocation(line: 72, column: 1, scope: !3404)
!3443 = !{i64 2155055527, i64 2155055547, i64 2155055610}
!3444 = !DILocation(line: 79, column: 1, scope: !3404)
!3445 = !{i64 2155055981, i64 2155056001, i64 2155056064}
!3446 = !DILocation(line: 80, column: 1, scope: !3404)
!3447 = !{i64 2155056492, i64 2155056512, i64 2155056575}
!3448 = !DILocation(line: 82, column: 1, scope: !3404)
!3449 = !{i64 2155056983, i64 2155057003, i64 2155057066}
!3450 = !DILocation(line: 97, column: 1, scope: !3404)
!3451 = !{i64 2155057320, i64 2155057340, i64 2155057403}
!3452 = !DILocation(line: 99, column: 1, scope: !3404)
!3453 = !{i64 2155057538, i64 2155057558, i64 2155057621}
!3454 = !DILocation(line: 102, column: 1, scope: !3404)
!3455 = !{i64 2155057795, i64 2155057815, i64 2155057878}
!3456 = !DILocation(line: 105, column: 1, scope: !3404)
!3457 = !{i64 2155058035, i64 2155058055, i64 2155058118}
!3458 = !DILocation(line: 115, column: 1, scope: !3404)
!3459 = !{i64 2155058374, i64 2155058394, i64 2155058457}
!3460 = !DILocation(line: 118, column: 1, scope: !3404)
!3461 = !{i64 2155058718, i64 2155058738, i64 2155058801}
!3462 = !DILocation(line: 32, column: 1, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !3404, file: !3464, discriminator: 0)
!3464 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3465 = !{i64 2155059074, i64 2155059094, i64 2155059157}
!3466 = !DILocation(line: 33, column: 1, scope: !3463)
!3467 = !{i64 2155059586, i64 2155059606, i64 2155059669}
!3468 = !DILocation(line: 53, column: 1, scope: !3463)
!3469 = !{i64 2155060094, i64 2155060114, i64 2155060177}
!3470 = !DILocation(line: 54, column: 1, scope: !3463)
!3471 = !{i64 2155060512, i64 2155060532, i64 2155060595}
!3472 = !DILocation(line: 55, column: 1, scope: !3463)
!3473 = !{i64 2155060930, i64 2155060950, i64 2155061013}
!3474 = !DILocation(line: 56, column: 1, scope: !3463)
!3475 = !{i64 2155061348, i64 2155061368, i64 2155061431}
!3476 = !DILocation(line: 57, column: 1, scope: !3463)
!3477 = !{i64 2155061766, i64 2155061786, i64 2155061849}
!3478 = !DILocation(line: 58, column: 1, scope: !3463)
!3479 = !{i64 2155062184, i64 2155062204, i64 2155062267}
!3480 = !DILocation(line: 59, column: 1, scope: !3463)
!3481 = !{i64 2155062602, i64 2155062622, i64 2155062685}
!3482 = !DILocation(line: 60, column: 1, scope: !3463)
!3483 = !{i64 2155063026, i64 2155063046, i64 2155063109}
!3484 = !DILocation(line: 61, column: 1, scope: !3463)
!3485 = !{i64 2155063343, i64 2155063363, i64 2155063426}
!3486 = !DILocation(line: 70, column: 1, scope: !3463)
!3487 = !{i64 2155063572, i64 2155063592, i64 2155063655}
!3488 = !DILocation(line: 72, column: 1, scope: !3463)
!3489 = !{i64 2155063904, i64 2155063924, i64 2155063987}
!3490 = !DILocation(line: 73, column: 1, scope: !3463)
!3491 = !{i64 2155068415, i64 2155068435, i64 2155068498}
!3492 = !DILocation(line: 74, column: 1, scope: !3463)
!3493 = !{i64 2155068865, i64 2155068885, i64 2155068948}
!3494 = !DILocation(line: 75, column: 1, scope: !3463)
!3495 = !{i64 2155069315, i64 2155069335, i64 2155069398}
!3496 = !DILocation(line: 76, column: 1, scope: !3463)
!3497 = !{i64 2155069765, i64 2155069785, i64 2155069848}
!3498 = !DILocation(line: 77, column: 1, scope: !3463)
!3499 = !{i64 2155070215, i64 2155070235, i64 2155070298}
!3500 = !DILocation(line: 78, column: 1, scope: !3463)
!3501 = !{i64 2155070665, i64 2155070685, i64 2155070748}
!3502 = !DILocation(line: 79, column: 1, scope: !3463)
!3503 = !{i64 2155071115, i64 2155071135, i64 2155071198}
!3504 = !DILocation(line: 80, column: 1, scope: !3463)
!3505 = !{i64 2155071568, i64 2155071588, i64 2155071651}
!3506 = !DILocation(line: 84, column: 1, scope: !3463)
!3507 = !{i64 2155071900, i64 2155071920, i64 2155071983}
!3508 = !DILocation(line: 91, column: 1, scope: !3463)
!3509 = !{i64 2155072297, i64 2155072317, i64 2155072380}
!3510 = !DILocation(line: 93, column: 1, scope: !3463)
!3511 = !{i64 2155072664, i64 2155072684, i64 2155072747}
!3512 = !DILocation(line: 106, column: 1, scope: !3463)
!3513 = !{i64 2155072934, i64 2155072954, i64 2155073017}
!3514 = !DILocation(line: 11, column: 1, scope: !3515)
!3515 = !DILexicalBlockFile(scope: !3404, file: !3516, discriminator: 0)
!3516 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3517 = distinct !DISubprogram(name: "main", scope: !119, file: !119, line: 29, type: !3406, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3518)
!3518 = !{!3519, !3536, !3538, !3540, !3544, !3546, !3547, !3549, !3551, !3554, !3556, !3557, !3562, !3563, !3564, !3568, !3570}
!3519 = !DILocalVariable(name: "vnd_sensor", scope: !3517, file: !119, line: 31, type: !3520)
!3520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3521)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 32)
!3522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3523)
!3523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !3524)
!3524 = !{!3525, !3526, !3527, !3528, !3534, !3535}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3523, file: !411, line: 380, baseType: !105, size: 32)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3523, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3523, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3523, file: !411, line: 386, baseType: !3529, size: 32, offset: 96)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 32)
!3530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !3531)
!3531 = !{!3532, !3533}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3530, file: !411, line: 359, baseType: !164, size: 8)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3530, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3523, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3523, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!3536 = !DILocalVariable(name: "iodev", scope: !3517, file: !119, line: 32, type: !3537)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!3538 = !DILocalVariable(name: "n", scope: !3539, file: !119, line: 35, type: !108)
!3539 = distinct !DILexicalBlock(scope: !3517, file: !119, line: 35, column: 2)
!3540 = !DILocalVariable(name: "sqe", scope: !3541, file: !119, line: 36, type: !3543)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !119, line: 35, column: 30)
!3542 = distinct !DILexicalBlock(scope: !3539, file: !119, line: 35, column: 2)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!3544 = !DILocalVariable(name: "idx", scope: !3545, file: !119, line: 36, type: !24)
!3545 = distinct !DILexicalBlock(scope: !3541, file: !119, line: 36, column: 26)
!3546 = !DILocalVariable(name: "acq", scope: !3545, file: !119, line: 36, type: !422)
!3547 = !DILocalVariable(name: "m", scope: !3548, file: !119, line: 44, type: !108)
!3548 = distinct !DILexicalBlock(scope: !3517, file: !119, line: 43, column: 15)
!3549 = !DILocalVariable(name: "userdata", scope: !3548, file: !119, line: 45, type: !3550)
!3550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !461)
!3551 = !DILocalVariable(name: "cqe", scope: !3552, file: !119, line: 55, type: !3553)
!3552 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 54, column: 17)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3554 = !DILocalVariable(name: "idx", scope: !3555, file: !119, line: 55, type: !24)
!3555 = distinct !DILexicalBlock(scope: !3552, file: !119, line: 55, column: 27)
!3556 = !DILocalVariable(name: "has_consumable", scope: !3555, file: !119, line: 55, type: !422)
!3557 = !DILocalVariable(name: "_str", scope: !3558, file: !119, line: 81, type: !105)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !119, line: 81, column: 4)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !119, line: 80, column: 27)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !119, line: 80, column: 3)
!3561 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 80, column: 3)
!3562 = !DILocalVariable(name: "is_user_context", scope: !3558, file: !119, line: 81, type: !422)
!3563 = !DILocalVariable(name: "filters", scope: !3558, file: !119, line: 81, type: !113)
!3564 = !DILocalVariable(name: "sqe", scope: !3565, file: !119, line: 90, type: !3543)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !119, line: 89, column: 27)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !119, line: 89, column: 3)
!3567 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 89, column: 3)
!3568 = !DILocalVariable(name: "idx", scope: !3569, file: !119, line: 90, type: !24)
!3569 = distinct !DILexicalBlock(scope: !3565, file: !119, line: 90, column: 27)
!3570 = !DILocalVariable(name: "acq", scope: !3569, file: !119, line: 90, type: !422)
!3571 = !DILocation(line: 0, scope: !3517)
!3572 = !DILocation(line: 32, column: 41, scope: !3517)
!3573 = !DILocation(line: 0, scope: !3539)
!3574 = !DILocation(line: 36, column: 26, scope: !3545)
!3575 = !DILocation(line: 35, column: 2, scope: !3539)
!3576 = !DILocation(line: 43, column: 2, scope: !3517)
!3577 = !DILocation(line: 0, scope: !3545)
!3578 = !DILocation(line: 36, column: 26, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !119, line: 36, column: 26)
!3580 = distinct !DILexicalBlock(scope: !3545, file: !119, line: 36, column: 26)
!3581 = !DILocation(line: 0, scope: !3541)
!3582 = !DILocation(line: 38, column: 50, scope: !3541)
!3583 = !DILocation(line: 38, column: 3, scope: !3541)
!3584 = !DILocation(line: 40, column: 3, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !119, line: 40, column: 3)
!3586 = distinct !DILexicalBlock(scope: !3541, file: !119, line: 40, column: 3)
!3587 = !DILocation(line: 40, column: 3, scope: !3586)
!3588 = !DILocation(line: 40, column: 3, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3585, file: !119, line: 40, column: 3)
!3590 = !DILocation(line: 35, column: 26, scope: !3542)
!3591 = !DILocation(line: 35, column: 20, scope: !3542)
!3592 = distinct !{!3592, !3575, !3593}
!3593 = !DILocation(line: 41, column: 2, scope: !3539)
!3594 = !DILocation(line: 0, scope: !3548)
!3595 = !DILocation(line: 45, column: 3, scope: !3548)
!3596 = !DILocation(line: 45, column: 12, scope: !3548)
!3597 = !DILocation(line: 47, column: 3, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !119, line: 47, column: 3)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !119, line: 47, column: 3)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !119, line: 47, column: 3)
!3601 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 47, column: 3)
!3602 = !DILocation(line: 48, column: 3, scope: !3548)
!3603 = !DILocation(line: 54, column: 3, scope: !3548)
!3604 = !DILocation(line: 55, column: 27, scope: !3555)
!3605 = !DILocation(line: 0, scope: !3555)
!3606 = !DILocation(line: 0, scope: !3552)
!3607 = !DILocation(line: 58, column: 5, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !119, line: 58, column: 5)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !119, line: 58, column: 5)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !119, line: 58, column: 5)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !119, line: 58, column: 5)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !119, line: 57, column: 21)
!3613 = distinct !DILexicalBlock(scope: !3552, file: !119, line: 57, column: 8)
!3614 = !DILocation(line: 59, column: 5, scope: !3612)
!3615 = !DILocation(line: 60, column: 5, scope: !3612)
!3616 = distinct !{!3616, !3603, !3617}
!3617 = !DILocation(line: 71, column: 3, scope: !3548)
!3618 = !DILocation(line: 55, column: 27, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !119, line: 55, column: 27)
!3620 = distinct !DILexicalBlock(scope: !3555, file: !119, line: 55, column: 27)
!3621 = !DILocation(line: 62, column: 4, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !119, line: 62, column: 4)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !119, line: 62, column: 4)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !119, line: 62, column: 4)
!3625 = distinct !DILexicalBlock(scope: !3552, file: !119, line: 62, column: 4)
!3626 = !DILocation(line: 64, column: 13, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3552, file: !119, line: 64, column: 8)
!3628 = !DILocation(line: 64, column: 20, scope: !3627)
!3629 = !DILocation(line: 64, column: 8, scope: !3552)
!3630 = !DILocation(line: 65, column: 5, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !119, line: 65, column: 5)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !119, line: 65, column: 5)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !119, line: 65, column: 5)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !119, line: 65, column: 5)
!3635 = distinct !DILexicalBlock(scope: !3627, file: !119, line: 64, column: 25)
!3636 = !DILocation(line: 66, column: 4, scope: !3635)
!3637 = !DILocation(line: 68, column: 23, scope: !3552)
!3638 = !DILocation(line: 68, column: 4, scope: !3552)
!3639 = !DILocation(line: 68, column: 16, scope: !3552)
!3640 = !DILocation(line: 69, column: 4, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !119, line: 69, column: 4)
!3642 = distinct !DILexicalBlock(scope: !3552, file: !119, line: 69, column: 4)
!3643 = !DILocation(line: 69, column: 4, scope: !3642)
!3644 = !DILocation(line: 69, column: 4, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3641, file: !119, line: 69, column: 4)
!3646 = !DILocation(line: 70, column: 5, scope: !3552)
!3647 = !DILocation(line: 54, column: 12, scope: !3548)
!3648 = !DILocation(line: 79, column: 3, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !119, line: 79, column: 3)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !119, line: 79, column: 3)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !119, line: 79, column: 3)
!3652 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 79, column: 3)
!3653 = !DILocation(line: 80, column: 3, scope: !3561)
!3654 = !DILocation(line: 0, scope: !3558)
!3655 = !DILocation(line: 81, column: 4, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !119, line: 81, column: 4)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !119, line: 81, column: 4)
!3658 = distinct !DILexicalBlock(scope: !3558, file: !119, line: 81, column: 4)
!3659 = !DILocation(line: 81, column: 4, scope: !3657)
!3660 = !DILocation(line: 80, column: 23, scope: !3560)
!3661 = !DILocation(line: 80, column: 17, scope: !3560)
!3662 = distinct !{!3662, !3653, !3663}
!3663 = !DILocation(line: 82, column: 3, scope: !3561)
!3664 = !DILocation(line: 83, column: 3, scope: !3548)
!3665 = !DILocation(line: 84, column: 3, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !119, line: 84, column: 3)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !119, line: 84, column: 3)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !119, line: 84, column: 3)
!3669 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 84, column: 3)
!3670 = !DILocation(line: 90, column: 27, scope: !3569)
!3671 = !DILocation(line: 89, column: 3, scope: !3567)
!3672 = !DILocation(line: 0, scope: !3569)
!3673 = !DILocation(line: 90, column: 27, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !119, line: 90, column: 27)
!3675 = distinct !DILexicalBlock(scope: !3569, file: !119, line: 90, column: 27)
!3676 = !DILocation(line: 0, scope: !3565)
!3677 = !DILocation(line: 93, column: 9, scope: !3565)
!3678 = !DILocation(line: 92, column: 4, scope: !3565)
!3679 = !DILocation(line: 95, column: 4, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !119, line: 95, column: 4)
!3681 = distinct !DILexicalBlock(scope: !3565, file: !119, line: 95, column: 4)
!3682 = !DILocation(line: 95, column: 4, scope: !3681)
!3683 = !DILocation(line: 95, column: 4, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3680, file: !119, line: 95, column: 4)
!3685 = !DILocation(line: 89, column: 23, scope: !3566)
!3686 = !DILocation(line: 89, column: 17, scope: !3566)
!3687 = distinct !{!3687, !3671, !3688}
!3688 = !DILocation(line: 96, column: 3, scope: !3567)
!3689 = !DILocation(line: 97, column: 2, scope: !3517)
!3690 = distinct !{!3690, !3576, !3689}
!3691 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3692, file: !3692, line: 175, type: !3693, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3695)
!3692 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!107, !108}
!3695 = !{!3696}
!3696 = !DILocalVariable(name: "level", arg: 1, scope: !3691, file: !3692, line: 175, type: !108)
!3697 = !DILocation(line: 0, scope: !3691)
!3698 = !DILocation(line: 177, column: 2, scope: !3691)
!3699 = !DILocation(line: 189, column: 1, scope: !3691)
!3700 = distinct !DISubprogram(name: "atomic_get", scope: !3701, file: !3701, line: 159, type: !3702, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3707)
!3701 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!3704, !3705}
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !143, line: 23, baseType: !142)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 32)
!3706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!3707 = !{!3708}
!3708 = !DILocalVariable(name: "target", arg: 1, scope: !3700, file: !3701, line: 159, type: !3705)
!3709 = !DILocation(line: 0, scope: !3700)
!3710 = !DILocation(line: 161, column: 9, scope: !3700)
!3711 = !DILocation(line: 161, column: 2, scope: !3700)
!3712 = distinct !DISubprogram(name: "rtio_sqe_prep_read", scope: !125, file: !125, line: 341, type: !3713, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3715)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{null, !3543, !171, !693, !209, !113, !104}
!3715 = !{!3716, !3717, !3718, !3719, !3720, !3721}
!3716 = !DILocalVariable(name: "sqe", arg: 1, scope: !3712, file: !125, line: 341, type: !3543)
!3717 = !DILocalVariable(name: "iodev", arg: 2, scope: !3712, file: !125, line: 342, type: !171)
!3718 = !DILocalVariable(name: "prio", arg: 3, scope: !3712, file: !125, line: 343, type: !693)
!3719 = !DILocalVariable(name: "buf", arg: 4, scope: !3712, file: !125, line: 344, type: !209)
!3720 = !DILocalVariable(name: "len", arg: 5, scope: !3712, file: !125, line: 345, type: !113)
!3721 = !DILocalVariable(name: "userdata", arg: 6, scope: !3712, file: !125, line: 346, type: !104)
!3722 = !DILocation(line: 0, scope: !3712)
!3723 = !DILocation(line: 348, column: 7, scope: !3712)
!3724 = !DILocation(line: 348, column: 10, scope: !3712)
!3725 = !DILocation(line: 349, column: 7, scope: !3712)
!3726 = !DILocation(line: 349, column: 12, scope: !3712)
!3727 = !DILocation(line: 350, column: 7, scope: !3712)
!3728 = !DILocation(line: 350, column: 13, scope: !3712)
!3729 = !DILocation(line: 351, column: 7, scope: !3712)
!3730 = !DILocation(line: 351, column: 15, scope: !3712)
!3731 = !DILocation(line: 352, column: 7, scope: !3712)
!3732 = !DILocation(line: 352, column: 11, scope: !3712)
!3733 = !DILocation(line: 353, column: 7, scope: !3712)
!3734 = !DILocation(line: 353, column: 16, scope: !3712)
!3735 = !DILocation(line: 354, column: 1, scope: !3712)
!3736 = distinct !DISubprogram(name: "atomic_add", scope: !3701, file: !3701, line: 86, type: !3737, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3740)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{!3704, !3739, !3704}
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3740 = !{!3741, !3742}
!3741 = !DILocalVariable(name: "target", arg: 1, scope: !3736, file: !3701, line: 86, type: !3739)
!3742 = !DILocalVariable(name: "value", arg: 2, scope: !3736, file: !3701, line: 86, type: !3704)
!3743 = !DILocation(line: 0, scope: !3736)
!3744 = !DILocation(line: 88, column: 9, scope: !3736)
!3745 = !DILocation(line: 88, column: 2, scope: !3736)
!3746 = distinct !DISubprogram(name: "rtio_submit", scope: !3747, file: !3747, line: 75, type: !3748, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3750)
!3747 = !DIFile(filename: "zephyr/include/generated/syscalls/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!108, !136, !113}
!3750 = !{!3751, !3752}
!3751 = !DILocalVariable(name: "r", arg: 1, scope: !3746, file: !3747, line: 75, type: !136)
!3752 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3746, file: !3747, line: 75, type: !113)
!3753 = !DILocation(line: 0, scope: !3746)
!3754 = !DILocation(line: 84, column: 2, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3746, file: !3747, line: 84, column: 2)
!3756 = !{i64 2154985189}
!3757 = !DILocation(line: 85, column: 9, scope: !3746)
!3758 = !DILocation(line: 85, column: 2, scope: !3746)
!3759 = distinct !DISubprogram(name: "k_msleep", scope: !359, file: !359, line: 439, type: !3760, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3762)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!220, !220}
!3762 = !{!3763}
!3763 = !DILocalVariable(name: "ms", arg: 1, scope: !3759, file: !359, line: 439, type: !220)
!3764 = !DILocation(line: 0, scope: !3759)
!3765 = !DILocation(line: 441, column: 17, scope: !3759)
!3766 = !DILocation(line: 441, column: 9, scope: !3759)
!3767 = !DILocation(line: 441, column: 2, scope: !3759)
!3768 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3769, file: !3769, line: 403, type: !3770, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3772)
!3769 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!114, !114}
!3772 = !{!3773}
!3773 = !DILocalVariable(name: "t", arg: 1, scope: !3768, file: !3769, line: 403, type: !114)
!3774 = !DILocation(line: 0, scope: !3768)
!3775 = !DILocalVariable(name: "t", arg: 1, scope: !3776, file: !3769, line: 102, type: !114)
!3776 = distinct !DISubprogram(name: "z_tmcvt", scope: !3769, file: !3769, line: 102, type: !3777, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3779)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!114, !114, !113, !113, !422, !422, !422, !422}
!3779 = !{!3775, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789}
!3780 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3776, file: !3769, line: 102, type: !113)
!3781 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3776, file: !3769, line: 103, type: !113)
!3782 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3776, file: !3769, line: 103, type: !422)
!3783 = !DILocalVariable(name: "result32", arg: 5, scope: !3776, file: !3769, line: 104, type: !422)
!3784 = !DILocalVariable(name: "round_up", arg: 6, scope: !3776, file: !3769, line: 104, type: !422)
!3785 = !DILocalVariable(name: "round_off", arg: 7, scope: !3776, file: !3769, line: 105, type: !422)
!3786 = !DILocalVariable(name: "mul_ratio", scope: !3776, file: !3769, line: 107, type: !422)
!3787 = !DILocalVariable(name: "div_ratio", scope: !3776, file: !3769, line: 109, type: !422)
!3788 = !DILocalVariable(name: "off", scope: !3776, file: !3769, line: 116, type: !114)
!3789 = !DILocalVariable(name: "rdivisor", scope: !3790, file: !3769, line: 119, type: !113)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !3769, line: 118, column: 18)
!3791 = distinct !DILexicalBlock(scope: !3776, file: !3769, line: 118, column: 6)
!3792 = !DILocation(line: 0, scope: !3776, inlinedAt: !3793)
!3793 = distinct !DILocation(line: 406, column: 9, scope: !3768)
!3794 = !DILocation(line: 145, column: 13, scope: !3795, inlinedAt: !3793)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !3769, line: 144, column: 10)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !3769, line: 142, column: 7)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3769, line: 141, column: 24)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !3769, line: 141, column: 13)
!3799 = distinct !DILexicalBlock(scope: !3776, file: !3769, line: 134, column: 6)
!3800 = !DILocation(line: 406, column: 2, scope: !3768)
!3801 = distinct !DISubprogram(name: "k_sleep", scope: !3802, file: !3802, line: 91, type: !3803, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3809)
!3802 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!220, !3805}
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !3806)
!3806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !3807)
!3807 = !{!3808}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3806, file: !110, line: 66, baseType: !109, size: 64)
!3809 = !{!3810}
!3810 = !DILocalVariable(name: "timeout", arg: 1, scope: !3801, file: !3802, line: 91, type: !3805)
!3811 = !DILocation(line: 0, scope: !3801)
!3812 = !DILocation(line: 99, column: 2, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3801, file: !3802, line: 99, column: 2)
!3814 = !{i64 2154756446}
!3815 = !DILocation(line: 100, column: 9, scope: !3801)
!3816 = !DILocation(line: 100, column: 2, scope: !3801)
!3817 = distinct !DISubprogram(name: "z_impl_rtio_submit", scope: !125, file: !125, line: 744, type: !3748, scopeLine: 745, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3818)
!3818 = !{!3819, !3820, !3821, !3822}
!3819 = !DILocalVariable(name: "r", arg: 1, scope: !3817, file: !125, line: 744, type: !136)
!3820 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3817, file: !125, line: 744, type: !113)
!3821 = !DILocalVariable(name: "res", scope: !3817, file: !125, line: 746, type: !108)
!3822 = !DILocalVariable(name: "acquired", scope: !3823, file: !125, line: 763, type: !24)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !125, line: 763, column: 2)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !125, line: 763, column: 2)
!3825 = distinct !DILexicalBlock(scope: !3817, file: !125, line: 763, column: 2)
!3826 = !DILocation(line: 0, scope: !3817)
!3827 = !DILocation(line: 763, column: 2, scope: !3824)
!3828 = !DILocation(line: 763, column: 2, scope: !3825)
!3829 = !DILocation(line: 0, scope: !3823)
!3830 = !DILocation(line: 763, column: 2, scope: !3823)
!3831 = !DILocation(line: 768, column: 11, scope: !3817)
!3832 = !DILocation(line: 768, column: 21, scope: !3817)
!3833 = !DILocation(line: 768, column: 26, scope: !3817)
!3834 = !DILocation(line: 768, column: 8, scope: !3817)
!3835 = !DILocation(line: 769, column: 10, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3817, file: !125, line: 769, column: 6)
!3837 = !DILocation(line: 769, column: 6, scope: !3817)
!3838 = !DILocation(line: 784, column: 9, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3817, file: !125, line: 784, column: 9)
!3840 = !DILocation(line: 784, column: 37, scope: !3817)
!3841 = !DILocation(line: 784, column: 2, scope: !3817)
!3842 = !DILocation(line: 788, column: 3, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3817, file: !125, line: 784, column: 51)
!3844 = distinct !{!3844, !3841, !3845}
!3845 = !DILocation(line: 790, column: 2, scope: !3817)
!3846 = !DILocation(line: 794, column: 1, scope: !3817)
!3847 = distinct !DISubprogram(name: "k_yield", scope: !3802, file: !3802, line: 140, type: !3406, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !437)
!3848 = !DILocation(line: 148, column: 2, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3847, file: !3802, line: 148, column: 2)
!3850 = !{i64 2154756650}
!3851 = !DILocation(line: 149, column: 2, scope: !3847)
!3852 = !DILocation(line: 150, column: 1, scope: !3847)
!3853 = distinct !DISubprogram(name: "vnd_sensor_iodev_submit", scope: !265, file: !265, line: 74, type: !277, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3854)
!3854 = !{!3855, !3856, !3857, !3858, !3859, !3861, !3863}
!3855 = !DILocalVariable(name: "sqe", arg: 1, scope: !3853, file: !265, line: 74, type: !279)
!3856 = !DILocalVariable(name: "r", arg: 2, scope: !3853, file: !265, line: 74, type: !298)
!3857 = !DILocalVariable(name: "data", scope: !3853, file: !265, line: 76, type: !263)
!3858 = !DILocalVariable(name: "dev", scope: !3853, file: !265, line: 77, type: !408)
!3859 = !DILocalVariable(name: "iodev_sqe", scope: !3853, file: !265, line: 78, type: !3860)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3861 = !DILocalVariable(name: "idx", scope: !3862, file: !265, line: 78, type: !24)
!3862 = distinct !DILexicalBlock(scope: !3853, file: !265, line: 78, column: 37)
!3863 = !DILocalVariable(name: "acq", scope: !3862, file: !265, line: 78, type: !422)
!3864 = !DILocation(line: 0, scope: !3853)
!3865 = !DILocation(line: 76, column: 65, scope: !3853)
!3866 = !DILocation(line: 77, column: 35, scope: !3853)
!3867 = !DILocation(line: 78, column: 37, scope: !3862)
!3868 = !DILocation(line: 0, scope: !3862)
!3869 = !DILocation(line: 78, column: 37, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !265, line: 78, column: 37)
!3871 = distinct !DILexicalBlock(scope: !3862, file: !265, line: 78, column: 37)
!3872 = !DILocation(line: 81, column: 14, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !265, line: 80, column: 25)
!3874 = distinct !DILexicalBlock(scope: !3853, file: !265, line: 80, column: 6)
!3875 = !DILocation(line: 81, column: 18, scope: !3873)
!3876 = !DILocation(line: 82, column: 14, scope: !3873)
!3877 = !DILocation(line: 82, column: 16, scope: !3873)
!3878 = !DILocation(line: 83, column: 3, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !265, line: 83, column: 3)
!3880 = distinct !DILexicalBlock(scope: !3873, file: !265, line: 83, column: 3)
!3881 = !DILocation(line: 83, column: 3, scope: !3880)
!3882 = !DILocation(line: 83, column: 3, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3879, file: !265, line: 83, column: 3)
!3884 = !DILocation(line: 85, column: 3, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !265, line: 85, column: 3)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !265, line: 85, column: 3)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !265, line: 85, column: 3)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !265, line: 85, column: 3)
!3889 = distinct !DILexicalBlock(scope: !3874, file: !265, line: 84, column: 9)
!3890 = !DILocation(line: 86, column: 3, scope: !3889)
!3891 = !DILocation(line: 88, column: 1, scope: !3853)
!3892 = distinct !DISubprogram(name: "atomic_get", scope: !3701, file: !3701, line: 159, type: !3702, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3893)
!3893 = !{!3894}
!3894 = !DILocalVariable(name: "target", arg: 1, scope: !3892, file: !3701, line: 159, type: !3705)
!3895 = !DILocation(line: 0, scope: !3892)
!3896 = !DILocation(line: 161, column: 9, scope: !3892)
!3897 = !DILocation(line: 161, column: 2, scope: !3892)
!3898 = distinct !DISubprogram(name: "atomic_add", scope: !3701, file: !3701, line: 86, type: !3737, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3899)
!3899 = !{!3900, !3901}
!3900 = !DILocalVariable(name: "target", arg: 1, scope: !3898, file: !3701, line: 86, type: !3739)
!3901 = !DILocalVariable(name: "value", arg: 2, scope: !3898, file: !3701, line: 86, type: !3704)
!3902 = !DILocation(line: 0, scope: !3898)
!3903 = !DILocation(line: 88, column: 9, scope: !3898)
!3904 = !DILocation(line: 88, column: 2, scope: !3898)
!3905 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3692, file: !3692, line: 175, type: !3693, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3906)
!3906 = !{!3907}
!3907 = !DILocalVariable(name: "level", arg: 1, scope: !3905, file: !3692, line: 175, type: !108)
!3908 = !DILocation(line: 0, scope: !3905)
!3909 = !DILocation(line: 177, column: 2, scope: !3905)
!3910 = !DILocation(line: 189, column: 1, scope: !3905)
!3911 = distinct !DISubprogram(name: "rtio_sqe_err", scope: !125, file: !125, line: 592, type: !316, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3912)
!3912 = !{!3913, !3914, !3915}
!3913 = !DILocalVariable(name: "r", arg: 1, scope: !3911, file: !125, line: 592, type: !298)
!3914 = !DILocalVariable(name: "sqe", arg: 2, scope: !3911, file: !125, line: 592, type: !279)
!3915 = !DILocalVariable(name: "result", arg: 3, scope: !3911, file: !125, line: 592, type: !108)
!3916 = !DILocation(line: 0, scope: !3911)
!3917 = !DILocation(line: 594, column: 5, scope: !3911)
!3918 = !DILocation(line: 594, column: 15, scope: !3911)
!3919 = !DILocation(line: 594, column: 20, scope: !3911)
!3920 = !DILocation(line: 594, column: 2, scope: !3911)
!3921 = !DILocation(line: 595, column: 1, scope: !3911)
!3922 = distinct !DISubprogram(name: "vnd_sensor_init", scope: !265, file: !265, line: 111, type: !473, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3923)
!3923 = !{!3924, !3925, !3927, !3928}
!3924 = !DILocalVariable(name: "dev", arg: 1, scope: !3922, file: !265, line: 111, type: !408)
!3925 = !DILocalVariable(name: "config", scope: !3922, file: !265, line: 113, type: !3926)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!3927 = !DILocalVariable(name: "data", scope: !3922, file: !265, line: 114, type: !263)
!3928 = !DILocalVariable(name: "sample_period", scope: !3922, file: !265, line: 115, type: !113)
!3929 = !DILocation(line: 0, scope: !3922)
!3930 = !DILocation(line: 113, column: 48, scope: !3922)
!3931 = !DILocation(line: 114, column: 38, scope: !3922)
!3932 = !DILocation(line: 115, column: 35, scope: !3922)
!3933 = !DILocation(line: 117, column: 8, scope: !3922)
!3934 = !DILocation(line: 117, column: 12, scope: !3922)
!3935 = !DILocation(line: 119, column: 22, scope: !3922)
!3936 = !DILocation(line: 119, column: 2, scope: !3922)
!3937 = !DILocation(line: 121, column: 30, scope: !3922)
!3938 = !DILocation(line: 121, column: 2, scope: !3922)
!3939 = !DILocation(line: 124, column: 2, scope: !3922)
!3940 = distinct !DISubprogram(name: "vnd_sensor_timer_expiry", scope: !265, file: !265, line: 103, type: !396, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3941)
!3941 = !{!3942, !3943}
!3942 = !DILocalVariable(name: "timer", arg: 1, scope: !3940, file: !265, line: 103, type: !398)
!3943 = !DILocalVariable(name: "data", scope: !3940, file: !265, line: 105, type: !263)
!3944 = !DILocation(line: 0, scope: !3940)
!3945 = !DILocation(line: 106, column: 3, scope: !3940)
!3946 = !DILocation(line: 108, column: 30, scope: !3940)
!3947 = !DILocation(line: 108, column: 2, scope: !3940)
!3948 = !DILocation(line: 109, column: 1, scope: !3940)
!3949 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3769, file: !3769, line: 403, type: !3770, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3950)
!3950 = !{!3951}
!3951 = !DILocalVariable(name: "t", arg: 1, scope: !3949, file: !3769, line: 403, type: !114)
!3952 = !DILocation(line: 0, scope: !3949)
!3953 = !DILocalVariable(name: "t", arg: 1, scope: !3954, file: !3769, line: 102, type: !114)
!3954 = distinct !DISubprogram(name: "z_tmcvt", scope: !3769, file: !3769, line: 102, type: !3777, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3955)
!3955 = !{!3953, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965}
!3956 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3954, file: !3769, line: 102, type: !113)
!3957 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3954, file: !3769, line: 103, type: !113)
!3958 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3954, file: !3769, line: 103, type: !422)
!3959 = !DILocalVariable(name: "result32", arg: 5, scope: !3954, file: !3769, line: 104, type: !422)
!3960 = !DILocalVariable(name: "round_up", arg: 6, scope: !3954, file: !3769, line: 104, type: !422)
!3961 = !DILocalVariable(name: "round_off", arg: 7, scope: !3954, file: !3769, line: 105, type: !422)
!3962 = !DILocalVariable(name: "mul_ratio", scope: !3954, file: !3769, line: 107, type: !422)
!3963 = !DILocalVariable(name: "div_ratio", scope: !3954, file: !3769, line: 109, type: !422)
!3964 = !DILocalVariable(name: "off", scope: !3954, file: !3769, line: 116, type: !114)
!3965 = !DILocalVariable(name: "rdivisor", scope: !3966, file: !3769, line: 119, type: !113)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3769, line: 118, column: 18)
!3967 = distinct !DILexicalBlock(scope: !3954, file: !3769, line: 118, column: 6)
!3968 = !DILocation(line: 0, scope: !3954, inlinedAt: !3969)
!3969 = distinct !DILocation(line: 406, column: 9, scope: !3949)
!3970 = !DILocation(line: 145, column: 13, scope: !3971, inlinedAt: !3969)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !3769, line: 144, column: 10)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !3769, line: 142, column: 7)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !3769, line: 141, column: 24)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !3769, line: 141, column: 13)
!3975 = distinct !DILexicalBlock(scope: !3954, file: !3769, line: 134, column: 6)
!3976 = !DILocation(line: 406, column: 2, scope: !3949)
!3977 = distinct !DISubprogram(name: "k_timer_start", scope: !3802, file: !3802, line: 426, type: !3978, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3980)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{null, !398, !401, !401}
!3980 = !{!3981, !3982, !3983}
!3981 = !DILocalVariable(name: "timer", arg: 1, scope: !3977, file: !3802, line: 426, type: !398)
!3982 = !DILocalVariable(name: "duration", arg: 2, scope: !3977, file: !3802, line: 426, type: !401)
!3983 = !DILocalVariable(name: "period", arg: 3, scope: !3977, file: !3802, line: 426, type: !401)
!3984 = !DILocation(line: 0, scope: !3977)
!3985 = !DILocation(line: 437, column: 2, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3977, file: !3802, line: 437, column: 2)
!3987 = !{i64 2154760096}
!3988 = !DILocation(line: 438, column: 2, scope: !3977)
!3989 = !DILocation(line: 439, column: 1, scope: !3977)
!3990 = distinct !DISubprogram(name: "vnd_sensor_handle_int", scope: !265, file: !265, line: 90, type: !3991, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3993)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{null, !408}
!3993 = !{!3994, !3995, !3996, !3997, !3999}
!3994 = !DILocalVariable(name: "dev", arg: 1, scope: !3990, file: !265, line: 90, type: !408)
!3995 = !DILocalVariable(name: "data", scope: !3990, file: !265, line: 92, type: !263)
!3996 = !DILocalVariable(name: "iodev_sqe", scope: !3990, file: !265, line: 93, type: !3860)
!3997 = !DILocalVariable(name: "idx", scope: !3998, file: !265, line: 93, type: !24)
!3998 = distinct !DILexicalBlock(scope: !3990, file: !265, line: 93, column: 37)
!3999 = !DILocalVariable(name: "has_consumable", scope: !3998, file: !265, line: 93, type: !422)
!4000 = !DILocation(line: 0, scope: !3990)
!4001 = !DILocation(line: 92, column: 38, scope: !3990)
!4002 = !DILocation(line: 93, column: 37, scope: !3998)
!4003 = !DILocation(line: 0, scope: !3998)
!4004 = !DILocation(line: 93, column: 37, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !265, line: 93, column: 37)
!4006 = distinct !DILexicalBlock(scope: !3998, file: !265, line: 93, column: 37)
!4007 = !DILocation(line: 96, column: 44, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !265, line: 95, column: 25)
!4009 = distinct !DILexicalBlock(scope: !3990, file: !265, line: 95, column: 6)
!4010 = !DILocation(line: 96, column: 60, scope: !4008)
!4011 = !DILocation(line: 96, column: 3, scope: !4008)
!4012 = !DILocation(line: 97, column: 3, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !265, line: 97, column: 3)
!4014 = distinct !DILexicalBlock(scope: !4008, file: !265, line: 97, column: 3)
!4015 = !DILocation(line: 97, column: 3, scope: !4014)
!4016 = !DILocation(line: 97, column: 3, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4013, file: !265, line: 97, column: 3)
!4018 = !DILocation(line: 99, column: 3, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !265, line: 99, column: 3)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !265, line: 99, column: 3)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !265, line: 99, column: 3)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !265, line: 99, column: 3)
!4023 = distinct !DILexicalBlock(scope: !4009, file: !265, line: 98, column: 9)
!4024 = !DILocation(line: 101, column: 1, scope: !3990)
!4025 = distinct !DISubprogram(name: "vnd_sensor_iodev_execute", scope: !265, file: !265, line: 55, type: !4026, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4028)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{null, !408, !279, !298}
!4028 = !{!4029, !4030, !4031, !4032}
!4029 = !DILocalVariable(name: "dev", arg: 1, scope: !4025, file: !265, line: 55, type: !408)
!4030 = !DILocalVariable(name: "sqe", arg: 2, scope: !4025, file: !265, line: 56, type: !279)
!4031 = !DILocalVariable(name: "r", arg: 3, scope: !4025, file: !265, line: 56, type: !298)
!4032 = !DILocalVariable(name: "result", scope: !4025, file: !265, line: 58, type: !108)
!4033 = !DILocation(line: 0, scope: !4025)
!4034 = !DILocation(line: 60, column: 11, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4025, file: !265, line: 60, column: 6)
!4036 = !DILocation(line: 60, column: 14, scope: !4035)
!4037 = !DILocation(line: 60, column: 6, scope: !4025)
!4038 = !DILocation(line: 63, column: 3, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !265, line: 63, column: 3)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !265, line: 63, column: 3)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !265, line: 63, column: 3)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !265, line: 63, column: 3)
!4043 = distinct !DILexicalBlock(scope: !4035, file: !265, line: 62, column: 9)
!4044 = !DILocation(line: 67, column: 6, scope: !4025)
!4045 = !DILocation(line: 61, column: 44, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4035, file: !265, line: 60, column: 29)
!4047 = !DILocation(line: 61, column: 54, scope: !4046)
!4048 = !DILocation(line: 61, column: 12, scope: !4046)
!4049 = !DILocation(line: 67, column: 13, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4025, file: !265, line: 67, column: 6)
!4051 = !DILocation(line: 68, column: 3, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4050, file: !265, line: 67, column: 18)
!4053 = !DILocation(line: 69, column: 2, scope: !4052)
!4054 = !DILocation(line: 70, column: 3, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4050, file: !265, line: 69, column: 9)
!4056 = !DILocation(line: 72, column: 1, scope: !4025)
!4057 = distinct !DISubprogram(name: "vnd_sensor_iodev_read", scope: !265, file: !265, line: 29, type: !4058, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4060)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{!108, !408, !209, !113}
!4060 = !{!4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068}
!4061 = !DILocalVariable(name: "dev", arg: 1, scope: !4057, file: !265, line: 29, type: !408)
!4062 = !DILocalVariable(name: "buf", arg: 2, scope: !4057, file: !265, line: 29, type: !209)
!4063 = !DILocalVariable(name: "buf_len", arg: 3, scope: !4057, file: !265, line: 30, type: !113)
!4064 = !DILocalVariable(name: "config", scope: !4057, file: !265, line: 32, type: !3926)
!4065 = !DILocalVariable(name: "data", scope: !4057, file: !265, line: 33, type: !263)
!4066 = !DILocalVariable(name: "sample_number", scope: !4057, file: !265, line: 34, type: !113)
!4067 = !DILocalVariable(name: "key", scope: !4057, file: !265, line: 35, type: !113)
!4068 = !DILocalVariable(name: "i", scope: !4069, file: !265, line: 48, type: !108)
!4069 = distinct !DILexicalBlock(scope: !4057, file: !265, line: 48, column: 2)
!4070 = !DILocation(line: 0, scope: !4057)
!4071 = !DILocation(line: 32, column: 48, scope: !4057)
!4072 = !DILocation(line: 33, column: 38, scope: !4057)
!4073 = !DILocation(line: 37, column: 2, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !265, line: 37, column: 2)
!4075 = distinct !DILexicalBlock(scope: !4076, file: !265, line: 37, column: 2)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !265, line: 37, column: 2)
!4077 = distinct !DILexicalBlock(scope: !4057, file: !265, line: 37, column: 2)
!4078 = !DILocation(line: 55, column: 2, scope: !4079, inlinedAt: !4086)
!4079 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4083)
!4080 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!32}
!4083 = !{!4084, !4085}
!4084 = !DILocalVariable(name: "key", scope: !4079, file: !4080, line: 44, type: !32)
!4085 = !DILocalVariable(name: "tmp", scope: !4079, file: !4080, line: 53, type: !32)
!4086 = distinct !DILocation(line: 39, column: 8, scope: !4057)
!4087 = !{i64 2258365}
!4088 = !DILocation(line: 0, scope: !4079, inlinedAt: !4086)
!4089 = !DILocation(line: 40, column: 24, scope: !4057)
!4090 = !DILocation(line: 40, column: 37, scope: !4057)
!4091 = !DILocalVariable(name: "key", arg: 1, scope: !4092, file: !4080, line: 84, type: !32)
!4092 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4095)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{null, !32}
!4095 = !{!4091}
!4096 = !DILocation(line: 0, scope: !4092, inlinedAt: !4097)
!4097 = distinct !DILocation(line: 41, column: 2, scope: !4057)
!4098 = !DILocation(line: 95, column: 2, scope: !4092, inlinedAt: !4097)
!4099 = !{i64 2259182}
!4100 = !DILocation(line: 43, column: 24, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4057, file: !265, line: 43, column: 6)
!4102 = !DILocation(line: 43, column: 14, scope: !4101)
!4103 = !DILocation(line: 43, column: 6, scope: !4057)
!4104 = !DILocation(line: 0, scope: !4069)
!4105 = !DILocation(line: 48, column: 22, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4069, file: !265, line: 48, column: 2)
!4107 = !DILocation(line: 48, column: 20, scope: !4106)
!4108 = !DILocation(line: 48, column: 2, scope: !4069)
!4109 = !DILocation(line: 44, column: 3, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !265, line: 44, column: 3)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !265, line: 44, column: 3)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !265, line: 44, column: 3)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !265, line: 44, column: 3)
!4114 = distinct !DILexicalBlock(scope: !4101, file: !265, line: 43, column: 37)
!4115 = !DILocation(line: 45, column: 3, scope: !4114)
!4116 = !DILocation(line: 49, column: 26, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4106, file: !265, line: 48, column: 62)
!4118 = !DILocation(line: 49, column: 48, scope: !4117)
!4119 = !DILocation(line: 49, column: 12, scope: !4117)
!4120 = !DILocation(line: 49, column: 3, scope: !4117)
!4121 = !DILocation(line: 49, column: 10, scope: !4117)
!4122 = !DILocation(line: 48, column: 58, scope: !4106)
!4123 = distinct !{!4123, !4108, !4124}
!4124 = !DILocation(line: 50, column: 2, scope: !4069)
!4125 = !DILocation(line: 53, column: 1, scope: !4057)
!4126 = distinct !DISubprogram(name: "rtio_sqe_ok", scope: !125, file: !125, line: 578, type: !316, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4127)
!4127 = !{!4128, !4129, !4130}
!4128 = !DILocalVariable(name: "r", arg: 1, scope: !4126, file: !125, line: 578, type: !298)
!4129 = !DILocalVariable(name: "sqe", arg: 2, scope: !4126, file: !125, line: 578, type: !279)
!4130 = !DILocalVariable(name: "result", arg: 3, scope: !4126, file: !125, line: 578, type: !108)
!4131 = !DILocation(line: 0, scope: !4126)
!4132 = !DILocation(line: 580, column: 5, scope: !4126)
!4133 = !DILocation(line: 580, column: 15, scope: !4126)
!4134 = !DILocation(line: 580, column: 20, scope: !4126)
!4135 = !DILocation(line: 580, column: 2, scope: !4126)
!4136 = !DILocation(line: 581, column: 1, scope: !4126)
!4137 = distinct !DISubprogram(name: "cbvprintf_package", scope: !543, file: !543, line: 233, type: !4138, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4147)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!108, !104, !439, !113, !105, !4140}
!4140 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4141, line: 99, baseType: !4142)
!4141 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4142 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4141, line: 40, baseType: !4143)
!4143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !543, baseType: !4144)
!4144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4145)
!4145 = !{!4146}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4144, file: !543, line: 18, baseType: !104, size: 32)
!4147 = !{!4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4183, !4192, !4195, !4196, !4199, !4202, !4205, !4208, !4214}
!4148 = !DILocalVariable(name: "packaged", arg: 1, scope: !4137, file: !543, line: 233, type: !104)
!4149 = !DILocalVariable(name: "len", arg: 2, scope: !4137, file: !543, line: 233, type: !439)
!4150 = !DILocalVariable(name: "flags", arg: 3, scope: !4137, file: !543, line: 233, type: !113)
!4151 = !DILocalVariable(name: "fmt", arg: 4, scope: !4137, file: !543, line: 234, type: !105)
!4152 = !DILocalVariable(name: "ap", arg: 5, scope: !4137, file: !543, line: 234, type: !4140)
!4153 = !DILocalVariable(name: "buf0", scope: !4137, file: !543, line: 247, type: !209)
!4154 = !DILocalVariable(name: "buf", scope: !4137, file: !543, line: 248, type: !209)
!4155 = !DILocalVariable(name: "size", scope: !4137, file: !543, line: 249, type: !32)
!4156 = !DILocalVariable(name: "align", scope: !4137, file: !543, line: 250, type: !32)
!4157 = !DILocalVariable(name: "str_ptr_pos", scope: !4137, file: !543, line: 251, type: !4158)
!4158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !2150)
!4159 = !DILocalVariable(name: "str_ptr_arg", scope: !4137, file: !543, line: 252, type: !4158)
!4160 = !DILocalVariable(name: "s_idx", scope: !4137, file: !543, line: 253, type: !32)
!4161 = !DILocalVariable(name: "s_rw_cnt", scope: !4137, file: !543, line: 254, type: !32)
!4162 = !DILocalVariable(name: "s_ro_cnt", scope: !4137, file: !543, line: 255, type: !32)
!4163 = !DILocalVariable(name: "arg_idx", scope: !4137, file: !543, line: 256, type: !108)
!4164 = !DILocalVariable(name: "i", scope: !4137, file: !543, line: 257, type: !32)
!4165 = !DILocalVariable(name: "s", scope: !4137, file: !543, line: 258, type: !105)
!4166 = !DILocalVariable(name: "parsing", scope: !4137, file: !543, line: 259, type: !422)
!4167 = !DILocalVariable(name: "rws_pos_en", scope: !4137, file: !543, line: 263, type: !422)
!4168 = !DILocalVariable(name: "fros_cnt", scope: !4137, file: !543, line: 268, type: !108)
!4169 = !DILocalVariable(name: "is_str_arg", scope: !4137, file: !543, line: 269, type: !422)
!4170 = !DILocalVariable(name: "pkg_hdr", scope: !4137, file: !543, line: 270, type: !4171)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 32)
!4172 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4173, line: 78, size: 32, elements: !4174)
!4173 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4174 = !{!4175, !4182}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4172, file: !4173, line: 80, baseType: !4176, size: 32)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4173, line: 45, size: 32, elements: !4177)
!4177 = !{!4178, !4179, !4180, !4181}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4176, file: !4173, line: 47, baseType: !164, size: 8)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4176, file: !4173, line: 50, baseType: !164, size: 8, offset: 8)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4176, file: !4173, line: 53, baseType: !164, size: 8, offset: 16)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4176, file: !4173, line: 56, baseType: !164, size: 8, offset: 24)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4172, file: !4173, line: 82, baseType: !104, size: 32)
!4183 = !DILocalVariable(name: "v", scope: !4184, file: !543, line: 567, type: !4188)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !543, line: 562, column: 14)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !543, line: 481, column: 18)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !543, line: 466, column: 3)
!4187 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 343, column: 15)
!4188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4137, file: !543, line: 567, size: 64, elements: !4189)
!4189 = !{!4190, !4191}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4188, file: !543, line: 567, baseType: !536, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4188, file: !543, line: 567, baseType: !534, size: 64)
!4192 = !DILocalVariable(name: "is_ro", scope: !4193, file: !543, line: 620, type: !422)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !543, line: 613, column: 19)
!4194 = distinct !DILexicalBlock(scope: !4187, file: !543, line: 613, column: 7)
!4195 = !DILocalVariable(name: "do_ro", scope: !4193, file: !543, line: 621, type: !422)
!4196 = !DILocalVariable(name: "s_ptr_idx", scope: !4197, file: !543, line: 626, type: !113)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !543, line: 625, column: 11)
!4198 = distinct !DILexicalBlock(scope: !4193, file: !543, line: 623, column: 8)
!4199 = !DILocalVariable(name: "v", scope: !4200, file: !543, line: 684, type: !108)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !543, line: 683, column: 35)
!4201 = distinct !DILexicalBlock(scope: !4194, file: !543, line: 683, column: 14)
!4202 = !DILocalVariable(name: "v", scope: !4203, file: !543, line: 691, type: !144)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !543, line: 690, column: 36)
!4204 = distinct !DILexicalBlock(scope: !4201, file: !543, line: 690, column: 14)
!4205 = !DILocalVariable(name: "v", scope: !4206, file: !543, line: 698, type: !112)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !543, line: 697, column: 41)
!4207 = distinct !DILexicalBlock(scope: !4204, file: !543, line: 697, column: 14)
!4208 = !DILocalVariable(name: "pos", scope: !4209, file: !543, line: 762, type: !164)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !543, line: 757, column: 31)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !543, line: 757, column: 3)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !543, line: 757, column: 3)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !543, line: 756, column: 16)
!4213 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 756, column: 6)
!4214 = !DILabel(scope: !4193, name: "process_string", file: !543, line: 615)
!4215 = !DILocation(line: 0, scope: !4137)
!4216 = !DILocation(line: 251, column: 2, scope: !4137)
!4217 = !DILocation(line: 251, column: 10, scope: !4137)
!4218 = !DILocation(line: 252, column: 2, scope: !4137)
!4219 = !DILocation(line: 252, column: 10, scope: !4137)
!4220 = !DILocation(line: 263, column: 29, scope: !4137)
!4221 = !DILocation(line: 263, column: 21, scope: !4137)
!4222 = !DILocation(line: 268, column: 21, scope: !4137)
!4223 = !DILocation(line: 268, column: 19, scope: !4137)
!4224 = !DILocation(line: 273, column: 6, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 273, column: 6)
!4226 = !DILocation(line: 273, column: 26, scope: !4225)
!4227 = !DILocation(line: 273, column: 6, scope: !4137)
!4228 = !DILocation(line: 297, column: 6, scope: !4137)
!4229 = !DILocation(line: 305, column: 11, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 305, column: 6)
!4231 = !DILocation(line: 305, column: 6, scope: !4137)
!4232 = !DILocation(line: 327, column: 19, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 327, column: 6)
!4234 = !DILocation(line: 327, column: 22, scope: !4233)
!4235 = !DILocation(line: 327, column: 33, scope: !4233)
!4236 = !DILocation(line: 327, column: 50, scope: !4233)
!4237 = !DILocation(line: 327, column: 6, scope: !4137)
!4238 = !DILocation(line: 338, column: 9, scope: !4137)
!4239 = !DILocation(line: 341, column: 2, scope: !4137)
!4240 = !DILocation(line: 472, column: 8, scope: !4186)
!4241 = !DILocation(line: 473, column: 14, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !543, line: 473, column: 9)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !543, line: 472, column: 18)
!4244 = distinct !DILexicalBlock(scope: !4186, file: !543, line: 472, column: 8)
!4245 = !DILocation(line: 473, column: 9, scope: !4243)
!4246 = !DILocation(line: 479, column: 5, scope: !4243)
!4247 = !DILocation(line: 468, column: 9, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4186, file: !543, line: 468, column: 8)
!4249 = !DILocation(line: 468, column: 8, scope: !4248)
!4250 = !DILocation(line: 468, column: 15, scope: !4248)
!4251 = !DILocation(line: 468, column: 8, scope: !4186)
!4252 = distinct !{!4252, !4253, !4254}
!4253 = !DILocation(line: 343, column: 2, scope: !4137)
!4254 = !DILocation(line: 712, column: 2, scope: !4137)
!4255 = !DILocation(line: 481, column: 4, scope: !4186)
!4256 = !DILocation(line: 484, column: 12, scope: !4185)
!4257 = !DILocation(line: 485, column: 5, scope: !4185)
!4258 = !DILocation(line: 505, column: 5, scope: !4185)
!4259 = !DILocation(line: 518, column: 5, scope: !4185)
!4260 = !DILocation(line: 523, column: 5, scope: !4185)
!4261 = !DILocation(line: 532, column: 9, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4185, file: !543, line: 532, column: 9)
!4263 = !DILocation(line: 532, column: 17, scope: !4262)
!4264 = !DILocation(line: 532, column: 9, scope: !4185)
!4265 = !DILocation(line: 533, column: 10, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !543, line: 533, column: 10)
!4267 = distinct !DILexicalBlock(scope: !4262, file: !543, line: 532, column: 25)
!4268 = !DILocation(line: 533, column: 18, scope: !4266)
!4269 = !DILocation(line: 0, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4184, file: !543, line: 569, column: 9)
!4271 = !DILocation(line: 0, scope: !4184)
!4272 = !DILocation(line: 579, column: 20, scope: !4184)
!4273 = !DILocation(line: 579, column: 11, scope: !4184)
!4274 = !DILocation(line: 580, column: 9, scope: !4184)
!4275 = !DILocation(line: 582, column: 21, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !543, line: 582, column: 10)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !543, line: 580, column: 23)
!4278 = distinct !DILexicalBlock(scope: !4184, file: !543, line: 580, column: 9)
!4279 = !DILocation(line: 582, column: 28, scope: !4276)
!4280 = !DILocation(line: 582, column: 10, scope: !4277)
!4281 = !DILocation(line: 0, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !543, line: 587, column: 17)
!4283 = distinct !DILexicalBlock(scope: !4277, file: !543, line: 585, column: 10)
!4284 = !DILocation(line: 593, column: 9, scope: !4184)
!4285 = !DILocation(line: 600, column: 5, scope: !4185)
!4286 = !DILocation(line: 605, column: 18, scope: !4187)
!4287 = !DILocation(line: 605, column: 9, scope: !4187)
!4288 = !DILocation(line: 608, column: 20, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4187, file: !543, line: 608, column: 7)
!4290 = !DILocation(line: 608, column: 23, scope: !4289)
!4291 = !DILocation(line: 608, column: 34, scope: !4289)
!4292 = !DILocation(line: 608, column: 41, scope: !4289)
!4293 = !DILocation(line: 608, column: 7, scope: !4187)
!4294 = !DILocation(line: 613, column: 7, scope: !4187)
!4295 = !DILocation(line: 614, column: 8, scope: !4193)
!4296 = !DILocation(line: 614, column: 4, scope: !4193)
!4297 = !DILocation(line: 255, column: 15, scope: !4137)
!4298 = !DILocation(line: 256, column: 6, scope: !4137)
!4299 = !DILocation(line: 254, column: 15, scope: !4137)
!4300 = !DILocation(line: 253, column: 15, scope: !4137)
!4301 = !DILocation(line: 320, column: 7, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4230, file: !543, line: 305, column: 20)
!4303 = !DILocation(line: 615, column: 1, scope: !4193)
!4304 = !DILocation(line: 616, column: 8, scope: !4193)
!4305 = !DILocation(line: 617, column: 5, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !543, line: 616, column: 22)
!4307 = distinct !DILexicalBlock(scope: !4193, file: !543, line: 616, column: 8)
!4308 = !DILocation(line: 617, column: 25, scope: !4306)
!4309 = !DILocation(line: 618, column: 4, scope: !4306)
!4310 = !DILocation(line: 620, column: 26, scope: !4193)
!4311 = !DILocation(line: 620, column: 29, scope: !4193)
!4312 = !DILocation(line: 620, column: 17, scope: !4193)
!4313 = !DILocation(line: 620, column: 43, scope: !4193)
!4314 = !DILocation(line: 0, scope: !4193)
!4315 = !DILocation(line: 623, column: 14, scope: !4198)
!4316 = !DILocation(line: 626, column: 26, scope: !4197)
!4317 = !DILocation(line: 626, column: 37, scope: !4197)
!4318 = !DILocation(line: 0, scope: !4197)
!4319 = !DILocation(line: 634, column: 15, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4197, file: !543, line: 634, column: 9)
!4321 = !DILocation(line: 644, column: 9, scope: !4197)
!4322 = !DILocation(line: 649, column: 27, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !543, line: 644, column: 23)
!4324 = distinct !DILexicalBlock(scope: !4197, file: !543, line: 644, column: 9)
!4325 = !DILocation(line: 649, column: 6, scope: !4323)
!4326 = !DILocation(line: 649, column: 25, scope: !4323)
!4327 = !DILocation(line: 650, column: 27, scope: !4323)
!4328 = !DILocation(line: 650, column: 6, scope: !4323)
!4329 = !DILocation(line: 650, column: 25, scope: !4323)
!4330 = !DILocation(line: 651, column: 10, scope: !4323)
!4331 = !DILocation(line: 653, column: 26, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !543, line: 651, column: 17)
!4333 = distinct !DILexicalBlock(scope: !4323, file: !543, line: 651, column: 10)
!4334 = !DILocation(line: 654, column: 15, scope: !4332)
!4335 = !DILocation(line: 655, column: 6, scope: !4332)
!4336 = !DILocation(line: 656, column: 15, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4333, file: !543, line: 655, column: 13)
!4338 = !DILocation(line: 658, column: 16, scope: !4324)
!4339 = !DILocation(line: 663, column: 10, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !543, line: 658, column: 23)
!4341 = distinct !DILexicalBlock(scope: !4324, file: !543, line: 658, column: 16)
!4342 = !DILocation(line: 664, column: 5, scope: !4340)
!4343 = !DILocation(line: 664, column: 16, scope: !4341)
!4344 = !DILocation(line: 669, column: 10, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !543, line: 664, column: 28)
!4346 = distinct !DILexicalBlock(scope: !4341, file: !543, line: 664, column: 16)
!4347 = !DILocation(line: 670, column: 5, scope: !4345)
!4348 = !DILocation(line: 675, column: 13, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4346, file: !543, line: 670, column: 12)
!4350 = !DILocation(line: 675, column: 27, scope: !4349)
!4351 = !DILocation(line: 675, column: 10, scope: !4349)
!4352 = !DILocation(line: 678, column: 10, scope: !4197)
!4353 = !DILocation(line: 680, column: 8, scope: !4193)
!4354 = !DILocation(line: 683, column: 14, scope: !4194)
!4355 = !DILocation(line: 684, column: 12, scope: !4200)
!4356 = !DILocation(line: 0, scope: !4200)
!4357 = !DILocation(line: 686, column: 8, scope: !4200)
!4358 = !DILocation(line: 687, column: 5, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !543, line: 686, column: 22)
!4360 = distinct !DILexicalBlock(scope: !4200, file: !543, line: 686, column: 8)
!4361 = !DILocation(line: 687, column: 17, scope: !4359)
!4362 = !DILocation(line: 688, column: 4, scope: !4359)
!4363 = !DILocation(line: 698, column: 18, scope: !4206)
!4364 = !DILocation(line: 0, scope: !4206)
!4365 = !DILocation(line: 700, column: 8, scope: !4206)
!4366 = !DILocation(line: 704, column: 6, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !543, line: 703, column: 12)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !543, line: 701, column: 9)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !543, line: 700, column: 22)
!4370 = distinct !DILexicalBlock(scope: !4206, file: !543, line: 700, column: 8)
!4371 = !DILocation(line: 704, column: 24, scope: !4367)
!4372 = !DILocation(line: 706, column: 4, scope: !4369)
!4373 = !DILocation(line: 0, scope: !4201)
!4374 = !DILocation(line: 0, scope: !4187)
!4375 = !DILocation(line: 720, column: 6, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 720, column: 6)
!4377 = !DILocation(line: 720, column: 17, scope: !4376)
!4378 = !DILocation(line: 720, column: 31, scope: !4376)
!4379 = !DILocation(line: 720, column: 6, scope: !4137)
!4380 = !DILocation(line: 729, column: 6, scope: !4137)
!4381 = !DILocation(line: 730, column: 21, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !543, line: 729, column: 20)
!4383 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 729, column: 6)
!4384 = !DILocation(line: 730, column: 27, scope: !4382)
!4385 = !DILocation(line: 730, column: 3, scope: !4382)
!4386 = !DILocation(line: 737, column: 22, scope: !4137)
!4387 = !DILocation(line: 737, column: 20, scope: !4137)
!4388 = !DILocation(line: 0, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 739, column: 6)
!4390 = !DILocation(line: 745, column: 17, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4389, file: !543, line: 743, column: 9)
!4392 = !DILocation(line: 745, column: 25, scope: !4391)
!4393 = !DILocation(line: 746, column: 17, scope: !4391)
!4394 = !DILocation(line: 746, column: 28, scope: !4391)
!4395 = !DILocation(line: 749, column: 29, scope: !4137)
!4396 = !DILocation(line: 749, column: 16, scope: !4137)
!4397 = !DILocation(line: 749, column: 27, scope: !4137)
!4398 = !DILocation(line: 756, column: 6, scope: !4213)
!4399 = !DILocation(line: 756, column: 6, scope: !4137)
!4400 = !DILocation(line: 757, column: 3, scope: !4211)
!4401 = !DILocation(line: 758, column: 10, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4209, file: !543, line: 758, column: 8)
!4403 = !DILocation(line: 758, column: 25, scope: !4402)
!4404 = !DILocation(line: 758, column: 8, scope: !4209)
!4405 = !DILocation(line: 0, scope: !4209)
!4406 = !DILocation(line: 765, column: 8, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4209, file: !543, line: 765, column: 8)
!4408 = !DILocation(line: 765, column: 19, scope: !4407)
!4409 = !DILocation(line: 765, column: 23, scope: !4407)
!4410 = !DILocation(line: 765, column: 8, scope: !4209)
!4411 = !DILocation(line: 762, column: 33, scope: !4209)
!4412 = !DILocation(line: 769, column: 8, scope: !4209)
!4413 = !DILocation(line: 769, column: 11, scope: !4209)
!4414 = !DILocation(line: 757, column: 27, scope: !4210)
!4415 = !DILocation(line: 757, column: 17, scope: !4210)
!4416 = distinct !{!4416, !4400, !4417}
!4417 = !DILocation(line: 770, column: 3, scope: !4211)
!4418 = !DILocation(line: 774, column: 16, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4420, file: !543, line: 774, column: 2)
!4420 = distinct !DILexicalBlock(scope: !4137, file: !543, line: 774, column: 2)
!4421 = !DILocation(line: 774, column: 2, scope: !4420)
!4422 = !DILocation(line: 776, column: 16, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4424, file: !543, line: 776, column: 7)
!4424 = distinct !DILexicalBlock(scope: !4419, file: !543, line: 774, column: 30)
!4425 = !DILocation(line: 776, column: 19, scope: !4423)
!4426 = !DILocation(line: 776, column: 34, scope: !4423)
!4427 = !DILocation(line: 776, column: 7, scope: !4424)
!4428 = !DILocation(line: 780, column: 7, scope: !4424)
!4429 = !DILocation(line: 782, column: 13, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !543, line: 780, column: 19)
!4431 = distinct !DILexicalBlock(scope: !4424, file: !543, line: 780, column: 7)
!4432 = !DILocation(line: 782, column: 8, scope: !4430)
!4433 = !DILocation(line: 782, column: 11, scope: !4430)
!4434 = !DILocation(line: 783, column: 3, scope: !4430)
!4435 = !DILocation(line: 785, column: 26, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4431, file: !543, line: 783, column: 10)
!4437 = !DILocation(line: 785, column: 41, scope: !4436)
!4438 = !DILocation(line: 785, column: 24, scope: !4436)
!4439 = !DILocation(line: 785, column: 8, scope: !4436)
!4440 = !DILocation(line: 787, column: 52, scope: !4436)
!4441 = !DILocation(line: 789, column: 11, scope: !4436)
!4442 = !DILocation(line: 789, column: 21, scope: !4436)
!4443 = !DILocation(line: 0, scope: !4431)
!4444 = !DILocation(line: 793, column: 7, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4424, file: !543, line: 793, column: 7)
!4446 = !DILocation(line: 793, column: 18, scope: !4445)
!4447 = !DILocation(line: 793, column: 22, scope: !4445)
!4448 = !DILocation(line: 793, column: 29, scope: !4445)
!4449 = !DILocation(line: 793, column: 7, scope: !4424)
!4450 = !DILocation(line: 797, column: 12, scope: !4424)
!4451 = !DILocation(line: 797, column: 7, scope: !4424)
!4452 = !DILocation(line: 797, column: 10, scope: !4424)
!4453 = !DILocation(line: 799, column: 3, scope: !4424)
!4454 = !DILocation(line: 800, column: 7, scope: !4424)
!4455 = !DILocation(line: 801, column: 2, scope: !4424)
!4456 = !DILocation(line: 338, column: 4, scope: !4137)
!4457 = !DILocation(line: 774, column: 26, scope: !4419)
!4458 = distinct !{!4458, !4421, !4459}
!4459 = !DILocation(line: 801, column: 2, scope: !4420)
!4460 = !DILocation(line: 808, column: 9, scope: !4137)
!4461 = !DILocation(line: 808, column: 2, scope: !4137)
!4462 = !DILocation(line: 813, column: 1, scope: !4137)
!4463 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !543, file: !543, line: 33, type: !4464, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4466)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!422, !105}
!4466 = !{!4467}
!4467 = !DILocalVariable(name: "addr", arg: 1, scope: !4463, file: !543, line: 33, type: !105)
!4468 = !DILocation(line: 0, scope: !4463)
!4469 = !DILocation(line: 41, column: 9, scope: !4463)
!4470 = !DILocation(line: 41, column: 2, scope: !4463)
!4471 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4472, file: !4472, line: 24, type: !4473, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4475)
!4472 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!422, !13}
!4475 = !{!4476}
!4476 = !DILocalVariable(name: "addr", arg: 1, scope: !4471, file: !4472, line: 24, type: !13)
!4477 = !DILocation(line: 0, scope: !4471)
!4478 = !DILocation(line: 49, column: 30, scope: !4471)
!4479 = !DILocation(line: 49, column: 57, scope: !4471)
!4480 = !DILocation(line: 49, column: 2, scope: !4471)
!4481 = distinct !DISubprogram(name: "cbprintf_package", scope: !543, file: !543, line: 815, type: !4482, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4484)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!108, !104, !439, !113, !105, null}
!4484 = !{!4485, !4486, !4487, !4488, !4489, !4490}
!4485 = !DILocalVariable(name: "packaged", arg: 1, scope: !4481, file: !543, line: 815, type: !104)
!4486 = !DILocalVariable(name: "len", arg: 2, scope: !4481, file: !543, line: 815, type: !439)
!4487 = !DILocalVariable(name: "flags", arg: 3, scope: !4481, file: !543, line: 815, type: !113)
!4488 = !DILocalVariable(name: "format", arg: 4, scope: !4481, file: !543, line: 816, type: !105)
!4489 = !DILocalVariable(name: "ap", scope: !4481, file: !543, line: 818, type: !4140)
!4490 = !DILocalVariable(name: "ret", scope: !4481, file: !543, line: 819, type: !108)
!4491 = !DILocation(line: 0, scope: !4481)
!4492 = !DILocation(line: 818, column: 2, scope: !4481)
!4493 = !DILocation(line: 818, column: 10, scope: !4481)
!4494 = !DILocation(line: 821, column: 2, scope: !4481)
!4495 = !DILocation(line: 822, column: 8, scope: !4481)
!4496 = !DILocation(line: 823, column: 2, scope: !4481)
!4497 = !DILocation(line: 825, column: 1, scope: !4481)
!4498 = !DILocation(line: 824, column: 2, scope: !4481)
!4499 = distinct !DISubprogram(name: "cbpprintf_external", scope: !543, file: !543, line: 827, type: !4500, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4510)
!4500 = !DISubroutineType(types: !4501)
!4501 = !{!108, !4502, !4506, !104, !104}
!4502 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4173, line: 297, baseType: !4503)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 32)
!4504 = !DISubroutineType(types: !4505)
!4505 = !{!108, null}
!4506 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4173, line: 328, baseType: !4507)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 32)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!108, !4502, !104, !105, !4140}
!4510 = !{!4511, !4512, !4513, !4514, !4515, !4516, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529}
!4511 = !DILocalVariable(name: "out", arg: 1, scope: !4499, file: !543, line: 827, type: !4502)
!4512 = !DILocalVariable(name: "formatter", arg: 2, scope: !4499, file: !543, line: 828, type: !4506)
!4513 = !DILocalVariable(name: "ctx", arg: 3, scope: !4499, file: !543, line: 829, type: !104)
!4514 = !DILocalVariable(name: "packaged", arg: 4, scope: !4499, file: !543, line: 829, type: !104)
!4515 = !DILocalVariable(name: "buf", scope: !4499, file: !543, line: 831, type: !209)
!4516 = !DILocalVariable(name: "hdr", scope: !4499, file: !543, line: 832, type: !4517)
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 32)
!4518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4173, line: 96, size: 64, elements: !4519)
!4519 = !{!4520, !4521}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4518, file: !4173, line: 98, baseType: !4172, size: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4518, file: !4173, line: 101, baseType: !443, size: 32, offset: 32)
!4522 = !DILocalVariable(name: "s", scope: !4499, file: !543, line: 833, type: !443)
!4523 = !DILocalVariable(name: "ps", scope: !4499, file: !543, line: 833, type: !541)
!4524 = !DILocalVariable(name: "i", scope: !4499, file: !543, line: 834, type: !32)
!4525 = !DILocalVariable(name: "args_size", scope: !4499, file: !543, line: 834, type: !32)
!4526 = !DILocalVariable(name: "s_nbr", scope: !4499, file: !543, line: 834, type: !32)
!4527 = !DILocalVariable(name: "ros_nbr", scope: !4499, file: !543, line: 834, type: !32)
!4528 = !DILocalVariable(name: "rws_nbr", scope: !4499, file: !543, line: 834, type: !32)
!4529 = !DILocalVariable(name: "s_idx", scope: !4499, file: !543, line: 834, type: !32)
!4530 = !DILocation(line: 0, scope: !4499)
!4531 = !DILocation(line: 836, column: 10, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4499, file: !543, line: 836, column: 6)
!4533 = !DILocation(line: 836, column: 6, scope: !4499)
!4534 = !DILocation(line: 842, column: 28, scope: !4499)
!4535 = !DILocation(line: 842, column: 14, scope: !4499)
!4536 = !DILocation(line: 852, column: 16, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !543, line: 852, column: 2)
!4538 = distinct !DILexicalBlock(scope: !4499, file: !543, line: 852, column: 2)
!4539 = !DILocation(line: 852, column: 2, scope: !4538)
!4540 = !DILocation(line: 841, column: 28, scope: !4499)
!4541 = !DILocation(line: 841, column: 14, scope: !4499)
!4542 = !DILocation(line: 841, column: 32, scope: !4499)
!4543 = !DILocation(line: 847, column: 19, scope: !4499)
!4544 = !DILocation(line: 843, column: 28, scope: !4499)
!4545 = !DILocation(line: 843, column: 14, scope: !4499)
!4546 = !DILocation(line: 847, column: 31, scope: !4499)
!4547 = !DILocation(line: 844, column: 28, scope: !4499)
!4548 = !DILocation(line: 844, column: 14, scope: !4499)
!4549 = !DILocation(line: 847, column: 45, scope: !4499)
!4550 = !DILocation(line: 847, column: 41, scope: !4499)
!4551 = !DILocation(line: 854, column: 24, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4537, file: !543, line: 852, column: 30)
!4553 = !DILocation(line: 854, column: 11, scope: !4552)
!4554 = !DILocation(line: 855, column: 30, scope: !4552)
!4555 = !DILocation(line: 855, column: 22, scope: !4552)
!4556 = !DILocation(line: 855, column: 8, scope: !4552)
!4557 = !DILocation(line: 857, column: 7, scope: !4552)
!4558 = !DILocation(line: 859, column: 8, scope: !4552)
!4559 = !DILocation(line: 859, column: 18, scope: !4552)
!4560 = !DILocation(line: 859, column: 5, scope: !4552)
!4561 = !DILocation(line: 852, column: 26, scope: !4537)
!4562 = distinct !{!4562, !4539, !4563}
!4563 = !DILocation(line: 860, column: 2, scope: !4538)
!4564 = !DILocation(line: 863, column: 6, scope: !4499)
!4565 = !DILocation(line: 866, column: 56, scope: !4499)
!4566 = !DILocation(line: 866, column: 9, scope: !4499)
!4567 = !DILocation(line: 866, column: 2, scope: !4499)
!4568 = !DILocation(line: 867, column: 1, scope: !4499)
!4569 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !543, file: !543, line: 179, type: !4570, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4572)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!108, !4502, !4506, !104, !105, !104}
!4572 = !{!4573, !4574, !4575, !4576, !4577, !4578}
!4573 = !DILocalVariable(name: "out", arg: 1, scope: !4569, file: !543, line: 179, type: !4502)
!4574 = !DILocalVariable(name: "formatter", arg: 2, scope: !4569, file: !543, line: 180, type: !4506)
!4575 = !DILocalVariable(name: "ctx", arg: 3, scope: !4569, file: !543, line: 181, type: !104)
!4576 = !DILocalVariable(name: "fmt", arg: 4, scope: !4569, file: !543, line: 182, type: !105)
!4577 = !DILocalVariable(name: "buf", arg: 5, scope: !4569, file: !543, line: 182, type: !104)
!4578 = !DILocalVariable(name: "u", scope: !4569, file: !543, line: 187, type: !4579)
!4579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !543, line: 184, size: 32, elements: !4580)
!4580 = !{!4581, !4582}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4579, file: !543, line: 185, baseType: !4140, size: 32)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4579, file: !543, line: 186, baseType: !104, size: 32)
!4583 = !DILocation(line: 0, scope: !4569)
!4584 = !DILocation(line: 191, column: 9, scope: !4569)
!4585 = !DILocation(line: 191, column: 2, scope: !4569)
!4586 = distinct !DISubprogram(name: "is_ptr", scope: !543, file: !543, line: 881, type: !4587, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4589)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!422, !105, !108}
!4589 = !{!4590, !4591, !4592, !4593, !4594}
!4590 = !DILocalVariable(name: "fmt", arg: 1, scope: !4586, file: !543, line: 881, type: !105)
!4591 = !DILocalVariable(name: "n", arg: 2, scope: !4586, file: !543, line: 881, type: !108)
!4592 = !DILocalVariable(name: "c", scope: !4586, file: !543, line: 883, type: !107)
!4593 = !DILocalVariable(name: "mod", scope: !4586, file: !543, line: 884, type: !422)
!4594 = !DILocalVariable(name: "cnt", scope: !4586, file: !543, line: 885, type: !108)
!4595 = !DILocation(line: 0, scope: !4586)
!4596 = !DILocation(line: 887, column: 14, scope: !4586)
!4597 = !DILocation(line: 887, column: 22, scope: !4586)
!4598 = !DILocation(line: 887, column: 2, scope: !4586)
!4599 = !DILocation(line: 887, column: 18, scope: !4586)
!4600 = !DILocation(line: 888, column: 7, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4586, file: !543, line: 887, column: 31)
!4602 = !DILocation(line: 889, column: 12, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !543, line: 889, column: 8)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !543, line: 888, column: 12)
!4605 = distinct !DILexicalBlock(scope: !4601, file: !543, line: 888, column: 7)
!4606 = !DILocation(line: 889, column: 8, scope: !4604)
!4607 = !DILocation(line: 890, column: 11, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !543, line: 890, column: 9)
!4609 = distinct !DILexicalBlock(scope: !4603, file: !543, line: 889, column: 18)
!4610 = !DILocation(line: 890, column: 9, scope: !4609)
!4611 = !DILocation(line: 892, column: 16, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4608, file: !543, line: 892, column: 16)
!4613 = !DILocation(line: 892, column: 16, scope: !4608)
!4614 = !DILocation(line: 895, column: 15, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4603, file: !543, line: 895, column: 15)
!4616 = !DILocation(line: 895, column: 15, scope: !4603)
!4617 = !DILocation(line: 900, column: 9, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4601, file: !543, line: 900, column: 7)
!4619 = !DILocation(line: 900, column: 7, scope: !4601)
!4620 = distinct !{!4620, !4598, !4621}
!4621 = !DILocation(line: 903, column: 2, scope: !4586)
!4622 = !DILocation(line: 906, column: 1, scope: !4586)
!4623 = distinct !DISubprogram(name: "is_fmt_spec", scope: !543, file: !543, line: 873, type: !4624, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4626)
!4624 = !DISubroutineType(types: !4625)
!4625 = !{!422, !107}
!4626 = !{!4627}
!4627 = !DILocalVariable(name: "c", arg: 1, scope: !4623, file: !543, line: 873, type: !107)
!4628 = !DILocation(line: 0, scope: !4623)
!4629 = !DILocation(line: 875, column: 19, scope: !4623)
!4630 = !DILocation(line: 875, column: 2, scope: !4623)
!4631 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !543, file: !543, line: 908, type: !4632, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4638)
!4632 = !DISubroutineType(types: !4633)
!4633 = !{!108, !104, !439, !4634, !104, !113, !3098, !439}
!4634 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4173, line: 308, baseType: !4635)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 32)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!108, !13, !439, !104}
!4638 = !{!4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4656, !4657, !4658, !4659, !4660, !4666, !4669, !4670, !4671, !4673, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4689, !4692, !4693, !4694, !4695, !4696, !4697, !4699, !4702, !4703, !4704}
!4639 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4631, file: !543, line: 908, type: !104)
!4640 = !DILocalVariable(name: "in_len", arg: 2, scope: !4631, file: !543, line: 909, type: !439)
!4641 = !DILocalVariable(name: "cb", arg: 3, scope: !4631, file: !543, line: 910, type: !4634)
!4642 = !DILocalVariable(name: "ctx", arg: 4, scope: !4631, file: !543, line: 911, type: !104)
!4643 = !DILocalVariable(name: "flags", arg: 5, scope: !4631, file: !543, line: 912, type: !113)
!4644 = !DILocalVariable(name: "strl", arg: 6, scope: !4631, file: !543, line: 913, type: !3098)
!4645 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4631, file: !543, line: 914, type: !439)
!4646 = !DILocalVariable(name: "buf", scope: !4631, file: !543, line: 918, type: !209)
!4647 = !DILocalVariable(name: "buf32", scope: !4631, file: !543, line: 919, type: !1229)
!4648 = !DILocalVariable(name: "args_size", scope: !4631, file: !543, line: 920, type: !32)
!4649 = !DILocalVariable(name: "ros_nbr", scope: !4631, file: !543, line: 920, type: !32)
!4650 = !DILocalVariable(name: "rws_nbr", scope: !4631, file: !543, line: 920, type: !32)
!4651 = !DILocalVariable(name: "fmt_present", scope: !4631, file: !543, line: 921, type: !422)
!4652 = !DILocalVariable(name: "rw_cpy", scope: !4631, file: !543, line: 922, type: !422)
!4653 = !DILocalVariable(name: "ro_cpy", scope: !4631, file: !543, line: 923, type: !422)
!4654 = !DILocalVariable(name: "in_desc", scope: !4631, file: !543, line: 924, type: !4655)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 32)
!4656 = !DILocalVariable(name: "out_len", scope: !4631, file: !543, line: 960, type: !108)
!4657 = !DILocalVariable(name: "fmt", scope: !4631, file: !543, line: 965, type: !105)
!4658 = !DILocalVariable(name: "str_pos", scope: !4631, file: !543, line: 966, type: !209)
!4659 = !DILocalVariable(name: "strl_cnt", scope: !4631, file: !543, line: 967, type: !439)
!4660 = !DILocalVariable(name: "i", scope: !4661, file: !543, line: 973, type: !108)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !543, line: 973, column: 4)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !543, line: 972, column: 15)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !543, line: 972, column: 7)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !543, line: 970, column: 18)
!4665 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 970, column: 6)
!4666 = !DILocalVariable(name: "str", scope: !4667, file: !543, line: 974, type: !105)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !543, line: 973, column: 38)
!4668 = distinct !DILexicalBlock(scope: !4661, file: !543, line: 973, column: 4)
!4669 = !DILocalVariable(name: "len", scope: !4667, file: !543, line: 975, type: !108)
!4670 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4664, file: !543, line: 990, type: !422)
!4671 = !DILocalVariable(name: "i", scope: !4672, file: !543, line: 995, type: !108)
!4672 = distinct !DILexicalBlock(scope: !4664, file: !543, line: 995, column: 3)
!4673 = !DILocalVariable(name: "arg_idx", scope: !4674, file: !543, line: 996, type: !164)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !543, line: 995, column: 37)
!4675 = distinct !DILexicalBlock(scope: !4672, file: !543, line: 995, column: 3)
!4676 = !DILocalVariable(name: "arg_pos", scope: !4674, file: !543, line: 997, type: !164)
!4677 = !DILocalVariable(name: "str", scope: !4674, file: !543, line: 998, type: !105)
!4678 = !DILocalVariable(name: "is_ro", scope: !4674, file: !543, line: 999, type: !422)
!4679 = !DILocalVariable(name: "len", scope: !4674, file: !543, line: 1000, type: !108)
!4680 = !DILocalVariable(name: "out_desc", scope: !4631, file: !543, line: 1038, type: !4176)
!4681 = !DILocalVariable(name: "cpy_str_pos", scope: !4631, file: !543, line: 1040, type: !4158)
!4682 = !DILocalVariable(name: "keep_str_pos", scope: !4631, file: !543, line: 1042, type: !4158)
!4683 = !DILocalVariable(name: "scpy_cnt", scope: !4631, file: !543, line: 1043, type: !164)
!4684 = !DILocalVariable(name: "keep_cnt", scope: !4631, file: !543, line: 1044, type: !164)
!4685 = !DILocalVariable(name: "dst", scope: !4631, file: !543, line: 1045, type: !209)
!4686 = !DILocalVariable(name: "rv", scope: !4631, file: !543, line: 1046, type: !108)
!4687 = !DILocalVariable(name: "i", scope: !4688, file: !543, line: 1074, type: !108)
!4688 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 1074, column: 2)
!4689 = !DILocalVariable(name: "arg_idx", scope: !4690, file: !543, line: 1075, type: !164)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !543, line: 1074, column: 36)
!4691 = distinct !DILexicalBlock(scope: !4688, file: !543, line: 1074, column: 2)
!4692 = !DILocalVariable(name: "arg_pos", scope: !4690, file: !543, line: 1076, type: !164)
!4693 = !DILocalVariable(name: "str", scope: !4690, file: !543, line: 1077, type: !105)
!4694 = !DILocalVariable(name: "is_ro", scope: !4690, file: !543, line: 1078, type: !422)
!4695 = !DILocalVariable(name: "in_desc_backup", scope: !4631, file: !543, line: 1114, type: !4176)
!4696 = !DILocalVariable(name: "strs_len", scope: !4631, file: !543, line: 1134, type: !439)
!4697 = !DILocalVariable(name: "i", scope: !4698, file: !543, line: 1143, type: !108)
!4698 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 1143, column: 2)
!4699 = !DILocalVariable(name: "loc", scope: !4700, file: !543, line: 1144, type: !164)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !543, line: 1143, column: 37)
!4701 = distinct !DILexicalBlock(scope: !4698, file: !543, line: 1143, column: 2)
!4702 = !DILocalVariable(name: "str", scope: !4700, file: !543, line: 1145, type: !105)
!4703 = !DILocalVariable(name: "str_len", scope: !4700, file: !543, line: 1146, type: !168)
!4704 = !DILabel(scope: !4705, name: "calculate_string_length", file: !543, line: 1021)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !543, line: 1020, column: 56)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !543, line: 1020, column: 15)
!4707 = distinct !DILexicalBlock(scope: !4674, file: !543, line: 1014, column: 8)
!4708 = !DILocation(line: 0, scope: !4631)
!4709 = !DILocation(line: 919, column: 20, scope: !4631)
!4710 = !DILocation(line: 921, column: 27, scope: !4631)
!4711 = !DILocation(line: 921, column: 21, scope: !4631)
!4712 = !DILocation(line: 926, column: 18, scope: !4631)
!4713 = !DILocation(line: 926, column: 11, scope: !4631)
!4714 = !DILocation(line: 926, column: 34, scope: !4631)
!4715 = !DILocation(line: 931, column: 21, scope: !4631)
!4716 = !DILocation(line: 931, column: 12, scope: !4631)
!4717 = !DILocation(line: 932, column: 11, scope: !4631)
!4718 = !DILocation(line: 932, column: 19, scope: !4631)
!4719 = !DILocation(line: 938, column: 21, scope: !4631)
!4720 = !DILocation(line: 938, column: 12, scope: !4631)
!4721 = !DILocation(line: 939, column: 19, scope: !4631)
!4722 = !DILocation(line: 939, column: 23, scope: !4631)
!4723 = !DILocation(line: 946, column: 14, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 946, column: 6)
!4725 = !DILocation(line: 947, column: 7, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !543, line: 947, column: 7)
!4727 = distinct !DILexicalBlock(scope: !4724, file: !543, line: 946, column: 26)
!4728 = !DILocation(line: 947, column: 7, scope: !4727)
!4729 = !DILocation(line: 948, column: 4, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4726, file: !543, line: 947, column: 11)
!4731 = !DILocation(line: 949, column: 3, scope: !4730)
!4732 = !DILocation(line: 958, column: 23, scope: !4631)
!4733 = !DILocation(line: 958, column: 14, scope: !4631)
!4734 = !DILocation(line: 958, column: 27, scope: !4631)
!4735 = !DILocation(line: 965, column: 41, scope: !4631)
!4736 = !DILocation(line: 965, column: 20, scope: !4631)
!4737 = !DILocation(line: 966, column: 22, scope: !4631)
!4738 = !DILocation(line: 970, column: 9, scope: !4665)
!4739 = !DILocation(line: 970, column: 6, scope: !4631)
!4740 = !DILocation(line: 972, column: 7, scope: !4664)
!4741 = !DILocation(line: 0, scope: !4661)
!4742 = !DILocation(line: 973, column: 4, scope: !4661)
!4743 = !DILocation(line: 974, column: 46, scope: !4667)
!4744 = !DILocation(line: 974, column: 40, scope: !4667)
!4745 = !DILocation(line: 974, column: 23, scope: !4667)
!4746 = !DILocation(line: 0, scope: !4667)
!4747 = !DILocation(line: 975, column: 15, scope: !4667)
!4748 = !DILocation(line: 978, column: 14, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4667, file: !543, line: 978, column: 9)
!4750 = !DILocation(line: 979, column: 25, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4749, file: !543, line: 978, column: 38)
!4752 = !DILocation(line: 979, column: 19, scope: !4751)
!4753 = !DILocation(line: 979, column: 6, scope: !4751)
!4754 = !DILocation(line: 979, column: 23, scope: !4751)
!4755 = !DILocation(line: 980, column: 5, scope: !4751)
!4756 = !DILocation(line: 981, column: 13, scope: !4667)
!4757 = !DILocation(line: 982, column: 12, scope: !4667)
!4758 = !DILocation(line: 973, column: 34, scope: !4668)
!4759 = !DILocation(line: 973, column: 22, scope: !4668)
!4760 = distinct !{!4760, !4742, !4761}
!4761 = !DILocation(line: 983, column: 4, scope: !4661)
!4762 = !DILocation(line: 985, column: 16, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !543, line: 985, column: 8)
!4764 = distinct !DILexicalBlock(scope: !4663, file: !543, line: 984, column: 10)
!4765 = !DILocation(line: 967, column: 9, scope: !4631)
!4766 = !DILocation(line: 971, column: 11, scope: !4664)
!4767 = !DILocation(line: 0, scope: !4664)
!4768 = !DILocation(line: 0, scope: !4672)
!4769 = !DILocation(line: 995, column: 21, scope: !4675)
!4770 = !DILocation(line: 995, column: 3, scope: !4672)
!4771 = !DILocation(line: 990, column: 34, scope: !4664)
!4772 = !DILocation(line: 990, column: 26, scope: !4664)
!4773 = !DILocation(line: 996, column: 30, scope: !4674)
!4774 = !DILocation(line: 0, scope: !4674)
!4775 = !DILocation(line: 997, column: 30, scope: !4674)
!4776 = !DILocation(line: 997, column: 22, scope: !4674)
!4777 = !DILocation(line: 998, column: 39, scope: !4674)
!4778 = !DILocation(line: 998, column: 22, scope: !4674)
!4779 = !DILocation(line: 999, column: 17, scope: !4674)
!4780 = !DILocation(line: 1002, column: 20, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4674, file: !543, line: 1002, column: 8)
!4782 = !DILocation(line: 996, column: 22, scope: !4674)
!4783 = !DILocation(line: 1002, column: 35, scope: !4781)
!4784 = !DILocation(line: 1002, column: 23, scope: !4781)
!4785 = !DILocation(line: 1002, column: 8, scope: !4674)
!4786 = !DILocation(line: 1003, column: 5, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !543, line: 1003, column: 5)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !543, line: 1003, column: 5)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !543, line: 1003, column: 5)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !543, line: 1003, column: 5)
!4791 = distinct !DILexicalBlock(scope: !4781, file: !543, line: 1002, column: 45)
!4792 = !DILocation(line: 1010, column: 13, scope: !4791)
!4793 = !DILocation(line: 1011, column: 5, scope: !4791)
!4794 = !DILocation(line: 1014, column: 8, scope: !4674)
!4795 = !DILocation(line: 1015, column: 9, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4707, file: !543, line: 1014, column: 15)
!4797 = !DILocation(line: 1018, column: 14, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !543, line: 1017, column: 12)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !543, line: 1015, column: 9)
!4800 = !DILocation(line: 1020, column: 4, scope: !4796)
!4801 = !DILocation(line: 1020, column: 15, scope: !4707)
!4802 = !DILocation(line: 1021, column: 1, scope: !4705)
!4803 = !DILocation(line: 1022, column: 11, scope: !4705)
!4804 = !DILocation(line: 1025, column: 14, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4705, file: !543, line: 1025, column: 9)
!4806 = !DILocation(line: 1026, column: 25, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4805, file: !543, line: 1025, column: 38)
!4808 = !DILocation(line: 1026, column: 19, scope: !4807)
!4809 = !DILocation(line: 1026, column: 6, scope: !4807)
!4810 = !DILocation(line: 1026, column: 23, scope: !4807)
!4811 = !DILocation(line: 1027, column: 5, scope: !4807)
!4812 = !DILocation(line: 1031, column: 21, scope: !4705)
!4813 = !DILocation(line: 1031, column: 13, scope: !4705)
!4814 = !DILocation(line: 1032, column: 4, scope: !4705)
!4815 = !DILocation(line: 995, column: 33, scope: !4675)
!4816 = distinct !{!4816, !4770, !4817}
!4817 = !DILocation(line: 1033, column: 3, scope: !4672)
!4818 = !DILocation(line: 1040, column: 10, scope: !4631)
!4819 = !DILocation(line: 1042, column: 10, scope: !4631)
!4820 = !DILocation(line: 1052, column: 6, scope: !4631)
!4821 = !DILocation(line: 1055, column: 9, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !543, line: 1052, column: 14)
!4823 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 1052, column: 6)
!4824 = !DILocation(line: 1056, column: 2, scope: !4822)
!4825 = !DILocation(line: 1056, column: 21, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4823, file: !543, line: 1056, column: 13)
!4827 = !DILocation(line: 1066, column: 3, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !543, line: 1065, column: 11)
!4829 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 1065, column: 6)
!4830 = !DILocation(line: 1067, column: 2, scope: !4828)
!4831 = !DILocation(line: 1068, column: 10, scope: !4631)
!4832 = !DILocation(line: 0, scope: !4688)
!4833 = !DILocation(line: 1074, column: 20, scope: !4691)
!4834 = !DILocation(line: 1074, column: 2, scope: !4688)
!4835 = !DILocation(line: 1110, column: 24, scope: !4631)
!4836 = !DILocation(line: 1053, column: 12, scope: !4822)
!4837 = !DILocation(line: 1054, column: 12, scope: !4822)
!4838 = !DILocation(line: 1108, column: 30, scope: !4631)
!4839 = !DILocation(line: 1108, column: 40, scope: !4631)
!4840 = !DILocation(line: 1108, column: 38, scope: !4631)
!4841 = !DILocation(line: 1109, column: 31, scope: !4631)
!4842 = !DILocation(line: 1109, column: 24, scope: !4631)
!4843 = !DILocation(line: 1110, column: 31, scope: !4631)
!4844 = !DILocation(line: 1114, column: 31, scope: !4631)
!4845 = !DILocation(line: 1114, column: 48, scope: !4631)
!4846 = !DILocation(line: 1115, column: 13, scope: !4631)
!4847 = !DILocation(line: 1118, column: 7, scope: !4631)
!4848 = !DILocation(line: 1119, column: 9, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 1119, column: 6)
!4850 = !DILocation(line: 1119, column: 6, scope: !4631)
!4851 = !DILocation(line: 1075, column: 29, scope: !4690)
!4852 = !DILocation(line: 1075, column: 21, scope: !4690)
!4853 = !DILocation(line: 0, scope: !4690)
!4854 = !DILocation(line: 1076, column: 29, scope: !4690)
!4855 = !DILocation(line: 1076, column: 21, scope: !4690)
!4856 = !DILocation(line: 1077, column: 38, scope: !4690)
!4857 = !DILocation(line: 1077, column: 21, scope: !4690)
!4858 = !DILocation(line: 1078, column: 16, scope: !4690)
!4859 = !DILocation(line: 1080, column: 19, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4690, file: !543, line: 1080, column: 7)
!4861 = !DILocation(line: 1080, column: 34, scope: !4860)
!4862 = !DILocation(line: 1080, column: 22, scope: !4860)
!4863 = !DILocation(line: 1080, column: 7, scope: !4690)
!4864 = !DILocation(line: 1084, column: 7, scope: !4690)
!4865 = !DILocation(line: 1085, column: 8, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !543, line: 1084, column: 14)
!4867 = distinct !DILexicalBlock(scope: !4690, file: !543, line: 1084, column: 7)
!4868 = !DILocation(line: 1087, column: 25, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4870, file: !543, line: 1085, column: 49)
!4870 = distinct !DILexicalBlock(scope: !4866, file: !543, line: 1085, column: 8)
!4871 = !DILocation(line: 1088, column: 4, scope: !4869)
!4872 = !DILocation(line: 1088, column: 15, scope: !4870)
!4873 = !DILocation(line: 1090, column: 26, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !543, line: 1088, column: 61)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !543, line: 1088, column: 15)
!4876 = !DILocation(line: 1091, column: 4, scope: !4874)
!4877 = !DILocation(line: 1095, column: 8, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4867, file: !543, line: 1094, column: 10)
!4879 = !DILocation(line: 1097, column: 25, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !543, line: 1095, column: 49)
!4881 = distinct !DILexicalBlock(scope: !4878, file: !543, line: 1095, column: 8)
!4882 = !DILocation(line: 1098, column: 4, scope: !4880)
!4883 = !DILocation(line: 1100, column: 26, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4881, file: !543, line: 1098, column: 11)
!4885 = !DILocation(line: 1100, column: 5, scope: !4884)
!4886 = !DILocation(line: 1100, column: 30, scope: !4884)
!4887 = !DILocation(line: 1101, column: 26, scope: !4884)
!4888 = !DILocation(line: 0, scope: !4867)
!4889 = !DILocation(line: 1074, column: 32, scope: !4691)
!4890 = distinct !{!4890, !4834, !4891}
!4891 = !DILocation(line: 1104, column: 2, scope: !4688)
!4892 = !DILocation(line: 1124, column: 13, scope: !4631)
!4893 = !DILocation(line: 1127, column: 10, scope: !4631)
!4894 = !DILocation(line: 1127, column: 7, scope: !4631)
!4895 = !DILocation(line: 1128, column: 9, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 1128, column: 6)
!4897 = !DILocation(line: 1128, column: 6, scope: !4631)
!4898 = !DILocation(line: 1134, column: 27, scope: !4631)
!4899 = !DILocation(line: 1136, column: 7, scope: !4631)
!4900 = !DILocation(line: 1137, column: 9, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4631, file: !543, line: 1137, column: 6)
!4902 = !DILocation(line: 1137, column: 6, scope: !4631)
!4903 = !DILocation(line: 1131, column: 10, scope: !4631)
!4904 = !DILocation(line: 1140, column: 10, scope: !4631)
!4905 = !DILocation(line: 0, scope: !4698)
!4906 = !DILocation(line: 1143, column: 20, scope: !4701)
!4907 = !DILocation(line: 1143, column: 2, scope: !4698)
!4908 = !DILocation(line: 1144, column: 3, scope: !4700)
!4909 = !DILocation(line: 1144, column: 17, scope: !4700)
!4910 = !DILocation(line: 0, scope: !4700)
!4911 = !DILocation(line: 1144, column: 11, scope: !4700)
!4912 = !DILocation(line: 1145, column: 38, scope: !4700)
!4913 = !DILocation(line: 1145, column: 21, scope: !4700)
!4914 = !DILocation(line: 1146, column: 22, scope: !4700)
!4915 = !DILocation(line: 1146, column: 29, scope: !4700)
!4916 = !DILocation(line: 1148, column: 8, scope: !4700)
!4917 = !DILocation(line: 1149, column: 10, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4700, file: !543, line: 1149, column: 7)
!4919 = !DILocation(line: 1149, column: 7, scope: !4700)
!4920 = !DILocation(line: 1154, column: 8, scope: !4700)
!4921 = !DILocation(line: 1155, column: 10, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4700, file: !543, line: 1155, column: 7)
!4923 = !DILocation(line: 1155, column: 7, scope: !4700)
!4924 = !DILocation(line: 1159, column: 2, scope: !4701)
!4925 = !DILocation(line: 1152, column: 11, scope: !4700)
!4926 = !DILocation(line: 1158, column: 11, scope: !4700)
!4927 = !DILocation(line: 1143, column: 33, scope: !4701)
!4928 = distinct !{!4928, !4907, !4929}
!4929 = !DILocation(line: 1159, column: 2, scope: !4698)
!4930 = !DILocation(line: 1162, column: 8, scope: !4631)
!4931 = !DILocation(line: 1164, column: 2, scope: !4631)
!4932 = !DILocation(line: 1165, column: 1, scope: !4631)
!4933 = distinct !DISubprogram(name: "get_package_len", scope: !543, file: !543, line: 196, type: !4934, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4936)
!4934 = !DISubroutineType(types: !4935)
!4935 = !{!439, !104}
!4936 = !{!4937, !4938, !4939, !4940, !4941, !4942, !4943}
!4937 = !DILocalVariable(name: "packaged", arg: 1, scope: !4933, file: !543, line: 196, type: !104)
!4938 = !DILocalVariable(name: "buf", scope: !4933, file: !543, line: 200, type: !209)
!4939 = !DILocalVariable(name: "start", scope: !4933, file: !543, line: 201, type: !209)
!4940 = !DILocalVariable(name: "args_size", scope: !4933, file: !543, line: 202, type: !32)
!4941 = !DILocalVariable(name: "s_nbr", scope: !4933, file: !543, line: 202, type: !32)
!4942 = !DILocalVariable(name: "ros_nbr", scope: !4933, file: !543, line: 202, type: !32)
!4943 = !DILocalVariable(name: "i", scope: !4944, file: !543, line: 215, type: !108)
!4944 = distinct !DILexicalBlock(scope: !4933, file: !543, line: 215, column: 2)
!4945 = !DILocation(line: 0, scope: !4933)
!4946 = !DILocation(line: 204, column: 14, scope: !4933)
!4947 = !DILocation(line: 204, column: 21, scope: !4933)
!4948 = !DILocation(line: 205, column: 14, scope: !4933)
!4949 = !DILocation(line: 206, column: 14, scope: !4933)
!4950 = !DILocation(line: 209, column: 6, scope: !4933)
!4951 = !DILocation(line: 212, column: 6, scope: !4933)
!4952 = !DILocation(line: 0, scope: !4944)
!4953 = !DILocation(line: 215, column: 20, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4944, file: !543, line: 215, column: 2)
!4955 = !DILocation(line: 215, column: 2, scope: !4944)
!4956 = !DILocation(line: 220, column: 33, scope: !4933)
!4957 = !DILocation(line: 220, column: 2, scope: !4933)
!4958 = !DILocation(line: 216, column: 6, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4954, file: !543, line: 215, column: 34)
!4960 = !DILocation(line: 217, column: 10, scope: !4959)
!4961 = !DILocation(line: 217, column: 36, scope: !4959)
!4962 = !DILocation(line: 217, column: 7, scope: !4959)
!4963 = !DILocation(line: 215, column: 30, scope: !4954)
!4964 = distinct !{!4964, !4955, !4965}
!4965 = !DILocation(line: 218, column: 2, scope: !4944)
!4966 = distinct !DISubprogram(name: "append_string", scope: !543, file: !543, line: 223, type: !4967, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !4969)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!108, !4634, !104, !105, !168}
!4969 = !{!4970, !4971, !4972, !4973}
!4970 = !DILocalVariable(name: "cb", arg: 1, scope: !4966, file: !543, line: 223, type: !4634)
!4971 = !DILocalVariable(name: "ctx", arg: 2, scope: !4966, file: !543, line: 223, type: !104)
!4972 = !DILocalVariable(name: "str", arg: 3, scope: !4966, file: !543, line: 223, type: !105)
!4973 = !DILocalVariable(name: "strl", arg: 4, scope: !4966, file: !543, line: 223, type: !168)
!4974 = !DILocation(line: 0, scope: !4966)
!4975 = !DILocation(line: 225, column: 9, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4966, file: !543, line: 225, column: 6)
!4977 = !DILocation(line: 225, column: 6, scope: !4966)
!4978 = !DILocation(line: 226, column: 14, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4976, file: !543, line: 225, column: 18)
!4980 = !DILocation(line: 226, column: 12, scope: !4979)
!4981 = !DILocation(line: 226, column: 3, scope: !4979)
!4982 = !DILocation(line: 229, column: 14, scope: !4966)
!4983 = !DILocation(line: 229, column: 9, scope: !4966)
!4984 = !DILocation(line: 229, column: 27, scope: !4966)
!4985 = !DILocation(line: 229, column: 39, scope: !4966)
!4986 = !DILocation(line: 230, column: 17, scope: !4966)
!4987 = !DILocation(line: 230, column: 9, scope: !4966)
!4988 = !DILocation(line: 230, column: 2, scope: !4966)
!4989 = !DILocation(line: 231, column: 1, scope: !4966)
!4990 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !555, file: !555, line: 45, type: !557, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !4991)
!4991 = !{!4992}
!4992 = !DILocalVariable(name: "c", arg: 1, scope: !4990, file: !555, line: 45, type: !108)
!4993 = !DILocation(line: 0, scope: !4990)
!4994 = !DILocation(line: 50, column: 2, scope: !4990)
!4995 = distinct !DISubprogram(name: "__printk_hook_install", scope: !555, file: !555, line: 63, type: !4996, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !4998)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{null, !556}
!4998 = !{!4999}
!4999 = !DILocalVariable(name: "fn", arg: 1, scope: !4995, file: !555, line: 63, type: !556)
!5000 = !DILocation(line: 0, scope: !4995)
!5001 = !DILocation(line: 65, column: 12, scope: !4995)
!5002 = !DILocation(line: 66, column: 1, scope: !4995)
!5003 = distinct !DISubprogram(name: "__printk_get_hook", scope: !555, file: !555, line: 76, type: !5004, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !437)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!104}
!5006 = !DILocation(line: 78, column: 9, scope: !5003)
!5007 = !DILocation(line: 78, column: 2, scope: !5003)
!5008 = distinct !DISubprogram(name: "vprintk", scope: !555, file: !555, line: 113, type: !5009, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5017)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{null, !105, !5011}
!5011 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4141, line: 99, baseType: !5012)
!5012 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4141, line: 40, baseType: !5013)
!5013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !555, baseType: !5014)
!5014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5015)
!5015 = !{!5016}
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5014, file: !555, line: 79, baseType: !104, size: 32)
!5017 = !{!5018, !5019, !5020}
!5018 = !DILocalVariable(name: "fmt", arg: 1, scope: !5008, file: !555, line: 113, type: !105)
!5019 = !DILocalVariable(name: "ap", arg: 2, scope: !5008, file: !555, line: 113, type: !5011)
!5020 = !DILocalVariable(name: "ctx", scope: !5021, file: !555, line: 121, type: !5023)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !555, line: 120, column: 27)
!5022 = distinct !DILexicalBlock(scope: !5008, file: !555, line: 120, column: 6)
!5023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !555, line: 81, size: 32, elements: !5024)
!5024 = !{!5025, !5026}
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5023, file: !555, line: 85, baseType: !32, size: 32)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5023, file: !555, line: 86, baseType: !5027, offset: 32)
!5027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !5028)
!5028 = !{!5029}
!5029 = !DISubrange(count: 0)
!5030 = !DILocation(line: 0, scope: !5008)
!5031 = !DILocation(line: 148, column: 3, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5022, file: !555, line: 138, column: 9)
!5033 = !DILocation(line: 155, column: 1, scope: !5008)
!5034 = distinct !DISubprogram(name: "char_out", scope: !555, file: !555, line: 107, type: !5035, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5037)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{!108, !108, !104}
!5037 = !{!5038, !5039}
!5038 = !DILocalVariable(name: "c", arg: 1, scope: !5034, file: !555, line: 107, type: !108)
!5039 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5034, file: !555, line: 107, type: !104)
!5040 = !DILocation(line: 0, scope: !5034)
!5041 = !DILocation(line: 110, column: 9, scope: !5034)
!5042 = !DILocation(line: 110, column: 2, scope: !5034)
!5043 = distinct !DISubprogram(name: "cbvprintf", scope: !4173, file: !4173, line: 739, type: !5044, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5046)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!108, !4502, !104, !105, !5011}
!5046 = !{!5047, !5048, !5049, !5050}
!5047 = !DILocalVariable(name: "out", arg: 1, scope: !5043, file: !4173, line: 739, type: !4502)
!5048 = !DILocalVariable(name: "ctx", arg: 2, scope: !5043, file: !4173, line: 739, type: !104)
!5049 = !DILocalVariable(name: "format", arg: 3, scope: !5043, file: !4173, line: 739, type: !105)
!5050 = !DILocalVariable(name: "ap", arg: 4, scope: !5043, file: !4173, line: 739, type: !5011)
!5051 = !DILocation(line: 0, scope: !5043)
!5052 = !DILocation(line: 741, column: 9, scope: !5043)
!5053 = !DILocation(line: 741, column: 2, scope: !5043)
!5054 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !555, file: !555, line: 157, type: !5055, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5057)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{null, !443, !439}
!5057 = !{!5058, !5059, !5060}
!5058 = !DILocalVariable(name: "c", arg: 1, scope: !5054, file: !555, line: 157, type: !443)
!5059 = !DILocalVariable(name: "n", arg: 2, scope: !5054, file: !555, line: 157, type: !439)
!5060 = !DILocalVariable(name: "i", scope: !5054, file: !555, line: 159, type: !439)
!5061 = !DILocation(line: 0, scope: !5054)
!5062 = !DILocation(line: 164, column: 16, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !555, line: 164, column: 2)
!5064 = distinct !DILexicalBlock(scope: !5054, file: !555, line: 164, column: 2)
!5065 = !DILocation(line: 164, column: 2, scope: !5064)
!5066 = !DILocation(line: 165, column: 3, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5063, file: !555, line: 164, column: 26)
!5068 = !DILocation(line: 165, column: 13, scope: !5067)
!5069 = !DILocation(line: 164, column: 22, scope: !5063)
!5070 = distinct !{!5070, !5065, !5071}
!5071 = !DILocation(line: 166, column: 2, scope: !5064)
!5072 = !DILocation(line: 171, column: 1, scope: !5054)
!5073 = distinct !DISubprogram(name: "printk", scope: !555, file: !555, line: 203, type: !5074, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5076)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{null, !105, null}
!5076 = !{!5077, !5078}
!5077 = !DILocalVariable(name: "fmt", arg: 1, scope: !5073, file: !555, line: 203, type: !105)
!5078 = !DILocalVariable(name: "ap", scope: !5073, file: !555, line: 205, type: !5011)
!5079 = !DILocation(line: 0, scope: !5073)
!5080 = !DILocation(line: 205, column: 2, scope: !5073)
!5081 = !DILocation(line: 205, column: 10, scope: !5073)
!5082 = !DILocation(line: 207, column: 2, scope: !5073)
!5083 = !DILocation(line: 209, column: 2, scope: !5073)
!5084 = !DILocation(line: 211, column: 2, scope: !5073)
!5085 = !DILocation(line: 212, column: 1, scope: !5073)
!5086 = distinct !DISubprogram(name: "snprintk", scope: !555, file: !555, line: 239, type: !5087, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!108, !443, !439, !105, null}
!5089 = !{!5090, !5091, !5092, !5093, !5094}
!5090 = !DILocalVariable(name: "str", arg: 1, scope: !5086, file: !555, line: 239, type: !443)
!5091 = !DILocalVariable(name: "size", arg: 2, scope: !5086, file: !555, line: 239, type: !439)
!5092 = !DILocalVariable(name: "fmt", arg: 3, scope: !5086, file: !555, line: 239, type: !105)
!5093 = !DILocalVariable(name: "ap", scope: !5086, file: !555, line: 241, type: !5011)
!5094 = !DILocalVariable(name: "ret", scope: !5086, file: !555, line: 242, type: !108)
!5095 = !DILocation(line: 0, scope: !5086)
!5096 = !DILocation(line: 241, column: 2, scope: !5086)
!5097 = !DILocation(line: 241, column: 10, scope: !5086)
!5098 = !DILocation(line: 244, column: 2, scope: !5086)
!5099 = !DILocation(line: 245, column: 8, scope: !5086)
!5100 = !DILocation(line: 246, column: 2, scope: !5086)
!5101 = !DILocation(line: 249, column: 1, scope: !5086)
!5102 = !DILocation(line: 248, column: 2, scope: !5086)
!5103 = distinct !DISubprogram(name: "vsnprintk", scope: !555, file: !555, line: 251, type: !5104, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5106)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{!108, !443, !439, !105, !5011}
!5106 = !{!5107, !5108, !5109, !5110, !5111}
!5107 = !DILocalVariable(name: "str", arg: 1, scope: !5103, file: !555, line: 251, type: !443)
!5108 = !DILocalVariable(name: "size", arg: 2, scope: !5103, file: !555, line: 251, type: !439)
!5109 = !DILocalVariable(name: "fmt", arg: 3, scope: !5103, file: !555, line: 251, type: !105)
!5110 = !DILocalVariable(name: "ap", arg: 4, scope: !5103, file: !555, line: 251, type: !5011)
!5111 = !DILocalVariable(name: "ctx", scope: !5103, file: !555, line: 253, type: !5112)
!5112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !555, line: 217, size: 96, elements: !5113)
!5113 = !{!5114, !5115, !5116}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5112, file: !555, line: 218, baseType: !443, size: 32)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5112, file: !555, line: 219, baseType: !108, size: 32, offset: 32)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5112, file: !555, line: 220, baseType: !108, size: 32, offset: 64)
!5117 = !DILocation(line: 0, scope: !5103)
!5118 = !DILocation(line: 253, column: 2, scope: !5103)
!5119 = !DILocation(line: 253, column: 21, scope: !5103)
!5120 = !DILocation(line: 253, column: 27, scope: !5103)
!5121 = !DILocation(line: 255, column: 2, scope: !5103)
!5122 = !DILocation(line: 257, column: 10, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5103, file: !555, line: 257, column: 6)
!5124 = !DILocation(line: 257, column: 22, scope: !5123)
!5125 = !DILocation(line: 257, column: 16, scope: !5123)
!5126 = !DILocation(line: 257, column: 6, scope: !5103)
!5127 = !DILocation(line: 258, column: 3, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5123, file: !555, line: 257, column: 27)
!5129 = !DILocation(line: 258, column: 18, scope: !5128)
!5130 = !DILocation(line: 259, column: 2, scope: !5128)
!5131 = !DILocation(line: 262, column: 1, scope: !5103)
!5132 = !DILocation(line: 261, column: 2, scope: !5103)
!5133 = distinct !DISubprogram(name: "str_out", scope: !555, file: !555, line: 223, type: !5134, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !5137)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{!108, !108, !5136}
!5136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 32)
!5137 = !{!5138, !5139}
!5138 = !DILocalVariable(name: "c", arg: 1, scope: !5133, file: !555, line: 223, type: !108)
!5139 = !DILocalVariable(name: "ctx", arg: 2, scope: !5133, file: !555, line: 223, type: !5136)
!5140 = !DILocation(line: 0, scope: !5133)
!5141 = !DILocation(line: 225, column: 11, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5133, file: !555, line: 225, column: 6)
!5143 = !DILocation(line: 225, column: 15, scope: !5142)
!5144 = !DILocation(line: 0, scope: !5142)
!5145 = !DILocation(line: 225, column: 23, scope: !5142)
!5146 = !DILocation(line: 225, column: 45, scope: !5142)
!5147 = !DILocation(line: 225, column: 37, scope: !5142)
!5148 = !DILocation(line: 225, column: 6, scope: !5133)
!5149 = !DILocation(line: 226, column: 8, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5142, file: !555, line: 225, column: 50)
!5151 = !DILocation(line: 226, column: 13, scope: !5150)
!5152 = !DILocation(line: 227, column: 3, scope: !5150)
!5153 = !DILocation(line: 230, column: 29, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5133, file: !555, line: 230, column: 6)
!5155 = !DILocation(line: 230, column: 17, scope: !5154)
!5156 = !DILocation(line: 230, column: 6, scope: !5133)
!5157 = !DILocation(line: 231, column: 22, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5154, file: !555, line: 230, column: 34)
!5159 = !DILocation(line: 231, column: 3, scope: !5158)
!5160 = !DILocation(line: 231, column: 26, scope: !5158)
!5161 = !DILocation(line: 232, column: 2, scope: !5158)
!5162 = !DILocation(line: 233, column: 28, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5154, file: !555, line: 232, column: 9)
!5164 = !DILocation(line: 233, column: 22, scope: !5163)
!5165 = !DILocation(line: 233, column: 3, scope: !5163)
!5166 = !DILocation(line: 233, column: 26, scope: !5163)
!5167 = !DILocation(line: 237, column: 1, scope: !5133)
!5168 = distinct !DISubprogram(name: "z_thread_entry", scope: !5169, file: !5169, line: 30, type: !5170, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !5177)
!5169 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5170 = !DISubroutineType(types: !5171)
!5171 = !{null, !5172, !104, !104, !104}
!5172 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5173, line: 46, baseType: !5174)
!5173 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 32)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{null, !104, !104, !104}
!5177 = !{!5178, !5179, !5180, !5181}
!5178 = !DILocalVariable(name: "entry", arg: 1, scope: !5168, file: !5169, line: 30, type: !5172)
!5179 = !DILocalVariable(name: "p1", arg: 2, scope: !5168, file: !5169, line: 31, type: !104)
!5180 = !DILocalVariable(name: "p2", arg: 3, scope: !5168, file: !5169, line: 31, type: !104)
!5181 = !DILocalVariable(name: "p3", arg: 4, scope: !5168, file: !5169, line: 31, type: !104)
!5182 = !DILocation(line: 0, scope: !5168)
!5183 = !DILocation(line: 36, column: 2, scope: !5168)
!5184 = !DILocation(line: 38, column: 17, scope: !5168)
!5185 = !DILocation(line: 38, column: 2, scope: !5168)
!5186 = !DILocation(line: 45, column: 2, scope: !5168)
!5187 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !5188, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !437)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{!5190}
!5190 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !5191)
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5192, size: 32)
!5192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !5193)
!5193 = !{!5194, !5252, !5264, !5265, !5266, !5267, !5273, !5286}
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5192, file: !645, line: 247, baseType: !5195, size: 384)
!5195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !5196)
!5196 = !{!5197, !5221, !5228, !5229, !5230, !5239, !5240, !5241}
!5197 = !DIDerivedType(tag: DW_TAG_member, scope: !5195, file: !645, line: 60, baseType: !5198, size: 64)
!5198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5195, file: !645, line: 60, size: 64, elements: !5199)
!5199 = !{!5200, !5215}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5198, file: !645, line: 61, baseType: !5201, size: 64)
!5201 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !5202)
!5202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !5203)
!5203 = !{!5204, !5210}
!5204 = !DIDerivedType(tag: DW_TAG_member, scope: !5202, file: !367, line: 38, baseType: !5205, size: 32)
!5205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5202, file: !367, line: 38, size: 32, elements: !5206)
!5206 = !{!5207, !5209}
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5205, file: !367, line: 39, baseType: !5208, size: 32)
!5208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5202, size: 32)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5205, file: !367, line: 40, baseType: !5208, size: 32)
!5210 = !DIDerivedType(tag: DW_TAG_member, scope: !5202, file: !367, line: 42, baseType: !5211, size: 32, offset: 32)
!5211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5202, file: !367, line: 42, size: 32, elements: !5212)
!5212 = !{!5213, !5214}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5211, file: !367, line: 43, baseType: !5208, size: 32)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5211, file: !367, line: 44, baseType: !5208, size: 32)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5198, file: !645, line: 62, baseType: !5216, size: 64)
!5216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !5217)
!5217 = !{!5218}
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5216, file: !670, line: 50, baseType: !5219, size: 64)
!5219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5220, size: 64, elements: !675)
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 32)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5195, file: !645, line: 68, baseType: !5222, size: 32, offset: 64)
!5222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 32)
!5223 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !5224)
!5224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !5225)
!5225 = !{!5226}
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5224, file: !363, line: 232, baseType: !5227, size: 64)
!5227 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !5202)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5195, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5195, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!5230 = !DIDerivedType(tag: DW_TAG_member, scope: !5195, file: !645, line: 90, baseType: !5231, size: 16, offset: 112)
!5231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5195, file: !645, line: 90, size: 16, elements: !5232)
!5232 = !{!5233, !5238}
!5233 = !DIDerivedType(tag: DW_TAG_member, scope: !5231, file: !645, line: 91, baseType: !5234, size: 16)
!5234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5231, file: !645, line: 91, size: 16, elements: !5235)
!5235 = !{!5236, !5237}
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5234, file: !645, line: 96, baseType: !693, size: 8)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5234, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5231, file: !645, line: 100, baseType: !168, size: 16)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5195, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5195, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5195, file: !645, line: 131, baseType: !5242, size: 192, offset: 192)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !5243)
!5243 = !{!5244, !5245, !5251}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5242, file: !363, line: 245, baseType: !5201, size: 64)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5242, file: !363, line: 246, baseType: !5246, size: 32, offset: 64)
!5246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !5247)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 32)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{null, !5250}
!5250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5242, size: 32)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5242, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5192, file: !645, line: 250, baseType: !5253, size: 288, offset: 384)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !5254)
!5254 = !{!5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5253, file: !712, line: 26, baseType: !113, size: 32)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5253, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5253, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5253, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5253, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5253, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5253, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5253, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5253, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5192, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5192, file: !645, line: 256, baseType: !5223, size: 64, offset: 704)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5192, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5192, file: !645, line: 300, baseType: !5268, size: 96, offset: 800)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !5269)
!5269 = !{!5270, !5271, !5272}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5268, file: !645, line: 153, baseType: !22, size: 32)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5268, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5268, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5192, file: !645, line: 325, baseType: !5274, size: 32, offset: 896)
!5274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5275, size: 32)
!5275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !5276)
!5276 = !{!5277, !5283, !5284}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5275, file: !359, line: 5074, baseType: !5278, size: 96)
!5278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !5279)
!5279 = !{!5280, !5281, !5282}
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5278, file: !738, line: 57, baseType: !741, size: 32)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5278, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5278, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5275, file: !359, line: 5075, baseType: !5223, size: 64, offset: 96)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5275, file: !359, line: 5076, baseType: !5285, offset: 160)
!5285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5192, file: !645, line: 343, baseType: !5287, size: 64, offset: 928)
!5287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !5288)
!5288 = !{!5289, !5290}
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5287, file: !712, line: 63, baseType: !113, size: 32)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5287, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!5291 = !DILocation(line: 535, column: 9, scope: !5187)
!5292 = !DILocation(line: 535, column: 2, scope: !5187)
!5293 = distinct !DISubprogram(name: "k_thread_abort", scope: !3802, file: !3802, line: 188, type: !5294, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !5296)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{null, !5190}
!5296 = !{!5297}
!5297 = !DILocalVariable(name: "thread", arg: 1, scope: !5293, file: !3802, line: 188, type: !5190)
!5298 = !DILocation(line: 0, scope: !5293)
!5299 = !DILocation(line: 197, column: 2, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5293, file: !3802, line: 197, column: 2)
!5301 = !{i64 2154755411}
!5302 = !DILocation(line: 198, column: 2, scope: !5293)
!5303 = !DILocation(line: 199, column: 1, scope: !5293)
!5304 = distinct !DISubprogram(name: "z_current_get", scope: !3802, file: !3802, line: 173, type: !5188, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !437)
!5305 = !DILocation(line: 180, column: 2, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5304, file: !3802, line: 180, column: 2)
!5307 = !{i64 2154755343}
!5308 = !DILocation(line: 181, column: 9, scope: !5304)
!5309 = !DILocation(line: 181, column: 2, scope: !5304)
!5310 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2834, file: !2834, line: 1338, type: !5311, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5319)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!108, !4502, !104, !105, !5313, !113}
!5313 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4141, line: 99, baseType: !5314)
!5314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4141, line: 40, baseType: !5315)
!5315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2834, baseType: !5316)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5317)
!5317 = !{!5318}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5316, file: !2834, baseType: !104, size: 32)
!5319 = !{!5320, !5321, !5322, !5323, !5324, !5325, !5329, !5330, !5331, !5333, !5338, !5381, !5384, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5396, !5397, !5398, !5402, !5405, !5407, !5410, !5411, !5412, !5417, !5423, !5426, !5430, !5436, !5440, !5443, !5445, !5448}
!5320 = !DILocalVariable(name: "out", arg: 1, scope: !5310, file: !2834, line: 1338, type: !4502)
!5321 = !DILocalVariable(name: "ctx", arg: 2, scope: !5310, file: !2834, line: 1338, type: !104)
!5322 = !DILocalVariable(name: "fp", arg: 3, scope: !5310, file: !2834, line: 1338, type: !105)
!5323 = !DILocalVariable(name: "ap", arg: 4, scope: !5310, file: !2834, line: 1339, type: !5313)
!5324 = !DILocalVariable(name: "flags", arg: 5, scope: !5310, file: !2834, line: 1339, type: !113)
!5325 = !DILocalVariable(name: "buf", scope: !5310, file: !2834, line: 1341, type: !5326)
!5326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !5327)
!5327 = !{!5328}
!5328 = !DISubrange(count: 22)
!5329 = !DILocalVariable(name: "count", scope: !5310, file: !2834, line: 1342, type: !439)
!5330 = !DILocalVariable(name: "sint", scope: !5310, file: !2834, line: 1343, type: !2853)
!5331 = !DILocalVariable(name: "tagged_ap", scope: !5310, file: !2834, line: 1345, type: !5332)
!5332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!5333 = !DILocalVariable(name: "rc", scope: !5334, file: !2834, line: 1377, type: !108)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !2834, line: 1377, column: 4)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !2834, line: 1376, column: 19)
!5336 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1376, column: 7)
!5337 = distinct !DILexicalBlock(scope: !5310, file: !2834, line: 1375, column: 19)
!5338 = !DILocalVariable(name: "state", scope: !5337, file: !2834, line: 1395, type: !5339)
!5339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5310, file: !2834, line: 1392, size: 192, elements: !5340)
!5340 = !{!5341, !5349}
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5339, file: !2834, line: 1393, baseType: !5342, size: 64)
!5342 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2834, line: 166, size: 64, elements: !5343)
!5343 = !{!5344, !5345, !5346, !5347, !5348}
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5342, file: !2834, line: 168, baseType: !2853, size: 64)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5342, file: !2834, line: 171, baseType: !2856, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5342, file: !2834, line: 174, baseType: !536, size: 64)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5342, file: !2834, line: 177, baseType: !534, size: 64)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5342, file: !2834, line: 180, baseType: !104, size: 32)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5339, file: !2834, line: 1394, baseType: !5350, size: 96, offset: 64)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2834, line: 189, size: 96, elements: !5351)
!5351 = !{!5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5376}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5350, file: !2834, line: 191, baseType: !422, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5350, file: !2834, line: 194, baseType: !422, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5350, file: !2834, line: 197, baseType: !422, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5350, file: !2834, line: 200, baseType: !422, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5350, file: !2834, line: 203, baseType: !422, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5350, file: !2834, line: 206, baseType: !422, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5350, file: !2834, line: 209, baseType: !422, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5350, file: !2834, line: 212, baseType: !422, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5350, file: !2834, line: 219, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5350, file: !2834, line: 222, baseType: !422, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5350, file: !2834, line: 229, baseType: !422, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5350, file: !2834, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5350, file: !2834, line: 238, baseType: !422, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5350, file: !2834, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5350, file: !2834, line: 244, baseType: !422, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5350, file: !2834, line: 247, baseType: !422, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5350, file: !2834, line: 252, baseType: !422, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5350, file: !2834, line: 257, baseType: !422, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5350, file: !2834, line: 260, baseType: !165, size: 8, offset: 24)
!5371 = !DIDerivedType(tag: DW_TAG_member, scope: !5350, file: !2834, line: 262, baseType: !5372, size: 32, offset: 32)
!5372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5350, file: !2834, line: 262, size: 32, elements: !5373)
!5373 = !{!5374, !5375}
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5372, file: !2834, line: 267, baseType: !108, size: 32)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5372, file: !2834, line: 289, baseType: !108, size: 32)
!5376 = !DIDerivedType(tag: DW_TAG_member, scope: !5350, file: !2834, line: 292, baseType: !5377, size: 32, offset: 64)
!5377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5350, file: !2834, line: 292, size: 32, elements: !5378)
!5378 = !{!5379, !5380}
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5377, file: !2834, line: 297, baseType: !108, size: 32)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5377, file: !2834, line: 306, baseType: !108, size: 32)
!5381 = !DILocalVariable(name: "conv", scope: !5337, file: !2834, line: 1400, type: !5382)
!5382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5383)
!5383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 32)
!5384 = !DILocalVariable(name: "value", scope: !5337, file: !2834, line: 1401, type: !5385)
!5385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5386)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5342, size: 32)
!5387 = !DILocalVariable(name: "sp", scope: !5337, file: !2834, line: 1402, type: !105)
!5388 = !DILocalVariable(name: "width", scope: !5337, file: !2834, line: 1403, type: !108)
!5389 = !DILocalVariable(name: "precision", scope: !5337, file: !2834, line: 1404, type: !108)
!5390 = !DILocalVariable(name: "bps", scope: !5337, file: !2834, line: 1405, type: !105)
!5391 = !DILocalVariable(name: "bpe", scope: !5337, file: !2834, line: 1406, type: !105)
!5392 = !DILocalVariable(name: "sign", scope: !5337, file: !2834, line: 1407, type: !107)
!5393 = !DILocalVariable(name: "arg", scope: !5394, file: !2834, line: 1432, type: !108)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !2834, line: 1431, column: 24)
!5395 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1431, column: 7)
!5396 = !DILocalVariable(name: "specifier_cat", scope: !5337, file: !2834, line: 1468, type: !2833)
!5397 = !DILocalVariable(name: "length_mod", scope: !5337, file: !2834, line: 1470, type: !2841)
!5398 = !DILocalVariable(name: "rc", scope: !5399, file: !2834, line: 1575, type: !108)
!5399 = distinct !DILexicalBlock(scope: !5400, file: !2834, line: 1575, column: 4)
!5400 = distinct !DILexicalBlock(scope: !5401, file: !2834, line: 1574, column: 43)
!5401 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1574, column: 7)
!5402 = !DILocalVariable(name: "rc", scope: !5403, file: !2834, line: 1584, type: !108)
!5403 = distinct !DILexicalBlock(scope: !5404, file: !2834, line: 1584, column: 4)
!5404 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1582, column: 28)
!5405 = !DILocalVariable(name: "len", scope: !5406, file: !2834, line: 1589, type: !439)
!5406 = distinct !DILexicalBlock(scope: !5404, file: !2834, line: 1586, column: 13)
!5407 = !DILocalVariable(name: "len", scope: !5408, file: !2834, line: 1641, type: !439)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !2834, line: 1640, column: 24)
!5409 = distinct !DILexicalBlock(scope: !5404, file: !2834, line: 1640, column: 8)
!5410 = !DILocalVariable(name: "nj_len", scope: !5337, file: !2834, line: 1722, type: !439)
!5411 = !DILocalVariable(name: "pad_len", scope: !5337, file: !2834, line: 1723, type: !108)
!5412 = !DILocalVariable(name: "pad", scope: !5413, file: !2834, line: 1751, type: !107)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !2834, line: 1750, column: 26)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !2834, line: 1750, column: 8)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !2834, line: 1747, column: 18)
!5416 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1747, column: 7)
!5417 = !DILocalVariable(name: "rc", scope: !5418, file: !2834, line: 1758, type: !108)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !2834, line: 1758, column: 7)
!5419 = distinct !DILexicalBlock(scope: !5420, file: !2834, line: 1757, column: 21)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !2834, line: 1757, column: 10)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !2834, line: 1756, column: 26)
!5422 = distinct !DILexicalBlock(scope: !5413, file: !2834, line: 1756, column: 9)
!5423 = !DILocalVariable(name: "rc", scope: !5424, file: !2834, line: 1765, type: !108)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !2834, line: 1765, column: 6)
!5425 = distinct !DILexicalBlock(scope: !5413, file: !2834, line: 1764, column: 25)
!5426 = !DILocalVariable(name: "rc", scope: !5427, file: !2834, line: 1774, type: !108)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !2834, line: 1774, column: 4)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !2834, line: 1773, column: 18)
!5429 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1773, column: 7)
!5430 = !DILocalVariable(name: "rc", scope: !5431, file: !2834, line: 1819, type: !108)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !2834, line: 1819, column: 5)
!5432 = distinct !DILexicalBlock(scope: !5433, file: !2834, line: 1818, column: 44)
!5433 = distinct !DILexicalBlock(scope: !5434, file: !2834, line: 1818, column: 8)
!5434 = distinct !DILexicalBlock(scope: !5435, file: !2834, line: 1817, column: 10)
!5435 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1777, column: 7)
!5436 = !DILocalVariable(name: "rc", scope: !5437, file: !2834, line: 1823, type: !108)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !2834, line: 1823, column: 5)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !2834, line: 1822, column: 26)
!5439 = distinct !DILexicalBlock(scope: !5434, file: !2834, line: 1822, column: 8)
!5440 = !DILocalVariable(name: "rc", scope: !5441, file: !2834, line: 1828, type: !108)
!5441 = distinct !DILexicalBlock(scope: !5442, file: !2834, line: 1828, column: 5)
!5442 = distinct !DILexicalBlock(scope: !5434, file: !2834, line: 1827, column: 26)
!5443 = !DILocalVariable(name: "rc", scope: !5444, file: !2834, line: 1831, type: !108)
!5444 = distinct !DILexicalBlock(scope: !5434, file: !2834, line: 1831, column: 4)
!5445 = !DILocalVariable(name: "rc", scope: !5446, file: !2834, line: 1836, type: !108)
!5446 = distinct !DILexicalBlock(scope: !5447, file: !2834, line: 1836, column: 4)
!5447 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1835, column: 21)
!5448 = !DILabel(scope: !5404, name: "prec_int_pad0", file: !2834, line: 1634)
!5449 = !DILocation(line: 0, scope: !5310)
!5450 = !DILocation(line: 1341, column: 2, scope: !5310)
!5451 = !DILocation(line: 1341, column: 7, scope: !5310)
!5452 = !DILocation(line: 1375, column: 2, scope: !5310)
!5453 = !DILocation(line: 1342, column: 9, scope: !5310)
!5454 = !DILocation(line: 1375, column: 9, scope: !5310)
!5455 = !DILocation(line: 1377, column: 4, scope: !5334)
!5456 = !DILocation(line: 0, scope: !5334)
!5457 = !DILocation(line: 1377, column: 4, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5334, file: !2834, line: 1377, column: 4)
!5459 = distinct !{!5459, !5452, !5460}
!5460 = !DILocation(line: 1839, column: 2, scope: !5310)
!5461 = !DILocation(line: 1392, column: 3, scope: !5337)
!5462 = !DILocation(line: 1395, column: 5, scope: !5337)
!5463 = !DILocation(line: 0, scope: !5337)
!5464 = !DILocation(line: 1409, column: 8, scope: !5337)
!5465 = !DILocation(line: 1414, column: 13, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1414, column: 7)
!5467 = !DILocation(line: 1414, column: 7, scope: !5337)
!5468 = !DILocation(line: 1415, column: 12, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5466, file: !2834, line: 1414, column: 25)
!5470 = !DILocation(line: 1417, column: 14, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5469, file: !2834, line: 1417, column: 8)
!5472 = !DILocation(line: 1417, column: 8, scope: !5469)
!5473 = !DILocation(line: 1418, column: 21, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5471, file: !2834, line: 1417, column: 19)
!5475 = !DILocation(line: 1419, column: 13, scope: !5474)
!5476 = !DILocation(line: 1420, column: 4, scope: !5474)
!5477 = !DILocation(line: 1421, column: 20, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5466, file: !2834, line: 1421, column: 14)
!5479 = !DILocation(line: 1421, column: 14, scope: !5466)
!5480 = !DILocation(line: 1431, column: 13, scope: !5395)
!5481 = !DILocation(line: 1431, column: 7, scope: !5337)
!5482 = !DILocation(line: 1432, column: 14, scope: !5394)
!5483 = !DILocation(line: 0, scope: !5394)
!5484 = !DILocation(line: 1434, column: 12, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5394, file: !2834, line: 1434, column: 8)
!5486 = !DILocation(line: 1434, column: 8, scope: !5394)
!5487 = !DILocation(line: 1435, column: 24, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !2834, line: 1434, column: 17)
!5489 = !DILocation(line: 1436, column: 4, scope: !5488)
!5490 = !DILocation(line: 1439, column: 20, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5395, file: !2834, line: 1439, column: 14)
!5492 = !DILocation(line: 1439, column: 14, scope: !5395)
!5493 = !DILocation(line: 1469, column: 37, scope: !5337)
!5494 = !DILocation(line: 1448, column: 20, scope: !5337)
!5495 = !DILocation(line: 1449, column: 22, scope: !5337)
!5496 = !DILocation(line: 1471, column: 34, scope: !5337)
!5497 = !DILocation(line: 1478, column: 7, scope: !5337)
!5498 = !DILocation(line: 1479, column: 4, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !2834, line: 1478, column: 40)
!5500 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1478, column: 7)
!5501 = !DILocation(line: 1484, column: 19, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5499, file: !2834, line: 1479, column: 24)
!5503 = !DILocation(line: 1484, column: 17, scope: !5502)
!5504 = !DILocation(line: 1485, column: 5, scope: !5502)
!5505 = !DILocation(line: 1492, column: 20, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !2834, line: 1491, column: 12)
!5507 = distinct !DILexicalBlock(scope: !5502, file: !2834, line: 1487, column: 9)
!5508 = !DILocation(line: 1492, column: 18, scope: !5506)
!5509 = !DILocation(line: 1494, column: 5, scope: !5502)
!5510 = !DILocation(line: 1497, column: 23, scope: !5502)
!5511 = !DILocation(line: 1496, column: 17, scope: !5502)
!5512 = !DILocation(line: 1498, column: 5, scope: !5502)
!5513 = !DILocation(line: 1501, column: 23, scope: !5502)
!5514 = !DILocation(line: 1500, column: 17, scope: !5502)
!5515 = !DILocation(line: 1502, column: 5, scope: !5502)
!5516 = !DILocation(line: 1513, column: 23, scope: !5502)
!5517 = !DILocation(line: 1513, column: 6, scope: !5502)
!5518 = !DILocation(line: 1512, column: 17, scope: !5502)
!5519 = !DILocation(line: 1514, column: 5, scope: !5502)
!5520 = !DILocation(line: 0, scope: !5502)
!5521 = !DILocation(line: 1516, column: 8, scope: !5499)
!5522 = !DILocation(line: 1517, column: 19, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5524, file: !2834, line: 1516, column: 33)
!5524 = distinct !DILexicalBlock(scope: !5499, file: !2834, line: 1516, column: 8)
!5525 = !DILocation(line: 1517, column: 17, scope: !5523)
!5526 = !DILocation(line: 1518, column: 4, scope: !5523)
!5527 = !DILocation(line: 1519, column: 19, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5529, file: !2834, line: 1518, column: 39)
!5529 = distinct !DILexicalBlock(scope: !5524, file: !2834, line: 1518, column: 15)
!5530 = !DILocation(line: 1519, column: 17, scope: !5528)
!5531 = !DILocation(line: 1520, column: 4, scope: !5528)
!5532 = !DILocation(line: 1522, column: 4, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5534, file: !2834, line: 1521, column: 47)
!5534 = distinct !DILexicalBlock(scope: !5500, file: !2834, line: 1521, column: 14)
!5535 = !DILocation(line: 1527, column: 19, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5533, file: !2834, line: 1522, column: 24)
!5537 = !DILocation(line: 1527, column: 17, scope: !5536)
!5538 = !DILocation(line: 1528, column: 5, scope: !5536)
!5539 = !DILocation(line: 0, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5536, file: !2834, line: 1530, column: 9)
!5541 = !DILocation(line: 1540, column: 23, scope: !5536)
!5542 = !DILocation(line: 1539, column: 17, scope: !5536)
!5543 = !DILocation(line: 1542, column: 5, scope: !5536)
!5544 = !DILocation(line: 1545, column: 23, scope: !5536)
!5545 = !DILocation(line: 1544, column: 17, scope: !5536)
!5546 = !DILocation(line: 1547, column: 5, scope: !5536)
!5547 = !DILocation(line: 1551, column: 23, scope: !5536)
!5548 = !DILocation(line: 1551, column: 6, scope: !5536)
!5549 = !DILocation(line: 1550, column: 17, scope: !5536)
!5550 = !DILocation(line: 1552, column: 5, scope: !5536)
!5551 = !DILocation(line: 0, scope: !5536)
!5552 = !DILocation(line: 1554, column: 8, scope: !5533)
!5553 = !DILocation(line: 1555, column: 19, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !2834, line: 1554, column: 33)
!5555 = distinct !DILexicalBlock(scope: !5533, file: !2834, line: 1554, column: 8)
!5556 = !DILocation(line: 1555, column: 17, scope: !5554)
!5557 = !DILocation(line: 1556, column: 4, scope: !5554)
!5558 = !DILocation(line: 1557, column: 19, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !2834, line: 1556, column: 39)
!5560 = distinct !DILexicalBlock(scope: !5555, file: !2834, line: 1556, column: 15)
!5561 = !DILocation(line: 1557, column: 17, scope: !5559)
!5562 = !DILocation(line: 1558, column: 4, scope: !5559)
!5563 = !DILocation(line: 0, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !2834, line: 1560, column: 8)
!5565 = distinct !DILexicalBlock(scope: !5566, file: !2834, line: 1559, column: 45)
!5566 = distinct !DILexicalBlock(scope: !5534, file: !2834, line: 1559, column: 14)
!5567 = !DILocation(line: 1566, column: 17, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !2834, line: 1565, column: 46)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !2834, line: 1565, column: 14)
!5570 = !DILocation(line: 1566, column: 15, scope: !5568)
!5571 = !DILocation(line: 1567, column: 3, scope: !5568)
!5572 = !DILocation(line: 1574, column: 21, scope: !5401)
!5573 = !DILocation(line: 1575, column: 4, scope: !5399)
!5574 = !DILocation(line: 0, scope: !5399)
!5575 = !DILocation(line: 1575, column: 4, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5399, file: !2834, line: 1575, column: 4)
!5577 = !DILocation(line: 1582, column: 17, scope: !5337)
!5578 = !DILocation(line: 1582, column: 3, scope: !5337)
!5579 = !DILocation(line: 1584, column: 4, scope: !5403)
!5580 = !DILocation(line: 0, scope: !5403)
!5581 = !DILocation(line: 1584, column: 4, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5403, file: !2834, line: 1584, column: 4)
!5583 = !DILocation(line: 1587, column: 31, scope: !5406)
!5584 = !DILocation(line: 1591, column: 18, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5406, file: !2834, line: 1591, column: 8)
!5586 = !DILocation(line: 1591, column: 8, scope: !5406)
!5587 = !DILocation(line: 1592, column: 11, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5585, file: !2834, line: 1591, column: 24)
!5589 = !DILocation(line: 0, scope: !5406)
!5590 = !DILocation(line: 1593, column: 4, scope: !5588)
!5591 = !DILocation(line: 1594, column: 11, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5585, file: !2834, line: 1593, column: 11)
!5593 = !DILocation(line: 1604, column: 51, scope: !5404)
!5594 = !DILocation(line: 1604, column: 13, scope: !5404)
!5595 = !DILocation(line: 1604, column: 11, scope: !5404)
!5596 = !DILocation(line: 1606, column: 4, scope: !5404)
!5597 = !DILocation(line: 1609, column: 14, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5404, file: !2834, line: 1609, column: 8)
!5599 = !DILocation(line: 1609, column: 8, scope: !5404)
!5600 = !DILocation(line: 1619, column: 18, scope: !5404)
!5601 = !DILocation(line: 1620, column: 13, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5404, file: !2834, line: 1620, column: 8)
!5603 = !DILocation(line: 1620, column: 8, scope: !5404)
!5604 = !DILocation(line: 1622, column: 36, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5602, file: !2834, line: 1620, column: 18)
!5606 = !DILocation(line: 1622, column: 17, scope: !5605)
!5607 = !DILocation(line: 1623, column: 4, scope: !5605)
!5608 = !DILocation(line: 1632, column: 29, scope: !5404)
!5609 = !DILocation(line: 1632, column: 10, scope: !5404)
!5610 = !DILocation(line: 1632, column: 4, scope: !5404)
!5611 = !DILocation(line: 1407, column: 8, scope: !5337)
!5612 = !DILocation(line: 0, scope: !5404)
!5613 = !DILocation(line: 1634, column: 3, scope: !5404)
!5614 = !DILocation(line: 1640, column: 18, scope: !5409)
!5615 = !DILocation(line: 1640, column: 8, scope: !5404)
!5616 = !DILocation(line: 1729, column: 13, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1729, column: 7)
!5618 = !DILocation(line: 1641, column: 22, scope: !5408)
!5619 = !DILocation(line: 0, scope: !5408)
!5620 = !DILocation(line: 1646, column: 21, scope: !5408)
!5621 = !DILocation(line: 1649, column: 13, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5408, file: !2834, line: 1649, column: 9)
!5623 = !DILocation(line: 1649, column: 9, scope: !5408)
!5624 = !DILocation(line: 1650, column: 35, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5622, file: !2834, line: 1649, column: 34)
!5626 = !DILocation(line: 1650, column: 23, scope: !5625)
!5627 = !DILocation(line: 1651, column: 5, scope: !5625)
!5628 = !DILocation(line: 1660, column: 15, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5404, file: !2834, line: 1660, column: 8)
!5630 = !DILocation(line: 1660, column: 19, scope: !5629)
!5631 = !DILocation(line: 1660, column: 8, scope: !5404)
!5632 = !DILocation(line: 1661, column: 23, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5629, file: !2834, line: 1660, column: 28)
!5634 = !DILocation(line: 1661, column: 11, scope: !5633)
!5635 = !DILocation(line: 1665, column: 22, scope: !5633)
!5636 = !DILocation(line: 1666, column: 21, scope: !5633)
!5637 = !DILocation(line: 1668, column: 5, scope: !5633)
!5638 = !DILocation(line: 1677, column: 30, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !2834, line: 1676, column: 49)
!5640 = distinct !DILexicalBlock(scope: !5404, file: !2834, line: 1676, column: 8)
!5641 = !DILocation(line: 1677, column: 5, scope: !5639)
!5642 = !DILocation(line: 1680, column: 4, scope: !5404)
!5643 = !DILocation(line: 0, scope: !5585)
!5644 = !DILocation(line: 1597, column: 14, scope: !5406)
!5645 = !DILocation(line: 1699, column: 11, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1699, column: 7)
!5647 = !DILocation(line: 1699, column: 7, scope: !5337)
!5648 = !DILocation(line: 1725, column: 7, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1725, column: 7)
!5650 = !DILocation(line: 1725, column: 12, scope: !5649)
!5651 = !DILocation(line: 1747, column: 13, scope: !5416)
!5652 = !DILocation(line: 1747, column: 7, scope: !5337)
!5653 = !DILocation(line: 1722, column: 24, scope: !5337)
!5654 = !DILocation(line: 1725, column: 7, scope: !5337)
!5655 = !DILocation(line: 1729, column: 7, scope: !5337)
!5656 = !DILocation(line: 1736, column: 13, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5337, file: !2834, line: 1736, column: 7)
!5658 = !DILocation(line: 1735, column: 19, scope: !5337)
!5659 = !DILocation(line: 1736, column: 7, scope: !5337)
!5660 = !DILocation(line: 1748, column: 10, scope: !5415)
!5661 = !DILocation(line: 1750, column: 15, scope: !5414)
!5662 = !DILocation(line: 1750, column: 8, scope: !5415)
!5663 = !DILocation(line: 0, scope: !5413)
!5664 = !DILocation(line: 1756, column: 15, scope: !5422)
!5665 = !DILocation(line: 1756, column: 9, scope: !5413)
!5666 = !DILocation(line: 1758, column: 7, scope: !5418)
!5667 = !DILocation(line: 0, scope: !5418)
!5668 = !DILocation(line: 1758, column: 7, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5418, file: !2834, line: 1758, column: 7)
!5670 = !DILocation(line: 1764, column: 5, scope: !5413)
!5671 = !DILocation(line: 0, scope: !5415)
!5672 = !DILocation(line: 1764, column: 20, scope: !5413)
!5673 = !DILocation(line: 1764, column: 17, scope: !5413)
!5674 = !DILocation(line: 1765, column: 6, scope: !5424)
!5675 = !DILocation(line: 0, scope: !5424)
!5676 = !DILocation(line: 1765, column: 6, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5424, file: !2834, line: 1765, column: 6)
!5678 = distinct !{!5678, !5670, !5679}
!5679 = !DILocation(line: 1766, column: 5, scope: !5413)
!5680 = !DILocation(line: 1773, column: 12, scope: !5429)
!5681 = !DILocation(line: 1773, column: 7, scope: !5337)
!5682 = !DILocation(line: 1773, column: 7, scope: !5429)
!5683 = !DILocation(line: 1774, column: 4, scope: !5427)
!5684 = !DILocation(line: 0, scope: !5427)
!5685 = !DILocation(line: 1774, column: 4, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5427, file: !2834, line: 1774, column: 4)
!5687 = !DILocation(line: 1818, column: 8, scope: !5433)
!5688 = !DILocation(line: 1818, column: 27, scope: !5433)
!5689 = !DILocation(line: 1818, column: 25, scope: !5433)
!5690 = !DILocation(line: 1818, column: 8, scope: !5434)
!5691 = !DILocation(line: 1819, column: 5, scope: !5431)
!5692 = !DILocation(line: 0, scope: !5431)
!5693 = !DILocation(line: 1819, column: 5, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5431, file: !2834, line: 1819, column: 5)
!5695 = !DILocation(line: 1822, column: 14, scope: !5439)
!5696 = !DILocation(line: 1822, column: 8, scope: !5434)
!5697 = !DILocation(line: 1823, column: 5, scope: !5437)
!5698 = !DILocation(line: 0, scope: !5437)
!5699 = !DILocation(line: 1823, column: 5, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5437, file: !2834, line: 1823, column: 5)
!5701 = !DILocation(line: 1826, column: 20, scope: !5434)
!5702 = !DILocation(line: 1827, column: 4, scope: !5434)
!5703 = !DILocation(line: 0, scope: !5434)
!5704 = !DILocation(line: 1827, column: 21, scope: !5434)
!5705 = !DILocation(line: 1827, column: 18, scope: !5434)
!5706 = !DILocation(line: 1828, column: 5, scope: !5441)
!5707 = !DILocation(line: 0, scope: !5441)
!5708 = !DILocation(line: 1828, column: 5, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5441, file: !2834, line: 1828, column: 5)
!5710 = distinct !{!5710, !5702, !5711}
!5711 = !DILocation(line: 1829, column: 4, scope: !5434)
!5712 = !DILocation(line: 1831, column: 4, scope: !5444)
!5713 = !DILocation(line: 0, scope: !5444)
!5714 = !DILocation(line: 1831, column: 4, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5444, file: !2834, line: 1831, column: 4)
!5716 = !DILocation(line: 1835, column: 16, scope: !5337)
!5717 = !DILocation(line: 1835, column: 3, scope: !5337)
!5718 = !DILocation(line: 1836, column: 4, scope: !5446)
!5719 = !DILocation(line: 0, scope: !5446)
!5720 = !DILocation(line: 1836, column: 4, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5446, file: !2834, line: 1836, column: 4)
!5722 = !DILocation(line: 1837, column: 4, scope: !5447)
!5723 = distinct !{!5723, !5717, !5724}
!5724 = !DILocation(line: 1838, column: 3, scope: !5337)
!5725 = !DILocation(line: 1844, column: 1, scope: !5310)
!5726 = distinct !DISubprogram(name: "extract_conversion", scope: !2834, file: !2834, line: 642, type: !5727, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5729)
!5727 = !DISubroutineType(types: !5728)
!5728 = !{!105, !5383, !105}
!5729 = !{!5730, !5731}
!5730 = !DILocalVariable(name: "conv", arg: 1, scope: !5726, file: !2834, line: 642, type: !5383)
!5731 = !DILocalVariable(name: "sp", arg: 2, scope: !5726, file: !2834, line: 643, type: !105)
!5732 = !DILocation(line: 0, scope: !5726)
!5733 = !DILocation(line: 645, column: 10, scope: !5726)
!5734 = !DILocation(line: 653, column: 2, scope: !5726)
!5735 = !DILocation(line: 654, column: 6, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5726, file: !2834, line: 654, column: 6)
!5737 = !DILocation(line: 654, column: 10, scope: !5736)
!5738 = !DILocation(line: 654, column: 6, scope: !5726)
!5739 = !DILocation(line: 655, column: 24, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5736, file: !2834, line: 654, column: 18)
!5741 = !DILocation(line: 655, column: 19, scope: !5740)
!5742 = !DILocation(line: 656, column: 3, scope: !5740)
!5743 = !DILocation(line: 659, column: 7, scope: !5726)
!5744 = !DILocation(line: 660, column: 7, scope: !5726)
!5745 = !DILocation(line: 661, column: 7, scope: !5726)
!5746 = !DILocation(line: 662, column: 7, scope: !5726)
!5747 = !DILocation(line: 663, column: 7, scope: !5726)
!5748 = !DILocation(line: 665, column: 2, scope: !5726)
!5749 = !DILocation(line: 666, column: 1, scope: !5726)
!5750 = distinct !DISubprogram(name: "outs", scope: !2834, file: !2834, line: 1319, type: !5751, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5753)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{!108, !4502, !104, !105, !105}
!5753 = !{!5754, !5755, !5756, !5757, !5758, !5759}
!5754 = !DILocalVariable(name: "out", arg: 1, scope: !5750, file: !2834, line: 1319, type: !4502)
!5755 = !DILocalVariable(name: "ctx", arg: 2, scope: !5750, file: !2834, line: 1320, type: !104)
!5756 = !DILocalVariable(name: "sp", arg: 3, scope: !5750, file: !2834, line: 1321, type: !105)
!5757 = !DILocalVariable(name: "ep", arg: 4, scope: !5750, file: !2834, line: 1322, type: !105)
!5758 = !DILocalVariable(name: "count", scope: !5750, file: !2834, line: 1324, type: !439)
!5759 = !DILocalVariable(name: "rc", scope: !5760, file: !2834, line: 1327, type: !108)
!5760 = distinct !DILexicalBlock(scope: !5750, file: !2834, line: 1326, column: 45)
!5761 = !DILocation(line: 0, scope: !5750)
!5762 = !DILocation(line: 1326, column: 2, scope: !5750)
!5763 = !DILocation(line: 1324, column: 9, scope: !5750)
!5764 = !DILocation(line: 1326, column: 13, scope: !5750)
!5765 = !DILocation(line: 1326, column: 19, scope: !5750)
!5766 = !DILocation(line: 1327, column: 21, scope: !5760)
!5767 = !DILocation(line: 1326, column: 36, scope: !5750)
!5768 = !DILocation(line: 1326, column: 39, scope: !5750)
!5769 = !DILocation(line: 1327, column: 24, scope: !5760)
!5770 = !DILocation(line: 1327, column: 16, scope: !5760)
!5771 = !DILocation(line: 1327, column: 12, scope: !5760)
!5772 = !DILocation(line: 0, scope: !5760)
!5773 = !DILocation(line: 1329, column: 10, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5760, file: !2834, line: 1329, column: 7)
!5775 = !DILocation(line: 1329, column: 7, scope: !5760)
!5776 = distinct !{!5776, !5762, !5777}
!5777 = !DILocation(line: 1333, column: 2, scope: !5750)
!5778 = !DILocation(line: 1336, column: 1, scope: !5750)
!5779 = distinct !DISubprogram(name: "encode_uint", scope: !2834, file: !2834, line: 788, type: !5780, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5782)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!443, !2856, !5383, !443, !105}
!5782 = !{!5783, !5784, !5785, !5786, !5787, !5788, !5790, !5791}
!5783 = !DILocalVariable(name: "value", arg: 1, scope: !5779, file: !2834, line: 788, type: !2856)
!5784 = !DILocalVariable(name: "conv", arg: 2, scope: !5779, file: !2834, line: 789, type: !5383)
!5785 = !DILocalVariable(name: "bps", arg: 3, scope: !5779, file: !2834, line: 790, type: !443)
!5786 = !DILocalVariable(name: "bpe", arg: 4, scope: !5779, file: !2834, line: 791, type: !105)
!5787 = !DILocalVariable(name: "upcase", scope: !5779, file: !2834, line: 793, type: !422)
!5788 = !DILocalVariable(name: "radix", scope: !5779, file: !2834, line: 794, type: !5789)
!5789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5790 = !DILocalVariable(name: "bp", scope: !5779, file: !2834, line: 795, type: !443)
!5791 = !DILocalVariable(name: "lsv", scope: !5792, file: !2834, line: 798, type: !32)
!5792 = distinct !DILexicalBlock(scope: !5779, file: !2834, line: 797, column: 5)
!5793 = !DILocation(line: 0, scope: !5779)
!5794 = !DILocation(line: 793, column: 35, scope: !5779)
!5795 = !DILocation(line: 793, column: 24, scope: !5779)
!5796 = !DILocation(line: 793, column: 16, scope: !5779)
!5797 = !DILocation(line: 794, column: 29, scope: !5779)
!5798 = !DILocation(line: 795, column: 24, scope: !5779)
!5799 = !DILocation(line: 795, column: 17, scope: !5779)
!5800 = !DILocation(line: 797, column: 2, scope: !5779)
!5801 = !DILocation(line: 802, column: 9, scope: !5792)
!5802 = !DILocation(line: 798, column: 22, scope: !5792)
!5803 = !DILocation(line: 0, scope: !5792)
!5804 = !DILocation(line: 800, column: 16, scope: !5792)
!5805 = !DILocation(line: 800, column: 11, scope: !5792)
!5806 = !DILocation(line: 800, column: 4, scope: !5792)
!5807 = !DILocation(line: 800, column: 9, scope: !5792)
!5808 = !DILocation(line: 803, column: 18, scope: !5779)
!5809 = !DILocation(line: 803, column: 24, scope: !5779)
!5810 = !DILocation(line: 803, column: 2, scope: !5792)
!5811 = distinct !{!5811, !5800, !5812}
!5812 = !DILocation(line: 803, column: 37, scope: !5779)
!5813 = !DILocation(line: 808, column: 12, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5779, file: !2834, line: 808, column: 6)
!5815 = !DILocation(line: 808, column: 6, scope: !5779)
!5816 = !DILocation(line: 809, column: 7, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5814, file: !2834, line: 808, column: 23)
!5818 = !DILocation(line: 813, column: 3, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5820, file: !2834, line: 811, column: 27)
!5820 = distinct !DILexicalBlock(scope: !5821, file: !2834, line: 811, column: 14)
!5821 = distinct !DILexicalBlock(scope: !5817, file: !2834, line: 809, column: 7)
!5822 = !DILocation(line: 0, scope: !5821)
!5823 = !DILocation(line: 818, column: 2, scope: !5779)
!5824 = distinct !DISubprogram(name: "store_count", scope: !2834, file: !2834, line: 1280, type: !5825, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5829)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{null, !5827, !104, !108}
!5827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5828, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5350)
!5829 = !{!5830, !5831, !5832}
!5830 = !DILocalVariable(name: "conv", arg: 1, scope: !5824, file: !2834, line: 1280, type: !5827)
!5831 = !DILocalVariable(name: "dp", arg: 2, scope: !5824, file: !2834, line: 1281, type: !104)
!5832 = !DILocalVariable(name: "count", arg: 3, scope: !5824, file: !2834, line: 1282, type: !108)
!5833 = !DILocation(line: 0, scope: !5824)
!5834 = !DILocation(line: 1284, column: 38, scope: !5824)
!5835 = !DILocation(line: 1284, column: 2, scope: !5824)
!5836 = !DILocation(line: 1286, column: 4, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5824, file: !2834, line: 1284, column: 50)
!5838 = !DILocation(line: 1286, column: 14, scope: !5837)
!5839 = !DILocation(line: 1287, column: 3, scope: !5837)
!5840 = !DILocation(line: 1289, column: 24, scope: !5837)
!5841 = !DILocation(line: 1289, column: 22, scope: !5837)
!5842 = !DILocation(line: 1290, column: 3, scope: !5837)
!5843 = !DILocation(line: 1292, column: 18, scope: !5837)
!5844 = !DILocation(line: 1292, column: 4, scope: !5837)
!5845 = !DILocation(line: 1292, column: 16, scope: !5837)
!5846 = !DILocation(line: 1293, column: 3, scope: !5837)
!5847 = !DILocation(line: 1295, column: 4, scope: !5837)
!5848 = !DILocation(line: 1295, column: 15, scope: !5837)
!5849 = !DILocation(line: 1296, column: 3, scope: !5837)
!5850 = !DILocation(line: 1298, column: 22, scope: !5837)
!5851 = !DILocation(line: 1298, column: 4, scope: !5837)
!5852 = !DILocation(line: 1298, column: 20, scope: !5837)
!5853 = !DILocation(line: 1299, column: 3, scope: !5837)
!5854 = !DILocation(line: 1301, column: 21, scope: !5837)
!5855 = !DILocation(line: 1301, column: 4, scope: !5837)
!5856 = !DILocation(line: 1301, column: 19, scope: !5837)
!5857 = !DILocation(line: 1302, column: 3, scope: !5837)
!5858 = !DILocation(line: 1304, column: 4, scope: !5837)
!5859 = !DILocation(line: 1304, column: 17, scope: !5837)
!5860 = !DILocation(line: 1305, column: 3, scope: !5837)
!5861 = !DILocation(line: 1307, column: 4, scope: !5837)
!5862 = !DILocation(line: 1307, column: 20, scope: !5837)
!5863 = !DILocation(line: 1308, column: 3, scope: !5837)
!5864 = !DILocation(line: 1316, column: 1, scope: !5824)
!5865 = distinct !DISubprogram(name: "isupper", scope: !5866, file: !5866, line: 16, type: !557, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5867)
!5866 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5867 = !{!5868}
!5868 = !DILocalVariable(name: "a", arg: 1, scope: !5865, file: !5866, line: 16, type: !108)
!5869 = !DILocation(line: 0, scope: !5865)
!5870 = !DILocation(line: 18, column: 29, scope: !5865)
!5871 = !DILocation(line: 18, column: 45, scope: !5865)
!5872 = !DILocation(line: 18, column: 2, scope: !5865)
!5873 = distinct !DISubprogram(name: "conversion_radix", scope: !2834, file: !2834, line: 761, type: !5874, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5876)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{!439, !107}
!5876 = !{!5877}
!5877 = !DILocalVariable(name: "specifier", arg: 1, scope: !5873, file: !2834, line: 761, type: !107)
!5878 = !DILocation(line: 0, scope: !5873)
!5879 = !DILocation(line: 763, column: 2, scope: !5873)
!5880 = !DILocation(line: 770, column: 3, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5873, file: !2834, line: 763, column: 21)
!5882 = !DILocation(line: 774, column: 3, scope: !5881)
!5883 = !DILocation(line: 0, scope: !5881)
!5884 = !DILocation(line: 776, column: 1, scope: !5873)
!5885 = distinct !DISubprogram(name: "extract_flags", scope: !2834, file: !2834, line: 339, type: !5727, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5886)
!5886 = !{!5887, !5888, !5889}
!5887 = !DILocalVariable(name: "conv", arg: 1, scope: !5885, file: !2834, line: 339, type: !5383)
!5888 = !DILocalVariable(name: "sp", arg: 2, scope: !5885, file: !2834, line: 340, type: !105)
!5889 = !DILocalVariable(name: "loop", scope: !5885, file: !2834, line: 342, type: !422)
!5890 = !DILocation(line: 0, scope: !5885)
!5891 = !DILocation(line: 344, column: 2, scope: !5885)
!5892 = !DILocation(line: 345, column: 11, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5885, file: !2834, line: 344, column: 5)
!5894 = !DILocation(line: 345, column: 3, scope: !5893)
!5895 = !DILocation(line: 351, column: 4, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5893, file: !2834, line: 345, column: 16)
!5897 = !DILocation(line: 354, column: 4, scope: !5896)
!5898 = !DILocation(line: 357, column: 4, scope: !5896)
!5899 = !DILocation(line: 360, column: 4, scope: !5896)
!5900 = !DILocation(line: 0, scope: !5896)
!5901 = !DILocation(line: 370, column: 12, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5885, file: !2834, line: 370, column: 6)
!5903 = !DILocation(line: 370, column: 22, scope: !5902)
!5904 = !DILocation(line: 371, column: 19, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5902, file: !2834, line: 370, column: 42)
!5906 = !DILocation(line: 372, column: 2, scope: !5905)
!5907 = !DILocation(line: 376, column: 2, scope: !5885)
!5908 = distinct !DISubprogram(name: "extract_width", scope: !2834, file: !2834, line: 388, type: !5727, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5909)
!5909 = !{!5910, !5911, !5912, !5913}
!5910 = !DILocalVariable(name: "conv", arg: 1, scope: !5908, file: !2834, line: 388, type: !5383)
!5911 = !DILocalVariable(name: "sp", arg: 2, scope: !5908, file: !2834, line: 389, type: !105)
!5912 = !DILocalVariable(name: "wp", scope: !5908, file: !2834, line: 398, type: !105)
!5913 = !DILocalVariable(name: "width", scope: !5908, file: !2834, line: 399, type: !439)
!5914 = !DILocation(line: 0, scope: !5908)
!5915 = !DILocation(line: 391, column: 8, scope: !5908)
!5916 = !DILocation(line: 391, column: 22, scope: !5908)
!5917 = !DILocation(line: 393, column: 6, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5908, file: !2834, line: 393, column: 6)
!5919 = !DILocation(line: 393, column: 10, scope: !5918)
!5920 = !DILocation(line: 393, column: 6, scope: !5908)
!5921 = !DILocation(line: 394, column: 20, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5918, file: !2834, line: 393, column: 18)
!5923 = !DILocation(line: 395, column: 10, scope: !5922)
!5924 = !DILocation(line: 395, column: 3, scope: !5922)
!5925 = !DILocation(line: 399, column: 17, scope: !5908)
!5926 = !DILocation(line: 401, column: 6, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5908, file: !2834, line: 401, column: 6)
!5928 = !DILocation(line: 401, column: 9, scope: !5927)
!5929 = !DILocation(line: 401, column: 6, scope: !5908)
!5930 = !DILocation(line: 402, column: 23, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5927, file: !2834, line: 401, column: 16)
!5932 = !DILocation(line: 403, column: 9, scope: !5931)
!5933 = !DILocation(line: 403, column: 21, scope: !5931)
!5934 = !DILocation(line: 405, column: 11, scope: !5931)
!5935 = !DILocation(line: 404, column: 21, scope: !5931)
!5936 = !DILocation(line: 406, column: 2, scope: !5931)
!5937 = !DILocation(line: 409, column: 1, scope: !5908)
!5938 = distinct !DISubprogram(name: "extract_prec", scope: !2834, file: !2834, line: 420, type: !5727, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5939)
!5939 = !{!5940, !5941, !5942}
!5940 = !DILocalVariable(name: "conv", arg: 1, scope: !5938, file: !2834, line: 420, type: !5383)
!5941 = !DILocalVariable(name: "sp", arg: 2, scope: !5938, file: !2834, line: 421, type: !105)
!5942 = !DILocalVariable(name: "prec", scope: !5938, file: !2834, line: 435, type: !439)
!5943 = !DILocation(line: 0, scope: !5938)
!5944 = !DILocation(line: 423, column: 24, scope: !5938)
!5945 = !DILocation(line: 423, column: 28, scope: !5938)
!5946 = !DILocation(line: 423, column: 8, scope: !5938)
!5947 = !DILocation(line: 423, column: 21, scope: !5938)
!5948 = !DILocation(line: 425, column: 6, scope: !5938)
!5949 = !DILocation(line: 428, column: 2, scope: !5938)
!5950 = !DILocation(line: 430, column: 6, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5938, file: !2834, line: 430, column: 6)
!5952 = !DILocation(line: 430, column: 10, scope: !5951)
!5953 = !DILocation(line: 430, column: 6, scope: !5938)
!5954 = !DILocation(line: 431, column: 19, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5951, file: !2834, line: 430, column: 18)
!5956 = !DILocation(line: 432, column: 10, scope: !5955)
!5957 = !DILocation(line: 432, column: 3, scope: !5955)
!5958 = !DILocation(line: 435, column: 16, scope: !5938)
!5959 = !DILocation(line: 437, column: 8, scope: !5938)
!5960 = !DILocation(line: 437, column: 19, scope: !5938)
!5961 = !DILocation(line: 439, column: 10, scope: !5938)
!5962 = !DILocation(line: 438, column: 20, scope: !5938)
!5963 = !DILocation(line: 441, column: 9, scope: !5938)
!5964 = !DILocation(line: 442, column: 1, scope: !5938)
!5965 = distinct !DISubprogram(name: "extract_length", scope: !2834, file: !2834, line: 453, type: !5727, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !5966)
!5966 = !{!5967, !5968}
!5967 = !DILocalVariable(name: "conv", arg: 1, scope: !5965, file: !2834, line: 453, type: !5383)
!5968 = !DILocalVariable(name: "sp", arg: 2, scope: !5965, file: !2834, line: 454, type: !105)
!5969 = !DILocation(line: 0, scope: !5965)
!5970 = !DILocation(line: 456, column: 10, scope: !5965)
!5971 = !DILocation(line: 456, column: 2, scope: !5965)
!5972 = !DILocation(line: 458, column: 8, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !2834, line: 458, column: 7)
!5974 = distinct !DILexicalBlock(scope: !5965, file: !2834, line: 456, column: 15)
!5975 = !DILocation(line: 458, column: 7, scope: !5973)
!5976 = !DILocation(line: 458, column: 13, scope: !5973)
!5977 = !DILocation(line: 0, scope: !5973)
!5978 = !DILocation(line: 458, column: 7, scope: !5974)
!5979 = !DILocation(line: 459, column: 21, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5973, file: !2834, line: 458, column: 21)
!5981 = !DILocation(line: 460, column: 4, scope: !5980)
!5982 = !DILocation(line: 461, column: 3, scope: !5980)
!5983 = !DILocation(line: 462, column: 21, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5973, file: !2834, line: 461, column: 10)
!5985 = !DILocation(line: 466, column: 8, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5974, file: !2834, line: 466, column: 7)
!5987 = !DILocation(line: 466, column: 7, scope: !5986)
!5988 = !DILocation(line: 466, column: 13, scope: !5986)
!5989 = !DILocation(line: 0, scope: !5986)
!5990 = !DILocation(line: 466, column: 7, scope: !5974)
!5991 = !DILocation(line: 467, column: 21, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5986, file: !2834, line: 466, column: 21)
!5993 = !DILocation(line: 468, column: 4, scope: !5992)
!5994 = !DILocation(line: 469, column: 3, scope: !5992)
!5995 = !DILocation(line: 470, column: 21, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5986, file: !2834, line: 469, column: 10)
!5997 = !DILocation(line: 474, column: 9, scope: !5974)
!5998 = !DILocation(line: 474, column: 20, scope: !5974)
!5999 = !DILocation(line: 475, column: 3, scope: !5974)
!6000 = !DILocation(line: 476, column: 3, scope: !5974)
!6001 = !DILocation(line: 478, column: 9, scope: !5974)
!6002 = !DILocation(line: 478, column: 20, scope: !5974)
!6003 = !DILocation(line: 479, column: 3, scope: !5974)
!6004 = !DILocation(line: 480, column: 3, scope: !5974)
!6005 = !DILocation(line: 482, column: 9, scope: !5974)
!6006 = !DILocation(line: 482, column: 20, scope: !5974)
!6007 = !DILocation(line: 483, column: 3, scope: !5974)
!6008 = !DILocation(line: 484, column: 3, scope: !5974)
!6009 = !DILocation(line: 486, column: 9, scope: !5974)
!6010 = !DILocation(line: 486, column: 20, scope: !5974)
!6011 = !DILocation(line: 487, column: 3, scope: !5974)
!6012 = !DILocation(line: 492, column: 21, scope: !5974)
!6013 = !DILocation(line: 493, column: 3, scope: !5974)
!6014 = !DILocation(line: 495, column: 9, scope: !5974)
!6015 = !DILocation(line: 495, column: 20, scope: !5974)
!6016 = !DILocation(line: 496, column: 3, scope: !5974)
!6017 = !DILocation(line: 498, column: 2, scope: !5965)
!6018 = distinct !DISubprogram(name: "extract_specifier", scope: !2834, file: !2834, line: 513, type: !5727, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !6019)
!6019 = !{!6020, !6021, !6022, !6023}
!6020 = !DILocalVariable(name: "conv", arg: 1, scope: !6018, file: !2834, line: 513, type: !5383)
!6021 = !DILocalVariable(name: "sp", arg: 2, scope: !6018, file: !2834, line: 514, type: !105)
!6022 = !DILocalVariable(name: "unsupported", scope: !6018, file: !2834, line: 516, type: !422)
!6023 = !DILabel(scope: !6024, name: "int_conv", file: !2834, line: 526)
!6024 = distinct !DILexicalBlock(scope: !6018, file: !2834, line: 520, column: 27)
!6025 = !DILocation(line: 0, scope: !6018)
!6026 = !DILocation(line: 518, column: 20, scope: !6018)
!6027 = !DILocation(line: 518, column: 8, scope: !6018)
!6028 = !DILocation(line: 518, column: 18, scope: !6018)
!6029 = !DILocation(line: 520, column: 2, scope: !6018)
!6030 = !DILocation(line: 525, column: 3, scope: !6024)
!6031 = !DILocation(line: 0, scope: !6024)
!6032 = !DILocation(line: 526, column: 1, scope: !6024)
!6033 = !DILocation(line: 528, column: 24, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6024, file: !2834, line: 528, column: 7)
!6035 = !DILocation(line: 528, column: 7, scope: !6024)
!6036 = !DILocation(line: 535, column: 23, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6024, file: !2834, line: 535, column: 7)
!6038 = !DILocation(line: 535, column: 7, scope: !6024)
!6039 = !DILocation(line: 536, column: 36, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6037, file: !2834, line: 535, column: 31)
!6041 = !DILocation(line: 537, column: 3, scope: !6040)
!6042 = !DILocation(line: 570, column: 9, scope: !6024)
!6043 = !DILocation(line: 570, column: 23, scope: !6024)
!6044 = !DILocation(line: 575, column: 4, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6046, file: !2834, line: 573, column: 48)
!6046 = distinct !DILexicalBlock(scope: !6024, file: !2834, line: 573, column: 7)
!6047 = !DILocation(line: 603, column: 9, scope: !6024)
!6048 = !DILocation(line: 603, column: 23, scope: !6024)
!6049 = !DILocation(line: 605, column: 24, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6024, file: !2834, line: 605, column: 7)
!6051 = !DILocation(line: 605, column: 7, scope: !6024)
!6052 = !DILocation(line: 612, column: 9, scope: !6024)
!6053 = !DILocation(line: 612, column: 23, scope: !6024)
!6054 = !DILocation(line: 619, column: 24, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6024, file: !2834, line: 619, column: 7)
!6056 = !DILocation(line: 619, column: 7, scope: !6024)
!6057 = !DILocation(line: 625, column: 9, scope: !6024)
!6058 = !DILocation(line: 625, column: 17, scope: !6024)
!6059 = !DILocation(line: 626, column: 3, scope: !6024)
!6060 = !DILocation(line: 629, column: 20, scope: !6018)
!6061 = !DILocation(line: 629, column: 8, scope: !6018)
!6062 = !DILocation(line: 518, column: 23, scope: !6018)
!6063 = !DILocation(line: 631, column: 2, scope: !6018)
!6064 = distinct !DISubprogram(name: "extract_decimal", scope: !2834, file: !2834, line: 318, type: !6065, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !6067)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!439, !537}
!6067 = !{!6068, !6069, !6070}
!6068 = !DILocalVariable(name: "str", arg: 1, scope: !6064, file: !2834, line: 318, type: !537)
!6069 = !DILocalVariable(name: "sp", scope: !6064, file: !2834, line: 320, type: !105)
!6070 = !DILocalVariable(name: "val", scope: !6064, file: !2834, line: 321, type: !439)
!6071 = !DILocation(line: 0, scope: !6064)
!6072 = !DILocation(line: 320, column: 19, scope: !6064)
!6073 = !DILocation(line: 323, column: 37, scope: !6064)
!6074 = !DILocation(line: 323, column: 17, scope: !6064)
!6075 = !DILocation(line: 323, column: 9, scope: !6064)
!6076 = !DILocation(line: 323, column: 2, scope: !6064)
!6077 = !DILocation(line: 324, column: 13, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6064, file: !2834, line: 323, column: 43)
!6079 = !DILocation(line: 324, column: 24, scope: !6078)
!6080 = !DILocation(line: 324, column: 19, scope: !6078)
!6081 = !DILocation(line: 324, column: 27, scope: !6078)
!6082 = distinct !{!6082, !6076, !6083}
!6083 = !DILocation(line: 325, column: 2, scope: !6064)
!6084 = !DILocation(line: 326, column: 7, scope: !6064)
!6085 = !DILocation(line: 327, column: 2, scope: !6064)
!6086 = distinct !DISubprogram(name: "isdigit", scope: !5866, file: !5866, line: 43, type: !557, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !6087)
!6087 = !{!6088}
!6088 = !DILocalVariable(name: "a", arg: 1, scope: !6086, file: !5866, line: 43, type: !108)
!6089 = !DILocation(line: 0, scope: !6086)
!6090 = !DILocation(line: 45, column: 29, scope: !6086)
!6091 = !DILocation(line: 45, column: 45, scope: !6086)
!6092 = !DILocation(line: 45, column: 2, scope: !6086)
!6093 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6094, file: !6094, line: 9, type: !3406, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !437)
!6094 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!6095 = !DILocation(line: 11, column: 1, scope: !6093)
!6096 = !{i64 2147565391, i64 2147565434, i64 2147565474}
!6097 = !DILocation(line: 12, column: 1, scope: !6093)
!6098 = !{i64 2147569618, i64 2147569661, i64 2147569701}
!6099 = !DILocation(line: 13, column: 1, scope: !6093)
!6100 = !{i64 2147569827, i64 2147569870, i64 2147569910}
!6101 = !DILocation(line: 14, column: 1, scope: !6093)
!6102 = !{i64 2147569996, i64 2147570039, i64 2147570079}
!6103 = !DILocation(line: 15, column: 1, scope: !6093)
!6104 = !{i64 2147570159, i64 2147570202, i64 2147570242}
!6105 = !DILocation(line: 16, column: 1, scope: !6093)
!6106 = !{i64 2147570343, i64 2147570386, i64 2147570426}
!6107 = !DILocation(line: 17, column: 1, scope: !6093)
!6108 = !{i64 2147570522, i64 2147570565, i64 2147570605}
!6109 = !DILocation(line: 18, column: 1, scope: !6093)
!6110 = !{i64 2147570764, i64 2147570807, i64 2147570847}
!6111 = !DILocation(line: 19, column: 1, scope: !6093)
!6112 = !{i64 2147570999, i64 2147571042, i64 2147571082}
!6113 = !DILocation(line: 20, column: 1, scope: !6093)
!6114 = !{i64 2147571186, i64 2147571229, i64 2147571269}
!6115 = !DILocation(line: 21, column: 1, scope: !6093)
!6116 = !{i64 2147571402, i64 2147571445, i64 2147571485}
!6117 = !DILocation(line: 22, column: 1, scope: !6093)
!6118 = !{i64 2147571605, i64 2147571648, i64 2147571688}
!6119 = !DILocation(line: 23, column: 1, scope: !6093)
!6120 = !{i64 2147571808, i64 2147571851, i64 2147571891}
!6121 = !DILocation(line: 24, column: 1, scope: !6093)
!6122 = !{i64 2147571983, i64 2147572026, i64 2147572066}
!6123 = !DILocation(line: 25, column: 1, scope: !6093)
!6124 = !{i64 2147572191, i64 2147572234, i64 2147572274}
!6125 = !DILocation(line: 26, column: 1, scope: !6093)
!6126 = !{i64 2147572395, i64 2147572438, i64 2147572478}
!6127 = !DILocation(line: 27, column: 1, scope: !6093)
!6128 = !{i64 2147572588, i64 2147572631, i64 2147572671}
!6129 = !DILocation(line: 28, column: 1, scope: !6093)
!6130 = !{i64 2147572790, i64 2147572833, i64 2147572873}
!6131 = !DILocation(line: 29, column: 1, scope: !6093)
!6132 = !{i64 2147572989, i64 2147573032, i64 2147573072}
!6133 = !DILocation(line: 30, column: 1, scope: !6093)
!6134 = !{i64 2147573216, i64 2147573259, i64 2147573299}
!6135 = !DILocation(line: 31, column: 1, scope: !6093)
!6136 = !{i64 2147573418, i64 2147573461, i64 2147573501}
!6137 = !DILocation(line: 32, column: 1, scope: !6093)
!6138 = !{i64 2147573633, i64 2147573676, i64 2147573716}
!6139 = !DILocation(line: 33, column: 1, scope: !6093)
!6140 = !{i64 2147573805, i64 2147573848, i64 2147573888}
!6141 = !DILocation(line: 34, column: 1, scope: !6093)
!6142 = !{i64 2147574007, i64 2147574050, i64 2147574090}
!6143 = !DILocation(line: 35, column: 1, scope: !6093)
!6144 = !{i64 2147574233, i64 2147574276, i64 2147574316}
!6145 = !DILocation(line: 36, column: 1, scope: !6093)
!6146 = !{i64 2147574432, i64 2147574475, i64 2147574515}
!6147 = !DILocation(line: 37, column: 1, scope: !6093)
!6148 = !{i64 2147574607, i64 2147574650, i64 2147574690}
!6149 = !DILocation(line: 38, column: 1, scope: !6093)
!6150 = !{i64 2147574860, i64 2147574903, i64 2147574943}
!6151 = !DILocation(line: 39, column: 1, scope: !6093)
!6152 = !{i64 2147575101, i64 2147575144, i64 2147575184}
!6153 = !DILocation(line: 40, column: 1, scope: !6093)
!6154 = !{i64 2147575336, i64 2147575379, i64 2147575419}
!6155 = !DILocation(line: 41, column: 1, scope: !6093)
!6156 = !{i64 2147575568, i64 2147575611, i64 2147575651}
!6157 = !DILocation(line: 42, column: 1, scope: !6093)
!6158 = !{i64 2147575794, i64 2147575837, i64 2147575877}
!6159 = !DILocation(line: 43, column: 1, scope: !6093)
!6160 = !{i64 2147576020, i64 2147576063, i64 2147576103}
!6161 = !DILocation(line: 44, column: 1, scope: !6093)
!6162 = !{i64 2147576246, i64 2147576289, i64 2147576329}
!6163 = !DILocation(line: 45, column: 1, scope: !6093)
!6164 = !{i64 2147576481, i64 2147576524, i64 2147576564}
!6165 = !DILocation(line: 46, column: 1, scope: !6093)
!6166 = !{i64 2147576707, i64 2147576750, i64 2147576790}
!6167 = !DILocation(line: 47, column: 1, scope: !6093)
!6168 = !{i64 2147576954, i64 2147576997, i64 2147577037}
!6169 = !DILocation(line: 48, column: 1, scope: !6093)
!6170 = !{i64 2147577183, i64 2147577226, i64 2147577266}
!6171 = !DILocation(line: 49, column: 1, scope: !6093)
!6172 = !{i64 2147577415, i64 2147577458, i64 2147577498}
!6173 = !DILocation(line: 50, column: 1, scope: !6093)
!6174 = !{i64 2147577659, i64 2147577702, i64 2147577742}
!6175 = !DILocation(line: 51, column: 1, scope: !6093)
!6176 = !{i64 2147577897, i64 2147577940, i64 2147577980}
!6177 = !DILocation(line: 52, column: 1, scope: !6093)
!6178 = !{i64 2147578171, i64 2147578214, i64 2147578254}
!6179 = !DILocation(line: 53, column: 1, scope: !6093)
!6180 = !{i64 2147582470, i64 2147582513, i64 2147582553}
!6181 = !DILocation(line: 54, column: 1, scope: !6093)
!6182 = !{i64 2147582723, i64 2147582766, i64 2147582806}
!6183 = !DILocation(line: 55, column: 1, scope: !6093)
!6184 = !{i64 2147582967, i64 2147583010, i64 2147583050}
!6185 = !DILocation(line: 56, column: 1, scope: !6093)
!6186 = !{i64 2147583202, i64 2147583245, i64 2147583285}
!6187 = !DILocation(line: 57, column: 1, scope: !6093)
!6188 = !{i64 2147583452, i64 2147583495, i64 2147583535}
!6189 = !DILocation(line: 58, column: 1, scope: !6093)
!6190 = !{i64 2147583699, i64 2147583742, i64 2147583782}
!6191 = !DILocation(line: 59, column: 1, scope: !6093)
!6192 = !{i64 2147583934, i64 2147583977, i64 2147584017}
!6193 = !DILocation(line: 60, column: 1, scope: !6093)
!6194 = !{i64 2147584169, i64 2147584212, i64 2147584252}
!6195 = !DILocation(line: 61, column: 1, scope: !6093)
!6196 = !{i64 2147584404, i64 2147584447, i64 2147584487}
!6197 = !DILocation(line: 62, column: 1, scope: !6093)
!6198 = !{i64 2147584642, i64 2147584685, i64 2147584725}
!6199 = !DILocation(line: 63, column: 1, scope: !6093)
!6200 = !{i64 2147584883, i64 2147584926, i64 2147584966}
!6201 = !DILocation(line: 64, column: 1, scope: !6093)
!6202 = !{i64 2147585163, i64 2147585206, i64 2147585246}
!6203 = !DILocation(line: 65, column: 1, scope: !6093)
!6204 = !{i64 2147585422, i64 2147585465, i64 2147585505}
!6205 = !DILocation(line: 66, column: 1, scope: !6093)
!6206 = !{i64 2147585651, i64 2147585694, i64 2147585734}
!6207 = !DILocation(line: 67, column: 1, scope: !6093)
!6208 = !{i64 2147585877, i64 2147585920, i64 2147585960}
!6209 = !DILocation(line: 68, column: 1, scope: !6093)
!6210 = !{i64 2147586115, i64 2147586158, i64 2147586198}
!6211 = !DILocation(line: 69, column: 1, scope: !6093)
!6212 = !{i64 2147586344, i64 2147586387, i64 2147586427}
!6213 = !DILocation(line: 70, column: 1, scope: !6093)
!6214 = !{i64 2147586573, i64 2147586616, i64 2147586656}
!6215 = !DILocation(line: 71, column: 1, scope: !6093)
!6216 = !{i64 2147586781, i64 2147586824, i64 2147586864}
!6217 = !DILocation(line: 72, column: 1, scope: !6093)
!6218 = !{i64 2147586992, i64 2147587035, i64 2147587075}
!6219 = !DILocation(line: 73, column: 1, scope: !6093)
!6220 = !{i64 2147587227, i64 2147587270, i64 2147587310}
!6221 = !DILocation(line: 74, column: 1, scope: !6093)
!6222 = !{i64 2147587456, i64 2147587499, i64 2147587539}
!6223 = !DILocation(line: 75, column: 1, scope: !6093)
!6224 = !{i64 2147587673, i64 2147587716, i64 2147587756}
!6225 = !DILocation(line: 76, column: 1, scope: !6093)
!6226 = !{i64 2147587902, i64 2147587945, i64 2147587985}
!6227 = !DILocation(line: 77, column: 1, scope: !6093)
!6228 = !{i64 2147588140, i64 2147588183, i64 2147588223}
!6229 = !DILocation(line: 78, column: 1, scope: !6093)
!6230 = !{i64 2147588372, i64 2147588415, i64 2147588455}
!6231 = !DILocation(line: 79, column: 1, scope: !6093)
!6232 = !{i64 2147588598, i64 2147588641, i64 2147588681}
!6233 = !DILocation(line: 80, column: 1, scope: !6093)
!6234 = !{i64 2147588815, i64 2147588858, i64 2147588898}
!6235 = !DILocation(line: 81, column: 1, scope: !6093)
!6236 = !{i64 2147589047, i64 2147589090, i64 2147589130}
!6237 = !DILocation(line: 82, column: 1, scope: !6093)
!6238 = !{i64 2147589273, i64 2147589316, i64 2147589356}
!6239 = !DILocation(line: 83, column: 1, scope: !6093)
!6240 = !{i64 2147589487, i64 2147589530, i64 2147589570}
!6241 = !DILocation(line: 84, column: 1, scope: !6093)
!6242 = !{i64 2147589707, i64 2147589750, i64 2147589790}
!6243 = !DILocation(line: 85, column: 1, scope: !6093)
!6244 = !{i64 2147589939, i64 2147589982, i64 2147590022}
!6245 = !DILocation(line: 86, column: 1, scope: !6093)
!6246 = !{i64 2147590147, i64 2147590190, i64 2147590230}
!6247 = !DILocation(line: 87, column: 1, scope: !6093)
!6248 = !{i64 2147590352, i64 2147590395, i64 2147590435}
!6249 = !DILocation(line: 88, column: 1, scope: !6093)
!6250 = !{i64 2147594630, i64 2147594673, i64 2147594713}
!6251 = !DILocation(line: 89, column: 1, scope: !6093)
!6252 = !{i64 2147594844, i64 2147594887, i64 2147594927}
!6253 = !DILocation(line: 90, column: 1, scope: !6093)
!6254 = !{i64 2147595070, i64 2147595113, i64 2147595153}
!6255 = !DILocation(line: 91, column: 1, scope: !6093)
!6256 = !{i64 2147595290, i64 2147595333, i64 2147595373}
!6257 = !DILocation(line: 92, column: 1, scope: !6093)
!6258 = !{i64 2147595495, i64 2147595538, i64 2147595578}
!6259 = !DILocation(line: 93, column: 1, scope: !6093)
!6260 = !{i64 2147595727, i64 2147595770, i64 2147595810}
!6261 = !DILocation(line: 94, column: 1, scope: !6093)
!6262 = !{i64 2147595962, i64 2147596005, i64 2147596045}
!6263 = !DILocation(line: 95, column: 1, scope: !6093)
!6264 = !{i64 2147596212, i64 2147596255, i64 2147596295}
!6265 = !DILocation(line: 96, column: 1, scope: !6093)
!6266 = !{i64 2147596462, i64 2147596505, i64 2147596545}
!6267 = !DILocation(line: 97, column: 1, scope: !6093)
!6268 = !{i64 2147596700, i64 2147596743, i64 2147596783}
!6269 = !DILocation(line: 98, column: 1, scope: !6093)
!6270 = !{i64 2147596911, i64 2147596954, i64 2147596994}
!6271 = !DILocation(line: 99, column: 1, scope: !6093)
!6272 = !{i64 2147597128, i64 2147597171, i64 2147597211}
!6273 = !DILocation(line: 100, column: 1, scope: !6093)
!6274 = !{i64 2147597324, i64 2147597367, i64 2147597407}
!6275 = !DILocation(line: 101, column: 1, scope: !6093)
!6276 = !{i64 2147597526, i64 2147597569, i64 2147597609}
!6277 = !DILocation(line: 102, column: 1, scope: !6093)
!6278 = !{i64 2147597719, i64 2147597762, i64 2147597802}
!6279 = !DILocation(line: 103, column: 1, scope: !6093)
!6280 = !{i64 2147597927, i64 2147597970, i64 2147598010}
!6281 = !DILocation(line: 104, column: 1, scope: !6093)
!6282 = !{i64 2147598123, i64 2147598166, i64 2147598206}
!6283 = !DILocation(line: 105, column: 1, scope: !6093)
!6284 = !{i64 2147598331, i64 2147598374, i64 2147598414}
!6285 = !DILocation(line: 106, column: 1, scope: !6093)
!6286 = !{i64 2147598542, i64 2147598585, i64 2147598625}
!6287 = !DILocation(line: 107, column: 1, scope: !6093)
!6288 = !{i64 2147598741, i64 2147598784, i64 2147598824}
!6289 = !DILocation(line: 108, column: 1, scope: !6093)
!6290 = !{i64 2147598916, i64 2147598959, i64 2147598999}
!6291 = !DILocation(line: 109, column: 1, scope: !6093)
!6292 = !{i64 2147599100, i64 2147599143, i64 2147599183}
!6293 = !DILocation(line: 110, column: 1, scope: !6093)
!6294 = !{i64 2147599302, i64 2147599345, i64 2147599385}
!6295 = !DILocation(line: 111, column: 1, scope: !6093)
!6296 = !{i64 2147599501, i64 2147599544, i64 2147599584}
!6297 = !DILocation(line: 112, column: 1, scope: !6093)
!6298 = !{i64 2147599706, i64 2147599749, i64 2147599789}
!6299 = !DILocation(line: 113, column: 1, scope: !6093)
!6300 = !{i64 2147599899, i64 2147599942, i64 2147599982}
!6301 = !DILocation(line: 114, column: 1, scope: !6093)
!6302 = !{i64 2147600065, i64 2147600108, i64 2147600148}
!6303 = !DILocation(line: 115, column: 1, scope: !6093)
!6304 = !{i64 2147600249, i64 2147600292, i64 2147600332}
!6305 = !DILocation(line: 116, column: 1, scope: !6093)
!6306 = !{i64 2147600439, i64 2147600482, i64 2147600522}
!6307 = !DILocation(line: 117, column: 1, scope: !6093)
!6308 = !{i64 2147600623, i64 2147600666, i64 2147600706}
!6309 = !DILocation(line: 118, column: 1, scope: !6093)
!6310 = !{i64 2147600837, i64 2147600880, i64 2147600920}
!6311 = !DILocation(line: 119, column: 1, scope: !6093)
!6312 = !{i64 2147601048, i64 2147601091, i64 2147601131}
!6313 = !DILocation(line: 120, column: 1, scope: !6093)
!6314 = !{i64 2147601271, i64 2147601314, i64 2147601354}
!6315 = !DILocation(line: 121, column: 1, scope: !6093)
!6316 = !{i64 2147601455, i64 2147601498, i64 2147601538}
!6317 = !DILocation(line: 122, column: 1, scope: !6093)
!6318 = !{i64 2147601669, i64 2147601712, i64 2147601752}
!6319 = !DILocation(line: 123, column: 1, scope: !6093)
!6320 = !{i64 2147601835, i64 2147601878, i64 2147601918}
!6321 = !DILocation(line: 124, column: 1, scope: !6093)
!6322 = !{i64 2147602016, i64 2147602059, i64 2147602099}
!6323 = !DILocation(line: 125, column: 1, scope: !6093)
!6324 = !{i64 2147602209, i64 2147602252, i64 2147602292}
!6325 = !DILocation(line: 126, column: 1, scope: !6093)
!6326 = !{i64 2147602435, i64 2147602478, i64 2147602518}
!6327 = !DILocation(line: 127, column: 1, scope: !6093)
!6328 = !{i64 2147602649, i64 2147602692, i64 2147602732}
!6329 = !DILocation(line: 128, column: 1, scope: !6093)
!6330 = !{i64 2147602875, i64 2147602918, i64 2147602958}
!6331 = !DILocation(line: 129, column: 1, scope: !6093)
!6332 = !{i64 2147603092, i64 2147603135, i64 2147603175}
!6333 = !DILocation(line: 130, column: 1, scope: !6093)
!6334 = !{i64 2147603369, i64 2147603412, i64 2147603452}
!6335 = !DILocation(line: 131, column: 1, scope: !6093)
!6336 = !{i64 2147603595, i64 2147603638, i64 2147603678}
!6337 = !DILocation(line: 132, column: 1, scope: !6093)
!6338 = !{i64 2147607864, i64 2147607907, i64 2147607947}
!6339 = !DILocation(line: 133, column: 1, scope: !6093)
!6340 = !{i64 2147608060, i64 2147608103, i64 2147608143}
!6341 = !DILocation(line: 134, column: 1, scope: !6093)
!6342 = !{i64 2147608325, i64 2147608368, i64 2147608408}
!6343 = !DILocation(line: 135, column: 1, scope: !6093)
!6344 = !{i64 2147608539, i64 2147608582, i64 2147608622}
!6345 = !DILocation(line: 136, column: 1, scope: !6093)
!6346 = !{i64 2147608714, i64 2147608757, i64 2147608797}
!6347 = !DILocation(line: 137, column: 1, scope: !6093)
!6348 = !{i64 2147608968, i64 2147609011, i64 2147609051}
!6349 = !DILocation(line: 138, column: 1, scope: !6093)
!6350 = !{i64 2147609167, i64 2147609210, i64 2147609250}
!6351 = !DILocation(line: 139, column: 1, scope: !6093)
!6352 = !{i64 2147609409, i64 2147609452, i64 2147609492}
!6353 = !DILocation(line: 140, column: 1, scope: !6093)
!6354 = !{i64 2147609572, i64 2147609615, i64 2147609655}
!6355 = !DILocation(line: 141, column: 1, scope: !6093)
!6356 = !{i64 2147609759, i64 2147609802, i64 2147609842}
!6357 = !DILocation(line: 142, column: 1, scope: !6093)
!6358 = !{i64 2147609967, i64 2147610010, i64 2147610050}
!6359 = !DILocation(line: 143, column: 1, scope: !6093)
!6360 = !{i64 2147610163, i64 2147610206, i64 2147610246}
!6361 = !DILocation(line: 144, column: 1, scope: !6093)
!6362 = !{i64 2147610356, i64 2147610399, i64 2147610439}
!6363 = !DILocation(line: 145, column: 1, scope: !6093)
!6364 = !{i64 2147610539, i64 2147610582, i64 2147610622}
!6365 = !DILocation(line: 146, column: 1, scope: !6093)
!6366 = !{i64 2147610753, i64 2147610796, i64 2147610836}
!6367 = !DILocation(line: 147, column: 1, scope: !6093)
!6368 = !{i64 2147610964, i64 2147611007, i64 2147611047}
!6369 = !DILocation(line: 148, column: 1, scope: !6093)
!6370 = !{i64 2147611184, i64 2147611227, i64 2147611267}
!6371 = !DILocation(line: 149, column: 1, scope: !6093)
!6372 = !{i64 2147611391, i64 2147611434, i64 2147611474}
!6373 = !DILocation(line: 150, column: 1, scope: !6093)
!6374 = !{i64 2147611664, i64 2147611707, i64 2147611747}
!6375 = !DILocation(line: 151, column: 1, scope: !6093)
!6376 = !{i64 2147611912, i64 2147611955, i64 2147611995}
!6377 = !DILocation(line: 152, column: 1, scope: !6093)
!6378 = !{i64 2147612111, i64 2147612154, i64 2147612194}
!6379 = !DILocation(line: 153, column: 1, scope: !6093)
!6380 = !{i64 2147612346, i64 2147612389, i64 2147612429}
!6381 = !DILocation(line: 154, column: 1, scope: !6093)
!6382 = !{i64 2147612596, i64 2147612639, i64 2147612679}
!6383 = !DILocation(line: 155, column: 1, scope: !6093)
!6384 = !{i64 2147612798, i64 2147612841, i64 2147612881}
!6385 = !DILocation(line: 156, column: 1, scope: !6093)
!6386 = !{i64 2147613021, i64 2147613064, i64 2147613104}
!6387 = !DILocation(line: 157, column: 1, scope: !6093)
!6388 = !{i64 2147613235, i64 2147613278, i64 2147613318}
!6389 = !DILocation(line: 158, column: 1, scope: !6093)
!6390 = !{i64 2147613479, i64 2147613522, i64 2147613562}
!6391 = !DILocation(line: 159, column: 1, scope: !6093)
!6392 = !{i64 2147613708, i64 2147613751, i64 2147613791}
!6393 = !DILocation(line: 160, column: 1, scope: !6093)
!6394 = !{i64 2147613937, i64 2147613980, i64 2147614020}
!6395 = !DILocation(line: 161, column: 1, scope: !6093)
!6396 = !{i64 2147614145, i64 2147614188, i64 2147614228}
!6397 = !DILocation(line: 162, column: 1, scope: !6093)
!6398 = !{i64 2147614383, i64 2147614426, i64 2147614466}
!6399 = !DILocation(line: 163, column: 1, scope: !6093)
!6400 = !{i64 2147614609, i64 2147614652, i64 2147614692}
!6401 = !DILocation(line: 164, column: 1, scope: !6093)
!6402 = !{i64 2147614868, i64 2147614911, i64 2147614951}
!6403 = !DILocation(line: 165, column: 1, scope: !6093)
!6404 = !{i64 2147615088, i64 2147615131, i64 2147615171}
!6405 = !DILocation(line: 166, column: 1, scope: !6093)
!6406 = !{i64 2147615320, i64 2147615363, i64 2147615403}
!6407 = !DILocation(line: 167, column: 1, scope: !6093)
!6408 = !{i64 2147615561, i64 2147615604, i64 2147615644}
!6409 = !DILocation(line: 168, column: 1, scope: !6093)
!6410 = !{i64 2147615802, i64 2147615845, i64 2147615885}
!6411 = !DILocation(line: 169, column: 1, scope: !6093)
!6412 = !{i64 2147616025, i64 2147616068, i64 2147616108}
!6413 = !DILocation(line: 170, column: 1, scope: !6093)
!6414 = !{i64 2147616242, i64 2147616285, i64 2147616325}
!6415 = !DILocation(line: 171, column: 1, scope: !6093)
!6416 = !{i64 2147620544, i64 2147620587, i64 2147620627}
!6417 = !DILocation(line: 172, column: 1, scope: !6093)
!6418 = !{i64 2147620731, i64 2147620774, i64 2147620814}
!6419 = !DILocation(line: 173, column: 1, scope: !6093)
!6420 = !{i64 2147620918, i64 2147620961, i64 2147621001}
!6421 = !DILocation(line: 174, column: 1, scope: !6093)
!6422 = !{i64 2147621081, i64 2147621124, i64 2147621164}
!6423 = !DILocation(line: 175, column: 1, scope: !6093)
!6424 = !{i64 2147621286, i64 2147621329, i64 2147621369}
!6425 = !DILocation(line: 176, column: 1, scope: !6093)
!6426 = !{i64 2147621479, i64 2147621522, i64 2147621562}
!6427 = !DILocation(line: 177, column: 1, scope: !6093)
!6428 = !{i64 2147621738, i64 2147621781, i64 2147621821}
!6429 = !DILocation(line: 178, column: 1, scope: !6093)
!6430 = !{i64 2147621961, i64 2147622004, i64 2147622044}
!6431 = !DILocation(line: 179, column: 1, scope: !6093)
!6432 = !{i64 2147622190, i64 2147622233, i64 2147622273}
!6433 = !DILocation(line: 180, column: 1, scope: !6093)
!6434 = !{i64 2147622404, i64 2147622447, i64 2147622487}
!6435 = !DILocation(line: 181, column: 1, scope: !6093)
!6436 = !{i64 2147622606, i64 2147622649, i64 2147622689}
!6437 = !DILocation(line: 182, column: 1, scope: !6093)
!6438 = !{i64 2147622802, i64 2147622845, i64 2147622885}
!6439 = !DILocation(line: 183, column: 1, scope: !6093)
!6440 = !{i64 2147623014, i64 2147623057, i64 2147623097}
!6441 = !DILocation(line: 184, column: 1, scope: !6093)
!6442 = !{i64 2147623235, i64 2147623278, i64 2147623318}
!6443 = !DILocation(line: 185, column: 1, scope: !6093)
!6444 = !{i64 2147623449, i64 2147623492, i64 2147623532}
!6445 = !DILocation(line: 186, column: 1, scope: !6093)
!6446 = !{i64 2147623639, i64 2147623682, i64 2147623722}
!6447 = !DILocation(line: 187, column: 1, scope: !6093)
!6448 = !{i64 2147623838, i64 2147623881, i64 2147623921}
!6449 = !DILocation(line: 188, column: 1, scope: !6093)
!6450 = !{i64 2147624043, i64 2147624086, i64 2147624126}
!6451 = !DILocation(line: 189, column: 1, scope: !6093)
!6452 = !{i64 2147624263, i64 2147624306, i64 2147624346}
!6453 = !DILocation(line: 190, column: 1, scope: !6093)
!6454 = !{i64 2147624464, i64 2147624507, i64 2147624547}
!6455 = !DILocation(line: 191, column: 1, scope: !6093)
!6456 = !{i64 2147624663, i64 2147624706, i64 2147624746}
!6457 = !DILocation(line: 192, column: 1, scope: !6093)
!6458 = !{i64 2147624868, i64 2147624911, i64 2147624951}
!6459 = !DILocation(line: 193, column: 1, scope: !6093)
!6460 = !{i64 2147625037, i64 2147625080, i64 2147625120}
!6461 = !DILocation(line: 194, column: 1, scope: !6093)
!6462 = !{i64 2147625221, i64 2147625264, i64 2147625304}
!6463 = !DILocation(line: 195, column: 1, scope: !6093)
!6464 = !{i64 2147625405, i64 2147625448, i64 2147625488}
!6465 = !DILocation(line: 196, column: 1, scope: !6093)
!6466 = !{i64 2147625592, i64 2147625635, i64 2147625675}
!6467 = !DILocation(line: 197, column: 1, scope: !6093)
!6468 = !{i64 2147625776, i64 2147625819, i64 2147625859}
!6469 = !DILocation(line: 198, column: 1, scope: !6093)
!6470 = !{i64 2147626014, i64 2147626057, i64 2147626097}
!6471 = !DILocation(line: 199, column: 1, scope: !6093)
!6472 = !{i64 2147626244, i64 2147626287, i64 2147626327}
!6473 = !DILocation(line: 200, column: 1, scope: !6093)
!6474 = !{i64 2147626473, i64 2147626516, i64 2147626556}
!6475 = !DILocation(line: 201, column: 1, scope: !6093)
!6476 = !{i64 2147626660, i64 2147626703, i64 2147626743}
!6477 = !DILocation(line: 202, column: 1, scope: !6093)
!6478 = !{i64 2147626856, i64 2147626899, i64 2147626939}
!6479 = !DILocation(line: 203, column: 1, scope: !6093)
!6480 = !{i64 2147627064, i64 2147627107, i64 2147627147}
!6481 = !DILocation(line: 204, column: 1, scope: !6093)
!6482 = !{i64 2147627276, i64 2147627319, i64 2147627359}
!6483 = !DILocation(line: 205, column: 1, scope: !6093)
!6484 = !{i64 2147627475, i64 2147627518, i64 2147627558}
!6485 = !DILocation(line: 206, column: 1, scope: !6093)
!6486 = !{i64 2147627713, i64 2147627756, i64 2147627796}
!6487 = !DILocation(line: 207, column: 1, scope: !6093)
!6488 = !{i64 2147627909, i64 2147627952, i64 2147627992}
!6489 = !DILocation(line: 208, column: 1, scope: !6093)
!6490 = !{i64 2147628111, i64 2147628154, i64 2147628194}
!6491 = !DILocation(line: 209, column: 1, scope: !6093)
!6492 = !{i64 2147628304, i64 2147628347, i64 2147628387}
!6493 = !DILocation(line: 210, column: 1, scope: !6093)
!6494 = !{i64 2147628538, i64 2147628581, i64 2147628621}
!6495 = !DILocation(line: 211, column: 1, scope: !6093)
!6496 = !{i64 2147628701, i64 2147628744, i64 2147628784}
!6497 = !DILocation(line: 212, column: 1, scope: !6093)
!6498 = !{i64 2147628940, i64 2147628983, i64 2147629023}
!6499 = !DILocation(line: 213, column: 1, scope: !6093)
!6500 = !{i64 2147629179, i64 2147629222, i64 2147629262}
!6501 = !DILocation(line: 214, column: 1, scope: !6093)
!6502 = !{i64 2147629415, i64 2147629458, i64 2147629498}
!6503 = !DILocation(line: 215, column: 1, scope: !6093)
!6504 = !{i64 2147633706, i64 2147633749, i64 2147633789}
!6505 = !DILocation(line: 216, column: 1, scope: !6093)
!6506 = !{i64 2147633893, i64 2147633936, i64 2147633976}
!6507 = !DILocation(line: 217, column: 1, scope: !6093)
!6508 = !{i64 2147634092, i64 2147634135, i64 2147634175}
!6509 = !DILocation(line: 218, column: 1, scope: !6093)
!6510 = !{i64 2147634363, i64 2147634406, i64 2147634446}
!6511 = !DILocation(line: 219, column: 1, scope: !6093)
!6512 = !{i64 2147634538, i64 2147634581, i64 2147634621}
!6513 = !DILocation(line: 220, column: 1, scope: !6093)
!6514 = !{i64 2147634772, i64 2147634815, i64 2147634855}
!6515 = !DILocation(line: 221, column: 1, scope: !6093)
!6516 = !{i64 2147634980, i64 2147635023, i64 2147635063}
!6517 = !DILocation(line: 222, column: 1, scope: !6093)
!6518 = !{i64 2147635198, i64 2147635241, i64 2147635281}
!6519 = !DILocation(line: 223, column: 1, scope: !6093)
!6520 = !{i64 2147635388, i64 2147635431, i64 2147635471}
!6521 = !DILocation(line: 224, column: 1, scope: !6093)
!6522 = !{i64 2147635620, i64 2147635663, i64 2147635703}
!6523 = !DILocation(line: 225, column: 1, scope: !6093)
!6524 = !{i64 2147635840, i64 2147635883, i64 2147635923}
!6525 = !DILocation(line: 226, column: 1, scope: !6093)
!6526 = !{i64 2147636036, i64 2147636079, i64 2147636119}
!6527 = !DILocation(line: 227, column: 1, scope: !6093)
!6528 = !{i64 2147636242, i64 2147636285, i64 2147636325}
!6529 = !DILocation(line: 228, column: 1, scope: !6093)
!6530 = !{i64 2147636447, i64 2147636490, i64 2147636530}
!6531 = !DILocation(line: 229, column: 1, scope: !6093)
!6532 = !{i64 2147636661, i64 2147636704, i64 2147636744}
!6533 = !DILocation(line: 230, column: 1, scope: !6093)
!6534 = !{i64 2147636887, i64 2147636930, i64 2147636970}
!6535 = !DILocation(line: 231, column: 1, scope: !6093)
!6536 = !{i64 2147637095, i64 2147637138, i64 2147637178}
!6537 = !DILocation(line: 232, column: 1, scope: !6093)
!6538 = !{i64 2147637291, i64 2147637334, i64 2147637374}
!6539 = !DILocation(line: 233, column: 1, scope: !6093)
!6540 = !{i64 2147637523, i64 2147637566, i64 2147637606}
!6541 = !DILocation(line: 234, column: 1, scope: !6093)
!6542 = !{i64 2147637707, i64 2147637750, i64 2147637790}
!6543 = !DILocation(line: 235, column: 1, scope: !6093)
!6544 = !{i64 2147637916, i64 2147637959, i64 2147637999}
!6545 = !DILocation(line: 236, column: 1, scope: !6093)
!6546 = !{i64 2147638124, i64 2147638167, i64 2147638207}
!6547 = !DILocation(line: 237, column: 1, scope: !6093)
!6548 = !{i64 2147638320, i64 2147638363, i64 2147638403}
!6549 = !DILocation(line: 238, column: 1, scope: !6093)
!6550 = !{i64 2147638504, i64 2147638547, i64 2147638587}
!6551 = !DILocation(line: 239, column: 1, scope: !6093)
!6552 = !{i64 2147638730, i64 2147638773, i64 2147638813}
!6553 = !DILocation(line: 240, column: 1, scope: !6093)
!6554 = !{i64 2147638956, i64 2147638999, i64 2147639039}
!6555 = !DILocation(line: 241, column: 1, scope: !6093)
!6556 = !{i64 2147639182, i64 2147639225, i64 2147639265}
!6557 = !DILocation(line: 242, column: 1, scope: !6093)
!6558 = !{i64 2147639408, i64 2147639451, i64 2147639491}
!6559 = !DILocation(line: 243, column: 1, scope: !6093)
!6560 = !{i64 2147639634, i64 2147639677, i64 2147639717}
!6561 = !DILocation(line: 244, column: 1, scope: !6093)
!6562 = !{i64 2147639866, i64 2147639909, i64 2147639949}
!6563 = !DILocation(line: 245, column: 1, scope: !6093)
!6564 = !{i64 2147640104, i64 2147640147, i64 2147640187}
!6565 = !DILocation(line: 246, column: 1, scope: !6093)
!6566 = !{i64 2147640324, i64 2147640367, i64 2147640407}
!6567 = !DILocation(line: 247, column: 1, scope: !6093)
!6568 = !{i64 2147640568, i64 2147640611, i64 2147640651}
!6569 = !DILocation(line: 248, column: 1, scope: !6093)
!6570 = !{i64 2147640809, i64 2147640852, i64 2147640892}
!6571 = !DILocation(line: 249, column: 1, scope: !6093)
!6572 = !{i64 2147641044, i64 2147641087, i64 2147641127}
!6573 = !DILocation(line: 250, column: 1, scope: !6093)
!6574 = !{i64 2147641276, i64 2147641319, i64 2147641359}
!6575 = !DILocation(line: 251, column: 1, scope: !6093)
!6576 = !{i64 2147641478, i64 2147641521, i64 2147641561}
!6577 = !DILocation(line: 252, column: 1, scope: !6093)
!6578 = !{i64 2147641728, i64 2147641771, i64 2147641811}
!6579 = !DILocation(line: 253, column: 1, scope: !6093)
!6580 = !{i64 2147641966, i64 2147642009, i64 2147642049}
!6581 = !DILocation(line: 254, column: 1, scope: !6093)
!6582 = !{i64 2147642174, i64 2147642217, i64 2147642257}
!6583 = !DILocation(line: 255, column: 1, scope: !6093)
!6584 = !{i64 2147646431, i64 2147646474, i64 2147646514}
!6585 = !DILocation(line: 256, column: 1, scope: !6093)
!6586 = !{i64 2147646615, i64 2147646658, i64 2147646698}
!6587 = !DILocation(line: 257, column: 1, scope: !6093)
!6588 = !{i64 2147646832, i64 2147646875, i64 2147646915}
!6589 = !DILocation(line: 258, column: 1, scope: !6093)
!6590 = !{i64 2147647037, i64 2147647080, i64 2147647120}
!6591 = !DILocation(line: 259, column: 1, scope: !6093)
!6592 = !{i64 2147647272, i64 2147647315, i64 2147647355}
!6593 = !DILocation(line: 260, column: 1, scope: !6093)
!6594 = !{i64 2147647495, i64 2147647538, i64 2147647578}
!6595 = !DILocation(line: 261, column: 1, scope: !6093)
!6596 = !{i64 2147647719, i64 2147647762, i64 2147647802}
!6597 = !DILocation(line: 262, column: 1, scope: !6093)
!6598 = !{i64 2147647957, i64 2147648000, i64 2147648040}
!6599 = !DILocation(line: 263, column: 1, scope: !6093)
!6600 = !{i64 2147648195, i64 2147648238, i64 2147648278}
!6601 = !DILocation(line: 264, column: 1, scope: !6093)
!6602 = !{i64 2147648412, i64 2147648455, i64 2147648495}
!6603 = !DILocation(line: 265, column: 1, scope: !6093)
!6604 = !{i64 2147648617, i64 2147648660, i64 2147648700}
!6605 = !DILocation(line: 266, column: 1, scope: !6093)
!6606 = !{i64 2147648810, i64 2147648853, i64 2147648893}
!6607 = !DILocation(line: 267, column: 1, scope: !6093)
!6608 = !{i64 2147649063, i64 2147649106, i64 2147649146}
!6609 = !DILocation(line: 268, column: 1, scope: !6093)
!6610 = !{i64 2147649271, i64 2147649314, i64 2147649354}
!6611 = !DILocation(line: 269, column: 1, scope: !6093)
!6612 = !{i64 2147649467, i64 2147649510, i64 2147649550}
!6613 = !DILocation(line: 270, column: 1, scope: !6093)
!6614 = !{i64 2147649681, i64 2147649724, i64 2147649764}
!6615 = !DILocation(line: 271, column: 1, scope: !6093)
!6616 = !{i64 2147649889, i64 2147649932, i64 2147649972}
!6617 = !DILocation(line: 272, column: 1, scope: !6093)
!6618 = !{i64 2147650079, i64 2147650122, i64 2147650162}
!6619 = !DILocation(line: 273, column: 1, scope: !6093)
!6620 = !{i64 2147650293, i64 2147650336, i64 2147650376}
!6621 = !DILocation(line: 274, column: 1, scope: !6093)
!6622 = !{i64 2147650555, i64 2147650598, i64 2147650638}
!6623 = !DILocation(line: 275, column: 1, scope: !6093)
!6624 = !{i64 2147650766, i64 2147650809, i64 2147650849}
!6625 = !DILocation(line: 276, column: 1, scope: !6093)
!6626 = !{i64 2147651010, i64 2147651053, i64 2147651093}
!6627 = !DILocation(line: 277, column: 1, scope: !6093)
!6628 = !{i64 2147651221, i64 2147651264, i64 2147651304}
!6629 = !DILocation(line: 278, column: 1, scope: !6093)
!6630 = !{i64 2147651450, i64 2147651493, i64 2147651533}
!6631 = !DILocation(line: 279, column: 1, scope: !6093)
!6632 = !{i64 2147651715, i64 2147651758, i64 2147651798}
!6633 = !DILocation(line: 280, column: 1, scope: !6093)
!6634 = !{i64 2147651920, i64 2147651963, i64 2147652003}
!6635 = !DILocation(line: 281, column: 1, scope: !6093)
!6636 = !{i64 2147652116, i64 2147652159, i64 2147652199}
!6637 = !DILocation(line: 282, column: 1, scope: !6093)
!6638 = !{i64 2147652339, i64 2147652382, i64 2147652422}
!6639 = !DILocation(line: 283, column: 1, scope: !6093)
!6640 = !{i64 2147652502, i64 2147652545, i64 2147652585}
!6641 = !DILocation(line: 284, column: 1, scope: !6093)
!6642 = !{i64 2147652707, i64 2147652750, i64 2147652790}
!6643 = !DILocation(line: 285, column: 1, scope: !6093)
!6644 = !{i64 2147652927, i64 2147652970, i64 2147653010}
!6645 = !DILocation(line: 286, column: 1, scope: !6093)
!6646 = !{i64 2147653141, i64 2147653184, i64 2147653224}
!6647 = !DILocation(line: 287, column: 1, scope: !6093)
!6648 = !{i64 2147653385, i64 2147653428, i64 2147653468}
!6649 = !DILocation(line: 288, column: 1, scope: !6093)
!6650 = !{i64 2147653617, i64 2147653660, i64 2147653700}
!6651 = !DILocation(line: 289, column: 1, scope: !6093)
!6652 = !{i64 2147653831, i64 2147653874, i64 2147653914}
!6653 = !DILocation(line: 290, column: 1, scope: !6093)
!6654 = !{i64 2147654042, i64 2147654085, i64 2147654125}
!6655 = !DILocation(line: 291, column: 1, scope: !6093)
!6656 = !{i64 2147654235, i64 2147654278, i64 2147654318}
!6657 = !DILocation(line: 292, column: 1, scope: !6093)
!6658 = !{i64 2147654434, i64 2147654477, i64 2147654517}
!6659 = !DILocation(line: 293, column: 1, scope: !6093)
!6660 = !{i64 2147654606, i64 2147654649, i64 2147654689}
!6661 = !DILocation(line: 294, column: 1, scope: !6093)
!6662 = !{i64 2147654799, i64 2147654842, i64 2147654882}
!6663 = !DILocation(line: 295, column: 1, scope: !6093)
!6664 = !{i64 2147654995, i64 2147655038, i64 2147655078}
!6665 = !DILocation(line: 296, column: 1, scope: !6093)
!6666 = !{i64 2147655158, i64 2147655201, i64 2147655241}
!6667 = !DILocation(line: 297, column: 1, scope: !6093)
!6668 = !{i64 2147659421, i64 2147659464, i64 2147659504}
!6669 = !DILocation(line: 298, column: 1, scope: !6093)
!6670 = !{i64 2147659626, i64 2147659669, i64 2147659709}
!6671 = !DILocation(line: 299, column: 1, scope: !6093)
!6672 = !{i64 2147659834, i64 2147659877, i64 2147659917}
!6673 = !DILocation(line: 300, column: 1, scope: !6093)
!6674 = !{i64 2147660027, i64 2147660070, i64 2147660110}
!6675 = !DILocation(line: 301, column: 1, scope: !6093)
!6676 = !{i64 2147660214, i64 2147660257, i64 2147660297}
!6677 = !DILocation(line: 302, column: 1, scope: !6093)
!6678 = !{i64 2147660441, i64 2147660484, i64 2147660524}
!6679 = !DILocation(line: 303, column: 1, scope: !6093)
!6680 = !{i64 2147660607, i64 2147660650, i64 2147660690}
!6681 = !DILocation(line: 304, column: 1, scope: !6093)
!6682 = !{i64 2147660821, i64 2147660864, i64 2147660904}
!6683 = !DILocation(line: 305, column: 1, scope: !6093)
!6684 = !{i64 2147661047, i64 2147661090, i64 2147661130}
!6685 = !DILocation(line: 306, column: 1, scope: !6093)
!6686 = !{i64 2147661255, i64 2147661298, i64 2147661338}
!6687 = !DILocation(line: 307, column: 1, scope: !6093)
!6688 = !{i64 2147661451, i64 2147661494, i64 2147661534}
!6689 = !DILocation(line: 308, column: 1, scope: !6093)
!6690 = !{i64 2147661668, i64 2147661711, i64 2147661751}
!6691 = !DILocation(line: 309, column: 1, scope: !6093)
!6692 = !{i64 2147661960, i64 2147662003, i64 2147662043}
!6693 = !DILocation(line: 310, column: 1, scope: !6093)
!6694 = !{i64 2147662192, i64 2147662235, i64 2147662275}
!6695 = !DILocation(line: 311, column: 1, scope: !6093)
!6696 = !{i64 2147662409, i64 2147662452, i64 2147662492}
!6697 = !DILocation(line: 312, column: 1, scope: !6093)
!6698 = !{i64 2147662616, i64 2147662659, i64 2147662699}
!6699 = !DILocation(line: 313, column: 1, scope: !6093)
!6700 = !{i64 2147662817, i64 2147662860, i64 2147662900}
!6701 = !DILocation(line: 314, column: 1, scope: !6093)
!6702 = !{i64 2147663049, i64 2147663092, i64 2147663132}
!6703 = !DILocation(line: 315, column: 1, scope: !6093)
!6704 = !{i64 2147663257, i64 2147663300, i64 2147663340}
!6705 = !DILocation(line: 316, column: 1, scope: !6093)
!6706 = !{i64 2147663447, i64 2147663490, i64 2147663530}
!6707 = !DILocation(line: 317, column: 1, scope: !6093)
!6708 = !{i64 2147663673, i64 2147663716, i64 2147663756}
!6709 = !DILocation(line: 318, column: 1, scope: !6093)
!6710 = !{i64 2147663862, i64 2147663905, i64 2147663945}
!6711 = !DILocation(line: 319, column: 1, scope: !6093)
!6712 = !{i64 2147664133, i64 2147664176, i64 2147664216}
!6713 = !DILocation(line: 320, column: 1, scope: !6093)
!6714 = !{i64 2147664353, i64 2147664396, i64 2147664436}
!6715 = !DILocation(line: 321, column: 1, scope: !6093)
!6716 = !{i64 2147664606, i64 2147664649, i64 2147664689}
!6717 = !DILocation(line: 322, column: 1, scope: !6093)
!6718 = !{i64 2147664814, i64 2147664857, i64 2147664897}
!6719 = !DILocation(line: 323, column: 1, scope: !6093)
!6720 = !{i64 2147665046, i64 2147665089, i64 2147665129}
!6721 = !DILocation(line: 324, column: 1, scope: !6093)
!6722 = !{i64 2147665257, i64 2147665300, i64 2147665340}
!6723 = !DILocation(line: 325, column: 1, scope: !6093)
!6724 = !{i64 2147665447, i64 2147665490, i64 2147665530}
!6725 = !DILocation(line: 326, column: 1, scope: !6093)
!6726 = !{i64 2147665661, i64 2147665704, i64 2147665744}
!6727 = !DILocation(line: 327, column: 1, scope: !6093)
!6728 = !{i64 2147665860, i64 2147665903, i64 2147665943}
!6729 = !DILocation(line: 328, column: 1, scope: !6093)
!6730 = !{i64 2147666047, i64 2147666090, i64 2147666130}
!6731 = !DILocation(line: 329, column: 1, scope: !6093)
!6732 = !{i64 2147666255, i64 2147666298, i64 2147666338}
!6733 = !DILocation(line: 330, column: 1, scope: !6093)
!6734 = !{i64 2147666484, i64 2147666527, i64 2147666567}
!6735 = !DILocation(line: 331, column: 1, scope: !6093)
!6736 = !{i64 2147666686, i64 2147666729, i64 2147666769}
!6737 = !DILocation(line: 332, column: 1, scope: !6093)
!6738 = !{i64 2147666885, i64 2147666928, i64 2147666968}
!6739 = !DILocation(line: 333, column: 1, scope: !6093)
!6740 = !{i64 2147667102, i64 2147667145, i64 2147667185}
!6741 = !DILocation(line: 335, column: 1, scope: !6093)
!6742 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !578, file: !578, line: 30, type: !584, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6743)
!6743 = !{!6744, !6745}
!6744 = !DILocalVariable(name: "arg", arg: 1, scope: !6742, file: !578, line: 30, type: !586)
!6745 = !DILocalVariable(name: "key", scope: !6742, file: !578, line: 32, type: !113)
!6746 = !DILocation(line: 0, scope: !6742)
!6747 = !DILocation(line: 37, column: 2, scope: !6742)
!6748 = !DILocation(line: 38, column: 2, scope: !6742)
!6749 = !DILocation(line: 55, column: 2, scope: !6750, inlinedAt: !6754)
!6750 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6751)
!6751 = !{!6752, !6753}
!6752 = !DILocalVariable(name: "key", scope: !6750, file: !4080, line: 44, type: !32)
!6753 = !DILocalVariable(name: "tmp", scope: !6750, file: !4080, line: 53, type: !32)
!6754 = distinct !DILocation(line: 40, column: 8, scope: !6742)
!6755 = !{i64 2149121}
!6756 = !DILocation(line: 0, scope: !6750, inlinedAt: !6754)
!6757 = !DILocalVariable(name: "key", arg: 1, scope: !6758, file: !4080, line: 84, type: !32)
!6758 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6759)
!6759 = !{!6757}
!6760 = !DILocation(line: 0, scope: !6758, inlinedAt: !6761)
!6761 = distinct !DILocation(line: 47, column: 2, scope: !6742)
!6762 = !DILocation(line: 95, column: 2, scope: !6758, inlinedAt: !6761)
!6763 = !{i64 2149938}
!6764 = !DILocation(line: 51, column: 18, scope: !6742)
!6765 = !DILocation(line: 53, column: 2, scope: !6742)
!6766 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6767, file: !6767, line: 1609, type: !3406, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !437)
!6767 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6768 = !DILocation(line: 1611, column: 3, scope: !6766)
!6769 = !DILocation(line: 1612, column: 1, scope: !6766)
!6770 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6767, file: !6767, line: 1629, type: !3406, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !437)
!6771 = !DILocation(line: 1631, column: 3, scope: !6770)
!6772 = !DILocation(line: 1632, column: 1, scope: !6770)
!6773 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !607, file: !607, line: 26, type: !613, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !604, retainedNodes: !6774)
!6774 = !{!6775}
!6775 = !DILocalVariable(name: "dev", arg: 1, scope: !6773, file: !607, line: 26, type: !615)
!6776 = !DILocation(line: 0, scope: !6773)
!6777 = !DILocation(line: 68, column: 2, scope: !6773)
!6778 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6779, file: !6779, line: 14, type: !5074, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !6780)
!6779 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6780 = !{!6781, !6782}
!6781 = !DILocalVariable(name: "fmt", arg: 1, scope: !6778, file: !6779, line: 14, type: !105)
!6782 = !DILocalVariable(name: "ap", scope: !6778, file: !6779, line: 16, type: !6783)
!6783 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4141, line: 99, baseType: !6784)
!6784 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4141, line: 40, baseType: !6785)
!6785 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6779, baseType: !6786)
!6786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6787)
!6787 = !{!6788}
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6786, file: !6779, line: 16, baseType: !104, size: 32)
!6789 = !DILocation(line: 0, scope: !6778)
!6790 = !DILocation(line: 16, column: 2, scope: !6778)
!6791 = !DILocation(line: 16, column: 10, scope: !6778)
!6792 = !DILocation(line: 18, column: 2, scope: !6778)
!6793 = !DILocation(line: 19, column: 2, scope: !6778)
!6794 = !DILocation(line: 20, column: 2, scope: !6778)
!6795 = !DILocation(line: 21, column: 1, scope: !6778)
!6796 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6779, file: !6779, line: 23, type: !6797, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !6799)
!6797 = !DISubroutineType(types: !6798)
!6798 = !{null, !105, !6783}
!6799 = !{!6800, !6801}
!6800 = !DILocalVariable(name: "fmt", arg: 1, scope: !6796, file: !6779, line: 23, type: !105)
!6801 = !DILocalVariable(name: "ap", arg: 2, scope: !6796, file: !6779, line: 23, type: !6783)
!6802 = !DILocation(line: 0, scope: !6796)
!6803 = !DILocation(line: 25, column: 2, scope: !6796)
!6804 = !DILocation(line: 26, column: 1, scope: !6796)
!6805 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6779, file: !6779, line: 52, type: !6806, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !6808)
!6806 = !DISubroutineType(types: !6807)
!6807 = !{null, !108, !13, !439}
!6808 = !{!6809, !6810, !6811, !6812}
!6809 = !DILocalVariable(name: "level", arg: 1, scope: !6805, file: !6779, line: 52, type: !108)
!6810 = !DILocalVariable(name: "data", arg: 2, scope: !6805, file: !6779, line: 52, type: !13)
!6811 = !DILocalVariable(name: "size", arg: 3, scope: !6805, file: !6779, line: 52, type: !439)
!6812 = !DILocalVariable(name: "data_buffer", scope: !6805, file: !6779, line: 54, type: !105)
!6813 = !DILocation(line: 0, scope: !6805)
!6814 = !DILocation(line: 55, column: 14, scope: !6805)
!6815 = !DILocation(line: 55, column: 2, scope: !6805)
!6816 = !DILocation(line: 56, column: 3, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6805, file: !6779, line: 55, column: 20)
!6818 = !DILocation(line: 57, column: 3, scope: !6817)
!6819 = !DILocation(line: 59, column: 7, scope: !6817)
!6820 = distinct !{!6820, !6815, !6821}
!6821 = !DILocation(line: 65, column: 2, scope: !6805)
!6822 = !DILocation(line: 66, column: 1, scope: !6805)
!6823 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3692, file: !3692, line: 175, type: !3693, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !6824)
!6824 = !{!6825}
!6825 = !DILocalVariable(name: "level", arg: 1, scope: !6823, file: !3692, line: 175, type: !108)
!6826 = !DILocation(line: 0, scope: !6823)
!6827 = !DILocation(line: 177, column: 2, scope: !6823)
!6828 = !DILocation(line: 189, column: 1, scope: !6823)
!6829 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6779, file: !6779, line: 28, type: !6830, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !6832)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{null, !105, !439}
!6832 = !{!6833, !6834, !6835, !6837, !6839}
!6833 = !DILocalVariable(name: "data", arg: 1, scope: !6829, file: !6779, line: 28, type: !105)
!6834 = !DILocalVariable(name: "length", arg: 2, scope: !6829, file: !6779, line: 28, type: !439)
!6835 = !DILocalVariable(name: "i", scope: !6836, file: !6779, line: 30, type: !439)
!6836 = distinct !DILexicalBlock(scope: !6829, file: !6779, line: 30, column: 2)
!6837 = !DILocalVariable(name: "i", scope: !6838, file: !6779, line: 40, type: !439)
!6838 = distinct !DILexicalBlock(scope: !6829, file: !6779, line: 40, column: 2)
!6839 = !DILocalVariable(name: "c", scope: !6840, file: !6779, line: 42, type: !165)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6779, line: 41, column: 19)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !6779, line: 41, column: 7)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !6779, line: 40, column: 54)
!6843 = distinct !DILexicalBlock(scope: !6838, file: !6779, line: 40, column: 2)
!6844 = !DILocation(line: 0, scope: !6829)
!6845 = !DILocation(line: 0, scope: !6836)
!6846 = !DILocation(line: 30, column: 2, scope: !6836)
!6847 = !DILocation(line: 38, column: 2, scope: !6829)
!6848 = !DILocation(line: 0, scope: !6838)
!6849 = !DILocation(line: 40, column: 2, scope: !6838)
!6850 = !DILocation(line: 31, column: 9, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6779, line: 31, column: 7)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6779, line: 30, column: 54)
!6853 = distinct !DILexicalBlock(scope: !6836, file: !6779, line: 30, column: 2)
!6854 = !DILocation(line: 31, column: 7, scope: !6852)
!6855 = !DILocation(line: 32, column: 35, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6851, file: !6779, line: 31, column: 19)
!6857 = !DILocation(line: 32, column: 20, scope: !6856)
!6858 = !DILocation(line: 32, column: 4, scope: !6856)
!6859 = !DILocation(line: 33, column: 3, scope: !6856)
!6860 = !DILocation(line: 34, column: 4, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6851, file: !6779, line: 33, column: 10)
!6862 = !DILocation(line: 30, column: 50, scope: !6853)
!6863 = !DILocation(line: 30, column: 24, scope: !6853)
!6864 = distinct !{!6864, !6846, !6865}
!6865 = !DILocation(line: 36, column: 2, scope: !6836)
!6866 = !DILocation(line: 49, column: 2, scope: !6829)
!6867 = !DILocation(line: 50, column: 1, scope: !6829)
!6868 = !DILocation(line: 41, column: 9, scope: !6841)
!6869 = !DILocation(line: 41, column: 7, scope: !6842)
!6870 = !DILocation(line: 42, column: 22, scope: !6840)
!6871 = !DILocation(line: 0, scope: !6840)
!6872 = !DILocation(line: 44, column: 25, scope: !6840)
!6873 = !DILocation(line: 44, column: 17, scope: !6840)
!6874 = !DILocation(line: 44, column: 33, scope: !6840)
!6875 = !DILocation(line: 44, column: 4, scope: !6840)
!6876 = !DILocation(line: 45, column: 3, scope: !6840)
!6877 = !DILocation(line: 46, column: 4, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6841, file: !6779, line: 45, column: 10)
!6879 = !DILocation(line: 40, column: 50, scope: !6843)
!6880 = !DILocation(line: 40, column: 24, scope: !6843)
!6881 = distinct !{!6881, !6849, !6882}
!6882 = !DILocation(line: 48, column: 2, scope: !6838)
!6883 = distinct !DISubprogram(name: "isprint", scope: !5866, file: !5866, line: 37, type: !557, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !6884)
!6884 = !{!6885}
!6885 = !DILocalVariable(name: "c", arg: 1, scope: !6883, file: !5866, line: 37, type: !108)
!6886 = !DILocation(line: 0, scope: !6883)
!6887 = !DILocation(line: 39, column: 38, scope: !6883)
!6888 = !DILocation(line: 39, column: 2, scope: !6883)
!6889 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6890, file: !6890, line: 57, type: !6891, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !6937)
!6890 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6891 = !DISubroutineType(types: !6892)
!6892 = !{null, !32, !6893}
!6893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6894, size: 32)
!6894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6895)
!6895 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2989, line: 141, baseType: !6896)
!6896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2989, line: 97, size: 256, elements: !6897)
!6897 = !{!6898}
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6896, file: !2989, line: 107, baseType: !6899, size: 256)
!6899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2989, line: 98, size: 256, elements: !6900)
!6900 = !{!6901, !6906, !6911, !6916, !6921, !6926, !6931, !6936}
!6901 = !DIDerivedType(tag: DW_TAG_member, scope: !6899, file: !2989, line: 99, baseType: !6902, size: 32)
!6902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6899, file: !2989, line: 99, size: 32, elements: !6903)
!6903 = !{!6904, !6905}
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6902, file: !2989, line: 99, baseType: !113, size: 32)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6902, file: !2989, line: 99, baseType: !113, size: 32)
!6906 = !DIDerivedType(tag: DW_TAG_member, scope: !6899, file: !2989, line: 100, baseType: !6907, size: 32, offset: 32)
!6907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6899, file: !2989, line: 100, size: 32, elements: !6908)
!6908 = !{!6909, !6910}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6907, file: !2989, line: 100, baseType: !113, size: 32)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6907, file: !2989, line: 100, baseType: !113, size: 32)
!6911 = !DIDerivedType(tag: DW_TAG_member, scope: !6899, file: !2989, line: 101, baseType: !6912, size: 32, offset: 64)
!6912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6899, file: !2989, line: 101, size: 32, elements: !6913)
!6913 = !{!6914, !6915}
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6912, file: !2989, line: 101, baseType: !113, size: 32)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6912, file: !2989, line: 101, baseType: !113, size: 32)
!6916 = !DIDerivedType(tag: DW_TAG_member, scope: !6899, file: !2989, line: 102, baseType: !6917, size: 32, offset: 96)
!6917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6899, file: !2989, line: 102, size: 32, elements: !6918)
!6918 = !{!6919, !6920}
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6917, file: !2989, line: 102, baseType: !113, size: 32)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6917, file: !2989, line: 102, baseType: !113, size: 32)
!6921 = !DIDerivedType(tag: DW_TAG_member, scope: !6899, file: !2989, line: 103, baseType: !6922, size: 32, offset: 128)
!6922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6899, file: !2989, line: 103, size: 32, elements: !6923)
!6923 = !{!6924, !6925}
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6922, file: !2989, line: 103, baseType: !113, size: 32)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6922, file: !2989, line: 103, baseType: !113, size: 32)
!6926 = !DIDerivedType(tag: DW_TAG_member, scope: !6899, file: !2989, line: 104, baseType: !6927, size: 32, offset: 160)
!6927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6899, file: !2989, line: 104, size: 32, elements: !6928)
!6928 = !{!6929, !6930}
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6927, file: !2989, line: 104, baseType: !113, size: 32)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6927, file: !2989, line: 104, baseType: !113, size: 32)
!6931 = !DIDerivedType(tag: DW_TAG_member, scope: !6899, file: !2989, line: 105, baseType: !6932, size: 32, offset: 192)
!6932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6899, file: !2989, line: 105, size: 32, elements: !6933)
!6933 = !{!6934, !6935}
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6932, file: !2989, line: 105, baseType: !113, size: 32)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6932, file: !2989, line: 105, baseType: !113, size: 32)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6899, file: !2989, line: 106, baseType: !113, size: 32, offset: 224)
!6937 = !{!6938, !6939}
!6938 = !DILocalVariable(name: "reason", arg: 1, scope: !6889, file: !6890, line: 57, type: !32)
!6939 = !DILocalVariable(name: "esf", arg: 2, scope: !6889, file: !6890, line: 57, type: !6893)
!6940 = !DILocation(line: 0, scope: !6889)
!6941 = !DILocation(line: 60, column: 10, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6889, file: !6890, line: 60, column: 6)
!6943 = !DILocation(line: 60, column: 6, scope: !6889)
!6944 = !DILocation(line: 61, column: 3, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6942, file: !6890, line: 60, column: 19)
!6946 = !DILocation(line: 62, column: 2, scope: !6945)
!6947 = !DILocation(line: 63, column: 2, scope: !6889)
!6948 = !DILocation(line: 64, column: 1, scope: !6889)
!6949 = distinct !DISubprogram(name: "esf_dump", scope: !6890, file: !6890, line: 20, type: !6950, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !6952)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{null, !6893}
!6952 = !{!6953}
!6953 = !DILocalVariable(name: "esf", arg: 1, scope: !6949, file: !6890, line: 20, type: !6893)
!6954 = !DILocation(line: 0, scope: !6949)
!6955 = !DILocation(line: 22, column: 2, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6890, line: 22, column: 2)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6890, line: 22, column: 2)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6890, line: 22, column: 2)
!6959 = distinct !DILexicalBlock(scope: !6949, file: !6890, line: 22, column: 2)
!6960 = !DILocation(line: 24, column: 2, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6890, line: 24, column: 2)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6890, line: 24, column: 2)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !6890, line: 24, column: 2)
!6964 = distinct !DILexicalBlock(scope: !6949, file: !6890, line: 24, column: 2)
!6965 = !DILocation(line: 26, column: 2, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6890, line: 26, column: 2)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6890, line: 26, column: 2)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6890, line: 26, column: 2)
!6969 = distinct !DILexicalBlock(scope: !6949, file: !6890, line: 26, column: 2)
!6970 = !DILocation(line: 53, column: 2, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6890, line: 53, column: 2)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6890, line: 53, column: 2)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !6890, line: 53, column: 2)
!6974 = distinct !DILexicalBlock(scope: !6949, file: !6890, line: 53, column: 2)
!6975 = !DILocation(line: 55, column: 1, scope: !6949)
!6976 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6890, file: !6890, line: 82, type: !6977, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !6992)
!6977 = !DISubroutineType(types: !6978)
!6978 = !{null, !6893, !6979}
!6979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6980, size: 32)
!6980 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !712, line: 37, baseType: !6981)
!6981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !6982)
!6982 = !{!6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990, !6991}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6981, file: !712, line: 26, baseType: !113, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6981, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6981, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6981, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6981, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6981, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6981, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6981, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6981, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!6992 = !{!6993, !6994, !6995}
!6993 = !DILocalVariable(name: "esf", arg: 1, scope: !6976, file: !6890, line: 82, type: !6893)
!6994 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6976, file: !6890, line: 82, type: !6979)
!6995 = !DILocalVariable(name: "reason", scope: !6976, file: !6890, line: 88, type: !32)
!6996 = !DILocation(line: 0, scope: !6976)
!6997 = !DILocation(line: 88, column: 35, scope: !6976)
!6998 = !DILocation(line: 108, column: 2, scope: !6976)
!6999 = !DILocation(line: 131, column: 1, scope: !6976)
!7000 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6890, file: !6890, line: 133, type: !7001, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7003)
!7001 = !DISubroutineType(types: !7002)
!7002 = !{null, !104}
!7003 = !{!7004, !7005, !7006}
!7004 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7000, file: !6890, line: 133, type: !104)
!7005 = !DILocalVariable(name: "ssf_contents", scope: !7000, file: !6890, line: 135, type: !1229)
!7006 = !DILocalVariable(name: "oops_esf", scope: !7000, file: !6890, line: 136, type: !6895)
!7007 = !DILocation(line: 0, scope: !7000)
!7008 = !DILocation(line: 136, column: 2, scope: !7000)
!7009 = !DILocation(line: 136, column: 15, scope: !7000)
!7010 = !DILocation(line: 139, column: 22, scope: !7000)
!7011 = !DILocation(line: 139, column: 17, scope: !7000)
!7012 = !DILocation(line: 139, column: 20, scope: !7000)
!7013 = !DILocation(line: 141, column: 2, scope: !7000)
!7014 = !DILocation(line: 142, column: 2, scope: !7000)
!7015 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7016, file: !7016, line: 40, type: !4093, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7017)
!7016 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7017 = !{!7018}
!7018 = !DILocalVariable(name: "irq", arg: 1, scope: !7015, file: !7016, line: 40, type: !32)
!7019 = !DILocation(line: 0, scope: !7015)
!7020 = !DILocation(line: 42, column: 2, scope: !7015)
!7021 = !DILocation(line: 43, column: 1, scope: !7015)
!7022 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !788, file: !788, line: 1684, type: !7023, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7025)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{null, !1168}
!7025 = !{!7026}
!7026 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7022, file: !788, line: 1684, type: !1168)
!7027 = !DILocation(line: 0, scope: !7022)
!7028 = !DILocation(line: 1686, column: 23, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7022, file: !788, line: 1686, column: 7)
!7030 = !DILocation(line: 1686, column: 7, scope: !7022)
!7031 = !DILocation(line: 1688, column: 5, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7029, file: !788, line: 1687, column: 3)
!7033 = !{i64 2151041058}
!7034 = !DILocation(line: 1689, column: 81, scope: !7032)
!7035 = !DILocation(line: 1689, column: 60, scope: !7032)
!7036 = !DILocation(line: 1689, column: 34, scope: !7032)
!7037 = !DILocation(line: 1689, column: 5, scope: !7032)
!7038 = !DILocation(line: 1689, column: 43, scope: !7032)
!7039 = !DILocation(line: 1690, column: 5, scope: !7032)
!7040 = !{i64 2151041172}
!7041 = !DILocation(line: 1691, column: 3, scope: !7032)
!7042 = !DILocation(line: 1692, column: 1, scope: !7022)
!7043 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7016, file: !7016, line: 45, type: !4093, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7044)
!7044 = !{!7045}
!7045 = !DILocalVariable(name: "irq", arg: 1, scope: !7043, file: !7016, line: 45, type: !32)
!7046 = !DILocation(line: 0, scope: !7043)
!7047 = !DILocation(line: 47, column: 2, scope: !7043)
!7048 = !DILocation(line: 48, column: 1, scope: !7043)
!7049 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !788, file: !788, line: 1722, type: !7023, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7050)
!7050 = !{!7051}
!7051 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7049, file: !788, line: 1722, type: !1168)
!7052 = !DILocation(line: 0, scope: !7049)
!7053 = !DILocation(line: 1724, column: 23, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7049, file: !788, line: 1724, column: 7)
!7055 = !DILocation(line: 1724, column: 7, scope: !7049)
!7056 = !DILocation(line: 1726, column: 81, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7054, file: !788, line: 1725, column: 3)
!7058 = !DILocation(line: 1726, column: 60, scope: !7057)
!7059 = !DILocation(line: 1726, column: 34, scope: !7057)
!7060 = !DILocation(line: 1726, column: 5, scope: !7057)
!7061 = !DILocation(line: 1726, column: 43, scope: !7057)
!7062 = !DILocation(line: 271, column: 3, scope: !7063, inlinedAt: !7065)
!7063 = distinct !DISubprogram(name: "__DSB", scope: !7064, file: !7064, line: 269, type: !3406, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !437)
!7064 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7065 = distinct !DILocation(line: 1727, column: 5, scope: !7057)
!7066 = !{i64 3495441}
!7067 = !DILocation(line: 260, column: 3, scope: !7068, inlinedAt: !7069)
!7068 = distinct !DISubprogram(name: "__ISB", scope: !7064, file: !7064, line: 258, type: !3406, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !437)
!7069 = distinct !DILocation(line: 1728, column: 5, scope: !7057)
!7070 = !{i64 3495158}
!7071 = !DILocation(line: 1729, column: 3, scope: !7057)
!7072 = !DILocation(line: 1730, column: 1, scope: !7049)
!7073 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7016, file: !7016, line: 50, type: !7074, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7076)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{!108, !32}
!7076 = !{!7077}
!7077 = !DILocalVariable(name: "irq", arg: 1, scope: !7073, file: !7016, line: 50, type: !32)
!7078 = !DILocation(line: 0, scope: !7073)
!7079 = !DILocation(line: 52, column: 20, scope: !7073)
!7080 = !DILocation(line: 52, column: 9, scope: !7073)
!7081 = !DILocation(line: 52, column: 41, scope: !7073)
!7082 = !DILocation(line: 52, column: 39, scope: !7073)
!7083 = !DILocation(line: 52, column: 2, scope: !7073)
!7084 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7016, file: !7016, line: 64, type: !7085, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7087)
!7085 = !DISubroutineType(types: !7086)
!7086 = !{null, !32, !32, !113}
!7087 = !{!7088, !7089, !7090}
!7088 = !DILocalVariable(name: "irq", arg: 1, scope: !7084, file: !7016, line: 64, type: !32)
!7089 = !DILocalVariable(name: "prio", arg: 2, scope: !7084, file: !7016, line: 64, type: !32)
!7090 = !DILocalVariable(name: "flags", arg: 3, scope: !7084, file: !7016, line: 64, type: !113)
!7091 = !DILocation(line: 0, scope: !7084)
!7092 = !DILocation(line: 83, column: 8, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !7016, line: 82, column: 9)
!7094 = distinct !DILexicalBlock(scope: !7084, file: !7016, line: 76, column: 6)
!7095 = !DILocation(line: 95, column: 2, scope: !7084)
!7096 = !DILocation(line: 96, column: 1, scope: !7084)
!7097 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !788, file: !788, line: 1814, type: !7098, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7100)
!7098 = !DISubroutineType(types: !7099)
!7099 = !{null, !1168, !113}
!7100 = !{!7101, !7102}
!7101 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7097, file: !788, line: 1814, type: !1168)
!7102 = !DILocalVariable(name: "priority", arg: 2, scope: !7097, file: !788, line: 1814, type: !113)
!7103 = !DILocation(line: 0, scope: !7097)
!7104 = !DILocation(line: 0, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7097, file: !788, line: 1816, column: 7)
!7106 = !DILocation(line: 1816, column: 7, scope: !7097)
!7107 = !DILocation(line: 1824, column: 1, scope: !7097)
!7108 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7016, file: !7016, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7109)
!7109 = !{!7110}
!7110 = !DILocalVariable(name: "unused", arg: 1, scope: !7108, file: !7016, line: 155, type: !13)
!7111 = !DILocation(line: 0, scope: !7108)
!7112 = !DILocation(line: 159, column: 2, scope: !7108)
!7113 = !DILocation(line: 160, column: 1, scope: !7108)
!7114 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7115, file: !7115, line: 87, type: !3406, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2926, retainedNodes: !437)
!7115 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7116 = !DILocation(line: 89, column: 2, scope: !7114)
!7117 = !DILocation(line: 90, column: 2, scope: !7114)
!7118 = !DILocation(line: 91, column: 1, scope: !7114)
!7119 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7115, file: !7115, line: 23, type: !3406, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7120 = !DISubprogram(name: "z_arm_int_exit", scope: !7121, file: !7121, line: 153, type: !3406, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7121 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7122 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7123, file: !7123, line: 256, type: !3406, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !437)
!7123 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7124 = !DILocation(line: 258, column: 2, scope: !7122)
!7125 = !DILocation(line: 260, column: 2, scope: !7122)
!7126 = !DILocation(line: 262, column: 2, scope: !7122)
!7127 = !DILocation(line: 263, column: 2, scope: !7122)
!7128 = !DILocation(line: 267, column: 2, scope: !7122)
!7129 = !DILocation(line: 268, column: 2, scope: !7122)
!7130 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7123, file: !7123, line: 53, type: !3406, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !437)
!7131 = !DILocation(line: 55, column: 12, scope: !7130)
!7132 = !DILocation(line: 271, column: 3, scope: !7133, inlinedAt: !7134)
!7133 = distinct !DISubprogram(name: "__DSB", scope: !7064, file: !7064, line: 269, type: !3406, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !437)
!7134 = distinct !DILocation(line: 56, column: 2, scope: !7130)
!7135 = !{i64 3494112}
!7136 = !DILocation(line: 260, column: 3, scope: !7137, inlinedAt: !7138)
!7137 = distinct !DISubprogram(name: "__ISB", scope: !7064, file: !7064, line: 258, type: !3406, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !437)
!7138 = distinct !DILocation(line: 57, column: 2, scope: !7130)
!7139 = !{i64 3493829}
!7140 = !DILocation(line: 58, column: 1, scope: !7130)
!7141 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7123, file: !7123, line: 96, type: !3406, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !437)
!7142 = !DILocation(line: 103, column: 13, scope: !7141)
!7143 = !DILocation(line: 975, column: 3, scope: !7144, inlinedAt: !7149)
!7144 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7064, file: !7064, line: 971, type: !7145, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !7147)
!7145 = !DISubroutineType(types: !7146)
!7146 = !{!113}
!7147 = !{!7148}
!7148 = !DILocalVariable(name: "result", scope: !7144, file: !7064, line: 973, type: !113)
!7149 = distinct !DILocation(line: 189, column: 16, scope: !7141)
!7150 = !{i64 3514942}
!7151 = !DILocation(line: 0, scope: !7144, inlinedAt: !7149)
!7152 = !DILocation(line: 189, column: 32, scope: !7141)
!7153 = !DILocalVariable(name: "control", arg: 1, scope: !7154, file: !7064, line: 1001, type: !113)
!7154 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7064, file: !7064, line: 1001, type: !7155, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !7157)
!7155 = !DISubroutineType(types: !7156)
!7156 = !{null, !113}
!7157 = !{!7153}
!7158 = !DILocation(line: 0, scope: !7154, inlinedAt: !7159)
!7159 = distinct !DILocation(line: 189, column: 2, scope: !7141)
!7160 = !DILocation(line: 1003, column: 3, scope: !7154, inlinedAt: !7159)
!7161 = !{i64 3515662}
!7162 = !DILocation(line: 260, column: 3, scope: !7137, inlinedAt: !7163)
!7163 = distinct !DILocation(line: 1004, column: 3, scope: !7154, inlinedAt: !7159)
!7164 = !DILocation(line: 191, column: 1, scope: !7141)
!7165 = distinct !DISubprogram(name: "arch_swap", scope: !7166, file: !7166, line: 33, type: !7074, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7167)
!7166 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7167 = !{!7168}
!7168 = !DILocalVariable(name: "key", arg: 1, scope: !7165, file: !7166, line: 33, type: !32)
!7169 = !DILocation(line: 0, scope: !7165)
!7170 = !DILocation(line: 36, column: 2, scope: !7165)
!7171 = !DILocation(line: 36, column: 17, scope: !7165)
!7172 = !DILocation(line: 36, column: 25, scope: !7165)
!7173 = !DILocation(line: 37, column: 37, scope: !7165)
!7174 = !DILocation(line: 37, column: 17, scope: !7165)
!7175 = !DILocation(line: 37, column: 35, scope: !7165)
!7176 = !DILocation(line: 41, column: 12, scope: !7165)
!7177 = !DILocalVariable(name: "key", arg: 1, scope: !7178, file: !4080, line: 84, type: !32)
!7178 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7179)
!7179 = !{!7177}
!7180 = !DILocation(line: 0, scope: !7178, inlinedAt: !7181)
!7181 = distinct !DILocation(line: 44, column: 2, scope: !7165)
!7182 = !DILocation(line: 95, column: 2, scope: !7178, inlinedAt: !7181)
!7183 = !{i64 2256176}
!7184 = !DILocation(line: 53, column: 9, scope: !7165)
!7185 = !DILocation(line: 53, column: 24, scope: !7165)
!7186 = !DILocation(line: 53, column: 2, scope: !7165)
!7187 = distinct !DISubprogram(name: "arch_new_thread", scope: !7188, file: !7188, line: 56, type: !7189, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !7296)
!7188 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7189 = !DISubroutineType(types: !7190)
!7190 = !{null, !7191, !7291, !443, !5172, !104, !104, !104}
!7191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7192, size: 32)
!7192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !7193)
!7193 = !{!7194, !7252, !7264, !7265, !7266, !7267, !7273, !7286}
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7192, file: !645, line: 247, baseType: !7195, size: 384)
!7195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !7196)
!7196 = !{!7197, !7221, !7228, !7229, !7230, !7239, !7240, !7241}
!7197 = !DIDerivedType(tag: DW_TAG_member, scope: !7195, file: !645, line: 60, baseType: !7198, size: 64)
!7198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7195, file: !645, line: 60, size: 64, elements: !7199)
!7199 = !{!7200, !7215}
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7198, file: !645, line: 61, baseType: !7201, size: 64)
!7201 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7202)
!7202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7203)
!7203 = !{!7204, !7210}
!7204 = !DIDerivedType(tag: DW_TAG_member, scope: !7202, file: !367, line: 38, baseType: !7205, size: 32)
!7205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7202, file: !367, line: 38, size: 32, elements: !7206)
!7206 = !{!7207, !7209}
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7205, file: !367, line: 39, baseType: !7208, size: 32)
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7202, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7205, file: !367, line: 40, baseType: !7208, size: 32)
!7210 = !DIDerivedType(tag: DW_TAG_member, scope: !7202, file: !367, line: 42, baseType: !7211, size: 32, offset: 32)
!7211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7202, file: !367, line: 42, size: 32, elements: !7212)
!7212 = !{!7213, !7214}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7211, file: !367, line: 43, baseType: !7208, size: 32)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7211, file: !367, line: 44, baseType: !7208, size: 32)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7198, file: !645, line: 62, baseType: !7216, size: 64)
!7216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !7217)
!7217 = !{!7218}
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7216, file: !670, line: 50, baseType: !7219, size: 64)
!7219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7220, size: 64, elements: !675)
!7220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7216, size: 32)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7195, file: !645, line: 68, baseType: !7222, size: 32, offset: 64)
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7223, size: 32)
!7223 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7224)
!7224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7225)
!7225 = !{!7226}
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7224, file: !363, line: 232, baseType: !7227, size: 64)
!7227 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7202)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7195, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7195, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!7230 = !DIDerivedType(tag: DW_TAG_member, scope: !7195, file: !645, line: 90, baseType: !7231, size: 16, offset: 112)
!7231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7195, file: !645, line: 90, size: 16, elements: !7232)
!7232 = !{!7233, !7238}
!7233 = !DIDerivedType(tag: DW_TAG_member, scope: !7231, file: !645, line: 91, baseType: !7234, size: 16)
!7234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7231, file: !645, line: 91, size: 16, elements: !7235)
!7235 = !{!7236, !7237}
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7234, file: !645, line: 96, baseType: !693, size: 8)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7234, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7231, file: !645, line: 100, baseType: !168, size: 16)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7195, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7195, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7195, file: !645, line: 131, baseType: !7242, size: 192, offset: 192)
!7242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7243)
!7243 = !{!7244, !7245, !7251}
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7242, file: !363, line: 245, baseType: !7201, size: 64)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7242, file: !363, line: 246, baseType: !7246, size: 32, offset: 64)
!7246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7247)
!7247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7248, size: 32)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{null, !7250}
!7250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7242, size: 32)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7242, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7192, file: !645, line: 250, baseType: !7253, size: 288, offset: 384)
!7253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !7254)
!7254 = !{!7255, !7256, !7257, !7258, !7259, !7260, !7261, !7262, !7263}
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7253, file: !712, line: 26, baseType: !113, size: 32)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7253, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7253, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7253, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7253, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7253, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7253, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7253, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7253, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7192, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7192, file: !645, line: 256, baseType: !7223, size: 64, offset: 704)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7192, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7192, file: !645, line: 300, baseType: !7268, size: 96, offset: 800)
!7268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !7269)
!7269 = !{!7270, !7271, !7272}
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7268, file: !645, line: 153, baseType: !22, size: 32)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7268, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7268, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7192, file: !645, line: 325, baseType: !7274, size: 32, offset: 896)
!7274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7275, size: 32)
!7275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !7276)
!7276 = !{!7277, !7283, !7284}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7275, file: !359, line: 5074, baseType: !7278, size: 96)
!7278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !7279)
!7279 = !{!7280, !7281, !7282}
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7278, file: !738, line: 57, baseType: !741, size: 32)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7278, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7278, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7275, file: !359, line: 5075, baseType: !7223, size: 64, offset: 96)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7275, file: !359, line: 5076, baseType: !7285, offset: 160)
!7285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7192, file: !645, line: 343, baseType: !7287, size: 64, offset: 928)
!7287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !7288)
!7288 = !{!7289, !7290}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7287, file: !712, line: 63, baseType: !113, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7287, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!7291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7292, size: 32)
!7292 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5173, line: 44, baseType: !7293)
!7293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2372, line: 47, size: 8, elements: !7294)
!7294 = !{!7295}
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7293, file: !2372, line: 48, baseType: !107, size: 8)
!7296 = !{!7297, !7298, !7299, !7300, !7301, !7302, !7303, !7304}
!7297 = !DILocalVariable(name: "thread", arg: 1, scope: !7187, file: !7188, line: 56, type: !7191)
!7298 = !DILocalVariable(name: "stack", arg: 2, scope: !7187, file: !7188, line: 56, type: !7291)
!7299 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7187, file: !7188, line: 57, type: !443)
!7300 = !DILocalVariable(name: "entry", arg: 4, scope: !7187, file: !7188, line: 57, type: !5172)
!7301 = !DILocalVariable(name: "p1", arg: 5, scope: !7187, file: !7188, line: 58, type: !104)
!7302 = !DILocalVariable(name: "p2", arg: 6, scope: !7187, file: !7188, line: 58, type: !104)
!7303 = !DILocalVariable(name: "p3", arg: 7, scope: !7187, file: !7188, line: 58, type: !104)
!7304 = !DILocalVariable(name: "iframe", scope: !7187, file: !7188, line: 60, type: !2987)
!7305 = !DILocation(line: 0, scope: !7187)
!7306 = !DILocation(line: 85, column: 11, scope: !7187)
!7307 = !DILocation(line: 93, column: 10, scope: !7187)
!7308 = !DILocation(line: 98, column: 13, scope: !7187)
!7309 = !DILocation(line: 100, column: 15, scope: !7187)
!7310 = !DILocation(line: 100, column: 10, scope: !7187)
!7311 = !DILocation(line: 100, column: 13, scope: !7187)
!7312 = !DILocation(line: 101, column: 15, scope: !7187)
!7313 = !DILocation(line: 101, column: 10, scope: !7187)
!7314 = !DILocation(line: 101, column: 13, scope: !7187)
!7315 = !DILocation(line: 102, column: 15, scope: !7187)
!7316 = !DILocation(line: 102, column: 10, scope: !7187)
!7317 = !DILocation(line: 102, column: 13, scope: !7187)
!7318 = !DILocation(line: 103, column: 15, scope: !7187)
!7319 = !DILocation(line: 103, column: 10, scope: !7187)
!7320 = !DILocation(line: 103, column: 13, scope: !7187)
!7321 = !DILocation(line: 106, column: 10, scope: !7187)
!7322 = !DILocation(line: 106, column: 15, scope: !7187)
!7323 = !DILocation(line: 122, column: 29, scope: !7187)
!7324 = !DILocation(line: 122, column: 23, scope: !7187)
!7325 = !DILocation(line: 122, column: 27, scope: !7187)
!7326 = !DILocation(line: 123, column: 15, scope: !7187)
!7327 = !DILocation(line: 123, column: 23, scope: !7187)
!7328 = !DILocation(line: 143, column: 1, scope: !7187)
!7329 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7188, file: !7188, line: 385, type: !7330, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !7333)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{!113, !7332, !7332}
!7332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!7333 = !{!7334, !7335, !7336, !7339}
!7334 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7329, file: !7188, line: 385, type: !7332)
!7335 = !DILocalVariable(name: "psp", arg: 2, scope: !7329, file: !7188, line: 385, type: !7332)
!7336 = !DILocalVariable(name: "thread", scope: !7329, file: !7188, line: 388, type: !7337)
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 32)
!7338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7192)
!7339 = !DILocalVariable(name: "guard_len", scope: !7329, file: !7188, line: 405, type: !113)
!7340 = !DILocation(line: 0, scope: !7329)
!7341 = !DILocation(line: 388, column: 34, scope: !7329)
!7342 = !DILocation(line: 390, column: 13, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7329, file: !7188, line: 390, column: 6)
!7344 = !DILocation(line: 390, column: 6, scope: !7329)
!7345 = !DILocation(line: 438, column: 6, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7329, file: !7188, line: 438, column: 6)
!7347 = !DILocation(line: 438, column: 6, scope: !7329)
!7348 = !DILocation(line: 442, column: 3, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7346, file: !7188, line: 440, column: 22)
!7350 = !DILocation(line: 455, column: 1, scope: !7329)
!7351 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7188, file: !7188, line: 530, type: !7352, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !7354)
!7352 = !DISubroutineType(types: !7353)
!7353 = !{null, !7191, !443, !5172}
!7354 = !{!7355, !7356, !7357}
!7355 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7351, file: !7188, line: 530, type: !7191)
!7356 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7351, file: !7188, line: 530, type: !443)
!7357 = !DILocalVariable(name: "_main", arg: 3, scope: !7351, file: !7188, line: 531, type: !5172)
!7358 = !DILocation(line: 0, scope: !7351)
!7359 = !DILocation(line: 535, column: 11, scope: !7351)
!7360 = !DILocation(line: 560, column: 2, scope: !7351)
!7361 = !DILocation(line: 576, column: 2, scope: !7351)
!7362 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7363 = !DILocation(line: 603, column: 2, scope: !7351)
!7364 = distinct !DISubprogram(name: "z_arm_fault", scope: !7365, file: !7365, line: 1036, type: !7366, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7381)
!7365 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7366 = !DISubroutineType(types: !7367)
!7367 = !{null, !113, !113, !113, !7368}
!7368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7369, size: 32)
!7369 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !712, line: 37, baseType: !7370)
!7370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !7371)
!7371 = !{!7372, !7373, !7374, !7375, !7376, !7377, !7378, !7379, !7380}
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7370, file: !712, line: 26, baseType: !113, size: 32)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7370, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7370, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7370, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7370, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7370, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7370, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7370, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7370, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!7381 = !{!7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391}
!7382 = !DILocalVariable(name: "msp", arg: 1, scope: !7364, file: !7365, line: 1036, type: !113)
!7383 = !DILocalVariable(name: "psp", arg: 2, scope: !7364, file: !7365, line: 1036, type: !113)
!7384 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7364, file: !7365, line: 1036, type: !113)
!7385 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7364, file: !7365, line: 1037, type: !7368)
!7386 = !DILocalVariable(name: "reason", scope: !7364, file: !7365, line: 1039, type: !113)
!7387 = !DILocalVariable(name: "fault", scope: !7364, file: !7365, line: 1040, type: !108)
!7388 = !DILocalVariable(name: "recoverable", scope: !7364, file: !7365, line: 1041, type: !422)
!7389 = !DILocalVariable(name: "nested_exc", scope: !7364, file: !7365, line: 1041, type: !422)
!7390 = !DILocalVariable(name: "esf", scope: !7364, file: !7365, line: 1042, type: !3055)
!7391 = !DILocalVariable(name: "esf_copy", scope: !7364, file: !7365, line: 1047, type: !3056)
!7392 = !DILocation(line: 0, scope: !7364)
!7393 = !DILocation(line: 1040, column: 19, scope: !7364)
!7394 = !DILocation(line: 1040, column: 24, scope: !7364)
!7395 = !DILocation(line: 1041, column: 2, scope: !7364)
!7396 = !DILocation(line: 1047, column: 2, scope: !7364)
!7397 = !DILocation(line: 1047, column: 15, scope: !7364)
!7398 = !DILocalVariable(name: "key", arg: 1, scope: !7399, file: !4080, line: 84, type: !32)
!7399 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7400)
!7400 = !{!7398}
!7401 = !DILocation(line: 0, scope: !7399, inlinedAt: !7402)
!7402 = distinct !DILocation(line: 1050, column: 2, scope: !7364)
!7403 = !DILocation(line: 95, column: 2, scope: !7399, inlinedAt: !7402)
!7404 = !{i64 2289420}
!7405 = !DILocation(line: 1055, column: 9, scope: !7364)
!7406 = !DILocation(line: 1063, column: 11, scope: !7364)
!7407 = !DILocation(line: 1064, column: 6, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7364, file: !7365, line: 1064, column: 6)
!7409 = !{i8 0, i8 2}
!7410 = !DILocation(line: 1064, column: 6, scope: !7364)
!7411 = !DILocation(line: 1070, column: 20, scope: !7364)
!7412 = !DILocation(line: 1070, column: 2, scope: !7364)
!7413 = !DILocation(line: 1089, column: 6, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7364, file: !7365, line: 1089, column: 6)
!7415 = !DILocation(line: 0, scope: !7414)
!7416 = !DILocation(line: 1089, column: 6, scope: !7364)
!7417 = !DILocation(line: 1090, column: 28, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !7365, line: 1090, column: 7)
!7419 = distinct !DILexicalBlock(scope: !7414, file: !7365, line: 1089, column: 18)
!7420 = !DILocation(line: 1090, column: 44, scope: !7418)
!7421 = !DILocation(line: 1090, column: 7, scope: !7419)
!7422 = !DILocation(line: 1091, column: 24, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7418, file: !7365, line: 1090, column: 50)
!7424 = !DILocation(line: 1092, column: 3, scope: !7423)
!7425 = !DILocation(line: 1094, column: 23, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7414, file: !7365, line: 1093, column: 9)
!7427 = !DILocation(line: 1097, column: 2, scope: !7364)
!7428 = !DILocation(line: 1098, column: 1, scope: !7364)
!7429 = distinct !DISubprogram(name: "get_esf", scope: !7365, file: !7365, line: 894, type: !7430, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7433)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{!3055, !113, !113, !113, !7432}
!7432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!7433 = !{!7434, !7435, !7436, !7437, !7438, !7439}
!7434 = !DILocalVariable(name: "msp", arg: 1, scope: !7429, file: !7365, line: 894, type: !113)
!7435 = !DILocalVariable(name: "psp", arg: 2, scope: !7429, file: !7365, line: 894, type: !113)
!7436 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7429, file: !7365, line: 894, type: !113)
!7437 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7429, file: !7365, line: 895, type: !7432)
!7438 = !DILocalVariable(name: "alternative_state_exc", scope: !7429, file: !7365, line: 897, type: !422)
!7439 = !DILocalVariable(name: "ptr_esf", scope: !7429, file: !7365, line: 898, type: !3055)
!7440 = !DILocation(line: 0, scope: !7429)
!7441 = !DILocation(line: 900, column: 14, scope: !7429)
!7442 = !DILocation(line: 902, column: 49, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7429, file: !7365, line: 902, column: 6)
!7444 = !DILocation(line: 902, column: 6, scope: !7429)
!7445 = !DILocation(line: 983, column: 44, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7429, file: !7365, line: 983, column: 6)
!7447 = !DILocation(line: 985, column: 3, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7449, file: !7365, line: 985, column: 3)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !7365, line: 985, column: 3)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !7365, line: 985, column: 3)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !7365, line: 985, column: 3)
!7452 = distinct !DILexicalBlock(scope: !7446, file: !7365, line: 984, column: 47)
!7453 = !DILocation(line: 986, column: 3, scope: !7452)
!7454 = !DILocation(line: 983, column: 18, scope: !7446)
!7455 = !DILocation(line: 991, column: 7, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7457, file: !7365, line: 990, column: 30)
!7457 = distinct !DILexicalBlock(scope: !7429, file: !7365, line: 990, column: 6)
!7458 = !DILocation(line: 998, column: 16, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7460, file: !7365, line: 995, column: 10)
!7460 = distinct !DILexicalBlock(scope: !7456, file: !7365, line: 991, column: 7)
!7461 = !DILocation(line: 1002, column: 2, scope: !7429)
!7462 = !DILocation(line: 1003, column: 1, scope: !7429)
!7463 = distinct !DISubprogram(name: "fault_handle", scope: !7365, file: !7365, line: 786, type: !7464, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7466)
!7464 = !DISubroutineType(types: !7465)
!7465 = !{!113, !3055, !108, !7432}
!7466 = !{!7467, !7468, !7469, !7470}
!7467 = !DILocalVariable(name: "esf", arg: 1, scope: !7463, file: !7365, line: 786, type: !3055)
!7468 = !DILocalVariable(name: "fault", arg: 2, scope: !7463, file: !7365, line: 786, type: !108)
!7469 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7463, file: !7365, line: 786, type: !7432)
!7470 = !DILocalVariable(name: "reason", scope: !7463, file: !7365, line: 788, type: !113)
!7471 = !DILocation(line: 0, scope: !7463)
!7472 = !DILocation(line: 790, column: 15, scope: !7463)
!7473 = !DILocation(line: 792, column: 2, scope: !7463)
!7474 = !DILocation(line: 794, column: 12, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7463, file: !7365, line: 792, column: 17)
!7476 = !DILocation(line: 795, column: 3, scope: !7475)
!7477 = !DILocation(line: 800, column: 12, scope: !7475)
!7478 = !DILocation(line: 801, column: 3, scope: !7475)
!7479 = !DILocation(line: 803, column: 12, scope: !7475)
!7480 = !DILocation(line: 804, column: 3, scope: !7475)
!7481 = !DILocation(line: 806, column: 12, scope: !7475)
!7482 = !DILocation(line: 807, column: 3, scope: !7475)
!7483 = !DILocation(line: 814, column: 3, scope: !7475)
!7484 = !DILocation(line: 815, column: 3, scope: !7475)
!7485 = !DILocation(line: 820, column: 3, scope: !7475)
!7486 = !DILocation(line: 821, column: 3, scope: !7475)
!7487 = !DILocation(line: 829, column: 2, scope: !7463)
!7488 = distinct !DISubprogram(name: "hard_fault", scope: !7365, file: !7365, line: 709, type: !7489, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7491)
!7489 = !DISubroutineType(types: !7490)
!7490 = !{!113, !3055, !7432}
!7491 = !{!7492, !7493, !7494}
!7492 = !DILocalVariable(name: "esf", arg: 1, scope: !7488, file: !7365, line: 709, type: !3055)
!7493 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7488, file: !7365, line: 709, type: !7432)
!7494 = !DILocalVariable(name: "reason", scope: !7488, file: !7365, line: 711, type: !113)
!7495 = !DILocation(line: 0, scope: !7488)
!7496 = !DILocation(line: 713, column: 2, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !7365, line: 713, column: 2)
!7498 = distinct !DILexicalBlock(scope: !7499, file: !7365, line: 713, column: 2)
!7499 = distinct !DILexicalBlock(scope: !7500, file: !7365, line: 713, column: 2)
!7500 = distinct !DILexicalBlock(scope: !7488, file: !7365, line: 713, column: 2)
!7501 = !DILocation(line: 732, column: 15, scope: !7488)
!7502 = !DILocation(line: 734, column: 12, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7488, file: !7365, line: 734, column: 6)
!7504 = !DILocation(line: 734, column: 17, scope: !7503)
!7505 = !DILocation(line: 734, column: 41, scope: !7503)
!7506 = !DILocation(line: 734, column: 6, scope: !7488)
!7507 = !DILocation(line: 735, column: 3, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !7365, line: 735, column: 3)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !7365, line: 735, column: 3)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !7365, line: 735, column: 3)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !7365, line: 735, column: 3)
!7512 = distinct !DILexicalBlock(scope: !7503, file: !7365, line: 734, column: 47)
!7513 = !DILocation(line: 736, column: 2, scope: !7512)
!7514 = !DILocation(line: 736, column: 19, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7503, file: !7365, line: 736, column: 13)
!7516 = !DILocation(line: 736, column: 49, scope: !7515)
!7517 = !DILocation(line: 736, column: 13, scope: !7503)
!7518 = !DILocation(line: 737, column: 3, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !7365, line: 737, column: 3)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !7365, line: 737, column: 3)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !7365, line: 737, column: 3)
!7522 = distinct !DILexicalBlock(scope: !7523, file: !7365, line: 737, column: 3)
!7523 = distinct !DILexicalBlock(scope: !7515, file: !7365, line: 736, column: 55)
!7524 = !DILocation(line: 738, column: 2, scope: !7523)
!7525 = !DILocation(line: 738, column: 19, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7515, file: !7365, line: 738, column: 13)
!7527 = !DILocation(line: 738, column: 24, scope: !7526)
!7528 = !DILocation(line: 738, column: 47, scope: !7526)
!7529 = !DILocation(line: 738, column: 13, scope: !7515)
!7530 = !DILocation(line: 739, column: 3, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !7365, line: 739, column: 3)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !7365, line: 739, column: 3)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !7365, line: 739, column: 3)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !7365, line: 739, column: 3)
!7535 = distinct !DILexicalBlock(scope: !7526, file: !7365, line: 738, column: 53)
!7536 = !DILocation(line: 740, column: 7, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7535, file: !7365, line: 740, column: 7)
!7538 = !DILocation(line: 740, column: 7, scope: !7535)
!7539 = !DILocation(line: 741, column: 4, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !7365, line: 741, column: 4)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !7365, line: 741, column: 4)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !7365, line: 741, column: 4)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !7365, line: 741, column: 4)
!7544 = distinct !DILexicalBlock(scope: !7537, file: !7365, line: 740, column: 38)
!7545 = !DILocation(line: 742, column: 24, scope: !7544)
!7546 = !DILocation(line: 743, column: 3, scope: !7544)
!7547 = !DILocation(line: 743, column: 20, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7537, file: !7365, line: 743, column: 14)
!7549 = !DILocation(line: 743, column: 25, scope: !7548)
!7550 = !DILocation(line: 743, column: 52, scope: !7548)
!7551 = !DILocation(line: 743, column: 14, scope: !7537)
!7552 = !DILocation(line: 744, column: 13, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7548, file: !7365, line: 743, column: 58)
!7554 = !DILocation(line: 745, column: 3, scope: !7553)
!7555 = !DILocation(line: 745, column: 20, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7548, file: !7365, line: 745, column: 14)
!7557 = !DILocation(line: 745, column: 25, scope: !7556)
!7558 = !DILocation(line: 745, column: 52, scope: !7556)
!7559 = !DILocation(line: 745, column: 14, scope: !7548)
!7560 = !DILocation(line: 746, column: 13, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7556, file: !7365, line: 745, column: 58)
!7562 = !DILocation(line: 747, column: 3, scope: !7561)
!7563 = !DILocation(line: 747, column: 20, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7556, file: !7365, line: 747, column: 14)
!7565 = !DILocation(line: 747, column: 52, scope: !7564)
!7566 = !DILocation(line: 747, column: 14, scope: !7556)
!7567 = !DILocation(line: 748, column: 13, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !7365, line: 747, column: 58)
!7569 = !DILocation(line: 753, column: 3, scope: !7568)
!7570 = !DILocation(line: 766, column: 2, scope: !7488)
!7571 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7365, file: !7365, line: 229, type: !7464, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7572)
!7572 = !{!7573, !7574, !7575, !7576, !7577, !7578, !7581}
!7573 = !DILocalVariable(name: "esf", arg: 1, scope: !7571, file: !7365, line: 229, type: !3055)
!7574 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7571, file: !7365, line: 229, type: !108)
!7575 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7571, file: !7365, line: 230, type: !7432)
!7576 = !DILocalVariable(name: "reason", scope: !7571, file: !7365, line: 232, type: !113)
!7577 = !DILocalVariable(name: "mmfar", scope: !7571, file: !7365, line: 233, type: !113)
!7578 = !DILocalVariable(name: "temp", scope: !7579, file: !7365, line: 254, type: !113)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !7365, line: 244, column: 48)
!7580 = distinct !DILexicalBlock(scope: !7571, file: !7365, line: 244, column: 6)
!7581 = !DILocalVariable(name: "min_stack_ptr", scope: !7582, file: !7365, line: 309, type: !113)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !7365, line: 308, column: 43)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !7365, line: 308, column: 7)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !7365, line: 289, column: 40)
!7585 = distinct !DILexicalBlock(scope: !7571, file: !7365, line: 288, column: 6)
!7586 = !DILocation(line: 0, scope: !7571)
!7587 = !DILocation(line: 235, column: 2, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !7365, line: 235, column: 2)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !7365, line: 235, column: 2)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !7365, line: 235, column: 2)
!7591 = distinct !DILexicalBlock(scope: !7571, file: !7365, line: 235, column: 2)
!7592 = !DILocation(line: 237, column: 12, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7571, file: !7365, line: 237, column: 6)
!7594 = !DILocation(line: 237, column: 17, scope: !7593)
!7595 = !DILocation(line: 237, column: 41, scope: !7593)
!7596 = !DILocation(line: 237, column: 6, scope: !7571)
!7597 = !DILocation(line: 238, column: 3, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !7365, line: 238, column: 3)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !7365, line: 238, column: 3)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !7365, line: 238, column: 3)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !7365, line: 238, column: 3)
!7602 = distinct !DILexicalBlock(scope: !7593, file: !7365, line: 237, column: 47)
!7603 = !DILocation(line: 240, column: 2, scope: !7602)
!7604 = !DILocation(line: 241, column: 12, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7571, file: !7365, line: 241, column: 6)
!7606 = !DILocation(line: 241, column: 17, scope: !7605)
!7607 = !DILocation(line: 241, column: 43, scope: !7605)
!7608 = !DILocation(line: 241, column: 6, scope: !7571)
!7609 = !DILocation(line: 242, column: 3, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !7365, line: 242, column: 3)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !7365, line: 242, column: 3)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !7365, line: 242, column: 3)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !7365, line: 242, column: 3)
!7614 = distinct !DILexicalBlock(scope: !7605, file: !7365, line: 241, column: 49)
!7615 = !DILocation(line: 243, column: 2, scope: !7614)
!7616 = !DILocation(line: 244, column: 12, scope: !7580)
!7617 = !DILocation(line: 244, column: 17, scope: !7580)
!7618 = !DILocation(line: 244, column: 42, scope: !7580)
!7619 = !DILocation(line: 244, column: 6, scope: !7571)
!7620 = !DILocation(line: 245, column: 3, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !7365, line: 245, column: 3)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !7365, line: 245, column: 3)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !7365, line: 245, column: 3)
!7624 = distinct !DILexicalBlock(scope: !7579, file: !7365, line: 245, column: 3)
!7625 = !DILocation(line: 254, column: 24, scope: !7579)
!7626 = !DILocation(line: 0, scope: !7579)
!7627 = !DILocation(line: 256, column: 13, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7579, file: !7365, line: 256, column: 7)
!7629 = !DILocation(line: 256, column: 18, scope: !7628)
!7630 = !DILocation(line: 256, column: 44, scope: !7628)
!7631 = !DILocation(line: 256, column: 7, scope: !7579)
!7632 = !DILocation(line: 258, column: 4, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !7365, line: 258, column: 4)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !7365, line: 258, column: 4)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !7365, line: 258, column: 4)
!7636 = distinct !DILexicalBlock(scope: !7637, file: !7365, line: 258, column: 4)
!7637 = distinct !DILexicalBlock(scope: !7628, file: !7365, line: 256, column: 50)
!7638 = !DILocation(line: 259, column: 24, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7637, file: !7365, line: 259, column: 8)
!7640 = !DILocation(line: 259, column: 8, scope: !7637)
!7641 = !DILocation(line: 261, column: 15, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7639, file: !7365, line: 259, column: 30)
!7643 = !DILocation(line: 262, column: 4, scope: !7642)
!7644 = !DILocation(line: 265, column: 12, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7571, file: !7365, line: 265, column: 6)
!7646 = !DILocation(line: 265, column: 17, scope: !7645)
!7647 = !DILocation(line: 265, column: 42, scope: !7645)
!7648 = !DILocation(line: 265, column: 6, scope: !7571)
!7649 = !DILocation(line: 266, column: 3, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !7365, line: 266, column: 3)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7365, line: 266, column: 3)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7365, line: 266, column: 3)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !7365, line: 266, column: 3)
!7654 = distinct !DILexicalBlock(scope: !7645, file: !7365, line: 265, column: 48)
!7655 = !DILocation(line: 267, column: 2, scope: !7654)
!7656 = !DILocation(line: 269, column: 12, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7571, file: !7365, line: 269, column: 6)
!7658 = !DILocation(line: 269, column: 17, scope: !7657)
!7659 = !DILocation(line: 269, column: 41, scope: !7657)
!7660 = !DILocation(line: 269, column: 6, scope: !7571)
!7661 = !DILocation(line: 270, column: 3, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !7365, line: 270, column: 3)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !7365, line: 270, column: 3)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !7365, line: 270, column: 3)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !7365, line: 270, column: 3)
!7666 = distinct !DILexicalBlock(scope: !7657, file: !7365, line: 269, column: 47)
!7667 = !DILocation(line: 272, column: 2, scope: !7666)
!7668 = !DILocation(line: 288, column: 12, scope: !7585)
!7669 = !DILocation(line: 288, column: 17, scope: !7585)
!7670 = !DILocation(line: 288, column: 41, scope: !7585)
!7671 = !DILocation(line: 289, column: 9, scope: !7585)
!7672 = !DILocation(line: 289, column: 14, scope: !7585)
!7673 = !DILocation(line: 288, column: 6, scope: !7571)
!7674 = !DILocation(line: 308, column: 12, scope: !7583)
!7675 = !DILocation(line: 308, column: 17, scope: !7583)
!7676 = !DILocation(line: 308, column: 7, scope: !7584)
!7677 = !DILocation(line: 310, column: 6, scope: !7582)
!7678 = !DILocation(line: 309, column: 29, scope: !7582)
!7679 = !DILocation(line: 0, scope: !7582)
!7680 = !DILocation(line: 312, column: 8, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7582, file: !7365, line: 312, column: 8)
!7682 = !DILocation(line: 312, column: 8, scope: !7582)
!7683 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7684, file: !7064, line: 1099, type: !113)
!7684 = distinct !DISubprogram(name: "__set_PSP", scope: !7064, file: !7064, line: 1099, type: !7155, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7685)
!7685 = !{!7683}
!7686 = !DILocation(line: 0, scope: !7684, inlinedAt: !7687)
!7687 = distinct !DILocation(line: 338, column: 5, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7681, file: !7365, line: 312, column: 23)
!7689 = !DILocation(line: 1101, column: 3, scope: !7684, inlinedAt: !7687)
!7690 = !{i64 3545081}
!7691 = !DILocation(line: 341, column: 4, scope: !7688)
!7692 = !DILocation(line: 360, column: 12, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7571, file: !7365, line: 360, column: 6)
!7694 = !DILocation(line: 360, column: 17, scope: !7693)
!7695 = !DILocation(line: 360, column: 41, scope: !7693)
!7696 = !DILocation(line: 360, column: 6, scope: !7571)
!7697 = !DILocation(line: 361, column: 14, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7693, file: !7365, line: 360, column: 47)
!7699 = !DILocation(line: 362, column: 2, scope: !7698)
!7700 = !DILocation(line: 366, column: 12, scope: !7571)
!7701 = !DILocation(line: 369, column: 15, scope: !7571)
!7702 = !DILocation(line: 371, column: 2, scope: !7571)
!7703 = distinct !DISubprogram(name: "bus_fault", scope: !7365, file: !7365, line: 383, type: !7704, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7706)
!7704 = !DISubroutineType(types: !7705)
!7705 = !{!108, !3055, !108, !7432}
!7706 = !{!7707, !7708, !7709, !7710, !7711}
!7707 = !DILocalVariable(name: "esf", arg: 1, scope: !7703, file: !7365, line: 383, type: !3055)
!7708 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7703, file: !7365, line: 383, type: !108)
!7709 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7703, file: !7365, line: 383, type: !7432)
!7710 = !DILocalVariable(name: "reason", scope: !7703, file: !7365, line: 385, type: !113)
!7711 = !DILocalVariable(name: "bfar", scope: !7712, file: !7365, line: 405, type: !113)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7365, line: 395, column: 42)
!7713 = distinct !DILexicalBlock(scope: !7703, file: !7365, line: 395, column: 6)
!7714 = !DILocation(line: 0, scope: !7703)
!7715 = !DILocation(line: 387, column: 2, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !7365, line: 387, column: 2)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !7365, line: 387, column: 2)
!7718 = distinct !DILexicalBlock(scope: !7719, file: !7365, line: 387, column: 2)
!7719 = distinct !DILexicalBlock(scope: !7703, file: !7365, line: 387, column: 2)
!7720 = !DILocation(line: 389, column: 11, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7703, file: !7365, line: 389, column: 6)
!7722 = !DILocation(line: 389, column: 16, scope: !7721)
!7723 = !DILocation(line: 389, column: 6, scope: !7703)
!7724 = !DILocation(line: 390, column: 3, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7365, line: 390, column: 3)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7365, line: 390, column: 3)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !7365, line: 390, column: 3)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !7365, line: 390, column: 3)
!7729 = distinct !DILexicalBlock(scope: !7721, file: !7365, line: 389, column: 39)
!7730 = !DILocation(line: 391, column: 2, scope: !7729)
!7731 = !DILocation(line: 392, column: 11, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7703, file: !7365, line: 392, column: 6)
!7733 = !DILocation(line: 392, column: 16, scope: !7732)
!7734 = !DILocation(line: 392, column: 6, scope: !7703)
!7735 = !DILocation(line: 393, column: 3, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7365, line: 393, column: 3)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !7365, line: 393, column: 3)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !7365, line: 393, column: 3)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !7365, line: 393, column: 3)
!7740 = distinct !DILexicalBlock(scope: !7732, file: !7365, line: 392, column: 41)
!7741 = !DILocation(line: 394, column: 2, scope: !7740)
!7742 = !DILocation(line: 395, column: 11, scope: !7713)
!7743 = !DILocation(line: 395, column: 16, scope: !7713)
!7744 = !DILocation(line: 395, column: 6, scope: !7703)
!7745 = !DILocation(line: 396, column: 3, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7365, line: 396, column: 3)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7365, line: 396, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7365, line: 396, column: 3)
!7749 = distinct !DILexicalBlock(scope: !7712, file: !7365, line: 396, column: 3)
!7750 = !DILocation(line: 405, column: 3, scope: !7712)
!7751 = !DILocation(line: 0, scope: !7712)
!7752 = !DILocation(line: 407, column: 13, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7712, file: !7365, line: 407, column: 7)
!7754 = !DILocation(line: 407, column: 18, scope: !7753)
!7755 = !DILocation(line: 407, column: 44, scope: !7753)
!7756 = !DILocation(line: 407, column: 7, scope: !7712)
!7757 = !DILocation(line: 408, column: 4, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7365, line: 408, column: 4)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7365, line: 408, column: 4)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !7365, line: 408, column: 4)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !7365, line: 408, column: 4)
!7762 = distinct !DILexicalBlock(scope: !7753, file: !7365, line: 407, column: 50)
!7763 = !DILocation(line: 409, column: 24, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7762, file: !7365, line: 409, column: 8)
!7765 = !DILocation(line: 409, column: 8, scope: !7762)
!7766 = !DILocation(line: 411, column: 15, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7764, file: !7365, line: 409, column: 30)
!7768 = !DILocation(line: 412, column: 4, scope: !7767)
!7769 = !DILocation(line: 415, column: 11, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7703, file: !7365, line: 415, column: 6)
!7771 = !DILocation(line: 415, column: 16, scope: !7770)
!7772 = !DILocation(line: 415, column: 6, scope: !7703)
!7773 = !DILocation(line: 416, column: 3, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !7365, line: 416, column: 3)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !7365, line: 416, column: 3)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !7365, line: 416, column: 3)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !7365, line: 416, column: 3)
!7778 = distinct !DILexicalBlock(scope: !7770, file: !7365, line: 415, column: 44)
!7779 = !DILocation(line: 417, column: 2, scope: !7778)
!7780 = !DILocation(line: 418, column: 12, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7703, file: !7365, line: 418, column: 6)
!7782 = !DILocation(line: 418, column: 17, scope: !7781)
!7783 = !DILocation(line: 418, column: 41, scope: !7781)
!7784 = !DILocation(line: 418, column: 6, scope: !7703)
!7785 = !DILocation(line: 423, column: 18, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7781, file: !7365, line: 423, column: 13)
!7787 = !DILocation(line: 423, column: 23, scope: !7786)
!7788 = !DILocation(line: 423, column: 13, scope: !7781)
!7789 = !DILocation(line: 0, scope: !7781)
!7790 = !DILocation(line: 524, column: 12, scope: !7703)
!7791 = !DILocation(line: 526, column: 15, scope: !7703)
!7792 = !DILocation(line: 528, column: 2, scope: !7703)
!7793 = distinct !DISubprogram(name: "usage_fault", scope: !7365, file: !7365, line: 539, type: !7794, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7798)
!7794 = !DISubroutineType(types: !7795)
!7795 = !{!113, !7796}
!7796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7797, size: 32)
!7797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3056)
!7798 = !{!7799, !7800}
!7799 = !DILocalVariable(name: "esf", arg: 1, scope: !7793, file: !7365, line: 539, type: !7796)
!7800 = !DILocalVariable(name: "reason", scope: !7793, file: !7365, line: 541, type: !113)
!7801 = !DILocation(line: 0, scope: !7793)
!7802 = !DILocation(line: 543, column: 2, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !7365, line: 543, column: 2)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !7365, line: 543, column: 2)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !7365, line: 543, column: 2)
!7806 = distinct !DILexicalBlock(scope: !7793, file: !7365, line: 543, column: 2)
!7807 = !DILocation(line: 546, column: 12, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7793, file: !7365, line: 546, column: 6)
!7809 = !DILocation(line: 546, column: 17, scope: !7808)
!7810 = !DILocation(line: 546, column: 43, scope: !7808)
!7811 = !DILocation(line: 546, column: 6, scope: !7793)
!7812 = !DILocation(line: 547, column: 3, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !7365, line: 547, column: 3)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !7365, line: 547, column: 3)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7365, line: 547, column: 3)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !7365, line: 547, column: 3)
!7817 = distinct !DILexicalBlock(scope: !7808, file: !7365, line: 546, column: 49)
!7818 = !DILocation(line: 548, column: 2, scope: !7817)
!7819 = !DILocation(line: 549, column: 12, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7793, file: !7365, line: 549, column: 6)
!7821 = !DILocation(line: 549, column: 17, scope: !7820)
!7822 = !DILocation(line: 549, column: 43, scope: !7820)
!7823 = !DILocation(line: 549, column: 6, scope: !7793)
!7824 = !DILocation(line: 550, column: 3, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !7365, line: 550, column: 3)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !7365, line: 550, column: 3)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !7365, line: 550, column: 3)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !7365, line: 550, column: 3)
!7829 = distinct !DILexicalBlock(scope: !7820, file: !7365, line: 549, column: 49)
!7830 = !DILocation(line: 551, column: 2, scope: !7829)
!7831 = !DILocation(line: 567, column: 12, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7793, file: !7365, line: 567, column: 6)
!7833 = !DILocation(line: 567, column: 17, scope: !7832)
!7834 = !DILocation(line: 567, column: 38, scope: !7832)
!7835 = !DILocation(line: 567, column: 6, scope: !7793)
!7836 = !DILocation(line: 568, column: 3, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !7365, line: 568, column: 3)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !7365, line: 568, column: 3)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !7365, line: 568, column: 3)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !7365, line: 568, column: 3)
!7841 = distinct !DILexicalBlock(scope: !7832, file: !7365, line: 567, column: 44)
!7842 = !DILocation(line: 569, column: 2, scope: !7841)
!7843 = !DILocation(line: 570, column: 12, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7793, file: !7365, line: 570, column: 6)
!7845 = !DILocation(line: 570, column: 17, scope: !7844)
!7846 = !DILocation(line: 570, column: 39, scope: !7844)
!7847 = !DILocation(line: 570, column: 6, scope: !7793)
!7848 = !DILocation(line: 571, column: 3, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !7365, line: 571, column: 3)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !7365, line: 571, column: 3)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !7365, line: 571, column: 3)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !7365, line: 571, column: 3)
!7853 = distinct !DILexicalBlock(scope: !7844, file: !7365, line: 570, column: 45)
!7854 = !DILocation(line: 572, column: 2, scope: !7853)
!7855 = !DILocation(line: 573, column: 12, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7793, file: !7365, line: 573, column: 6)
!7857 = !DILocation(line: 573, column: 17, scope: !7856)
!7858 = !DILocation(line: 573, column: 42, scope: !7856)
!7859 = !DILocation(line: 573, column: 6, scope: !7793)
!7860 = !DILocation(line: 574, column: 3, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !7365, line: 574, column: 3)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !7365, line: 574, column: 3)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !7365, line: 574, column: 3)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !7365, line: 574, column: 3)
!7865 = distinct !DILexicalBlock(scope: !7856, file: !7365, line: 573, column: 48)
!7866 = !DILocation(line: 575, column: 2, scope: !7865)
!7867 = !DILocation(line: 576, column: 12, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7793, file: !7365, line: 576, column: 6)
!7869 = !DILocation(line: 576, column: 17, scope: !7868)
!7870 = !DILocation(line: 576, column: 44, scope: !7868)
!7871 = !DILocation(line: 576, column: 6, scope: !7793)
!7872 = !DILocation(line: 577, column: 3, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !7365, line: 577, column: 3)
!7874 = distinct !DILexicalBlock(scope: !7875, file: !7365, line: 577, column: 3)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !7365, line: 577, column: 3)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !7365, line: 577, column: 3)
!7877 = distinct !DILexicalBlock(scope: !7868, file: !7365, line: 576, column: 50)
!7878 = !DILocation(line: 578, column: 2, scope: !7877)
!7879 = !DILocation(line: 581, column: 12, scope: !7793)
!7880 = !DILocation(line: 583, column: 2, scope: !7793)
!7881 = distinct !DISubprogram(name: "debug_monitor", scope: !7365, file: !7365, line: 632, type: !7882, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7884)
!7882 = !DISubroutineType(types: !7883)
!7883 = !{null, !3055, !7432}
!7884 = !{!7885, !7886}
!7885 = !DILocalVariable(name: "esf", arg: 1, scope: !7881, file: !7365, line: 632, type: !3055)
!7886 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7881, file: !7365, line: 632, type: !7432)
!7887 = !DILocation(line: 0, scope: !7881)
!7888 = !DILocation(line: 634, column: 15, scope: !7881)
!7889 = !DILocation(line: 636, column: 2, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7365, line: 636, column: 2)
!7891 = distinct !DILexicalBlock(scope: !7892, file: !7365, line: 636, column: 2)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !7365, line: 636, column: 2)
!7893 = distinct !DILexicalBlock(scope: !7881, file: !7365, line: 636, column: 2)
!7894 = !DILocation(line: 652, column: 1, scope: !7881)
!7895 = distinct !DISubprogram(name: "reserved_exception", scope: !7365, file: !7365, line: 776, type: !7896, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7898)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{null, !7796, !108}
!7898 = !{!7899, !7900}
!7899 = !DILocalVariable(name: "esf", arg: 1, scope: !7895, file: !7365, line: 776, type: !7796)
!7900 = !DILocalVariable(name: "fault", arg: 2, scope: !7895, file: !7365, line: 776, type: !108)
!7901 = !DILocation(line: 0, scope: !7895)
!7902 = !DILocation(line: 780, column: 2, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !7365, line: 780, column: 2)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !7365, line: 780, column: 2)
!7905 = distinct !DILexicalBlock(scope: !7906, file: !7365, line: 780, column: 2)
!7906 = distinct !DILexicalBlock(scope: !7895, file: !7365, line: 780, column: 2)
!7907 = !DILocation(line: 783, column: 1, scope: !7895)
!7908 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7365, file: !7365, line: 658, type: !7909, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7911)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{!422, !3055}
!7911 = !{!7912, !7913, !7914}
!7912 = !DILocalVariable(name: "esf", arg: 1, scope: !7908, file: !7365, line: 658, type: !3055)
!7913 = !DILocalVariable(name: "ret_addr", scope: !7908, file: !7365, line: 660, type: !3098)
!7914 = !DILocalVariable(name: "fault_insn", scope: !7908, file: !7365, line: 686, type: !168)
!7915 = !DILocation(line: 0, scope: !7908)
!7916 = !DILocation(line: 660, column: 46, scope: !7908)
!7917 = !DILocation(line: 660, column: 23, scope: !7908)
!7918 = !DILocation(line: 682, column: 11, scope: !7908)
!7919 = !DILocation(line: 271, column: 3, scope: !7920, inlinedAt: !7921)
!7920 = distinct !DISubprogram(name: "__DSB", scope: !7064, file: !7064, line: 269, type: !3406, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !437)
!7921 = distinct !DILocation(line: 683, column: 2, scope: !7908)
!7922 = !{i64 3521216}
!7923 = !DILocation(line: 260, column: 3, scope: !7924, inlinedAt: !7925)
!7924 = distinct !DISubprogram(name: "__ISB", scope: !7064, file: !7064, line: 258, type: !3406, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !437)
!7925 = distinct !DILocation(line: 684, column: 2, scope: !7908)
!7926 = !{i64 3520933}
!7927 = !DILocation(line: 686, column: 35, scope: !7908)
!7928 = !DILocation(line: 686, column: 24, scope: !7908)
!7929 = !DILocation(line: 688, column: 11, scope: !7908)
!7930 = !DILocation(line: 271, column: 3, scope: !7920, inlinedAt: !7931)
!7931 = distinct !DILocation(line: 689, column: 2, scope: !7908)
!7932 = !DILocation(line: 260, column: 3, scope: !7924, inlinedAt: !7933)
!7933 = distinct !DILocation(line: 690, column: 2, scope: !7908)
!7934 = !DILocation(line: 693, column: 45, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7908, file: !7365, line: 693, column: 6)
!7936 = !DILocation(line: 699, column: 1, scope: !7908)
!7937 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7365, file: !7365, line: 1107, type: !3406, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !437)
!7938 = !DILocation(line: 1111, column: 11, scope: !7937)
!7939 = !DILocation(line: 1136, column: 1, scope: !7937)
!7940 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7941, file: !7941, line: 26, type: !3406, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !7942)
!7941 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7942 = !{!7943}
!7943 = !DILocalVariable(name: "irq", scope: !7940, file: !7941, line: 28, type: !108)
!7944 = !DILocation(line: 0, scope: !7940)
!7945 = !DILocation(line: 30, column: 2, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7940, file: !7941, line: 30, column: 2)
!7947 = !DILocation(line: 31, column: 3, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !7941, line: 30, column: 39)
!7949 = distinct !DILexicalBlock(scope: !7946, file: !7941, line: 30, column: 2)
!7950 = !DILocation(line: 30, column: 35, scope: !7949)
!7951 = !DILocation(line: 30, column: 13, scope: !7949)
!7952 = distinct !{!7952, !7945, !7953}
!7953 = !DILocation(line: 32, column: 2, scope: !7946)
!7954 = !DILocation(line: 33, column: 1, scope: !7940)
!7955 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !788, file: !788, line: 1814, type: !7098, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !7956)
!7956 = !{!7957, !7958}
!7957 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7955, file: !788, line: 1814, type: !1168)
!7958 = !DILocalVariable(name: "priority", arg: 2, scope: !7955, file: !788, line: 1814, type: !113)
!7959 = !DILocation(line: 0, scope: !7955)
!7960 = !DILocation(line: 1816, column: 7, scope: !7955)
!7961 = !DILocation(line: 0, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7955, file: !788, line: 1816, column: 7)
!7963 = !DILocation(line: 1824, column: 1, scope: !7955)
!7964 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7965, file: !7965, line: 27, type: !7966, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3144, retainedNodes: !8069)
!7965 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7966 = !DISubroutineType(types: !7967)
!7967 = !{null, !7968}
!7968 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !7969)
!7969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7970, size: 32)
!7970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !7971)
!7971 = !{!7972, !8030, !8042, !8043, !8044, !8045, !8051, !8064}
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7970, file: !645, line: 247, baseType: !7973, size: 384)
!7973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !7974)
!7974 = !{!7975, !7999, !8006, !8007, !8008, !8017, !8018, !8019}
!7975 = !DIDerivedType(tag: DW_TAG_member, scope: !7973, file: !645, line: 60, baseType: !7976, size: 64)
!7976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7973, file: !645, line: 60, size: 64, elements: !7977)
!7977 = !{!7978, !7993}
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7976, file: !645, line: 61, baseType: !7979, size: 64)
!7979 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7980)
!7980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7981)
!7981 = !{!7982, !7988}
!7982 = !DIDerivedType(tag: DW_TAG_member, scope: !7980, file: !367, line: 38, baseType: !7983, size: 32)
!7983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7980, file: !367, line: 38, size: 32, elements: !7984)
!7984 = !{!7985, !7987}
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7983, file: !367, line: 39, baseType: !7986, size: 32)
!7986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7980, size: 32)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7983, file: !367, line: 40, baseType: !7986, size: 32)
!7988 = !DIDerivedType(tag: DW_TAG_member, scope: !7980, file: !367, line: 42, baseType: !7989, size: 32, offset: 32)
!7989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7980, file: !367, line: 42, size: 32, elements: !7990)
!7990 = !{!7991, !7992}
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7989, file: !367, line: 43, baseType: !7986, size: 32)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7989, file: !367, line: 44, baseType: !7986, size: 32)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7976, file: !645, line: 62, baseType: !7994, size: 64)
!7994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !7995)
!7995 = !{!7996}
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7994, file: !670, line: 50, baseType: !7997, size: 64)
!7997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7998, size: 64, elements: !675)
!7998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7994, size: 32)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7973, file: !645, line: 68, baseType: !8000, size: 32, offset: 64)
!8000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8001, size: 32)
!8001 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !8002)
!8002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !8003)
!8003 = !{!8004}
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8002, file: !363, line: 232, baseType: !8005, size: 64)
!8005 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7980)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7973, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7973, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!8008 = !DIDerivedType(tag: DW_TAG_member, scope: !7973, file: !645, line: 90, baseType: !8009, size: 16, offset: 112)
!8009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7973, file: !645, line: 90, size: 16, elements: !8010)
!8010 = !{!8011, !8016}
!8011 = !DIDerivedType(tag: DW_TAG_member, scope: !8009, file: !645, line: 91, baseType: !8012, size: 16)
!8012 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8009, file: !645, line: 91, size: 16, elements: !8013)
!8013 = !{!8014, !8015}
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8012, file: !645, line: 96, baseType: !693, size: 8)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8012, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8009, file: !645, line: 100, baseType: !168, size: 16)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7973, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7973, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7973, file: !645, line: 131, baseType: !8020, size: 192, offset: 192)
!8020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !8021)
!8021 = !{!8022, !8023, !8029}
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8020, file: !363, line: 245, baseType: !7979, size: 64)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8020, file: !363, line: 246, baseType: !8024, size: 32, offset: 64)
!8024 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !8025)
!8025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8026, size: 32)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{null, !8028}
!8028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8020, size: 32)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8020, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7970, file: !645, line: 250, baseType: !8031, size: 288, offset: 384)
!8031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !8032)
!8032 = !{!8033, !8034, !8035, !8036, !8037, !8038, !8039, !8040, !8041}
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8031, file: !712, line: 26, baseType: !113, size: 32)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8031, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8031, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8031, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8031, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8031, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8031, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8031, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8031, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7970, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7970, file: !645, line: 256, baseType: !8001, size: 64, offset: 704)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7970, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7970, file: !645, line: 300, baseType: !8046, size: 96, offset: 800)
!8046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !8047)
!8047 = !{!8048, !8049, !8050}
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8046, file: !645, line: 153, baseType: !22, size: 32)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8046, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8046, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7970, file: !645, line: 325, baseType: !8052, size: 32, offset: 896)
!8052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8053, size: 32)
!8053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !8054)
!8054 = !{!8055, !8061, !8062}
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8053, file: !359, line: 5074, baseType: !8056, size: 96)
!8056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !8057)
!8057 = !{!8058, !8059, !8060}
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8056, file: !738, line: 57, baseType: !741, size: 32)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8056, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8056, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8053, file: !359, line: 5075, baseType: !8001, size: 64, offset: 96)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8053, file: !359, line: 5076, baseType: !8063, offset: 160)
!8063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7970, file: !645, line: 343, baseType: !8065, size: 64, offset: 928)
!8065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !8066)
!8066 = !{!8067, !8068}
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8065, file: !712, line: 63, baseType: !113, size: 32)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8065, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!8069 = !{!8070}
!8070 = !DILocalVariable(name: "thread", arg: 1, scope: !7964, file: !7965, line: 27, type: !7968)
!8071 = !DILocation(line: 0, scope: !7964)
!8072 = !DILocation(line: 29, column: 6, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !7964, file: !7965, line: 29, column: 6)
!8074 = !DILocation(line: 29, column: 15, scope: !8073)
!8075 = !DILocation(line: 29, column: 6, scope: !7964)
!8076 = !DILocation(line: 1031, column: 3, scope: !8077, inlinedAt: !8080)
!8077 = distinct !DISubprogram(name: "__get_IPSR", scope: !7064, file: !7064, line: 1027, type: !7145, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3144, retainedNodes: !8078)
!8078 = !{!8079}
!8079 = !DILocalVariable(name: "result", scope: !8077, file: !7064, line: 1029, type: !113)
!8080 = distinct !DILocation(line: 48, column: 10, scope: !8081, inlinedAt: !8085)
!8081 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8082, file: !8082, line: 46, type: !8083, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3144, retainedNodes: !437)
!8082 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!422}
!8085 = distinct !DILocation(line: 30, column: 7, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !7965, line: 30, column: 7)
!8087 = distinct !DILexicalBlock(scope: !8073, file: !7965, line: 29, column: 26)
!8088 = !{i64 3510064}
!8089 = !DILocation(line: 0, scope: !8077, inlinedAt: !8080)
!8090 = !DILocation(line: 48, column: 9, scope: !8081, inlinedAt: !8085)
!8091 = !DILocation(line: 30, column: 7, scope: !8087)
!8092 = !DILocation(line: 42, column: 14, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8086, file: !7965, line: 30, column: 25)
!8094 = !DILocation(line: 48, column: 15, scope: !8093)
!8095 = !DILocation(line: 49, column: 3, scope: !8093)
!8096 = !DILocation(line: 52, column: 2, scope: !7964)
!8097 = !DILocation(line: 53, column: 1, scope: !7964)
!8098 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !640, file: !640, line: 127, type: !3406, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !437)
!8099 = !DILocation(line: 134, column: 2, scope: !8098)
!8100 = !DILocation(line: 156, column: 1, scope: !8098)
!8101 = !DILocation(line: 0, scope: !639)
!8102 = !DILocation(line: 289, column: 36, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !639, file: !640, line: 285, column: 2)
!8104 = !DILocation(line: 289, column: 42, scope: !8103)
!8105 = !DILocation(line: 300, column: 36, scope: !639)
!8106 = !DILocation(line: 301, column: 35, scope: !639)
!8107 = !DILocation(line: 302, column: 37, scope: !639)
!8108 = !DILocation(line: 311, column: 2, scope: !639)
!8109 = !DILocation(line: 316, column: 1, scope: !639)
!8110 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !816, file: !816, line: 180, type: !3406, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8111 = !DILocation(line: 188, column: 12, scope: !8110)
!8112 = !DILocation(line: 271, column: 3, scope: !8113, inlinedAt: !8114)
!8113 = distinct !DISubprogram(name: "__DSB", scope: !7064, file: !7064, line: 269, type: !3406, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8114 = distinct !DILocation(line: 192, column: 2, scope: !8110)
!8115 = !{i64 3679927}
!8116 = !DILocation(line: 260, column: 3, scope: !8117, inlinedAt: !8118)
!8117 = distinct !DISubprogram(name: "__ISB", scope: !7064, file: !7064, line: 258, type: !3406, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8118 = distinct !DILocation(line: 193, column: 2, scope: !8110)
!8119 = !{i64 3679644}
!8120 = !DILocation(line: 194, column: 1, scope: !8110)
!8121 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !816, file: !816, line: 199, type: !3406, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8122 = !DILocation(line: 282, column: 3, scope: !8123, inlinedAt: !8124)
!8123 = distinct !DISubprogram(name: "__DMB", scope: !7064, file: !7064, line: 280, type: !3406, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !437)
!8124 = distinct !DILocation(line: 202, column: 2, scope: !8121)
!8125 = !{i64 3680203}
!8126 = !DILocation(line: 205, column: 12, scope: !8121)
!8127 = !DILocation(line: 206, column: 1, scope: !8121)
!8128 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !816, file: !816, line: 275, type: !8129, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8142)
!8129 = !DISubroutineType(types: !8130)
!8130 = !{null, !8131, !2149, !7332, !7332}
!8131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8132, size: 32)
!8132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8133)
!8133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !760, line: 52, size: 96, elements: !8134)
!8134 = !{!8135, !8136, !8137}
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8133, file: !760, line: 53, baseType: !22, size: 32)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8133, file: !760, line: 54, baseType: !439, size: 32, offset: 32)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8133, file: !760, line: 55, baseType: !8138, size: 32, offset: 64)
!8138 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !766, line: 151, baseType: !8139)
!8139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !766, line: 149, size: 32, elements: !8140)
!8140 = !{!8141}
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8139, file: !766, line: 150, baseType: !113, size: 32)
!8142 = !{!8143, !8144, !8145, !8146}
!8143 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8128, file: !816, line: 276, type: !8131)
!8144 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8128, file: !816, line: 276, type: !2149)
!8145 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8128, file: !816, line: 277, type: !7332)
!8146 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8128, file: !816, line: 277, type: !7332)
!8147 = !DILocation(line: 0, scope: !8128)
!8148 = !DILocation(line: 279, column: 6, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8128, file: !816, line: 279, column: 6)
!8150 = !DILocation(line: 285, column: 1, scope: !8128)
!8151 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8152, file: !8152, line: 220, type: !8153, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8155)
!8152 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8153 = !DISubroutineType(types: !8154)
!8154 = !{!108, !8131, !2149, !7332, !7332}
!8155 = !{!8156, !8157, !8158, !8159, !8160}
!8156 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8151, file: !8152, line: 221, type: !8131)
!8157 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8151, file: !8152, line: 221, type: !2149)
!8158 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8151, file: !8152, line: 222, type: !7332)
!8159 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8151, file: !8152, line: 223, type: !7332)
!8160 = !DILocalVariable(name: "mpu_reg_index", scope: !8151, file: !8152, line: 225, type: !108)
!8161 = !DILocation(line: 0, scope: !8151)
!8162 = !DILocation(line: 225, column: 22, scope: !8151)
!8163 = !DILocation(line: 233, column: 18, scope: !8151)
!8164 = !DILocation(line: 236, column: 23, scope: !8151)
!8165 = !DILocation(line: 236, column: 21, scope: !8151)
!8166 = !DILocation(line: 238, column: 2, scope: !8151)
!8167 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !816, file: !816, line: 105, type: !8168, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8170)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!108, !8131, !164, !164, !422}
!8170 = !{!8171, !8172, !8173, !8174, !8175, !8176}
!8171 = !DILocalVariable(name: "regions", arg: 1, scope: !8167, file: !816, line: 106, type: !8131)
!8172 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8167, file: !816, line: 106, type: !164)
!8173 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8167, file: !816, line: 106, type: !164)
!8174 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8167, file: !816, line: 107, type: !422)
!8175 = !DILocalVariable(name: "i", scope: !8167, file: !816, line: 109, type: !108)
!8176 = !DILocalVariable(name: "reg_index", scope: !8167, file: !816, line: 110, type: !108)
!8177 = !DILocation(line: 0, scope: !8167)
!8178 = !DILocation(line: 110, column: 18, scope: !8167)
!8179 = !DILocation(line: 112, column: 16, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !816, line: 112, column: 2)
!8181 = distinct !DILexicalBlock(scope: !8167, file: !816, line: 112, column: 2)
!8182 = !DILocation(line: 112, column: 2, scope: !8181)
!8183 = !DILocation(line: 113, column: 7, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !816, line: 113, column: 7)
!8185 = distinct !DILexicalBlock(scope: !8180, file: !816, line: 112, column: 36)
!8186 = !DILocation(line: 113, column: 18, scope: !8184)
!8187 = !DILocation(line: 113, column: 23, scope: !8184)
!8188 = !DILocation(line: 113, column: 7, scope: !8185)
!8189 = !DILocation(line: 118, column: 23, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8185, file: !816, line: 118, column: 7)
!8191 = !DILocation(line: 119, column: 7, scope: !8190)
!8192 = !DILocation(line: 118, column: 7, scope: !8185)
!8193 = !DILocation(line: 120, column: 4, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !816, line: 120, column: 4)
!8195 = distinct !DILexicalBlock(scope: !8196, file: !816, line: 120, column: 4)
!8196 = distinct !DILexicalBlock(scope: !8197, file: !816, line: 120, column: 4)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !816, line: 120, column: 4)
!8198 = distinct !DILexicalBlock(scope: !8190, file: !816, line: 119, column: 45)
!8199 = !DILocation(line: 121, column: 4, scope: !8198)
!8200 = !DILocation(line: 124, column: 36, scope: !8185)
!8201 = !DILocation(line: 124, column: 15, scope: !8185)
!8202 = !DILocation(line: 126, column: 17, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8185, file: !816, line: 126, column: 7)
!8204 = !DILocation(line: 126, column: 7, scope: !8185)
!8205 = !DILocation(line: 131, column: 12, scope: !8185)
!8206 = !DILocation(line: 132, column: 2, scope: !8185)
!8207 = !DILocation(line: 112, column: 32, scope: !8180)
!8208 = distinct !{!8208, !8182, !8209}
!8209 = !DILocation(line: 132, column: 2, scope: !8181)
!8210 = !DILocation(line: 135, column: 1, scope: !8167)
!8211 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8152, file: !8152, line: 63, type: !8212, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8214)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{!108, !8131}
!8214 = !{!8215, !8216}
!8215 = !DILocalVariable(name: "part", arg: 1, scope: !8211, file: !8152, line: 63, type: !8131)
!8216 = !DILocalVariable(name: "partition_is_valid", scope: !8211, file: !8152, line: 70, type: !108)
!8217 = !DILocation(line: 0, scope: !8211)
!8218 = !DILocation(line: 71, column: 11, scope: !8211)
!8219 = !DILocation(line: 71, column: 37, scope: !8211)
!8220 = !{i32 0, i32 33}
!8221 = !DILocation(line: 72, column: 3, scope: !8211)
!8222 = !DILocation(line: 71, column: 30, scope: !8211)
!8223 = !DILocation(line: 75, column: 11, scope: !8211)
!8224 = !DILocation(line: 75, column: 17, scope: !8211)
!8225 = !DILocation(line: 75, column: 38, scope: !8211)
!8226 = !DILocation(line: 77, column: 2, scope: !8211)
!8227 = distinct !DISubprogram(name: "mpu_configure_region", scope: !816, file: !816, line: 79, type: !8228, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8230)
!8228 = !DISubroutineType(types: !8229)
!8229 = !{!108, !2149, !8131}
!8230 = !{!8231, !8232, !8233}
!8231 = !DILocalVariable(name: "index", arg: 1, scope: !8227, file: !816, line: 79, type: !2149)
!8232 = !DILocalVariable(name: "new_region", arg: 2, scope: !8227, file: !816, line: 80, type: !8131)
!8233 = !DILocalVariable(name: "region_conf", scope: !8227, file: !816, line: 82, type: !805)
!8234 = !DILocation(line: 0, scope: !8227)
!8235 = !DILocation(line: 82, column: 2, scope: !8227)
!8236 = !DILocation(line: 82, column: 24, scope: !8227)
!8237 = !DILocation(line: 87, column: 33, scope: !8227)
!8238 = !DILocation(line: 87, column: 14, scope: !8227)
!8239 = !DILocation(line: 87, column: 19, scope: !8227)
!8240 = !DILocation(line: 91, column: 55, scope: !8227)
!8241 = !DILocation(line: 92, column: 16, scope: !8227)
!8242 = !DILocation(line: 92, column: 53, scope: !8227)
!8243 = !DILocation(line: 91, column: 2, scope: !8227)
!8244 = !DILocation(line: 95, column: 9, scope: !8227)
!8245 = !DILocation(line: 97, column: 1, scope: !8227)
!8246 = !DILocation(line: 95, column: 2, scope: !8227)
!8247 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8152, file: !8152, line: 113, type: !8248, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8253)
!8248 = !DISubroutineType(types: !8249)
!8249 = !{null, !8250, !8251, !113, !113}
!8250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!8251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8252, size: 32)
!8252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8138)
!8253 = !{!8254, !8255, !8256, !8257}
!8254 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8247, file: !8152, line: 114, type: !8250)
!8255 = !DILocalVariable(name: "attr", arg: 2, scope: !8247, file: !8152, line: 115, type: !8251)
!8256 = !DILocalVariable(name: "base", arg: 3, scope: !8247, file: !8152, line: 115, type: !113)
!8257 = !DILocalVariable(name: "size", arg: 4, scope: !8247, file: !8152, line: 115, type: !113)
!8258 = !DILocation(line: 0, scope: !8247)
!8259 = !DILocation(line: 127, column: 23, scope: !8247)
!8260 = !DILocation(line: 127, column: 35, scope: !8247)
!8261 = !DILocation(line: 127, column: 33, scope: !8247)
!8262 = !DILocation(line: 127, column: 10, scope: !8247)
!8263 = !DILocation(line: 127, column: 15, scope: !8247)
!8264 = !DILocation(line: 129, column: 1, scope: !8247)
!8265 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !816, file: !816, line: 57, type: !8266, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8268)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!108, !2149, !803}
!8268 = !{!8269, !8270}
!8269 = !DILocalVariable(name: "index", arg: 1, scope: !8265, file: !816, line: 57, type: !2149)
!8270 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8265, file: !816, line: 58, type: !803)
!8271 = !DILocation(line: 0, scope: !8265)
!8272 = !DILocation(line: 61, column: 6, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8265, file: !816, line: 61, column: 6)
!8274 = !DILocation(line: 61, column: 12, scope: !8273)
!8275 = !DILocation(line: 61, column: 6, scope: !8265)
!8276 = !DILocation(line: 64, column: 3, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !816, line: 64, column: 3)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !816, line: 64, column: 3)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !816, line: 64, column: 3)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !816, line: 64, column: 3)
!8281 = distinct !DILexicalBlock(scope: !8273, file: !816, line: 61, column: 40)
!8282 = !DILocation(line: 65, column: 3, scope: !8281)
!8283 = !DILocation(line: 71, column: 2, scope: !8265)
!8284 = !DILocation(line: 73, column: 2, scope: !8265)
!8285 = !DILocation(line: 74, column: 1, scope: !8265)
!8286 = distinct !DISubprogram(name: "region_init", scope: !8152, file: !8152, line: 29, type: !8287, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8289)
!8287 = !DISubroutineType(types: !8288)
!8288 = !{null, !7332, !803}
!8289 = !{!8290, !8291}
!8290 = !DILocalVariable(name: "index", arg: 1, scope: !8286, file: !8152, line: 29, type: !7332)
!8291 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8286, file: !8152, line: 30, type: !803)
!8292 = !DILocation(line: 0, scope: !8286)
!8293 = !DILocation(line: 33, column: 2, scope: !8286)
!8294 = !DILocation(line: 47, column: 28, scope: !8286)
!8295 = !DILocation(line: 47, column: 33, scope: !8286)
!8296 = !DILocation(line: 48, column: 26, scope: !8286)
!8297 = !DILocation(line: 47, column: 12, scope: !8286)
!8298 = !DILocation(line: 49, column: 32, scope: !8286)
!8299 = !DILocation(line: 49, column: 37, scope: !8286)
!8300 = !DILocation(line: 49, column: 12, scope: !8286)
!8301 = !DILocation(line: 53, column: 1, scope: !8286)
!8302 = distinct !DISubprogram(name: "set_region_number", scope: !8303, file: !8303, line: 32, type: !7155, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8304)
!8303 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8304 = !{!8305}
!8305 = !DILocalVariable(name: "index", arg: 1, scope: !8302, file: !8303, line: 32, type: !113)
!8306 = !DILocation(line: 0, scope: !8302)
!8307 = !DILocation(line: 34, column: 11, scope: !8302)
!8308 = !DILocation(line: 35, column: 1, scope: !8302)
!8309 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8152, file: !8152, line: 88, type: !8310, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8312)
!8310 = !DISubroutineType(types: !8311)
!8311 = !{!113, !113}
!8312 = !{!8313}
!8313 = !DILocalVariable(name: "size", arg: 1, scope: !8309, file: !8152, line: 88, type: !113)
!8314 = !DILocation(line: 0, scope: !8309)
!8315 = !DILocation(line: 91, column: 11, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8309, file: !8152, line: 91, column: 6)
!8317 = !DILocation(line: 91, column: 6, scope: !8309)
!8318 = !DILocation(line: 100, column: 11, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8309, file: !8152, line: 100, column: 6)
!8320 = !DILocation(line: 100, column: 6, scope: !8309)
!8321 = !DILocation(line: 104, column: 35, scope: !8309)
!8322 = !DILocation(line: 104, column: 16, scope: !8309)
!8323 = !DILocation(line: 104, column: 50, scope: !8309)
!8324 = !DILocation(line: 104, column: 72, scope: !8309)
!8325 = !DILocation(line: 104, column: 2, scope: !8309)
!8326 = !DILocation(line: 106, column: 1, scope: !8309)
!8327 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !816, file: !816, line: 307, type: !8328, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8330)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{null, !8131, !164}
!8330 = !{!8331, !8332}
!8331 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8327, file: !816, line: 308, type: !8131)
!8332 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8327, file: !816, line: 308, type: !164)
!8333 = !DILocation(line: 0, scope: !8327)
!8334 = !DILocation(line: 310, column: 6, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8327, file: !816, line: 310, column: 6)
!8336 = !DILocation(line: 316, column: 1, scope: !8327)
!8337 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8152, file: !8152, line: 249, type: !8338, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8340)
!8338 = !DISubroutineType(types: !8339)
!8339 = !{!108, !8131, !164}
!8340 = !{!8341, !8342, !8343, !8344}
!8341 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8337, file: !8152, line: 250, type: !8131)
!8342 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8337, file: !8152, line: 250, type: !164)
!8343 = !DILocalVariable(name: "mpu_reg_index", scope: !8337, file: !8152, line: 252, type: !108)
!8344 = !DILocalVariable(name: "i", scope: !8345, file: !8152, line: 264, type: !108)
!8345 = distinct !DILexicalBlock(scope: !8346, file: !8152, line: 264, column: 3)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !8152, line: 261, column: 32)
!8347 = distinct !DILexicalBlock(scope: !8337, file: !8152, line: 261, column: 6)
!8348 = !DILocation(line: 0, scope: !8337)
!8349 = !DILocation(line: 252, column: 22, scope: !8337)
!8350 = !DILocation(line: 258, column: 18, scope: !8337)
!8351 = !DILocation(line: 261, column: 20, scope: !8347)
!8352 = !DILocation(line: 261, column: 6, scope: !8337)
!8353 = !DILocation(line: 0, scope: !8345)
!8354 = !DILocation(line: 265, column: 4, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !8152, line: 264, column: 59)
!8356 = distinct !DILexicalBlock(scope: !8345, file: !8152, line: 264, column: 3)
!8357 = !DILocation(line: 264, column: 55, scope: !8356)
!8358 = !DILocation(line: 264, column: 33, scope: !8356)
!8359 = !DILocation(line: 264, column: 3, scope: !8345)
!8360 = distinct !{!8360, !8359, !8361}
!8361 = !DILocation(line: 266, column: 3, scope: !8345)
!8362 = !DILocation(line: 269, column: 2, scope: !8337)
!8363 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8364, file: !8364, line: 218, type: !7155, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8365)
!8364 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8365 = !{!8366}
!8366 = !DILocalVariable(name: "rnr", arg: 1, scope: !8363, file: !8364, line: 218, type: !113)
!8367 = !DILocation(line: 0, scope: !8363)
!8368 = !DILocation(line: 220, column: 12, scope: !8363)
!8369 = !DILocation(line: 221, column: 13, scope: !8363)
!8370 = !DILocation(line: 222, column: 1, scope: !8363)
!8371 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !816, file: !816, line: 326, type: !8372, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !8374)
!8372 = !DISubroutineType(types: !8373)
!8373 = !{!108}
!8374 = !{!8375}
!8375 = !DILocalVariable(name: "r_index", scope: !8371, file: !816, line: 328, type: !113)
!8376 = !DILocation(line: 330, column: 17, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8371, file: !816, line: 330, column: 6)
!8378 = !DILocation(line: 330, column: 29, scope: !8377)
!8379 = !DILocation(line: 330, column: 6, scope: !8371)
!8380 = !DILocation(line: 347, column: 2, scope: !8371)
!8381 = !DILocation(line: 0, scope: !8371)
!8382 = !DILocation(line: 364, column: 29, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !816, line: 364, column: 2)
!8384 = distinct !DILexicalBlock(scope: !8371, file: !816, line: 364, column: 2)
!8385 = !DILocation(line: 364, column: 2, scope: !8384)
!8386 = !DILocation(line: 365, column: 25, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8383, file: !816, line: 364, column: 66)
!8388 = !DILocation(line: 365, column: 3, scope: !8387)
!8389 = !DILocation(line: 364, column: 62, scope: !8383)
!8390 = distinct !{!8390, !8385, !8391}
!8391 = !DILocation(line: 366, column: 2, scope: !8384)
!8392 = !DILocation(line: 369, column: 23, scope: !8371)
!8393 = !DILocation(line: 369, column: 21, scope: !8371)
!8394 = !DILocation(line: 372, column: 2, scope: !8371)
!8395 = !DILocation(line: 443, column: 2, scope: !8371)
!8396 = !DILocation(line: 444, column: 1, scope: !8371)
!8397 = distinct !DISubprogram(name: "strcpy", scope: !8398, file: !8398, line: 20, type: !8399, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8403)
!8398 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8399 = !DISubroutineType(types: !8400)
!8400 = !{!443, !8401, !8402}
!8401 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !443)
!8402 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !105)
!8403 = !{!8404, !8405, !8406}
!8404 = !DILocalVariable(name: "d", arg: 1, scope: !8397, file: !8398, line: 20, type: !8401)
!8405 = !DILocalVariable(name: "s", arg: 2, scope: !8397, file: !8398, line: 20, type: !8402)
!8406 = !DILocalVariable(name: "dest", scope: !8397, file: !8398, line: 22, type: !443)
!8407 = !DILocation(line: 0, scope: !8397)
!8408 = !DILocation(line: 24, column: 9, scope: !8397)
!8409 = !DILocation(line: 24, column: 12, scope: !8397)
!8410 = !DILocation(line: 24, column: 2, scope: !8397)
!8411 = !DILocation(line: 25, column: 6, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8397, file: !8398, line: 24, column: 21)
!8413 = !DILocation(line: 26, column: 4, scope: !8412)
!8414 = !DILocation(line: 27, column: 4, scope: !8412)
!8415 = distinct !{!8415, !8410, !8416}
!8416 = !DILocation(line: 28, column: 2, scope: !8397)
!8417 = !DILocation(line: 30, column: 5, scope: !8397)
!8418 = !DILocation(line: 32, column: 2, scope: !8397)
!8419 = distinct !DISubprogram(name: "strncpy", scope: !8398, file: !8398, line: 42, type: !8420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8422)
!8420 = !DISubroutineType(types: !8421)
!8421 = !{!443, !8401, !8402, !439}
!8422 = !{!8423, !8424, !8425, !8426}
!8423 = !DILocalVariable(name: "d", arg: 1, scope: !8419, file: !8398, line: 42, type: !8401)
!8424 = !DILocalVariable(name: "s", arg: 2, scope: !8419, file: !8398, line: 42, type: !8402)
!8425 = !DILocalVariable(name: "n", arg: 3, scope: !8419, file: !8398, line: 42, type: !439)
!8426 = !DILocalVariable(name: "dest", scope: !8419, file: !8398, line: 44, type: !443)
!8427 = !DILocation(line: 0, scope: !8419)
!8428 = !DILocation(line: 46, column: 12, scope: !8419)
!8429 = !DILocation(line: 46, column: 17, scope: !8419)
!8430 = !DILocation(line: 46, column: 20, scope: !8419)
!8431 = !DILocation(line: 46, column: 23, scope: !8419)
!8432 = !DILocation(line: 46, column: 2, scope: !8419)
!8433 = !DILocation(line: 47, column: 6, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8419, file: !8398, line: 46, column: 32)
!8435 = !DILocation(line: 48, column: 4, scope: !8434)
!8436 = !DILocation(line: 49, column: 4, scope: !8434)
!8437 = !DILocation(line: 50, column: 4, scope: !8434)
!8438 = distinct !{!8438, !8432, !8439}
!8439 = !DILocation(line: 51, column: 2, scope: !8419)
!8440 = !DILocation(line: 54, column: 6, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8419, file: !8398, line: 53, column: 16)
!8442 = !DILocation(line: 55, column: 4, scope: !8441)
!8443 = !DILocation(line: 56, column: 4, scope: !8441)
!8444 = !DILocation(line: 53, column: 11, scope: !8419)
!8445 = !DILocation(line: 53, column: 2, scope: !8419)
!8446 = distinct !{!8446, !8445, !8447}
!8447 = !DILocation(line: 57, column: 2, scope: !8419)
!8448 = !DILocation(line: 59, column: 2, scope: !8419)
!8449 = distinct !DISubprogram(name: "strchr", scope: !8398, file: !8398, line: 69, type: !8450, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8452)
!8450 = !DISubroutineType(types: !8451)
!8451 = !{!443, !105, !108}
!8452 = !{!8453, !8454, !8455}
!8453 = !DILocalVariable(name: "s", arg: 1, scope: !8449, file: !8398, line: 69, type: !105)
!8454 = !DILocalVariable(name: "c", arg: 2, scope: !8449, file: !8398, line: 69, type: !108)
!8455 = !DILocalVariable(name: "tmp", scope: !8449, file: !8398, line: 71, type: !107)
!8456 = !DILocation(line: 0, scope: !8449)
!8457 = !DILocation(line: 73, column: 2, scope: !8449)
!8458 = !DILocation(line: 73, column: 10, scope: !8449)
!8459 = !DILocation(line: 73, column: 13, scope: !8449)
!8460 = !DILocation(line: 73, column: 21, scope: !8449)
!8461 = !DILocation(line: 74, column: 4, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8449, file: !8398, line: 73, column: 38)
!8463 = distinct !{!8463, !8457, !8464}
!8464 = !DILocation(line: 75, column: 2, scope: !8449)
!8465 = !DILocation(line: 77, column: 9, scope: !8449)
!8466 = !DILocation(line: 77, column: 2, scope: !8449)
!8467 = distinct !DISubprogram(name: "strrchr", scope: !8398, file: !8398, line: 87, type: !8450, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8468)
!8468 = !{!8469, !8470, !8471}
!8469 = !DILocalVariable(name: "s", arg: 1, scope: !8467, file: !8398, line: 87, type: !105)
!8470 = !DILocalVariable(name: "c", arg: 2, scope: !8467, file: !8398, line: 87, type: !108)
!8471 = !DILocalVariable(name: "match", scope: !8467, file: !8398, line: 89, type: !443)
!8472 = !DILocation(line: 0, scope: !8467)
!8473 = !DILocation(line: 91, column: 2, scope: !8467)
!8474 = !DILocation(line: 92, column: 7, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !8398, line: 92, column: 7)
!8476 = distinct !DILexicalBlock(scope: !8467, file: !8398, line: 91, column: 5)
!8477 = !DILocation(line: 92, column: 10, scope: !8475)
!8478 = !DILocation(line: 92, column: 7, scope: !8476)
!8479 = !DILocation(line: 95, column: 13, scope: !8467)
!8480 = !DILocation(line: 95, column: 2, scope: !8476)
!8481 = distinct !{!8481, !8473, !8482}
!8482 = !DILocation(line: 95, column: 15, scope: !8467)
!8483 = !DILocation(line: 97, column: 2, scope: !8467)
!8484 = distinct !DISubprogram(name: "strlen", scope: !8398, file: !8398, line: 107, type: !8485, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8487)
!8485 = !DISubroutineType(types: !8486)
!8486 = !{!439, !105}
!8487 = !{!8488, !8489}
!8488 = !DILocalVariable(name: "s", arg: 1, scope: !8484, file: !8398, line: 107, type: !105)
!8489 = !DILocalVariable(name: "n", scope: !8484, file: !8398, line: 109, type: !439)
!8490 = !DILocation(line: 0, scope: !8484)
!8491 = !DILocation(line: 111, column: 9, scope: !8484)
!8492 = !DILocation(line: 111, column: 12, scope: !8484)
!8493 = !DILocation(line: 111, column: 2, scope: !8484)
!8494 = !DILocation(line: 112, column: 4, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8484, file: !8398, line: 111, column: 21)
!8496 = !DILocation(line: 113, column: 4, scope: !8495)
!8497 = distinct !{!8497, !8493, !8498}
!8498 = !DILocation(line: 114, column: 2, scope: !8484)
!8499 = !DILocation(line: 116, column: 2, scope: !8484)
!8500 = distinct !DISubprogram(name: "strnlen", scope: !8398, file: !8398, line: 126, type: !8501, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8503)
!8501 = !DISubroutineType(types: !8502)
!8502 = !{!439, !105, !439}
!8503 = !{!8504, !8505, !8506}
!8504 = !DILocalVariable(name: "s", arg: 1, scope: !8500, file: !8398, line: 126, type: !105)
!8505 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8500, file: !8398, line: 126, type: !439)
!8506 = !DILocalVariable(name: "n", scope: !8500, file: !8398, line: 128, type: !439)
!8507 = !DILocation(line: 0, scope: !8500)
!8508 = !DILocation(line: 130, column: 9, scope: !8500)
!8509 = !DILocation(line: 130, column: 12, scope: !8500)
!8510 = !DILocation(line: 130, column: 20, scope: !8500)
!8511 = !DILocation(line: 130, column: 2, scope: !8500)
!8512 = !DILocation(line: 131, column: 4, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8500, file: !8398, line: 130, column: 35)
!8514 = !DILocation(line: 132, column: 4, scope: !8513)
!8515 = distinct !{!8515, !8511, !8516}
!8516 = !DILocation(line: 133, column: 2, scope: !8500)
!8517 = !DILocation(line: 135, column: 2, scope: !8500)
!8518 = distinct !DISubprogram(name: "strcmp", scope: !8398, file: !8398, line: 145, type: !8519, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8521)
!8519 = !DISubroutineType(types: !8520)
!8520 = !{!108, !105, !105}
!8521 = !{!8522, !8523}
!8522 = !DILocalVariable(name: "s1", arg: 1, scope: !8518, file: !8398, line: 145, type: !105)
!8523 = !DILocalVariable(name: "s2", arg: 2, scope: !8518, file: !8398, line: 145, type: !105)
!8524 = !DILocation(line: 0, scope: !8518)
!8525 = !DILocation(line: 147, column: 10, scope: !8518)
!8526 = !DILocation(line: 147, column: 17, scope: !8518)
!8527 = !DILocation(line: 147, column: 14, scope: !8518)
!8528 = !DILocation(line: 147, column: 22, scope: !8518)
!8529 = !DILocation(line: 148, column: 5, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8518, file: !8398, line: 147, column: 40)
!8531 = !DILocation(line: 149, column: 5, scope: !8530)
!8532 = distinct !{!8532, !8533, !8534}
!8533 = !DILocation(line: 147, column: 2, scope: !8518)
!8534 = !DILocation(line: 150, column: 2, scope: !8518)
!8535 = !DILocation(line: 152, column: 9, scope: !8518)
!8536 = !DILocation(line: 152, column: 15, scope: !8518)
!8537 = !DILocation(line: 152, column: 13, scope: !8518)
!8538 = !DILocation(line: 152, column: 2, scope: !8518)
!8539 = distinct !DISubprogram(name: "strncmp", scope: !8398, file: !8398, line: 162, type: !8540, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8542)
!8540 = !DISubroutineType(types: !8541)
!8541 = !{!108, !105, !105, !439}
!8542 = !{!8543, !8544, !8545}
!8543 = !DILocalVariable(name: "s1", arg: 1, scope: !8539, file: !8398, line: 162, type: !105)
!8544 = !DILocalVariable(name: "s2", arg: 2, scope: !8539, file: !8398, line: 162, type: !105)
!8545 = !DILocalVariable(name: "n", arg: 3, scope: !8539, file: !8398, line: 162, type: !439)
!8546 = !DILocation(line: 0, scope: !8539)
!8547 = !DILocation(line: 164, column: 17, scope: !8539)
!8548 = !DILocation(line: 164, column: 21, scope: !8539)
!8549 = !DILocation(line: 164, column: 28, scope: !8539)
!8550 = !DILocation(line: 164, column: 25, scope: !8539)
!8551 = !DILocation(line: 164, column: 33, scope: !8539)
!8552 = !DILocation(line: 165, column: 5, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8539, file: !8398, line: 164, column: 51)
!8554 = !DILocation(line: 166, column: 5, scope: !8553)
!8555 = !DILocation(line: 167, column: 4, scope: !8553)
!8556 = distinct !{!8556, !8557, !8558}
!8557 = !DILocation(line: 164, column: 2, scope: !8539)
!8558 = !DILocation(line: 168, column: 2, scope: !8539)
!8559 = !DILocation(line: 170, column: 25, scope: !8539)
!8560 = !DILocation(line: 170, column: 31, scope: !8539)
!8561 = !DILocation(line: 170, column: 29, scope: !8539)
!8562 = !DILocation(line: 170, column: 9, scope: !8539)
!8563 = !DILocation(line: 170, column: 2, scope: !8539)
!8564 = distinct !DISubprogram(name: "strtok_r", scope: !8398, file: !8398, line: 180, type: !8565, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8567)
!8565 = !DISubroutineType(types: !8566)
!8566 = !{!443, !443, !105, !541}
!8567 = !{!8568, !8569, !8570, !8571, !8572}
!8568 = !DILocalVariable(name: "str", arg: 1, scope: !8564, file: !8398, line: 180, type: !443)
!8569 = !DILocalVariable(name: "sep", arg: 2, scope: !8564, file: !8398, line: 180, type: !105)
!8570 = !DILocalVariable(name: "state", arg: 3, scope: !8564, file: !8398, line: 180, type: !541)
!8571 = !DILocalVariable(name: "start", scope: !8564, file: !8398, line: 182, type: !443)
!8572 = !DILocalVariable(name: "end", scope: !8564, file: !8398, line: 182, type: !443)
!8573 = !DILocation(line: 0, scope: !8564)
!8574 = !DILocation(line: 184, column: 10, scope: !8564)
!8575 = !DILocation(line: 184, column: 22, scope: !8564)
!8576 = !DILocation(line: 187, column: 9, scope: !8564)
!8577 = !DILocation(line: 187, column: 16, scope: !8564)
!8578 = !DILocation(line: 187, column: 19, scope: !8564)
!8579 = !DILocation(line: 187, column: 2, scope: !8564)
!8580 = !DILocation(line: 188, column: 8, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8564, file: !8398, line: 187, column: 40)
!8582 = distinct !{!8582, !8579, !8583}
!8583 = !DILocation(line: 189, column: 2, scope: !8564)
!8584 = !DILocation(line: 198, column: 9, scope: !8564)
!8585 = !DILocation(line: 198, column: 18, scope: !8564)
!8586 = !DILocation(line: 198, column: 17, scope: !8564)
!8587 = !DILocation(line: 198, column: 2, scope: !8564)
!8588 = !DILocation(line: 199, column: 6, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8564, file: !8398, line: 198, column: 37)
!8590 = !DILocation(line: 198, column: 14, scope: !8564)
!8591 = distinct !{!8591, !8587, !8592}
!8592 = !DILocation(line: 200, column: 2, scope: !8564)
!8593 = !DILocation(line: 203, column: 8, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !8398, line: 202, column: 20)
!8595 = distinct !DILexicalBlock(scope: !8564, file: !8398, line: 202, column: 6)
!8596 = !DILocation(line: 204, column: 16, scope: !8594)
!8597 = !DILocation(line: 205, column: 2, scope: !8594)
!8598 = !DILocation(line: 210, column: 1, scope: !8564)
!8599 = distinct !DISubprogram(name: "strcat", scope: !8398, file: !8398, line: 212, type: !8399, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8600)
!8600 = !{!8601, !8602}
!8601 = !DILocalVariable(name: "dest", arg: 1, scope: !8599, file: !8398, line: 212, type: !8401)
!8602 = !DILocalVariable(name: "src", arg: 2, scope: !8599, file: !8398, line: 212, type: !8402)
!8603 = !DILocation(line: 0, scope: !8599)
!8604 = !DILocation(line: 214, column: 16, scope: !8599)
!8605 = !DILocation(line: 214, column: 14, scope: !8599)
!8606 = !DILocation(line: 214, column: 2, scope: !8599)
!8607 = !DILocation(line: 215, column: 2, scope: !8599)
!8608 = distinct !DISubprogram(name: "strncat", scope: !8398, file: !8398, line: 218, type: !8420, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8609)
!8609 = !{!8610, !8611, !8612, !8613, !8614}
!8610 = !DILocalVariable(name: "dest", arg: 1, scope: !8608, file: !8398, line: 218, type: !8401)
!8611 = !DILocalVariable(name: "src", arg: 2, scope: !8608, file: !8398, line: 218, type: !8402)
!8612 = !DILocalVariable(name: "n", arg: 3, scope: !8608, file: !8398, line: 219, type: !439)
!8613 = !DILocalVariable(name: "orig_dest", scope: !8608, file: !8398, line: 221, type: !443)
!8614 = !DILocalVariable(name: "len", scope: !8608, file: !8398, line: 222, type: !439)
!8615 = !DILocation(line: 0, scope: !8608)
!8616 = !DILocation(line: 222, column: 15, scope: !8608)
!8617 = !DILocation(line: 224, column: 7, scope: !8608)
!8618 = !DILocation(line: 225, column: 14, scope: !8608)
!8619 = !DILocation(line: 225, column: 19, scope: !8608)
!8620 = !DILocation(line: 225, column: 11, scope: !8608)
!8621 = !DILocation(line: 225, column: 23, scope: !8608)
!8622 = !DILocation(line: 225, column: 28, scope: !8608)
!8623 = !DILocation(line: 225, column: 2, scope: !8608)
!8624 = !DILocation(line: 226, column: 17, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8608, file: !8398, line: 225, column: 38)
!8626 = !DILocation(line: 226, column: 8, scope: !8625)
!8627 = !DILocation(line: 226, column: 11, scope: !8625)
!8628 = distinct !{!8628, !8623, !8629}
!8629 = !DILocation(line: 227, column: 2, scope: !8608)
!8630 = !DILocation(line: 228, column: 8, scope: !8608)
!8631 = !DILocation(line: 230, column: 2, scope: !8608)
!8632 = distinct !DISubprogram(name: "memcmp", scope: !8398, file: !8398, line: 239, type: !8633, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8635)
!8633 = !DISubroutineType(types: !8634)
!8634 = !{!108, !13, !13, !439}
!8635 = !{!8636, !8637, !8638, !8639, !8640}
!8636 = !DILocalVariable(name: "m1", arg: 1, scope: !8632, file: !8398, line: 239, type: !13)
!8637 = !DILocalVariable(name: "m2", arg: 2, scope: !8632, file: !8398, line: 239, type: !13)
!8638 = !DILocalVariable(name: "n", arg: 3, scope: !8632, file: !8398, line: 239, type: !439)
!8639 = !DILocalVariable(name: "c1", scope: !8632, file: !8398, line: 241, type: !105)
!8640 = !DILocalVariable(name: "c2", scope: !8632, file: !8398, line: 242, type: !105)
!8641 = !DILocation(line: 0, scope: !8632)
!8642 = !DILocation(line: 244, column: 7, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8632, file: !8398, line: 244, column: 6)
!8644 = !DILocation(line: 244, column: 6, scope: !8632)
!8645 = !DILocation(line: 248, column: 10, scope: !8632)
!8646 = !DILocation(line: 248, column: 14, scope: !8632)
!8647 = !DILocation(line: 248, column: 19, scope: !8632)
!8648 = !DILocation(line: 248, column: 2, scope: !8632)
!8649 = !DILocation(line: 248, column: 23, scope: !8632)
!8650 = !DILocation(line: 248, column: 30, scope: !8632)
!8651 = !DILocation(line: 248, column: 27, scope: !8632)
!8652 = !DILocation(line: 249, column: 5, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8632, file: !8398, line: 248, column: 36)
!8654 = !DILocation(line: 250, column: 5, scope: !8653)
!8655 = distinct !{!8655, !8648, !8656}
!8656 = !DILocation(line: 251, column: 2, scope: !8632)
!8657 = !DILocation(line: 253, column: 9, scope: !8632)
!8658 = !DILocation(line: 253, column: 15, scope: !8632)
!8659 = !DILocation(line: 253, column: 13, scope: !8632)
!8660 = !DILocation(line: 253, column: 2, scope: !8632)
!8661 = !DILocation(line: 254, column: 1, scope: !8632)
!8662 = distinct !DISubprogram(name: "memmove", scope: !8398, file: !8398, line: 263, type: !8663, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8665)
!8663 = !DISubroutineType(types: !8664)
!8664 = !{!104, !104, !13, !439}
!8665 = !{!8666, !8667, !8668, !8669, !8670}
!8666 = !DILocalVariable(name: "d", arg: 1, scope: !8662, file: !8398, line: 263, type: !104)
!8667 = !DILocalVariable(name: "s", arg: 2, scope: !8662, file: !8398, line: 263, type: !13)
!8668 = !DILocalVariable(name: "n", arg: 3, scope: !8662, file: !8398, line: 263, type: !439)
!8669 = !DILocalVariable(name: "dest", scope: !8662, file: !8398, line: 265, type: !443)
!8670 = !DILocalVariable(name: "src", scope: !8662, file: !8398, line: 266, type: !105)
!8671 = !DILocation(line: 0, scope: !8662)
!8672 = !DILocation(line: 268, column: 21, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8662, file: !8398, line: 268, column: 6)
!8674 = !DILocation(line: 268, column: 28, scope: !8673)
!8675 = !DILocation(line: 268, column: 6, scope: !8662)
!8676 = !DILocation(line: 280, column: 12, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8673, file: !8398, line: 278, column: 9)
!8678 = !DILocation(line: 280, column: 3, scope: !8677)
!8679 = !DILocation(line: 275, column: 5, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !8398, line: 274, column: 17)
!8681 = distinct !DILexicalBlock(scope: !8673, file: !8398, line: 268, column: 33)
!8682 = !DILocation(line: 276, column: 14, scope: !8680)
!8683 = !DILocation(line: 276, column: 4, scope: !8680)
!8684 = !DILocation(line: 276, column: 12, scope: !8680)
!8685 = !DILocation(line: 274, column: 12, scope: !8681)
!8686 = !DILocation(line: 274, column: 3, scope: !8681)
!8687 = distinct !{!8687, !8686, !8688}
!8688 = !DILocation(line: 277, column: 3, scope: !8681)
!8689 = !DILocation(line: 281, column: 12, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8677, file: !8398, line: 280, column: 17)
!8691 = !DILocation(line: 281, column: 10, scope: !8690)
!8692 = !DILocation(line: 282, column: 8, scope: !8690)
!8693 = !DILocation(line: 283, column: 7, scope: !8690)
!8694 = !DILocation(line: 284, column: 5, scope: !8690)
!8695 = distinct !{!8695, !8678, !8696}
!8696 = !DILocation(line: 285, column: 3, scope: !8677)
!8697 = !DILocation(line: 288, column: 2, scope: !8662)
!8698 = distinct !DISubprogram(name: "memcpy", scope: !8398, file: !8398, line: 298, type: !8699, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8703)
!8699 = !DISubroutineType(types: !8700)
!8700 = !{!104, !8701, !8702, !439}
!8701 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8702 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8703 = !{!8704, !8705, !8706, !8707, !8708}
!8704 = !DILocalVariable(name: "d", arg: 1, scope: !8698, file: !8398, line: 298, type: !8701)
!8705 = !DILocalVariable(name: "s", arg: 2, scope: !8698, file: !8398, line: 298, type: !8702)
!8706 = !DILocalVariable(name: "n", arg: 3, scope: !8698, file: !8398, line: 298, type: !439)
!8707 = !DILocalVariable(name: "d_byte", scope: !8698, file: !8398, line: 302, type: !1334)
!8708 = !DILocalVariable(name: "s_byte", scope: !8698, file: !8398, line: 303, type: !3175)
!8709 = !DILocation(line: 0, scope: !8698)
!8710 = !DILocation(line: 337, column: 11, scope: !8698)
!8711 = !DILocation(line: 337, column: 2, scope: !8698)
!8712 = !DILocation(line: 338, column: 25, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8698, file: !8398, line: 337, column: 16)
!8714 = !DILocation(line: 338, column: 17, scope: !8713)
!8715 = !DILocation(line: 338, column: 11, scope: !8713)
!8716 = !DILocation(line: 338, column: 15, scope: !8713)
!8717 = !DILocation(line: 339, column: 4, scope: !8713)
!8718 = distinct !{!8718, !8711, !8719}
!8719 = !DILocation(line: 340, column: 2, scope: !8698)
!8720 = !DILocation(line: 342, column: 2, scope: !8698)
!8721 = distinct !DISubprogram(name: "memset", scope: !8398, file: !8398, line: 352, type: !8722, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8724)
!8722 = !DISubroutineType(types: !8723)
!8723 = !{!104, !104, !108, !439}
!8724 = !{!8725, !8726, !8727, !8728, !8729}
!8725 = !DILocalVariable(name: "buf", arg: 1, scope: !8721, file: !8398, line: 352, type: !104)
!8726 = !DILocalVariable(name: "c", arg: 2, scope: !8721, file: !8398, line: 352, type: !108)
!8727 = !DILocalVariable(name: "n", arg: 3, scope: !8721, file: !8398, line: 352, type: !439)
!8728 = !DILocalVariable(name: "d_byte", scope: !8721, file: !8398, line: 356, type: !1334)
!8729 = !DILocalVariable(name: "c_byte", scope: !8721, file: !8398, line: 357, type: !165)
!8730 = !DILocation(line: 0, scope: !8721)
!8731 = !DILocation(line: 357, column: 25, scope: !8721)
!8732 = !DILocation(line: 389, column: 11, scope: !8721)
!8733 = !DILocation(line: 389, column: 2, scope: !8721)
!8734 = !DILocation(line: 390, column: 11, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8721, file: !8398, line: 389, column: 16)
!8736 = !DILocation(line: 390, column: 15, scope: !8735)
!8737 = !DILocation(line: 391, column: 4, scope: !8735)
!8738 = distinct !{!8738, !8733, !8739}
!8739 = !DILocation(line: 392, column: 2, scope: !8721)
!8740 = !DILocation(line: 394, column: 2, scope: !8721)
!8741 = distinct !DISubprogram(name: "memchr", scope: !8398, file: !8398, line: 404, type: !8742, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !8744)
!8742 = !DISubroutineType(types: !8743)
!8743 = !{!104, !13, !108, !439}
!8744 = !{!8745, !8746, !8747, !8748}
!8745 = !DILocalVariable(name: "s", arg: 1, scope: !8741, file: !8398, line: 404, type: !13)
!8746 = !DILocalVariable(name: "c", arg: 2, scope: !8741, file: !8398, line: 404, type: !108)
!8747 = !DILocalVariable(name: "n", arg: 3, scope: !8741, file: !8398, line: 404, type: !439)
!8748 = !DILocalVariable(name: "p", scope: !8749, file: !8398, line: 407, type: !3175)
!8749 = distinct !DILexicalBlock(scope: !8750, file: !8398, line: 406, column: 14)
!8750 = distinct !DILexicalBlock(scope: !8741, file: !8398, line: 406, column: 6)
!8751 = !DILocation(line: 0, scope: !8741)
!8752 = !DILocation(line: 406, column: 8, scope: !8750)
!8753 = !DILocation(line: 406, column: 6, scope: !8741)
!8754 = !DILocation(line: 409, column: 3, scope: !8749)
!8755 = !DILocation(line: 0, scope: !8749)
!8756 = !DILocation(line: 410, column: 8, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !8398, line: 410, column: 8)
!8758 = distinct !DILexicalBlock(scope: !8749, file: !8398, line: 409, column: 6)
!8759 = !DILocation(line: 410, column: 13, scope: !8757)
!8760 = !DILocation(line: 410, column: 8, scope: !8758)
!8761 = distinct !{!8761, !8754, !8762}
!8762 = !DILocation(line: 414, column: 20, scope: !8749)
!8763 = !DILocation(line: 417, column: 2, scope: !8741)
!8764 = !DILocation(line: 418, column: 1, scope: !8741)
!8765 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !826, file: !826, line: 23, type: !4996, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8766)
!8766 = !{!8767}
!8767 = !DILocalVariable(name: "hook", arg: 1, scope: !8765, file: !826, line: 23, type: !556)
!8768 = !DILocation(line: 0, scope: !8765)
!8769 = !DILocation(line: 25, column: 15, scope: !8765)
!8770 = !DILocation(line: 26, column: 1, scope: !8765)
!8771 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !826, file: !826, line: 14, type: !557, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8772)
!8772 = !{!8773}
!8773 = !DILocalVariable(name: "c", arg: 1, scope: !8771, file: !826, line: 14, type: !108)
!8774 = !DILocation(line: 0, scope: !8771)
!8775 = !DILocation(line: 18, column: 2, scope: !8771)
!8776 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !826, file: !826, line: 28, type: !8777, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8779)
!8777 = !DISubroutineType(types: !8778)
!8778 = !{!108, !108, !822}
!8779 = !{!8780, !8781}
!8780 = !DILocalVariable(name: "c", arg: 1, scope: !8776, file: !826, line: 28, type: !108)
!8781 = !DILocalVariable(name: "stream", arg: 2, scope: !8776, file: !826, line: 28, type: !822)
!8782 = !DILocation(line: 0, scope: !8776)
!8783 = !DILocation(line: 30, column: 27, scope: !8776)
!8784 = !DILocation(line: 30, column: 50, scope: !8776)
!8785 = !DILocation(line: 30, column: 9, scope: !8776)
!8786 = !DILocation(line: 30, column: 2, scope: !8776)
!8787 = distinct !DISubprogram(name: "fputc", scope: !826, file: !826, line: 41, type: !8777, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8788)
!8788 = !{!8789, !8790}
!8789 = !DILocalVariable(name: "c", arg: 1, scope: !8787, file: !826, line: 41, type: !108)
!8790 = !DILocalVariable(name: "stream", arg: 2, scope: !8787, file: !826, line: 41, type: !822)
!8791 = !DILocation(line: 0, scope: !8787)
!8792 = !DILocation(line: 43, column: 9, scope: !8787)
!8793 = !DILocation(line: 43, column: 2, scope: !8787)
!8794 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8795, file: !8795, line: 72, type: !8777, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8796)
!8795 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!8796 = !{!8797, !8798}
!8797 = !DILocalVariable(name: "c", arg: 1, scope: !8794, file: !8795, line: 72, type: !108)
!8798 = !DILocalVariable(name: "stream", arg: 2, scope: !8794, file: !8795, line: 72, type: !822)
!8799 = !DILocation(line: 0, scope: !8794)
!8800 = !DILocation(line: 81, column: 2, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8794, file: !8795, line: 81, column: 2)
!8802 = !{i64 2154820960}
!8803 = !DILocation(line: 82, column: 9, scope: !8794)
!8804 = !DILocation(line: 82, column: 2, scope: !8794)
!8805 = distinct !DISubprogram(name: "fputs", scope: !826, file: !826, line: 46, type: !8806, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8809)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!108, !8402, !8808}
!8808 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !822)
!8809 = !{!8810, !8811, !8812, !8813}
!8810 = !DILocalVariable(name: "s", arg: 1, scope: !8805, file: !826, line: 46, type: !8402)
!8811 = !DILocalVariable(name: "stream", arg: 2, scope: !8805, file: !826, line: 46, type: !8808)
!8812 = !DILocalVariable(name: "len", scope: !8805, file: !826, line: 48, type: !108)
!8813 = !DILocalVariable(name: "ret", scope: !8805, file: !826, line: 49, type: !108)
!8814 = !DILocation(line: 0, scope: !8805)
!8815 = !DILocation(line: 48, column: 12, scope: !8805)
!8816 = !DILocation(line: 51, column: 8, scope: !8805)
!8817 = !DILocation(line: 53, column: 13, scope: !8805)
!8818 = !DILocation(line: 53, column: 9, scope: !8805)
!8819 = !DILocation(line: 53, column: 2, scope: !8805)
!8820 = distinct !DISubprogram(name: "fwrite", scope: !826, file: !826, line: 99, type: !8821, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8823)
!8821 = !DISubroutineType(types: !8822)
!8822 = !{!439, !8702, !439, !439, !8808}
!8823 = !{!8824, !8825, !8826, !8827}
!8824 = !DILocalVariable(name: "ptr", arg: 1, scope: !8820, file: !826, line: 99, type: !8702)
!8825 = !DILocalVariable(name: "size", arg: 2, scope: !8820, file: !826, line: 99, type: !439)
!8826 = !DILocalVariable(name: "nitems", arg: 3, scope: !8820, file: !826, line: 99, type: !439)
!8827 = !DILocalVariable(name: "stream", arg: 4, scope: !8820, file: !826, line: 100, type: !8808)
!8828 = !DILocation(line: 0, scope: !8820)
!8829 = !DILocation(line: 102, column: 9, scope: !8820)
!8830 = !DILocation(line: 102, column: 2, scope: !8820)
!8831 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8795, file: !8795, line: 96, type: !8821, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8832)
!8832 = !{!8833, !8834, !8835, !8836}
!8833 = !DILocalVariable(name: "ptr", arg: 1, scope: !8831, file: !8795, line: 96, type: !8702)
!8834 = !DILocalVariable(name: "size", arg: 2, scope: !8831, file: !8795, line: 96, type: !439)
!8835 = !DILocalVariable(name: "nitems", arg: 3, scope: !8831, file: !8795, line: 96, type: !439)
!8836 = !DILocalVariable(name: "stream", arg: 4, scope: !8831, file: !8795, line: 96, type: !8808)
!8837 = !DILocation(line: 0, scope: !8831)
!8838 = !DILocation(line: 107, column: 2, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8831, file: !8795, line: 107, column: 2)
!8840 = !{i64 2154821064}
!8841 = !DILocation(line: 108, column: 9, scope: !8831)
!8842 = !DILocation(line: 108, column: 2, scope: !8831)
!8843 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !826, file: !826, line: 56, type: !8821, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8844)
!8844 = !{!8845, !8846, !8847, !8848, !8849, !8850, !8851, !8852}
!8845 = !DILocalVariable(name: "ptr", arg: 1, scope: !8843, file: !826, line: 56, type: !8702)
!8846 = !DILocalVariable(name: "size", arg: 2, scope: !8843, file: !826, line: 56, type: !439)
!8847 = !DILocalVariable(name: "nitems", arg: 3, scope: !8843, file: !826, line: 57, type: !439)
!8848 = !DILocalVariable(name: "stream", arg: 4, scope: !8843, file: !826, line: 57, type: !8808)
!8849 = !DILocalVariable(name: "i", scope: !8843, file: !826, line: 59, type: !439)
!8850 = !DILocalVariable(name: "j", scope: !8843, file: !826, line: 60, type: !439)
!8851 = !DILocalVariable(name: "p", scope: !8843, file: !826, line: 61, type: !3175)
!8852 = !DILabel(scope: !8843, name: "done", file: !826, line: 82)
!8853 = !DILocation(line: 0, scope: !8843)
!8854 = !DILocation(line: 63, column: 14, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8843, file: !826, line: 63, column: 6)
!8856 = !DILocation(line: 63, column: 24, scope: !8855)
!8857 = !DILocation(line: 72, column: 3, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8843, file: !826, line: 70, column: 5)
!8859 = !DILocation(line: 0, scope: !8858)
!8860 = !DILocation(line: 73, column: 8, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8862, file: !826, line: 73, column: 8)
!8862 = distinct !DILexicalBlock(scope: !8858, file: !826, line: 72, column: 6)
!8863 = !DILocation(line: 73, column: 29, scope: !8861)
!8864 = !DILocation(line: 73, column: 27, scope: !8861)
!8865 = !DILocation(line: 73, column: 21, scope: !8861)
!8866 = !DILocation(line: 73, column: 33, scope: !8861)
!8867 = !DILocation(line: 73, column: 8, scope: !8862)
!8868 = !DILocation(line: 76, column: 5, scope: !8862)
!8869 = !DILocation(line: 77, column: 14, scope: !8858)
!8870 = !DILocation(line: 77, column: 3, scope: !8862)
!8871 = distinct !{!8871, !8857, !8872}
!8872 = !DILocation(line: 77, column: 17, scope: !8858)
!8873 = !DILocation(line: 79, column: 4, scope: !8858)
!8874 = !DILocation(line: 80, column: 13, scope: !8843)
!8875 = !DILocation(line: 80, column: 2, scope: !8858)
!8876 = distinct !{!8876, !8877, !8878}
!8877 = !DILocation(line: 70, column: 2, scope: !8843)
!8878 = !DILocation(line: 80, column: 16, scope: !8843)
!8879 = !DILocation(line: 82, column: 1, scope: !8843)
!8880 = !DILocation(line: 83, column: 17, scope: !8843)
!8881 = !DILocation(line: 83, column: 2, scope: !8843)
!8882 = !DILocation(line: 84, column: 1, scope: !8843)
!8883 = distinct !DISubprogram(name: "puts", scope: !826, file: !826, line: 106, type: !8884, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !819, retainedNodes: !8886)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{!108, !105}
!8886 = !{!8887}
!8887 = !DILocalVariable(name: "s", arg: 1, scope: !8883, file: !826, line: 106, type: !105)
!8888 = !DILocation(line: 0, scope: !8883)
!8889 = !DILocation(line: 108, column: 6, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8883, file: !826, line: 108, column: 6)
!8891 = !DILocation(line: 108, column: 23, scope: !8890)
!8892 = !DILocation(line: 108, column: 6, scope: !8883)
!8893 = !DILocation(line: 112, column: 9, scope: !8883)
!8894 = !DILocation(line: 112, column: 29, scope: !8883)
!8895 = !DILocation(line: 112, column: 2, scope: !8883)
!8896 = !DILocation(line: 113, column: 1, scope: !8883)
!8897 = distinct !DISubprogram(name: "rtio_simple_submit", scope: !857, file: !857, line: 25, type: !8898, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8987)
!8898 = !DISubroutineType(types: !8899)
!8899 = !{!108, !8900}
!8900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8901, size: 32)
!8901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !8902)
!8902 = !{!8903, !8968, !8969, !8976}
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !8901, file: !125, line: 228, baseType: !8904, size: 32)
!8904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8905, size: 32)
!8905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !8906)
!8906 = !{!8907}
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8905, file: !125, line: 211, baseType: !8908, size: 32)
!8908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8909, size: 32)
!8909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8910)
!8910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !8911)
!8911 = !{!8912, !8914, !8967}
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8910, file: !125, line: 177, baseType: !8913, size: 32)
!8913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8898, size: 32)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !8910, file: !125, line: 182, baseType: !8915, size: 32, offset: 32)
!8915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8916, size: 32)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{null, !8900, !8918, !108}
!8918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8919, size: 32)
!8919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8920)
!8920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !8921)
!8921 = !{!8922, !8923, !8924, !8925, !8958, !8959}
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !8920, file: !125, line: 110, baseType: !164, size: 8)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8920, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8920, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !8920, file: !125, line: 116, baseType: !8926, size: 32, offset: 32)
!8926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8927, size: 32)
!8927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8928)
!8928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !8929)
!8929 = !{!8930, !8939, !8957}
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8928, file: !125, line: 308, baseType: !8931, size: 32)
!8931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8932, size: 32)
!8932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8933)
!8933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !8934)
!8934 = !{!8935}
!8935 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8933, file: !125, line: 271, baseType: !8936, size: 32)
!8936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8937, size: 32)
!8937 = !DISubroutineType(types: !8938)
!8938 = !{null, !8918, !8900}
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !8928, file: !125, line: 311, baseType: !8940, size: 32, offset: 32)
!8940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8941, size: 32)
!8941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !8942)
!8942 = !{!8943, !8951}
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8941, file: !125, line: 299, baseType: !8944, size: 160)
!8944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !8945)
!8945 = !{!8946, !8947, !8948, !8949, !8950}
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !8944, file: !151, line: 60, baseType: !24, size: 32)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !8944, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !8944, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !8944, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8944, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8941, file: !125, line: 300, baseType: !8952, offset: 160)
!8952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8953, elements: !197)
!8953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !8954)
!8954 = !{!8955, !8956}
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !8953, file: !125, line: 289, baseType: !8918, size: 32)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !8953, file: !125, line: 290, baseType: !8900, size: 32, offset: 32)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8928, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8920, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!8959 = !DIDerivedType(tag: DW_TAG_member, scope: !8920, file: !125, line: 127, baseType: !8960, size: 64, offset: 96)
!8960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8920, file: !125, line: 127, size: 64, elements: !8961)
!8961 = !{!8962}
!8962 = !DIDerivedType(tag: DW_TAG_member, scope: !8960, file: !125, line: 128, baseType: !8963, size: 64)
!8963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8960, file: !125, line: 128, size: 64, elements: !8964)
!8964 = !{!8965, !8966}
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !8963, file: !125, line: 129, baseType: !113, size: 32)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8963, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !8910, file: !125, line: 187, baseType: !8915, size: 32, offset: 64)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !8901, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !8901, file: !125, line: 254, baseType: !8970, size: 32, offset: 64)
!8970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8971, size: 32)
!8971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !8972)
!8972 = !{!8973, !8974}
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8971, file: !125, line: 143, baseType: !8944, size: 160)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8971, file: !125, line: 144, baseType: !8975, offset: 160)
!8975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8920, elements: !197)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !8901, file: !125, line: 257, baseType: !8977, size: 32, offset: 96)
!8977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8978, size: 32)
!8978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !8979)
!8979 = !{!8980, !8981}
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8978, file: !125, line: 162, baseType: !8944, size: 160)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8978, file: !125, line: 163, baseType: !8982, offset: 160)
!8982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8983, elements: !197)
!8983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !8984)
!8984 = !{!8985, !8986}
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !8983, file: !125, line: 151, baseType: !220, size: 32)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8983, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!8987 = !{!8988, !8989, !8991, !8993}
!8988 = !DILocalVariable(name: "r", arg: 1, scope: !8897, file: !857, line: 25, type: !8900)
!8989 = !DILocalVariable(name: "sqe", scope: !8897, file: !857, line: 30, type: !8990)
!8990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8920, size: 32)
!8991 = !DILocalVariable(name: "idx", scope: !8992, file: !857, line: 30, type: !24)
!8992 = distinct !DILexicalBlock(scope: !8897, file: !857, line: 30, column: 25)
!8993 = !DILocalVariable(name: "has_consumable", scope: !8992, file: !857, line: 30, type: !422)
!8994 = !DILocation(line: 0, scope: !8897)
!8995 = !DILocation(line: 30, column: 25, scope: !8992)
!8996 = !DILocation(line: 0, scope: !8992)
!8997 = !DILocation(line: 30, column: 25, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !857, line: 30, column: 25)
!8999 = distinct !DILexicalBlock(scope: !8992, file: !857, line: 30, column: 25)
!9000 = !DILocation(line: 33, column: 3, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !857, line: 32, column: 19)
!9002 = distinct !DILexicalBlock(scope: !8897, file: !857, line: 32, column: 6)
!9003 = !DILocation(line: 34, column: 2, scope: !9001)
!9004 = !DILocation(line: 36, column: 2, scope: !8897)
!9005 = distinct !DISubprogram(name: "atomic_get", scope: !3701, file: !3701, line: 159, type: !3702, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9006)
!9006 = !{!9007}
!9007 = !DILocalVariable(name: "target", arg: 1, scope: !9005, file: !3701, line: 159, type: !3705)
!9008 = !DILocation(line: 0, scope: !9005)
!9009 = !DILocation(line: 161, column: 9, scope: !9005)
!9010 = !DILocation(line: 161, column: 2, scope: !9005)
!9011 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !8937, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9012)
!9012 = !{!9013, !9014}
!9013 = !DILocalVariable(name: "sqe", arg: 1, scope: !9011, file: !125, line: 457, type: !8918)
!9014 = !DILocalVariable(name: "r", arg: 2, scope: !9011, file: !125, line: 457, type: !8900)
!9015 = !DILocation(line: 0, scope: !9011)
!9016 = !DILocation(line: 459, column: 7, scope: !9011)
!9017 = !DILocation(line: 459, column: 14, scope: !9011)
!9018 = !DILocation(line: 459, column: 19, scope: !9011)
!9019 = !DILocation(line: 459, column: 2, scope: !9011)
!9020 = !DILocation(line: 460, column: 1, scope: !9011)
!9021 = distinct !DISubprogram(name: "rtio_simple_ok", scope: !857, file: !857, line: 42, type: !8916, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9022)
!9022 = !{!9023, !9024, !9025, !9026}
!9023 = !DILocalVariable(name: "r", arg: 1, scope: !9021, file: !857, line: 42, type: !8900)
!9024 = !DILocalVariable(name: "sqe", arg: 2, scope: !9021, file: !857, line: 42, type: !8918)
!9025 = !DILocalVariable(name: "result", arg: 3, scope: !9021, file: !857, line: 42, type: !108)
!9026 = !DILocalVariable(name: "userdata", scope: !9021, file: !857, line: 44, type: !104)
!9027 = !DILocation(line: 0, scope: !9021)
!9028 = !DILocation(line: 44, column: 24, scope: !9021)
!9029 = !DILocation(line: 46, column: 2, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9031, file: !857, line: 46, column: 2)
!9031 = distinct !DILexicalBlock(scope: !9021, file: !857, line: 46, column: 2)
!9032 = !DILocation(line: 46, column: 2, scope: !9031)
!9033 = !DILocation(line: 46, column: 2, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9030, file: !857, line: 46, column: 2)
!9035 = !DILocation(line: 47, column: 2, scope: !9021)
!9036 = !DILocation(line: 48, column: 2, scope: !9021)
!9037 = !DILocation(line: 49, column: 1, scope: !9021)
!9038 = distinct !DISubprogram(name: "atomic_add", scope: !3701, file: !3701, line: 86, type: !3737, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9039)
!9039 = !{!9040, !9041}
!9040 = !DILocalVariable(name: "target", arg: 1, scope: !9038, file: !3701, line: 86, type: !3739)
!9041 = !DILocalVariable(name: "value", arg: 2, scope: !9038, file: !3701, line: 86, type: !3704)
!9042 = !DILocation(line: 0, scope: !9038)
!9043 = !DILocation(line: 88, column: 9, scope: !9038)
!9044 = !DILocation(line: 88, column: 2, scope: !9038)
!9045 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9046, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9048)
!9046 = !DISubroutineType(types: !9047)
!9047 = !{null, !8900, !108, !104}
!9048 = !{!9049, !9050, !9051, !9052, !9054, !9056}
!9049 = !DILocalVariable(name: "r", arg: 1, scope: !9045, file: !125, line: 607, type: !8900)
!9050 = !DILocalVariable(name: "result", arg: 2, scope: !9045, file: !125, line: 607, type: !108)
!9051 = !DILocalVariable(name: "userdata", arg: 3, scope: !9045, file: !125, line: 607, type: !104)
!9052 = !DILocalVariable(name: "cqe", scope: !9045, file: !125, line: 609, type: !9053)
!9053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8983, size: 32)
!9054 = !DILocalVariable(name: "idx", scope: !9055, file: !125, line: 609, type: !24)
!9055 = distinct !DILexicalBlock(scope: !9045, file: !125, line: 609, column: 25)
!9056 = !DILocalVariable(name: "acq", scope: !9055, file: !125, line: 609, type: !422)
!9057 = !DILocation(line: 0, scope: !9045)
!9058 = !DILocation(line: 609, column: 25, scope: !9055)
!9059 = !DILocation(line: 0, scope: !9055)
!9060 = !DILocation(line: 612, column: 18, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !125, line: 611, column: 19)
!9062 = distinct !DILexicalBlock(scope: !9045, file: !125, line: 611, column: 6)
!9063 = !DILocation(line: 612, column: 3, scope: !9061)
!9064 = !DILocation(line: 613, column: 2, scope: !9061)
!9065 = !DILocation(line: 609, column: 25, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !125, line: 609, column: 25)
!9067 = distinct !DILexicalBlock(scope: !9055, file: !125, line: 609, column: 25)
!9068 = !DILocation(line: 614, column: 8, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9062, file: !125, line: 613, column: 9)
!9070 = !DILocation(line: 614, column: 15, scope: !9069)
!9071 = !DILocation(line: 615, column: 8, scope: !9069)
!9072 = !DILocation(line: 615, column: 17, scope: !9069)
!9073 = !DILocation(line: 616, column: 3, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !125, line: 616, column: 3)
!9075 = distinct !DILexicalBlock(scope: !9069, file: !125, line: 616, column: 3)
!9076 = !DILocation(line: 616, column: 3, scope: !9075)
!9077 = !DILocation(line: 616, column: 3, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9074, file: !125, line: 616, column: 3)
!9079 = !DILocation(line: 629, column: 1, scope: !9045)
!9080 = distinct !DISubprogram(name: "atomic_inc", scope: !3701, file: !3701, line: 123, type: !9081, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9083)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!3704, !3739}
!9083 = !{!9084}
!9084 = !DILocalVariable(name: "target", arg: 1, scope: !9080, file: !3701, line: 123, type: !3739)
!9085 = !DILocation(line: 0, scope: !9080)
!9086 = !DILocation(line: 125, column: 9, scope: !9080)
!9087 = !DILocation(line: 125, column: 2, scope: !9080)
!9088 = distinct !DISubprogram(name: "rtio_simple_err", scope: !857, file: !857, line: 54, type: !8916, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !9089)
!9089 = !{!9090, !9091, !9092, !9093, !9094, !9095, !9096, !9100, !9101, !9104}
!9090 = !DILocalVariable(name: "r", arg: 1, scope: !9088, file: !857, line: 54, type: !8900)
!9091 = !DILocalVariable(name: "sqe", arg: 2, scope: !9088, file: !857, line: 54, type: !8918)
!9092 = !DILocalVariable(name: "result", arg: 3, scope: !9088, file: !857, line: 54, type: !108)
!9093 = !DILocalVariable(name: "nsqe", scope: !9088, file: !857, line: 56, type: !8990)
!9094 = !DILocalVariable(name: "userdata", scope: !9088, file: !857, line: 57, type: !104)
!9095 = !DILocalVariable(name: "chained", scope: !9088, file: !857, line: 58, type: !422)
!9096 = !DILocalVariable(name: "idx", scope: !9097, file: !857, line: 65, type: !24)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !857, line: 65, column: 10)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !857, line: 63, column: 15)
!9099 = distinct !DILexicalBlock(scope: !9088, file: !857, line: 63, column: 6)
!9100 = !DILocalVariable(name: "has_consumable", scope: !9097, file: !857, line: 65, type: !422)
!9101 = !DILocalVariable(name: "idx", scope: !9102, file: !857, line: 70, type: !24)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !857, line: 70, column: 11)
!9103 = distinct !DILexicalBlock(scope: !9098, file: !857, line: 66, column: 58)
!9104 = !DILocalVariable(name: "has_consumable", scope: !9102, file: !857, line: 70, type: !422)
!9105 = !DILocation(line: 0, scope: !9088)
!9106 = !DILocation(line: 57, column: 24, scope: !9088)
!9107 = !DILocation(line: 58, column: 22, scope: !9088)
!9108 = !DILocation(line: 58, column: 28, scope: !9088)
!9109 = !DILocation(line: 58, column: 17, scope: !9088)
!9110 = !DILocation(line: 60, column: 2, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !857, line: 60, column: 2)
!9112 = distinct !DILexicalBlock(scope: !9088, file: !857, line: 60, column: 2)
!9113 = !DILocation(line: 60, column: 2, scope: !9112)
!9114 = !DILocation(line: 60, column: 2, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9111, file: !857, line: 60, column: 2)
!9116 = !DILocation(line: 61, column: 34, scope: !9088)
!9117 = !DILocation(line: 61, column: 2, scope: !9088)
!9118 = !DILocation(line: 63, column: 6, scope: !9088)
!9119 = !DILocation(line: 65, column: 10, scope: !9097)
!9120 = !DILocation(line: 0, scope: !9097)
!9121 = !DILocation(line: 0, scope: !9098)
!9122 = !DILocation(line: 66, column: 32, scope: !9098)
!9123 = !DILocation(line: 66, column: 38, scope: !9098)
!9124 = !DILocation(line: 66, column: 23, scope: !9098)
!9125 = !DILocation(line: 66, column: 3, scope: !9098)
!9126 = !DILocation(line: 67, column: 21, scope: !9103)
!9127 = !DILocation(line: 68, column: 4, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9129, file: !857, line: 68, column: 4)
!9129 = distinct !DILexicalBlock(scope: !9103, file: !857, line: 68, column: 4)
!9130 = !DILocation(line: 68, column: 4, scope: !9129)
!9131 = !DILocation(line: 68, column: 4, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9128, file: !857, line: 68, column: 4)
!9133 = !DILocation(line: 69, column: 4, scope: !9103)
!9134 = !DILocation(line: 70, column: 11, scope: !9102)
!9135 = !DILocation(line: 0, scope: !9102)
!9136 = !DILocation(line: 74, column: 4, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !857, line: 73, column: 21)
!9138 = distinct !DILexicalBlock(scope: !9098, file: !857, line: 73, column: 7)
!9139 = !DILocation(line: 75, column: 3, scope: !9137)
!9140 = !DILocation(line: 79, column: 3, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9099, file: !857, line: 77, column: 9)
!9142 = !DILocation(line: 81, column: 1, scope: !9088)
!9143 = distinct !DISubprogram(name: "rtio_concurrent_submit", scope: !974, file: !974, line: 119, type: !882, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9144)
!9144 = !{!9145, !9146, !9147, !9148, !9149, !9154, !9158, !9159, !9162, !9163, !9165, !9168, !9169, !9171, !9172, !9175}
!9145 = !DILocalVariable(name: "r", arg: 1, scope: !9143, file: !974, line: 119, type: !884)
!9146 = !DILocalVariable(name: "exc", scope: !9143, file: !974, line: 124, type: !868)
!9147 = !DILocalVariable(name: "sqe", scope: !9143, file: !974, line: 126, type: !968)
!9148 = !DILocalVariable(name: "last_sqe", scope: !9143, file: !974, line: 127, type: !968)
!9149 = !DILocalVariable(name: "key", scope: !9143, file: !974, line: 128, type: !9150)
!9150 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !9151)
!9151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !9152)
!9152 = !{!9153}
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9151, file: !436, line: 33, baseType: !108, size: 32)
!9154 = !DILocalVariable(name: "idx", scope: !9155, file: !974, line: 137, type: !24)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !974, line: 137, column: 9)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !974, line: 136, column: 29)
!9157 = distinct !DILexicalBlock(scope: !9143, file: !974, line: 136, column: 6)
!9158 = !DILocalVariable(name: "has_consumable", scope: !9155, file: !974, line: 137, type: !422)
!9159 = !DILocalVariable(name: "idx", scope: !9160, file: !974, line: 140, type: !24)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !974, line: 140, column: 9)
!9161 = distinct !DILexicalBlock(scope: !9157, file: !974, line: 138, column: 9)
!9162 = !DILocalVariable(name: "has_next", scope: !9160, file: !974, line: 140, type: !422)
!9163 = !DILocalVariable(name: "task_idx", scope: !9164, file: !974, line: 148, type: !168)
!9164 = distinct !DILexicalBlock(scope: !9143, file: !974, line: 144, column: 46)
!9165 = !DILocalVariable(name: "idx", scope: !9166, file: !974, line: 159, type: !24)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !974, line: 159, column: 10)
!9167 = distinct !DILexicalBlock(scope: !9164, file: !974, line: 158, column: 58)
!9168 = !DILocalVariable(name: "has_next", scope: !9166, file: !974, line: 159, type: !422)
!9169 = !DILocalVariable(name: "idx", scope: !9170, file: !974, line: 167, type: !24)
!9170 = distinct !DILexicalBlock(scope: !9164, file: !974, line: 167, column: 9)
!9171 = !DILocalVariable(name: "has_next", scope: !9170, file: !974, line: 167, type: !422)
!9172 = !DILocalVariable(name: "idx", scope: !9173, file: !974, line: 181, type: !24)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !974, line: 181, column: 9)
!9174 = distinct !DILexicalBlock(scope: !9143, file: !974, line: 179, column: 22)
!9175 = !DILocalVariable(name: "has_next", scope: !9173, file: !974, line: 181, type: !422)
!9176 = !DILocation(line: 0, scope: !9143)
!9177 = !DILocation(line: 122, column: 2, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9179, file: !974, line: 122, column: 2)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !974, line: 122, column: 2)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !974, line: 122, column: 2)
!9181 = distinct !DILexicalBlock(scope: !9143, file: !974, line: 122, column: 2)
!9182 = !DILocation(line: 125, column: 41, scope: !9143)
!9183 = !DILocalVariable(name: "l", arg: 1, scope: !9184, file: !436, line: 136, type: !9187)
!9184 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !9185, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9188)
!9185 = !DISubroutineType(types: !9186)
!9186 = !{!9150, !9187}
!9187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!9188 = !{!9183, !9189}
!9189 = !DILocalVariable(name: "k", scope: !9184, file: !436, line: 139, type: !9150)
!9190 = !DILocation(line: 0, scope: !9184, inlinedAt: !9191)
!9191 = distinct !DILocation(line: 130, column: 8, scope: !9143)
!9192 = !DILocation(line: 55, column: 2, scope: !9193, inlinedAt: !9197)
!9193 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9194)
!9194 = !{!9195, !9196}
!9195 = !DILocalVariable(name: "key", scope: !9193, file: !4080, line: 44, type: !32)
!9196 = !DILocalVariable(name: "tmp", scope: !9193, file: !4080, line: 53, type: !32)
!9197 = distinct !DILocation(line: 145, column: 10, scope: !9184, inlinedAt: !9191)
!9198 = !{i64 1988503}
!9199 = !DILocation(line: 0, scope: !9193, inlinedAt: !9197)
!9200 = !DILocation(line: 136, column: 11, scope: !9157)
!9201 = !DILocation(line: 136, column: 20, scope: !9157)
!9202 = !DILocation(line: 0, scope: !9157)
!9203 = !DILocation(line: 136, column: 6, scope: !9143)
!9204 = !DILocation(line: 137, column: 9, scope: !9155)
!9205 = !DILocation(line: 0, scope: !9155)
!9206 = !DILocation(line: 140, column: 9, scope: !9160)
!9207 = !DILocation(line: 0, scope: !9160)
!9208 = !DILocation(line: 173, column: 7, scope: !9143)
!9209 = !DILocation(line: 173, column: 19, scope: !9143)
!9210 = !DILocation(line: 179, column: 2, scope: !9143)
!9211 = !DILocation(line: 144, column: 24, scope: !9143)
!9212 = !DILocation(line: 144, column: 2, scope: !9143)
!9213 = !DILocation(line: 145, column: 3, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !974, line: 145, column: 3)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !974, line: 145, column: 3)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !974, line: 145, column: 3)
!9217 = distinct !DILexicalBlock(scope: !9164, file: !974, line: 145, column: 3)
!9218 = !DILocation(line: 148, column: 23, scope: !9164)
!9219 = !DILocation(line: 0, scope: !9164)
!9220 = !DILocation(line: 150, column: 3, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !974, line: 150, column: 3)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !974, line: 150, column: 3)
!9223 = distinct !DILexicalBlock(scope: !9224, file: !974, line: 150, column: 3)
!9224 = distinct !DILexicalBlock(scope: !9164, file: !974, line: 150, column: 3)
!9225 = !DILocation(line: 153, column: 8, scope: !9164)
!9226 = !DILocation(line: 153, column: 3, scope: !9164)
!9227 = !DILocation(line: 153, column: 27, scope: !9164)
!9228 = !DILocation(line: 154, column: 8, scope: !9164)
!9229 = !DILocation(line: 154, column: 3, scope: !9164)
!9230 = !DILocation(line: 154, column: 30, scope: !9164)
!9231 = !DILocation(line: 156, column: 3, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9233, file: !974, line: 156, column: 3)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !974, line: 156, column: 3)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !974, line: 156, column: 3)
!9235 = distinct !DILexicalBlock(scope: !9164, file: !974, line: 156, column: 3)
!9236 = !DILocation(line: 158, column: 22, scope: !9164)
!9237 = !DILocation(line: 158, column: 31, scope: !9164)
!9238 = !DILocation(line: 158, column: 37, scope: !9164)
!9239 = !DILocation(line: 158, column: 3, scope: !9164)
!9240 = !DILocation(line: 159, column: 10, scope: !9166)
!9241 = !DILocation(line: 0, scope: !9166)
!9242 = !DILocation(line: 162, column: 3, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !974, line: 162, column: 3)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !974, line: 162, column: 3)
!9245 = distinct !DILexicalBlock(scope: !9246, file: !974, line: 162, column: 3)
!9246 = distinct !DILexicalBlock(scope: !9164, file: !974, line: 162, column: 3)
!9247 = !DILocation(line: 167, column: 9, scope: !9170)
!9248 = !DILocation(line: 0, scope: !9170)
!9249 = !DILocation(line: 144, column: 21, scope: !9143)
!9250 = !DILocation(line: 179, column: 13, scope: !9143)
!9251 = !DILocation(line: 181, column: 9, scope: !9173)
!9252 = !DILocation(line: 0, scope: !9173)
!9253 = !DILocation(line: 185, column: 16, scope: !9143)
!9254 = !DILocation(line: 188, column: 2, scope: !9143)
!9255 = !DILocalVariable(name: "key", arg: 2, scope: !9256, file: !436, line: 190, type: !9150)
!9256 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !9257, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9259)
!9257 = !DISubroutineType(types: !9258)
!9258 = !{null, !9187, !9150}
!9259 = !{!9260, !9255}
!9260 = !DILocalVariable(name: "l", arg: 1, scope: !9256, file: !436, line: 189, type: !9187)
!9261 = !DILocation(line: 0, scope: !9256, inlinedAt: !9262)
!9262 = distinct !DILocation(line: 190, column: 2, scope: !9143)
!9263 = !DILocalVariable(name: "key", arg: 1, scope: !9264, file: !4080, line: 84, type: !32)
!9264 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9265)
!9265 = !{!9263}
!9266 = !DILocation(line: 0, scope: !9264, inlinedAt: !9267)
!9267 = distinct !DILocation(line: 215, column: 2, scope: !9256, inlinedAt: !9262)
!9268 = !DILocation(line: 95, column: 2, scope: !9264, inlinedAt: !9267)
!9269 = !{i64 1989320}
!9270 = !DILocation(line: 192, column: 2, scope: !9143)
!9271 = distinct !DISubprogram(name: "atomic_get", scope: !3701, file: !3701, line: 159, type: !3702, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9272)
!9272 = !{!9273}
!9273 = !DILocalVariable(name: "target", arg: 1, scope: !9271, file: !3701, line: 159, type: !3705)
!9274 = !DILocation(line: 0, scope: !9271)
!9275 = !DILocation(line: 161, column: 9, scope: !9271)
!9276 = !DILocation(line: 161, column: 2, scope: !9271)
!9277 = distinct !DISubprogram(name: "conex_task_free", scope: !974, file: !974, line: 39, type: !9278, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{!422, !868}
!9280 = !{!9281}
!9281 = !DILocalVariable(name: "exc", arg: 1, scope: !9277, file: !974, line: 39, type: !868)
!9282 = !DILocation(line: 0, scope: !9277)
!9283 = !DILocation(line: 41, column: 15, scope: !9277)
!9284 = !DILocation(line: 41, column: 10, scope: !9277)
!9285 = !DILocation(line: 41, column: 30, scope: !9277)
!9286 = !DILocation(line: 41, column: 25, scope: !9277)
!9287 = !DILocation(line: 41, column: 23, scope: !9277)
!9288 = !DILocation(line: 41, column: 48, scope: !9277)
!9289 = !DILocation(line: 41, column: 43, scope: !9277)
!9290 = !DILocation(line: 41, column: 40, scope: !9277)
!9291 = !DILocation(line: 41, column: 2, scope: !9277)
!9292 = distinct !DISubprogram(name: "conex_task_next", scope: !974, file: !974, line: 47, type: !9293, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9295)
!9293 = !DISubroutineType(types: !9294)
!9294 = !{!168, !868}
!9295 = !{!9296, !9297}
!9296 = !DILocalVariable(name: "exc", arg: 1, scope: !9292, file: !974, line: 47, type: !868)
!9297 = !DILocalVariable(name: "task_id", scope: !9292, file: !974, line: 49, type: !168)
!9298 = !DILocation(line: 0, scope: !9292)
!9299 = !DILocation(line: 49, column: 26, scope: !9292)
!9300 = !DILocation(line: 51, column: 14, scope: !9292)
!9301 = !DILocation(line: 52, column: 2, scope: !9292)
!9302 = distinct !DISubprogram(name: "conex_resume", scope: !974, file: !974, line: 94, type: !9303, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9305)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{null, !884, !868}
!9305 = !{!9306, !9307, !9308}
!9306 = !DILocalVariable(name: "r", arg: 1, scope: !9302, file: !974, line: 94, type: !884)
!9307 = !DILocalVariable(name: "exc", arg: 2, scope: !9302, file: !974, line: 94, type: !868)
!9308 = !DILocalVariable(name: "task_id", scope: !9309, file: !974, line: 97, type: !168)
!9309 = distinct !DILexicalBlock(scope: !9302, file: !974, line: 97, column: 2)
!9310 = !DILocation(line: 0, scope: !9302)
!9311 = !DILocation(line: 97, column: 31, scope: !9309)
!9312 = !DILocation(line: 0, scope: !9309)
!9313 = !DILocation(line: 97, column: 56, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9309, file: !974, line: 97, column: 2)
!9315 = !DILocation(line: 97, column: 49, scope: !9314)
!9316 = !DILocation(line: 97, column: 2, scope: !9309)
!9317 = !DILocation(line: 104, column: 1, scope: !9302)
!9318 = !DILocation(line: 98, column: 12, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9320, file: !974, line: 98, column: 7)
!9320 = distinct !DILexicalBlock(scope: !9314, file: !974, line: 97, column: 76)
!9321 = !DILocation(line: 98, column: 39, scope: !9319)
!9322 = !DILocation(line: 98, column: 32, scope: !9319)
!9323 = !DILocation(line: 98, column: 7, scope: !9319)
!9324 = !DILocation(line: 98, column: 50, scope: !9319)
!9325 = !DILocation(line: 98, column: 7, scope: !9320)
!9326 = !DILocation(line: 99, column: 4, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !974, line: 99, column: 4)
!9328 = distinct !DILexicalBlock(scope: !9329, file: !974, line: 99, column: 4)
!9329 = distinct !DILexicalBlock(scope: !9330, file: !974, line: 99, column: 4)
!9330 = distinct !DILexicalBlock(scope: !9331, file: !974, line: 99, column: 4)
!9331 = distinct !DILexicalBlock(scope: !9319, file: !974, line: 98, column: 74)
!9332 = !DILocation(line: 100, column: 9, scope: !9331)
!9333 = !DILocation(line: 100, column: 4, scope: !9331)
!9334 = !DILocation(line: 100, column: 30, scope: !9331)
!9335 = !DILocation(line: 101, column: 27, scope: !9331)
!9336 = !DILocation(line: 101, column: 22, scope: !9331)
!9337 = !DILocation(line: 101, column: 4, scope: !9331)
!9338 = !DILocation(line: 102, column: 3, scope: !9331)
!9339 = !DILocation(line: 97, column: 72, scope: !9314)
!9340 = distinct !{!9340, !9316, !9341}
!9341 = !DILocation(line: 103, column: 2, scope: !9309)
!9342 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !921, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9343)
!9343 = !{!9344, !9345}
!9344 = !DILocalVariable(name: "sqe", arg: 1, scope: !9342, file: !125, line: 457, type: !923)
!9345 = !DILocalVariable(name: "r", arg: 2, scope: !9342, file: !125, line: 457, type: !884)
!9346 = !DILocation(line: 0, scope: !9342)
!9347 = !DILocation(line: 459, column: 7, scope: !9342)
!9348 = !DILocation(line: 459, column: 14, scope: !9342)
!9349 = !DILocation(line: 459, column: 19, scope: !9342)
!9350 = !DILocation(line: 459, column: 2, scope: !9342)
!9351 = !DILocation(line: 460, column: 1, scope: !9342)
!9352 = distinct !DISubprogram(name: "rtio_concurrent_ok", scope: !974, file: !974, line: 198, type: !959, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9353)
!9353 = !{!9354, !9355, !9356, !9357, !9358, !9359, !9360, !9361, !9365}
!9354 = !DILocalVariable(name: "r", arg: 1, scope: !9352, file: !974, line: 198, type: !884)
!9355 = !DILocalVariable(name: "sqe", arg: 2, scope: !9352, file: !974, line: 198, type: !923)
!9356 = !DILocalVariable(name: "result", arg: 3, scope: !9352, file: !974, line: 198, type: !108)
!9357 = !DILocalVariable(name: "next_sqe", scope: !9352, file: !974, line: 200, type: !968)
!9358 = !DILocalVariable(name: "key", scope: !9352, file: !974, line: 201, type: !9150)
!9359 = !DILocalVariable(name: "exc", scope: !9352, file: !974, line: 202, type: !868)
!9360 = !DILocalVariable(name: "task_id", scope: !9352, file: !974, line: 216, type: !168)
!9361 = !DILocalVariable(name: "idx", scope: !9362, file: !974, line: 219, type: !24)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !974, line: 219, column: 14)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !974, line: 218, column: 37)
!9364 = distinct !DILexicalBlock(scope: !9352, file: !974, line: 218, column: 6)
!9365 = !DILocalVariable(name: "has_next", scope: !9362, file: !974, line: 219, type: !422)
!9366 = !DILocation(line: 0, scope: !9352)
!9367 = !DILocation(line: 202, column: 79, scope: !9352)
!9368 = !DILocation(line: 0, scope: !9184, inlinedAt: !9369)
!9369 = distinct !DILocation(line: 211, column: 8, scope: !9352)
!9370 = !DILocation(line: 55, column: 2, scope: !9193, inlinedAt: !9371)
!9371 = distinct !DILocation(line: 145, column: 10, scope: !9184, inlinedAt: !9369)
!9372 = !DILocation(line: 0, scope: !9193, inlinedAt: !9371)
!9373 = !DILocation(line: 213, column: 34, scope: !9352)
!9374 = !DILocation(line: 213, column: 2, scope: !9352)
!9375 = !DILocation(line: 216, column: 21, scope: !9352)
!9376 = !DILocation(line: 218, column: 11, scope: !9364)
!9377 = !DILocation(line: 218, column: 17, scope: !9364)
!9378 = !DILocation(line: 218, column: 6, scope: !9352)
!9379 = !DILocation(line: 219, column: 14, scope: !9362)
!9380 = !DILocation(line: 0, scope: !9362)
!9381 = !DILocation(line: 221, column: 3, scope: !9363)
!9382 = !DILocation(line: 223, column: 8, scope: !9363)
!9383 = !DILocation(line: 223, column: 3, scope: !9363)
!9384 = !DILocation(line: 223, column: 26, scope: !9363)
!9385 = !DILocation(line: 224, column: 2, scope: !9363)
!9386 = !DILocation(line: 225, column: 8, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9364, file: !974, line: 224, column: 9)
!9388 = !DILocation(line: 225, column: 3, scope: !9387)
!9389 = !DILocation(line: 225, column: 30, scope: !9387)
!9390 = !DILocation(line: 233, column: 2, scope: !9352)
!9391 = !DILocation(line: 0, scope: !9256, inlinedAt: !9392)
!9392 = distinct !DILocation(line: 235, column: 2, scope: !9352)
!9393 = !DILocation(line: 0, scope: !9264, inlinedAt: !9394)
!9394 = distinct !DILocation(line: 215, column: 2, scope: !9256, inlinedAt: !9392)
!9395 = !DILocation(line: 95, column: 2, scope: !9264, inlinedAt: !9394)
!9396 = !DILocation(line: 236, column: 1, scope: !9352)
!9397 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9398, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9400)
!9398 = !DISubroutineType(types: !9399)
!9399 = !{null, !884, !108, !104}
!9400 = !{!9401, !9402, !9403, !9404, !9406, !9408}
!9401 = !DILocalVariable(name: "r", arg: 1, scope: !9397, file: !125, line: 607, type: !884)
!9402 = !DILocalVariable(name: "result", arg: 2, scope: !9397, file: !125, line: 607, type: !108)
!9403 = !DILocalVariable(name: "userdata", arg: 3, scope: !9397, file: !125, line: 607, type: !104)
!9404 = !DILocalVariable(name: "cqe", scope: !9397, file: !125, line: 609, type: !9405)
!9405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!9406 = !DILocalVariable(name: "idx", scope: !9407, file: !125, line: 609, type: !24)
!9407 = distinct !DILexicalBlock(scope: !9397, file: !125, line: 609, column: 25)
!9408 = !DILocalVariable(name: "acq", scope: !9407, file: !125, line: 609, type: !422)
!9409 = !DILocation(line: 0, scope: !9397)
!9410 = !DILocation(line: 609, column: 25, scope: !9407)
!9411 = !DILocation(line: 0, scope: !9407)
!9412 = !DILocation(line: 612, column: 18, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9414, file: !125, line: 611, column: 19)
!9414 = distinct !DILexicalBlock(scope: !9397, file: !125, line: 611, column: 6)
!9415 = !DILocation(line: 612, column: 3, scope: !9413)
!9416 = !DILocation(line: 613, column: 2, scope: !9413)
!9417 = !DILocation(line: 609, column: 25, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9419, file: !125, line: 609, column: 25)
!9419 = distinct !DILexicalBlock(scope: !9407, file: !125, line: 609, column: 25)
!9420 = !DILocation(line: 614, column: 8, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9414, file: !125, line: 613, column: 9)
!9422 = !DILocation(line: 614, column: 15, scope: !9421)
!9423 = !DILocation(line: 615, column: 8, scope: !9421)
!9424 = !DILocation(line: 615, column: 17, scope: !9421)
!9425 = !DILocation(line: 616, column: 3, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !125, line: 616, column: 3)
!9427 = distinct !DILexicalBlock(scope: !9421, file: !125, line: 616, column: 3)
!9428 = !DILocation(line: 616, column: 3, scope: !9427)
!9429 = !DILocation(line: 616, column: 3, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9426, file: !125, line: 616, column: 3)
!9431 = !DILocation(line: 629, column: 1, scope: !9397)
!9432 = distinct !DISubprogram(name: "conex_task_id", scope: !974, file: !974, line: 55, type: !9433, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9435)
!9433 = !DISubroutineType(types: !9434)
!9434 = !{!168, !868, !923}
!9435 = !{!9436, !9437, !9438}
!9436 = !DILocalVariable(name: "exc", arg: 1, scope: !9432, file: !974, line: 55, type: !868)
!9437 = !DILocalVariable(name: "sqe", arg: 2, scope: !9432, file: !974, line: 56, type: !923)
!9438 = !DILocalVariable(name: "task_id", scope: !9432, file: !974, line: 58, type: !168)
!9439 = !DILocation(line: 0, scope: !9432)
!9440 = !DILocation(line: 58, column: 26, scope: !9432)
!9441 = !DILocation(line: 60, column: 17, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !974, line: 60, column: 2)
!9443 = distinct !DILexicalBlock(scope: !9432, file: !974, line: 60, column: 2)
!9444 = !DILocation(line: 60, column: 2, scope: !9443)
!9445 = !DILocation(line: 61, column: 12, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9447, file: !974, line: 61, column: 7)
!9447 = distinct !DILexicalBlock(scope: !9442, file: !974, line: 60, column: 44)
!9448 = !DILocation(line: 61, column: 29, scope: !9446)
!9449 = !DILocation(line: 61, column: 7, scope: !9446)
!9450 = !DILocation(line: 61, column: 47, scope: !9446)
!9451 = !DILocation(line: 61, column: 7, scope: !9447)
!9452 = !DILocation(line: 60, column: 40, scope: !9442)
!9453 = distinct !{!9453, !9444, !9454}
!9454 = !DILocation(line: 64, column: 2, scope: !9443)
!9455 = !DILocation(line: 65, column: 2, scope: !9432)
!9456 = distinct !DISubprogram(name: "conex_sweep_resume", scope: !974, file: !974, line: 106, type: !9303, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9457)
!9457 = !{!9458, !9459}
!9458 = !DILocalVariable(name: "r", arg: 1, scope: !9456, file: !974, line: 106, type: !884)
!9459 = !DILocalVariable(name: "exc", arg: 2, scope: !9456, file: !974, line: 106, type: !868)
!9460 = !DILocation(line: 0, scope: !9456)
!9461 = !DILocation(line: 108, column: 2, scope: !9456)
!9462 = !DILocation(line: 109, column: 2, scope: !9456)
!9463 = !DILocation(line: 110, column: 1, scope: !9456)
!9464 = distinct !DISubprogram(name: "conex_sweep", scope: !974, file: !974, line: 80, type: !9303, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9465)
!9465 = !{!9466, !9467, !9468}
!9466 = !DILocalVariable(name: "r", arg: 1, scope: !9464, file: !974, line: 80, type: !884)
!9467 = !DILocalVariable(name: "exc", arg: 2, scope: !9464, file: !974, line: 80, type: !868)
!9468 = !DILocalVariable(name: "task_id", scope: !9469, file: !974, line: 83, type: !168)
!9469 = distinct !DILexicalBlock(scope: !9464, file: !974, line: 83, column: 2)
!9470 = !DILocation(line: 0, scope: !9464)
!9471 = !DILocation(line: 83, column: 31, scope: !9469)
!9472 = !DILocation(line: 0, scope: !9469)
!9473 = !DILocation(line: 84, column: 12, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9475, file: !974, line: 84, column: 7)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !974, line: 83, column: 76)
!9476 = distinct !DILexicalBlock(scope: !9469, file: !974, line: 83, column: 2)
!9477 = !DILocation(line: 83, column: 56, scope: !9476)
!9478 = !DILocation(line: 83, column: 49, scope: !9476)
!9479 = !DILocation(line: 83, column: 2, scope: !9469)
!9480 = !DILocation(line: 84, column: 39, scope: !9474)
!9481 = !DILocation(line: 84, column: 32, scope: !9474)
!9482 = !DILocation(line: 84, column: 7, scope: !9474)
!9483 = !DILocation(line: 84, column: 50, scope: !9474)
!9484 = !DILocation(line: 84, column: 7, scope: !9475)
!9485 = !DILocation(line: 85, column: 4, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !974, line: 85, column: 4)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !974, line: 85, column: 4)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !974, line: 85, column: 4)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !974, line: 85, column: 4)
!9490 = distinct !DILexicalBlock(scope: !9474, file: !974, line: 84, column: 73)
!9491 = !DILocation(line: 86, column: 4, scope: !9490)
!9492 = !DILocation(line: 87, column: 17, scope: !9490)
!9493 = !DILocation(line: 83, column: 72, scope: !9476)
!9494 = distinct !{!9494, !9479, !9495}
!9495 = !DILocation(line: 91, column: 2, scope: !9469)
!9496 = !DILocation(line: 92, column: 1, scope: !9464)
!9497 = distinct !DISubprogram(name: "conex_sweep_task", scope: !974, file: !974, line: 68, type: !9303, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9498)
!9498 = !{!9499, !9500, !9501, !9502, !9504, !9505, !9508}
!9499 = !DILocalVariable(name: "r", arg: 1, scope: !9497, file: !974, line: 68, type: !884)
!9500 = !DILocalVariable(name: "exc", arg: 2, scope: !9497, file: !974, line: 68, type: !868)
!9501 = !DILocalVariable(name: "sqe", scope: !9497, file: !974, line: 70, type: !968)
!9502 = !DILocalVariable(name: "idx", scope: !9503, file: !974, line: 70, type: !24)
!9503 = distinct !DILexicalBlock(scope: !9497, file: !974, line: 70, column: 25)
!9504 = !DILocalVariable(name: "has_consumable", scope: !9503, file: !974, line: 70, type: !422)
!9505 = !DILocalVariable(name: "idx", scope: !9506, file: !974, line: 74, type: !24)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !974, line: 74, column: 9)
!9507 = distinct !DILexicalBlock(scope: !9497, file: !974, line: 72, column: 55)
!9508 = !DILocalVariable(name: "has_consumable", scope: !9506, file: !974, line: 74, type: !422)
!9509 = !DILocation(line: 0, scope: !9497)
!9510 = !DILocation(line: 70, column: 25, scope: !9503)
!9511 = !DILocation(line: 0, scope: !9503)
!9512 = !DILocation(line: 72, column: 29, scope: !9497)
!9513 = !DILocation(line: 72, column: 35, scope: !9497)
!9514 = !DILocation(line: 72, column: 21, scope: !9497)
!9515 = !DILocation(line: 72, column: 2, scope: !9497)
!9516 = !DILocation(line: 73, column: 3, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !974, line: 73, column: 3)
!9518 = distinct !DILexicalBlock(scope: !9507, file: !974, line: 73, column: 3)
!9519 = !DILocation(line: 73, column: 3, scope: !9518)
!9520 = !DILocation(line: 73, column: 3, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9517, file: !974, line: 73, column: 3)
!9522 = !DILocation(line: 74, column: 9, scope: !9506)
!9523 = !DILocation(line: 0, scope: !9506)
!9524 = !DILocation(line: 77, column: 2, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !974, line: 77, column: 2)
!9526 = distinct !DILexicalBlock(scope: !9497, file: !974, line: 77, column: 2)
!9527 = !DILocation(line: 77, column: 2, scope: !9526)
!9528 = !DILocation(line: 77, column: 2, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9525, file: !974, line: 77, column: 2)
!9530 = !DILocation(line: 78, column: 1, scope: !9497)
!9531 = distinct !DISubprogram(name: "atomic_add", scope: !3701, file: !3701, line: 86, type: !3737, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9532)
!9532 = !{!9533, !9534}
!9533 = !DILocalVariable(name: "target", arg: 1, scope: !9531, file: !3701, line: 86, type: !3739)
!9534 = !DILocalVariable(name: "value", arg: 2, scope: !9531, file: !3701, line: 86, type: !3704)
!9535 = !DILocation(line: 0, scope: !9531)
!9536 = !DILocation(line: 88, column: 9, scope: !9531)
!9537 = !DILocation(line: 88, column: 2, scope: !9531)
!9538 = distinct !DISubprogram(name: "atomic_inc", scope: !3701, file: !3701, line: 123, type: !9081, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9539)
!9539 = !{!9540}
!9540 = !DILocalVariable(name: "target", arg: 1, scope: !9538, file: !3701, line: 123, type: !3739)
!9541 = !DILocation(line: 0, scope: !9538)
!9542 = !DILocation(line: 125, column: 9, scope: !9538)
!9543 = !DILocation(line: 125, column: 2, scope: !9538)
!9544 = distinct !DISubprogram(name: "rtio_concurrent_err", scope: !974, file: !974, line: 241, type: !959, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !865, retainedNodes: !9545)
!9545 = !{!9546, !9547, !9548, !9549, !9550, !9551, !9552, !9553, !9557, !9558, !9561}
!9546 = !DILocalVariable(name: "r", arg: 1, scope: !9544, file: !974, line: 241, type: !884)
!9547 = !DILocalVariable(name: "sqe", arg: 2, scope: !9544, file: !974, line: 241, type: !923)
!9548 = !DILocalVariable(name: "result", arg: 3, scope: !9544, file: !974, line: 241, type: !108)
!9549 = !DILocalVariable(name: "nsqe", scope: !9544, file: !974, line: 243, type: !968)
!9550 = !DILocalVariable(name: "key", scope: !9544, file: !974, line: 244, type: !9150)
!9551 = !DILocalVariable(name: "exc", scope: !9544, file: !974, line: 245, type: !868)
!9552 = !DILocalVariable(name: "task_id", scope: !9544, file: !974, line: 260, type: !168)
!9553 = !DILocalVariable(name: "idx", scope: !9554, file: !974, line: 265, type: !24)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !974, line: 265, column: 10)
!9555 = distinct !DILexicalBlock(scope: !9556, file: !974, line: 264, column: 37)
!9556 = distinct !DILexicalBlock(scope: !9544, file: !974, line: 264, column: 6)
!9557 = !DILocalVariable(name: "has_next", scope: !9554, file: !974, line: 265, type: !422)
!9558 = !DILocalVariable(name: "idx", scope: !9559, file: !974, line: 268, type: !24)
!9559 = distinct !DILexicalBlock(scope: !9560, file: !974, line: 268, column: 11)
!9560 = distinct !DILexicalBlock(scope: !9555, file: !974, line: 266, column: 58)
!9561 = !DILocalVariable(name: "has_next", scope: !9559, file: !974, line: 268, type: !422)
!9562 = !DILocation(line: 0, scope: !9544)
!9563 = !DILocation(line: 245, column: 79, scope: !9544)
!9564 = !DILocation(line: 0, scope: !9184, inlinedAt: !9565)
!9565 = distinct !DILocation(line: 255, column: 8, scope: !9544)
!9566 = !DILocation(line: 55, column: 2, scope: !9193, inlinedAt: !9567)
!9567 = distinct !DILocation(line: 145, column: 10, scope: !9184, inlinedAt: !9565)
!9568 = !DILocation(line: 0, scope: !9193, inlinedAt: !9567)
!9569 = !DILocation(line: 257, column: 34, scope: !9544)
!9570 = !DILocation(line: 257, column: 2, scope: !9544)
!9571 = !DILocation(line: 260, column: 21, scope: !9544)
!9572 = !DILocation(line: 264, column: 11, scope: !9556)
!9573 = !DILocation(line: 264, column: 17, scope: !9556)
!9574 = !DILocation(line: 264, column: 6, scope: !9544)
!9575 = !DILocation(line: 265, column: 10, scope: !9554)
!9576 = !DILocation(line: 0, scope: !9554)
!9577 = !DILocation(line: 266, column: 23, scope: !9555)
!9578 = !DILocation(line: 266, column: 3, scope: !9555)
!9579 = !DILocation(line: 266, column: 32, scope: !9555)
!9580 = !DILocation(line: 266, column: 38, scope: !9555)
!9581 = !DILocation(line: 267, column: 41, scope: !9560)
!9582 = !DILocation(line: 267, column: 4, scope: !9560)
!9583 = !DILocation(line: 268, column: 11, scope: !9559)
!9584 = !DILocation(line: 0, scope: !9559)
!9585 = !DILocation(line: 273, column: 7, scope: !9544)
!9586 = !DILocation(line: 273, column: 2, scope: !9544)
!9587 = !DILocation(line: 273, column: 28, scope: !9544)
!9588 = !DILocation(line: 275, column: 2, scope: !9544)
!9589 = !DILocation(line: 0, scope: !9256, inlinedAt: !9590)
!9590 = distinct !DILocation(line: 277, column: 2, scope: !9544)
!9591 = !DILocation(line: 0, scope: !9264, inlinedAt: !9592)
!9592 = distinct !DILocation(line: 215, column: 2, scope: !9256, inlinedAt: !9590)
!9593 = !DILocation(line: 95, column: 2, scope: !9264, inlinedAt: !9592)
!9594 = !DILocation(line: 278, column: 1, scope: !9544)
!9595 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1086, file: !1086, line: 368, type: !1136, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9596)
!9596 = !{!9597}
!9597 = !DILocalVariable(name: "dev", arg: 1, scope: !9595, file: !1086, line: 368, type: !1112)
!9598 = !DILocation(line: 0, scope: !9595)
!9599 = !DILocation(line: 370, column: 2, scope: !9595)
!9600 = !DILocation(line: 371, column: 1, scope: !9595)
!9601 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1086, file: !1086, line: 243, type: !9602, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9604)
!9602 = !DISubroutineType(types: !9603)
!9603 = !{null, !108, !108, !1112}
!9604 = !{!9605, !9606, !9607, !9608, !9610}
!9605 = !DILocalVariable(name: "min", arg: 1, scope: !9601, file: !1086, line: 243, type: !108)
!9606 = !DILocalVariable(name: "max", arg: 2, scope: !9601, file: !1086, line: 243, type: !108)
!9607 = !DILocalVariable(name: "dev", arg: 3, scope: !9601, file: !1086, line: 243, type: !1112)
!9608 = !DILocalVariable(name: "data", scope: !9601, file: !1086, line: 245, type: !9609)
!9609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!9610 = !DILocalVariable(name: "line", scope: !9601, file: !1086, line: 246, type: !108)
!9611 = !DILocation(line: 0, scope: !9601)
!9612 = !DILocation(line: 245, column: 38, scope: !9601)
!9613 = !DILocation(line: 249, column: 24, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !1086, line: 249, column: 2)
!9615 = distinct !DILexicalBlock(scope: !9601, file: !1086, line: 249, column: 2)
!9616 = !DILocation(line: 249, column: 2, scope: !9615)
!9617 = !DILocation(line: 251, column: 7, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !1086, line: 251, column: 7)
!9619 = distinct !DILexicalBlock(scope: !9614, file: !1086, line: 249, column: 39)
!9620 = !DILocation(line: 251, column: 7, scope: !9619)
!9621 = !DILocation(line: 253, column: 4, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9618, file: !1086, line: 251, column: 36)
!9623 = !DILocation(line: 256, column: 24, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9622, file: !1086, line: 256, column: 8)
!9625 = !DILocation(line: 256, column: 9, scope: !9624)
!9626 = !DILocation(line: 256, column: 8, scope: !9622)
!9627 = !DILocation(line: 260, column: 43, scope: !9622)
!9628 = !DILocation(line: 260, column: 4, scope: !9622)
!9629 = !DILocation(line: 261, column: 3, scope: !9622)
!9630 = !DILocation(line: 249, column: 35, scope: !9614)
!9631 = distinct !{!9631, !9616, !9632}
!9632 = !DILocation(line: 262, column: 2, scope: !9615)
!9633 = !DILocation(line: 263, column: 1, scope: !9601)
!9634 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1086, file: !1086, line: 158, type: !557, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9635)
!9635 = !{!9636}
!9636 = !DILocalVariable(name: "line", arg: 1, scope: !9634, file: !1086, line: 158, type: !108)
!9637 = !DILocation(line: 0, scope: !9634)
!9638 = !DILocation(line: 170, column: 38, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !1086, line: 160, column: 17)
!9640 = distinct !DILexicalBlock(scope: !9634, file: !1086, line: 160, column: 6)
!9641 = !DILocation(line: 170, column: 10, scope: !9639)
!9642 = !DILocation(line: 176, column: 1, scope: !9634)
!9643 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1086, file: !1086, line: 183, type: !9644, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9646)
!9644 = !DISubroutineType(types: !9645)
!9645 = !{null, !108}
!9646 = !{!9647}
!9647 = !DILocalVariable(name: "line", arg: 1, scope: !9643, file: !1086, line: 183, type: !108)
!9648 = !DILocation(line: 0, scope: !9643)
!9649 = !DILocation(line: 195, column: 28, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9651, file: !1086, line: 185, column: 17)
!9651 = distinct !DILexicalBlock(scope: !9643, file: !1086, line: 185, column: 6)
!9652 = !DILocation(line: 195, column: 3, scope: !9650)
!9653 = !DILocation(line: 200, column: 1, scope: !9643)
!9654 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9655, file: !9655, line: 910, type: !7155, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9656)
!9655 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9656 = !{!9657}
!9657 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9654, file: !9655, line: 910, type: !113)
!9658 = !DILocation(line: 0, scope: !9654)
!9659 = !DILocation(line: 912, column: 3, scope: !9654)
!9660 = !DILocation(line: 913, column: 1, scope: !9654)
!9661 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9655, file: !9655, line: 834, type: !8310, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9662)
!9662 = !{!9663}
!9663 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9661, file: !9655, line: 834, type: !113)
!9664 = !DILocation(line: 0, scope: !9661)
!9665 = !DILocation(line: 836, column: 11, scope: !9661)
!9666 = !DILocation(line: 836, column: 40, scope: !9661)
!9667 = !DILocation(line: 836, column: 3, scope: !9661)
!9668 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1086, file: !1086, line: 304, type: !1136, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9669)
!9669 = !{!9670}
!9670 = !DILocalVariable(name: "dev", arg: 1, scope: !9668, file: !1086, line: 304, type: !1112)
!9671 = !DILocation(line: 0, scope: !9668)
!9672 = !DILocation(line: 306, column: 2, scope: !9668)
!9673 = !DILocation(line: 307, column: 1, scope: !9668)
!9674 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1086, file: !1086, line: 299, type: !1136, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9675)
!9675 = !{!9676}
!9676 = !DILocalVariable(name: "dev", arg: 1, scope: !9674, file: !1086, line: 299, type: !1112)
!9677 = !DILocation(line: 0, scope: !9674)
!9678 = !DILocation(line: 301, column: 2, scope: !9674)
!9679 = !DILocation(line: 302, column: 1, scope: !9674)
!9680 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1086, file: !1086, line: 294, type: !1136, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9681)
!9681 = !{!9682}
!9682 = !DILocalVariable(name: "dev", arg: 1, scope: !9680, file: !1086, line: 294, type: !1112)
!9683 = !DILocation(line: 0, scope: !9680)
!9684 = !DILocation(line: 296, column: 2, scope: !9680)
!9685 = !DILocation(line: 297, column: 1, scope: !9680)
!9686 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1086, file: !1086, line: 397, type: !1136, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9687)
!9687 = !{!9688}
!9688 = !DILocalVariable(name: "dev", arg: 1, scope: !9686, file: !1086, line: 397, type: !1112)
!9689 = !DILocation(line: 0, scope: !9686)
!9690 = !DILocation(line: 399, column: 2, scope: !9686)
!9691 = !DILocation(line: 400, column: 1, scope: !9686)
!9692 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1086, file: !1086, line: 392, type: !1136, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9693)
!9693 = !{!9694}
!9694 = !DILocalVariable(name: "dev", arg: 1, scope: !9692, file: !1086, line: 392, type: !1112)
!9695 = !DILocation(line: 0, scope: !9692)
!9696 = !DILocation(line: 394, column: 2, scope: !9692)
!9697 = !DILocation(line: 395, column: 1, scope: !9692)
!9698 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1086, file: !1086, line: 289, type: !1136, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9699)
!9699 = !{!9700}
!9700 = !DILocalVariable(name: "dev", arg: 1, scope: !9698, file: !1086, line: 289, type: !1112)
!9701 = !DILocation(line: 0, scope: !9698)
!9702 = !DILocation(line: 291, column: 2, scope: !9698)
!9703 = !DILocation(line: 292, column: 1, scope: !9698)
!9704 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1086, file: !1086, line: 387, type: !1136, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9705)
!9705 = !{!9706}
!9706 = !DILocalVariable(name: "dev", arg: 1, scope: !9704, file: !1086, line: 387, type: !1112)
!9707 = !DILocation(line: 0, scope: !9704)
!9708 = !DILocation(line: 389, column: 2, scope: !9704)
!9709 = !DILocation(line: 390, column: 1, scope: !9704)
!9710 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1086, file: !1086, line: 382, type: !1136, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9711)
!9711 = !{!9712}
!9712 = !DILocalVariable(name: "dev", arg: 1, scope: !9710, file: !1086, line: 382, type: !1112)
!9713 = !DILocation(line: 0, scope: !9710)
!9714 = !DILocation(line: 384, column: 2, scope: !9710)
!9715 = !DILocation(line: 385, column: 1, scope: !9710)
!9716 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1086, file: !1086, line: 373, type: !1136, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9717)
!9717 = !{!9718}
!9718 = !DILocalVariable(name: "dev", arg: 1, scope: !9716, file: !1086, line: 373, type: !1112)
!9719 = !DILocation(line: 0, scope: !9716)
!9720 = !DILocation(line: 375, column: 2, scope: !9716)
!9721 = !DILocation(line: 376, column: 1, scope: !9716)
!9722 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1086, file: !1086, line: 284, type: !1136, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9723)
!9723 = !{!9724}
!9724 = !DILocalVariable(name: "dev", arg: 1, scope: !9722, file: !1086, line: 284, type: !1112)
!9725 = !DILocation(line: 0, scope: !9722)
!9726 = !DILocation(line: 286, column: 2, scope: !9722)
!9727 = !DILocation(line: 287, column: 1, scope: !9722)
!9728 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1086, file: !1086, line: 416, type: !1110, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9729)
!9729 = !{!9730}
!9730 = !DILocalVariable(name: "dev", arg: 1, scope: !9728, file: !1086, line: 416, type: !1112)
!9731 = !DILocation(line: 0, scope: !9728)
!9732 = !DILocation(line: 418, column: 2, scope: !9728)
!9733 = !DILocation(line: 420, column: 2, scope: !9728)
!9734 = !DILocation(line: 0, scope: !1135)
!9735 = !DILocation(line: 493, column: 2, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 493, column: 2)
!9737 = !DILocation(line: 497, column: 2, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 497, column: 2)
!9739 = !DILocation(line: 507, column: 2, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 507, column: 2)
!9741 = !DILocation(line: 512, column: 2, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 512, column: 2)
!9743 = !DILocation(line: 516, column: 2, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 516, column: 2)
!9745 = !DILocation(line: 523, column: 2, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 523, column: 2)
!9747 = !DILocation(line: 527, column: 2, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 527, column: 2)
!9749 = !DILocation(line: 581, column: 2, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 581, column: 2)
!9751 = !DILocation(line: 586, column: 2, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 586, column: 2)
!9753 = !DILocation(line: 591, column: 2, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 591, column: 2)
!9755 = !DILocation(line: 595, column: 2, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !1135, file: !1086, line: 595, column: 2)
!9757 = !DILocation(line: 607, column: 1, scope: !1135)
!9758 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1086, file: !1086, line: 112, type: !9644, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9759)
!9759 = !{!9760, !9761}
!9760 = !DILocalVariable(name: "line", arg: 1, scope: !9758, file: !1086, line: 112, type: !108)
!9761 = !DILocalVariable(name: "irqnum", scope: !9758, file: !1086, line: 114, type: !108)
!9762 = !DILocation(line: 0, scope: !9758)
!9763 = !DILocation(line: 121, column: 11, scope: !9758)
!9764 = !DILocation(line: 130, column: 26, scope: !9758)
!9765 = !DILocation(line: 130, column: 2, scope: !9758)
!9766 = !DILocation(line: 134, column: 2, scope: !9758)
!9767 = !DILocation(line: 135, column: 1, scope: !9758)
!9768 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9655, file: !9655, line: 268, type: !7155, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9769)
!9769 = !{!9770}
!9770 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9768, file: !9655, line: 268, type: !113)
!9771 = !DILocation(line: 0, scope: !9768)
!9772 = !DILocation(line: 270, column: 3, scope: !9768)
!9773 = !DILocation(line: 271, column: 1, scope: !9768)
!9774 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1086, file: !1086, line: 137, type: !9644, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9775)
!9775 = !{!9776}
!9776 = !DILocalVariable(name: "line", arg: 1, scope: !9774, file: !1086, line: 137, type: !108)
!9777 = !DILocation(line: 0, scope: !9774)
!9778 = !DILocation(line: 141, column: 11, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9774, file: !1086, line: 141, column: 6)
!9780 = !DILocation(line: 141, column: 6, scope: !9774)
!9781 = !DILocation(line: 145, column: 28, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9779, file: !1086, line: 141, column: 17)
!9783 = !DILocation(line: 145, column: 3, scope: !9782)
!9784 = !DILocation(line: 147, column: 2, scope: !9782)
!9785 = !DILocation(line: 151, column: 1, scope: !9774)
!9786 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9655, file: !9655, line: 309, type: !7155, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9787)
!9787 = !{!9788}
!9788 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9786, file: !9655, line: 309, type: !113)
!9789 = !DILocation(line: 0, scope: !9786)
!9790 = !DILocation(line: 311, column: 3, scope: !9786)
!9791 = !DILocation(line: 312, column: 1, scope: !9786)
!9792 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1086, file: !1086, line: 202, type: !9793, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9795)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{null, !108, !108}
!9795 = !{!9796, !9797}
!9796 = !DILocalVariable(name: "line", arg: 1, scope: !9792, file: !1086, line: 202, type: !108)
!9797 = !DILocalVariable(name: "trigger", arg: 2, scope: !9792, file: !1086, line: 202, type: !108)
!9798 = !DILocation(line: 0, scope: !9792)
!9799 = !DILocation(line: 211, column: 2, scope: !9792)
!9800 = !DILocation(line: 213, column: 36, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9792, file: !1086, line: 211, column: 19)
!9802 = !DILocation(line: 213, column: 3, scope: !9801)
!9803 = !DILocation(line: 214, column: 3, scope: !9801)
!9804 = !DILocation(line: 215, column: 3, scope: !9801)
!9805 = !DILocation(line: 217, column: 35, scope: !9801)
!9806 = !DILocation(line: 217, column: 3, scope: !9801)
!9807 = !DILocation(line: 218, column: 3, scope: !9801)
!9808 = !DILocation(line: 219, column: 3, scope: !9801)
!9809 = !DILocation(line: 221, column: 36, scope: !9801)
!9810 = !DILocation(line: 221, column: 3, scope: !9801)
!9811 = !DILocation(line: 222, column: 3, scope: !9801)
!9812 = !DILocation(line: 223, column: 3, scope: !9801)
!9813 = !DILocation(line: 225, column: 35, scope: !9801)
!9814 = !DILocation(line: 225, column: 3, scope: !9801)
!9815 = !DILocation(line: 226, column: 3, scope: !9801)
!9816 = !DILocation(line: 227, column: 3, scope: !9801)
!9817 = !DILocation(line: 232, column: 1, scope: !9792)
!9818 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9655, file: !9655, line: 573, type: !7155, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9819)
!9819 = !{!9820}
!9820 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9818, file: !9655, line: 573, type: !113)
!9821 = !DILocation(line: 0, scope: !9818)
!9822 = !DILocation(line: 575, column: 3, scope: !9818)
!9823 = !DILocation(line: 577, column: 1, scope: !9818)
!9824 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9655, file: !9655, line: 703, type: !7155, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9825)
!9825 = !{!9826}
!9826 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9824, file: !9655, line: 703, type: !113)
!9827 = !DILocation(line: 0, scope: !9824)
!9828 = !DILocation(line: 705, column: 3, scope: !9824)
!9829 = !DILocation(line: 706, column: 1, scope: !9824)
!9830 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9655, file: !9655, line: 529, type: !7155, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9831)
!9831 = !{!9832}
!9832 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9830, file: !9655, line: 529, type: !113)
!9833 = !DILocation(line: 0, scope: !9830)
!9834 = !DILocation(line: 531, column: 3, scope: !9830)
!9835 = !DILocation(line: 533, column: 1, scope: !9830)
!9836 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9655, file: !9655, line: 661, type: !7155, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9837)
!9837 = !{!9838}
!9838 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9836, file: !9655, line: 661, type: !113)
!9839 = !DILocation(line: 0, scope: !9836)
!9840 = !DILocation(line: 663, column: 3, scope: !9836)
!9841 = !DILocation(line: 664, column: 1, scope: !9836)
!9842 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1086, file: !1086, line: 433, type: !9843, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9845)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{!108, !108, !1123, !104}
!9845 = !{!9846, !9847, !9848, !9849, !9851}
!9846 = !DILocalVariable(name: "line", arg: 1, scope: !9842, file: !1086, line: 433, type: !108)
!9847 = !DILocalVariable(name: "cb", arg: 2, scope: !9842, file: !1086, line: 433, type: !1123)
!9848 = !DILocalVariable(name: "arg", arg: 3, scope: !9842, file: !1086, line: 433, type: !104)
!9849 = !DILocalVariable(name: "dev", scope: !9842, file: !1086, line: 435, type: !9850)
!9850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!9851 = !DILocalVariable(name: "data", scope: !9842, file: !1086, line: 436, type: !9609)
!9852 = !DILocation(line: 0, scope: !9842)
!9853 = !DILocation(line: 438, column: 21, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9842, file: !1086, line: 438, column: 6)
!9855 = !DILocation(line: 438, column: 6, scope: !9854)
!9856 = !DILocation(line: 438, column: 6, scope: !9842)
!9857 = !DILocation(line: 442, column: 20, scope: !9842)
!9858 = !DILocation(line: 443, column: 17, scope: !9842)
!9859 = !DILocation(line: 443, column: 22, scope: !9842)
!9860 = !DILocation(line: 445, column: 2, scope: !9842)
!9861 = !DILocation(line: 446, column: 1, scope: !9842)
!9862 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1086, file: !1086, line: 448, type: !9644, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9863)
!9863 = !{!9864, !9865, !9866}
!9864 = !DILocalVariable(name: "line", arg: 1, scope: !9862, file: !1086, line: 448, type: !108)
!9865 = !DILocalVariable(name: "dev", scope: !9862, file: !1086, line: 450, type: !9850)
!9866 = !DILocalVariable(name: "data", scope: !9862, file: !1086, line: 451, type: !9609)
!9867 = !DILocation(line: 0, scope: !9862)
!9868 = !DILocation(line: 453, column: 17, scope: !9862)
!9869 = !DILocation(line: 453, column: 20, scope: !9862)
!9870 = !DILocation(line: 454, column: 17, scope: !9862)
!9871 = !DILocation(line: 454, column: 22, scope: !9862)
!9872 = !DILocation(line: 455, column: 1, scope: !9862)
!9873 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1233, file: !1233, line: 183, type: !1271, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9874)
!9874 = !{!9875, !9876, !9877, !9878, !9879}
!9875 = !DILocalVariable(name: "dev", arg: 1, scope: !9873, file: !1233, line: 183, type: !1262)
!9876 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9873, file: !1233, line: 184, type: !1273)
!9877 = !DILocalVariable(name: "pclken", scope: !9873, file: !1233, line: 186, type: !1223)
!9878 = !DILocalVariable(name: "reg", scope: !9873, file: !1233, line: 187, type: !1816)
!9879 = !DILocalVariable(name: "reg_val", scope: !9873, file: !1233, line: 188, type: !113)
!9880 = !DILocation(line: 0, scope: !9873)
!9881 = !DILocation(line: 192, column: 6, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9873, file: !1233, line: 192, column: 6)
!9883 = !DILocation(line: 192, column: 6, scope: !9873)
!9884 = !DILocation(line: 197, column: 52, scope: !9873)
!9885 = !DILocation(line: 197, column: 8, scope: !9873)
!9886 = !DILocation(line: 198, column: 12, scope: !9873)
!9887 = !DILocation(line: 199, column: 21, scope: !9873)
!9888 = !DILocation(line: 199, column: 10, scope: !9873)
!9889 = !DILocation(line: 200, column: 7, scope: !9873)
!9890 = !DILocation(line: 202, column: 2, scope: !9873)
!9891 = !DILocation(line: 203, column: 1, scope: !9873)
!9892 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1233, file: !1233, line: 205, type: !1271, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9893)
!9893 = !{!9894, !9895, !9896, !9897, !9898}
!9894 = !DILocalVariable(name: "dev", arg: 1, scope: !9892, file: !1233, line: 205, type: !1262)
!9895 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9892, file: !1233, line: 206, type: !1273)
!9896 = !DILocalVariable(name: "pclken", scope: !9892, file: !1233, line: 208, type: !1223)
!9897 = !DILocalVariable(name: "reg", scope: !9892, file: !1233, line: 209, type: !1816)
!9898 = !DILocalVariable(name: "reg_val", scope: !9892, file: !1233, line: 210, type: !113)
!9899 = !DILocation(line: 0, scope: !9892)
!9900 = !DILocation(line: 214, column: 6, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9892, file: !1233, line: 214, column: 6)
!9902 = !DILocation(line: 214, column: 6, scope: !9892)
!9903 = !DILocation(line: 219, column: 52, scope: !9892)
!9904 = !DILocation(line: 219, column: 8, scope: !9892)
!9905 = !DILocation(line: 220, column: 12, scope: !9892)
!9906 = !DILocation(line: 221, column: 22, scope: !9892)
!9907 = !DILocation(line: 221, column: 13, scope: !9892)
!9908 = !DILocation(line: 221, column: 10, scope: !9892)
!9909 = !DILocation(line: 222, column: 7, scope: !9892)
!9910 = !DILocation(line: 224, column: 2, scope: !9892)
!9911 = !DILocation(line: 225, column: 1, scope: !9892)
!9912 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1233, file: !1233, line: 262, type: !1287, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9913)
!9913 = !{!9914, !9915, !9916, !9917, !9918, !9919, !9920, !9921}
!9914 = !DILocalVariable(name: "clock", arg: 1, scope: !9912, file: !1233, line: 262, type: !1262)
!9915 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9912, file: !1233, line: 263, type: !1273)
!9916 = !DILocalVariable(name: "rate", arg: 3, scope: !9912, file: !1233, line: 264, type: !1229)
!9917 = !DILocalVariable(name: "pclken", scope: !9912, file: !1233, line: 266, type: !1223)
!9918 = !DILocalVariable(name: "ahb_clock", scope: !9912, file: !1233, line: 273, type: !113)
!9919 = !DILocalVariable(name: "apb1_clock", scope: !9912, file: !1233, line: 274, type: !113)
!9920 = !DILocalVariable(name: "apb2_clock", scope: !9912, file: !1233, line: 276, type: !113)
!9921 = !DILocalVariable(name: "ahb3_clock", scope: !9912, file: !1233, line: 286, type: !113)
!9922 = !DILocation(line: 0, scope: !9912)
!9923 = !DILocation(line: 273, column: 23, scope: !9912)
!9924 = !DILocation(line: 274, column: 24, scope: !9912)
!9925 = !DILocation(line: 299, column: 18, scope: !9912)
!9926 = !DILocation(line: 299, column: 2, scope: !9912)
!9927 = !DILocation(line: 319, column: 3, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9912, file: !1233, line: 299, column: 23)
!9929 = !DILocation(line: 323, column: 3, scope: !9928)
!9930 = !DILocation(line: 346, column: 33, scope: !9928)
!9931 = !DILocation(line: 346, column: 11, scope: !9928)
!9932 = !DILocation(line: 350, column: 3, scope: !9928)
!9933 = !DILocation(line: 354, column: 33, scope: !9928)
!9934 = !DILocation(line: 354, column: 11, scope: !9928)
!9935 = !DILocation(line: 358, column: 3, scope: !9928)
!9936 = !DILocation(line: 374, column: 3, scope: !9928)
!9937 = !DILocation(line: 379, column: 3, scope: !9928)
!9938 = !DILocation(line: 0, scope: !9928)
!9939 = !DILocation(line: 396, column: 1, scope: !9912)
!9940 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1233, file: !1233, line: 227, type: !1303, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9941)
!9941 = !{!9942, !9943, !9944, !9945, !9946, !9947, !9948, !9949}
!9942 = !DILocalVariable(name: "dev", arg: 1, scope: !9940, file: !1233, line: 227, type: !1262)
!9943 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9940, file: !1233, line: 228, type: !1273)
!9944 = !DILocalVariable(name: "data", arg: 3, scope: !9940, file: !1233, line: 229, type: !104)
!9945 = !DILocalVariable(name: "pclken", scope: !9940, file: !1233, line: 233, type: !1223)
!9946 = !DILocalVariable(name: "reg", scope: !9940, file: !1233, line: 234, type: !1816)
!9947 = !DILocalVariable(name: "reg_val", scope: !9940, file: !1233, line: 235, type: !113)
!9948 = !DILocalVariable(name: "dt_val", scope: !9940, file: !1233, line: 235, type: !113)
!9949 = !DILocalVariable(name: "err", scope: !9940, file: !1233, line: 236, type: !108)
!9950 = !DILocation(line: 0, scope: !9940)
!9951 = !DILocation(line: 241, column: 30, scope: !9940)
!9952 = !DILocation(line: 241, column: 8, scope: !9940)
!9953 = !DILocation(line: 242, column: 10, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9940, file: !1233, line: 242, column: 6)
!9955 = !DILocation(line: 242, column: 6, scope: !9940)
!9956 = !DILocation(line: 247, column: 11, scope: !9940)
!9957 = !DILocation(line: 248, column: 6, scope: !9940)
!9958 = !DILocation(line: 247, column: 44, scope: !9940)
!9959 = !DILocation(line: 250, column: 6, scope: !9940)
!9960 = !DILocation(line: 249, column: 52, scope: !9940)
!9961 = !DILocation(line: 249, column: 8, scope: !9940)
!9962 = !DILocation(line: 251, column: 12, scope: !9940)
!9963 = !DILocation(line: 252, column: 10, scope: !9940)
!9964 = !DILocation(line: 253, column: 7, scope: !9940)
!9965 = !DILocation(line: 255, column: 2, scope: !9940)
!9966 = !DILocation(line: 260, column: 1, scope: !9940)
!9967 = distinct !DISubprogram(name: "enabled_clock", scope: !1233, file: !1233, line: 100, type: !9968, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9970)
!9968 = !DISubroutineType(types: !9969)
!9969 = !{!108, !113}
!9970 = !{!9971, !9972}
!9971 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9967, file: !1233, line: 100, type: !113)
!9972 = !DILocalVariable(name: "r", scope: !9967, file: !1233, line: 102, type: !108)
!9973 = !DILocation(line: 0, scope: !9967)
!9974 = !DILocation(line: 104, column: 2, scope: !9967)
!9975 = !DILocation(line: 180, column: 2, scope: !9967)
!9976 = !DILocation(line: 181, column: 1, scope: !9967)
!9977 = distinct !DISubprogram(name: "get_bus_clock", scope: !1233, file: !1233, line: 79, type: !9978, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9980)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{!113, !113, !113}
!9980 = !{!9981, !9982}
!9981 = !DILocalVariable(name: "clock", arg: 1, scope: !9977, file: !1233, line: 79, type: !113)
!9982 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9977, file: !1233, line: 79, type: !113)
!9983 = !DILocation(line: 0, scope: !9977)
!9984 = !DILocation(line: 81, column: 15, scope: !9977)
!9985 = !DILocation(line: 81, column: 2, scope: !9977)
!9986 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1233, file: !1233, line: 68, type: !9987, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9989)
!9987 = !DISubroutineType(types: !9988)
!9988 = !{!113, !113, !108, !108, !108}
!9989 = !{!9990, !9991, !9992, !9993}
!9990 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9986, file: !1233, line: 68, type: !113)
!9991 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9986, file: !1233, line: 69, type: !108)
!9992 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9986, file: !1233, line: 70, type: !108)
!9993 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9986, file: !1233, line: 71, type: !108)
!9994 = !DILocation(line: 0, scope: !9986)
!9995 = !DILocation(line: 75, column: 22, scope: !9986)
!9996 = !DILocation(line: 76, column: 13, scope: !9986)
!9997 = !DILocation(line: 75, column: 34, scope: !9986)
!9998 = !DILocation(line: 75, column: 2, scope: !9986)
!9999 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1233, file: !1233, line: 641, type: !1260, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10000)
!10000 = !{!10001, !10002, !10003}
!10001 = !DILocalVariable(name: "dev", arg: 1, scope: !9999, file: !1233, line: 641, type: !1262)
!10002 = !DILocalVariable(name: "old_flash_freq", scope: !9999, file: !1233, line: 664, type: !113)
!10003 = !DILocalVariable(name: "new_flash_freq", scope: !9999, file: !1233, line: 665, type: !113)
!10004 = !DILocation(line: 0, scope: !9999)
!10005 = !DILocation(line: 646, column: 2, scope: !9999)
!10006 = !DILocation(line: 667, column: 19, scope: !9999)
!10007 = !DILocation(line: 674, column: 21, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9999, file: !1233, line: 674, column: 6)
!10009 = !DILocation(line: 674, column: 6, scope: !9999)
!10010 = !DILocation(line: 675, column: 3, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10008, file: !1233, line: 674, column: 59)
!10012 = !DILocation(line: 676, column: 2, scope: !10011)
!10013 = !DILocation(line: 680, column: 2, scope: !9999)
!10014 = !DILocation(line: 683, column: 2, scope: !9999)
!10015 = !DILocation(line: 690, column: 3, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !1233, line: 689, column: 9)
!10017 = distinct !DILexicalBlock(scope: !9999, file: !1233, line: 685, column: 6)
!10018 = !DILocation(line: 695, column: 2, scope: !9999)
!10019 = !DILocation(line: 696, column: 2, scope: !9999)
!10020 = !DILocation(line: 696, column: 9, scope: !9999)
!10021 = !DILocation(line: 696, column: 34, scope: !9999)
!10022 = distinct !{!10022, !10019, !10023}
!10023 = !DILocation(line: 697, column: 2, scope: !9999)
!10024 = !DILocation(line: 720, column: 21, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !9999, file: !1233, line: 720, column: 6)
!10026 = !DILocation(line: 720, column: 6, scope: !9999)
!10027 = !DILocation(line: 721, column: 3, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10025, file: !1233, line: 720, column: 60)
!10029 = !DILocation(line: 722, column: 2, scope: !10028)
!10030 = !DILocation(line: 725, column: 18, scope: !9999)
!10031 = !DILocation(line: 728, column: 2, scope: !9999)
!10032 = !DILocation(line: 730, column: 2, scope: !9999)
!10033 = !DILocation(line: 745, column: 2, scope: !9999)
!10034 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10035, file: !10035, line: 3275, type: !7145, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10035 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10036 = !DILocation(line: 3277, column: 21, scope: !10034)
!10037 = !DILocation(line: 3277, column: 3, scope: !10034)
!10038 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1233, file: !1233, line: 507, type: !3406, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10039 = !DILocation(line: 516, column: 4, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !1233, line: 515, column: 10)
!10041 = distinct !DILexicalBlock(scope: !10042, file: !1233, line: 513, column: 7)
!10042 = distinct !DILexicalBlock(scope: !10043, file: !1233, line: 510, column: 37)
!10043 = distinct !DILexicalBlock(scope: !10038, file: !1233, line: 510, column: 6)
!10044 = !DILocation(line: 526, column: 3, scope: !10042)
!10045 = !DILocation(line: 527, column: 3, scope: !10042)
!10046 = !DILocation(line: 527, column: 10, scope: !10042)
!10047 = !DILocation(line: 527, column: 31, scope: !10042)
!10048 = distinct !{!10048, !10045, !10049}
!10049 = !DILocation(line: 529, column: 3, scope: !10042)
!10050 = !DILocation(line: 583, column: 3, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !1233, line: 577, column: 37)
!10052 = distinct !DILexicalBlock(scope: !10038, file: !1233, line: 577, column: 6)
!10053 = !DILocation(line: 584, column: 3, scope: !10051)
!10054 = !DILocation(line: 584, column: 10, scope: !10051)
!10055 = !DILocation(line: 584, column: 31, scope: !10051)
!10056 = distinct !{!10056, !10053, !10057}
!10057 = !DILocation(line: 585, column: 3, scope: !10051)
!10058 = !DILocation(line: 627, column: 1, scope: !10038)
!10059 = distinct !DISubprogram(name: "set_up_plls", scope: !1233, file: !1233, line: 448, type: !3406, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10060 = !DILocation(line: 460, column: 6, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10059, file: !1233, line: 460, column: 6)
!10062 = !DILocation(line: 460, column: 31, scope: !10061)
!10063 = !DILocation(line: 460, column: 6, scope: !10059)
!10064 = !DILocation(line: 461, column: 3, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10061, file: !1233, line: 460, column: 67)
!10066 = !DILocation(line: 462, column: 3, scope: !10065)
!10067 = !DILocation(line: 463, column: 2, scope: !10065)
!10068 = !DILocation(line: 464, column: 2, scope: !10059)
!10069 = !DILocation(line: 488, column: 2, scope: !10059)
!10070 = !DILocation(line: 492, column: 2, scope: !10059)
!10071 = !DILocation(line: 496, column: 2, scope: !10059)
!10072 = !DILocation(line: 499, column: 2, scope: !10059)
!10073 = !DILocation(line: 500, column: 2, scope: !10059)
!10074 = !DILocation(line: 500, column: 9, scope: !10059)
!10075 = !DILocation(line: 500, column: 30, scope: !10059)
!10076 = distinct !{!10076, !10073, !10077}
!10077 = !DILocation(line: 502, column: 2, scope: !10059)
!10078 = !DILocation(line: 505, column: 1, scope: !10059)
!10079 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10035, file: !10035, line: 3224, type: !7155, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10080)
!10080 = !{!10081}
!10081 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10079, file: !10035, line: 3224, type: !113)
!10082 = !DILocation(line: 0, scope: !10079)
!10083 = !DILocation(line: 3226, column: 3, scope: !10079)
!10084 = !DILocation(line: 3227, column: 1, scope: !10079)
!10085 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10035, file: !10035, line: 3188, type: !7155, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10086)
!10086 = !{!10087}
!10087 = !DILocalVariable(name: "Source", arg: 1, scope: !10085, file: !10035, line: 3188, type: !113)
!10088 = !DILocation(line: 0, scope: !10085)
!10089 = !DILocation(line: 3190, column: 3, scope: !10085)
!10090 = !DILocation(line: 3191, column: 1, scope: !10085)
!10091 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10035, file: !10035, line: 3204, type: !7145, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10092 = !DILocation(line: 3206, column: 21, scope: !10091)
!10093 = !DILocation(line: 3206, column: 3, scope: !10091)
!10094 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10035, file: !10035, line: 3240, type: !7155, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10095)
!10095 = !{!10096}
!10096 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10094, file: !10035, line: 3240, type: !113)
!10097 = !DILocation(line: 0, scope: !10094)
!10098 = !DILocation(line: 3242, column: 3, scope: !10094)
!10099 = !DILocation(line: 3243, column: 1, scope: !10094)
!10100 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10035, file: !10035, line: 3256, type: !7155, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10101)
!10101 = !{!10102}
!10102 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10100, file: !10035, line: 3256, type: !113)
!10103 = !DILocation(line: 0, scope: !10100)
!10104 = !DILocation(line: 3258, column: 3, scope: !10100)
!10105 = !DILocation(line: 3259, column: 1, scope: !10100)
!10106 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1233, file: !1233, line: 409, type: !3406, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10107 = !DILocation(line: 412, column: 6, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10106, file: !1233, line: 412, column: 6)
!10109 = !DILocation(line: 412, column: 27, scope: !10108)
!10110 = !DILocation(line: 412, column: 6, scope: !10106)
!10111 = !DILocation(line: 414, column: 3, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10108, file: !1233, line: 412, column: 33)
!10113 = !DILocation(line: 415, column: 3, scope: !10112)
!10114 = !DILocation(line: 415, column: 10, scope: !10112)
!10115 = !DILocation(line: 415, column: 31, scope: !10112)
!10116 = distinct !{!10116, !10113, !10117}
!10117 = !DILocation(line: 417, column: 3, scope: !10112)
!10118 = !DILocation(line: 421, column: 2, scope: !10106)
!10119 = !DILocation(line: 422, column: 2, scope: !10106)
!10120 = !DILocation(line: 422, column: 9, scope: !10106)
!10121 = !DILocation(line: 422, column: 34, scope: !10106)
!10122 = distinct !{!10122, !10119, !10123}
!10123 = !DILocation(line: 423, column: 2, scope: !10106)
!10124 = !DILocation(line: 424, column: 1, scope: !10106)
!10125 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10035, file: !10035, line: 4195, type: !3406, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10126 = !DILocation(line: 4197, column: 3, scope: !10125)
!10127 = !DILocation(line: 4198, column: 1, scope: !10125)
!10128 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10035, file: !10035, line: 4184, type: !3406, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10129 = !DILocation(line: 4186, column: 3, scope: !10128)
!10130 = !DILocation(line: 4187, column: 1, scope: !10128)
!10131 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10035, file: !10035, line: 4205, type: !7145, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10132 = !DILocation(line: 4207, column: 11, scope: !10131)
!10133 = !DILocation(line: 4207, column: 44, scope: !10131)
!10134 = !DILocation(line: 4207, column: 3, scope: !10131)
!10135 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10035, file: !10035, line: 3007, type: !7145, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10136 = !DILocation(line: 3009, column: 11, scope: !10135)
!10137 = !DILocation(line: 3009, column: 44, scope: !10135)
!10138 = !DILocation(line: 3009, column: 3, scope: !10135)
!10139 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10035, file: !10035, line: 2987, type: !3406, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10140 = !DILocation(line: 2989, column: 3, scope: !10139)
!10141 = !DILocation(line: 2990, column: 1, scope: !10139)
!10142 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10035, file: !10035, line: 2939, type: !3406, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10143 = !DILocation(line: 2941, column: 3, scope: !10142)
!10144 = !DILocation(line: 2942, column: 1, scope: !10142)
!10145 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10035, file: !10035, line: 2949, type: !3406, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10146 = !DILocation(line: 2951, column: 3, scope: !10145)
!10147 = !DILocation(line: 2952, column: 1, scope: !10145)
!10148 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10035, file: !10035, line: 2969, type: !7145, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10149 = !DILocation(line: 2971, column: 11, scope: !10148)
!10150 = !DILocation(line: 2971, column: 44, scope: !10148)
!10151 = !DILocation(line: 2971, column: 3, scope: !10148)
!10152 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10035, file: !10035, line: 3143, type: !3406, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10153 = !DILocation(line: 3145, column: 3, scope: !10152)
!10154 = !DILocation(line: 3146, column: 1, scope: !10152)
!10155 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10035, file: !10035, line: 3163, type: !7145, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !437)
!10156 = !DILocation(line: 3165, column: 11, scope: !10155)
!10157 = !DILocation(line: 3165, column: 46, scope: !10155)
!10158 = !DILocation(line: 3165, column: 3, scope: !10155)
!10159 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10160, file: !10160, line: 40, type: !7145, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !437)
!10160 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10161 = !DILocation(line: 45, column: 3, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10163, file: !10160, line: 44, column: 44)
!10163 = distinct !DILexicalBlock(scope: !10164, file: !10160, line: 44, column: 13)
!10164 = distinct !DILexicalBlock(scope: !10159, file: !10160, line: 42, column: 6)
!10165 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10160, file: !10160, line: 56, type: !3406, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !437)
!10166 = !DILocation(line: 58, column: 2, scope: !10165)
!10167 = !DILocation(line: 62, column: 1, scope: !10165)
!10168 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10035, file: !10035, line: 4304, type: !10169, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{null, !113, !113, !113, !113}
!10171 = !{!10172, !10173, !10174, !10175}
!10172 = !DILocalVariable(name: "Source", arg: 1, scope: !10168, file: !10035, line: 4304, type: !113)
!10173 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10168, file: !10035, line: 4304, type: !113)
!10174 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10168, file: !10035, line: 4304, type: !113)
!10175 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10168, file: !10035, line: 4304, type: !113)
!10176 = !DILocation(line: 0, scope: !10168)
!10177 = !DILocation(line: 4306, column: 3, scope: !10168)
!10178 = !DILocation(line: 4308, column: 3, scope: !10168)
!10179 = !DILocation(line: 4312, column: 1, scope: !10168)
!10180 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10160, file: !10160, line: 69, type: !3406, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !437)
!10181 = !DILocation(line: 72, column: 2, scope: !10180)
!10182 = !DILocation(line: 73, column: 1, scope: !10180)
!10183 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10184, file: !10184, line: 1185, type: !7155, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !10185)
!10184 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10185 = !{!10186, !10187}
!10186 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10183, file: !10184, line: 1185, type: !113)
!10187 = !DILocalVariable(name: "tmpreg", scope: !10183, file: !10184, line: 1187, type: !570)
!10188 = !DILocation(line: 0, scope: !10183)
!10189 = !DILocation(line: 1187, column: 3, scope: !10183)
!10190 = !DILocation(line: 1187, column: 17, scope: !10183)
!10191 = !DILocation(line: 1188, column: 3, scope: !10183)
!10192 = !DILocation(line: 1190, column: 12, scope: !10183)
!10193 = !DILocation(line: 1190, column: 10, scope: !10183)
!10194 = !DILocation(line: 1191, column: 9, scope: !10183)
!10195 = !DILocation(line: 1192, column: 1, scope: !10183)
!10196 = distinct !DISubprogram(name: "uart_console_init", scope: !1364, file: !1364, line: 588, type: !1341, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1307, retainedNodes: !10197)
!10197 = !{!10198}
!10198 = !DILocalVariable(name: "arg", arg: 1, scope: !10196, file: !1364, line: 588, type: !1319)
!10199 = !DILocation(line: 0, scope: !10196)
!10200 = !DILocation(line: 593, column: 7, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10196, file: !1364, line: 593, column: 6)
!10202 = !DILocation(line: 593, column: 6, scope: !10196)
!10203 = !DILocation(line: 597, column: 2, scope: !10196)
!10204 = !DILocation(line: 599, column: 2, scope: !10196)
!10205 = !DILocation(line: 600, column: 1, scope: !10196)
!10206 = distinct !DISubprogram(name: "device_is_ready", scope: !10207, file: !10207, line: 47, type: !10208, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1307, retainedNodes: !10210)
!10207 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!10208 = !DISubroutineType(types: !10209)
!10209 = !{!422, !1319}
!10210 = !{!10211}
!10211 = !DILocalVariable(name: "dev", arg: 1, scope: !10206, file: !10207, line: 47, type: !1319)
!10212 = !DILocation(line: 0, scope: !10206)
!10213 = !DILocation(line: 55, column: 2, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10206, file: !10207, line: 55, column: 2)
!10215 = !{i64 2154970075}
!10216 = !DILocation(line: 56, column: 9, scope: !10206)
!10217 = !DILocation(line: 56, column: 2, scope: !10206)
!10218 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1364, file: !1364, line: 573, type: !3406, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1307, retainedNodes: !437)
!10219 = !DILocation(line: 576, column: 2, scope: !10218)
!10220 = !DILocation(line: 579, column: 2, scope: !10218)
!10221 = !DILocation(line: 581, column: 1, scope: !10218)
!10222 = distinct !DISubprogram(name: "console_out", scope: !1364, file: !1364, line: 77, type: !557, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1307, retainedNodes: !10223)
!10223 = !{!10224}
!10224 = !DILocalVariable(name: "c", arg: 1, scope: !10222, file: !1364, line: 77, type: !108)
!10225 = !DILocation(line: 0, scope: !10222)
!10226 = !DILocation(line: 89, column: 11, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10222, file: !1364, line: 89, column: 6)
!10228 = !DILocation(line: 89, column: 6, scope: !10222)
!10229 = !DILocation(line: 90, column: 3, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10227, file: !1364, line: 89, column: 17)
!10231 = !DILocation(line: 91, column: 2, scope: !10230)
!10232 = !DILocation(line: 92, column: 34, scope: !10222)
!10233 = !DILocation(line: 92, column: 2, scope: !10222)
!10234 = !DILocation(line: 94, column: 2, scope: !10222)
!10235 = distinct !DISubprogram(name: "uart_poll_out", scope: !10236, file: !10236, line: 95, type: !1337, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1307, retainedNodes: !10237)
!10236 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sensor_batch_processing")
!10237 = !{!10238, !10239}
!10238 = !DILocalVariable(name: "dev", arg: 1, scope: !10235, file: !10236, line: 95, type: !1319)
!10239 = !DILocalVariable(name: "out_char", arg: 2, scope: !10235, file: !10236, line: 95, type: !165)
!10240 = !DILocation(line: 0, scope: !10235)
!10241 = !DILocation(line: 105, column: 2, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10235, file: !10236, line: 105, column: 2)
!10243 = !{i64 2155053466}
!10244 = !DILocation(line: 106, column: 2, scope: !10235)
!10245 = !DILocation(line: 107, column: 1, scope: !10235)
!10246 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1313, file: !1313, line: 574, type: !1337, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1307, retainedNodes: !10247)
!10247 = !{!10248, !10249, !10250}
!10248 = !DILocalVariable(name: "dev", arg: 1, scope: !10246, file: !1313, line: 574, type: !1319)
!10249 = !DILocalVariable(name: "out_char", arg: 2, scope: !10246, file: !1313, line: 575, type: !165)
!10250 = !DILocalVariable(name: "api", scope: !10246, file: !1313, line: 577, type: !1310)
!10251 = !DILocation(line: 0, scope: !10246)
!10252 = !DILocation(line: 578, column: 40, scope: !10246)
!10253 = !DILocation(line: 580, column: 7, scope: !10246)
!10254 = !DILocation(line: 580, column: 2, scope: !10246)
!10255 = !DILocation(line: 581, column: 1, scope: !10246)
!10256 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10208, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1307, retainedNodes: !10257)
!10257 = !{!10258}
!10258 = !DILocalVariable(name: "dev", arg: 1, scope: !10256, file: !411, line: 730, type: !1319)
!10259 = !DILocation(line: 0, scope: !10256)
!10260 = !DILocation(line: 732, column: 9, scope: !10256)
!10261 = !DILocation(line: 732, column: 2, scope: !10256)
!10262 = distinct !DISubprogram(name: "uart_register_input", scope: !1364, file: !1364, line: 560, type: !10263, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1307, retainedNodes: !10308)
!10263 = !DISubroutineType(types: !10264)
!10264 = !{null, !10265, !10265, !10305}
!10265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10266, size: 32)
!10266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !359, line: 2208, size: 128, elements: !10267)
!10267 = !{!10268}
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10266, file: !359, line: 2209, baseType: !10269, size: 128)
!10269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !359, line: 1709, size: 128, elements: !10270)
!10270 = !{!10271, !10284, !10286}
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10269, file: !359, line: 1710, baseType: !10272, size: 64)
!10272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10273, line: 46, baseType: !10274)
!10273 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10273, line: 41, size: 64, elements: !10275)
!10275 = !{!10276, !10283}
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10274, file: !10273, line: 42, baseType: !10277, size: 32)
!10277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10278, size: 32)
!10278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10273, line: 39, baseType: !10279)
!10279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10273, line: 35, size: 32, elements: !10280)
!10280 = !{!10281}
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10279, file: !10273, line: 36, baseType: !10282, size: 32)
!10282 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10273, line: 32, baseType: !113)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10274, file: !10273, line: 43, baseType: !10277, size: 32, offset: 32)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10269, file: !359, line: 1711, baseType: !10285, offset: 64)
!10285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10269, file: !359, line: 1712, baseType: !10287, size: 64, offset: 64)
!10287 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !10288)
!10288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !10289)
!10289 = !{!10290}
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10288, file: !363, line: 232, baseType: !10291, size: 64)
!10291 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !10292)
!10292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !10293)
!10293 = !{!10294, !10300}
!10294 = !DIDerivedType(tag: DW_TAG_member, scope: !10292, file: !367, line: 38, baseType: !10295, size: 32)
!10295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10292, file: !367, line: 38, size: 32, elements: !10296)
!10296 = !{!10297, !10299}
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10295, file: !367, line: 39, baseType: !10298, size: 32)
!10298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10292, size: 32)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10295, file: !367, line: 40, baseType: !10298, size: 32)
!10300 = !DIDerivedType(tag: DW_TAG_member, scope: !10292, file: !367, line: 42, baseType: !10301, size: 32, offset: 32)
!10301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10292, file: !367, line: 42, size: 32, elements: !10302)
!10302 = !{!10303, !10304}
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10301, file: !367, line: 43, baseType: !10298, size: 32)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10301, file: !367, line: 44, baseType: !10298, size: 32)
!10305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10306, size: 32)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{!164, !443, !164}
!10308 = !{!10309, !10310, !10311}
!10309 = !DILocalVariable(name: "avail", arg: 1, scope: !10262, file: !1364, line: 560, type: !10265)
!10310 = !DILocalVariable(name: "lines", arg: 2, scope: !10262, file: !1364, line: 560, type: !10265)
!10311 = !DILocalVariable(name: "completion", arg: 3, scope: !10262, file: !1364, line: 561, type: !10305)
!10312 = !DILocation(line: 0, scope: !10262)
!10313 = !DILocation(line: 566, column: 1, scope: !10262)
!10314 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1544, file: !1544, line: 523, type: !1400, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10315)
!10315 = !{!10316, !10317, !10318, !10319, !10320}
!10316 = !DILocalVariable(name: "dev", arg: 1, scope: !10314, file: !1544, line: 523, type: !1402)
!10317 = !DILocalVariable(name: "pin", arg: 2, scope: !10314, file: !1544, line: 524, type: !1417)
!10318 = !DILocalVariable(name: "flags", arg: 3, scope: !10314, file: !1544, line: 524, type: !1418)
!10319 = !DILocalVariable(name: "err", scope: !10314, file: !1544, line: 526, type: !108)
!10320 = !DILocalVariable(name: "pincfg", scope: !10314, file: !1544, line: 527, type: !108)
!10321 = !DILocation(line: 0, scope: !10314)
!10322 = !DILocation(line: 527, column: 2, scope: !10314)
!10323 = !DILocation(line: 532, column: 8, scope: !10314)
!10324 = !DILocation(line: 533, column: 10, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10314, file: !1544, line: 533, column: 6)
!10326 = !DILocation(line: 533, column: 6, scope: !10314)
!10327 = !DILocation(line: 543, column: 13, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10314, file: !1544, line: 543, column: 6)
!10329 = !DILocation(line: 543, column: 28, scope: !10328)
!10330 = !DILocation(line: 543, column: 6, scope: !10314)
!10331 = !DILocation(line: 544, column: 14, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !1544, line: 544, column: 7)
!10333 = distinct !DILexicalBlock(scope: !10328, file: !1544, line: 543, column: 34)
!10334 = !DILocation(line: 544, column: 39, scope: !10332)
!10335 = !DILocation(line: 544, column: 7, scope: !10333)
!10336 = !DILocation(line: 545, column: 38, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10332, file: !1544, line: 544, column: 45)
!10338 = !DILocation(line: 545, column: 4, scope: !10337)
!10339 = !DILocation(line: 546, column: 3, scope: !10337)
!10340 = !DILocation(line: 546, column: 21, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10332, file: !1544, line: 546, column: 14)
!10342 = !DILocation(line: 546, column: 45, scope: !10341)
!10343 = !DILocation(line: 546, column: 14, scope: !10332)
!10344 = !DILocation(line: 547, column: 40, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10341, file: !1544, line: 546, column: 51)
!10346 = !DILocation(line: 547, column: 4, scope: !10345)
!10347 = !DILocation(line: 548, column: 3, scope: !10345)
!10348 = !DILocation(line: 551, column: 32, scope: !10314)
!10349 = !DILocation(line: 551, column: 37, scope: !10314)
!10350 = !DILocation(line: 551, column: 2, scope: !10314)
!10351 = !DILocation(line: 554, column: 6, scope: !10314)
!10352 = !DILocation(line: 562, column: 1, scope: !10314)
!10353 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1544, file: !1544, line: 410, type: !10354, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10356)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{!108, !1402, !1229}
!10356 = !{!10357, !10358, !10359, !10361}
!10357 = !DILocalVariable(name: "dev", arg: 1, scope: !10353, file: !1544, line: 410, type: !1402)
!10358 = !DILocalVariable(name: "value", arg: 2, scope: !10353, file: !1544, line: 410, type: !1229)
!10359 = !DILocalVariable(name: "cfg", scope: !10353, file: !1544, line: 412, type: !10360)
!10360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!10361 = !DILocalVariable(name: "gpio", scope: !10353, file: !1544, line: 413, type: !1475)
!10362 = !DILocation(line: 0, scope: !10353)
!10363 = !DILocation(line: 412, column: 45, scope: !10353)
!10364 = !DILocation(line: 413, column: 44, scope: !10353)
!10365 = !DILocation(line: 415, column: 11, scope: !10353)
!10366 = !DILocation(line: 415, column: 9, scope: !10353)
!10367 = !DILocation(line: 417, column: 2, scope: !10353)
!10368 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1544, file: !1544, line: 420, type: !1427, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10369)
!10369 = !{!10370, !10371, !10372, !10373, !10374, !10375}
!10370 = !DILocalVariable(name: "dev", arg: 1, scope: !10368, file: !1544, line: 420, type: !1402)
!10371 = !DILocalVariable(name: "mask", arg: 2, scope: !10368, file: !1544, line: 421, type: !1429)
!10372 = !DILocalVariable(name: "value", arg: 3, scope: !10368, file: !1544, line: 422, type: !1424)
!10373 = !DILocalVariable(name: "cfg", scope: !10368, file: !1544, line: 424, type: !10360)
!10374 = !DILocalVariable(name: "gpio", scope: !10368, file: !1544, line: 425, type: !1475)
!10375 = !DILocalVariable(name: "port_value", scope: !10368, file: !1544, line: 426, type: !113)
!10376 = !DILocation(line: 0, scope: !10368)
!10377 = !DILocation(line: 424, column: 45, scope: !10368)
!10378 = !DILocation(line: 425, column: 44, scope: !10368)
!10379 = !DILocation(line: 430, column: 15, scope: !10368)
!10380 = !DILocation(line: 431, column: 46, scope: !10368)
!10381 = !DILocation(line: 431, column: 44, scope: !10368)
!10382 = !DILocation(line: 431, column: 61, scope: !10368)
!10383 = !DILocation(line: 431, column: 53, scope: !10368)
!10384 = !DILocation(line: 431, column: 2, scope: !10368)
!10385 = !DILocation(line: 435, column: 2, scope: !10368)
!10386 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1544, file: !1544, line: 438, type: !1432, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10387)
!10387 = !{!10388, !10389, !10390, !10391}
!10388 = !DILocalVariable(name: "dev", arg: 1, scope: !10386, file: !1544, line: 438, type: !1402)
!10389 = !DILocalVariable(name: "pins", arg: 2, scope: !10386, file: !1544, line: 439, type: !1429)
!10390 = !DILocalVariable(name: "cfg", scope: !10386, file: !1544, line: 441, type: !10360)
!10391 = !DILocalVariable(name: "gpio", scope: !10386, file: !1544, line: 442, type: !1475)
!10392 = !DILocation(line: 0, scope: !10386)
!10393 = !DILocation(line: 441, column: 45, scope: !10386)
!10394 = !DILocation(line: 442, column: 44, scope: !10386)
!10395 = !DILocation(line: 448, column: 2, scope: !10386)
!10396 = !DILocation(line: 450, column: 2, scope: !10386)
!10397 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1544, file: !1544, line: 453, type: !1432, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10398)
!10398 = !{!10399, !10400, !10401, !10402}
!10399 = !DILocalVariable(name: "dev", arg: 1, scope: !10397, file: !1544, line: 453, type: !1402)
!10400 = !DILocalVariable(name: "pins", arg: 2, scope: !10397, file: !1544, line: 454, type: !1429)
!10401 = !DILocalVariable(name: "cfg", scope: !10397, file: !1544, line: 456, type: !10360)
!10402 = !DILocalVariable(name: "gpio", scope: !10397, file: !1544, line: 457, type: !1475)
!10403 = !DILocation(line: 0, scope: !10397)
!10404 = !DILocation(line: 456, column: 45, scope: !10397)
!10405 = !DILocation(line: 457, column: 44, scope: !10397)
!10406 = !DILocation(line: 467, column: 2, scope: !10397)
!10407 = !DILocation(line: 470, column: 2, scope: !10397)
!10408 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1544, file: !1544, line: 473, type: !1432, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10409)
!10409 = !{!10410, !10411, !10412, !10413}
!10410 = !DILocalVariable(name: "dev", arg: 1, scope: !10408, file: !1544, line: 473, type: !1402)
!10411 = !DILocalVariable(name: "pins", arg: 2, scope: !10408, file: !1544, line: 474, type: !1429)
!10412 = !DILocalVariable(name: "cfg", scope: !10408, file: !1544, line: 476, type: !10360)
!10413 = !DILocalVariable(name: "gpio", scope: !10408, file: !1544, line: 477, type: !1475)
!10414 = !DILocation(line: 0, scope: !10408)
!10415 = !DILocation(line: 476, column: 45, scope: !10408)
!10416 = !DILocation(line: 477, column: 44, scope: !10408)
!10417 = !DILocation(line: 484, column: 2, scope: !10408)
!10418 = !DILocation(line: 487, column: 2, scope: !10408)
!10419 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1544, file: !1544, line: 594, type: !1438, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10420)
!10420 = !{!10421, !10422, !10423, !10424, !10425, !10426, !10428, !10429, !10430}
!10421 = !DILocalVariable(name: "dev", arg: 1, scope: !10419, file: !1544, line: 594, type: !1402)
!10422 = !DILocalVariable(name: "pin", arg: 2, scope: !10419, file: !1544, line: 595, type: !1417)
!10423 = !DILocalVariable(name: "mode", arg: 3, scope: !10419, file: !1544, line: 596, type: !1376)
!10424 = !DILocalVariable(name: "trig", arg: 4, scope: !10419, file: !1544, line: 597, type: !1382)
!10425 = !DILocalVariable(name: "cfg", scope: !10419, file: !1544, line: 599, type: !10360)
!10426 = !DILocalVariable(name: "data", scope: !10419, file: !1544, line: 600, type: !10427)
!10427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!10428 = !DILocalVariable(name: "edge", scope: !10419, file: !1544, line: 601, type: !108)
!10429 = !DILocalVariable(name: "err", scope: !10419, file: !1544, line: 602, type: !108)
!10430 = !DILabel(scope: !10419, name: "exit", file: !1544, line: 643)
!10431 = !DILocation(line: 0, scope: !10419)
!10432 = !DILocation(line: 599, column: 45, scope: !10419)
!10433 = !DILocation(line: 604, column: 6, scope: !10419)
!10434 = !DILocation(line: 605, column: 34, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !1544, line: 605, column: 7)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1544, line: 604, column: 38)
!10437 = distinct !DILexicalBlock(scope: !10419, file: !1544, line: 604, column: 6)
!10438 = !DILocation(line: 605, column: 7, scope: !10435)
!10439 = !DILocation(line: 605, column: 47, scope: !10435)
!10440 = !DILocation(line: 605, column: 39, scope: !10435)
!10441 = !DILocation(line: 605, column: 7, scope: !10436)
!10442 = !DILocation(line: 606, column: 4, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10435, file: !1544, line: 605, column: 53)
!10444 = !DILocation(line: 607, column: 4, scope: !10443)
!10445 = !DILocation(line: 608, column: 4, scope: !10443)
!10446 = !DILocation(line: 609, column: 3, scope: !10443)
!10447 = !DILocation(line: 600, column: 38, scope: !10419)
!10448 = !DILocation(line: 620, column: 30, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10419, file: !1544, line: 620, column: 6)
!10450 = !DILocation(line: 620, column: 6, scope: !10449)
!10451 = !DILocation(line: 620, column: 57, scope: !10449)
!10452 = !DILocation(line: 620, column: 6, scope: !10419)
!10453 = !DILocation(line: 625, column: 29, scope: !10419)
!10454 = !DILocation(line: 625, column: 2, scope: !10419)
!10455 = !DILocation(line: 627, column: 2, scope: !10419)
!10456 = !DILocation(line: 630, column: 3, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10419, file: !1544, line: 627, column: 16)
!10458 = !DILocation(line: 633, column: 3, scope: !10457)
!10459 = !DILocation(line: 636, column: 3, scope: !10457)
!10460 = !DILocation(line: 639, column: 2, scope: !10419)
!10461 = !DILocation(line: 641, column: 2, scope: !10419)
!10462 = !DILocation(line: 643, column: 1, scope: !10419)
!10463 = !DILocation(line: 644, column: 2, scope: !10419)
!10464 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1544, file: !1544, line: 647, type: !1442, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10465)
!10465 = !{!10466, !10467, !10468, !10469}
!10466 = !DILocalVariable(name: "dev", arg: 1, scope: !10464, file: !1544, line: 647, type: !1402)
!10467 = !DILocalVariable(name: "callback", arg: 2, scope: !10464, file: !1544, line: 648, type: !1444)
!10468 = !DILocalVariable(name: "set", arg: 3, scope: !10464, file: !1544, line: 649, type: !422)
!10469 = !DILocalVariable(name: "data", scope: !10464, file: !1544, line: 651, type: !10427)
!10470 = !DILocation(line: 0, scope: !10464)
!10471 = !DILocation(line: 651, column: 38, scope: !10464)
!10472 = !DILocation(line: 653, column: 37, scope: !10464)
!10473 = !DILocation(line: 653, column: 9, scope: !10464)
!10474 = !DILocation(line: 653, column: 2, scope: !10464)
!10475 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10476, file: !10476, line: 38, type: !10477, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10480)
!10476 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10477 = !DISubroutineType(types: !10478)
!10478 = !{!108, !10479, !1444, !422}
!10479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!10480 = !{!10481, !10482, !10483}
!10481 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10475, file: !10476, line: 38, type: !10479)
!10482 = !DILocalVariable(name: "callback", arg: 2, scope: !10475, file: !10476, line: 39, type: !1444)
!10483 = !DILocalVariable(name: "set", arg: 3, scope: !10475, file: !10476, line: 40, type: !422)
!10484 = !DILocation(line: 0, scope: !10475)
!10485 = !DILocation(line: 45, column: 7, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10475, file: !10476, line: 45, column: 6)
!10487 = !DILocation(line: 45, column: 6, scope: !10475)
!10488 = !DILocation(line: 46, column: 56, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10490, file: !10476, line: 46, column: 7)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !10476, line: 45, column: 38)
!10491 = !DILocation(line: 46, column: 8, scope: !10489)
!10492 = !DILocation(line: 46, column: 7, scope: !10490)
!10493 = !DILocation(line: 51, column: 13, scope: !10486)
!10494 = !DILocation(line: 56, column: 43, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !10476, line: 55, column: 11)
!10496 = distinct !DILexicalBlock(scope: !10475, file: !10476, line: 55, column: 6)
!10497 = !DILocation(line: 56, column: 3, scope: !10495)
!10498 = !DILocation(line: 57, column: 2, scope: !10495)
!10499 = !DILocation(line: 60, column: 1, scope: !10475)
!10500 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1449, file: !1449, line: 261, type: !10501, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10503)
!10501 = !DISubroutineType(types: !10502)
!10502 = !{!422, !10479}
!10503 = !{!10504}
!10504 = !DILocalVariable(name: "list", arg: 1, scope: !10500, file: !1449, line: 261, type: !10479)
!10505 = !DILocation(line: 0, scope: !10500)
!10506 = !DILocation(line: 261, column: 1, scope: !10500)
!10507 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1449, file: !1449, line: 417, type: !10508, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10510)
!10508 = !DISubroutineType(types: !10509)
!10509 = !{!422, !10479, !1620}
!10510 = !{!10511, !10512, !10513, !10514}
!10511 = !DILocalVariable(name: "list", arg: 1, scope: !10507, file: !1449, line: 417, type: !10479)
!10512 = !DILocalVariable(name: "node", arg: 2, scope: !10507, file: !1449, line: 417, type: !1620)
!10513 = !DILocalVariable(name: "prev", scope: !10507, file: !1449, line: 417, type: !1620)
!10514 = !DILocalVariable(name: "test", scope: !10507, file: !1449, line: 417, type: !1620)
!10515 = !DILocation(line: 0, scope: !10507)
!10516 = !DILocation(line: 417, column: 1, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10507, file: !1449, line: 417, column: 1)
!10518 = !DILocation(line: 417, column: 1, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10517, file: !1449, line: 417, column: 1)
!10520 = !DILocation(line: 417, column: 1, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !1449, line: 417, column: 1)
!10522 = distinct !DILexicalBlock(scope: !10519, file: !1449, line: 417, column: 1)
!10523 = !DILocation(line: 417, column: 1, scope: !10522)
!10524 = distinct !{!10524, !10516, !10516}
!10525 = !DILocation(line: 417, column: 1, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10521, file: !1449, line: 417, column: 1)
!10527 = !DILocation(line: 417, column: 1, scope: !10507)
!10528 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1449, file: !1449, line: 298, type: !10529, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10531)
!10529 = !DISubroutineType(types: !10530)
!10530 = !{null, !10479, !1620}
!10531 = !{!10532, !10533}
!10532 = !DILocalVariable(name: "list", arg: 1, scope: !10528, file: !1449, line: 298, type: !10479)
!10533 = !DILocalVariable(name: "node", arg: 2, scope: !10528, file: !1449, line: 298, type: !1620)
!10534 = !DILocation(line: 0, scope: !10528)
!10535 = !DILocation(line: 298, column: 1, scope: !10528)
!10536 = !DILocation(line: 298, column: 1, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10528, file: !1449, line: 298, column: 1)
!10538 = !DILocation(line: 298, column: 1, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10537, file: !1449, line: 298, column: 1)
!10540 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1449, file: !1449, line: 231, type: !10541, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10543)
!10541 = !DISubroutineType(types: !10542)
!10542 = !{!1620, !10479}
!10543 = !{!10544}
!10544 = !DILocalVariable(name: "list", arg: 1, scope: !10540, file: !1449, line: 231, type: !10479)
!10545 = !DILocation(line: 0, scope: !10540)
!10546 = !DILocation(line: 233, column: 15, scope: !10540)
!10547 = !DILocation(line: 233, column: 2, scope: !10540)
!10548 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1449, file: !1449, line: 209, type: !10549, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10551)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{null, !1620, !1620}
!10551 = !{!10552, !10553}
!10552 = !DILocalVariable(name: "parent", arg: 1, scope: !10548, file: !1449, line: 209, type: !1620)
!10553 = !DILocalVariable(name: "child", arg: 2, scope: !10548, file: !1449, line: 209, type: !1620)
!10554 = !DILocation(line: 0, scope: !10548)
!10555 = !DILocation(line: 211, column: 10, scope: !10548)
!10556 = !DILocation(line: 211, column: 15, scope: !10548)
!10557 = !DILocation(line: 212, column: 1, scope: !10548)
!10558 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1449, file: !1449, line: 214, type: !10529, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10559)
!10559 = !{!10560, !10561}
!10560 = !DILocalVariable(name: "list", arg: 1, scope: !10558, file: !1449, line: 214, type: !10479)
!10561 = !DILocalVariable(name: "node", arg: 2, scope: !10558, file: !1449, line: 214, type: !1620)
!10562 = !DILocation(line: 0, scope: !10558)
!10563 = !DILocation(line: 216, column: 8, scope: !10558)
!10564 = !DILocation(line: 216, column: 13, scope: !10558)
!10565 = !DILocation(line: 217, column: 1, scope: !10558)
!10566 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1449, file: !1449, line: 243, type: !10541, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10567)
!10567 = !{!10568}
!10568 = !DILocalVariable(name: "list", arg: 1, scope: !10566, file: !1449, line: 243, type: !10479)
!10569 = !DILocation(line: 0, scope: !10566)
!10570 = !DILocation(line: 245, column: 15, scope: !10566)
!10571 = !DILocation(line: 245, column: 2, scope: !10566)
!10572 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1449, file: !1449, line: 219, type: !10529, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10573)
!10573 = !{!10574, !10575}
!10574 = !DILocalVariable(name: "list", arg: 1, scope: !10572, file: !1449, line: 219, type: !10479)
!10575 = !DILocalVariable(name: "node", arg: 2, scope: !10572, file: !1449, line: 219, type: !1620)
!10576 = !DILocation(line: 0, scope: !10572)
!10577 = !DILocation(line: 221, column: 8, scope: !10572)
!10578 = !DILocation(line: 221, column: 13, scope: !10572)
!10579 = !DILocation(line: 222, column: 1, scope: !10572)
!10580 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1449, file: !1449, line: 401, type: !10581, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10583)
!10581 = !DISubroutineType(types: !10582)
!10582 = !{null, !10479, !1620, !1620}
!10583 = !{!10584, !10585, !10586}
!10584 = !DILocalVariable(name: "list", arg: 1, scope: !10580, file: !1449, line: 401, type: !10479)
!10585 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10580, file: !1449, line: 401, type: !1620)
!10586 = !DILocalVariable(name: "node", arg: 3, scope: !10580, file: !1449, line: 401, type: !1620)
!10587 = !DILocation(line: 0, scope: !10580)
!10588 = !DILocation(line: 401, column: 1, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10580, file: !1449, line: 401, column: 1)
!10590 = !DILocation(line: 0, scope: !10589)
!10591 = !DILocation(line: 401, column: 1, scope: !10580)
!10592 = !DILocation(line: 401, column: 1, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10589, file: !1449, line: 401, column: 1)
!10594 = !DILocation(line: 401, column: 1, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10593, file: !1449, line: 401, column: 1)
!10596 = !DILocation(line: 401, column: 1, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10595, file: !1449, line: 401, column: 1)
!10598 = !DILocation(line: 401, column: 1, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10589, file: !1449, line: 401, column: 1)
!10600 = !DILocation(line: 401, column: 1, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10599, file: !1449, line: 401, column: 1)
!10602 = !DILocation(line: 401, column: 1, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10601, file: !1449, line: 401, column: 1)
!10604 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1449, file: !1449, line: 285, type: !10605, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10607)
!10605 = !DISubroutineType(types: !10606)
!10606 = !{!1620, !1620}
!10607 = !{!10608}
!10608 = !DILocalVariable(name: "node", arg: 1, scope: !10604, file: !1449, line: 285, type: !1620)
!10609 = !DILocation(line: 0, scope: !10604)
!10610 = !DILocation(line: 285, column: 1, scope: !10604)
!10611 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1449, file: !1449, line: 274, type: !10605, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10612)
!10612 = !{!10613}
!10613 = !DILocalVariable(name: "node", arg: 1, scope: !10611, file: !1449, line: 274, type: !1620)
!10614 = !DILocation(line: 0, scope: !10611)
!10615 = !DILocation(line: 274, column: 1, scope: !10611)
!10616 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1449, file: !1449, line: 204, type: !10605, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10617)
!10617 = !{!10618}
!10618 = !DILocalVariable(name: "node", arg: 1, scope: !10616, file: !1449, line: 204, type: !1620)
!10619 = !DILocation(line: 0, scope: !10616)
!10620 = !DILocation(line: 206, column: 15, scope: !10616)
!10621 = !DILocation(line: 206, column: 2, scope: !10616)
!10622 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1544, file: !1544, line: 342, type: !557, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10623)
!10623 = !{!10624, !10625, !10626}
!10624 = !DILocalVariable(name: "pin", arg: 1, scope: !10622, file: !1544, line: 342, type: !108)
!10625 = !DILocalVariable(name: "line", scope: !10622, file: !1544, line: 344, type: !113)
!10626 = !DILocalVariable(name: "port", scope: !10622, file: !1544, line: 345, type: !108)
!10627 = !DILocation(line: 0, scope: !10622)
!10628 = !DILocation(line: 344, column: 18, scope: !10622)
!10629 = !{i32 983040, i32 0}
!10630 = !DILocation(line: 356, column: 9, scope: !10622)
!10631 = !DILocation(line: 370, column: 2, scope: !10622)
!10632 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1544, file: !1544, line: 37, type: !1126, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10633)
!10633 = !{!10634, !10635, !10636}
!10634 = !DILocalVariable(name: "line", arg: 1, scope: !10632, file: !1544, line: 37, type: !108)
!10635 = !DILocalVariable(name: "arg", arg: 2, scope: !10632, file: !1544, line: 37, type: !104)
!10636 = !DILocalVariable(name: "data", scope: !10632, file: !1544, line: 39, type: !10427)
!10637 = !DILocation(line: 0, scope: !10632)
!10638 = !DILocation(line: 41, column: 29, scope: !10632)
!10639 = !DILocation(line: 41, column: 39, scope: !10632)
!10640 = !DILocation(line: 41, column: 44, scope: !10632)
!10641 = !DILocation(line: 41, column: 2, scope: !10632)
!10642 = !DILocation(line: 42, column: 1, scope: !10632)
!10643 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1544, file: !1544, line: 376, type: !10644, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10646)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!108, !108, !108}
!10646 = !{!10647, !10648, !10649, !10651, !10652}
!10647 = !DILocalVariable(name: "port", arg: 1, scope: !10643, file: !1544, line: 376, type: !108)
!10648 = !DILocalVariable(name: "pin", arg: 2, scope: !10643, file: !1544, line: 376, type: !108)
!10649 = !DILocalVariable(name: "clk", scope: !10643, file: !1544, line: 386, type: !10650)
!10650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!10651 = !DILocalVariable(name: "pclken", scope: !10643, file: !1544, line: 387, type: !1663)
!10652 = !DILocalVariable(name: "ret", scope: !10643, file: !1544, line: 396, type: !108)
!10653 = !DILocation(line: 0, scope: !10643)
!10654 = !DILocation(line: 387, column: 2, scope: !10643)
!10655 = !DILocation(line: 387, column: 22, scope: !10643)
!10656 = !DILocation(line: 399, column: 8, scope: !10643)
!10657 = !DILocation(line: 400, column: 10, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10643, file: !1544, line: 400, column: 6)
!10659 = !DILocation(line: 400, column: 6, scope: !10643)
!10660 = !DILocation(line: 405, column: 2, scope: !10643)
!10661 = !DILocation(line: 407, column: 2, scope: !10643)
!10662 = !DILocation(line: 408, column: 1, scope: !10643)
!10663 = distinct !DISubprogram(name: "clock_control_on", scope: !1180, file: !1180, line: 123, type: !1509, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10664)
!10664 = !{!10665, !10666, !10667}
!10665 = !DILocalVariable(name: "dev", arg: 1, scope: !10663, file: !1180, line: 123, type: !1402)
!10666 = !DILocalVariable(name: "sys", arg: 2, scope: !10663, file: !1180, line: 124, type: !1273)
!10667 = !DILocalVariable(name: "api", scope: !10663, file: !1180, line: 126, type: !1502)
!10668 = !DILocation(line: 0, scope: !10663)
!10669 = !DILocation(line: 127, column: 49, scope: !10663)
!10670 = !DILocation(line: 129, column: 14, scope: !10663)
!10671 = !DILocation(line: 129, column: 9, scope: !10663)
!10672 = !DILocation(line: 129, column: 2, scope: !10663)
!10673 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1544, file: !1544, line: 311, type: !9793, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10674)
!10674 = !{!10675, !10676, !10677}
!10675 = !DILocalVariable(name: "port", arg: 1, scope: !10673, file: !1544, line: 311, type: !108)
!10676 = !DILocalVariable(name: "pin", arg: 2, scope: !10673, file: !1544, line: 311, type: !108)
!10677 = !DILocalVariable(name: "line", scope: !10673, file: !1544, line: 313, type: !113)
!10678 = !DILocation(line: 0, scope: !10673)
!10679 = !DILocation(line: 313, column: 18, scope: !10673)
!10680 = !DILocation(line: 337, column: 2, scope: !10673)
!10681 = !DILocation(line: 340, column: 1, scope: !10673)
!10682 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1544, file: !1544, line: 295, type: !10683, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10685)
!10683 = !DISubroutineType(types: !10684)
!10684 = !{!113, !108}
!10685 = !{!10686}
!10686 = !DILocalVariable(name: "pin", arg: 1, scope: !10682, file: !1544, line: 295, type: !108)
!10687 = !DILocation(line: 0, scope: !10682)
!10688 = !DILocation(line: 307, column: 46, scope: !10682)
!10689 = !DILocation(line: 307, column: 27, scope: !10682)
!10690 = !DILocation(line: 307, column: 32, scope: !10682)
!10691 = !DILocation(line: 307, column: 14, scope: !10682)
!10692 = !DILocation(line: 307, column: 39, scope: !10682)
!10693 = !DILocation(line: 307, column: 2, scope: !10682)
!10694 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6767, file: !6767, line: 671, type: !10695, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10697)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{null, !113, !113}
!10697 = !{!10698, !10699}
!10698 = !DILocalVariable(name: "Port", arg: 1, scope: !10694, file: !6767, line: 671, type: !113)
!10699 = !DILocalVariable(name: "Line", arg: 2, scope: !10694, file: !6767, line: 671, type: !113)
!10700 = !DILocation(line: 0, scope: !10694)
!10701 = !DILocation(line: 673, column: 3, scope: !10694)
!10702 = !DILocalVariable(name: "value", arg: 1, scope: !10703, file: !7064, line: 373, type: !113)
!10703 = distinct !DISubprogram(name: "__RBIT", scope: !7064, file: !7064, line: 373, type: !8310, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10704)
!10704 = !{!10702, !10705}
!10705 = !DILocalVariable(name: "result", scope: !10703, file: !7064, line: 375, type: !113)
!10706 = !DILocation(line: 0, scope: !10703, inlinedAt: !10707)
!10707 = distinct !DILocation(line: 673, column: 3, scope: !10694)
!10708 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10707)
!10709 = !{i64 3517364}
!10710 = !DILocalVariable(name: "value", arg: 1, scope: !10711, file: !7064, line: 403, type: !113)
!10711 = distinct !DISubprogram(name: "__CLZ", scope: !7064, file: !7064, line: 403, type: !10712, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10714)
!10712 = !DISubroutineType(types: !10713)
!10713 = !{!164, !113}
!10714 = !{!10710}
!10715 = !DILocation(line: 0, scope: !10711, inlinedAt: !10716)
!10716 = distinct !DILocation(line: 673, column: 3, scope: !10694)
!10717 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10716)
!10718 = !DILocation(line: 674, column: 1, scope: !10694)
!10719 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10476, file: !10476, line: 69, type: !10720, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10722)
!10720 = !DISubroutineType(types: !10721)
!10721 = !{null, !10479, !1402, !113}
!10722 = !{!10723, !10724, !10725, !10726, !10727}
!10723 = !DILocalVariable(name: "list", arg: 1, scope: !10719, file: !10476, line: 69, type: !10479)
!10724 = !DILocalVariable(name: "port", arg: 2, scope: !10719, file: !10476, line: 70, type: !1402)
!10725 = !DILocalVariable(name: "pins", arg: 3, scope: !10719, file: !10476, line: 71, type: !113)
!10726 = !DILocalVariable(name: "cb", scope: !10719, file: !10476, line: 73, type: !1444)
!10727 = !DILocalVariable(name: "tmp", scope: !10719, file: !10476, line: 73, type: !1444)
!10728 = !DILocation(line: 0, scope: !10719)
!10729 = !DILocation(line: 75, column: 2, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10719, file: !10476, line: 75, column: 2)
!10731 = !DILocation(line: 0, scope: !10730)
!10732 = !DILocation(line: 76, column: 11, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10734, file: !10476, line: 76, column: 7)
!10734 = distinct !DILexicalBlock(scope: !10735, file: !10476, line: 75, column: 57)
!10735 = distinct !DILexicalBlock(scope: !10730, file: !10476, line: 75, column: 2)
!10736 = !DILocation(line: 76, column: 20, scope: !10733)
!10737 = !DILocation(line: 76, column: 7, scope: !10734)
!10738 = !DILocation(line: 78, column: 8, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10733, file: !10476, line: 76, column: 28)
!10740 = !DILocation(line: 78, column: 4, scope: !10739)
!10741 = !DILocation(line: 79, column: 3, scope: !10739)
!10742 = !DILocation(line: 75, column: 2, scope: !10735)
!10743 = !DILocation(line: 81, column: 1, scope: !10719)
!10744 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6767, file: !6767, line: 710, type: !8310, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10745)
!10745 = !{!10746}
!10746 = !DILocalVariable(name: "Line", arg: 1, scope: !10744, file: !6767, line: 710, type: !113)
!10747 = !DILocation(line: 0, scope: !10744)
!10748 = !DILocation(line: 712, column: 21, scope: !10744)
!10749 = !DILocation(line: 0, scope: !10703, inlinedAt: !10750)
!10750 = distinct !DILocation(line: 712, column: 76, scope: !10744)
!10751 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10750)
!10752 = !DILocation(line: 0, scope: !10711, inlinedAt: !10753)
!10753 = distinct !DILocation(line: 712, column: 76, scope: !10744)
!10754 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10753)
!10755 = !DILocation(line: 712, column: 73, scope: !10744)
!10756 = !DILocation(line: 712, column: 3, scope: !10744)
!10757 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10758, file: !10758, line: 910, type: !10759, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10761)
!10758 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10759 = !DISubroutineType(types: !10760)
!10760 = !{null, !1475, !113}
!10761 = !{!10762, !10763}
!10762 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10757, file: !10758, line: 910, type: !1475)
!10763 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10757, file: !10758, line: 910, type: !113)
!10764 = !DILocation(line: 0, scope: !10757)
!10765 = !DILocation(line: 912, column: 3, scope: !10757)
!10766 = !DILocation(line: 913, column: 1, scope: !10757)
!10767 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10758, file: !10758, line: 823, type: !10768, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10770)
!10768 = !DISubroutineType(types: !10769)
!10769 = !{!113, !1475}
!10770 = !{!10771}
!10771 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10767, file: !10758, line: 823, type: !1475)
!10772 = !DILocation(line: 0, scope: !10767)
!10773 = !DILocation(line: 825, column: 21, scope: !10767)
!10774 = !DILocation(line: 825, column: 3, scope: !10767)
!10775 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10758, file: !10758, line: 812, type: !10759, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10776)
!10776 = !{!10777, !10778}
!10777 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10775, file: !10758, line: 812, type: !1475)
!10778 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10775, file: !10758, line: 812, type: !113)
!10779 = !DILocation(line: 0, scope: !10775)
!10780 = !DILocation(line: 814, column: 3, scope: !10775)
!10781 = !DILocation(line: 815, column: 1, scope: !10775)
!10782 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10758, file: !10758, line: 771, type: !10768, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10783)
!10783 = !{!10784}
!10784 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10782, file: !10758, line: 771, type: !1475)
!10785 = !DILocation(line: 0, scope: !10782)
!10786 = !DILocation(line: 773, column: 21, scope: !10782)
!10787 = !DILocation(line: 773, column: 3, scope: !10782)
!10788 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1544, file: !1544, line: 47, type: !10789, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10791)
!10789 = !DISubroutineType(types: !10790)
!10790 = !{!108, !1418, !538}
!10791 = !{!10792, !10793}
!10792 = !DILocalVariable(name: "flags", arg: 1, scope: !10788, file: !1544, line: 47, type: !1418)
!10793 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10788, file: !1544, line: 47, type: !538)
!10794 = !DILocation(line: 0, scope: !10788)
!10795 = !DILocation(line: 50, column: 13, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10788, file: !1544, line: 50, column: 6)
!10797 = !DILocation(line: 50, column: 28, scope: !10796)
!10798 = !DILocation(line: 50, column: 6, scope: !10788)
!10799 = !DILocation(line: 53, column: 11, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !1544, line: 50, column: 34)
!10801 = !DILocation(line: 55, column: 14, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10800, file: !1544, line: 55, column: 7)
!10803 = !DILocation(line: 55, column: 35, scope: !10802)
!10804 = !DILocation(line: 55, column: 7, scope: !10800)
!10805 = !DILocation(line: 56, column: 14, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10807, file: !1544, line: 56, column: 8)
!10807 = distinct !DILexicalBlock(scope: !10802, file: !1544, line: 55, column: 41)
!10808 = !DILocation(line: 56, column: 8, scope: !10807)
!10809 = !DILocation(line: 0, scope: !10802)
!10810 = !DILocation(line: 66, column: 14, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10800, file: !1544, line: 66, column: 7)
!10812 = !DILocation(line: 66, column: 30, scope: !10811)
!10813 = !DILocation(line: 66, column: 7, scope: !10800)
!10814 = !DILocation(line: 67, column: 12, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10811, file: !1544, line: 66, column: 36)
!10816 = !DILocation(line: 68, column: 3, scope: !10815)
!10817 = !DILocation(line: 68, column: 21, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10811, file: !1544, line: 68, column: 14)
!10819 = !DILocation(line: 68, column: 39, scope: !10818)
!10820 = !DILocation(line: 68, column: 14, scope: !10811)
!10821 = !DILocation(line: 69, column: 12, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10818, file: !1544, line: 68, column: 45)
!10823 = !DILocation(line: 70, column: 3, scope: !10822)
!10824 = !DILocation(line: 72, column: 21, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10796, file: !1544, line: 72, column: 14)
!10826 = !DILocation(line: 72, column: 35, scope: !10825)
!10827 = !DILocation(line: 72, column: 14, scope: !10796)
!10828 = !DILocation(line: 77, column: 14, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !1544, line: 77, column: 7)
!10830 = distinct !DILexicalBlock(scope: !10825, file: !1544, line: 72, column: 41)
!10831 = !DILocation(line: 77, column: 30, scope: !10829)
!10832 = !DILocation(line: 77, column: 7, scope: !10830)
!10833 = !DILocation(line: 0, scope: !10796)
!10834 = !DILocation(line: 90, column: 1, scope: !10788)
!10835 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1544, file: !1544, line: 157, type: !10836, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10838)
!10836 = !DISubroutineType(types: !10837)
!10837 = !{null, !1402, !108, !108, !108}
!10838 = !{!10839, !10840, !10841, !10842, !10843, !10844, !10845, !10846, !10847, !10848, !10849}
!10839 = !DILocalVariable(name: "dev", arg: 1, scope: !10835, file: !1544, line: 157, type: !1402)
!10840 = !DILocalVariable(name: "pin", arg: 2, scope: !10835, file: !1544, line: 157, type: !108)
!10841 = !DILocalVariable(name: "conf", arg: 3, scope: !10835, file: !1544, line: 158, type: !108)
!10842 = !DILocalVariable(name: "func", arg: 4, scope: !10835, file: !1544, line: 158, type: !108)
!10843 = !DILocalVariable(name: "cfg", scope: !10835, file: !1544, line: 160, type: !10360)
!10844 = !DILocalVariable(name: "gpio", scope: !10835, file: !1544, line: 161, type: !1475)
!10845 = !DILocalVariable(name: "pin_ll", scope: !10835, file: !1544, line: 163, type: !108)
!10846 = !DILocalVariable(name: "mode", scope: !10835, file: !1544, line: 227, type: !32)
!10847 = !DILocalVariable(name: "otype", scope: !10835, file: !1544, line: 227, type: !32)
!10848 = !DILocalVariable(name: "ospeed", scope: !10835, file: !1544, line: 227, type: !32)
!10849 = !DILocalVariable(name: "pupd", scope: !10835, file: !1544, line: 227, type: !32)
!10850 = !DILocation(line: 0, scope: !10835)
!10851 = !DILocation(line: 160, column: 45, scope: !10835)
!10852 = !DILocation(line: 161, column: 44, scope: !10835)
!10853 = !DILocation(line: 163, column: 15, scope: !10835)
!10854 = !DILocation(line: 229, column: 14, scope: !10835)
!10855 = !DILocation(line: 246, column: 47, scope: !10835)
!10856 = !DILocation(line: 246, column: 2, scope: !10835)
!10857 = !DILocation(line: 248, column: 43, scope: !10835)
!10858 = !DILocation(line: 248, column: 2, scope: !10835)
!10859 = !DILocation(line: 250, column: 40, scope: !10835)
!10860 = !DILocation(line: 250, column: 2, scope: !10835)
!10861 = !DILocation(line: 252, column: 11, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10835, file: !1544, line: 252, column: 6)
!10863 = !DILocation(line: 252, column: 6, scope: !10835)
!10864 = !DILocation(line: 253, column: 11, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !1544, line: 253, column: 7)
!10866 = distinct !DILexicalBlock(scope: !10862, file: !1544, line: 252, column: 36)
!10867 = !DILocation(line: 253, column: 7, scope: !10866)
!10868 = !DILocation(line: 254, column: 4, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !1544, line: 253, column: 16)
!10870 = !DILocation(line: 255, column: 3, scope: !10869)
!10871 = !DILocation(line: 256, column: 4, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10865, file: !1544, line: 255, column: 10)
!10873 = !DILocation(line: 260, column: 40, scope: !10835)
!10874 = !DILocation(line: 260, column: 2, scope: !10835)
!10875 = !DILocation(line: 265, column: 1, scope: !10835)
!10876 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1544, file: !1544, line: 137, type: !10683, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10877)
!10877 = !{!10878, !10879}
!10878 = !DILocalVariable(name: "pin", arg: 1, scope: !10876, file: !1544, line: 137, type: !108)
!10879 = !DILocalVariable(name: "pinval", scope: !10876, file: !1544, line: 139, type: !113)
!10880 = !DILocation(line: 0, scope: !10876)
!10881 = !DILocation(line: 149, column: 13, scope: !10876)
!10882 = !DILocation(line: 151, column: 2, scope: !10876)
!10883 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10758, file: !10758, line: 342, type: !10884, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10886)
!10884 = !DISubroutineType(types: !10885)
!10885 = !{null, !1475, !113, !113}
!10886 = !{!10887, !10888, !10889}
!10887 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10883, file: !10758, line: 342, type: !1475)
!10888 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10883, file: !10758, line: 342, type: !113)
!10889 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10883, file: !10758, line: 342, type: !113)
!10890 = !DILocation(line: 0, scope: !10883)
!10891 = !DILocation(line: 344, column: 3, scope: !10883)
!10892 = !DILocation(line: 345, column: 1, scope: !10883)
!10893 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10758, file: !10758, line: 413, type: !10884, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10894)
!10894 = !{!10895, !10896, !10897}
!10895 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10893, file: !10758, line: 413, type: !1475)
!10896 = !DILocalVariable(name: "Pin", arg: 2, scope: !10893, file: !10758, line: 413, type: !113)
!10897 = !DILocalVariable(name: "Speed", arg: 3, scope: !10893, file: !10758, line: 413, type: !113)
!10898 = !DILocation(line: 0, scope: !10893)
!10899 = !DILocation(line: 415, column: 3, scope: !10893)
!10900 = !DILocation(line: 0, scope: !10703, inlinedAt: !10901)
!10901 = distinct !DILocation(line: 415, column: 3, scope: !10893)
!10902 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10901)
!10903 = !DILocation(line: 0, scope: !10711, inlinedAt: !10904)
!10904 = distinct !DILocation(line: 415, column: 3, scope: !10893)
!10905 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10904)
!10906 = !DILocation(line: 0, scope: !10703, inlinedAt: !10907)
!10907 = distinct !DILocation(line: 415, column: 3, scope: !10893)
!10908 = !DILocation(line: 0, scope: !10711, inlinedAt: !10909)
!10909 = distinct !DILocation(line: 415, column: 3, scope: !10893)
!10910 = !DILocation(line: 417, column: 1, scope: !10893)
!10911 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10758, file: !10758, line: 484, type: !10884, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10912)
!10912 = !{!10913, !10914, !10915}
!10913 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10911, file: !10758, line: 484, type: !1475)
!10914 = !DILocalVariable(name: "Pin", arg: 2, scope: !10911, file: !10758, line: 484, type: !113)
!10915 = !DILocalVariable(name: "Pull", arg: 3, scope: !10911, file: !10758, line: 484, type: !113)
!10916 = !DILocation(line: 0, scope: !10911)
!10917 = !DILocation(line: 486, column: 3, scope: !10911)
!10918 = !DILocation(line: 0, scope: !10703, inlinedAt: !10919)
!10919 = distinct !DILocation(line: 486, column: 3, scope: !10911)
!10920 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10919)
!10921 = !DILocation(line: 0, scope: !10711, inlinedAt: !10922)
!10922 = distinct !DILocation(line: 486, column: 3, scope: !10911)
!10923 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10922)
!10924 = !DILocation(line: 0, scope: !10703, inlinedAt: !10925)
!10925 = distinct !DILocation(line: 486, column: 3, scope: !10911)
!10926 = !DILocation(line: 0, scope: !10711, inlinedAt: !10927)
!10927 = distinct !DILocation(line: 486, column: 3, scope: !10911)
!10928 = !DILocation(line: 487, column: 1, scope: !10911)
!10929 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10758, file: !10758, line: 556, type: !10884, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10930)
!10930 = !{!10931, !10932, !10933}
!10931 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10929, file: !10758, line: 556, type: !1475)
!10932 = !DILocalVariable(name: "Pin", arg: 2, scope: !10929, file: !10758, line: 556, type: !113)
!10933 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10929, file: !10758, line: 556, type: !113)
!10934 = !DILocation(line: 0, scope: !10929)
!10935 = !DILocation(line: 558, column: 3, scope: !10929)
!10936 = !DILocation(line: 0, scope: !10703, inlinedAt: !10937)
!10937 = distinct !DILocation(line: 558, column: 3, scope: !10929)
!10938 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10937)
!10939 = !DILocation(line: 0, scope: !10711, inlinedAt: !10940)
!10940 = distinct !DILocation(line: 558, column: 3, scope: !10929)
!10941 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10940)
!10942 = !DILocation(line: 0, scope: !10703, inlinedAt: !10943)
!10943 = distinct !DILocation(line: 558, column: 3, scope: !10929)
!10944 = !DILocation(line: 0, scope: !10711, inlinedAt: !10945)
!10945 = distinct !DILocation(line: 558, column: 3, scope: !10929)
!10946 = !DILocation(line: 560, column: 1, scope: !10929)
!10947 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10758, file: !10758, line: 633, type: !10884, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10948)
!10948 = !{!10949, !10950, !10951}
!10949 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10947, file: !10758, line: 633, type: !1475)
!10950 = !DILocalVariable(name: "Pin", arg: 2, scope: !10947, file: !10758, line: 633, type: !113)
!10951 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10947, file: !10758, line: 633, type: !113)
!10952 = !DILocation(line: 0, scope: !10947)
!10953 = !DILocation(line: 635, column: 3, scope: !10947)
!10954 = !DILocation(line: 0, scope: !10703, inlinedAt: !10955)
!10955 = distinct !DILocation(line: 635, column: 3, scope: !10947)
!10956 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10955)
!10957 = !DILocation(line: 0, scope: !10711, inlinedAt: !10958)
!10958 = distinct !DILocation(line: 635, column: 3, scope: !10947)
!10959 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10958)
!10960 = !DILocation(line: 0, scope: !10703, inlinedAt: !10961)
!10961 = distinct !DILocation(line: 635, column: 3, scope: !10947)
!10962 = !DILocation(line: 0, scope: !10711, inlinedAt: !10963)
!10963 = distinct !DILocation(line: 635, column: 3, scope: !10947)
!10964 = !DILocation(line: 637, column: 1, scope: !10947)
!10965 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10758, file: !10758, line: 273, type: !10884, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10966)
!10966 = !{!10967, !10968, !10969}
!10967 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10965, file: !10758, line: 273, type: !1475)
!10968 = !DILocalVariable(name: "Pin", arg: 2, scope: !10965, file: !10758, line: 273, type: !113)
!10969 = !DILocalVariable(name: "Mode", arg: 3, scope: !10965, file: !10758, line: 273, type: !113)
!10970 = !DILocation(line: 0, scope: !10965)
!10971 = !DILocation(line: 275, column: 3, scope: !10965)
!10972 = !DILocation(line: 0, scope: !10703, inlinedAt: !10973)
!10973 = distinct !DILocation(line: 275, column: 3, scope: !10965)
!10974 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10973)
!10975 = !DILocation(line: 0, scope: !10711, inlinedAt: !10976)
!10976 = distinct !DILocation(line: 275, column: 3, scope: !10965)
!10977 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10976)
!10978 = !DILocation(line: 0, scope: !10703, inlinedAt: !10979)
!10979 = distinct !DILocation(line: 275, column: 3, scope: !10965)
!10980 = !DILocation(line: 0, scope: !10711, inlinedAt: !10981)
!10981 = distinct !DILocation(line: 275, column: 3, scope: !10965)
!10982 = !DILocation(line: 276, column: 1, scope: !10965)
!10983 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1544, file: !1544, line: 698, type: !1557, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !10984)
!10984 = !{!10985, !10986, !10987}
!10985 = !DILocalVariable(name: "dev", arg: 1, scope: !10983, file: !1544, line: 698, type: !1402)
!10986 = !DILocalVariable(name: "data", scope: !10983, file: !1544, line: 700, type: !10427)
!10987 = !DILocalVariable(name: "ret", scope: !10983, file: !1544, line: 701, type: !108)
!10988 = !DILocation(line: 0, scope: !10983)
!10989 = !DILocation(line: 700, column: 38, scope: !10983)
!10990 = !DILocation(line: 703, column: 8, scope: !10983)
!10991 = !DILocation(line: 703, column: 12, scope: !10983)
!10992 = !DILocation(line: 705, column: 7, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10983, file: !1544, line: 705, column: 6)
!10994 = !DILocation(line: 705, column: 6, scope: !10983)
!10995 = !DILocation(line: 722, column: 8, scope: !10983)
!10996 = !DILocation(line: 723, column: 10, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10983, file: !1544, line: 723, column: 6)
!10998 = !DILocation(line: 723, column: 6, scope: !10983)
!10999 = !DILocation(line: 731, column: 1, scope: !10983)
!11000 = distinct !DISubprogram(name: "device_is_ready", scope: !10207, file: !10207, line: 47, type: !11001, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11003)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{!422, !1402}
!11003 = !{!11004}
!11004 = !DILocalVariable(name: "dev", arg: 1, scope: !11000, file: !10207, line: 47, type: !1402)
!11005 = !DILocation(line: 0, scope: !11000)
!11006 = !DILocation(line: 55, column: 2, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11000, file: !10207, line: 55, column: 2)
!11008 = !{i64 2154961282}
!11009 = !DILocation(line: 56, column: 9, scope: !11000)
!11010 = !DILocation(line: 56, column: 2, scope: !11000)
!11011 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1544, file: !1544, line: 270, type: !11012, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11014)
!11012 = !DISubroutineType(types: !11013)
!11013 = !{!108, !1402, !422}
!11014 = !{!11015, !11016, !11017, !11018, !11019}
!11015 = !DILocalVariable(name: "dev", arg: 1, scope: !11011, file: !1544, line: 270, type: !1402)
!11016 = !DILocalVariable(name: "on", arg: 2, scope: !11011, file: !1544, line: 270, type: !422)
!11017 = !DILocalVariable(name: "cfg", scope: !11011, file: !1544, line: 272, type: !10360)
!11018 = !DILocalVariable(name: "ret", scope: !11011, file: !1544, line: 273, type: !108)
!11019 = !DILocalVariable(name: "clk", scope: !11011, file: !1544, line: 278, type: !10650)
!11020 = !DILocation(line: 0, scope: !11011)
!11021 = !DILocation(line: 272, column: 45, scope: !11011)
!11022 = !DILocation(line: 282, column: 38, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !1544, line: 280, column: 10)
!11024 = distinct !DILexicalBlock(scope: !11011, file: !1544, line: 280, column: 6)
!11025 = !DILocation(line: 282, column: 6, scope: !11023)
!11026 = !DILocation(line: 281, column: 9, scope: !11023)
!11027 = !DILocation(line: 293, column: 1, scope: !11011)
!11028 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11001, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11029)
!11029 = !{!11030}
!11030 = !DILocalVariable(name: "dev", arg: 1, scope: !11028, file: !411, line: 730, type: !1402)
!11031 = !DILocation(line: 0, scope: !11028)
!11032 = !DILocation(line: 732, column: 9, scope: !11028)
!11033 = !DILocation(line: 732, column: 2, scope: !11028)
!11034 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1544, file: !1544, line: 496, type: !11035, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11037)
!11035 = !DISubroutineType(types: !11036)
!11036 = !{!108, !1402, !108, !108, !108}
!11037 = !{!11038, !11039, !11040, !11041, !11042, !11043}
!11038 = !DILocalVariable(name: "dev", arg: 1, scope: !11034, file: !1544, line: 496, type: !1402)
!11039 = !DILocalVariable(name: "pin", arg: 2, scope: !11034, file: !1544, line: 496, type: !108)
!11040 = !DILocalVariable(name: "conf", arg: 3, scope: !11034, file: !1544, line: 496, type: !108)
!11041 = !DILocalVariable(name: "func", arg: 4, scope: !11034, file: !1544, line: 496, type: !108)
!11042 = !DILocalVariable(name: "ret", scope: !11034, file: !1544, line: 498, type: !108)
!11043 = !DILocalVariable(name: "gpio_out", scope: !11044, file: !1544, line: 508, type: !113)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !1544, line: 507, column: 27)
!11045 = distinct !DILexicalBlock(scope: !11034, file: !1544, line: 507, column: 6)
!11046 = !DILocation(line: 0, scope: !11034)
!11047 = !DILocation(line: 505, column: 2, scope: !11034)
!11048 = !DILocation(line: 507, column: 11, scope: !11045)
!11049 = !DILocation(line: 507, column: 6, scope: !11034)
!11050 = !DILocation(line: 508, column: 28, scope: !11044)
!11051 = !DILocation(line: 0, scope: !11044)
!11052 = !DILocation(line: 510, column: 16, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11044, file: !1544, line: 510, column: 7)
!11054 = !DILocation(line: 0, scope: !11053)
!11055 = !DILocation(line: 510, column: 7, scope: !11044)
!11056 = !DILocation(line: 511, column: 4, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11053, file: !1544, line: 510, column: 32)
!11058 = !DILocation(line: 512, column: 3, scope: !11057)
!11059 = !DILocation(line: 513, column: 4, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11061, file: !1544, line: 512, column: 39)
!11061 = distinct !DILexicalBlock(scope: !11053, file: !1544, line: 512, column: 14)
!11062 = !DILocation(line: 514, column: 3, scope: !11060)
!11063 = !DILocation(line: 518, column: 1, scope: !11034)
!11064 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1820, file: !1820, line: 526, type: !1723, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11065)
!11065 = !{!11066, !11067, !11068}
!11066 = !DILocalVariable(name: "dev", arg: 1, scope: !11064, file: !1820, line: 526, type: !1725)
!11067 = !DILocalVariable(name: "c", arg: 2, scope: !11064, file: !1820, line: 526, type: !1334)
!11068 = !DILocalVariable(name: "config", scope: !11064, file: !1820, line: 528, type: !11069)
!11069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!11070 = !DILocation(line: 0, scope: !11064)
!11071 = !DILocation(line: 528, column: 48, scope: !11064)
!11072 = !DILocation(line: 531, column: 40, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11064, file: !1820, line: 531, column: 6)
!11074 = !DILocation(line: 531, column: 6, scope: !11073)
!11075 = !DILocation(line: 531, column: 6, scope: !11064)
!11076 = !DILocation(line: 532, column: 34, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !1820, line: 531, column: 48)
!11078 = !DILocation(line: 532, column: 3, scope: !11077)
!11079 = !DILocation(line: 533, column: 2, scope: !11077)
!11080 = !DILocation(line: 539, column: 42, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11064, file: !1820, line: 539, column: 6)
!11082 = !DILocation(line: 539, column: 7, scope: !11081)
!11083 = !DILocation(line: 539, column: 6, scope: !11064)
!11084 = !DILocation(line: 543, column: 52, scope: !11064)
!11085 = !DILocation(line: 543, column: 22, scope: !11064)
!11086 = !DILocation(line: 543, column: 5, scope: !11064)
!11087 = !DILocation(line: 545, column: 2, scope: !11064)
!11088 = !DILocation(line: 546, column: 1, scope: !11064)
!11089 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1820, file: !1820, line: 548, type: !1742, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11090)
!11090 = !{!11091, !11092, !11093, !11094}
!11091 = !DILocalVariable(name: "dev", arg: 1, scope: !11089, file: !1820, line: 548, type: !1725)
!11092 = !DILocalVariable(name: "c", arg: 2, scope: !11089, file: !1820, line: 549, type: !165)
!11093 = !DILocalVariable(name: "config", scope: !11089, file: !1820, line: 551, type: !11069)
!11094 = !DILocalVariable(name: "key", scope: !11089, file: !1820, line: 555, type: !32)
!11095 = !DILocation(line: 0, scope: !11089)
!11096 = !DILocation(line: 551, column: 48, scope: !11089)
!11097 = !DILocation(line: 562, column: 2, scope: !11089)
!11098 = !DILocation(line: 563, column: 41, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11100, file: !1820, line: 563, column: 7)
!11100 = distinct !DILexicalBlock(scope: !11089, file: !1820, line: 562, column: 12)
!11101 = !DILocation(line: 563, column: 7, scope: !11099)
!11102 = !DILocation(line: 563, column: 7, scope: !11100)
!11103 = !DILocation(line: 55, column: 2, scope: !11104, inlinedAt: !11108)
!11104 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11105)
!11105 = !{!11106, !11107}
!11106 = !DILocalVariable(name: "key", scope: !11104, file: !4080, line: 44, type: !32)
!11107 = !DILocalVariable(name: "tmp", scope: !11104, file: !4080, line: 53, type: !32)
!11108 = distinct !DILocation(line: 564, column: 10, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11099, file: !1820, line: 563, column: 49)
!11110 = !{i64 2305777}
!11111 = !DILocation(line: 0, scope: !11104, inlinedAt: !11108)
!11112 = !DILocation(line: 565, column: 42, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11109, file: !1820, line: 565, column: 8)
!11114 = !DILocation(line: 565, column: 8, scope: !11113)
!11115 = !DILocation(line: 565, column: 8, scope: !11109)
!11116 = !DILocalVariable(name: "key", arg: 1, scope: !11117, file: !4080, line: 84, type: !32)
!11117 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11118)
!11118 = !{!11116}
!11119 = !DILocation(line: 0, scope: !11117, inlinedAt: !11120)
!11120 = distinct !DILocation(line: 568, column: 4, scope: !11109)
!11121 = !DILocation(line: 95, column: 2, scope: !11117, inlinedAt: !11120)
!11122 = !{i64 2306594}
!11123 = !DILocation(line: 569, column: 3, scope: !11109)
!11124 = distinct !{!11124, !11097, !11125}
!11125 = !DILocation(line: 570, column: 2, scope: !11089)
!11126 = !DILocation(line: 592, column: 33, scope: !11089)
!11127 = !DILocation(line: 592, column: 2, scope: !11089)
!11128 = !DILocation(line: 0, scope: !11117, inlinedAt: !11129)
!11129 = distinct !DILocation(line: 593, column: 2, scope: !11089)
!11130 = !DILocation(line: 95, column: 2, scope: !11117, inlinedAt: !11129)
!11131 = !DILocation(line: 594, column: 1, scope: !11089)
!11132 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1820, file: !1820, line: 596, type: !1746, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11133)
!11133 = !{!11134, !11135, !11136}
!11134 = !DILocalVariable(name: "dev", arg: 1, scope: !11132, file: !1820, line: 596, type: !1725)
!11135 = !DILocalVariable(name: "config", scope: !11132, file: !1820, line: 598, type: !11069)
!11136 = !DILocalVariable(name: "err", scope: !11132, file: !1820, line: 599, type: !113)
!11137 = !DILocation(line: 0, scope: !11132)
!11138 = !DILocation(line: 598, column: 48, scope: !11132)
!11139 = !DILocation(line: 606, column: 40, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11132, file: !1820, line: 606, column: 6)
!11141 = !DILocation(line: 606, column: 6, scope: !11140)
!11142 = !DILocation(line: 606, column: 6, scope: !11132)
!11143 = !DILocation(line: 610, column: 39, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11132, file: !1820, line: 610, column: 6)
!11145 = !DILocation(line: 610, column: 6, scope: !11144)
!11146 = !DILocation(line: 610, column: 6, scope: !11132)
!11147 = !DILocation(line: 614, column: 39, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11132, file: !1820, line: 614, column: 6)
!11149 = !DILocation(line: 614, column: 6, scope: !11148)
!11150 = !DILocation(line: 614, column: 6, scope: !11132)
!11151 = !DILocation(line: 619, column: 40, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11132, file: !1820, line: 619, column: 6)
!11153 = !DILocation(line: 619, column: 6, scope: !11152)
!11154 = !DILocation(line: 619, column: 6, scope: !11132)
!11155 = !DILocation(line: 623, column: 10, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11132, file: !1820, line: 623, column: 6)
!11157 = !DILocation(line: 623, column: 6, scope: !11132)
!11158 = !DILocation(line: 624, column: 34, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11156, file: !1820, line: 623, column: 24)
!11160 = !DILocation(line: 624, column: 3, scope: !11159)
!11161 = !DILocation(line: 625, column: 2, scope: !11159)
!11162 = !DILocation(line: 632, column: 10, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11132, file: !1820, line: 632, column: 6)
!11164 = !DILocation(line: 632, column: 6, scope: !11132)
!11165 = !DILocation(line: 633, column: 34, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11163, file: !1820, line: 632, column: 32)
!11167 = !DILocation(line: 633, column: 3, scope: !11166)
!11168 = !DILocation(line: 634, column: 2, scope: !11166)
!11169 = !DILocation(line: 636, column: 10, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11132, file: !1820, line: 636, column: 6)
!11171 = !DILocation(line: 636, column: 6, scope: !11132)
!11172 = !DILocation(line: 637, column: 33, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11170, file: !1820, line: 636, column: 31)
!11174 = !DILocation(line: 637, column: 3, scope: !11173)
!11175 = !DILocation(line: 638, column: 2, scope: !11173)
!11176 = !DILocation(line: 640, column: 10, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11132, file: !1820, line: 640, column: 6)
!11178 = !DILocation(line: 640, column: 6, scope: !11132)
!11179 = !DILocation(line: 641, column: 33, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11177, file: !1820, line: 640, column: 32)
!11181 = !DILocation(line: 641, column: 3, scope: !11180)
!11182 = !DILocation(line: 642, column: 2, scope: !11180)
!11183 = !DILocation(line: 646, column: 32, scope: !11132)
!11184 = !DILocation(line: 646, column: 2, scope: !11132)
!11185 = !DILocation(line: 648, column: 2, scope: !11132)
!11186 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1820, file: !1820, line: 419, type: !1750, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11187)
!11187 = !{!11188, !11189, !11190, !11191, !11193, !11194, !11195, !11196}
!11188 = !DILocalVariable(name: "dev", arg: 1, scope: !11186, file: !1820, line: 419, type: !1725)
!11189 = !DILocalVariable(name: "cfg", arg: 2, scope: !11186, file: !1820, line: 420, type: !1752)
!11190 = !DILocalVariable(name: "config", scope: !11186, file: !1820, line: 422, type: !11069)
!11191 = !DILocalVariable(name: "data", scope: !11186, file: !1820, line: 423, type: !11192)
!11192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!11193 = !DILocalVariable(name: "parity", scope: !11186, file: !1820, line: 424, type: !7332)
!11194 = !DILocalVariable(name: "stopbits", scope: !11186, file: !1820, line: 425, type: !7332)
!11195 = !DILocalVariable(name: "databits", scope: !11186, file: !1820, line: 426, type: !7332)
!11196 = !DILocalVariable(name: "flowctrl", scope: !11186, file: !1820, line: 428, type: !7332)
!11197 = !DILocation(line: 0, scope: !11186)
!11198 = !DILocation(line: 422, column: 48, scope: !11186)
!11199 = !DILocation(line: 423, column: 38, scope: !11186)
!11200 = !DILocation(line: 424, column: 56, scope: !11186)
!11201 = !DILocation(line: 424, column: 51, scope: !11186)
!11202 = !DILocation(line: 424, column: 26, scope: !11186)
!11203 = !DILocation(line: 425, column: 60, scope: !11186)
!11204 = !DILocation(line: 425, column: 55, scope: !11186)
!11205 = !DILocation(line: 425, column: 28, scope: !11186)
!11206 = !DILocation(line: 426, column: 60, scope: !11186)
!11207 = !DILocation(line: 426, column: 55, scope: !11186)
!11208 = !DILocation(line: 426, column: 28, scope: !11186)
!11209 = !DILocation(line: 428, column: 58, scope: !11186)
!11210 = !DILocation(line: 428, column: 53, scope: !11186)
!11211 = !DILocation(line: 428, column: 28, scope: !11186)
!11212 = !DILocation(line: 431, column: 44, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 431, column: 6)
!11214 = !DILocation(line: 438, column: 22, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 437, column: 6)
!11216 = !DILocation(line: 437, column: 6, scope: !11186)
!11217 = !DILocation(line: 448, column: 6, scope: !11186)
!11218 = !DILocation(line: 465, column: 47, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 465, column: 6)
!11220 = !DILocation(line: 475, column: 21, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 475, column: 6)
!11222 = !DILocation(line: 475, column: 6, scope: !11186)
!11223 = !DILocation(line: 476, column: 8, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11225, file: !1820, line: 476, column: 7)
!11225 = distinct !DILexicalBlock(scope: !11221, file: !1820, line: 475, column: 49)
!11226 = !DILocation(line: 477, column: 34, scope: !11224)
!11227 = !DILocation(line: 476, column: 7, scope: !11225)
!11228 = !DILocation(line: 482, column: 27, scope: !11186)
!11229 = !DILocation(line: 482, column: 2, scope: !11186)
!11230 = !DILocation(line: 484, column: 16, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 484, column: 6)
!11232 = !DILocation(line: 484, column: 13, scope: !11231)
!11233 = !DILocation(line: 484, column: 6, scope: !11186)
!11234 = !DILocation(line: 485, column: 3, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11231, file: !1820, line: 484, column: 44)
!11236 = !DILocation(line: 486, column: 2, scope: !11235)
!11237 = !DILocation(line: 488, column: 18, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 488, column: 6)
!11239 = !DILocation(line: 488, column: 15, scope: !11238)
!11240 = !DILocation(line: 488, column: 6, scope: !11186)
!11241 = !DILocation(line: 489, column: 3, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11238, file: !1820, line: 488, column: 48)
!11243 = !DILocation(line: 490, column: 2, scope: !11242)
!11244 = !DILocation(line: 492, column: 18, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 492, column: 6)
!11246 = !DILocation(line: 492, column: 15, scope: !11245)
!11247 = !DILocation(line: 492, column: 6, scope: !11186)
!11248 = !DILocation(line: 493, column: 3, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11245, file: !1820, line: 492, column: 48)
!11250 = !DILocation(line: 494, column: 2, scope: !11249)
!11251 = !DILocation(line: 496, column: 18, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 496, column: 6)
!11253 = !DILocation(line: 496, column: 15, scope: !11252)
!11254 = !DILocation(line: 496, column: 6, scope: !11186)
!11255 = !DILocation(line: 497, column: 3, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11252, file: !1820, line: 496, column: 46)
!11257 = !DILocation(line: 498, column: 2, scope: !11256)
!11258 = !DILocation(line: 500, column: 11, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11186, file: !1820, line: 500, column: 6)
!11260 = !DILocation(line: 500, column: 29, scope: !11259)
!11261 = !DILocation(line: 500, column: 20, scope: !11259)
!11262 = !DILocation(line: 500, column: 6, scope: !11186)
!11263 = !DILocation(line: 501, column: 3, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11259, file: !1820, line: 500, column: 40)
!11265 = !DILocation(line: 502, column: 26, scope: !11264)
!11266 = !DILocation(line: 502, column: 19, scope: !11264)
!11267 = !DILocation(line: 503, column: 2, scope: !11264)
!11268 = !DILocation(line: 505, column: 26, scope: !11186)
!11269 = !DILocation(line: 505, column: 2, scope: !11186)
!11270 = !DILocation(line: 506, column: 2, scope: !11186)
!11271 = !DILocation(line: 507, column: 1, scope: !11186)
!11272 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1820, file: !1820, line: 509, type: !1763, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11273)
!11273 = !{!11274, !11275, !11276}
!11274 = !DILocalVariable(name: "dev", arg: 1, scope: !11272, file: !1820, line: 509, type: !1725)
!11275 = !DILocalVariable(name: "cfg", arg: 2, scope: !11272, file: !1820, line: 510, type: !1765)
!11276 = !DILocalVariable(name: "data", scope: !11272, file: !1820, line: 512, type: !11192)
!11277 = !DILocation(line: 0, scope: !11272)
!11278 = !DILocation(line: 512, column: 38, scope: !11272)
!11279 = !DILocation(line: 514, column: 24, scope: !11272)
!11280 = !DILocation(line: 514, column: 7, scope: !11272)
!11281 = !DILocation(line: 514, column: 16, scope: !11272)
!11282 = !DILocation(line: 515, column: 41, scope: !11272)
!11283 = !{i32 0, i32 1537}
!11284 = !DILocation(line: 515, column: 16, scope: !11272)
!11285 = !DILocation(line: 515, column: 7, scope: !11272)
!11286 = !DILocation(line: 515, column: 14, scope: !11272)
!11287 = !DILocation(line: 517, column: 3, scope: !11272)
!11288 = !{i32 0, i32 12289}
!11289 = !DILocation(line: 516, column: 19, scope: !11272)
!11290 = !DILocation(line: 516, column: 7, scope: !11272)
!11291 = !DILocation(line: 516, column: 17, scope: !11272)
!11292 = !DILocation(line: 519, column: 3, scope: !11272)
!11293 = !DILocation(line: 519, column: 33, scope: !11272)
!11294 = !DILocation(line: 518, column: 19, scope: !11272)
!11295 = !DILocation(line: 518, column: 7, scope: !11272)
!11296 = !DILocation(line: 518, column: 17, scope: !11272)
!11297 = !DILocation(line: 521, column: 3, scope: !11272)
!11298 = !{i32 0, i32 769}
!11299 = !DILocation(line: 520, column: 19, scope: !11272)
!11300 = !DILocation(line: 520, column: 7, scope: !11272)
!11301 = !DILocation(line: 520, column: 17, scope: !11272)
!11302 = !DILocation(line: 522, column: 2, scope: !11272)
!11303 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1820, file: !1820, line: 205, type: !11304, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11306)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{!113, !1725}
!11306 = !{!11307, !11308}
!11307 = !DILocalVariable(name: "dev", arg: 1, scope: !11303, file: !1820, line: 205, type: !1725)
!11308 = !DILocalVariable(name: "config", scope: !11303, file: !1820, line: 207, type: !11069)
!11309 = !DILocation(line: 0, scope: !11303)
!11310 = !DILocation(line: 207, column: 48, scope: !11303)
!11311 = !DILocation(line: 209, column: 36, scope: !11303)
!11312 = !DILocation(line: 209, column: 9, scope: !11303)
!11313 = !DILocation(line: 209, column: 2, scope: !11303)
!11314 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1820, file: !1820, line: 270, type: !11315, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11317)
!11315 = !DISubroutineType(types: !11316)
!11316 = !{!1691, !113}
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "parity", arg: 1, scope: !11314, file: !1820, line: 270, type: !113)
!11319 = !DILocation(line: 0, scope: !11314)
!11320 = !DILocation(line: 272, column: 2, scope: !11314)
!11321 = !DILocation(line: 281, column: 1, scope: !11314)
!11322 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1820, file: !1820, line: 220, type: !11304, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11323)
!11323 = !{!11324, !11325}
!11324 = !DILocalVariable(name: "dev", arg: 1, scope: !11322, file: !1820, line: 220, type: !1725)
!11325 = !DILocalVariable(name: "config", scope: !11322, file: !1820, line: 222, type: !11069)
!11326 = !DILocation(line: 0, scope: !11322)
!11327 = !DILocation(line: 222, column: 48, scope: !11322)
!11328 = !DILocation(line: 224, column: 44, scope: !11322)
!11329 = !DILocation(line: 224, column: 9, scope: !11322)
!11330 = !DILocation(line: 224, column: 2, scope: !11322)
!11331 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1820, file: !1820, line: 304, type: !11332, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11334)
!11332 = !DISubroutineType(types: !11333)
!11333 = !{!1705, !113}
!11334 = !{!11335}
!11335 = !DILocalVariable(name: "sb", arg: 1, scope: !11331, file: !1820, line: 304, type: !113)
!11336 = !DILocation(line: 0, scope: !11331)
!11337 = !DILocation(line: 306, column: 2, scope: !11331)
!11338 = !DILocation(line: 0, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11331, file: !1820, line: 306, column: 14)
!11340 = !DILocation(line: 323, column: 1, scope: !11331)
!11341 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1820, file: !1820, line: 235, type: !11304, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11342)
!11342 = !{!11343, !11344}
!11343 = !DILocalVariable(name: "dev", arg: 1, scope: !11341, file: !1820, line: 235, type: !1725)
!11344 = !DILocalVariable(name: "config", scope: !11341, file: !1820, line: 237, type: !11069)
!11345 = !DILocation(line: 0, scope: !11341)
!11346 = !DILocation(line: 237, column: 48, scope: !11341)
!11347 = !DILocation(line: 239, column: 39, scope: !11341)
!11348 = !DILocation(line: 239, column: 9, scope: !11341)
!11349 = !DILocation(line: 239, column: 2, scope: !11341)
!11350 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1820, file: !1820, line: 355, type: !11351, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11353)
!11351 = !DISubroutineType(types: !11352)
!11352 = !{!1698, !113, !113}
!11353 = !{!11354, !11355}
!11354 = !DILocalVariable(name: "db", arg: 1, scope: !11350, file: !1820, line: 355, type: !113)
!11355 = !DILocalVariable(name: "p", arg: 2, scope: !11350, file: !1820, line: 356, type: !113)
!11356 = !DILocation(line: 0, scope: !11350)
!11357 = !DILocation(line: 358, column: 2, scope: !11350)
!11358 = !DILocation(line: 384, column: 1, scope: !11350)
!11359 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1820, file: !1820, line: 250, type: !11304, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11360)
!11360 = !{!11361, !11362}
!11361 = !DILocalVariable(name: "dev", arg: 1, scope: !11359, file: !1820, line: 250, type: !1725)
!11362 = !DILocalVariable(name: "config", scope: !11359, file: !1820, line: 252, type: !11069)
!11363 = !DILocation(line: 0, scope: !11359)
!11364 = !DILocation(line: 252, column: 48, scope: !11359)
!11365 = !DILocation(line: 254, column: 40, scope: !11359)
!11366 = !DILocation(line: 254, column: 9, scope: !11359)
!11367 = !DILocation(line: 254, column: 2, scope: !11359)
!11368 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1820, file: !1820, line: 409, type: !11369, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11371)
!11369 = !DISubroutineType(types: !11370)
!11370 = !{!1711, !113}
!11371 = !{!11372}
!11372 = !DILocalVariable(name: "fc", arg: 1, scope: !11368, file: !1820, line: 409, type: !113)
!11373 = !DILocation(line: 0, scope: !11368)
!11374 = !DILocation(line: 411, column: 9, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11368, file: !1820, line: 411, column: 6)
!11376 = !DILocation(line: 416, column: 1, scope: !11368)
!11377 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11378, file: !11378, line: 967, type: !11379, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11381)
!11378 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11379 = !DISubroutineType(types: !11380)
!11380 = !{!113, !1766}
!11381 = !{!11382}
!11382 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11377, file: !11378, line: 967, type: !1766)
!11383 = !DILocation(line: 0, scope: !11377)
!11384 = !DILocation(line: 969, column: 21, scope: !11377)
!11385 = !DILocation(line: 969, column: 3, scope: !11377)
!11386 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11378, file: !11378, line: 601, type: !11379, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11387)
!11387 = !{!11388}
!11388 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11386, file: !11378, line: 601, type: !1766)
!11389 = !DILocation(line: 0, scope: !11386)
!11390 = !DILocation(line: 603, column: 21, scope: !11386)
!11391 = !DILocation(line: 603, column: 3, scope: !11386)
!11392 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11378, file: !11378, line: 820, type: !11379, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11393)
!11393 = !{!11394}
!11394 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11392, file: !11378, line: 820, type: !1766)
!11395 = !DILocation(line: 0, scope: !11392)
!11396 = !DILocation(line: 822, column: 21, scope: !11392)
!11397 = !DILocation(line: 822, column: 3, scope: !11392)
!11398 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11378, file: !11378, line: 547, type: !11379, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11399)
!11399 = !{!11400}
!11400 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11398, file: !11378, line: 547, type: !1766)
!11401 = !DILocation(line: 0, scope: !11398)
!11402 = !DILocation(line: 549, column: 21, scope: !11398)
!11403 = !DILocation(line: 549, column: 3, scope: !11398)
!11404 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1820, file: !1820, line: 257, type: !11405, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11407)
!11405 = !DISubroutineType(types: !11406)
!11406 = !{!113, !1691}
!11407 = !{!11408}
!11408 = !DILocalVariable(name: "parity", arg: 1, scope: !11404, file: !1820, line: 257, type: !1691)
!11409 = !DILocation(line: 0, scope: !11404)
!11410 = !DILocation(line: 259, column: 2, scope: !11404)
!11411 = !DILocation(line: 268, column: 1, scope: !11404)
!11412 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1820, file: !1820, line: 283, type: !11413, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11415)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!113, !1705}
!11415 = !{!11416}
!11416 = !DILocalVariable(name: "sb", arg: 1, scope: !11412, file: !1820, line: 283, type: !1705)
!11417 = !DILocation(line: 0, scope: !11412)
!11418 = !DILocation(line: 285, column: 2, scope: !11412)
!11419 = !DILocation(line: 0, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11412, file: !1820, line: 285, column: 14)
!11421 = !DILocation(line: 302, column: 1, scope: !11412)
!11422 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1820, file: !1820, line: 325, type: !11423, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11425)
!11423 = !DISubroutineType(types: !11424)
!11424 = !{!113, !1698, !1691}
!11425 = !{!11426, !11427}
!11426 = !DILocalVariable(name: "db", arg: 1, scope: !11422, file: !1820, line: 325, type: !1698)
!11427 = !DILocalVariable(name: "p", arg: 2, scope: !11422, file: !1820, line: 326, type: !1691)
!11428 = !DILocation(line: 0, scope: !11422)
!11429 = !DILocation(line: 328, column: 2, scope: !11422)
!11430 = !DILocation(line: 353, column: 1, scope: !11422)
!11431 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1820, file: !1820, line: 393, type: !11432, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11434)
!11432 = !DISubroutineType(types: !11433)
!11433 = !{!113, !1711}
!11434 = !{!11435}
!11435 = !DILocalVariable(name: "fc", arg: 1, scope: !11431, file: !1820, line: 393, type: !1711)
!11436 = !DILocation(line: 0, scope: !11431)
!11437 = !DILocation(line: 395, column: 9, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11431, file: !1820, line: 395, column: 6)
!11439 = !DILocation(line: 400, column: 1, scope: !11431)
!11440 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11378, file: !11378, line: 424, type: !11441, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11443)
!11441 = !DISubroutineType(types: !11442)
!11442 = !{null, !1766}
!11443 = !{!11444}
!11444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11440, file: !11378, line: 424, type: !1766)
!11445 = !DILocation(line: 0, scope: !11440)
!11446 = !DILocation(line: 426, column: 3, scope: !11440)
!11447 = !DILocation(line: 427, column: 1, scope: !11440)
!11448 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1820, file: !1820, line: 197, type: !11449, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11451)
!11449 = !DISubroutineType(types: !11450)
!11450 = !{null, !1725, !113}
!11451 = !{!11452, !11453, !11454}
!11452 = !DILocalVariable(name: "dev", arg: 1, scope: !11448, file: !1820, line: 197, type: !1725)
!11453 = !DILocalVariable(name: "parity", arg: 2, scope: !11448, file: !1820, line: 198, type: !113)
!11454 = !DILocalVariable(name: "config", scope: !11448, file: !1820, line: 200, type: !11069)
!11455 = !DILocation(line: 0, scope: !11448)
!11456 = !DILocation(line: 200, column: 48, scope: !11448)
!11457 = !DILocation(line: 202, column: 29, scope: !11448)
!11458 = !DILocation(line: 202, column: 2, scope: !11448)
!11459 = !DILocation(line: 203, column: 1, scope: !11448)
!11460 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1820, file: !1820, line: 212, type: !11449, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11461)
!11461 = !{!11462, !11463, !11464}
!11462 = !DILocalVariable(name: "dev", arg: 1, scope: !11460, file: !1820, line: 212, type: !1725)
!11463 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11460, file: !1820, line: 213, type: !113)
!11464 = !DILocalVariable(name: "config", scope: !11460, file: !1820, line: 215, type: !11069)
!11465 = !DILocation(line: 0, scope: !11460)
!11466 = !DILocation(line: 215, column: 48, scope: !11460)
!11467 = !DILocation(line: 217, column: 37, scope: !11460)
!11468 = !DILocation(line: 217, column: 2, scope: !11460)
!11469 = !DILocation(line: 218, column: 1, scope: !11460)
!11470 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1820, file: !1820, line: 227, type: !11449, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11471)
!11471 = !{!11472, !11473, !11474}
!11472 = !DILocalVariable(name: "dev", arg: 1, scope: !11470, file: !1820, line: 227, type: !1725)
!11473 = !DILocalVariable(name: "databits", arg: 2, scope: !11470, file: !1820, line: 228, type: !113)
!11474 = !DILocalVariable(name: "config", scope: !11470, file: !1820, line: 230, type: !11069)
!11475 = !DILocation(line: 0, scope: !11470)
!11476 = !DILocation(line: 230, column: 48, scope: !11470)
!11477 = !DILocation(line: 232, column: 32, scope: !11470)
!11478 = !DILocation(line: 232, column: 2, scope: !11470)
!11479 = !DILocation(line: 233, column: 1, scope: !11470)
!11480 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1820, file: !1820, line: 242, type: !11449, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11481)
!11481 = !{!11482, !11483, !11484}
!11482 = !DILocalVariable(name: "dev", arg: 1, scope: !11480, file: !1820, line: 242, type: !1725)
!11483 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11480, file: !1820, line: 243, type: !113)
!11484 = !DILocalVariable(name: "config", scope: !11480, file: !1820, line: 245, type: !11069)
!11485 = !DILocation(line: 0, scope: !11480)
!11486 = !DILocation(line: 245, column: 48, scope: !11480)
!11487 = !DILocation(line: 247, column: 33, scope: !11480)
!11488 = !DILocation(line: 247, column: 2, scope: !11480)
!11489 = !DILocation(line: 248, column: 1, scope: !11480)
!11490 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1820, file: !1820, line: 107, type: !11449, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11491)
!11491 = !{!11492, !11493, !11494, !11495, !11496}
!11492 = !DILocalVariable(name: "dev", arg: 1, scope: !11490, file: !1820, line: 107, type: !1725)
!11493 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11490, file: !1820, line: 107, type: !113)
!11494 = !DILocalVariable(name: "config", scope: !11490, file: !1820, line: 109, type: !11069)
!11495 = !DILocalVariable(name: "data", scope: !11490, file: !1820, line: 110, type: !11192)
!11496 = !DILocalVariable(name: "clock_rate", scope: !11490, file: !1820, line: 112, type: !113)
!11497 = !DILocation(line: 0, scope: !11490)
!11498 = !DILocation(line: 109, column: 48, scope: !11490)
!11499 = !DILocation(line: 110, column: 38, scope: !11490)
!11500 = !DILocation(line: 112, column: 2, scope: !11490)
!11501 = !DILocation(line: 123, column: 36, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !1820, line: 123, column: 7)
!11503 = distinct !DILexicalBlock(scope: !11504, file: !1820, line: 122, column: 9)
!11504 = distinct !DILexicalBlock(scope: !11490, file: !1820, line: 115, column: 6)
!11505 = !DILocation(line: 124, column: 42, scope: !11502)
!11506 = !DILocation(line: 123, column: 7, scope: !11502)
!11507 = !DILocation(line: 125, column: 22, scope: !11502)
!11508 = !DILocation(line: 123, column: 7, scope: !11503)
!11509 = !DILocation(line: 126, column: 4, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !1820, line: 126, column: 4)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !1820, line: 126, column: 4)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !1820, line: 126, column: 4)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !1820, line: 126, column: 4)
!11514 = distinct !DILexicalBlock(scope: !11502, file: !1820, line: 125, column: 27)
!11515 = !DILocation(line: 127, column: 4, scope: !11514)
!11516 = !DILocation(line: 176, column: 36, scope: !11490)
!11517 = !DILocation(line: 176, column: 3, scope: !11490)
!11518 = !DILocation(line: 179, column: 32, scope: !11490)
!11519 = !DILocation(line: 180, column: 10, scope: !11490)
!11520 = !DILocation(line: 179, column: 3, scope: !11490)
!11521 = !DILocation(line: 195, column: 1, scope: !11490)
!11522 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11378, file: !11378, line: 410, type: !11441, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11523)
!11523 = !{!11524}
!11524 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11522, file: !11378, line: 410, type: !1766)
!11525 = !DILocation(line: 0, scope: !11522)
!11526 = !DILocation(line: 412, column: 3, scope: !11522)
!11527 = !DILocation(line: 413, column: 1, scope: !11522)
!11528 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1180, file: !1180, line: 216, type: !1799, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11529)
!11529 = !{!11530, !11531, !11532, !11533}
!11530 = !DILocalVariable(name: "dev", arg: 1, scope: !11528, file: !1180, line: 216, type: !1725)
!11531 = !DILocalVariable(name: "sys", arg: 2, scope: !11528, file: !1180, line: 217, type: !1273)
!11532 = !DILocalVariable(name: "rate", arg: 3, scope: !11528, file: !1180, line: 218, type: !1229)
!11533 = !DILocalVariable(name: "api", scope: !11528, file: !1180, line: 220, type: !1777)
!11534 = !DILocation(line: 0, scope: !11528)
!11535 = !DILocation(line: 221, column: 49, scope: !11528)
!11536 = !DILocation(line: 223, column: 11, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11528, file: !1180, line: 223, column: 6)
!11538 = !DILocation(line: 223, column: 20, scope: !11537)
!11539 = !DILocation(line: 223, column: 6, scope: !11528)
!11540 = !DILocation(line: 227, column: 9, scope: !11528)
!11541 = !DILocation(line: 227, column: 2, scope: !11528)
!11542 = !DILocation(line: 228, column: 1, scope: !11528)
!11543 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3692, file: !3692, line: 175, type: !3693, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11544)
!11544 = !{!11545}
!11545 = !DILocalVariable(name: "level", arg: 1, scope: !11543, file: !3692, line: 175, type: !108)
!11546 = !DILocation(line: 0, scope: !11543)
!11547 = !DILocation(line: 177, column: 2, scope: !11543)
!11548 = !DILocation(line: 189, column: 1, scope: !11543)
!11549 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11378, file: !11378, line: 615, type: !11550, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11552)
!11550 = !DISubroutineType(types: !11551)
!11551 = !{null, !1766, !113}
!11552 = !{!11553, !11554}
!11553 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11549, file: !11378, line: 615, type: !1766)
!11554 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11549, file: !11378, line: 615, type: !113)
!11555 = !DILocation(line: 0, scope: !11549)
!11556 = !DILocation(line: 617, column: 3, scope: !11549)
!11557 = !DILocation(line: 618, column: 1, scope: !11549)
!11558 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11378, file: !11378, line: 1020, type: !11559, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11561)
!11559 = !DISubroutineType(types: !11560)
!11560 = !{null, !1766, !113, !113, !113}
!11561 = !{!11562, !11563, !11564, !11565}
!11562 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11558, file: !11378, line: 1020, type: !1766)
!11563 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11558, file: !11378, line: 1020, type: !113)
!11564 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11558, file: !11378, line: 1020, type: !113)
!11565 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11558, file: !11378, line: 1021, type: !113)
!11566 = !DILocation(line: 0, scope: !11558)
!11567 = !DILocation(line: 1029, column: 30, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !11378, line: 1028, column: 3)
!11569 = distinct !DILexicalBlock(scope: !11558, file: !11378, line: 1023, column: 7)
!11570 = !DILocation(line: 1029, column: 19, scope: !11568)
!11571 = !DILocation(line: 1029, column: 13, scope: !11568)
!11572 = !DILocation(line: 1029, column: 17, scope: !11568)
!11573 = !DILocation(line: 1031, column: 1, scope: !11558)
!11574 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11378, file: !11378, line: 949, type: !11550, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11575)
!11575 = !{!11576, !11577}
!11576 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11574, file: !11378, line: 949, type: !1766)
!11577 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11574, file: !11378, line: 949, type: !113)
!11578 = !DILocation(line: 0, scope: !11574)
!11579 = !DILocation(line: 951, column: 3, scope: !11574)
!11580 = !DILocation(line: 952, column: 1, scope: !11574)
!11581 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11378, file: !11378, line: 588, type: !11550, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11582)
!11582 = !{!11583, !11584}
!11583 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11581, file: !11378, line: 588, type: !1766)
!11584 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11581, file: !11378, line: 588, type: !113)
!11585 = !DILocation(line: 0, scope: !11581)
!11586 = !DILocation(line: 590, column: 3, scope: !11581)
!11587 = !DILocation(line: 591, column: 1, scope: !11581)
!11588 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11378, file: !11378, line: 805, type: !11550, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11589)
!11589 = !{!11590, !11591}
!11590 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11588, file: !11378, line: 805, type: !1766)
!11591 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11588, file: !11378, line: 805, type: !113)
!11592 = !DILocation(line: 0, scope: !11588)
!11593 = !DILocation(line: 807, column: 3, scope: !11588)
!11594 = !DILocation(line: 808, column: 1, scope: !11588)
!11595 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11378, file: !11378, line: 532, type: !11550, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11596)
!11596 = !{!11597, !11598}
!11597 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11595, file: !11378, line: 532, type: !1766)
!11598 = !DILocalVariable(name: "Parity", arg: 2, scope: !11595, file: !11378, line: 532, type: !113)
!11599 = !DILocation(line: 0, scope: !11595)
!11600 = !DILocation(line: 534, column: 3, scope: !11595)
!11601 = !DILocation(line: 535, column: 1, scope: !11595)
!11602 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11378, file: !11378, line: 1770, type: !11379, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11603)
!11603 = !{!11604}
!11604 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11602, file: !11378, line: 1770, type: !1766)
!11605 = !DILocation(line: 0, scope: !11602)
!11606 = !DILocation(line: 1772, column: 11, scope: !11602)
!11607 = !DILocation(line: 1772, column: 46, scope: !11602)
!11608 = !DILocation(line: 1772, column: 3, scope: !11602)
!11609 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11378, file: !11378, line: 1737, type: !11379, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11610)
!11610 = !{!11611}
!11611 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11609, file: !11378, line: 1737, type: !1766)
!11612 = !DILocation(line: 0, scope: !11609)
!11613 = !DILocation(line: 1739, column: 11, scope: !11609)
!11614 = !DILocation(line: 1739, column: 3, scope: !11609)
!11615 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11378, file: !11378, line: 1748, type: !11379, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11616)
!11616 = !{!11617}
!11617 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11615, file: !11378, line: 1748, type: !1766)
!11618 = !DILocation(line: 0, scope: !11615)
!11619 = !DILocation(line: 1750, column: 11, scope: !11615)
!11620 = !DILocation(line: 1750, column: 45, scope: !11615)
!11621 = !DILocation(line: 1750, column: 3, scope: !11615)
!11622 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11378, file: !11378, line: 1827, type: !11379, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11623)
!11623 = !{!11624}
!11624 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11622, file: !11378, line: 1827, type: !1766)
!11625 = !DILocation(line: 0, scope: !11622)
!11626 = !DILocation(line: 1829, column: 11, scope: !11622)
!11627 = !DILocation(line: 1829, column: 46, scope: !11622)
!11628 = !DILocation(line: 1829, column: 3, scope: !11622)
!11629 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11378, file: !11378, line: 1992, type: !11441, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11630)
!11630 = !{!11631}
!11631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11629, file: !11378, line: 1992, type: !1766)
!11632 = !DILocation(line: 0, scope: !11629)
!11633 = !DILocation(line: 1994, column: 3, scope: !11629)
!11634 = !DILocation(line: 1995, column: 1, scope: !11629)
!11635 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11378, file: !11378, line: 1934, type: !11441, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11636)
!11636 = !{!11637, !11638}
!11637 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11635, file: !11378, line: 1934, type: !1766)
!11638 = !DILocalVariable(name: "tmpreg", scope: !11635, file: !11378, line: 1936, type: !570)
!11639 = !DILocation(line: 0, scope: !11635)
!11640 = !DILocation(line: 1936, column: 3, scope: !11635)
!11641 = !DILocation(line: 1936, column: 17, scope: !11635)
!11642 = !DILocation(line: 1937, column: 20, scope: !11635)
!11643 = !DILocation(line: 1937, column: 10, scope: !11635)
!11644 = !DILocation(line: 1938, column: 10, scope: !11635)
!11645 = !DILocation(line: 1939, column: 20, scope: !11635)
!11646 = !DILocation(line: 1939, column: 10, scope: !11635)
!11647 = !DILocation(line: 1940, column: 10, scope: !11635)
!11648 = !DILocation(line: 1941, column: 1, scope: !11635)
!11649 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11378, file: !11378, line: 1877, type: !11441, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11650)
!11650 = !{!11651, !11652}
!11651 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11649, file: !11378, line: 1877, type: !1766)
!11652 = !DILocalVariable(name: "tmpreg", scope: !11649, file: !11378, line: 1879, type: !570)
!11653 = !DILocation(line: 0, scope: !11649)
!11654 = !DILocation(line: 1879, column: 3, scope: !11649)
!11655 = !DILocation(line: 1879, column: 17, scope: !11649)
!11656 = !DILocation(line: 1880, column: 20, scope: !11649)
!11657 = !DILocation(line: 1880, column: 10, scope: !11649)
!11658 = !DILocation(line: 1881, column: 10, scope: !11649)
!11659 = !DILocation(line: 1882, column: 20, scope: !11649)
!11660 = !DILocation(line: 1882, column: 10, scope: !11649)
!11661 = !DILocation(line: 1883, column: 10, scope: !11649)
!11662 = !DILocation(line: 1884, column: 1, scope: !11649)
!11663 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11378, file: !11378, line: 1896, type: !11441, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11664)
!11664 = !{!11665, !11666}
!11665 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11663, file: !11378, line: 1896, type: !1766)
!11666 = !DILocalVariable(name: "tmpreg", scope: !11663, file: !11378, line: 1898, type: !570)
!11667 = !DILocation(line: 0, scope: !11663)
!11668 = !DILocation(line: 1898, column: 3, scope: !11663)
!11669 = !DILocation(line: 1898, column: 17, scope: !11663)
!11670 = !DILocation(line: 1899, column: 20, scope: !11663)
!11671 = !DILocation(line: 1899, column: 10, scope: !11663)
!11672 = !DILocation(line: 1900, column: 10, scope: !11663)
!11673 = !DILocation(line: 1901, column: 20, scope: !11663)
!11674 = !DILocation(line: 1901, column: 10, scope: !11663)
!11675 = !DILocation(line: 1902, column: 10, scope: !11663)
!11676 = !DILocation(line: 1903, column: 1, scope: !11663)
!11677 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11378, file: !11378, line: 1915, type: !11441, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11678)
!11678 = !{!11679, !11680}
!11679 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11677, file: !11378, line: 1915, type: !1766)
!11680 = !DILocalVariable(name: "tmpreg", scope: !11677, file: !11378, line: 1917, type: !570)
!11681 = !DILocation(line: 0, scope: !11677)
!11682 = !DILocation(line: 1917, column: 3, scope: !11677)
!11683 = !DILocation(line: 1917, column: 17, scope: !11677)
!11684 = !DILocation(line: 1918, column: 20, scope: !11677)
!11685 = !DILocation(line: 1918, column: 10, scope: !11677)
!11686 = !DILocation(line: 1919, column: 10, scope: !11677)
!11687 = !DILocation(line: 1920, column: 20, scope: !11677)
!11688 = !DILocation(line: 1920, column: 10, scope: !11677)
!11689 = !DILocation(line: 1921, column: 10, scope: !11677)
!11690 = !DILocation(line: 1922, column: 1, scope: !11677)
!11691 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11378, file: !11378, line: 1814, type: !11379, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11692)
!11692 = !{!11693}
!11693 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11691, file: !11378, line: 1814, type: !1766)
!11694 = !DILocation(line: 0, scope: !11691)
!11695 = !DILocation(line: 1816, column: 11, scope: !11691)
!11696 = !DILocation(line: 1816, column: 46, scope: !11691)
!11697 = !DILocation(line: 1816, column: 3, scope: !11691)
!11698 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11378, file: !11378, line: 2426, type: !11699, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11701)
!11699 = !DISubroutineType(types: !11700)
!11700 = !{null, !1766, !164}
!11701 = !{!11702, !11703}
!11702 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11698, file: !11378, line: 2426, type: !1766)
!11703 = !DILocalVariable(name: "Value", arg: 2, scope: !11698, file: !11378, line: 2426, type: !164)
!11704 = !DILocation(line: 0, scope: !11698)
!11705 = !DILocation(line: 2428, column: 16, scope: !11698)
!11706 = !DILocation(line: 2428, column: 11, scope: !11698)
!11707 = !DILocation(line: 2428, column: 14, scope: !11698)
!11708 = !DILocation(line: 2429, column: 1, scope: !11698)
!11709 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11378, file: !11378, line: 1792, type: !11379, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11710)
!11710 = !{!11711}
!11711 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11709, file: !11378, line: 1792, type: !1766)
!11712 = !DILocation(line: 0, scope: !11709)
!11713 = !DILocation(line: 1794, column: 11, scope: !11709)
!11714 = !DILocation(line: 1794, column: 47, scope: !11709)
!11715 = !DILocation(line: 1794, column: 3, scope: !11709)
!11716 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11378, file: !11378, line: 2403, type: !11717, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11719)
!11717 = !DISubroutineType(types: !11718)
!11718 = !{!164, !1766}
!11719 = !{!11720}
!11720 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11716, file: !11378, line: 2403, type: !1766)
!11721 = !DILocation(line: 0, scope: !11716)
!11722 = !DILocation(line: 2405, column: 20, scope: !11716)
!11723 = !DILocation(line: 2405, column: 10, scope: !11716)
!11724 = !DILocation(line: 2405, column: 3, scope: !11716)
!11725 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1820, file: !1820, line: 1583, type: !1746, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11726)
!11726 = !{!11727, !11728, !11729, !11730, !11731, !11732}
!11727 = !DILocalVariable(name: "dev", arg: 1, scope: !11725, file: !1820, line: 1583, type: !1725)
!11728 = !DILocalVariable(name: "config", scope: !11725, file: !1820, line: 1585, type: !11069)
!11729 = !DILocalVariable(name: "data", scope: !11725, file: !1820, line: 1586, type: !11192)
!11730 = !DILocalVariable(name: "ll_parity", scope: !11725, file: !1820, line: 1587, type: !113)
!11731 = !DILocalVariable(name: "ll_datawidth", scope: !11725, file: !1820, line: 1588, type: !113)
!11732 = !DILocalVariable(name: "err", scope: !11725, file: !1820, line: 1589, type: !108)
!11733 = !DILocation(line: 0, scope: !11725)
!11734 = !DILocation(line: 1585, column: 48, scope: !11725)
!11735 = !DILocation(line: 1586, column: 38, scope: !11725)
!11736 = !DILocation(line: 1591, column: 2, scope: !11725)
!11737 = !DILocation(line: 1593, column: 29, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11725, file: !1820, line: 1593, column: 6)
!11739 = !DILocation(line: 1593, column: 7, scope: !11738)
!11740 = !DILocation(line: 1593, column: 6, scope: !11725)
!11741 = !DILocation(line: 1594, column: 3, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !1820, line: 1594, column: 3)
!11743 = distinct !DILexicalBlock(scope: !11744, file: !1820, line: 1594, column: 3)
!11744 = distinct !DILexicalBlock(scope: !11745, file: !1820, line: 1594, column: 3)
!11745 = distinct !DILexicalBlock(scope: !11746, file: !1820, line: 1594, column: 3)
!11746 = distinct !DILexicalBlock(scope: !11738, file: !1820, line: 1593, column: 37)
!11747 = !DILocation(line: 1595, column: 3, scope: !11746)
!11748 = !DILocation(line: 1599, column: 31, scope: !11725)
!11749 = !DILocation(line: 1599, column: 71, scope: !11725)
!11750 = !DILocation(line: 1599, column: 8, scope: !11725)
!11751 = !DILocation(line: 1600, column: 10, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11725, file: !1820, line: 1600, column: 6)
!11753 = !DILocation(line: 1600, column: 6, scope: !11725)
!11754 = !DILocation(line: 1601, column: 3, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11756, file: !1820, line: 1601, column: 3)
!11756 = distinct !DILexicalBlock(scope: !11757, file: !1820, line: 1601, column: 3)
!11757 = distinct !DILexicalBlock(scope: !11758, file: !1820, line: 1601, column: 3)
!11758 = distinct !DILexicalBlock(scope: !11759, file: !1820, line: 1601, column: 3)
!11759 = distinct !DILexicalBlock(scope: !11752, file: !1820, line: 1600, column: 16)
!11760 = !DILocation(line: 1602, column: 3, scope: !11759)
!11761 = !DILocation(line: 1616, column: 36, scope: !11725)
!11762 = !DILocation(line: 1616, column: 8, scope: !11725)
!11763 = !DILocation(line: 1617, column: 10, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11725, file: !1820, line: 1617, column: 6)
!11765 = !DILocation(line: 1617, column: 6, scope: !11725)
!11766 = !DILocation(line: 1621, column: 27, scope: !11725)
!11767 = !DILocation(line: 1621, column: 2, scope: !11725)
!11768 = !DILocation(line: 1624, column: 40, scope: !11725)
!11769 = !DILocation(line: 1624, column: 2, scope: !11725)
!11770 = !DILocation(line: 1630, column: 14, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11725, file: !1820, line: 1630, column: 6)
!11772 = !DILocation(line: 1630, column: 6, scope: !11725)
!11773 = !DILocation(line: 1640, column: 4, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !1820, line: 1640, column: 4)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !1820, line: 1640, column: 4)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !1820, line: 1640, column: 4)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !1820, line: 1640, column: 4)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !1820, line: 1639, column: 28)
!11779 = distinct !DILexicalBlock(scope: !11780, file: !1820, line: 1639, column: 7)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !1820, line: 1638, column: 9)
!11781 = distinct !DILexicalBlock(scope: !11771, file: !1820, line: 1634, column: 13)
!11782 = !DILocation(line: 0, scope: !11771)
!11783 = !DILocation(line: 1649, column: 35, scope: !11725)
!11784 = !DILocation(line: 1649, column: 2, scope: !11725)
!11785 = !DILocation(line: 1654, column: 14, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11725, file: !1820, line: 1654, column: 6)
!11787 = !DILocation(line: 1654, column: 6, scope: !11725)
!11788 = !DILocation(line: 1655, column: 3, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11786, file: !1820, line: 1654, column: 31)
!11790 = !DILocation(line: 1656, column: 2, scope: !11789)
!11791 = !DILocation(line: 1659, column: 37, scope: !11725)
!11792 = !DILocation(line: 1659, column: 2, scope: !11725)
!11793 = !DILocation(line: 1662, column: 14, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11725, file: !1820, line: 1662, column: 6)
!11795 = !DILocation(line: 1662, column: 6, scope: !11725)
!11796 = !DILocation(line: 1663, column: 37, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11794, file: !1820, line: 1662, column: 27)
!11798 = !DILocation(line: 1663, column: 3, scope: !11797)
!11799 = !DILocation(line: 1664, column: 2, scope: !11797)
!11800 = !DILocation(line: 1684, column: 26, scope: !11725)
!11801 = !DILocation(line: 1684, column: 2, scope: !11725)
!11802 = !DILocation(line: 1722, column: 2, scope: !11725)
!11803 = !DILocation(line: 1724, column: 1, scope: !11725)
!11804 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1820, file: !1820, line: 651, type: !11805, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11807)
!11805 = !DISubroutineType(types: !11806)
!11806 = !{null, !1725}
!11807 = !{!11808, !11809, !11810}
!11808 = !DILocalVariable(name: "dev", arg: 1, scope: !11804, file: !1820, line: 651, type: !1725)
!11809 = !DILocalVariable(name: "data", scope: !11804, file: !1820, line: 653, type: !11192)
!11810 = !DILocalVariable(name: "clk", scope: !11804, file: !1820, line: 654, type: !11811)
!11811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1725)
!11812 = !DILocation(line: 0, scope: !11804)
!11813 = !DILocation(line: 653, column: 38, scope: !11804)
!11814 = !DILocation(line: 656, column: 8, scope: !11804)
!11815 = !DILocation(line: 656, column: 14, scope: !11804)
!11816 = !DILocation(line: 657, column: 1, scope: !11804)
!11817 = distinct !DISubprogram(name: "device_is_ready", scope: !10207, file: !10207, line: 47, type: !11818, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11820)
!11818 = !DISubroutineType(types: !11819)
!11819 = !{!422, !1725}
!11820 = !{!11821}
!11821 = !DILocalVariable(name: "dev", arg: 1, scope: !11817, file: !10207, line: 47, type: !1725)
!11822 = !DILocation(line: 0, scope: !11817)
!11823 = !DILocation(line: 55, column: 2, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11817, file: !10207, line: 55, column: 2)
!11825 = !{i64 2155052445}
!11826 = !DILocation(line: 56, column: 9, scope: !11817)
!11827 = !DILocation(line: 56, column: 2, scope: !11817)
!11828 = distinct !DISubprogram(name: "clock_control_on", scope: !1180, file: !1180, line: 123, type: !1784, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11829)
!11829 = !{!11830, !11831, !11832}
!11830 = !DILocalVariable(name: "dev", arg: 1, scope: !11828, file: !1180, line: 123, type: !1725)
!11831 = !DILocalVariable(name: "sys", arg: 2, scope: !11828, file: !1180, line: 124, type: !1273)
!11832 = !DILocalVariable(name: "api", scope: !11828, file: !1180, line: 126, type: !1777)
!11833 = !DILocation(line: 0, scope: !11828)
!11834 = !DILocation(line: 127, column: 49, scope: !11828)
!11835 = !DILocation(line: 129, column: 14, scope: !11828)
!11836 = !DILocation(line: 129, column: 9, scope: !11828)
!11837 = !DILocation(line: 129, column: 2, scope: !11828)
!11838 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1858, file: !1858, line: 342, type: !11839, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11841)
!11839 = !DISubroutineType(types: !11840)
!11840 = !{!108, !1855, !164}
!11841 = !{!11842, !11843, !11844, !11845}
!11842 = !DILocalVariable(name: "config", arg: 1, scope: !11838, file: !1858, line: 342, type: !1855)
!11843 = !DILocalVariable(name: "id", arg: 2, scope: !11838, file: !1858, line: 343, type: !164)
!11844 = !DILocalVariable(name: "ret", scope: !11838, file: !1858, line: 345, type: !108)
!11845 = !DILocalVariable(name: "state", scope: !11838, file: !1858, line: 346, type: !1861)
!11846 = !DILocation(line: 0, scope: !11838)
!11847 = !DILocation(line: 346, column: 2, scope: !11838)
!11848 = !DILocation(line: 348, column: 8, scope: !11838)
!11849 = !DILocation(line: 349, column: 10, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11838, file: !1858, line: 349, column: 6)
!11851 = !DILocation(line: 349, column: 6, scope: !11838)
!11852 = !DILocation(line: 353, column: 44, scope: !11838)
!11853 = !DILocation(line: 353, column: 9, scope: !11838)
!11854 = !DILocation(line: 353, column: 2, scope: !11838)
!11855 = !DILocation(line: 354, column: 1, scope: !11838)
!11856 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11378, file: !11378, line: 497, type: !11550, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11857)
!11857 = !{!11858, !11859, !11860}
!11858 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11856, file: !11378, line: 497, type: !1766)
!11859 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11856, file: !11378, line: 497, type: !113)
!11860 = !DILocalVariable(name: "val", scope: !11861, file: !11378, line: 499, type: !113)
!11861 = distinct !DILexicalBlock(scope: !11856, file: !11378, line: 499, column: 3)
!11862 = !DILocation(line: 0, scope: !11856)
!11863 = !DILocation(line: 499, column: 3, scope: !11861)
!11864 = !DILocalVariable(name: "addr", arg: 1, scope: !11865, file: !7064, line: 476, type: !1816)
!11865 = distinct !DISubprogram(name: "__LDREXW", scope: !7064, file: !7064, line: 476, type: !11866, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11868)
!11866 = !DISubroutineType(types: !11867)
!11867 = !{!113, !1816}
!11868 = !{!11864, !11869}
!11869 = !DILocalVariable(name: "result", scope: !11865, file: !7064, line: 478, type: !113)
!11870 = !DILocation(line: 0, scope: !11865, inlinedAt: !11871)
!11871 = distinct !DILocation(line: 499, column: 3, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11861, file: !11378, line: 499, column: 3)
!11873 = !DILocation(line: 480, column: 4, scope: !11865, inlinedAt: !11871)
!11874 = !{i64 3544971}
!11875 = !DILocation(line: 499, column: 3, scope: !11872)
!11876 = !DILocation(line: 0, scope: !11861)
!11877 = !DILocalVariable(name: "value", arg: 1, scope: !11878, file: !7064, line: 527, type: !113)
!11878 = distinct !DISubprogram(name: "__STREXW", scope: !7064, file: !7064, line: 527, type: !11879, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11881)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{!113, !113, !1816}
!11881 = !{!11877, !11882, !11883}
!11882 = !DILocalVariable(name: "addr", arg: 2, scope: !11878, file: !7064, line: 527, type: !1816)
!11883 = !DILocalVariable(name: "result", scope: !11878, file: !7064, line: 529, type: !113)
!11884 = !DILocation(line: 0, scope: !11878, inlinedAt: !11885)
!11885 = distinct !DILocation(line: 499, column: 3, scope: !11861)
!11886 = !DILocation(line: 531, column: 4, scope: !11878, inlinedAt: !11885)
!11887 = !{i64 3546407}
!11888 = distinct !{!11888, !11863, !11863}
!11889 = !DILocation(line: 500, column: 1, scope: !11856)
!11890 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11378, file: !11378, line: 850, type: !11559, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11891)
!11891 = !{!11892, !11893, !11894, !11895}
!11892 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11890, file: !11378, line: 850, type: !1766)
!11893 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11890, file: !11378, line: 850, type: !113)
!11894 = !DILocalVariable(name: "Parity", arg: 3, scope: !11890, file: !11378, line: 850, type: !113)
!11895 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11890, file: !11378, line: 851, type: !113)
!11896 = !DILocation(line: 0, scope: !11890)
!11897 = !DILocation(line: 853, column: 3, scope: !11890)
!11898 = !DILocation(line: 854, column: 3, scope: !11890)
!11899 = !DILocation(line: 855, column: 1, scope: !11890)
!11900 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11378, file: !11378, line: 1337, type: !11441, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11901)
!11901 = !{!11902}
!11902 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11900, file: !11378, line: 1337, type: !1766)
!11903 = !DILocation(line: 0, scope: !11900)
!11904 = !DILocation(line: 1339, column: 3, scope: !11900)
!11905 = !DILocation(line: 1340, column: 1, scope: !11900)
!11906 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1858, file: !1858, line: 316, type: !11907, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11909)
!11907 = !DISubroutineType(types: !11908)
!11908 = !{!108, !1855, !1861}
!11909 = !{!11910, !11911, !11912}
!11910 = !DILocalVariable(name: "config", arg: 1, scope: !11906, file: !1858, line: 317, type: !1855)
!11911 = !DILocalVariable(name: "state", arg: 2, scope: !11906, file: !1858, line: 318, type: !1861)
!11912 = !DILocalVariable(name: "reg", scope: !11906, file: !1858, line: 320, type: !22)
!11913 = !DILocation(line: 0, scope: !11906)
!11914 = !DILocation(line: 329, column: 39, scope: !11906)
!11915 = !DILocation(line: 329, column: 52, scope: !11906)
!11916 = !DILocation(line: 329, column: 9, scope: !11906)
!11917 = !DILocation(line: 329, column: 2, scope: !11906)
!11918 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11818, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1681, retainedNodes: !11919)
!11919 = !{!11920}
!11920 = !DILocalVariable(name: "dev", arg: 1, scope: !11918, file: !411, line: 730, type: !1725)
!11921 = !DILocation(line: 0, scope: !11918)
!11922 = !DILocation(line: 732, column: 9, scope: !11918)
!11923 = !DILocation(line: 732, column: 2, scope: !11918)
!11924 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1979, file: !1979, line: 270, type: !1985, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !11925)
!11925 = !{!11926}
!11926 = !DILocalVariable(name: "dev", arg: 1, scope: !11924, file: !1979, line: 270, type: !1987)
!11927 = !DILocation(line: 0, scope: !11924)
!11928 = !DILocation(line: 274, column: 2, scope: !11924)
!11929 = !DILocation(line: 275, column: 12, scope: !11924)
!11930 = !DILocation(line: 276, column: 15, scope: !11924)
!11931 = !DILocation(line: 277, column: 16, scope: !11924)
!11932 = !DILocation(line: 278, column: 15, scope: !11924)
!11933 = !DILocation(line: 279, column: 16, scope: !11924)
!11934 = !DILocation(line: 282, column: 2, scope: !11924)
!11935 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !788, file: !788, line: 1814, type: !7098, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !11936)
!11936 = !{!11937, !11938}
!11937 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11935, file: !788, line: 1814, type: !1168)
!11938 = !DILocalVariable(name: "priority", arg: 2, scope: !11935, file: !788, line: 1814, type: !113)
!11939 = !DILocation(line: 0, scope: !11935)
!11940 = !DILocation(line: 1822, column: 46, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !788, line: 1821, column: 3)
!11942 = distinct !DILexicalBlock(scope: !11935, file: !788, line: 1816, column: 7)
!11943 = !DILocation(line: 1824, column: 1, scope: !11935)
!11944 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1979, file: !1979, line: 118, type: !7001, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !11945)
!11945 = !{!11946, !11947}
!11946 = !DILocalVariable(name: "arg", arg: 1, scope: !11944, file: !1979, line: 118, type: !104)
!11947 = !DILocalVariable(name: "dticks", scope: !11944, file: !1979, line: 121, type: !113)
!11948 = !DILocation(line: 0, scope: !11944)
!11949 = !DILocation(line: 124, column: 2, scope: !11944)
!11950 = !DILocation(line: 129, column: 17, scope: !11944)
!11951 = !DILocation(line: 129, column: 14, scope: !11944)
!11952 = !DILocation(line: 130, column: 15, scope: !11944)
!11953 = !DILocation(line: 145, column: 27, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !1979, line: 132, column: 16)
!11955 = distinct !DILexicalBlock(scope: !11944, file: !1979, line: 132, column: 6)
!11956 = !DILocation(line: 145, column: 25, scope: !11954)
!11957 = !DILocation(line: 145, column: 45, scope: !11954)
!11958 = !DILocation(line: 146, column: 30, scope: !11954)
!11959 = !DILocation(line: 146, column: 20, scope: !11954)
!11960 = !DILocation(line: 147, column: 3, scope: !11954)
!11961 = !DILocation(line: 151, column: 2, scope: !11944)
!11962 = !DILocation(line: 152, column: 1, scope: !11944)
!11963 = distinct !DISubprogram(name: "elapsed", scope: !1979, file: !1979, line: 85, type: !7145, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !11964)
!11964 = !{!11965, !11966, !11967}
!11965 = !DILocalVariable(name: "val1", scope: !11963, file: !1979, line: 87, type: !113)
!11966 = !DILocalVariable(name: "ctrl", scope: !11963, file: !1979, line: 88, type: !113)
!11967 = !DILocalVariable(name: "val2", scope: !11963, file: !1979, line: 89, type: !113)
!11968 = !DILocation(line: 87, column: 27, scope: !11963)
!11969 = !DILocation(line: 0, scope: !11963)
!11970 = !DILocation(line: 88, column: 27, scope: !11963)
!11971 = !DILocation(line: 89, column: 27, scope: !11963)
!11972 = !DILocation(line: 105, column: 12, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11963, file: !1979, line: 105, column: 6)
!11974 = !DILocation(line: 106, column: 6, scope: !11973)
!11975 = !DILocation(line: 107, column: 16, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11973, file: !1979, line: 106, column: 24)
!11977 = !DILocation(line: 111, column: 18, scope: !11976)
!11978 = !DILocation(line: 112, column: 2, scope: !11976)
!11979 = !DILocation(line: 114, column: 20, scope: !11963)
!11980 = !DILocation(line: 114, column: 30, scope: !11963)
!11981 = !DILocation(line: 114, column: 28, scope: !11963)
!11982 = !DILocation(line: 114, column: 2, scope: !11963)
!11983 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1979, file: !1979, line: 154, type: !11984, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !11986)
!11984 = !DISubroutineType(types: !11985)
!11985 = !{null, !220, !422}
!11986 = !{!11987, !11988, !11989, !11990, !11991, !11992, !11993, !11998, !11999}
!11987 = !DILocalVariable(name: "ticks", arg: 1, scope: !11983, file: !1979, line: 154, type: !220)
!11988 = !DILocalVariable(name: "idle", arg: 2, scope: !11983, file: !1979, line: 154, type: !422)
!11989 = !DILocalVariable(name: "delay", scope: !11983, file: !1979, line: 169, type: !113)
!11990 = !DILocalVariable(name: "val1", scope: !11983, file: !1979, line: 170, type: !113)
!11991 = !DILocalVariable(name: "val2", scope: !11983, file: !1979, line: 170, type: !113)
!11992 = !DILocalVariable(name: "last_load_", scope: !11983, file: !1979, line: 171, type: !113)
!11993 = !DILocalVariable(name: "key", scope: !11983, file: !1979, line: 176, type: !11994)
!11994 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !11995)
!11995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !11996)
!11996 = !{!11997}
!11997 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11995, file: !436, line: 33, baseType: !108, size: 32)
!11998 = !DILocalVariable(name: "pending", scope: !11983, file: !1979, line: 178, type: !113)
!11999 = !DILocalVariable(name: "unannounced", scope: !11983, file: !1979, line: 185, type: !113)
!12000 = !DILocation(line: 0, scope: !11983)
!12001 = !DILocation(line: 162, column: 49, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11983, file: !1979, line: 162, column: 6)
!12003 = !DILocation(line: 163, column: 17, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !12002, file: !1979, line: 162, column: 78)
!12005 = !DILocation(line: 164, column: 13, scope: !12004)
!12006 = !DILocation(line: 165, column: 3, scope: !12004)
!12007 = !DILocation(line: 171, column: 24, scope: !11983)
!12008 = !DILocation(line: 173, column: 10, scope: !11983)
!12009 = !DILocation(line: 174, column: 10, scope: !11983)
!12010 = !DILocalVariable(name: "l", arg: 1, scope: !12011, file: !436, line: 136, type: !12014)
!12011 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !12012, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !12015)
!12012 = !DISubroutineType(types: !12013)
!12013 = !{!11994, !12014}
!12014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 32)
!12015 = !{!12010, !12016}
!12016 = !DILocalVariable(name: "k", scope: !12011, file: !436, line: 139, type: !11994)
!12017 = !DILocation(line: 0, scope: !12011, inlinedAt: !12018)
!12018 = distinct !DILocation(line: 176, column: 25, scope: !11983)
!12019 = !DILocation(line: 55, column: 2, scope: !12020, inlinedAt: !12024)
!12020 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !12021)
!12021 = !{!12022, !12023}
!12022 = !DILocalVariable(name: "key", scope: !12020, file: !4080, line: 44, type: !32)
!12023 = !DILocalVariable(name: "tmp", scope: !12020, file: !4080, line: 53, type: !32)
!12024 = distinct !DILocation(line: 145, column: 10, scope: !12011, inlinedAt: !12018)
!12025 = !{i64 2239347}
!12026 = !DILocation(line: 0, scope: !12020, inlinedAt: !12024)
!12027 = !DILocation(line: 178, column: 21, scope: !11983)
!12028 = !DILocation(line: 180, column: 18, scope: !11983)
!12029 = !DILocation(line: 182, column: 14, scope: !11983)
!12030 = !DILocation(line: 183, column: 15, scope: !11983)
!12031 = !DILocation(line: 185, column: 39, scope: !11983)
!12032 = !DILocation(line: 185, column: 37, scope: !11983)
!12033 = !DILocation(line: 187, column: 27, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !11983, file: !1979, line: 187, column: 6)
!12035 = !DILocation(line: 187, column: 6, scope: !11983)
!12036 = !DILocation(line: 202, column: 27, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12034, file: !1979, line: 195, column: 9)
!12038 = !DILocation(line: 202, column: 48, scope: !12037)
!12039 = !DILocation(line: 203, column: 9, scope: !12037)
!12040 = !DILocation(line: 204, column: 11, scope: !12037)
!12041 = !DILocation(line: 205, column: 13, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12037, file: !1979, line: 205, column: 7)
!12043 = !DILocation(line: 205, column: 7, scope: !12037)
!12044 = !DILocation(line: 0, scope: !12034)
!12045 = !DILocation(line: 212, column: 18, scope: !11983)
!12046 = !DILocation(line: 214, column: 28, scope: !11983)
!12047 = !DILocation(line: 214, column: 16, scope: !11983)
!12048 = !DILocation(line: 215, column: 15, scope: !11983)
!12049 = !DILocation(line: 227, column: 11, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !11983, file: !1979, line: 227, column: 6)
!12051 = !DILocation(line: 227, column: 6, scope: !11983)
!12052 = !DILocation(line: 228, column: 15, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12050, file: !1979, line: 227, column: 19)
!12054 = !DILocation(line: 228, column: 38, scope: !12053)
!12055 = !DILocation(line: 228, column: 24, scope: !12053)
!12056 = !DILocation(line: 229, column: 2, scope: !12053)
!12057 = !DILocation(line: 230, column: 24, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12050, file: !1979, line: 229, column: 9)
!12059 = !DILocation(line: 230, column: 15, scope: !12058)
!12060 = !DILocation(line: 0, scope: !12050)
!12061 = !DILocalVariable(name: "key", arg: 2, scope: !12062, file: !436, line: 190, type: !11994)
!12062 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !12063, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !12065)
!12063 = !DISubroutineType(types: !12064)
!12064 = !{null, !12014, !11994}
!12065 = !{!12066, !12061}
!12066 = !DILocalVariable(name: "l", arg: 1, scope: !12062, file: !436, line: 189, type: !12014)
!12067 = !DILocation(line: 0, scope: !12062, inlinedAt: !12068)
!12068 = distinct !DILocation(line: 232, column: 2, scope: !11983)
!12069 = !DILocalVariable(name: "key", arg: 1, scope: !12070, file: !4080, line: 84, type: !32)
!12070 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !12071)
!12071 = !{!12069}
!12072 = !DILocation(line: 0, scope: !12070, inlinedAt: !12073)
!12073 = distinct !DILocation(line: 215, column: 2, scope: !12062, inlinedAt: !12068)
!12074 = !DILocation(line: 95, column: 2, scope: !12070, inlinedAt: !12073)
!12075 = !{i64 2240164}
!12076 = !DILocation(line: 234, column: 1, scope: !11983)
!12077 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1979, file: !1979, line: 236, type: !7145, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !12078)
!12078 = !{!12079, !12080}
!12079 = !DILocalVariable(name: "key", scope: !12077, file: !1979, line: 242, type: !11994)
!12080 = !DILocalVariable(name: "cyc", scope: !12077, file: !1979, line: 243, type: !113)
!12081 = !DILocation(line: 0, scope: !12011, inlinedAt: !12082)
!12082 = distinct !DILocation(line: 242, column: 25, scope: !12077)
!12083 = !DILocation(line: 55, column: 2, scope: !12020, inlinedAt: !12084)
!12084 = distinct !DILocation(line: 145, column: 10, scope: !12011, inlinedAt: !12082)
!12085 = !DILocation(line: 0, scope: !12020, inlinedAt: !12084)
!12086 = !DILocation(line: 0, scope: !12077)
!12087 = !DILocation(line: 243, column: 17, scope: !12077)
!12088 = !DILocation(line: 243, column: 29, scope: !12077)
!12089 = !DILocation(line: 243, column: 27, scope: !12077)
!12090 = !DILocation(line: 243, column: 43, scope: !12077)
!12091 = !DILocation(line: 243, column: 41, scope: !12077)
!12092 = !DILocation(line: 0, scope: !12062, inlinedAt: !12093)
!12093 = distinct !DILocation(line: 245, column: 2, scope: !12077)
!12094 = !DILocation(line: 0, scope: !12070, inlinedAt: !12095)
!12095 = distinct !DILocation(line: 215, column: 2, scope: !12062, inlinedAt: !12093)
!12096 = !DILocation(line: 95, column: 2, scope: !12070, inlinedAt: !12095)
!12097 = !DILocation(line: 246, column: 13, scope: !12077)
!12098 = !DILocation(line: 246, column: 2, scope: !12077)
!12099 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1979, file: !1979, line: 249, type: !7145, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !12100)
!12100 = !{!12101, !12102}
!12101 = !DILocalVariable(name: "key", scope: !12099, file: !1979, line: 251, type: !11994)
!12102 = !DILocalVariable(name: "ret", scope: !12099, file: !1979, line: 252, type: !113)
!12103 = !DILocation(line: 0, scope: !12011, inlinedAt: !12104)
!12104 = distinct !DILocation(line: 251, column: 25, scope: !12099)
!12105 = !DILocation(line: 55, column: 2, scope: !12020, inlinedAt: !12106)
!12106 = distinct !DILocation(line: 145, column: 10, scope: !12011, inlinedAt: !12104)
!12107 = !DILocation(line: 0, scope: !12020, inlinedAt: !12106)
!12108 = !DILocation(line: 0, scope: !12099)
!12109 = !DILocation(line: 252, column: 17, scope: !12099)
!12110 = !DILocation(line: 252, column: 29, scope: !12099)
!12111 = !DILocation(line: 252, column: 27, scope: !12099)
!12112 = !DILocation(line: 0, scope: !12062, inlinedAt: !12113)
!12113 = distinct !DILocation(line: 254, column: 2, scope: !12099)
!12114 = !DILocation(line: 0, scope: !12070, inlinedAt: !12115)
!12115 = distinct !DILocation(line: 215, column: 2, scope: !12062, inlinedAt: !12113)
!12116 = !DILocation(line: 95, column: 2, scope: !12070, inlinedAt: !12115)
!12117 = !DILocation(line: 255, column: 2, scope: !12099)
!12118 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1979, file: !1979, line: 258, type: !3406, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !437)
!12119 = !DILocation(line: 260, column: 6, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12118, file: !1979, line: 260, column: 6)
!12121 = !DILocation(line: 260, column: 16, scope: !12120)
!12122 = !DILocation(line: 260, column: 6, scope: !12118)
!12123 = !DILocation(line: 261, column: 17, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12120, file: !1979, line: 260, column: 34)
!12125 = !DILocation(line: 262, column: 2, scope: !12124)
!12126 = !DILocation(line: 263, column: 1, scope: !12118)
!12127 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1979, file: !1979, line: 265, type: !3406, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !437)
!12128 = !DILocation(line: 267, column: 16, scope: !12127)
!12129 = !DILocation(line: 268, column: 1, scope: !12127)
!12130 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12131, file: !12131, line: 9, type: !12132, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !12155)
!12131 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12132 = !DISubroutineType(types: !12133)
!12133 = !{!108, !12134, !164, !12154}
!12134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12135, size: 32)
!12135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12136)
!12136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1858, line: 60, size: 64, elements: !12137)
!12137 = !{!12138, !12153}
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12136, file: !1858, line: 69, baseType: !12139, size: 32)
!12139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12140, size: 32)
!12140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12141)
!12141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1858, line: 50, size: 64, elements: !12142)
!12142 = !{!12143, !12151, !12152}
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12141, file: !1858, line: 52, baseType: !12144, size: 32)
!12144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12145, size: 32)
!12145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12146)
!12146 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1869, line: 37, baseType: !12147)
!12147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1869, line: 32, size: 64, elements: !12148)
!12148 = !{!12149, !12150}
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12147, file: !1869, line: 34, baseType: !113, size: 32)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12147, file: !1869, line: 36, baseType: !113, size: 32, offset: 32)
!12151 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12141, file: !1858, line: 54, baseType: !164, size: 8, offset: 32)
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12141, file: !1858, line: 56, baseType: !164, size: 8, offset: 40)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12136, file: !1858, line: 71, baseType: !164, size: 8, offset: 32)
!12154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12139, size: 32)
!12155 = !{!12156, !12157, !12158}
!12156 = !DILocalVariable(name: "config", arg: 1, scope: !12130, file: !12131, line: 9, type: !12134)
!12157 = !DILocalVariable(name: "id", arg: 2, scope: !12130, file: !12131, line: 9, type: !164)
!12158 = !DILocalVariable(name: "state", arg: 3, scope: !12130, file: !12131, line: 10, type: !12154)
!12159 = !DILocation(line: 0, scope: !12130)
!12160 = !DILocation(line: 12, column: 20, scope: !12130)
!12161 = !DILocation(line: 13, column: 27, scope: !12130)
!12162 = !DILocation(line: 13, column: 42, scope: !12130)
!12163 = !DILocation(line: 13, column: 19, scope: !12130)
!12164 = !DILocation(line: 13, column: 16, scope: !12130)
!12165 = !DILocation(line: 13, column: 2, scope: !12130)
!12166 = distinct !{!12166, !12165, !12167}
!12167 = !DILocation(line: 19, column: 2, scope: !12130)
!12168 = !DILocation(line: 14, column: 23, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !12131, line: 14, column: 7)
!12170 = distinct !DILexicalBlock(scope: !12130, file: !12131, line: 13, column: 54)
!12171 = !DILocation(line: 14, column: 10, scope: !12169)
!12172 = !DILocation(line: 18, column: 11, scope: !12170)
!12173 = !DILocation(line: 14, column: 7, scope: !12170)
!12174 = !DILocation(line: 22, column: 1, scope: !12130)
!12175 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2096, file: !2096, line: 193, type: !12176, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2014, retainedNodes: !12185)
!12176 = !DISubroutineType(types: !12177)
!12177 = !{!108, !12178, !164, !22}
!12178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12179, size: 32)
!12179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12180)
!12180 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1869, line: 37, baseType: !12181)
!12181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1869, line: 32, size: 64, elements: !12182)
!12182 = !{!12183, !12184}
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12181, file: !1869, line: 34, baseType: !113, size: 32)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12181, file: !1869, line: 36, baseType: !113, size: 32, offset: 32)
!12185 = !{!12186, !12187, !12188, !12189, !12190, !12191, !12192, !12193, !12195}
!12186 = !DILocalVariable(name: "pins", arg: 1, scope: !12175, file: !2096, line: 193, type: !12178)
!12187 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12175, file: !2096, line: 193, type: !164)
!12188 = !DILocalVariable(name: "reg", arg: 3, scope: !12175, file: !2096, line: 194, type: !22)
!12189 = !DILocalVariable(name: "pin", scope: !12175, file: !2096, line: 196, type: !113)
!12190 = !DILocalVariable(name: "mux", scope: !12175, file: !2096, line: 196, type: !113)
!12191 = !DILocalVariable(name: "pin_cgf", scope: !12175, file: !2096, line: 197, type: !113)
!12192 = !DILocalVariable(name: "ret", scope: !12175, file: !2096, line: 198, type: !108)
!12193 = !DILocalVariable(name: "i", scope: !12194, file: !2096, line: 209, type: !164)
!12194 = distinct !DILexicalBlock(scope: !12175, file: !2096, line: 209, column: 2)
!12195 = !DILocalVariable(name: "gpio_out", scope: !12196, file: !2096, line: 239, type: !113)
!12196 = distinct !DILexicalBlock(scope: !12197, file: !2096, line: 238, column: 55)
!12197 = distinct !DILexicalBlock(scope: !12198, file: !2096, line: 238, column: 14)
!12198 = distinct !DILexicalBlock(scope: !12199, file: !2096, line: 236, column: 14)
!12199 = distinct !DILexicalBlock(scope: !12200, file: !2096, line: 234, column: 7)
!12200 = distinct !DILexicalBlock(scope: !12201, file: !2096, line: 209, column: 41)
!12201 = distinct !DILexicalBlock(scope: !12194, file: !2096, line: 209, column: 2)
!12202 = !DILocation(line: 0, scope: !12175)
!12203 = !DILocation(line: 0, scope: !12194)
!12204 = !DILocation(line: 209, column: 25, scope: !12201)
!12205 = !DILocation(line: 209, column: 2, scope: !12194)
!12206 = distinct !{!12206, !12205, !12207}
!12207 = !DILocation(line: 259, column: 2, scope: !12194)
!12208 = !DILocation(line: 210, column: 17, scope: !12200)
!12209 = !DILocation(line: 234, column: 7, scope: !12199)
!12210 = !DILocation(line: 234, column: 33, scope: !12199)
!12211 = !DILocation(line: 234, column: 7, scope: !12200)
!12212 = !DILocation(line: 235, column: 22, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12199, file: !2096, line: 234, column: 49)
!12214 = !DILocation(line: 235, column: 29, scope: !12213)
!12215 = !DILocation(line: 236, column: 3, scope: !12213)
!12216 = !DILocation(line: 236, column: 14, scope: !12199)
!12217 = !DILocation(line: 239, column: 32, scope: !12196)
!12218 = !DILocation(line: 0, scope: !12196)
!12219 = !DILocation(line: 241, column: 8, scope: !12196)
!12220 = !DILocation(line: 246, column: 3, scope: !12196)
!12221 = !DILocation(line: 252, column: 9, scope: !12200)
!12222 = !DILocation(line: 255, column: 9, scope: !12200)
!12223 = !DILocation(line: 256, column: 11, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12200, file: !2096, line: 256, column: 7)
!12225 = !DILocation(line: 209, column: 37, scope: !12201)
!12226 = !DILocation(line: 256, column: 7, scope: !12200)
!12227 = !DILocation(line: 262, column: 1, scope: !12175)
!12228 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2096, file: !2096, line: 176, type: !12229, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2014, retainedNodes: !12231)
!12229 = !DISubroutineType(types: !12230)
!12230 = !{!108, !113, !113, !113}
!12231 = !{!12232, !12233, !12234, !12235}
!12232 = !DILocalVariable(name: "pin", arg: 1, scope: !12228, file: !2096, line: 176, type: !113)
!12233 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12228, file: !2096, line: 176, type: !113)
!12234 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12228, file: !2096, line: 176, type: !113)
!12235 = !DILocalVariable(name: "port_device", scope: !12228, file: !2096, line: 178, type: !2026)
!12236 = !DILocation(line: 0, scope: !12228)
!12237 = !DILocation(line: 180, column: 22, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12228, file: !2096, line: 180, column: 6)
!12239 = !DILocation(line: 180, column: 6, scope: !12228)
!12240 = !DILocation(line: 180, column: 6, scope: !12238)
!12241 = !DILocation(line: 184, column: 16, scope: !12228)
!12242 = !DILocation(line: 186, column: 19, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12228, file: !2096, line: 186, column: 6)
!12244 = !DILocation(line: 186, column: 28, scope: !12243)
!12245 = !DILocation(line: 186, column: 33, scope: !12243)
!12246 = !DILocation(line: 186, column: 6, scope: !12228)
!12247 = !DILocation(line: 190, column: 43, scope: !12228)
!12248 = !DILocation(line: 190, column: 9, scope: !12228)
!12249 = !DILocation(line: 190, column: 2, scope: !12228)
!12250 = !DILocation(line: 191, column: 1, scope: !12228)
!12251 = distinct !DISubprogram(name: "device_is_ready", scope: !10207, file: !10207, line: 47, type: !12252, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2014, retainedNodes: !12254)
!12252 = !DISubroutineType(types: !12253)
!12253 = !{!422, !2026}
!12254 = !{!12255}
!12255 = !DILocalVariable(name: "dev", arg: 1, scope: !12251, file: !10207, line: 47, type: !2026)
!12256 = !DILocation(line: 0, scope: !12251)
!12257 = !DILocation(line: 55, column: 2, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12251, file: !10207, line: 55, column: 2)
!12259 = !{i64 2149477417}
!12260 = !DILocation(line: 56, column: 9, scope: !12251)
!12261 = !DILocation(line: 56, column: 2, scope: !12251)
!12262 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !12252, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2014, retainedNodes: !12263)
!12263 = !{!12264}
!12264 = !DILocalVariable(name: "dev", arg: 1, scope: !12262, file: !411, line: 730, type: !2026)
!12265 = !DILocation(line: 0, scope: !12262)
!12266 = !DILocation(line: 732, column: 9, scope: !12262)
!12267 = !DILocation(line: 732, column: 2, scope: !12262)
!12268 = distinct !DISubprogram(name: "SystemInit", scope: !2145, file: !2145, line: 167, type: !3406, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2104, retainedNodes: !437)
!12269 = !DILocation(line: 182, column: 1, scope: !12268)
!12270 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2145, file: !2145, line: 220, type: !3406, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2104, retainedNodes: !12271)
!12271 = !{!12272, !12273, !12274, !12275, !12276}
!12272 = !DILocalVariable(name: "tmp", scope: !12270, file: !2145, line: 222, type: !113)
!12273 = !DILocalVariable(name: "pllvco", scope: !12270, file: !2145, line: 222, type: !113)
!12274 = !DILocalVariable(name: "pllp", scope: !12270, file: !2145, line: 222, type: !113)
!12275 = !DILocalVariable(name: "pllsource", scope: !12270, file: !2145, line: 222, type: !113)
!12276 = !DILocalVariable(name: "pllm", scope: !12270, file: !2145, line: 222, type: !113)
!12277 = !DILocation(line: 0, scope: !12270)
!12278 = !DILocation(line: 225, column: 14, scope: !12270)
!12279 = !DILocation(line: 225, column: 19, scope: !12270)
!12280 = !DILocation(line: 227, column: 3, scope: !12270)
!12281 = !DILocation(line: 240, column: 25, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12270, file: !2145, line: 228, column: 3)
!12283 = !DILocation(line: 241, column: 19, scope: !12282)
!12284 = !DILocation(line: 241, column: 27, scope: !12282)
!12285 = !DILocation(line: 0, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12282, file: !2145, line: 243, column: 11)
!12287 = !DILocation(line: 254, column: 22, scope: !12282)
!12288 = !DILocation(line: 254, column: 62, scope: !12282)
!12289 = !DILocation(line: 255, column: 31, scope: !12282)
!12290 = !DILocation(line: 256, column: 7, scope: !12282)
!12291 = !DILocation(line: 0, scope: !12282)
!12292 = !DILocation(line: 263, column: 30, scope: !12270)
!12293 = !DILocation(line: 263, column: 52, scope: !12270)
!12294 = !DILocation(line: 263, column: 9, scope: !12270)
!12295 = !DILocation(line: 265, column: 19, scope: !12270)
!12296 = !DILocation(line: 266, column: 1, scope: !12270)
!12297 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12298, file: !12298, line: 200, type: !12299, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !437)
!12298 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12299 = !DISubroutineType(types: !12300)
!12300 = !{!12301}
!12301 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3221, line: 44, baseType: !3220)
!12302 = !DILocation(line: 202, column: 3, scope: !12297)
!12303 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12298, file: !12298, line: 219, type: !12304, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !12329)
!12304 = !DISubroutineType(types: !12305)
!12305 = !{!12301, !12306}
!12306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12307, size: 32)
!12307 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12308, line: 70, baseType: !12309)
!12308 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12308, line: 49, size: 416, elements: !12310)
!12310 = !{!12311, !12312, !12313, !12314, !12315, !12316, !12317}
!12311 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12309, file: !12308, line: 51, baseType: !113, size: 32)
!12312 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12309, file: !12308, line: 54, baseType: !113, size: 32, offset: 32)
!12313 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12309, file: !12308, line: 57, baseType: !113, size: 32, offset: 64)
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12309, file: !12308, line: 60, baseType: !113, size: 32, offset: 96)
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12309, file: !12308, line: 63, baseType: !113, size: 32, offset: 128)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12309, file: !12308, line: 66, baseType: !113, size: 32, offset: 160)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12309, file: !12308, line: 69, baseType: !12318, size: 224, offset: 192)
!12318 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12319, line: 73, baseType: !12320)
!12319 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12320 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12319, line: 45, size: 224, elements: !12321)
!12321 = !{!12322, !12323, !12324, !12325, !12326, !12327, !12328}
!12322 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12320, file: !12319, line: 47, baseType: !113, size: 32)
!12323 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12320, file: !12319, line: 50, baseType: !113, size: 32, offset: 32)
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12320, file: !12319, line: 53, baseType: !113, size: 32, offset: 64)
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12320, file: !12319, line: 56, baseType: !113, size: 32, offset: 96)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12320, file: !12319, line: 60, baseType: !113, size: 32, offset: 128)
!12327 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12320, file: !12319, line: 63, baseType: !113, size: 32, offset: 160)
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12320, file: !12319, line: 68, baseType: !113, size: 32, offset: 192)
!12329 = !{!12330, !12331, !12332, !12333, !12337}
!12330 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12303, file: !12298, line: 219, type: !12306)
!12331 = !DILocalVariable(name: "tickstart", scope: !12303, file: !12298, line: 221, type: !113)
!12332 = !DILocalVariable(name: "pll_config", scope: !12303, file: !12298, line: 221, type: !113)
!12333 = !DILocalVariable(name: "pwrclkchanged", scope: !12334, file: !12298, line: 391, type: !12336)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !12298, line: 390, column: 3)
!12335 = distinct !DILexicalBlock(scope: !12303, file: !12298, line: 389, column: 6)
!12336 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1175, line: 188, baseType: !3227)
!12337 = !DILocalVariable(name: "tmpreg", scope: !12338, file: !12298, line: 400, type: !570)
!12338 = distinct !DILexicalBlock(scope: !12339, file: !12298, line: 400, column: 7)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !12298, line: 399, column: 5)
!12340 = distinct !DILexicalBlock(scope: !12334, file: !12298, line: 398, column: 8)
!12341 = !DILocation(line: 0, scope: !12303)
!12342 = !DILocation(line: 224, column: 24, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12303, file: !12298, line: 224, column: 6)
!12344 = !DILocation(line: 224, column: 6, scope: !12303)
!12345 = !DILocation(line: 232, column: 27, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12303, file: !12298, line: 232, column: 6)
!12347 = !DILocation(line: 232, column: 43, scope: !12346)
!12348 = !DILocation(line: 232, column: 69, scope: !12346)
!12349 = !DILocation(line: 232, column: 6, scope: !12303)
!12350 = !DILocation(line: 237, column: 9, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12352, file: !12298, line: 237, column: 8)
!12352 = distinct !DILexicalBlock(scope: !12346, file: !12298, line: 233, column: 3)
!12353 = !DILocation(line: 237, column: 39, scope: !12351)
!12354 = !DILocation(line: 237, column: 60, scope: !12351)
!12355 = !DILocation(line: 238, column: 9, scope: !12351)
!12356 = !DILocation(line: 238, column: 39, scope: !12351)
!12357 = !DILocation(line: 238, column: 60, scope: !12351)
!12358 = !DILocation(line: 238, column: 70, scope: !12351)
!12359 = !DILocation(line: 238, column: 78, scope: !12351)
!12360 = !DILocation(line: 238, column: 100, scope: !12351)
!12361 = !DILocation(line: 237, column: 8, scope: !12352)
!12362 = !DILocation(line: 240, column: 11, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12364, file: !12298, line: 240, column: 10)
!12364 = distinct !DILexicalBlock(scope: !12351, file: !12298, line: 239, column: 5)
!12365 = !DILocation(line: 240, column: 57, scope: !12363)
!12366 = !DILocation(line: 240, column: 80, scope: !12363)
!12367 = !DILocation(line: 240, column: 89, scope: !12363)
!12368 = !DILocation(line: 240, column: 10, scope: !12364)
!12369 = !DILocation(line: 248, column: 7, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12371, file: !12298, line: 248, column: 7)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !12298, line: 248, column: 7)
!12372 = distinct !DILexicalBlock(scope: !12351, file: !12298, line: 246, column: 5)
!12373 = !DILocation(line: 248, column: 7, scope: !12371)
!12374 = !DILocation(line: 248, column: 7, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12370, file: !12298, line: 248, column: 7)
!12376 = !DILocation(line: 248, column: 7, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !12298, line: 248, column: 7)
!12378 = distinct !DILexicalBlock(scope: !12370, file: !12298, line: 248, column: 7)
!12379 = !DILocation(line: 248, column: 7, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12378, file: !12298, line: 248, column: 7)
!12381 = !DILocation(line: 0, scope: !12370)
!12382 = !DILocation(line: 251, column: 30, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12372, file: !12298, line: 251, column: 10)
!12384 = !DILocation(line: 251, column: 40, scope: !12383)
!12385 = !DILocation(line: 0, scope: !12383)
!12386 = !DILocation(line: 251, column: 10, scope: !12372)
!12387 = !DILocation(line: 257, column: 15, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12383, file: !12298, line: 252, column: 7)
!12389 = !DILocation(line: 257, column: 51, scope: !12388)
!12390 = !DILocation(line: 257, column: 9, scope: !12388)
!12391 = !DILocation(line: 259, column: 15, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12393, file: !12298, line: 259, column: 14)
!12393 = distinct !DILexicalBlock(scope: !12388, file: !12298, line: 258, column: 9)
!12394 = !DILocation(line: 259, column: 29, scope: !12392)
!12395 = !DILocation(line: 259, column: 43, scope: !12392)
!12396 = !DILocation(line: 259, column: 14, scope: !12393)
!12397 = distinct !{!12397, !12390, !12398}
!12398 = !DILocation(line: 263, column: 9, scope: !12388)
!12399 = !DILocation(line: 271, column: 15, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12383, file: !12298, line: 266, column: 7)
!12401 = !DILocation(line: 271, column: 9, scope: !12400)
!12402 = !DILocation(line: 273, column: 15, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12404, file: !12298, line: 273, column: 14)
!12404 = distinct !DILexicalBlock(scope: !12400, file: !12298, line: 272, column: 9)
!12405 = !DILocation(line: 273, column: 29, scope: !12403)
!12406 = !DILocation(line: 273, column: 43, scope: !12403)
!12407 = !DILocation(line: 273, column: 14, scope: !12404)
!12408 = distinct !{!12408, !12401, !12409}
!12409 = !DILocation(line: 277, column: 9, scope: !12400)
!12410 = !DILocation(line: 282, column: 27, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12303, file: !12298, line: 282, column: 6)
!12412 = !DILocation(line: 282, column: 43, scope: !12411)
!12413 = !DILocation(line: 282, column: 69, scope: !12411)
!12414 = !DILocation(line: 282, column: 6, scope: !12303)
!12415 = !DILocation(line: 289, column: 9, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !12298, line: 289, column: 8)
!12417 = distinct !DILexicalBlock(scope: !12411, file: !12298, line: 283, column: 3)
!12418 = !DILocation(line: 289, column: 39, scope: !12416)
!12419 = !DILocation(line: 289, column: 60, scope: !12416)
!12420 = !DILocation(line: 290, column: 9, scope: !12416)
!12421 = !DILocation(line: 290, column: 39, scope: !12416)
!12422 = !DILocation(line: 290, column: 60, scope: !12416)
!12423 = !DILocation(line: 290, column: 70, scope: !12416)
!12424 = !DILocation(line: 290, column: 78, scope: !12416)
!12425 = !DILocation(line: 290, column: 100, scope: !12416)
!12426 = !DILocation(line: 289, column: 8, scope: !12417)
!12427 = !DILocation(line: 293, column: 11, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12429, file: !12298, line: 293, column: 10)
!12429 = distinct !DILexicalBlock(scope: !12416, file: !12298, line: 291, column: 5)
!12430 = !DILocation(line: 293, column: 57, scope: !12428)
!12431 = !DILocation(line: 293, column: 80, scope: !12428)
!12432 = !DILocation(line: 293, column: 89, scope: !12428)
!12433 = !DILocation(line: 293, column: 10, scope: !12429)
!12434 = !DILocation(line: 307, column: 30, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !12298, line: 307, column: 10)
!12436 = distinct !DILexicalBlock(scope: !12416, file: !12298, line: 305, column: 5)
!12437 = !DILocation(line: 307, column: 39, scope: !12435)
!12438 = !DILocation(line: 307, column: 10, scope: !12436)
!12439 = !DILocation(line: 310, column: 9, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12435, file: !12298, line: 308, column: 7)
!12441 = !DILocation(line: 313, column: 21, scope: !12440)
!12442 = !DILocation(line: 316, column: 9, scope: !12440)
!12443 = !DILocation(line: 316, column: 15, scope: !12440)
!12444 = !DILocation(line: 316, column: 51, scope: !12440)
!12445 = !DILocation(line: 318, column: 15, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12447, file: !12298, line: 318, column: 14)
!12447 = distinct !DILexicalBlock(scope: !12440, file: !12298, line: 317, column: 9)
!12448 = !DILocation(line: 318, column: 29, scope: !12446)
!12449 = !DILocation(line: 318, column: 43, scope: !12446)
!12450 = !DILocation(line: 318, column: 14, scope: !12447)
!12451 = distinct !{!12451, !12442, !12452}
!12452 = !DILocation(line: 322, column: 9, scope: !12440)
!12453 = !DILocation(line: 330, column: 9, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12435, file: !12298, line: 328, column: 7)
!12455 = !DILocation(line: 333, column: 21, scope: !12454)
!12456 = !DILocation(line: 336, column: 9, scope: !12454)
!12457 = !DILocation(line: 336, column: 15, scope: !12454)
!12458 = !DILocation(line: 338, column: 15, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12460, file: !12298, line: 338, column: 14)
!12460 = distinct !DILexicalBlock(scope: !12454, file: !12298, line: 337, column: 9)
!12461 = !DILocation(line: 338, column: 29, scope: !12459)
!12462 = !DILocation(line: 338, column: 43, scope: !12459)
!12463 = !DILocation(line: 338, column: 14, scope: !12460)
!12464 = distinct !{!12464, !12456, !12465}
!12465 = !DILocation(line: 342, column: 9, scope: !12454)
!12466 = !DILocation(line: 0, scope: !12416)
!12467 = !DILocation(line: 347, column: 27, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12303, file: !12298, line: 347, column: 6)
!12469 = !DILocation(line: 347, column: 43, scope: !12468)
!12470 = !DILocation(line: 347, column: 69, scope: !12468)
!12471 = !DILocation(line: 347, column: 6, scope: !12303)
!12472 = !DILocation(line: 353, column: 28, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12474, file: !12298, line: 353, column: 8)
!12474 = distinct !DILexicalBlock(scope: !12468, file: !12298, line: 348, column: 3)
!12475 = !DILocation(line: 353, column: 37, scope: !12473)
!12476 = !DILocation(line: 353, column: 8, scope: !12474)
!12477 = !DILocation(line: 356, column: 7, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12473, file: !12298, line: 354, column: 5)
!12479 = !DILocation(line: 359, column: 19, scope: !12478)
!12480 = !DILocation(line: 362, column: 7, scope: !12478)
!12481 = !DILocation(line: 362, column: 13, scope: !12478)
!12482 = !DILocation(line: 362, column: 49, scope: !12478)
!12483 = !DILocation(line: 364, column: 13, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12485, file: !12298, line: 364, column: 12)
!12485 = distinct !DILexicalBlock(scope: !12478, file: !12298, line: 363, column: 7)
!12486 = !DILocation(line: 364, column: 27, scope: !12484)
!12487 = !DILocation(line: 364, column: 41, scope: !12484)
!12488 = !DILocation(line: 364, column: 12, scope: !12485)
!12489 = distinct !{!12489, !12480, !12490}
!12490 = !DILocation(line: 368, column: 7, scope: !12478)
!12491 = !DILocation(line: 373, column: 7, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12473, file: !12298, line: 371, column: 5)
!12493 = !DILocation(line: 376, column: 19, scope: !12492)
!12494 = !DILocation(line: 379, column: 7, scope: !12492)
!12495 = !DILocation(line: 379, column: 13, scope: !12492)
!12496 = !DILocation(line: 381, column: 13, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12498, file: !12298, line: 381, column: 12)
!12498 = distinct !DILexicalBlock(scope: !12492, file: !12298, line: 380, column: 7)
!12499 = !DILocation(line: 381, column: 27, scope: !12497)
!12500 = !DILocation(line: 381, column: 41, scope: !12497)
!12501 = !DILocation(line: 381, column: 12, scope: !12498)
!12502 = distinct !{!12502, !12494, !12503}
!12503 = !DILocation(line: 385, column: 7, scope: !12492)
!12504 = !DILocation(line: 389, column: 27, scope: !12335)
!12505 = !DILocation(line: 389, column: 43, scope: !12335)
!12506 = !DILocation(line: 389, column: 69, scope: !12335)
!12507 = !DILocation(line: 389, column: 6, scope: !12303)
!12508 = !DILocation(line: 0, scope: !12334)
!12509 = !DILocation(line: 398, column: 8, scope: !12340)
!12510 = !DILocation(line: 398, column: 8, scope: !12334)
!12511 = !DILocation(line: 400, column: 7, scope: !12338)
!12512 = !DILocation(line: 400, column: 7, scope: !12339)
!12513 = !DILocation(line: 402, column: 5, scope: !12339)
!12514 = !DILocation(line: 404, column: 8, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12334, file: !12298, line: 404, column: 8)
!12516 = !DILocation(line: 404, column: 8, scope: !12334)
!12517 = !DILocation(line: 407, column: 7, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12515, file: !12298, line: 405, column: 5)
!12519 = !DILocation(line: 410, column: 19, scope: !12518)
!12520 = !DILocation(line: 412, column: 7, scope: !12518)
!12521 = !DILocation(line: 412, column: 13, scope: !12518)
!12522 = !DILocation(line: 414, column: 13, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !12298, line: 414, column: 12)
!12524 = distinct !DILexicalBlock(scope: !12518, file: !12298, line: 413, column: 7)
!12525 = !DILocation(line: 414, column: 27, scope: !12523)
!12526 = !DILocation(line: 414, column: 40, scope: !12523)
!12527 = !DILocation(line: 414, column: 12, scope: !12524)
!12528 = distinct !{!12528, !12520, !12529}
!12529 = !DILocation(line: 418, column: 7, scope: !12518)
!12530 = !DILocation(line: 422, column: 5, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12532, file: !12298, line: 422, column: 5)
!12532 = distinct !DILexicalBlock(scope: !12334, file: !12298, line: 422, column: 5)
!12533 = !DILocation(line: 422, column: 5, scope: !12532)
!12534 = !DILocation(line: 422, column: 5, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12531, file: !12298, line: 422, column: 5)
!12536 = !DILocation(line: 422, column: 5, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12538, file: !12298, line: 422, column: 5)
!12538 = distinct !DILexicalBlock(scope: !12531, file: !12298, line: 422, column: 5)
!12539 = !DILocation(line: 422, column: 5, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12538, file: !12298, line: 422, column: 5)
!12541 = !DILocation(line: 0, scope: !12531)
!12542 = !DILocation(line: 424, column: 28, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12334, file: !12298, line: 424, column: 8)
!12544 = !DILocation(line: 424, column: 38, scope: !12543)
!12545 = !DILocation(line: 0, scope: !12543)
!12546 = !DILocation(line: 424, column: 8, scope: !12334)
!12547 = !DILocation(line: 430, column: 13, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12543, file: !12298, line: 425, column: 5)
!12549 = !DILocation(line: 430, column: 49, scope: !12548)
!12550 = !DILocation(line: 430, column: 7, scope: !12548)
!12551 = !DILocation(line: 432, column: 13, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !12298, line: 432, column: 12)
!12553 = distinct !DILexicalBlock(scope: !12548, file: !12298, line: 431, column: 7)
!12554 = !DILocation(line: 432, column: 27, scope: !12552)
!12555 = !DILocation(line: 432, column: 41, scope: !12552)
!12556 = !DILocation(line: 432, column: 12, scope: !12553)
!12557 = distinct !{!12557, !12550, !12558}
!12558 = !DILocation(line: 436, column: 7, scope: !12548)
!12559 = !DILocation(line: 444, column: 13, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12543, file: !12298, line: 439, column: 5)
!12561 = !DILocation(line: 444, column: 7, scope: !12560)
!12562 = !DILocation(line: 446, column: 13, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12564, file: !12298, line: 446, column: 12)
!12564 = distinct !DILexicalBlock(scope: !12560, file: !12298, line: 445, column: 7)
!12565 = !DILocation(line: 446, column: 27, scope: !12563)
!12566 = !DILocation(line: 446, column: 41, scope: !12563)
!12567 = !DILocation(line: 446, column: 12, scope: !12564)
!12568 = distinct !{!12568, !12561, !12569}
!12569 = !DILocation(line: 450, column: 7, scope: !12560)
!12570 = !DILocation(line: 454, column: 8, scope: !12334)
!12571 = !DILocation(line: 456, column: 7, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12573, file: !12298, line: 455, column: 5)
!12573 = distinct !DILexicalBlock(scope: !12334, file: !12298, line: 454, column: 8)
!12574 = !DILocation(line: 457, column: 5, scope: !12572)
!12575 = !DILocation(line: 462, column: 31, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12303, file: !12298, line: 462, column: 7)
!12577 = !DILocation(line: 462, column: 41, scope: !12576)
!12578 = !DILocation(line: 462, column: 7, scope: !12303)
!12579 = !DILocation(line: 465, column: 8, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12581, file: !12298, line: 465, column: 8)
!12581 = distinct !DILexicalBlock(scope: !12576, file: !12298, line: 463, column: 3)
!12582 = !DILocation(line: 465, column: 38, scope: !12580)
!12583 = !DILocation(line: 465, column: 8, scope: !12581)
!12584 = !DILocation(line: 467, column: 44, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12586, file: !12298, line: 467, column: 10)
!12586 = distinct !DILexicalBlock(scope: !12580, file: !12298, line: 466, column: 5)
!12587 = !DILocation(line: 0, scope: !12585)
!12588 = !DILocation(line: 467, column: 10, scope: !12586)
!12589 = !DILocation(line: 483, column: 15, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12585, file: !12298, line: 468, column: 7)
!12591 = !DILocation(line: 483, column: 9, scope: !12590)
!12592 = !DILocation(line: 485, column: 15, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12594, file: !12298, line: 485, column: 14)
!12594 = distinct !DILexicalBlock(scope: !12590, file: !12298, line: 484, column: 9)
!12595 = !DILocation(line: 485, column: 29, scope: !12593)
!12596 = !DILocation(line: 485, column: 43, scope: !12593)
!12597 = !DILocation(line: 485, column: 14, scope: !12594)
!12598 = distinct !{!12598, !12591, !12599}
!12599 = !DILocation(line: 489, column: 9, scope: !12590)
!12600 = !DILocation(line: 492, column: 9, scope: !12590)
!12601 = !DILocation(line: 498, column: 9, scope: !12590)
!12602 = !DILocation(line: 501, column: 21, scope: !12590)
!12603 = !DILocation(line: 504, column: 9, scope: !12590)
!12604 = !DILocation(line: 504, column: 15, scope: !12590)
!12605 = !DILocation(line: 504, column: 51, scope: !12590)
!12606 = !DILocation(line: 506, column: 15, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !12298, line: 506, column: 14)
!12608 = distinct !DILexicalBlock(scope: !12590, file: !12298, line: 505, column: 9)
!12609 = !DILocation(line: 506, column: 29, scope: !12607)
!12610 = !DILocation(line: 506, column: 43, scope: !12607)
!12611 = !DILocation(line: 506, column: 14, scope: !12608)
!12612 = distinct !{!12612, !12603, !12613}
!12613 = !DILocation(line: 510, column: 9, scope: !12590)
!12614 = !DILocation(line: 521, column: 15, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12585, file: !12298, line: 513, column: 7)
!12616 = !DILocation(line: 521, column: 9, scope: !12615)
!12617 = !DILocation(line: 523, column: 15, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !12298, line: 523, column: 14)
!12619 = distinct !DILexicalBlock(scope: !12615, file: !12298, line: 522, column: 9)
!12620 = !DILocation(line: 523, column: 29, scope: !12618)
!12621 = !DILocation(line: 523, column: 43, scope: !12618)
!12622 = !DILocation(line: 523, column: 14, scope: !12619)
!12623 = distinct !{!12623, !12616, !12624}
!12624 = !DILocation(line: 527, column: 9, scope: !12615)
!12625 = !DILocation(line: 533, column: 44, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12298, line: 533, column: 10)
!12627 = distinct !DILexicalBlock(scope: !12580, file: !12298, line: 531, column: 5)
!12628 = !DILocation(line: 533, column: 10, scope: !12627)
!12629 = !DILocation(line: 540, column: 27, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12626, file: !12298, line: 538, column: 7)
!12631 = !DILocation(line: 543, column: 14, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12630, file: !12298, line: 542, column: 13)
!12633 = !DILocation(line: 543, column: 81, scope: !12632)
!12634 = !DILocation(line: 543, column: 55, scope: !12632)
!12635 = !DILocation(line: 543, column: 92, scope: !12632)
!12636 = !DILocation(line: 544, column: 14, scope: !12632)
!12637 = !DILocation(line: 544, column: 80, scope: !12632)
!12638 = !DILocation(line: 544, column: 53, scope: !12632)
!12639 = !DILocation(line: 544, column: 111, scope: !12632)
!12640 = !DILocation(line: 545, column: 14, scope: !12632)
!12641 = !DILocation(line: 545, column: 80, scope: !12632)
!12642 = !DILocation(line: 545, column: 86, scope: !12632)
!12643 = !DILocation(line: 545, column: 53, scope: !12632)
!12644 = !DILocation(line: 545, column: 111, scope: !12632)
!12645 = !DILocation(line: 546, column: 14, scope: !12632)
!12646 = !DILocation(line: 546, column: 82, scope: !12632)
!12647 = !DILocation(line: 546, column: 101, scope: !12632)
!12648 = !DILocation(line: 546, column: 53, scope: !12632)
!12649 = !DILocation(line: 546, column: 126, scope: !12632)
!12650 = !DILocation(line: 547, column: 14, scope: !12632)
!12651 = !DILocation(line: 547, column: 80, scope: !12632)
!12652 = !DILocation(line: 547, column: 85, scope: !12632)
!12653 = !DILocation(line: 547, column: 53, scope: !12632)
!12654 = !DILocation(line: 547, column: 111, scope: !12632)
!12655 = !DILocation(line: 548, column: 14, scope: !12632)
!12656 = !DILocation(line: 548, column: 80, scope: !12632)
!12657 = !DILocation(line: 548, column: 85, scope: !12632)
!12658 = !DILocation(line: 548, column: 53, scope: !12632)
!12659 = !DILocation(line: 542, column: 13, scope: !12630)
!12660 = !DILocation(line: 563, column: 3, scope: !12303)
!12661 = !DILocation(line: 564, column: 1, scope: !12303)
!12662 = !DISubprogram(name: "HAL_GetTick", scope: !12663, file: !12663, line: 234, type: !7145, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12663 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12664 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12298, file: !12298, line: 591, type: !12665, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !12676)
!12665 = !DISubroutineType(types: !12666)
!12666 = !{!12301, !12667, !113}
!12667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12668, size: 32)
!12668 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12308, line: 92, baseType: !12669)
!12669 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12308, line: 75, size: 160, elements: !12670)
!12670 = !{!12671, !12672, !12673, !12674, !12675}
!12671 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12669, file: !12308, line: 77, baseType: !113, size: 32)
!12672 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12669, file: !12308, line: 80, baseType: !113, size: 32, offset: 32)
!12673 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12669, file: !12308, line: 83, baseType: !113, size: 32, offset: 64)
!12674 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12669, file: !12308, line: 86, baseType: !113, size: 32, offset: 96)
!12675 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12669, file: !12308, line: 89, baseType: !113, size: 32, offset: 128)
!12676 = !{!12677, !12678, !12679}
!12677 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12664, file: !12298, line: 591, type: !12667)
!12678 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12664, file: !12298, line: 591, type: !113)
!12679 = !DILocalVariable(name: "tickstart", scope: !12664, file: !12298, line: 593, type: !113)
!12680 = !DILocation(line: 0, scope: !12664)
!12681 = !DILocation(line: 596, column: 24, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12664, file: !12298, line: 596, column: 6)
!12683 = !DILocation(line: 596, column: 6, scope: !12664)
!12684 = !DILocation(line: 610, column: 17, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12664, file: !12298, line: 610, column: 6)
!12686 = !DILocation(line: 610, column: 15, scope: !12685)
!12687 = !DILocation(line: 610, column: 6, scope: !12664)
!12688 = !DILocation(line: 613, column: 5, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12685, file: !12298, line: 611, column: 3)
!12690 = !DILocation(line: 617, column: 8, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12689, file: !12298, line: 617, column: 8)
!12692 = !DILocation(line: 617, column: 34, scope: !12691)
!12693 = !DILocation(line: 617, column: 8, scope: !12689)
!12694 = !DILocation(line: 624, column: 27, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12664, file: !12298, line: 624, column: 6)
!12696 = !DILocation(line: 624, column: 38, scope: !12695)
!12697 = !DILocation(line: 624, column: 60, scope: !12695)
!12698 = !DILocation(line: 624, column: 6, scope: !12664)
!12699 = !DILocation(line: 628, column: 40, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !12298, line: 628, column: 8)
!12701 = distinct !DILexicalBlock(scope: !12695, file: !12298, line: 625, column: 3)
!12702 = !DILocation(line: 628, column: 63, scope: !12700)
!12703 = !DILocation(line: 628, column: 8, scope: !12701)
!12704 = !DILocation(line: 630, column: 7, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12700, file: !12298, line: 629, column: 5)
!12706 = !DILocation(line: 633, column: 29, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12701, file: !12298, line: 633, column: 8)
!12708 = !DILocation(line: 631, column: 5, scope: !12705)
!12709 = !DILocation(line: 633, column: 40, scope: !12707)
!12710 = !DILocation(line: 633, column: 63, scope: !12707)
!12711 = !DILocation(line: 633, column: 8, scope: !12701)
!12712 = !DILocation(line: 635, column: 7, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12707, file: !12298, line: 634, column: 5)
!12714 = !DILocation(line: 636, column: 5, scope: !12713)
!12715 = !DILocation(line: 639, column: 5, scope: !12701)
!12716 = !DILocation(line: 643, column: 27, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12664, file: !12298, line: 643, column: 6)
!12718 = !DILocation(line: 640, column: 3, scope: !12701)
!12719 = !DILocation(line: 643, column: 38, scope: !12717)
!12720 = !DILocation(line: 643, column: 62, scope: !12717)
!12721 = !DILocation(line: 643, column: 6, scope: !12664)
!12722 = !DILocation(line: 648, column: 27, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !12298, line: 648, column: 8)
!12724 = distinct !DILexicalBlock(scope: !12717, file: !12298, line: 644, column: 3)
!12725 = !DILocation(line: 648, column: 8, scope: !12724)
!12726 = !DILocation(line: 651, column: 10, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !12298, line: 651, column: 10)
!12728 = distinct !DILexicalBlock(scope: !12723, file: !12298, line: 649, column: 5)
!12729 = !DILocation(line: 651, column: 46, scope: !12727)
!12730 = !DILocation(line: 651, column: 10, scope: !12728)
!12731 = !DILocation(line: 661, column: 10, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12733, file: !12298, line: 661, column: 10)
!12733 = distinct !DILexicalBlock(scope: !12734, file: !12298, line: 659, column: 5)
!12734 = distinct !DILexicalBlock(scope: !12723, file: !12298, line: 657, column: 13)
!12735 = !DILocation(line: 661, column: 46, scope: !12732)
!12736 = !DILocation(line: 661, column: 10, scope: !12733)
!12737 = !DILocation(line: 670, column: 10, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12739, file: !12298, line: 670, column: 10)
!12739 = distinct !DILexicalBlock(scope: !12734, file: !12298, line: 668, column: 5)
!12740 = !DILocation(line: 670, column: 46, scope: !12738)
!12741 = !DILocation(line: 670, column: 10, scope: !12739)
!12742 = !DILocation(line: 676, column: 5, scope: !12724)
!12743 = !DILocation(line: 679, column: 17, scope: !12724)
!12744 = !DILocation(line: 681, column: 5, scope: !12724)
!12745 = !DILocation(line: 681, column: 12, scope: !12724)
!12746 = !DILocation(line: 681, column: 65, scope: !12724)
!12747 = !DILocation(line: 681, column: 78, scope: !12724)
!12748 = !DILocation(line: 681, column: 42, scope: !12724)
!12749 = !DILocation(line: 683, column: 12, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12751, file: !12298, line: 683, column: 11)
!12751 = distinct !DILexicalBlock(scope: !12724, file: !12298, line: 682, column: 5)
!12752 = !DILocation(line: 683, column: 26, scope: !12750)
!12753 = !DILocation(line: 683, column: 39, scope: !12750)
!12754 = !DILocation(line: 683, column: 11, scope: !12751)
!12755 = distinct !{!12755, !12744, !12756}
!12756 = !DILocation(line: 687, column: 5, scope: !12724)
!12757 = !DILocation(line: 691, column: 17, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12664, file: !12298, line: 691, column: 6)
!12759 = !DILocation(line: 691, column: 15, scope: !12758)
!12760 = !DILocation(line: 691, column: 6, scope: !12664)
!12761 = !DILocation(line: 694, column: 5, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12758, file: !12298, line: 692, column: 3)
!12763 = !DILocation(line: 698, column: 8, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12762, file: !12298, line: 698, column: 8)
!12765 = !DILocation(line: 698, column: 34, scope: !12764)
!12766 = !DILocation(line: 698, column: 8, scope: !12762)
!12767 = !DILocation(line: 705, column: 27, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12664, file: !12298, line: 705, column: 6)
!12769 = !DILocation(line: 705, column: 38, scope: !12768)
!12770 = !DILocation(line: 705, column: 61, scope: !12768)
!12771 = !DILocation(line: 705, column: 6, scope: !12664)
!12772 = !DILocation(line: 708, column: 5, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12768, file: !12298, line: 706, column: 3)
!12774 = !DILocation(line: 712, column: 27, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12664, file: !12298, line: 712, column: 6)
!12776 = !DILocation(line: 709, column: 3, scope: !12773)
!12777 = !DILocation(line: 712, column: 38, scope: !12775)
!12778 = !DILocation(line: 712, column: 61, scope: !12775)
!12779 = !DILocation(line: 712, column: 6, scope: !12664)
!12780 = !DILocation(line: 715, column: 5, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12775, file: !12298, line: 713, column: 3)
!12782 = !DILocation(line: 716, column: 3, scope: !12781)
!12783 = !DILocation(line: 719, column: 21, scope: !12664)
!12784 = !DILocation(line: 719, column: 70, scope: !12664)
!12785 = !DILocation(line: 719, column: 91, scope: !12664)
!12786 = !DILocation(line: 719, column: 50, scope: !12664)
!12787 = !DILocation(line: 719, column: 47, scope: !12664)
!12788 = !DILocation(line: 719, column: 19, scope: !12664)
!12789 = !DILocation(line: 722, column: 17, scope: !12664)
!12790 = !DILocation(line: 722, column: 3, scope: !12664)
!12791 = !DILocation(line: 724, column: 3, scope: !12664)
!12792 = !DILocation(line: 725, column: 1, scope: !12664)
!12793 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12298, file: !12298, line: 885, type: !7145, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !12794)
!12794 = !{!12795, !12796, !12797, !12798}
!12795 = !DILocalVariable(name: "pllm", scope: !12793, file: !12298, line: 887, type: !113)
!12796 = !DILocalVariable(name: "pllvco", scope: !12793, file: !12298, line: 887, type: !113)
!12797 = !DILocalVariable(name: "pllp", scope: !12793, file: !12298, line: 887, type: !113)
!12798 = !DILocalVariable(name: "sysclockfreq", scope: !12793, file: !12298, line: 888, type: !113)
!12799 = !DILocation(line: 0, scope: !12793)
!12800 = !DILocation(line: 891, column: 16, scope: !12793)
!12801 = !DILocation(line: 891, column: 21, scope: !12793)
!12802 = !DILocation(line: 891, column: 3, scope: !12793)
!12803 = !DILocation(line: 907, column: 19, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12805, file: !12298, line: 904, column: 5)
!12805 = distinct !DILexicalBlock(scope: !12793, file: !12298, line: 892, column: 3)
!12806 = !DILocation(line: 907, column: 27, scope: !12804)
!12807 = !DILocation(line: 908, column: 10, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12804, file: !12298, line: 908, column: 10)
!12809 = !DILocation(line: 0, scope: !12808)
!12810 = !DILocation(line: 918, column: 23, scope: !12804)
!12811 = !DILocation(line: 918, column: 82, scope: !12804)
!12812 = !DILocation(line: 920, column: 28, scope: !12804)
!12813 = !DILocation(line: 921, column: 7, scope: !12804)
!12814 = !DILocation(line: 0, scope: !12805)
!12815 = !DILocation(line: 929, column: 3, scope: !12793)
!12816 = !DISubprogram(name: "HAL_InitTick", scope: !12663, file: !12663, line: 223, type: !12817, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12817 = !DISubroutineType(types: !12818)
!12818 = !{!12301, !113}
!12819 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12298, file: !12298, line: 775, type: !12820, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !12822)
!12820 = !DISubroutineType(types: !12821)
!12821 = !{null, !113, !113, !113}
!12822 = !{!12823, !12824, !12825, !12826, !12836}
!12823 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12819, file: !12298, line: 775, type: !113)
!12824 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12819, file: !12298, line: 775, type: !113)
!12825 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12819, file: !12298, line: 775, type: !113)
!12826 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12819, file: !12298, line: 777, type: !12827)
!12827 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12828, line: 62, baseType: !12829)
!12828 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12828, line: 46, size: 160, elements: !12830)
!12830 = !{!12831, !12832, !12833, !12834, !12835}
!12831 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12829, file: !12828, line: 48, baseType: !113, size: 32)
!12832 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12829, file: !12828, line: 51, baseType: !113, size: 32, offset: 32)
!12833 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12829, file: !12828, line: 54, baseType: !113, size: 32, offset: 64)
!12834 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12829, file: !12828, line: 57, baseType: !113, size: 32, offset: 96)
!12835 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12829, file: !12828, line: 60, baseType: !113, size: 32, offset: 128)
!12836 = !DILocalVariable(name: "tmpreg", scope: !12837, file: !12298, line: 787, type: !570)
!12837 = distinct !DILexicalBlock(scope: !12838, file: !12298, line: 787, column: 5)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !12298, line: 783, column: 3)
!12839 = distinct !DILexicalBlock(scope: !12819, file: !12298, line: 782, column: 6)
!12840 = !DILocation(line: 0, scope: !12819)
!12841 = !DILocation(line: 777, column: 3, scope: !12819)
!12842 = !DILocation(line: 777, column: 20, scope: !12819)
!12843 = !DILocation(line: 782, column: 15, scope: !12839)
!12844 = !DILocation(line: 782, column: 6, scope: !12819)
!12845 = !DILocation(line: 787, column: 5, scope: !12837)
!12846 = !DILocation(line: 787, column: 5, scope: !12838)
!12847 = !DILocation(line: 790, column: 21, scope: !12838)
!12848 = !DILocation(line: 790, column: 25, scope: !12838)
!12849 = !DILocation(line: 791, column: 21, scope: !12838)
!12850 = !DILocation(line: 791, column: 26, scope: !12838)
!12851 = !DILocation(line: 792, column: 21, scope: !12838)
!12852 = !DILocation(line: 792, column: 27, scope: !12838)
!12853 = !DILocation(line: 793, column: 21, scope: !12838)
!12854 = !DILocation(line: 793, column: 26, scope: !12838)
!12855 = !DILocation(line: 794, column: 21, scope: !12838)
!12856 = !DILocation(line: 794, column: 31, scope: !12838)
!12857 = !DILocation(line: 795, column: 5, scope: !12838)
!12858 = !DILocation(line: 798, column: 5, scope: !12838)
!12859 = !DILocation(line: 804, column: 3, scope: !12838)
!12860 = !DILocation(line: 830, column: 1, scope: !12819)
!12861 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12828, file: !12828, line: 224, type: !12862, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12862 = !DISubroutineType(types: !12863)
!12863 = !{null, !3289, !12864}
!12864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12827, size: 32)
!12865 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12298, file: !12298, line: 841, type: !3406, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !437)
!12866 = !DILocation(line: 843, column: 38, scope: !12865)
!12867 = !DILocation(line: 844, column: 1, scope: !12865)
!12868 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12298, file: !12298, line: 850, type: !3406, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !437)
!12869 = !DILocation(line: 852, column: 38, scope: !12868)
!12870 = !DILocation(line: 853, column: 1, scope: !12868)
!12871 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12298, file: !12298, line: 941, type: !7145, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !437)
!12872 = !DILocation(line: 943, column: 10, scope: !12871)
!12873 = !DILocation(line: 943, column: 3, scope: !12871)
!12874 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12298, file: !12298, line: 952, type: !7145, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !437)
!12875 = !DILocation(line: 955, column: 11, scope: !12874)
!12876 = !DILocation(line: 955, column: 56, scope: !12874)
!12877 = !DILocation(line: 955, column: 78, scope: !12874)
!12878 = !DILocation(line: 955, column: 36, scope: !12874)
!12879 = !DILocation(line: 955, column: 33, scope: !12874)
!12880 = !DILocation(line: 955, column: 3, scope: !12874)
!12881 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12298, file: !12298, line: 964, type: !7145, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !437)
!12882 = !DILocation(line: 967, column: 11, scope: !12881)
!12883 = !DILocation(line: 967, column: 55, scope: !12881)
!12884 = !DILocation(line: 967, column: 77, scope: !12881)
!12885 = !DILocation(line: 967, column: 35, scope: !12881)
!12886 = !DILocation(line: 967, column: 32, scope: !12881)
!12887 = !DILocation(line: 967, column: 3, scope: !12881)
!12888 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12298, file: !12298, line: 977, type: !12889, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !12891)
!12889 = !DISubroutineType(types: !12890)
!12890 = !{null, !12306}
!12891 = !{!12892}
!12892 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12888, file: !12298, line: 977, type: !12306)
!12893 = !DILocation(line: 0, scope: !12888)
!12894 = !DILocation(line: 980, column: 22, scope: !12888)
!12895 = !DILocation(line: 980, column: 37, scope: !12888)
!12896 = !DILocation(line: 983, column: 12, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12888, file: !12298, line: 983, column: 6)
!12898 = !DILocation(line: 983, column: 15, scope: !12897)
!12899 = !DILocation(line: 983, column: 31, scope: !12897)
!12900 = !DILocation(line: 983, column: 6, scope: !12888)
!12901 = !DILocation(line: 985, column: 24, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12897, file: !12298, line: 984, column: 3)
!12903 = !DILocation(line: 985, column: 33, scope: !12902)
!12904 = !DILocation(line: 986, column: 3, scope: !12902)
!12905 = !DILocation(line: 987, column: 17, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12897, file: !12298, line: 987, column: 11)
!12907 = !DILocation(line: 987, column: 20, scope: !12906)
!12908 = !DILocation(line: 987, column: 35, scope: !12906)
!12909 = !DILocation(line: 0, scope: !12906)
!12910 = !DILocation(line: 987, column: 11, scope: !12897)
!12911 = !DILocation(line: 989, column: 33, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12906, file: !12298, line: 988, column: 3)
!12913 = !DILocation(line: 990, column: 3, scope: !12912)
!12914 = !DILocation(line: 993, column: 33, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12906, file: !12298, line: 992, column: 3)
!12916 = !DILocation(line: 997, column: 12, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12888, file: !12298, line: 997, column: 6)
!12918 = !DILocation(line: 997, column: 15, scope: !12917)
!12919 = !DILocation(line: 1003, column: 24, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12917, file: !12298, line: 1002, column: 3)
!12921 = !DILocation(line: 1003, column: 33, scope: !12920)
!12922 = !DILocation(line: 1006, column: 61, scope: !12888)
!12923 = !DILocation(line: 1006, column: 81, scope: !12888)
!12924 = !DILocation(line: 1006, column: 22, scope: !12888)
!12925 = !DILocation(line: 1006, column: 42, scope: !12888)
!12926 = !DILocation(line: 1009, column: 12, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12888, file: !12298, line: 1009, column: 6)
!12928 = !DILocation(line: 1009, column: 17, scope: !12927)
!12929 = !DILocation(line: 1009, column: 35, scope: !12927)
!12930 = !DILocation(line: 1009, column: 6, scope: !12888)
!12931 = !DILocation(line: 1011, column: 24, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12927, file: !12298, line: 1010, column: 3)
!12933 = !DILocation(line: 1011, column: 33, scope: !12932)
!12934 = !DILocation(line: 1012, column: 3, scope: !12932)
!12935 = !DILocation(line: 1013, column: 17, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12927, file: !12298, line: 1013, column: 11)
!12937 = !DILocation(line: 1013, column: 22, scope: !12936)
!12938 = !DILocation(line: 1013, column: 39, scope: !12936)
!12939 = !DILocation(line: 0, scope: !12936)
!12940 = !DILocation(line: 1013, column: 11, scope: !12927)
!12941 = !DILocation(line: 1015, column: 33, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12936, file: !12298, line: 1014, column: 3)
!12943 = !DILocation(line: 1016, column: 3, scope: !12942)
!12944 = !DILocation(line: 1019, column: 33, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12936, file: !12298, line: 1018, column: 3)
!12946 = !DILocation(line: 1023, column: 12, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12888, file: !12298, line: 1023, column: 6)
!12948 = !DILocation(line: 1023, column: 16, scope: !12947)
!12949 = !DILocation(line: 1029, column: 24, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12947, file: !12298, line: 1028, column: 3)
!12951 = !DILocation(line: 1029, column: 33, scope: !12950)
!12952 = !DILocation(line: 1033, column: 12, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12888, file: !12298, line: 1033, column: 6)
!12954 = !DILocation(line: 1033, column: 15, scope: !12953)
!12955 = !DILocation(line: 1033, column: 30, scope: !12953)
!12956 = !DILocation(line: 1033, column: 6, scope: !12888)
!12957 = !DILocation(line: 1039, column: 28, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12953, file: !12298, line: 1038, column: 3)
!12959 = !DILocation(line: 1039, column: 37, scope: !12958)
!12960 = !DILocation(line: 1041, column: 54, scope: !12888)
!12961 = !DILocation(line: 1041, column: 62, scope: !12888)
!12962 = !DILocation(line: 1041, column: 26, scope: !12888)
!12963 = !DILocation(line: 1041, column: 36, scope: !12888)
!12964 = !DILocation(line: 1042, column: 49, scope: !12888)
!12965 = !DILocation(line: 1042, column: 57, scope: !12888)
!12966 = !DILocation(line: 1042, column: 26, scope: !12888)
!12967 = !DILocation(line: 1042, column: 31, scope: !12888)
!12968 = !DILocation(line: 1043, column: 50, scope: !12888)
!12969 = !DILocation(line: 1043, column: 78, scope: !12888)
!12970 = !DILocation(line: 1043, column: 26, scope: !12888)
!12971 = !DILocation(line: 1043, column: 31, scope: !12888)
!12972 = !DILocation(line: 1044, column: 52, scope: !12888)
!12973 = !DILocation(line: 1044, column: 102, scope: !12888)
!12974 = !DILocation(line: 1044, column: 109, scope: !12888)
!12975 = !DILocation(line: 1044, column: 26, scope: !12888)
!12976 = !DILocation(line: 1044, column: 31, scope: !12888)
!12977 = !DILocation(line: 1045, column: 50, scope: !12888)
!12978 = !DILocation(line: 1045, column: 78, scope: !12888)
!12979 = !DILocation(line: 1045, column: 26, scope: !12888)
!12980 = !DILocation(line: 1045, column: 31, scope: !12888)
!12981 = !DILocation(line: 1046, column: 1, scope: !12888)
!12982 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12298, file: !12298, line: 1056, type: !12983, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !12985)
!12983 = !DISubroutineType(types: !12984)
!12984 = !{null, !12667, !1229}
!12985 = !{!12986, !12987}
!12986 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12982, file: !12298, line: 1056, type: !12667)
!12987 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12982, file: !12298, line: 1056, type: !1229)
!12988 = !DILocation(line: 0, scope: !12982)
!12989 = !DILocation(line: 1059, column: 22, scope: !12982)
!12990 = !DILocation(line: 1059, column: 32, scope: !12982)
!12991 = !DILocation(line: 1062, column: 53, scope: !12982)
!12992 = !DILocation(line: 1062, column: 58, scope: !12982)
!12993 = !DILocation(line: 1062, column: 22, scope: !12982)
!12994 = !DILocation(line: 1062, column: 35, scope: !12982)
!12995 = !DILocation(line: 1065, column: 54, scope: !12982)
!12996 = !DILocation(line: 1065, column: 59, scope: !12982)
!12997 = !DILocation(line: 1065, column: 22, scope: !12982)
!12998 = !DILocation(line: 1065, column: 36, scope: !12982)
!12999 = !DILocation(line: 1068, column: 55, scope: !12982)
!13000 = !DILocation(line: 1068, column: 60, scope: !12982)
!13001 = !DILocation(line: 1068, column: 22, scope: !12982)
!13002 = !DILocation(line: 1068, column: 37, scope: !12982)
!13003 = !DILocation(line: 1071, column: 56, scope: !12982)
!13004 = !DILocation(line: 1071, column: 79, scope: !12982)
!13005 = !DILocation(line: 1071, column: 22, scope: !12982)
!13006 = !DILocation(line: 1071, column: 37, scope: !12982)
!13007 = !DILocation(line: 1074, column: 34, scope: !12982)
!13008 = !DILocation(line: 1074, column: 38, scope: !12982)
!13009 = !DILocation(line: 1074, column: 14, scope: !12982)
!13010 = !DILocation(line: 1075, column: 1, scope: !12982)
!13011 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12298, file: !12298, line: 1082, type: !3406, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !437)
!13012 = !DILocation(line: 1085, column: 6, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13011, file: !12298, line: 1085, column: 6)
!13014 = !DILocation(line: 1085, column: 6, scope: !13011)
!13015 = !DILocation(line: 1088, column: 5, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13013, file: !12298, line: 1086, column: 3)
!13017 = !DILocation(line: 1091, column: 5, scope: !13016)
!13018 = !DILocation(line: 1092, column: 3, scope: !13016)
!13019 = !DILocation(line: 1093, column: 1, scope: !13011)
!13020 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12298, file: !12298, line: 1099, type: !3406, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3217, retainedNodes: !437)
!13021 = !DILocation(line: 1104, column: 1, scope: !13020)
!13022 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13023, file: !13023, line: 257, type: !7155, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13024)
!13023 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13024 = !{!13025}
!13025 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13022, file: !13023, line: 257, type: !113)
!13026 = !DILocation(line: 0, scope: !13022)
!13027 = !DILocation(line: 260, column: 3, scope: !13022)
!13028 = !DILocation(line: 261, column: 1, scope: !13022)
!13029 = distinct !DISubprogram(name: "LL_InitTick", scope: !13030, file: !13030, line: 260, type: !10695, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13031)
!13030 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13031 = !{!13032, !13033}
!13032 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13029, file: !13030, line: 260, type: !113)
!13033 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13029, file: !13030, line: 260, type: !113)
!13034 = !DILocation(line: 0, scope: !13029)
!13035 = !DILocation(line: 263, column: 46, scope: !13029)
!13036 = !DILocation(line: 263, column: 55, scope: !13029)
!13037 = !DILocation(line: 263, column: 18, scope: !13029)
!13038 = !DILocation(line: 264, column: 18, scope: !13029)
!13039 = !DILocation(line: 265, column: 18, scope: !13029)
!13040 = !DILocation(line: 267, column: 1, scope: !13029)
!13041 = distinct !DISubprogram(name: "LL_mDelay", scope: !13023, file: !13023, line: 273, type: !7155, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13042)
!13042 = !{!13043, !13044}
!13043 = !DILocalVariable(name: "Delay", arg: 1, scope: !13041, file: !13023, line: 273, type: !113)
!13044 = !DILocalVariable(name: "tmp", scope: !13041, file: !13023, line: 275, type: !570)
!13045 = !DILocation(line: 0, scope: !13041)
!13046 = !DILocation(line: 275, column: 3, scope: !13041)
!13047 = !DILocation(line: 275, column: 18, scope: !13041)
!13048 = !DILocation(line: 275, column: 33, scope: !13041)
!13049 = !DILocation(line: 277, column: 10, scope: !13041)
!13050 = !DILocation(line: 280, column: 12, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13041, file: !13023, line: 280, column: 6)
!13052 = !DILocation(line: 285, column: 3, scope: !13041)
!13053 = !DILocation(line: 287, column: 18, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !13023, line: 287, column: 8)
!13055 = distinct !DILexicalBlock(scope: !13041, file: !13023, line: 286, column: 3)
!13056 = !DILocation(line: 292, column: 1, scope: !13041)
!13057 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13023, file: !13023, line: 323, type: !7155, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13058)
!13058 = !{!13059}
!13059 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13057, file: !13023, line: 323, type: !113)
!13060 = !DILocation(line: 0, scope: !13057)
!13061 = !DILocation(line: 326, column: 19, scope: !13057)
!13062 = !DILocation(line: 327, column: 1, scope: !13057)
!13063 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13023, file: !13023, line: 338, type: !13064, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13067)
!13064 = !DISubroutineType(types: !13065)
!13065 = !{!13066, !113}
!13066 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1175, line: 201, baseType: !1174)
!13067 = !{!13068, !13069, !13070, !13071, !13072}
!13068 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13063, file: !13023, line: 338, type: !113)
!13069 = !DILocalVariable(name: "timeout", scope: !13063, file: !13023, line: 340, type: !113)
!13070 = !DILocalVariable(name: "getlatency", scope: !13063, file: !13023, line: 341, type: !113)
!13071 = !DILocalVariable(name: "latency", scope: !13063, file: !13023, line: 342, type: !113)
!13072 = !DILocalVariable(name: "status", scope: !13063, file: !13023, line: 343, type: !13066)
!13073 = !DILocation(line: 0, scope: !13063)
!13074 = !DILocation(line: 347, column: 21, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13063, file: !13023, line: 347, column: 6)
!13076 = !DILocation(line: 347, column: 6, scope: !13063)
!13077 = !DILocation(line: 353, column: 8, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13079, file: !13023, line: 353, column: 8)
!13079 = distinct !DILexicalBlock(scope: !13075, file: !13023, line: 352, column: 3)
!13080 = !DILocation(line: 353, column: 40, scope: !13078)
!13081 = !DILocation(line: 353, column: 8, scope: !13079)
!13082 = !DILocation(line: 374, column: 55, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13084, file: !13023, line: 374, column: 10)
!13084 = distinct !DILexicalBlock(scope: !13078, file: !13023, line: 354, column: 5)
!13085 = !DILocation(line: 368, column: 26, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13084, file: !13023, line: 368, column: 10)
!13087 = !DILocation(line: 368, column: 55, scope: !13086)
!13088 = !DILocation(line: 380, column: 57, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13090, file: !13023, line: 380, column: 12)
!13090 = distinct !DILexicalBlock(scope: !13083, file: !13023, line: 379, column: 7)
!13091 = !DILocation(line: 387, column: 8, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13079, file: !13023, line: 387, column: 8)
!13093 = !DILocation(line: 387, column: 40, scope: !13092)
!13094 = !DILocation(line: 387, column: 8, scope: !13079)
!13095 = !DILocation(line: 407, column: 26, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13097, file: !13023, line: 407, column: 10)
!13097 = distinct !DILexicalBlock(scope: !13092, file: !13023, line: 388, column: 5)
!13098 = !DILocation(line: 407, column: 55, scope: !13096)
!13099 = !DILocation(line: 413, column: 28, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13101, file: !13023, line: 413, column: 12)
!13101 = distinct !DILexicalBlock(scope: !13096, file: !13023, line: 412, column: 7)
!13102 = !DILocation(line: 413, column: 57, scope: !13100)
!13103 = !DILocation(line: 0, scope: !13079)
!13104 = !DILocation(line: 420, column: 8, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13079, file: !13023, line: 420, column: 8)
!13106 = !DILocation(line: 420, column: 40, scope: !13105)
!13107 = !DILocation(line: 420, column: 8, scope: !13079)
!13108 = !DILocation(line: 429, column: 26, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13110, file: !13023, line: 429, column: 10)
!13110 = distinct !DILexicalBlock(scope: !13105, file: !13023, line: 421, column: 5)
!13111 = !DILocation(line: 429, column: 55, scope: !13109)
!13112 = !DILocation(line: 435, column: 28, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13114, file: !13023, line: 435, column: 12)
!13114 = distinct !DILexicalBlock(scope: !13109, file: !13023, line: 434, column: 7)
!13115 = !DILocation(line: 435, column: 57, scope: !13113)
!13116 = !DILocation(line: 444, column: 5, scope: !13079)
!13117 = !DILocation(line: 448, column: 5, scope: !13079)
!13118 = !DILocation(line: 451, column: 18, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13079, file: !13023, line: 449, column: 5)
!13120 = !DILocation(line: 452, column: 12, scope: !13119)
!13121 = !DILocation(line: 453, column: 26, scope: !13079)
!13122 = !DILocation(line: 453, column: 38, scope: !13079)
!13123 = !DILocation(line: 453, column: 5, scope: !13119)
!13124 = distinct !{!13124, !13117, !13125}
!13125 = !DILocation(line: 453, column: 54, scope: !13079)
!13126 = !DILocation(line: 0, scope: !13075)
!13127 = !DILocation(line: 464, column: 3, scope: !13063)
!13128 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13129, file: !13129, line: 519, type: !7145, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13129 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13130 = !DILocation(line: 521, column: 21, scope: !13128)
!13131 = !DILocation(line: 521, column: 3, scope: !13128)
!13132 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6767, file: !6767, line: 1543, type: !7155, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13133)
!13133 = !{!13134}
!13134 = !DILocalVariable(name: "Latency", arg: 1, scope: !13132, file: !6767, line: 1543, type: !113)
!13135 = !DILocation(line: 0, scope: !13132)
!13136 = !DILocation(line: 1545, column: 3, scope: !13132)
!13137 = !DILocation(line: 1546, column: 1, scope: !13132)
!13138 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6767, file: !6767, line: 1569, type: !7145, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13139 = !DILocation(line: 1571, column: 21, scope: !13138)
!13140 = !DILocation(line: 1571, column: 3, scope: !13138)
!13141 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13023, file: !13023, line: 483, type: !13142, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13158)
!13142 = !DISubroutineType(types: !13143)
!13143 = !{!13066, !13144, !13151}
!13144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13145, size: 32)
!13145 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13030, line: 114, baseType: !13146)
!13146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13030, line: 94, size: 96, elements: !13147)
!13147 = !{!13148, !13149, !13150}
!13148 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13146, file: !13030, line: 96, baseType: !113, size: 32)
!13149 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13146, file: !13030, line: 102, baseType: !113, size: 32, offset: 32)
!13150 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13146, file: !13030, line: 109, baseType: !113, size: 32, offset: 64)
!13151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13152, size: 32)
!13152 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13030, line: 139, baseType: !13153)
!13153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13030, line: 119, size: 96, elements: !13154)
!13154 = !{!13155, !13156, !13157}
!13155 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13153, file: !13030, line: 121, baseType: !113, size: 32)
!13156 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13153, file: !13030, line: 127, baseType: !113, size: 32, offset: 32)
!13157 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13153, file: !13030, line: 133, baseType: !113, size: 32, offset: 64)
!13158 = !{!13159, !13160, !13161, !13162}
!13159 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13141, file: !13023, line: 483, type: !13144)
!13160 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13141, file: !13023, line: 484, type: !13151)
!13161 = !DILocalVariable(name: "status", scope: !13141, file: !13023, line: 486, type: !13066)
!13162 = !DILocalVariable(name: "pllfreq", scope: !13141, file: !13023, line: 487, type: !113)
!13163 = !DILocation(line: 0, scope: !13141)
!13164 = !DILocation(line: 490, column: 6, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13141, file: !13023, line: 490, column: 6)
!13166 = !DILocation(line: 490, column: 25, scope: !13165)
!13167 = !DILocation(line: 490, column: 6, scope: !13141)
!13168 = !DILocation(line: 493, column: 15, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13165, file: !13023, line: 491, column: 3)
!13170 = !DILocation(line: 496, column: 8, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13169, file: !13023, line: 496, column: 8)
!13172 = !DILocation(line: 496, column: 29, scope: !13171)
!13173 = !DILocation(line: 496, column: 8, scope: !13169)
!13174 = !DILocation(line: 498, column: 7, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13171, file: !13023, line: 497, column: 5)
!13176 = !DILocation(line: 499, column: 7, scope: !13175)
!13177 = !DILocation(line: 499, column: 14, scope: !13175)
!13178 = !DILocation(line: 499, column: 35, scope: !13175)
!13179 = distinct !{!13179, !13176, !13180}
!13180 = !DILocation(line: 502, column: 7, scope: !13175)
!13181 = !DILocation(line: 506, column: 76, scope: !13169)
!13182 = !DILocation(line: 506, column: 103, scope: !13169)
!13183 = !DILocation(line: 507, column: 54, scope: !13169)
!13184 = !DILocation(line: 506, column: 5, scope: !13169)
!13185 = !DILocation(line: 510, column: 14, scope: !13169)
!13186 = !DILocation(line: 511, column: 3, scope: !13169)
!13187 = !DILocation(line: 0, scope: !13165)
!13188 = !DILocation(line: 518, column: 3, scope: !13141)
!13189 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13023, file: !13023, line: 642, type: !13190, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13192)
!13190 = !DISubroutineType(types: !13191)
!13191 = !{!13066}
!13192 = !{!13193}
!13193 = !DILocalVariable(name: "status", scope: !13189, file: !13023, line: 644, type: !13066)
!13194 = !DILocation(line: 0, scope: !13189)
!13195 = !DILocation(line: 647, column: 6, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13189, file: !13023, line: 647, column: 6)
!13197 = !DILocation(line: 647, column: 27, scope: !13196)
!13198 = !DILocation(line: 663, column: 6, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13189, file: !13023, line: 663, column: 6)
!13200 = !DILocation(line: 663, column: 30, scope: !13199)
!13201 = !DILocation(line: 663, column: 6, scope: !13189)
!13202 = !DILocation(line: 669, column: 3, scope: !13189)
!13203 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13023, file: !13023, line: 611, type: !13204, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13206)
!13204 = !DISubroutineType(types: !13205)
!13205 = !{!113, !113, !13144}
!13206 = !{!13207, !13208, !13209}
!13207 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13203, file: !13023, line: 611, type: !113)
!13208 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13203, file: !13023, line: 611, type: !13144)
!13209 = !DILocalVariable(name: "pllfreq", scope: !13203, file: !13023, line: 613, type: !113)
!13210 = !DILocation(line: 0, scope: !13203)
!13211 = !DILocation(line: 622, column: 56, scope: !13203)
!13212 = !DILocation(line: 622, column: 61, scope: !13203)
!13213 = !DILocation(line: 622, column: 32, scope: !13203)
!13214 = !DILocation(line: 626, column: 45, scope: !13203)
!13215 = !DILocation(line: 626, column: 50, scope: !13203)
!13216 = !DILocation(line: 626, column: 21, scope: !13203)
!13217 = !DILocation(line: 630, column: 47, scope: !13203)
!13218 = !DILocation(line: 630, column: 82, scope: !13203)
!13219 = !DILocation(line: 630, column: 21, scope: !13203)
!13220 = !DILocation(line: 633, column: 3, scope: !13203)
!13221 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10035, file: !10035, line: 3007, type: !7145, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13222 = !DILocation(line: 3009, column: 11, scope: !13221)
!13223 = !DILocation(line: 3009, column: 44, scope: !13221)
!13224 = !DILocation(line: 3009, column: 3, scope: !13221)
!13225 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10035, file: !10035, line: 2987, type: !3406, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13226 = !DILocation(line: 2989, column: 3, scope: !13225)
!13227 = !DILocation(line: 2990, column: 1, scope: !13225)
!13228 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10035, file: !10035, line: 4304, type: !10169, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13229)
!13229 = !{!13230, !13231, !13232, !13233}
!13230 = !DILocalVariable(name: "Source", arg: 1, scope: !13228, file: !10035, line: 4304, type: !113)
!13231 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13228, file: !10035, line: 4304, type: !113)
!13232 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13228, file: !10035, line: 4304, type: !113)
!13233 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13228, file: !10035, line: 4304, type: !113)
!13234 = !DILocation(line: 0, scope: !13228)
!13235 = !DILocation(line: 4306, column: 3, scope: !13228)
!13236 = !DILocation(line: 4308, column: 3, scope: !13228)
!13237 = !DILocation(line: 4312, column: 1, scope: !13228)
!13238 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13023, file: !13023, line: 681, type: !13239, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13241)
!13239 = !DISubroutineType(types: !13240)
!13240 = !{!13066, !113, !13151}
!13241 = !{!13242, !13243, !13244, !13245}
!13242 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13238, file: !13023, line: 681, type: !113)
!13243 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13238, file: !13023, line: 681, type: !13151)
!13244 = !DILocalVariable(name: "status", scope: !13238, file: !13023, line: 683, type: !13066)
!13245 = !DILocalVariable(name: "hclk_frequency", scope: !13238, file: !13023, line: 684, type: !113)
!13246 = !DILocation(line: 0, scope: !13238)
!13247 = !DILocation(line: 691, column: 20, scope: !13238)
!13248 = !DILocation(line: 694, column: 6, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13238, file: !13023, line: 694, column: 6)
!13250 = !DILocation(line: 694, column: 22, scope: !13249)
!13251 = !DILocation(line: 694, column: 6, scope: !13238)
!13252 = !DILocation(line: 697, column: 14, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13249, file: !13023, line: 695, column: 3)
!13254 = !DILocation(line: 701, column: 13, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13238, file: !13023, line: 701, column: 6)
!13256 = !DILocation(line: 701, column: 6, scope: !13238)
!13257 = !DILocation(line: 704, column: 5, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13255, file: !13023, line: 702, column: 3)
!13259 = !DILocation(line: 705, column: 5, scope: !13258)
!13260 = !DILocation(line: 705, column: 12, scope: !13258)
!13261 = !DILocation(line: 705, column: 33, scope: !13258)
!13262 = distinct !{!13262, !13259, !13263}
!13263 = !DILocation(line: 708, column: 5, scope: !13258)
!13264 = !DILocation(line: 711, column: 49, scope: !13258)
!13265 = !DILocation(line: 711, column: 5, scope: !13258)
!13266 = !DILocation(line: 712, column: 5, scope: !13258)
!13267 = !DILocation(line: 713, column: 5, scope: !13258)
!13268 = !DILocation(line: 713, column: 12, scope: !13258)
!13269 = !DILocation(line: 713, column: 37, scope: !13258)
!13270 = distinct !{!13270, !13267, !13271}
!13271 = !DILocation(line: 716, column: 5, scope: !13258)
!13272 = !DILocation(line: 719, column: 50, scope: !13258)
!13273 = !DILocation(line: 719, column: 5, scope: !13258)
!13274 = !DILocation(line: 720, column: 50, scope: !13258)
!13275 = !DILocation(line: 720, column: 5, scope: !13258)
!13276 = !DILocation(line: 721, column: 3, scope: !13258)
!13277 = !DILocation(line: 724, column: 6, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13238, file: !13023, line: 724, column: 6)
!13279 = !DILocation(line: 724, column: 22, scope: !13278)
!13280 = !DILocation(line: 724, column: 6, scope: !13238)
!13281 = !DILocation(line: 727, column: 14, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13278, file: !13023, line: 725, column: 3)
!13283 = !DILocation(line: 728, column: 3, scope: !13282)
!13284 = !DILocation(line: 731, column: 13, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13238, file: !13023, line: 731, column: 6)
!13286 = !DILocation(line: 731, column: 6, scope: !13238)
!13287 = !DILocation(line: 733, column: 5, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13285, file: !13023, line: 732, column: 3)
!13289 = !DILocation(line: 734, column: 3, scope: !13288)
!13290 = !DILocation(line: 736, column: 3, scope: !13238)
!13291 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10035, file: !10035, line: 4184, type: !3406, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13292 = !DILocation(line: 4186, column: 3, scope: !13291)
!13293 = !DILocation(line: 4187, column: 1, scope: !13291)
!13294 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10035, file: !10035, line: 4205, type: !7145, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13295 = !DILocation(line: 4207, column: 11, scope: !13294)
!13296 = !DILocation(line: 4207, column: 44, scope: !13294)
!13297 = !DILocation(line: 4207, column: 3, scope: !13294)
!13298 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10035, file: !10035, line: 3224, type: !7155, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13299)
!13299 = !{!13300}
!13300 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13298, file: !10035, line: 3224, type: !113)
!13301 = !DILocation(line: 0, scope: !13298)
!13302 = !DILocation(line: 3226, column: 3, scope: !13298)
!13303 = !DILocation(line: 3227, column: 1, scope: !13298)
!13304 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10035, file: !10035, line: 3188, type: !7155, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13305)
!13305 = !{!13306}
!13306 = !DILocalVariable(name: "Source", arg: 1, scope: !13304, file: !10035, line: 3188, type: !113)
!13307 = !DILocation(line: 0, scope: !13304)
!13308 = !DILocation(line: 3190, column: 3, scope: !13304)
!13309 = !DILocation(line: 3191, column: 1, scope: !13304)
!13310 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10035, file: !10035, line: 3204, type: !7145, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13311 = !DILocation(line: 3206, column: 21, scope: !13310)
!13312 = !DILocation(line: 3206, column: 3, scope: !13310)
!13313 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10035, file: !10035, line: 3240, type: !7155, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13314)
!13314 = !{!13315}
!13315 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13313, file: !10035, line: 3240, type: !113)
!13316 = !DILocation(line: 0, scope: !13313)
!13317 = !DILocation(line: 3242, column: 3, scope: !13313)
!13318 = !DILocation(line: 3243, column: 1, scope: !13313)
!13319 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10035, file: !10035, line: 3256, type: !7155, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13320)
!13320 = !{!13321}
!13321 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13319, file: !10035, line: 3256, type: !113)
!13322 = !DILocation(line: 0, scope: !13319)
!13323 = !DILocation(line: 3258, column: 3, scope: !13319)
!13324 = !DILocation(line: 3259, column: 1, scope: !13319)
!13325 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10035, file: !10035, line: 5153, type: !7145, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13326 = !DILocation(line: 5155, column: 11, scope: !13325)
!13327 = !DILocation(line: 5155, column: 47, scope: !13325)
!13328 = !DILocation(line: 5155, column: 3, scope: !13325)
!13329 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13023, file: !13023, line: 540, type: !13330, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13332)
!13330 = !DISubroutineType(types: !13331)
!13331 = !{!13066, !113, !113, !13144, !13151}
!13332 = !{!13333, !13334, !13335, !13336, !13337, !13338}
!13333 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13329, file: !13023, line: 540, type: !113)
!13334 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13329, file: !13023, line: 540, type: !113)
!13335 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13329, file: !13023, line: 541, type: !13144)
!13336 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13329, file: !13023, line: 541, type: !13151)
!13337 = !DILocalVariable(name: "status", scope: !13329, file: !13023, line: 543, type: !13066)
!13338 = !DILocalVariable(name: "pllfreq", scope: !13329, file: !13023, line: 544, type: !113)
!13339 = !DILocation(line: 0, scope: !13329)
!13340 = !DILocation(line: 551, column: 6, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13329, file: !13023, line: 551, column: 6)
!13342 = !DILocation(line: 551, column: 25, scope: !13341)
!13343 = !DILocation(line: 551, column: 6, scope: !13329)
!13344 = !DILocation(line: 554, column: 15, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13341, file: !13023, line: 552, column: 3)
!13346 = !DILocation(line: 557, column: 8, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13345, file: !13023, line: 557, column: 8)
!13348 = !DILocation(line: 557, column: 29, scope: !13347)
!13349 = !DILocation(line: 557, column: 8, scope: !13345)
!13350 = !DILocation(line: 560, column: 20, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !13023, line: 560, column: 10)
!13352 = distinct !DILexicalBlock(scope: !13347, file: !13023, line: 558, column: 5)
!13353 = !DILocation(line: 560, column: 10, scope: !13352)
!13354 = !DILocation(line: 562, column: 9, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13351, file: !13023, line: 561, column: 7)
!13356 = !DILocation(line: 563, column: 7, scope: !13355)
!13357 = !DILocation(line: 566, column: 9, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13351, file: !13023, line: 565, column: 7)
!13359 = !DILocation(line: 570, column: 7, scope: !13352)
!13360 = !DILocation(line: 571, column: 7, scope: !13352)
!13361 = !DILocation(line: 571, column: 14, scope: !13352)
!13362 = !DILocation(line: 571, column: 35, scope: !13352)
!13363 = distinct !{!13363, !13360, !13364}
!13364 = !DILocation(line: 574, column: 7, scope: !13352)
!13365 = !DILocation(line: 578, column: 76, scope: !13345)
!13366 = !DILocation(line: 578, column: 103, scope: !13345)
!13367 = !DILocation(line: 579, column: 54, scope: !13345)
!13368 = !DILocation(line: 578, column: 5, scope: !13345)
!13369 = !DILocation(line: 582, column: 14, scope: !13345)
!13370 = !DILocation(line: 583, column: 3, scope: !13345)
!13371 = !DILocation(line: 0, scope: !13341)
!13372 = !DILocation(line: 590, column: 3, scope: !13329)
!13373 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10035, file: !10035, line: 2969, type: !7145, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13374 = !DILocation(line: 2971, column: 11, scope: !13373)
!13375 = !DILocation(line: 2971, column: 44, scope: !13373)
!13376 = !DILocation(line: 2971, column: 3, scope: !13373)
!13377 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10035, file: !10035, line: 2929, type: !3406, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13378 = !DILocation(line: 2931, column: 3, scope: !13377)
!13379 = !DILocation(line: 2932, column: 1, scope: !13377)
!13380 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10035, file: !10035, line: 2939, type: !3406, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13381 = !DILocation(line: 2941, column: 3, scope: !13380)
!13382 = !DILocation(line: 2942, column: 1, scope: !13380)
!13383 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10035, file: !10035, line: 2949, type: !3406, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !437)
!13384 = !DILocation(line: 2951, column: 3, scope: !13383)
!13385 = !DILocation(line: 2952, column: 1, scope: !13383)
!13386 = distinct !DISubprogram(name: "z_device_state_init", scope: !13387, file: !13387, line: 23, type: !3406, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13388)
!13387 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13388 = !{!13389}
!13389 = !DILocalVariable(name: "dev", scope: !13386, file: !13387, line: 25, type: !13390)
!13390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13391, size: 32)
!13391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13392)
!13392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !13393)
!13393 = !{!13394, !13395, !13396, !13397, !13403, !13404}
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13392, file: !411, line: 380, baseType: !105, size: 32)
!13395 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13392, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!13396 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13392, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!13397 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13392, file: !411, line: 386, baseType: !13398, size: 32, offset: 96)
!13398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13399, size: 32)
!13399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !13400)
!13400 = !{!13401, !13402}
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13399, file: !411, line: 359, baseType: !164, size: 8)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13399, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13392, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13392, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!13405 = !DILocation(line: 0, scope: !13386)
!13406 = !DILocation(line: 31, column: 1, scope: !13386)
!13407 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13387, file: !13387, line: 33, type: !13408, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13410)
!13408 = !DISubroutineType(types: !13409)
!13409 = !{!13390, !105}
!13410 = !{!13411, !13412}
!13411 = !DILocalVariable(name: "name", arg: 1, scope: !13407, file: !13387, line: 33, type: !105)
!13412 = !DILocalVariable(name: "dev", scope: !13407, file: !13387, line: 35, type: !13390)
!13413 = !DILocation(line: 0, scope: !13407)
!13414 = !DILocation(line: 40, column: 12, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !13407, file: !13387, line: 40, column: 6)
!13416 = !DILocation(line: 40, column: 21, scope: !13415)
!13417 = !DILocation(line: 40, column: 25, scope: !13415)
!13418 = !DILocation(line: 40, column: 33, scope: !13415)
!13419 = !DILocation(line: 40, column: 6, scope: !13407)
!13420 = !DILocation(line: 55, column: 2, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13407, file: !13387, line: 55, column: 2)
!13422 = !DILocation(line: 50, column: 7, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13424, file: !13387, line: 50, column: 7)
!13424 = distinct !DILexicalBlock(scope: !13425, file: !13387, line: 49, column: 57)
!13425 = distinct !DILexicalBlock(scope: !13426, file: !13387, line: 49, column: 2)
!13426 = distinct !DILexicalBlock(scope: !13407, file: !13387, line: 49, column: 2)
!13427 = !DILocation(line: 50, column: 30, scope: !13423)
!13428 = !DILocation(line: 50, column: 39, scope: !13423)
!13429 = !DILocation(line: 50, column: 44, scope: !13423)
!13430 = !DILocation(line: 50, column: 7, scope: !13424)
!13431 = !DILocation(line: 49, column: 53, scope: !13425)
!13432 = !DILocation(line: 49, column: 33, scope: !13425)
!13433 = !DILocation(line: 49, column: 2, scope: !13426)
!13434 = distinct !{!13434, !13433, !13435}
!13435 = !DILocation(line: 53, column: 2, scope: !13426)
!13436 = !DILocation(line: 56, column: 7, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !13387, line: 56, column: 7)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !13387, line: 55, column: 57)
!13439 = distinct !DILexicalBlock(scope: !13421, file: !13387, line: 55, column: 2)
!13440 = !DILocation(line: 56, column: 30, scope: !13437)
!13441 = !DILocation(line: 56, column: 52, scope: !13437)
!13442 = !DILocation(line: 56, column: 34, scope: !13437)
!13443 = !DILocation(line: 56, column: 58, scope: !13437)
!13444 = !DILocation(line: 56, column: 7, scope: !13438)
!13445 = !DILocation(line: 55, column: 53, scope: !13439)
!13446 = !DILocation(line: 55, column: 33, scope: !13439)
!13447 = distinct !{!13447, !13420, !13448}
!13448 = !DILocation(line: 59, column: 2, scope: !13421)
!13449 = !DILocation(line: 62, column: 1, scope: !13407)
!13450 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13387, file: !13387, line: 93, type: !13451, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13453)
!13451 = !DISubroutineType(types: !13452)
!13452 = !{!422, !13390}
!13453 = !{!13454}
!13454 = !DILocalVariable(name: "dev", arg: 1, scope: !13450, file: !13387, line: 93, type: !13390)
!13455 = !DILocation(line: 0, scope: !13450)
!13456 = !DILocation(line: 99, column: 10, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13450, file: !13387, line: 99, column: 6)
!13458 = !DILocation(line: 99, column: 6, scope: !13450)
!13459 = !DILocation(line: 103, column: 14, scope: !13450)
!13460 = !DILocation(line: 103, column: 21, scope: !13450)
!13461 = !DILocation(line: 103, column: 33, scope: !13450)
!13462 = !DILocation(line: 103, column: 49, scope: !13450)
!13463 = !DILocation(line: 103, column: 58, scope: !13450)
!13464 = !DILocation(line: 104, column: 1, scope: !13450)
!13465 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13387, file: !13387, line: 87, type: !13466, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13469)
!13466 = !DISubroutineType(types: !13467)
!13467 = !{!439, !13468}
!13468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13390, size: 32)
!13469 = !{!13470}
!13470 = !DILocalVariable(name: "devices", arg: 1, scope: !13465, file: !13387, line: 87, type: !13468)
!13471 = !DILocation(line: 0, scope: !13465)
!13472 = !DILocation(line: 89, column: 11, scope: !13465)
!13473 = !DILocation(line: 90, column: 2, scope: !13465)
!13474 = distinct !DISubprogram(name: "device_required_foreach", scope: !13387, file: !13387, line: 125, type: !13475, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13481)
!13475 = !DISubroutineType(types: !13476)
!13476 = !{!108, !13390, !13477, !104}
!13477 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !411, line: 471, baseType: !13478)
!13478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13479, size: 32)
!13479 = !DISubroutineType(types: !13480)
!13480 = !{!108, !13390, !104}
!13481 = !{!13482, !13483, !13484, !13485, !13486}
!13482 = !DILocalVariable(name: "dev", arg: 1, scope: !13474, file: !13387, line: 125, type: !13390)
!13483 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13474, file: !13387, line: 126, type: !13477)
!13484 = !DILocalVariable(name: "context", arg: 3, scope: !13474, file: !13387, line: 127, type: !104)
!13485 = !DILocalVariable(name: "handle_count", scope: !13474, file: !13387, line: 129, type: !439)
!13486 = !DILocalVariable(name: "handles", scope: !13474, file: !13387, line: 130, type: !425)
!13487 = !DILocation(line: 0, scope: !13474)
!13488 = !DILocation(line: 129, column: 2, scope: !13474)
!13489 = !DILocation(line: 129, column: 9, scope: !13474)
!13490 = !DILocation(line: 130, column: 35, scope: !13474)
!13491 = !DILocation(line: 132, column: 33, scope: !13474)
!13492 = !DILocation(line: 132, column: 9, scope: !13474)
!13493 = !DILocation(line: 133, column: 1, scope: !13474)
!13494 = !DILocation(line: 132, column: 2, scope: !13474)
!13495 = distinct !DISubprogram(name: "device_required_handles_get", scope: !411, file: !411, line: 493, type: !13496, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13498)
!13496 = !DISubroutineType(types: !13497)
!13497 = !{!425, !13390, !2861}
!13498 = !{!13499, !13500, !13501, !13502}
!13499 = !DILocalVariable(name: "dev", arg: 1, scope: !13495, file: !411, line: 493, type: !13390)
!13500 = !DILocalVariable(name: "count", arg: 2, scope: !13495, file: !411, line: 493, type: !2861)
!13501 = !DILocalVariable(name: "rv", scope: !13495, file: !411, line: 495, type: !425)
!13502 = !DILocalVariable(name: "i", scope: !13503, file: !411, line: 498, type: !439)
!13503 = distinct !DILexicalBlock(scope: !13504, file: !411, line: 497, column: 18)
!13504 = distinct !DILexicalBlock(scope: !13495, file: !411, line: 497, column: 6)
!13505 = !DILocation(line: 0, scope: !13495)
!13506 = !DILocation(line: 495, column: 35, scope: !13495)
!13507 = !DILocation(line: 497, column: 9, scope: !13504)
!13508 = !DILocation(line: 497, column: 6, scope: !13495)
!13509 = !DILocation(line: 0, scope: !13503)
!13510 = !DILocation(line: 500, column: 11, scope: !13503)
!13511 = !DILocation(line: 500, column: 40, scope: !13503)
!13512 = !DILocation(line: 502, column: 4, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13503, file: !411, line: 501, column: 40)
!13514 = distinct !{!13514, !13515, !13516}
!13515 = !DILocation(line: 500, column: 3, scope: !13503)
!13516 = !DILocation(line: 503, column: 3, scope: !13503)
!13517 = !DILocation(line: 504, column: 10, scope: !13503)
!13518 = !DILocation(line: 505, column: 2, scope: !13503)
!13519 = !DILocation(line: 507, column: 2, scope: !13495)
!13520 = distinct !DISubprogram(name: "device_visitor", scope: !13387, file: !13387, line: 106, type: !13521, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13523)
!13521 = !DISubroutineType(types: !13522)
!13522 = !{!108, !425, !439, !13477, !104}
!13523 = !{!13524, !13525, !13526, !13527, !13528, !13530, !13533, !13534}
!13524 = !DILocalVariable(name: "handles", arg: 1, scope: !13520, file: !13387, line: 106, type: !425)
!13525 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13520, file: !13387, line: 107, type: !439)
!13526 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13520, file: !13387, line: 108, type: !13477)
!13527 = !DILocalVariable(name: "context", arg: 4, scope: !13520, file: !13387, line: 109, type: !104)
!13528 = !DILocalVariable(name: "i", scope: !13529, file: !13387, line: 112, type: !439)
!13529 = distinct !DILexicalBlock(scope: !13520, file: !13387, line: 112, column: 2)
!13530 = !DILocalVariable(name: "dh", scope: !13531, file: !13387, line: 113, type: !427)
!13531 = distinct !DILexicalBlock(scope: !13532, file: !13387, line: 112, column: 44)
!13532 = distinct !DILexicalBlock(scope: !13529, file: !13387, line: 112, column: 2)
!13533 = !DILocalVariable(name: "rdev", scope: !13531, file: !13387, line: 114, type: !13390)
!13534 = !DILocalVariable(name: "rc", scope: !13531, file: !13387, line: 115, type: !108)
!13535 = !DILocation(line: 0, scope: !13520)
!13536 = !DILocation(line: 0, scope: !13529)
!13537 = !DILocation(line: 112, column: 23, scope: !13532)
!13538 = !DILocation(line: 112, column: 2, scope: !13529)
!13539 = distinct !{!13539, !13538, !13540}
!13540 = !DILocation(line: 120, column: 2, scope: !13529)
!13541 = !DILocation(line: 113, column: 24, scope: !13531)
!13542 = !DILocation(line: 0, scope: !13531)
!13543 = !DILocation(line: 114, column: 31, scope: !13531)
!13544 = !DILocation(line: 115, column: 12, scope: !13531)
!13545 = !DILocation(line: 117, column: 10, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13531, file: !13387, line: 117, column: 7)
!13547 = !DILocation(line: 112, column: 39, scope: !13532)
!13548 = !DILocation(line: 123, column: 1, scope: !13520)
!13549 = distinct !DISubprogram(name: "device_from_handle", scope: !411, file: !411, line: 439, type: !13550, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13552)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{!13390, !427}
!13552 = !{!13553, !13554, !13555}
!13553 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13549, file: !411, line: 439, type: !427)
!13554 = !DILocalVariable(name: "dev", scope: !13549, file: !411, line: 443, type: !13390)
!13555 = !DILocalVariable(name: "numdev", scope: !13549, file: !411, line: 444, type: !439)
!13556 = !DILocation(line: 0, scope: !13549)
!13557 = !DILocation(line: 446, column: 7, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13549, file: !411, line: 446, column: 6)
!13559 = !DILocation(line: 446, column: 18, scope: !13558)
!13560 = !DILocation(line: 446, column: 23, scope: !13558)
!13561 = !DILocation(line: 450, column: 2, scope: !13549)
!13562 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13387, file: !13387, line: 135, type: !13475, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13563)
!13563 = !{!13564, !13565, !13566, !13567, !13568}
!13564 = !DILocalVariable(name: "dev", arg: 1, scope: !13562, file: !13387, line: 135, type: !13390)
!13565 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13562, file: !13387, line: 136, type: !13477)
!13566 = !DILocalVariable(name: "context", arg: 3, scope: !13562, file: !13387, line: 137, type: !104)
!13567 = !DILocalVariable(name: "handle_count", scope: !13562, file: !13387, line: 139, type: !439)
!13568 = !DILocalVariable(name: "handles", scope: !13562, file: !13387, line: 140, type: !425)
!13569 = !DILocation(line: 0, scope: !13562)
!13570 = !DILocation(line: 139, column: 2, scope: !13562)
!13571 = !DILocation(line: 139, column: 9, scope: !13562)
!13572 = !DILocation(line: 140, column: 35, scope: !13562)
!13573 = !DILocation(line: 142, column: 33, scope: !13562)
!13574 = !DILocation(line: 142, column: 9, scope: !13562)
!13575 = !DILocation(line: 143, column: 1, scope: !13562)
!13576 = !DILocation(line: 142, column: 2, scope: !13562)
!13577 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !411, file: !411, line: 573, type: !13496, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3366, retainedNodes: !13578)
!13578 = !{!13579, !13580, !13581, !13582, !13583}
!13579 = !DILocalVariable(name: "dev", arg: 1, scope: !13577, file: !411, line: 573, type: !13390)
!13580 = !DILocalVariable(name: "count", arg: 2, scope: !13577, file: !411, line: 573, type: !2861)
!13581 = !DILocalVariable(name: "rv", scope: !13577, file: !411, line: 575, type: !425)
!13582 = !DILocalVariable(name: "region", scope: !13577, file: !411, line: 576, type: !439)
!13583 = !DILocalVariable(name: "i", scope: !13577, file: !411, line: 577, type: !439)
!13584 = !DILocation(line: 0, scope: !13577)
!13585 = !DILocation(line: 575, column: 35, scope: !13577)
!13586 = !DILocation(line: 579, column: 9, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13577, file: !411, line: 579, column: 6)
!13588 = !DILocation(line: 579, column: 6, scope: !13577)
!13589 = !DILocation(line: 582, column: 8, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13591, file: !411, line: 582, column: 8)
!13591 = distinct !DILexicalBlock(scope: !13592, file: !411, line: 581, column: 23)
!13592 = distinct !DILexicalBlock(scope: !13587, file: !411, line: 579, column: 18)
!13593 = !DILocation(line: 582, column: 12, scope: !13590)
!13594 = !DILocation(line: 585, column: 6, scope: !13591)
!13595 = !DILocation(line: 0, scope: !13592)
!13596 = !DILocation(line: 581, column: 17, scope: !13592)
!13597 = !DILocation(line: 581, column: 3, scope: !13592)
!13598 = !DILocation(line: 588, column: 10, scope: !13592)
!13599 = !DILocation(line: 588, column: 16, scope: !13592)
!13600 = !DILocation(line: 589, column: 4, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13592, file: !411, line: 588, column: 39)
!13602 = !DILocation(line: 588, column: 3, scope: !13592)
!13603 = distinct !{!13603, !13602, !13604}
!13604 = !DILocation(line: 590, column: 3, scope: !13592)
!13605 = !DILocation(line: 591, column: 10, scope: !13592)
!13606 = !DILocation(line: 592, column: 2, scope: !13592)
!13607 = !DILocation(line: 575, column: 25, scope: !13577)
!13608 = !DILocation(line: 594, column: 2, scope: !13577)
!13609 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2157, file: !2157, line: 49, type: !13610, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !437)
!13610 = !DISubroutineType(types: !13611)
!13611 = !{!538}
!13612 = !DILocation(line: 51, column: 10, scope: !13609)
!13613 = !DILocation(line: 51, column: 20, scope: !13609)
!13614 = !DILocation(line: 51, column: 2, scope: !13609)
!13615 = distinct !DISubprogram(name: "coredump", scope: !3373, file: !3373, line: 209, type: !13616, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13762)
!13616 = !DISubroutineType(types: !13617)
!13617 = !{null, !32, !13618, !13662}
!13618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13619, size: 32)
!13619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13620)
!13620 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2989, line: 141, baseType: !13621)
!13621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2989, line: 97, size: 256, elements: !13622)
!13622 = !{!13623}
!13623 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13621, file: !2989, line: 107, baseType: !13624, size: 256)
!13624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2989, line: 98, size: 256, elements: !13625)
!13625 = !{!13626, !13631, !13636, !13641, !13646, !13651, !13656, !13661}
!13626 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !2989, line: 99, baseType: !13627, size: 32)
!13627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !2989, line: 99, size: 32, elements: !13628)
!13628 = !{!13629, !13630}
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13627, file: !2989, line: 99, baseType: !113, size: 32)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13627, file: !2989, line: 99, baseType: !113, size: 32)
!13631 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !2989, line: 100, baseType: !13632, size: 32, offset: 32)
!13632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !2989, line: 100, size: 32, elements: !13633)
!13633 = !{!13634, !13635}
!13634 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13632, file: !2989, line: 100, baseType: !113, size: 32)
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13632, file: !2989, line: 100, baseType: !113, size: 32)
!13636 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !2989, line: 101, baseType: !13637, size: 32, offset: 64)
!13637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !2989, line: 101, size: 32, elements: !13638)
!13638 = !{!13639, !13640}
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13637, file: !2989, line: 101, baseType: !113, size: 32)
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13637, file: !2989, line: 101, baseType: !113, size: 32)
!13641 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !2989, line: 102, baseType: !13642, size: 32, offset: 96)
!13642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !2989, line: 102, size: 32, elements: !13643)
!13643 = !{!13644, !13645}
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13642, file: !2989, line: 102, baseType: !113, size: 32)
!13645 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13642, file: !2989, line: 102, baseType: !113, size: 32)
!13646 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !2989, line: 103, baseType: !13647, size: 32, offset: 128)
!13647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !2989, line: 103, size: 32, elements: !13648)
!13648 = !{!13649, !13650}
!13649 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13647, file: !2989, line: 103, baseType: !113, size: 32)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13647, file: !2989, line: 103, baseType: !113, size: 32)
!13651 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !2989, line: 104, baseType: !13652, size: 32, offset: 160)
!13652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !2989, line: 104, size: 32, elements: !13653)
!13653 = !{!13654, !13655}
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13652, file: !2989, line: 104, baseType: !113, size: 32)
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13652, file: !2989, line: 104, baseType: !113, size: 32)
!13656 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !2989, line: 105, baseType: !13657, size: 32, offset: 192)
!13657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !2989, line: 105, size: 32, elements: !13658)
!13658 = !{!13659, !13660}
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13657, file: !2989, line: 105, baseType: !113, size: 32)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13657, file: !2989, line: 105, baseType: !113, size: 32)
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13624, file: !2989, line: 106, baseType: !113, size: 32, offset: 224)
!13662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13663, size: 32)
!13663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !645, line: 245, size: 1024, elements: !13664)
!13664 = !{!13665, !13723, !13735, !13736, !13737, !13738, !13744, !13757}
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13663, file: !645, line: 247, baseType: !13666, size: 384)
!13666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !645, line: 57, size: 384, elements: !13667)
!13667 = !{!13668, !13692, !13699, !13700, !13701, !13710, !13711, !13712}
!13668 = !DIDerivedType(tag: DW_TAG_member, scope: !13666, file: !645, line: 60, baseType: !13669, size: 64)
!13669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13666, file: !645, line: 60, size: 64, elements: !13670)
!13670 = !{!13671, !13686}
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13669, file: !645, line: 61, baseType: !13672, size: 64)
!13672 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !13673)
!13673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !13674)
!13674 = !{!13675, !13681}
!13675 = !DIDerivedType(tag: DW_TAG_member, scope: !13673, file: !367, line: 38, baseType: !13676, size: 32)
!13676 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13673, file: !367, line: 38, size: 32, elements: !13677)
!13677 = !{!13678, !13680}
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13676, file: !367, line: 39, baseType: !13679, size: 32)
!13679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13673, size: 32)
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13676, file: !367, line: 40, baseType: !13679, size: 32)
!13681 = !DIDerivedType(tag: DW_TAG_member, scope: !13673, file: !367, line: 42, baseType: !13682, size: 32, offset: 32)
!13682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13673, file: !367, line: 42, size: 32, elements: !13683)
!13683 = !{!13684, !13685}
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13682, file: !367, line: 43, baseType: !13679, size: 32)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13682, file: !367, line: 44, baseType: !13679, size: 32)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13669, file: !645, line: 62, baseType: !13687, size: 64)
!13687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !670, line: 49, size: 64, elements: !13688)
!13688 = !{!13689}
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13687, file: !670, line: 50, baseType: !13690, size: 64)
!13690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13691, size: 64, elements: !675)
!13691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13687, size: 32)
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13666, file: !645, line: 68, baseType: !13693, size: 32, offset: 64)
!13693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13694, size: 32)
!13694 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !13695)
!13695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !13696)
!13696 = !{!13697}
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13695, file: !363, line: 232, baseType: !13698, size: 64)
!13698 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !13673)
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13666, file: !645, line: 71, baseType: !164, size: 8, offset: 96)
!13700 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13666, file: !645, line: 74, baseType: !164, size: 8, offset: 104)
!13701 = !DIDerivedType(tag: DW_TAG_member, scope: !13666, file: !645, line: 90, baseType: !13702, size: 16, offset: 112)
!13702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13666, file: !645, line: 90, size: 16, elements: !13703)
!13703 = !{!13704, !13709}
!13704 = !DIDerivedType(tag: DW_TAG_member, scope: !13702, file: !645, line: 91, baseType: !13705, size: 16)
!13705 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13702, file: !645, line: 91, size: 16, elements: !13706)
!13706 = !{!13707, !13708}
!13707 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13705, file: !645, line: 96, baseType: !693, size: 8)
!13708 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13705, file: !645, line: 97, baseType: !164, size: 8, offset: 8)
!13709 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13702, file: !645, line: 100, baseType: !168, size: 16)
!13710 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13666, file: !645, line: 107, baseType: !113, size: 32, offset: 128)
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13666, file: !645, line: 127, baseType: !104, size: 32, offset: 160)
!13712 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13666, file: !645, line: 131, baseType: !13713, size: 192, offset: 192)
!13713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !13714)
!13714 = !{!13715, !13716, !13722}
!13715 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13713, file: !363, line: 245, baseType: !13672, size: 64)
!13716 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13713, file: !363, line: 246, baseType: !13717, size: 32, offset: 64)
!13717 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !13718)
!13718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13719, size: 32)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{null, !13721}
!13721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13713, size: 32)
!13722 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13713, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!13723 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13663, file: !645, line: 250, baseType: !13724, size: 288, offset: 384)
!13724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !712, line: 25, size: 288, elements: !13725)
!13725 = !{!13726, !13727, !13728, !13729, !13730, !13731, !13732, !13733, !13734}
!13726 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13724, file: !712, line: 26, baseType: !113, size: 32)
!13727 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13724, file: !712, line: 27, baseType: !113, size: 32, offset: 32)
!13728 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13724, file: !712, line: 28, baseType: !113, size: 32, offset: 64)
!13729 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13724, file: !712, line: 29, baseType: !113, size: 32, offset: 96)
!13730 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13724, file: !712, line: 30, baseType: !113, size: 32, offset: 128)
!13731 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13724, file: !712, line: 31, baseType: !113, size: 32, offset: 160)
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13724, file: !712, line: 32, baseType: !113, size: 32, offset: 192)
!13733 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13724, file: !712, line: 33, baseType: !113, size: 32, offset: 224)
!13734 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13724, file: !712, line: 34, baseType: !113, size: 32, offset: 256)
!13735 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13663, file: !645, line: 253, baseType: !104, size: 32, offset: 672)
!13736 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13663, file: !645, line: 256, baseType: !13694, size: 64, offset: 704)
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13663, file: !645, line: 294, baseType: !108, size: 32, offset: 768)
!13738 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13663, file: !645, line: 300, baseType: !13739, size: 96, offset: 800)
!13739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !645, line: 149, size: 96, elements: !13740)
!13740 = !{!13741, !13742, !13743}
!13741 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13739, file: !645, line: 153, baseType: !22, size: 32)
!13742 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13739, file: !645, line: 162, baseType: !439, size: 32, offset: 32)
!13743 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13739, file: !645, line: 168, baseType: !439, size: 32, offset: 64)
!13744 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13663, file: !645, line: 325, baseType: !13745, size: 32, offset: 896)
!13745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13746, size: 32)
!13746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !13747)
!13747 = !{!13748, !13754, !13755}
!13748 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13746, file: !359, line: 5074, baseType: !13749, size: 96)
!13749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !738, line: 56, size: 96, elements: !13750)
!13750 = !{!13751, !13752, !13753}
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13749, file: !738, line: 57, baseType: !741, size: 32)
!13752 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13749, file: !738, line: 58, baseType: !104, size: 32, offset: 32)
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13749, file: !738, line: 59, baseType: !439, size: 32, offset: 64)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13746, file: !359, line: 5075, baseType: !13694, size: 64, offset: 96)
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13746, file: !359, line: 5076, baseType: !13756, offset: 160)
!13756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!13757 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13663, file: !645, line: 343, baseType: !13758, size: 64, offset: 928)
!13758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !712, line: 60, size: 64, elements: !13759)
!13759 = !{!13760, !13761}
!13760 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13758, file: !712, line: 63, baseType: !113, size: 32)
!13761 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13758, file: !712, line: 66, baseType: !113, size: 32, offset: 32)
!13762 = !{!13763, !13764, !13765}
!13763 = !DILocalVariable(name: "reason", arg: 1, scope: !13615, file: !3373, line: 209, type: !32)
!13764 = !DILocalVariable(name: "esf", arg: 2, scope: !13615, file: !3373, line: 209, type: !13618)
!13765 = !DILocalVariable(name: "thread", arg: 3, scope: !13615, file: !3373, line: 210, type: !13662)
!13766 = !DILocation(line: 0, scope: !13615)
!13767 = !DILocation(line: 212, column: 1, scope: !13615)
!13768 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3373, file: !3373, line: 214, type: !13769, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13771)
!13769 = !DISubroutineType(types: !13770)
!13770 = !{null, !22, !22}
!13771 = !{!13772, !13773}
!13772 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13768, file: !3373, line: 214, type: !22)
!13773 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13768, file: !3373, line: 214, type: !22)
!13774 = !DILocation(line: 0, scope: !13768)
!13775 = !DILocation(line: 216, column: 1, scope: !13768)
!13776 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3373, file: !3373, line: 218, type: !13777, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13779)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{null, !209, !439}
!13779 = !{!13780, !13781}
!13780 = !DILocalVariable(name: "buf", arg: 1, scope: !13776, file: !3373, line: 218, type: !209)
!13781 = !DILocalVariable(name: "buflen", arg: 2, scope: !13776, file: !3373, line: 218, type: !439)
!13782 = !DILocation(line: 0, scope: !13776)
!13783 = !DILocation(line: 220, column: 1, scope: !13776)
!13784 = distinct !DISubprogram(name: "coredump_query", scope: !3373, file: !3373, line: 222, type: !13785, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13787)
!13785 = !DISubroutineType(types: !13786)
!13786 = !{!108, !3372, !104}
!13787 = !{!13788, !13789}
!13788 = !DILocalVariable(name: "query_id", arg: 1, scope: !13784, file: !3373, line: 222, type: !3372)
!13789 = !DILocalVariable(name: "arg", arg: 2, scope: !13784, file: !3373, line: 222, type: !104)
!13790 = !DILocation(line: 0, scope: !13784)
!13791 = !DILocation(line: 224, column: 2, scope: !13784)
!13792 = distinct !DISubprogram(name: "coredump_cmd", scope: !3373, file: !3373, line: 227, type: !13793, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13795)
!13793 = !DISubroutineType(types: !13794)
!13794 = !{!108, !3379, !104}
!13795 = !{!13796, !13797}
!13796 = !DILocalVariable(name: "query_id", arg: 1, scope: !13792, file: !3373, line: 227, type: !3379)
!13797 = !DILocalVariable(name: "arg", arg: 2, scope: !13792, file: !3373, line: 227, type: !104)
!13798 = !DILocation(line: 0, scope: !13792)
!13799 = !DILocation(line: 229, column: 2, scope: !13792)
!13800 = distinct !DISubprogram(name: "arch_system_halt", scope: !13801, file: !13801, line: 23, type: !4093, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13802)
!13801 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13802 = !{!13803}
!13803 = !DILocalVariable(name: "reason", arg: 1, scope: !13800, file: !13801, line: 23, type: !32)
!13804 = !DILocation(line: 0, scope: !13800)
!13805 = !DILocation(line: 55, column: 2, scope: !13806, inlinedAt: !13810)
!13806 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13807)
!13807 = !{!13808, !13809}
!13808 = !DILocalVariable(name: "key", scope: !13806, file: !4080, line: 44, type: !32)
!13809 = !DILocalVariable(name: "tmp", scope: !13806, file: !4080, line: 53, type: !32)
!13810 = distinct !DILocation(line: 31, column: 8, scope: !13800)
!13811 = !{i64 2258337}
!13812 = !DILocation(line: 0, scope: !13806, inlinedAt: !13810)
!13813 = !DILocation(line: 32, column: 2, scope: !13800)
!13814 = !DILocation(line: 32, column: 2, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13816, file: !13801, line: 32, column: 2)
!13816 = distinct !DILexicalBlock(scope: !13800, file: !13801, line: 32, column: 2)
!13817 = distinct !{!13817, !13818, !13819}
!13818 = !DILocation(line: 32, column: 2, scope: !13816)
!13819 = !DILocation(line: 34, column: 2, scope: !13816)
!13820 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13801, file: !13801, line: 39, type: !13821, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13823)
!13821 = !DISubroutineType(types: !13822)
!13822 = !{null, !32, !13618}
!13823 = !{!13824, !13825}
!13824 = !DILocalVariable(name: "reason", arg: 1, scope: !13820, file: !13801, line: 39, type: !32)
!13825 = !DILocalVariable(name: "esf", arg: 2, scope: !13820, file: !13801, line: 40, type: !13618)
!13826 = !DILocation(line: 0, scope: !13820)
!13827 = !DILocation(line: 45, column: 2, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13829, file: !13801, line: 45, column: 2)
!13829 = distinct !DILexicalBlock(scope: !13830, file: !13801, line: 45, column: 2)
!13830 = distinct !DILexicalBlock(scope: !13831, file: !13801, line: 45, column: 2)
!13831 = distinct !DILexicalBlock(scope: !13820, file: !13801, line: 45, column: 2)
!13832 = !DILocation(line: 46, column: 2, scope: !13820)
!13833 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13801, file: !13801, line: 81, type: !4093, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13834)
!13834 = !{!13835}
!13835 = !DILocalVariable(name: "reason", arg: 1, scope: !13833, file: !13801, line: 81, type: !32)
!13836 = !DILocation(line: 0, scope: !13833)
!13837 = !DILocation(line: 83, column: 2, scope: !13833)
!13838 = distinct !DISubprogram(name: "z_fatal_error", scope: !13801, file: !13801, line: 96, type: !13821, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13839)
!13839 = !{!13840, !13841, !13842, !13843}
!13840 = !DILocalVariable(name: "reason", arg: 1, scope: !13838, file: !13801, line: 96, type: !32)
!13841 = !DILocalVariable(name: "esf", arg: 2, scope: !13838, file: !13801, line: 96, type: !13618)
!13842 = !DILocalVariable(name: "key", scope: !13838, file: !13801, line: 102, type: !32)
!13843 = !DILocalVariable(name: "thread", scope: !13838, file: !13801, line: 103, type: !13662)
!13844 = !DILocation(line: 0, scope: !13838)
!13845 = !DILocation(line: 55, column: 2, scope: !13806, inlinedAt: !13846)
!13846 = distinct !DILocation(line: 102, column: 21, scope: !13838)
!13847 = !DILocation(line: 0, scope: !13806, inlinedAt: !13846)
!13848 = !DILocation(line: 104, column: 4, scope: !13838)
!13849 = !DILocation(line: 109, column: 2, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13851, file: !13801, line: 109, column: 2)
!13851 = distinct !DILexicalBlock(scope: !13852, file: !13801, line: 109, column: 2)
!13852 = distinct !DILexicalBlock(scope: !13853, file: !13801, line: 109, column: 2)
!13853 = distinct !DILexicalBlock(scope: !13838, file: !13801, line: 109, column: 2)
!13854 = !DILocation(line: 119, column: 11, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13838, file: !13801, line: 119, column: 6)
!13856 = !DILocation(line: 119, column: 20, scope: !13855)
!13857 = !DILocalVariable(name: "esf", arg: 1, scope: !13858, file: !8082, line: 71, type: !13618)
!13858 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8082, file: !8082, line: 71, type: !13859, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13861)
!13859 = !DISubroutineType(types: !13860)
!13860 = !{!422, !13618}
!13861 = !{!13857}
!13862 = !DILocation(line: 0, scope: !13858, inlinedAt: !13863)
!13863 = distinct !DILocation(line: 119, column: 23, scope: !13855)
!13864 = !DILocation(line: 73, column: 21, scope: !13858, inlinedAt: !13863)
!13865 = !DILocation(line: 73, column: 26, scope: !13858, inlinedAt: !13863)
!13866 = !DILocation(line: 73, column: 9, scope: !13858, inlinedAt: !13863)
!13867 = !DILocation(line: 119, column: 6, scope: !13838)
!13868 = !DILocation(line: 120, column: 3, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13870, file: !13801, line: 120, column: 3)
!13870 = distinct !DILexicalBlock(scope: !13871, file: !13801, line: 120, column: 3)
!13871 = distinct !DILexicalBlock(scope: !13872, file: !13801, line: 120, column: 3)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !13801, line: 120, column: 3)
!13873 = distinct !DILexicalBlock(scope: !13855, file: !13801, line: 119, column: 57)
!13874 = !DILocation(line: 121, column: 2, scope: !13873)
!13875 = !DILocation(line: 124, column: 2, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !13801, line: 124, column: 2)
!13877 = distinct !DILexicalBlock(scope: !13878, file: !13801, line: 124, column: 2)
!13878 = distinct !DILexicalBlock(scope: !13879, file: !13801, line: 124, column: 2)
!13879 = distinct !DILexicalBlock(scope: !13838, file: !13801, line: 124, column: 2)
!13880 = !DILocation(line: 131, column: 2, scope: !13838)
!13881 = !DILocation(line: 0, scope: !13858, inlinedAt: !13882)
!13882 = distinct !DILocation(line: 151, column: 24, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !13801, line: 151, column: 7)
!13884 = distinct !DILexicalBlock(scope: !13885, file: !13801, line: 146, column: 32)
!13885 = distinct !DILexicalBlock(scope: !13838, file: !13801, line: 146, column: 6)
!13886 = !DILocation(line: 151, column: 7, scope: !13884)
!13887 = !DILocation(line: 151, column: 21, scope: !13883)
!13888 = !DILocalVariable(name: "key", arg: 1, scope: !13889, file: !4080, line: 84, type: !32)
!13889 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13890)
!13890 = !{!13888}
!13891 = !DILocation(line: 0, scope: !13889, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 186, column: 2, scope: !13838)
!13893 = !DILocation(line: 95, column: 2, scope: !13889, inlinedAt: !13892)
!13894 = !{i64 2259154}
!13895 = !DILocation(line: 189, column: 3, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13897, file: !13801, line: 188, column: 41)
!13897 = distinct !DILexicalBlock(scope: !13838, file: !13801, line: 188, column: 6)
!13898 = !DILocation(line: 191, column: 1, scope: !13838)
!13899 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !13900, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !437)
!13900 = !DISubroutineType(types: !13901)
!13901 = !{!13902}
!13902 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !13662)
!13903 = !DILocation(line: 535, column: 9, scope: !13899)
!13904 = !DILocation(line: 535, column: 2, scope: !13899)
!13905 = distinct !DISubprogram(name: "reason_to_str", scope: !13801, file: !13801, line: 62, type: !13906, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13908)
!13906 = !DISubroutineType(types: !13907)
!13907 = !{!105, !32}
!13908 = !{!13909}
!13909 = !DILocalVariable(name: "reason", arg: 1, scope: !13905, file: !13801, line: 62, type: !32)
!13910 = !DILocation(line: 0, scope: !13905)
!13911 = !DILocation(line: 64, column: 2, scope: !13905)
!13912 = !DILocation(line: 0, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13905, file: !13801, line: 64, column: 18)
!13914 = !DILocation(line: 78, column: 1, scope: !13905)
!13915 = distinct !DISubprogram(name: "thread_name_get", scope: !13801, file: !13801, line: 51, type: !13916, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13918)
!13916 = !DISubroutineType(types: !13917)
!13917 = !{!105, !13662}
!13918 = !{!13919, !13920}
!13919 = !DILocalVariable(name: "thread", arg: 1, scope: !13915, file: !13801, line: 51, type: !13662)
!13920 = !DILocalVariable(name: "thread_name", scope: !13915, file: !13801, line: 53, type: !105)
!13921 = !DILocation(line: 0, scope: !13915)
!13922 = !DILocation(line: 53, column: 36, scope: !13915)
!13923 = !DILocation(line: 53, column: 28, scope: !13915)
!13924 = !DILocation(line: 53, column: 47, scope: !13915)
!13925 = !DILocation(line: 55, column: 19, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13915, file: !13801, line: 55, column: 6)
!13927 = !DILocation(line: 55, column: 28, scope: !13926)
!13928 = !DILocation(line: 55, column: 32, scope: !13926)
!13929 = !DILocation(line: 55, column: 47, scope: !13926)
!13930 = !DILocation(line: 55, column: 6, scope: !13915)
!13931 = !DILocation(line: 57, column: 2, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13926, file: !13801, line: 55, column: 57)
!13933 = !DILocation(line: 59, column: 2, scope: !13915)
!13934 = distinct !DISubprogram(name: "k_thread_abort", scope: !3802, file: !3802, line: 188, type: !13935, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !13937)
!13935 = !DISubroutineType(types: !13936)
!13936 = !{null, !13902}
!13937 = !{!13938}
!13938 = !DILocalVariable(name: "thread", arg: 1, scope: !13934, file: !3802, line: 188, type: !13902)
!13939 = !DILocation(line: 0, scope: !13934)
!13940 = !DILocation(line: 197, column: 2, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13934, file: !3802, line: 197, column: 2)
!13942 = !{i64 2154759116}
!13943 = !DILocation(line: 198, column: 2, scope: !13934)
!13944 = !DILocation(line: 199, column: 1, scope: !13934)
!13945 = distinct !DISubprogram(name: "z_current_get", scope: !3802, file: !3802, line: 173, type: !13900, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3369, retainedNodes: !437)
!13946 = !DILocation(line: 180, column: 2, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13945, file: !3802, line: 180, column: 2)
!13948 = !{i64 2154759048}
!13949 = !DILocation(line: 181, column: 9, scope: !13945)
!13950 = !DILocation(line: 181, column: 2, scope: !13945)
!13951 = distinct !DISubprogram(name: "z_early_memset", scope: !2165, file: !2165, line: 108, type: !13952, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !13954)
!13952 = !DISubroutineType(types: !13953)
!13953 = !{null, !104, !108, !439}
!13954 = !{!13955, !13956, !13957}
!13955 = !DILocalVariable(name: "dst", arg: 1, scope: !13951, file: !2165, line: 108, type: !104)
!13956 = !DILocalVariable(name: "c", arg: 2, scope: !13951, file: !2165, line: 108, type: !108)
!13957 = !DILocalVariable(name: "n", arg: 3, scope: !13951, file: !2165, line: 108, type: !439)
!13958 = !DILocation(line: 0, scope: !13951)
!13959 = !DILocation(line: 110, column: 9, scope: !13951)
!13960 = !DILocation(line: 111, column: 1, scope: !13951)
!13961 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2165, file: !2165, line: 121, type: !13962, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !13964)
!13962 = !DISubroutineType(types: !13963)
!13963 = !{null, !104, !13, !439}
!13964 = !{!13965, !13966, !13967}
!13965 = !DILocalVariable(name: "dst", arg: 1, scope: !13961, file: !2165, line: 121, type: !104)
!13966 = !DILocalVariable(name: "src", arg: 2, scope: !13961, file: !2165, line: 121, type: !13)
!13967 = !DILocalVariable(name: "n", arg: 3, scope: !13961, file: !2165, line: 121, type: !439)
!13968 = !DILocation(line: 0, scope: !13961)
!13969 = !DILocation(line: 123, column: 9, scope: !13961)
!13970 = !DILocation(line: 124, column: 1, scope: !13961)
!13971 = distinct !DISubprogram(name: "z_bss_zero", scope: !2165, file: !2165, line: 132, type: !3406, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !437)
!13972 = !DILocation(line: 143, column: 2, scope: !13971)
!13973 = !DILocation(line: 168, column: 1, scope: !13971)
!13974 = distinct !DISubprogram(name: "z_init_cpu", scope: !2165, file: !2165, line: 372, type: !9644, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !13975)
!13975 = !{!13976}
!13976 = !DILocalVariable(name: "id", arg: 1, scope: !13974, file: !2165, line: 372, type: !108)
!13977 = !DILocation(line: 0, scope: !13974)
!13978 = !DILocation(line: 374, column: 2, scope: !13974)
!13979 = !DILocation(line: 375, column: 34, scope: !13974)
!13980 = !DILocation(line: 375, column: 19, scope: !13974)
!13981 = !DILocation(line: 375, column: 31, scope: !13974)
!13982 = !DILocation(line: 376, column: 24, scope: !13974)
!13983 = !DILocation(line: 376, column: 19, scope: !13974)
!13984 = !DILocation(line: 376, column: 22, scope: !13974)
!13985 = !DILocation(line: 378, column: 26, scope: !13974)
!13986 = !DILocation(line: 378, column: 4, scope: !13974)
!13987 = !DILocation(line: 378, column: 50, scope: !13974)
!13988 = !DILocation(line: 377, column: 19, scope: !13974)
!13989 = !DILocation(line: 377, column: 29, scope: !13974)
!13990 = !DILocation(line: 384, column: 1, scope: !13974)
!13991 = distinct !DISubprogram(name: "init_idle_thread", scope: !2165, file: !2165, line: 343, type: !9644, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !13992)
!13992 = !{!13993, !13994, !13995, !13998}
!13993 = !DILocalVariable(name: "i", arg: 1, scope: !13991, file: !2165, line: 343, type: !108)
!13994 = !DILocalVariable(name: "thread", scope: !13991, file: !2165, line: 345, type: !2257)
!13995 = !DILocalVariable(name: "stack", scope: !13991, file: !2165, line: 346, type: !13996)
!13996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13997, size: 32)
!13997 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5173, line: 44, baseType: !2371)
!13998 = !DILocalVariable(name: "tname", scope: !13991, file: !2165, line: 358, type: !443)
!13999 = !DILocation(line: 0, scope: !13991)
!14000 = !DILocation(line: 345, column: 29, scope: !13991)
!14001 = !DILocation(line: 346, column: 28, scope: !13991)
!14002 = !DILocation(line: 362, column: 37, scope: !13991)
!14003 = !DILocation(line: 362, column: 36, scope: !13991)
!14004 = !DILocation(line: 361, column: 2, scope: !13991)
!14005 = !DILocation(line: 365, column: 2, scope: !13991)
!14006 = !DILocation(line: 370, column: 1, scope: !13991)
!14007 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2372, file: !2372, line: 331, type: !14008, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14010)
!14008 = !DISubroutineType(types: !14009)
!14009 = !{!443, !13996}
!14010 = !{!14011}
!14011 = !DILocalVariable(name: "sym", arg: 1, scope: !14007, file: !2372, line: 331, type: !13996)
!14012 = !DILocation(line: 0, scope: !14007)
!14013 = !DILocation(line: 333, column: 21, scope: !14007)
!14014 = !DILocation(line: 333, column: 2, scope: !14007)
!14015 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14016, file: !14016, line: 155, type: !14017, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14019)
!14016 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14017 = !DISubroutineType(types: !14018)
!14018 = !{null, !2257}
!14019 = !{!14020}
!14020 = !DILocalVariable(name: "thread", arg: 1, scope: !14015, file: !14016, line: 155, type: !2257)
!14021 = !DILocation(line: 0, scope: !14015)
!14022 = !DILocation(line: 157, column: 15, scope: !14015)
!14023 = !DILocation(line: 157, column: 28, scope: !14015)
!14024 = !DILocation(line: 158, column: 1, scope: !14015)
!14025 = distinct !DISubprogram(name: "z_cstart", scope: !2165, file: !2165, line: 501, type: !3406, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14026)
!14026 = !{!14027}
!14027 = !DILocalVariable(name: "dummy_thread", scope: !14025, file: !2165, line: 518, type: !2258)
!14028 = !DILocation(line: 507, column: 2, scope: !14025)
!14029 = !DILocation(line: 43, column: 14, scope: !14030, inlinedAt: !14034)
!14030 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14031, file: !14031, line: 40, type: !3406, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14032)
!14031 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14032 = !{!14033}
!14033 = !DILocalVariable(name: "msp", scope: !14030, file: !14031, line: 42, type: !113)
!14034 = distinct !DILocation(line: 44, column: 2, scope: !14035, inlinedAt: !14037)
!14035 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14036, file: !14036, line: 42, type: !3406, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !437)
!14036 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14037 = distinct !DILocation(line: 510, column: 2, scope: !14025)
!14038 = !DILocation(line: 43, column: 3, scope: !14030, inlinedAt: !14034)
!14039 = !DILocation(line: 43, column: 60, scope: !14030, inlinedAt: !14034)
!14040 = !DILocation(line: 0, scope: !14030, inlinedAt: !14034)
!14041 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14042, file: !7064, line: 1153, type: !113)
!14042 = distinct !DISubprogram(name: "__set_MSP", scope: !7064, file: !7064, line: 1153, type: !7155, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14043)
!14043 = !{!14041}
!14044 = !DILocation(line: 0, scope: !14042, inlinedAt: !14045)
!14045 = distinct !DILocation(line: 46, column: 2, scope: !14030, inlinedAt: !14034)
!14046 = !DILocation(line: 1155, column: 3, scope: !14042, inlinedAt: !14045)
!14047 = !{i64 3532713}
!14048 = !DILocation(line: 62, column: 11, scope: !14030, inlinedAt: !14034)
!14049 = !DILocation(line: 102, column: 2, scope: !14050, inlinedAt: !14051)
!14050 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8082, file: !8082, line: 97, type: !3406, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !437)
!14051 = distinct !DILocation(line: 45, column: 2, scope: !14035, inlinedAt: !14037)
!14052 = !DILocation(line: 108, column: 2, scope: !14050, inlinedAt: !14051)
!14053 = !DILocation(line: 112, column: 2, scope: !14050, inlinedAt: !14051)
!14054 = !DILocation(line: 113, column: 2, scope: !14050, inlinedAt: !14051)
!14055 = !DILocation(line: 114, column: 2, scope: !14050, inlinedAt: !14051)
!14056 = !DILocation(line: 116, column: 2, scope: !14050, inlinedAt: !14051)
!14057 = !DILocation(line: 123, column: 13, scope: !14050, inlinedAt: !14051)
!14058 = !DILocation(line: 46, column: 2, scope: !14035, inlinedAt: !14037)
!14059 = !DILocation(line: 47, column: 2, scope: !14035, inlinedAt: !14037)
!14060 = !DILocation(line: 174, column: 12, scope: !14061, inlinedAt: !14062)
!14061 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8082, file: !8082, line: 169, type: !3406, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !437)
!14062 = distinct !DILocation(line: 48, column: 2, scope: !14035, inlinedAt: !14037)
!14063 = !DILocation(line: 179, column: 12, scope: !14061, inlinedAt: !14062)
!14064 = !DILocation(line: 50, column: 2, scope: !14035, inlinedAt: !14037)
!14065 = !DILocation(line: 57, column: 2, scope: !14035, inlinedAt: !14037)
!14066 = !DILocation(line: 518, column: 2, scope: !14025)
!14067 = !DILocation(line: 518, column: 18, scope: !14025)
!14068 = !DILocation(line: 520, column: 2, scope: !14025)
!14069 = !DILocation(line: 523, column: 2, scope: !14025)
!14070 = !DILocation(line: 526, column: 2, scope: !14025)
!14071 = !DILocation(line: 527, column: 2, scope: !14025)
!14072 = !DILocation(line: 543, column: 24, scope: !14025)
!14073 = !DILocation(line: 543, column: 2, scope: !14025)
!14074 = !DILocation(line: 0, scope: !2396)
!14075 = !DILocation(line: 246, column: 15, scope: !2414)
!14076 = !DILocation(line: 246, column: 36, scope: !2413)
!14077 = !DILocation(line: 246, column: 2, scope: !2414)
!14078 = !DILocation(line: 247, column: 37, scope: !2412)
!14079 = !DILocation(line: 0, scope: !2412)
!14080 = !DILocation(line: 248, column: 19, scope: !2412)
!14081 = !DILocation(line: 248, column: 12, scope: !2412)
!14082 = !DILocation(line: 250, column: 11, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !2412, file: !2165, line: 250, column: 7)
!14084 = !DILocation(line: 250, column: 7, scope: !2412)
!14085 = !DILocation(line: 254, column: 11, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14087, file: !2165, line: 254, column: 8)
!14087 = distinct !DILexicalBlock(scope: !14083, file: !2165, line: 250, column: 20)
!14088 = !DILocation(line: 254, column: 8, scope: !14087)
!14089 = !DILocation(line: 255, column: 9, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14086, file: !2165, line: 254, column: 17)
!14091 = !DILocation(line: 258, column: 9, scope: !14090)
!14092 = !DILocation(line: 261, column: 28, scope: !14090)
!14093 = !DILocation(line: 261, column: 10, scope: !14090)
!14094 = !DILocation(line: 261, column: 17, scope: !14090)
!14095 = !DILocation(line: 261, column: 26, scope: !14090)
!14096 = !DILocation(line: 262, column: 4, scope: !14090)
!14097 = !DILocation(line: 263, column: 9, scope: !14087)
!14098 = !DILocation(line: 263, column: 16, scope: !14087)
!14099 = !DILocation(line: 263, column: 28, scope: !14087)
!14100 = !DILocation(line: 264, column: 3, scope: !14087)
!14101 = !DILocation(line: 246, column: 60, scope: !2413)
!14102 = distinct !{!14102, !14077, !14103}
!14103 = !DILocation(line: 265, column: 2, scope: !2414)
!14104 = !DILocation(line: 266, column: 1, scope: !2396)
!14105 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !788, file: !788, line: 1814, type: !7098, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14106)
!14106 = !{!14107, !14108}
!14107 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14105, file: !788, line: 1814, type: !1168)
!14108 = !DILocalVariable(name: "priority", arg: 2, scope: !14105, file: !788, line: 1814, type: !113)
!14109 = !DILocation(line: 0, scope: !14105)
!14110 = !DILocation(line: 1822, column: 48, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14112, file: !788, line: 1821, column: 3)
!14112 = distinct !DILexicalBlock(scope: !14105, file: !788, line: 1816, column: 7)
!14113 = !DILocation(line: 1822, column: 32, scope: !14111)
!14114 = !DILocation(line: 1822, column: 40, scope: !14111)
!14115 = !DILocation(line: 1822, column: 5, scope: !14111)
!14116 = !DILocation(line: 1822, column: 46, scope: !14111)
!14117 = !DILocation(line: 1824, column: 1, scope: !14105)
!14118 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14036, file: !14036, line: 32, type: !3406, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14119 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14120, file: !14120, line: 215, type: !14017, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14121)
!14120 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14121 = !{!14122}
!14122 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14119, file: !14120, line: 215, type: !2257)
!14123 = !DILocation(line: 0, scope: !14119)
!14124 = !DILocation(line: 217, column: 21, scope: !14119)
!14125 = !DILocation(line: 217, column: 34, scope: !14119)
!14126 = !DILocation(line: 221, column: 21, scope: !14119)
!14127 = !DILocation(line: 221, column: 34, scope: !14119)
!14128 = !DILocation(line: 223, column: 27, scope: !14119)
!14129 = !DILocation(line: 223, column: 33, scope: !14119)
!14130 = !DILocation(line: 224, column: 27, scope: !14119)
!14131 = !DILocation(line: 224, column: 32, scope: !14119)
!14132 = !DILocation(line: 232, column: 16, scope: !14119)
!14133 = !DILocation(line: 232, column: 30, scope: !14119)
!14134 = !DILocation(line: 239, column: 24, scope: !14119)
!14135 = !DILocation(line: 240, column: 1, scope: !14119)
!14136 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2165, file: !2165, line: 399, type: !14137, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14139)
!14137 = !DISubroutineType(types: !14138)
!14138 = !{!443}
!14139 = !{!14140}
!14140 = !DILocalVariable(name: "stack_ptr", scope: !14136, file: !2165, line: 401, type: !443)
!14141 = !DILocation(line: 404, column: 2, scope: !14136)
!14142 = !DILocation(line: 416, column: 24, scope: !14136)
!14143 = !DILocation(line: 418, column: 14, scope: !14136)
!14144 = !DILocation(line: 0, scope: !14136)
!14145 = !DILocation(line: 423, column: 2, scope: !14136)
!14146 = !DILocation(line: 424, column: 2, scope: !14136)
!14147 = !DILocation(line: 426, column: 2, scope: !14136)
!14148 = !DILocation(line: 428, column: 2, scope: !14136)
!14149 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2165, file: !2165, line: 432, type: !14150, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14152)
!14150 = !DISubroutineType(types: !14151)
!14151 = !{null, !443}
!14152 = !{!14153}
!14153 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14149, file: !2165, line: 432, type: !443)
!14154 = !DILocation(line: 0, scope: !14149)
!14155 = !DILocation(line: 435, column: 2, scope: !14149)
!14156 = !DILocation(line: 445, column: 2, scope: !14149)
!14157 = distinct !DISubprogram(name: "bg_thread_main", scope: !2165, file: !2165, line: 277, type: !5175, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2161, retainedNodes: !14158)
!14158 = !{!14159, !14160, !14161}
!14159 = !DILocalVariable(name: "unused1", arg: 1, scope: !14157, file: !2165, line: 277, type: !104)
!14160 = !DILocalVariable(name: "unused2", arg: 2, scope: !14157, file: !2165, line: 277, type: !104)
!14161 = !DILocalVariable(name: "unused3", arg: 3, scope: !14157, file: !2165, line: 277, type: !104)
!14162 = !DILocation(line: 0, scope: !14157)
!14163 = !DILocation(line: 291, column: 20, scope: !14157)
!14164 = !DILocation(line: 293, column: 2, scope: !14157)
!14165 = !DILocation(line: 297, column: 2, scope: !14157)
!14166 = !DILocation(line: 305, column: 2, scope: !14157)
!14167 = !DILocation(line: 307, column: 2, scope: !14157)
!14168 = !DILocation(line: 330, column: 8, scope: !14157)
!14169 = !DILocation(line: 333, column: 34, scope: !14157)
!14170 = !DILocation(line: 339, column: 1, scope: !14157)
!14171 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2425, file: !2425, line: 45, type: !14172, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14180)
!14172 = !DISubroutineType(types: !14173)
!14173 = !{null, !14174, !104}
!14174 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !359, line: 103, baseType: !14175)
!14175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14176, size: 32)
!14176 = !DISubroutineType(types: !14177)
!14177 = !{null, !14178, !104}
!14178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14179, size: 32)
!14179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2430)
!14180 = !{!14181, !14182}
!14181 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14171, file: !2425, line: 45, type: !14174)
!14182 = !DILocalVariable(name: "user_data", arg: 2, scope: !14171, file: !2425, line: 45, type: !104)
!14183 = !DILocation(line: 0, scope: !14171)
!14184 = !DILocation(line: 71, column: 1, scope: !14171)
!14185 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2425, file: !2425, line: 73, type: !14172, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14186)
!14186 = !{!14187, !14188}
!14187 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14185, file: !2425, line: 73, type: !14174)
!14188 = !DILocalVariable(name: "user_data", arg: 2, scope: !14185, file: !2425, line: 73, type: !104)
!14189 = !DILocation(line: 0, scope: !14185)
!14190 = !DILocation(line: 95, column: 1, scope: !14185)
!14191 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2425, file: !2425, line: 97, type: !8083, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!14192 = !DILocation(line: 1031, column: 3, scope: !14193, inlinedAt: !14196)
!14193 = distinct !DISubprogram(name: "__get_IPSR", scope: !7064, file: !7064, line: 1027, type: !7145, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14194)
!14194 = !{!14195}
!14195 = !DILocalVariable(name: "result", scope: !14193, file: !7064, line: 1029, type: !113)
!14196 = distinct !DILocation(line: 48, column: 10, scope: !14197, inlinedAt: !14198)
!14197 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8082, file: !8082, line: 46, type: !8083, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!14198 = distinct !DILocation(line: 99, column: 9, scope: !14191)
!14199 = !{i64 3538364}
!14200 = !DILocation(line: 0, scope: !14193, inlinedAt: !14196)
!14201 = !DILocation(line: 48, column: 9, scope: !14197, inlinedAt: !14198)
!14202 = !DILocation(line: 99, column: 2, scope: !14191)
!14203 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2425, file: !2425, line: 106, type: !3406, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!14204 = !DILocation(line: 108, column: 2, scope: !14203)
!14205 = !DILocation(line: 108, column: 17, scope: !14203)
!14206 = !DILocation(line: 108, column: 30, scope: !14203)
!14207 = !DILocation(line: 109, column: 1, scope: !14203)
!14208 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2425, file: !2425, line: 116, type: !3406, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!14209 = !DILocation(line: 118, column: 2, scope: !14208)
!14210 = !DILocation(line: 118, column: 17, scope: !14208)
!14211 = !DILocation(line: 118, column: 30, scope: !14208)
!14212 = !DILocation(line: 119, column: 1, scope: !14208)
!14213 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2425, file: !2425, line: 126, type: !8083, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !437)
!14214 = !DILocation(line: 128, column: 10, scope: !14213)
!14215 = !DILocation(line: 128, column: 25, scope: !14213)
!14216 = !DILocation(line: 128, column: 38, scope: !14213)
!14217 = !DILocation(line: 128, column: 53, scope: !14213)
!14218 = !DILocation(line: 128, column: 2, scope: !14213)
!14219 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2425, file: !2425, line: 187, type: !14220, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14222)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{!108, !2429, !105}
!14222 = !{!14223, !14224}
!14223 = !DILocalVariable(name: "thread", arg: 1, scope: !14219, file: !2425, line: 187, type: !2429)
!14224 = !DILocalVariable(name: "value", arg: 2, scope: !14219, file: !2425, line: 187, type: !105)
!14225 = !DILocation(line: 0, scope: !14219)
!14226 = !DILocation(line: 206, column: 2, scope: !14219)
!14227 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2425, file: !2425, line: 238, type: !14228, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14230)
!14228 = !DISubroutineType(types: !14229)
!14229 = !{!105, !2429}
!14230 = !{!14231}
!14231 = !DILocalVariable(name: "thread", arg: 1, scope: !14227, file: !2425, line: 238, type: !2429)
!14232 = !DILocation(line: 0, scope: !14227)
!14233 = !DILocation(line: 244, column: 2, scope: !14227)
!14234 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2425, file: !2425, line: 248, type: !14235, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14237)
!14235 = !DISubroutineType(types: !14236)
!14236 = !{!108, !2428, !443, !439}
!14237 = !{!14238, !14239, !14240}
!14238 = !DILocalVariable(name: "thread", arg: 1, scope: !14234, file: !2425, line: 248, type: !2428)
!14239 = !DILocalVariable(name: "buf", arg: 2, scope: !14234, file: !2425, line: 248, type: !443)
!14240 = !DILocalVariable(name: "size", arg: 3, scope: !14234, file: !2425, line: 248, type: !439)
!14241 = !DILocation(line: 0, scope: !14234)
!14242 = !DILocation(line: 257, column: 2, scope: !14234)
!14243 = !DILocation(line: 0, scope: !2424)
!14244 = !DILocation(line: 281, column: 11, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !2424, file: !2425, line: 281, column: 6)
!14246 = !DILocation(line: 281, column: 20, scope: !14245)
!14247 = !DILocation(line: 275, column: 45, scope: !2424)
!14248 = !DILocation(line: 285, column: 10, scope: !2424)
!14249 = !DILocation(line: 0, scope: !2545)
!14250 = !DILocation(line: 293, column: 39, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !2545, file: !2425, line: 293, column: 2)
!14252 = !DILocation(line: 293, column: 2, scope: !2545)
!14253 = !DILocation(line: 273, column: 14, scope: !2424)
!14254 = !DILocation(line: 309, column: 2, scope: !2424)
!14255 = !DILocation(line: 309, column: 11, scope: !2424)
!14256 = !DILocation(line: 311, column: 2, scope: !2424)
!14257 = !DILocation(line: 293, column: 26, scope: !14251)
!14258 = !DILocation(line: 294, column: 9, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14251, file: !2425, line: 293, column: 54)
!14260 = !DILocation(line: 295, column: 21, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14259, file: !2425, line: 295, column: 7)
!14262 = !DILocation(line: 295, column: 28, scope: !14261)
!14263 = !DILocation(line: 295, column: 7, scope: !14259)
!14264 = !DILocation(line: 299, column: 25, scope: !14259)
!14265 = !DILocation(line: 299, column: 41, scope: !14259)
!14266 = !DILocation(line: 300, column: 7, scope: !14259)
!14267 = !DILocation(line: 300, column: 26, scope: !14259)
!14268 = !DILocation(line: 299, column: 10, scope: !14259)
!14269 = !DILocation(line: 299, column: 7, scope: !14259)
!14270 = !DILocation(line: 302, column: 16, scope: !14259)
!14271 = !DILocation(line: 304, column: 20, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14259, file: !2425, line: 304, column: 7)
!14273 = !DILocation(line: 304, column: 7, scope: !14259)
!14274 = !DILocation(line: 305, column: 26, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14272, file: !2425, line: 304, column: 26)
!14276 = !DILocation(line: 305, column: 42, scope: !14275)
!14277 = !DILocation(line: 305, column: 11, scope: !14275)
!14278 = !DILocation(line: 305, column: 8, scope: !14275)
!14279 = !DILocation(line: 306, column: 3, scope: !14275)
!14280 = !DILocation(line: 293, column: 50, scope: !14251)
!14281 = !DILocation(line: 312, column: 1, scope: !2424)
!14282 = distinct !DISubprogram(name: "copy_bytes", scope: !2425, file: !2425, line: 261, type: !14283, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14285)
!14283 = !DISubroutineType(types: !14284)
!14284 = !{!439, !443, !439, !105, !439}
!14285 = !{!14286, !14287, !14288, !14289, !14290}
!14286 = !DILocalVariable(name: "dest", arg: 1, scope: !14282, file: !2425, line: 261, type: !443)
!14287 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14282, file: !2425, line: 261, type: !439)
!14288 = !DILocalVariable(name: "src", arg: 3, scope: !14282, file: !2425, line: 261, type: !105)
!14289 = !DILocalVariable(name: "src_size", arg: 4, scope: !14282, file: !2425, line: 261, type: !439)
!14290 = !DILocalVariable(name: "bytes_to_copy", scope: !14282, file: !2425, line: 263, type: !439)
!14291 = !DILocation(line: 0, scope: !14282)
!14292 = !DILocation(line: 265, column: 18, scope: !14282)
!14293 = !DILocation(line: 266, column: 2, scope: !14282)
!14294 = !DILocation(line: 268, column: 2, scope: !14282)
!14295 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2425, file: !2425, line: 383, type: !14296, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14298)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{null, !2429}
!14298 = !{!14299}
!14299 = !DILocalVariable(name: "thread", arg: 1, scope: !14295, file: !2425, line: 383, type: !2429)
!14300 = !DILocation(line: 0, scope: !14295)
!14301 = !DILocation(line: 387, column: 2, scope: !14295)
!14302 = !DILocation(line: 388, column: 1, scope: !14295)
!14303 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2425, file: !2425, line: 528, type: !14304, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14311)
!14304 = !DISubroutineType(types: !14305)
!14305 = !{!443, !2429, !14306, !439, !5172, !104, !104, !104, !108, !113, !105}
!14306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14307, size: 32)
!14307 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5173, line: 44, baseType: !14308)
!14308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2372, line: 47, size: 8, elements: !14309)
!14309 = !{!14310}
!14310 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14308, file: !2372, line: 48, baseType: !107, size: 8)
!14311 = !{!14312, !14313, !14314, !14315, !14316, !14317, !14318, !14319, !14320, !14321, !14322}
!14312 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14303, file: !2425, line: 528, type: !2429)
!14313 = !DILocalVariable(name: "stack", arg: 2, scope: !14303, file: !2425, line: 529, type: !14306)
!14314 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14303, file: !2425, line: 529, type: !439)
!14315 = !DILocalVariable(name: "entry", arg: 4, scope: !14303, file: !2425, line: 530, type: !5172)
!14316 = !DILocalVariable(name: "p1", arg: 5, scope: !14303, file: !2425, line: 531, type: !104)
!14317 = !DILocalVariable(name: "p2", arg: 6, scope: !14303, file: !2425, line: 531, type: !104)
!14318 = !DILocalVariable(name: "p3", arg: 7, scope: !14303, file: !2425, line: 531, type: !104)
!14319 = !DILocalVariable(name: "prio", arg: 8, scope: !14303, file: !2425, line: 532, type: !108)
!14320 = !DILocalVariable(name: "options", arg: 9, scope: !14303, file: !2425, line: 532, type: !113)
!14321 = !DILocalVariable(name: "name", arg: 10, scope: !14303, file: !2425, line: 532, type: !105)
!14322 = !DILocalVariable(name: "stack_ptr", scope: !14303, file: !2425, line: 534, type: !443)
!14323 = !DILocation(line: 0, scope: !14303)
!14324 = !DILocation(line: 550, column: 28, scope: !14303)
!14325 = !DILocation(line: 550, column: 2, scope: !14303)
!14326 = !DILocation(line: 553, column: 34, scope: !14303)
!14327 = !DILocation(line: 553, column: 2, scope: !14303)
!14328 = !DILocation(line: 554, column: 14, scope: !14303)
!14329 = !DILocation(line: 564, column: 2, scope: !14303)
!14330 = !DILocation(line: 567, column: 14, scope: !14303)
!14331 = !DILocation(line: 567, column: 24, scope: !14303)
!14332 = !DILocation(line: 612, column: 7, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14303, file: !2425, line: 612, column: 6)
!14334 = !DILocation(line: 612, column: 6, scope: !14303)
!14335 = !DILocation(line: 627, column: 40, scope: !14303)
!14336 = !DILocation(line: 637, column: 2, scope: !14303)
!14337 = !DILocation(line: 613, column: 15, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14333, file: !2425, line: 612, column: 17)
!14339 = !DILocation(line: 613, column: 29, scope: !14338)
!14340 = !DILocation(line: 638, column: 1, scope: !14303)
!14341 = distinct !DISubprogram(name: "z_waitq_init", scope: !14342, file: !14342, line: 47, type: !14343, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14345)
!14342 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14343 = !DISubroutineType(types: !14344)
!14344 = !{null, !2460}
!14345 = !{!14346}
!14346 = !DILocalVariable(name: "w", arg: 1, scope: !14341, file: !14342, line: 47, type: !2460)
!14347 = !DILocation(line: 0, scope: !14341)
!14348 = !DILocation(line: 49, column: 21, scope: !14341)
!14349 = !DILocation(line: 49, column: 2, scope: !14341)
!14350 = !DILocation(line: 50, column: 1, scope: !14341)
!14351 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2425, file: !2425, line: 791, type: !14352, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14355)
!14352 = !DISubroutineType(types: !14353)
!14353 = !{null, !14354, !108, !113, !32}
!14354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!14355 = !{!14356, !14357, !14358, !14359}
!14356 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14351, file: !2425, line: 791, type: !14354)
!14357 = !DILocalVariable(name: "priority", arg: 2, scope: !14351, file: !2425, line: 791, type: !108)
!14358 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14351, file: !2425, line: 792, type: !113)
!14359 = !DILocalVariable(name: "options", arg: 4, scope: !14351, file: !2425, line: 792, type: !32)
!14360 = !DILocation(line: 0, scope: !14351)
!14361 = !DILocation(line: 795, column: 15, scope: !14351)
!14362 = !DILocation(line: 795, column: 25, scope: !14351)
!14363 = !DILocation(line: 796, column: 30, scope: !14351)
!14364 = !DILocation(line: 796, column: 15, scope: !14351)
!14365 = !DILocation(line: 796, column: 28, scope: !14351)
!14366 = !DILocation(line: 797, column: 30, scope: !14351)
!14367 = !DILocation(line: 797, column: 15, scope: !14351)
!14368 = !DILocation(line: 797, column: 28, scope: !14351)
!14369 = !DILocation(line: 799, column: 22, scope: !14351)
!14370 = !DILocation(line: 799, column: 15, scope: !14351)
!14371 = !DILocation(line: 799, column: 20, scope: !14351)
!14372 = !DILocation(line: 801, column: 15, scope: !14351)
!14373 = !DILocation(line: 801, column: 28, scope: !14351)
!14374 = !DILocation(line: 814, column: 2, scope: !14351)
!14375 = !DILocation(line: 815, column: 1, scope: !14351)
!14376 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2425, file: !2425, line: 449, type: !14377, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14379)
!14377 = !DISubroutineType(types: !14378)
!14378 = !{!443, !2429, !14306, !439}
!14379 = !{!14380, !14381, !14382, !14383, !14384, !14385, !14386, !14387}
!14380 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14376, file: !2425, line: 449, type: !2429)
!14381 = !DILocalVariable(name: "stack", arg: 2, scope: !14376, file: !2425, line: 450, type: !14306)
!14382 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14376, file: !2425, line: 450, type: !439)
!14383 = !DILocalVariable(name: "stack_obj_size", scope: !14376, file: !2425, line: 452, type: !439)
!14384 = !DILocalVariable(name: "stack_buf_size", scope: !14376, file: !2425, line: 452, type: !439)
!14385 = !DILocalVariable(name: "stack_ptr", scope: !14376, file: !2425, line: 453, type: !443)
!14386 = !DILocalVariable(name: "stack_buf_start", scope: !14376, file: !2425, line: 453, type: !443)
!14387 = !DILocalVariable(name: "delta", scope: !14376, file: !2425, line: 454, type: !439)
!14388 = !DILocation(line: 0, scope: !14376)
!14389 = !DILocation(line: 465, column: 20, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14376, file: !2425, line: 463, column: 2)
!14391 = !DILocation(line: 466, column: 21, scope: !14390)
!14392 = !DILocation(line: 473, column: 28, scope: !14376)
!14393 = !DILocation(line: 514, column: 33, scope: !14376)
!14394 = !DILocation(line: 514, column: 25, scope: !14376)
!14395 = !DILocation(line: 514, column: 31, scope: !14376)
!14396 = !DILocation(line: 515, column: 25, scope: !14376)
!14397 = !DILocation(line: 515, column: 30, scope: !14376)
!14398 = !DILocation(line: 516, column: 25, scope: !14376)
!14399 = !DILocation(line: 516, column: 31, scope: !14376)
!14400 = !DILocation(line: 520, column: 2, scope: !14376)
!14401 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2372, file: !2372, line: 331, type: !14402, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14404)
!14402 = !DISubroutineType(types: !14403)
!14403 = !{!443, !14306}
!14404 = !{!14405}
!14405 = !DILocalVariable(name: "sym", arg: 1, scope: !14401, file: !2372, line: 331, type: !14306)
!14406 = !DILocation(line: 0, scope: !14401)
!14407 = !DILocation(line: 333, column: 21, scope: !14401)
!14408 = !DILocation(line: 333, column: 2, scope: !14401)
!14409 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14410, file: !14410, line: 40, type: !14411, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14413)
!14410 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14411 = !DISubroutineType(types: !14412)
!14412 = !{null, !14354}
!14413 = !{!14414}
!14414 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14409, file: !14410, line: 40, type: !14354)
!14415 = !DILocation(line: 0, scope: !14409)
!14416 = !DILocation(line: 42, column: 31, scope: !14409)
!14417 = !DILocation(line: 42, column: 2, scope: !14409)
!14418 = !DILocation(line: 43, column: 1, scope: !14409)
!14419 = distinct !DISubprogram(name: "z_init_timeout", scope: !14410, file: !14410, line: 25, type: !2486, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14420)
!14420 = !{!14421}
!14421 = !DILocalVariable(name: "to", arg: 1, scope: !14419, file: !14410, line: 25, type: !2488)
!14422 = !DILocation(line: 0, scope: !14419)
!14423 = !DILocation(line: 27, column: 22, scope: !14419)
!14424 = !DILocation(line: 27, column: 2, scope: !14419)
!14425 = !DILocation(line: 28, column: 1, scope: !14419)
!14426 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !14427, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14429)
!14427 = !DISubroutineType(types: !14428)
!14428 = !{null, !2532}
!14429 = !{!14430}
!14430 = !DILocalVariable(name: "node", arg: 1, scope: !14426, file: !367, line: 211, type: !2532)
!14431 = !DILocation(line: 0, scope: !14426)
!14432 = !DILocation(line: 213, column: 8, scope: !14426)
!14433 = !DILocation(line: 213, column: 13, scope: !14426)
!14434 = !DILocation(line: 214, column: 8, scope: !14426)
!14435 = !DILocation(line: 214, column: 13, scope: !14426)
!14436 = !DILocation(line: 215, column: 1, scope: !14426)
!14437 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !14438, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14441)
!14438 = !DISubroutineType(types: !14439)
!14439 = !{null, !14440}
!14440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!14441 = !{!14442}
!14442 = !DILocalVariable(name: "list", arg: 1, scope: !14437, file: !367, line: 197, type: !14440)
!14443 = !DILocation(line: 0, scope: !14437)
!14444 = !DILocation(line: 199, column: 8, scope: !14437)
!14445 = !DILocation(line: 199, column: 13, scope: !14437)
!14446 = !DILocation(line: 200, column: 8, scope: !14437)
!14447 = !DILocation(line: 200, column: 13, scope: !14437)
!14448 = !DILocation(line: 201, column: 1, scope: !14437)
!14449 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2425, file: !2425, line: 641, type: !14450, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14456)
!14450 = !DISubroutineType(types: !14451)
!14451 = !{!2428, !2429, !14306, !439, !5172, !104, !104, !104, !108, !113, !14452}
!14452 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !14453)
!14453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !14454)
!14454 = !{!14455}
!14455 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14453, file: !110, line: 66, baseType: !109, size: 64)
!14456 = !{!14457, !14458, !14459, !14460, !14461, !14462, !14463, !14464, !14465, !14466}
!14457 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14449, file: !2425, line: 641, type: !2429)
!14458 = !DILocalVariable(name: "stack", arg: 2, scope: !14449, file: !2425, line: 642, type: !14306)
!14459 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14449, file: !2425, line: 643, type: !439)
!14460 = !DILocalVariable(name: "entry", arg: 4, scope: !14449, file: !2425, line: 643, type: !5172)
!14461 = !DILocalVariable(name: "p1", arg: 5, scope: !14449, file: !2425, line: 644, type: !104)
!14462 = !DILocalVariable(name: "p2", arg: 6, scope: !14449, file: !2425, line: 644, type: !104)
!14463 = !DILocalVariable(name: "p3", arg: 7, scope: !14449, file: !2425, line: 644, type: !104)
!14464 = !DILocalVariable(name: "prio", arg: 8, scope: !14449, file: !2425, line: 645, type: !108)
!14465 = !DILocalVariable(name: "options", arg: 9, scope: !14449, file: !2425, line: 645, type: !113)
!14466 = !DILocalVariable(name: "delay", arg: 10, scope: !14449, file: !2425, line: 645, type: !14452)
!14467 = !DILocation(line: 0, scope: !14449)
!14468 = !DILocation(line: 649, column: 2, scope: !14449)
!14469 = !DILocation(line: 652, column: 7, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14449, file: !2425, line: 652, column: 6)
!14471 = !DILocation(line: 652, column: 6, scope: !14449)
!14472 = !DILocation(line: 653, column: 3, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14470, file: !2425, line: 652, column: 39)
!14474 = !DILocation(line: 654, column: 2, scope: !14473)
!14475 = !DILocation(line: 656, column: 2, scope: !14449)
!14476 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2425, file: !2425, line: 401, type: !14477, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14479)
!14477 = !DISubroutineType(types: !14478)
!14478 = !{null, !2429, !14452}
!14479 = !{!14480, !14481}
!14480 = !DILocalVariable(name: "thread", arg: 1, scope: !14476, file: !2425, line: 401, type: !2429)
!14481 = !DILocalVariable(name: "delay", arg: 2, scope: !14476, file: !2425, line: 401, type: !14452)
!14482 = !DILocation(line: 0, scope: !14476)
!14483 = !DILocation(line: 404, column: 6, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14476, file: !2425, line: 404, column: 6)
!14485 = !DILocation(line: 404, column: 6, scope: !14476)
!14486 = !DILocation(line: 405, column: 3, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14484, file: !2425, line: 404, column: 38)
!14488 = !DILocation(line: 406, column: 2, scope: !14487)
!14489 = !DILocation(line: 407, column: 3, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14484, file: !2425, line: 406, column: 9)
!14491 = !DILocation(line: 413, column: 1, scope: !14476)
!14492 = distinct !DISubprogram(name: "k_thread_start", scope: !3802, file: !3802, line: 205, type: !14493, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14495)
!14493 = !DISubroutineType(types: !14494)
!14494 = !{null, !2428}
!14495 = !{!14496}
!14496 = !DILocalVariable(name: "thread", arg: 1, scope: !14492, file: !3802, line: 205, type: !2428)
!14497 = !DILocation(line: 0, scope: !14492)
!14498 = !DILocation(line: 214, column: 2, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14492, file: !3802, line: 214, column: 2)
!14500 = !{i64 2154784340}
!14501 = !DILocation(line: 215, column: 2, scope: !14492)
!14502 = !DILocation(line: 216, column: 1, scope: !14492)
!14503 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14410, file: !14410, line: 47, type: !14477, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14504)
!14504 = !{!14505, !14506}
!14505 = !DILocalVariable(name: "thread", arg: 1, scope: !14503, file: !14410, line: 47, type: !2429)
!14506 = !DILocalVariable(name: "ticks", arg: 2, scope: !14503, file: !14410, line: 47, type: !14452)
!14507 = !DILocation(line: 0, scope: !14503)
!14508 = !DILocation(line: 49, column: 30, scope: !14503)
!14509 = !DILocation(line: 49, column: 2, scope: !14503)
!14510 = !DILocation(line: 50, column: 1, scope: !14503)
!14511 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2425, file: !2425, line: 748, type: !3406, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14512)
!14512 = !{!14513, !14531}
!14513 = !DILocalVariable(name: "thread_data", scope: !14514, file: !2425, line: 750, type: !14515)
!14514 = distinct !DILexicalBlock(scope: !14511, file: !2425, line: 750, column: 2)
!14515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14516, size: 32)
!14516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !359, line: 620, size: 384, elements: !14517)
!14517 = !{!14518, !14519, !14520, !14521, !14522, !14523, !14524, !14525, !14526, !14527, !14528, !14530}
!14518 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14516, file: !359, line: 621, baseType: !2429, size: 32)
!14519 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14516, file: !359, line: 622, baseType: !14306, size: 32, offset: 32)
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14516, file: !359, line: 623, baseType: !32, size: 32, offset: 64)
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14516, file: !359, line: 624, baseType: !5172, size: 32, offset: 96)
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14516, file: !359, line: 625, baseType: !104, size: 32, offset: 128)
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14516, file: !359, line: 626, baseType: !104, size: 32, offset: 160)
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14516, file: !359, line: 627, baseType: !104, size: 32, offset: 192)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14516, file: !359, line: 628, baseType: !108, size: 32, offset: 224)
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14516, file: !359, line: 629, baseType: !113, size: 32, offset: 256)
!14527 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14516, file: !359, line: 630, baseType: !220, size: 32, offset: 288)
!14528 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14516, file: !359, line: 631, baseType: !14529, size: 32, offset: 320)
!14529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 32)
!14530 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14516, file: !359, line: 632, baseType: !105, size: 32, offset: 352)
!14531 = !DILocalVariable(name: "thread_data", scope: !14532, file: !2425, line: 781, type: !14515)
!14532 = distinct !DILexicalBlock(scope: !14511, file: !2425, line: 781, column: 2)
!14533 = !DILocation(line: 0, scope: !14514)
!14534 = !DILocation(line: 750, column: 2, scope: !14514)
!14535 = !DILocation(line: 780, column: 2, scope: !14511)
!14536 = !DILocation(line: 0, scope: !14532)
!14537 = !DILocation(line: 781, column: 2, scope: !14532)
!14538 = !DILocation(line: 752, column: 17, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14540, file: !2425, line: 750, column: 38)
!14540 = distinct !DILexicalBlock(scope: !14514, file: !2425, line: 750, column: 2)
!14541 = !DILocation(line: 753, column: 17, scope: !14539)
!14542 = !DILocation(line: 754, column: 17, scope: !14539)
!14543 = !DILocation(line: 755, column: 17, scope: !14539)
!14544 = !DILocation(line: 756, column: 17, scope: !14539)
!14545 = !DILocation(line: 757, column: 17, scope: !14539)
!14546 = !DILocation(line: 758, column: 17, scope: !14539)
!14547 = !DILocation(line: 759, column: 17, scope: !14539)
!14548 = !DILocation(line: 760, column: 17, scope: !14539)
!14549 = !DILocation(line: 751, column: 3, scope: !14539)
!14550 = !DILocation(line: 763, column: 16, scope: !14539)
!14551 = !DILocation(line: 763, column: 29, scope: !14539)
!14552 = !DILocation(line: 763, column: 39, scope: !14539)
!14553 = !DILocation(line: 750, column: 2, scope: !14540)
!14554 = !DILocation(line: 750, column: 2, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14540, file: !2425, line: 750, column: 2)
!14556 = distinct !{!14556, !14534, !14557}
!14557 = !DILocation(line: 764, column: 2, scope: !14514)
!14558 = !DILocation(line: 787, column: 2, scope: !14511)
!14559 = !DILocation(line: 788, column: 1, scope: !14511)
!14560 = !DILocation(line: 782, column: 20, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14562, file: !2425, line: 782, column: 7)
!14562 = distinct !DILexicalBlock(scope: !14563, file: !2425, line: 781, column: 38)
!14563 = distinct !DILexicalBlock(scope: !14532, file: !2425, line: 781, column: 2)
!14564 = !DILocation(line: 782, column: 31, scope: !14561)
!14565 = !DILocation(line: 782, column: 7, scope: !14562)
!14566 = !DILocation(line: 783, column: 37, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14561, file: !2425, line: 782, column: 51)
!14568 = !DILocation(line: 784, column: 10, scope: !14567)
!14569 = !DILocation(line: 783, column: 4, scope: !14567)
!14570 = !DILocation(line: 785, column: 3, scope: !14567)
!14571 = !DILocation(line: 781, column: 2, scope: !14563)
!14572 = !DILocation(line: 781, column: 2, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14563, file: !2425, line: 781, column: 2)
!14574 = distinct !{!14574, !14537, !14575}
!14575 = !DILocation(line: 786, column: 2, scope: !14532)
!14576 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3769, file: !3769, line: 403, type: !3770, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14577)
!14577 = !{!14578}
!14578 = !DILocalVariable(name: "t", arg: 1, scope: !14576, file: !3769, line: 403, type: !114)
!14579 = !DILocation(line: 0, scope: !14576)
!14580 = !DILocalVariable(name: "t", arg: 1, scope: !14581, file: !3769, line: 102, type: !114)
!14581 = distinct !DISubprogram(name: "z_tmcvt", scope: !3769, file: !3769, line: 102, type: !3777, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14582)
!14582 = !{!14580, !14583, !14584, !14585, !14586, !14587, !14588, !14589, !14590, !14591, !14592}
!14583 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14581, file: !3769, line: 102, type: !113)
!14584 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14581, file: !3769, line: 103, type: !113)
!14585 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14581, file: !3769, line: 103, type: !422)
!14586 = !DILocalVariable(name: "result32", arg: 5, scope: !14581, file: !3769, line: 104, type: !422)
!14587 = !DILocalVariable(name: "round_up", arg: 6, scope: !14581, file: !3769, line: 104, type: !422)
!14588 = !DILocalVariable(name: "round_off", arg: 7, scope: !14581, file: !3769, line: 105, type: !422)
!14589 = !DILocalVariable(name: "mul_ratio", scope: !14581, file: !3769, line: 107, type: !422)
!14590 = !DILocalVariable(name: "div_ratio", scope: !14581, file: !3769, line: 109, type: !422)
!14591 = !DILocalVariable(name: "off", scope: !14581, file: !3769, line: 116, type: !114)
!14592 = !DILocalVariable(name: "rdivisor", scope: !14593, file: !3769, line: 119, type: !113)
!14593 = distinct !DILexicalBlock(scope: !14594, file: !3769, line: 118, column: 18)
!14594 = distinct !DILexicalBlock(scope: !14581, file: !3769, line: 118, column: 6)
!14595 = !DILocation(line: 0, scope: !14581, inlinedAt: !14596)
!14596 = distinct !DILocation(line: 406, column: 9, scope: !14576)
!14597 = !DILocation(line: 145, column: 13, scope: !14598, inlinedAt: !14596)
!14598 = distinct !DILexicalBlock(scope: !14599, file: !3769, line: 144, column: 10)
!14599 = distinct !DILexicalBlock(scope: !14600, file: !3769, line: 142, column: 7)
!14600 = distinct !DILexicalBlock(scope: !14601, file: !3769, line: 141, column: 24)
!14601 = distinct !DILexicalBlock(scope: !14602, file: !3769, line: 141, column: 13)
!14602 = distinct !DILexicalBlock(scope: !14581, file: !3769, line: 134, column: 6)
!14603 = !DILocation(line: 406, column: 2, scope: !14576)
!14604 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2425, file: !2425, line: 817, type: !5170, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14605)
!14605 = !{!14606, !14607, !14608, !14609}
!14606 = !DILocalVariable(name: "entry", arg: 1, scope: !14604, file: !2425, line: 817, type: !5172)
!14607 = !DILocalVariable(name: "p1", arg: 2, scope: !14604, file: !2425, line: 818, type: !104)
!14608 = !DILocalVariable(name: "p2", arg: 3, scope: !14604, file: !2425, line: 818, type: !104)
!14609 = !DILocalVariable(name: "p3", arg: 4, scope: !14604, file: !2425, line: 818, type: !104)
!14610 = !DILocation(line: 0, scope: !14604)
!14611 = !DILocation(line: 822, column: 2, scope: !14604)
!14612 = !DILocation(line: 822, column: 17, scope: !14604)
!14613 = !DILocation(line: 822, column: 30, scope: !14604)
!14614 = !DILocation(line: 823, column: 2, scope: !14604)
!14615 = !DILocation(line: 845, column: 2, scope: !14604)
!14616 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2425, file: !2425, line: 888, type: !14617, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14619)
!14617 = !DISubroutineType(types: !14618)
!14618 = !{!108, !2429}
!14619 = !{!14620}
!14620 = !DILocalVariable(name: "thread", arg: 1, scope: !14616, file: !2425, line: 888, type: !2429)
!14621 = !DILocation(line: 0, scope: !14616)
!14622 = !DILocation(line: 893, column: 2, scope: !14616)
!14623 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2425, file: !2425, line: 897, type: !14624, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14626)
!14624 = !DISubroutineType(types: !14625)
!14625 = !{!108, !2429, !32}
!14626 = !{!14627, !14628}
!14627 = !DILocalVariable(name: "thread", arg: 1, scope: !14623, file: !2425, line: 897, type: !2429)
!14628 = !DILocalVariable(name: "options", arg: 2, scope: !14623, file: !2425, line: 897, type: !32)
!14629 = !DILocation(line: 0, scope: !14623)
!14630 = !DILocation(line: 902, column: 2, scope: !14623)
!14631 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2425, file: !2425, line: 1072, type: !14632, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14637)
!14632 = !DISubroutineType(types: !14633)
!14633 = !{!108, !2428, !14634}
!14634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14635, size: 32)
!14635 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !645, line: 234, baseType: !14636)
!14636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !645, line: 192, elements: !437)
!14637 = !{!14638, !14639}
!14638 = !DILocalVariable(name: "thread", arg: 1, scope: !14631, file: !2425, line: 1072, type: !2428)
!14639 = !DILocalVariable(name: "stats", arg: 2, scope: !14631, file: !2425, line: 1073, type: !14634)
!14640 = !DILocation(line: 0, scope: !14631)
!14641 = !DILocation(line: 1075, column: 14, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14631, file: !2425, line: 1075, column: 6)
!14643 = !DILocation(line: 1075, column: 23, scope: !14642)
!14644 = !DILocation(line: 1086, column: 1, scope: !14631)
!14645 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2425, file: !2425, line: 1088, type: !14646, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !14648)
!14646 = !DISubroutineType(types: !14647)
!14647 = !{!108, !14634}
!14648 = !{!14649}
!14649 = !DILocalVariable(name: "stats", arg: 1, scope: !14645, file: !2425, line: 1088, type: !14634)
!14650 = !DILocation(line: 0, scope: !14645)
!14651 = !DILocation(line: 1094, column: 12, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14645, file: !2425, line: 1094, column: 6)
!14653 = !DILocation(line: 1120, column: 1, scope: !14645)
!14654 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14655, file: !14655, line: 20, type: !3406, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3387, retainedNodes: !437)
!14655 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14656 = !DILocation(line: 30, column: 2, scope: !14654)
!14657 = !DILocation(line: 31, column: 1, scope: !14654)
!14658 = distinct !DISubprogram(name: "idle", scope: !14655, file: !14655, line: 33, type: !5175, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3387, retainedNodes: !14659)
!14659 = !{!14660, !14661, !14662}
!14660 = !DILocalVariable(name: "unused1", arg: 1, scope: !14658, file: !14655, line: 33, type: !104)
!14661 = !DILocalVariable(name: "unused2", arg: 2, scope: !14658, file: !14655, line: 33, type: !104)
!14662 = !DILocalVariable(name: "unused3", arg: 3, scope: !14658, file: !14655, line: 33, type: !104)
!14663 = !DILocation(line: 0, scope: !14658)
!14664 = !DILocation(line: 41, column: 2, scope: !14658)
!14665 = !DILocation(line: 55, column: 2, scope: !14666, inlinedAt: !14670)
!14666 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3387, retainedNodes: !14667)
!14667 = !{!14668, !14669}
!14668 = !DILocalVariable(name: "key", scope: !14666, file: !4080, line: 44, type: !32)
!14669 = !DILocalVariable(name: "tmp", scope: !14666, file: !4080, line: 53, type: !32)
!14670 = distinct !DILocation(line: 62, column: 10, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14658, file: !14655, line: 41, column: 15)
!14672 = !{i64 2256679}
!14673 = !DILocation(line: 0, scope: !14666, inlinedAt: !14670)
!14674 = !DILocation(line: 86, column: 3, scope: !14671)
!14675 = distinct !{!14675, !14664, !14676}
!14676 = !DILocation(line: 105, column: 2, scope: !14658)
!14677 = distinct !DISubprogram(name: "k_cpu_idle", scope: !359, file: !359, line: 5627, type: !3406, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3387, retainedNodes: !437)
!14678 = !DILocation(line: 5629, column: 2, scope: !14677)
!14679 = !DILocation(line: 5630, column: 1, scope: !14677)
!14680 = !DISubprogram(name: "arch_cpu_idle", scope: !5173, file: !5173, line: 167, type: !3406, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14681 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2657, file: !2657, line: 93, type: !14682, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14684)
!14682 = !DISubroutineType(types: !14683)
!14683 = !{!220, !2552, !2552}
!14684 = !{!14685, !14686, !14687, !14688}
!14685 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14681, file: !2657, line: 93, type: !2552)
!14686 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14681, file: !2657, line: 94, type: !2552)
!14687 = !DILocalVariable(name: "b1", scope: !14681, file: !2657, line: 97, type: !220)
!14688 = !DILocalVariable(name: "b2", scope: !14681, file: !2657, line: 98, type: !220)
!14689 = !DILocation(line: 0, scope: !14681)
!14690 = !DILocation(line: 97, column: 30, scope: !14681)
!14691 = !DILocation(line: 98, column: 30, scope: !14681)
!14692 = !DILocation(line: 100, column: 9, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14681, file: !2657, line: 100, column: 6)
!14694 = !DILocation(line: 100, column: 6, scope: !14681)
!14695 = !DILocation(line: 125, column: 1, scope: !14681)
!14696 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2657, file: !2657, line: 428, type: !14697, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14699)
!14697 = !DISubroutineType(types: !14698)
!14698 = !{null, !2552}
!14699 = !{!14700}
!14700 = !DILocalVariable(name: "curr", arg: 1, scope: !14696, file: !2657, line: 428, type: !2552)
!14701 = !DILocation(line: 0, scope: !14696)
!14702 = !DILocation(line: 434, column: 6, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14696, file: !2657, line: 434, column: 6)
!14704 = !DILocation(line: 434, column: 23, scope: !14703)
!14705 = !DILocation(line: 434, column: 6, scope: !14696)
!14706 = !DILocation(line: 435, column: 50, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14703, file: !2657, line: 434, column: 29)
!14708 = !DILocation(line: 435, column: 48, scope: !14707)
!14709 = !DILocation(line: 435, column: 29, scope: !14707)
!14710 = !DILocation(line: 436, column: 24, scope: !14707)
!14711 = !DILocation(line: 436, column: 3, scope: !14707)
!14712 = !DILocation(line: 437, column: 2, scope: !14707)
!14713 = !DILocation(line: 438, column: 1, scope: !14696)
!14714 = distinct !DISubprogram(name: "slice_time", scope: !2657, file: !2657, line: 407, type: !14715, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14717)
!14715 = !DISubroutineType(types: !14716)
!14716 = !{!108, !2552}
!14717 = !{!14718, !14719}
!14718 = !DILocalVariable(name: "curr", arg: 1, scope: !14714, file: !2657, line: 407, type: !2552)
!14719 = !DILocalVariable(name: "ret", scope: !14714, file: !2657, line: 409, type: !108)
!14720 = !DILocation(line: 0, scope: !14714)
!14721 = !DILocation(line: 409, column: 12, scope: !14714)
!14722 = !DILocation(line: 416, column: 2, scope: !14714)
!14723 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2657, file: !2657, line: 440, type: !14724, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14726)
!14724 = !DISubroutineType(types: !14725)
!14725 = !{null, !220, !108}
!14726 = !{!14727, !14728, !14729, !14735}
!14727 = !DILocalVariable(name: "slice", arg: 1, scope: !14723, file: !2657, line: 440, type: !220)
!14728 = !DILocalVariable(name: "prio", arg: 2, scope: !14723, file: !2657, line: 440, type: !108)
!14729 = !DILocalVariable(name: "__i", scope: !14730, file: !2657, line: 442, type: !14731)
!14730 = distinct !DILexicalBlock(scope: !14723, file: !2657, line: 442, column: 2)
!14731 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !14732)
!14732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !14733)
!14733 = !{!14734}
!14734 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14732, file: !436, line: 33, baseType: !108, size: 32)
!14735 = !DILocalVariable(name: "__key", scope: !14730, file: !2657, line: 442, type: !14731)
!14736 = !DILocation(line: 0, scope: !14723)
!14737 = !DILocation(line: 0, scope: !14730)
!14738 = !DILocalVariable(name: "l", arg: 1, scope: !14739, file: !436, line: 136, type: !14742)
!14739 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !14740, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14743)
!14740 = !DISubroutineType(types: !14741)
!14741 = !{!14731, !14742}
!14742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!14743 = !{!14738, !14744}
!14744 = !DILocalVariable(name: "k", scope: !14739, file: !436, line: 139, type: !14731)
!14745 = !DILocation(line: 0, scope: !14739, inlinedAt: !14746)
!14746 = distinct !DILocation(line: 442, column: 2, scope: !14730)
!14747 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !14752)
!14748 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14749)
!14749 = !{!14750, !14751}
!14750 = !DILocalVariable(name: "key", scope: !14748, file: !4080, line: 44, type: !32)
!14751 = !DILocalVariable(name: "tmp", scope: !14748, file: !4080, line: 53, type: !32)
!14752 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !14746)
!14753 = !{i64 2300650}
!14754 = !DILocation(line: 0, scope: !14748, inlinedAt: !14752)
!14755 = !DILocation(line: 443, column: 29, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14757, file: !2657, line: 442, column: 26)
!14757 = distinct !DILexicalBlock(scope: !14730, file: !2657, line: 442, column: 2)
!14758 = !DILocation(line: 444, column: 17, scope: !14756)
!14759 = !DILocation(line: 445, column: 51, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14756, file: !2657, line: 445, column: 7)
!14761 = !DILocation(line: 445, column: 7, scope: !14756)
!14762 = !DILocation(line: 0, scope: !14756)
!14763 = !DILocation(line: 451, column: 18, scope: !14756)
!14764 = !DILocation(line: 452, column: 3, scope: !14756)
!14765 = !DILocalVariable(name: "key", arg: 2, scope: !14766, file: !436, line: 190, type: !14731)
!14766 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !14767, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14769)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{null, !14742, !14731}
!14769 = !{!14770, !14765}
!14770 = !DILocalVariable(name: "l", arg: 1, scope: !14766, file: !436, line: 189, type: !14742)
!14771 = !DILocation(line: 0, scope: !14766, inlinedAt: !14772)
!14772 = distinct !DILocation(line: 442, column: 2, scope: !14757)
!14773 = !DILocalVariable(name: "key", arg: 1, scope: !14774, file: !4080, line: 84, type: !32)
!14774 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14775)
!14775 = !{!14773}
!14776 = !DILocation(line: 0, scope: !14774, inlinedAt: !14777)
!14777 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !14772)
!14778 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !14777)
!14779 = !{i64 2301467}
!14780 = !DILocation(line: 454, column: 1, scope: !14723)
!14781 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3769, file: !3769, line: 389, type: !8310, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14782)
!14782 = !{!14783}
!14783 = !DILocalVariable(name: "t", arg: 1, scope: !14781, file: !3769, line: 389, type: !113)
!14784 = !DILocation(line: 0, scope: !14781)
!14785 = !DILocalVariable(name: "t", arg: 1, scope: !14786, file: !3769, line: 102, type: !114)
!14786 = distinct !DISubprogram(name: "z_tmcvt", scope: !3769, file: !3769, line: 102, type: !3777, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14787)
!14787 = !{!14785, !14788, !14789, !14790, !14791, !14792, !14793, !14794, !14795, !14796, !14797}
!14788 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14786, file: !3769, line: 102, type: !113)
!14789 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14786, file: !3769, line: 103, type: !113)
!14790 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14786, file: !3769, line: 103, type: !422)
!14791 = !DILocalVariable(name: "result32", arg: 5, scope: !14786, file: !3769, line: 104, type: !422)
!14792 = !DILocalVariable(name: "round_up", arg: 6, scope: !14786, file: !3769, line: 104, type: !422)
!14793 = !DILocalVariable(name: "round_off", arg: 7, scope: !14786, file: !3769, line: 105, type: !422)
!14794 = !DILocalVariable(name: "mul_ratio", scope: !14786, file: !3769, line: 107, type: !422)
!14795 = !DILocalVariable(name: "div_ratio", scope: !14786, file: !3769, line: 109, type: !422)
!14796 = !DILocalVariable(name: "off", scope: !14786, file: !3769, line: 116, type: !114)
!14797 = !DILocalVariable(name: "rdivisor", scope: !14798, file: !3769, line: 119, type: !113)
!14798 = distinct !DILexicalBlock(scope: !14799, file: !3769, line: 118, column: 18)
!14799 = distinct !DILexicalBlock(scope: !14786, file: !3769, line: 118, column: 6)
!14800 = !DILocation(line: 0, scope: !14786, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 392, column: 9, scope: !14781)
!14802 = !DILocation(line: 143, column: 25, scope: !14803, inlinedAt: !14801)
!14803 = distinct !DILexicalBlock(scope: !14804, file: !3769, line: 142, column: 17)
!14804 = distinct !DILexicalBlock(scope: !14805, file: !3769, line: 142, column: 7)
!14805 = distinct !DILexicalBlock(scope: !14806, file: !3769, line: 141, column: 24)
!14806 = distinct !DILexicalBlock(scope: !14807, file: !3769, line: 141, column: 13)
!14807 = distinct !DILexicalBlock(scope: !14786, file: !3769, line: 134, column: 6)
!14808 = !DILocation(line: 392, column: 2, scope: !14781)
!14809 = distinct !DISubprogram(name: "z_time_slice", scope: !2657, file: !2657, line: 502, type: !9644, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14810)
!14810 = !{!14811, !14812}
!14811 = !DILocalVariable(name: "ticks", arg: 1, scope: !14809, file: !2657, line: 502, type: !108)
!14812 = !DILocalVariable(name: "key", scope: !14809, file: !2657, line: 511, type: !14731)
!14813 = !DILocation(line: 0, scope: !14809)
!14814 = !DILocation(line: 0, scope: !14739, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 511, column: 25, scope: !14809)
!14816 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !14817)
!14817 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !14815)
!14818 = !DILocation(line: 0, scope: !14748, inlinedAt: !14817)
!14819 = !DILocation(line: 514, column: 6, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14809, file: !2657, line: 514, column: 6)
!14821 = !DILocation(line: 514, column: 25, scope: !14820)
!14822 = !DILocation(line: 514, column: 22, scope: !14820)
!14823 = !DILocation(line: 514, column: 6, scope: !14809)
!14824 = !DILocation(line: 515, column: 3, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14820, file: !2657, line: 514, column: 35)
!14826 = !DILocation(line: 0, scope: !14766, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 516, column: 3, scope: !14825)
!14828 = !DILocation(line: 0, scope: !14774, inlinedAt: !14829)
!14829 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !14827)
!14830 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !14829)
!14831 = !DILocation(line: 517, column: 3, scope: !14825)
!14832 = !DILocation(line: 519, column: 18, scope: !14809)
!14833 = !DILocation(line: 522, column: 6, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14809, file: !2657, line: 522, column: 6)
!14835 = !DILocation(line: 522, column: 27, scope: !14834)
!14836 = !DILocation(line: 522, column: 30, scope: !14834)
!14837 = !DILocation(line: 522, column: 6, scope: !14809)
!14838 = !DILocation(line: 523, column: 30, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14840, file: !2657, line: 523, column: 7)
!14840 = distinct !DILexicalBlock(scope: !14834, file: !2657, line: 522, column: 51)
!14841 = !DILocation(line: 523, column: 13, scope: !14839)
!14842 = !DILocation(line: 523, column: 7, scope: !14840)
!14843 = !DILocation(line: 530, column: 10, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14839, file: !2657, line: 523, column: 43)
!14845 = !DILocation(line: 531, column: 3, scope: !14844)
!14846 = !DILocation(line: 532, column: 30, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14839, file: !2657, line: 531, column: 10)
!14848 = !DILocation(line: 535, column: 29, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14834, file: !2657, line: 534, column: 9)
!14850 = !DILocation(line: 0, scope: !14766, inlinedAt: !14851)
!14851 = distinct !DILocation(line: 537, column: 2, scope: !14809)
!14852 = !DILocation(line: 0, scope: !14774, inlinedAt: !14853)
!14853 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !14851)
!14854 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !14853)
!14855 = !DILocation(line: 538, column: 1, scope: !14809)
!14856 = distinct !DISubprogram(name: "sliceable", scope: !2657, file: !2657, line: 468, type: !14857, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14859)
!14857 = !DISubroutineType(types: !14858)
!14858 = !{!422, !2552}
!14859 = !{!14860, !14861}
!14860 = !DILocalVariable(name: "thread", arg: 1, scope: !14856, file: !2657, line: 468, type: !2552)
!14861 = !DILocalVariable(name: "ret", scope: !14856, file: !2657, line: 470, type: !422)
!14862 = !DILocation(line: 0, scope: !14856)
!14863 = !DILocation(line: 470, column: 13, scope: !14856)
!14864 = !DILocation(line: 471, column: 3, scope: !14856)
!14865 = !DILocation(line: 471, column: 7, scope: !14856)
!14866 = !DILocation(line: 472, column: 3, scope: !14856)
!14867 = !DILocation(line: 472, column: 37, scope: !14856)
!14868 = !DILocation(line: 472, column: 24, scope: !14856)
!14869 = !DILocation(line: 472, column: 43, scope: !14856)
!14870 = !DILocation(line: 472, column: 7, scope: !14856)
!14871 = !DILocation(line: 473, column: 3, scope: !14856)
!14872 = !DILocation(line: 473, column: 7, scope: !14856)
!14873 = !DILocation(line: 473, column: 6, scope: !14856)
!14874 = !DILocation(line: 479, column: 2, scope: !14856)
!14875 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2657, file: !2657, line: 482, type: !14876, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14878)
!14876 = !DISubroutineType(types: !14877)
!14877 = !{!14731, !14731}
!14878 = !{!14879, !14880}
!14879 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14875, file: !2657, line: 482, type: !14731)
!14880 = !DILocalVariable(name: "curr", scope: !14875, file: !2657, line: 484, type: !2552)
!14881 = !DILocation(line: 0, scope: !14875)
!14882 = !DILocation(line: 484, column: 26, scope: !14875)
!14883 = !DILocation(line: 493, column: 7, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14875, file: !2657, line: 493, column: 6)
!14885 = !DILocation(line: 493, column: 6, scope: !14875)
!14886 = !DILocation(line: 494, column: 3, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14884, file: !2657, line: 493, column: 49)
!14888 = !DILocation(line: 495, column: 2, scope: !14887)
!14889 = !DILocation(line: 496, column: 2, scope: !14875)
!14890 = !DILocation(line: 499, column: 1, scope: !14875)
!14891 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14016, file: !14016, line: 106, type: !14857, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14892)
!14892 = !{!14893, !14894}
!14893 = !DILocalVariable(name: "thread", arg: 1, scope: !14891, file: !14016, line: 106, type: !2552)
!14894 = !DILocalVariable(name: "state", scope: !14891, file: !14016, line: 108, type: !164)
!14895 = !DILocation(line: 0, scope: !14891)
!14896 = !DILocation(line: 108, column: 31, scope: !14891)
!14897 = !DILocation(line: 110, column: 16, scope: !14891)
!14898 = !DILocation(line: 111, column: 41, scope: !14891)
!14899 = !DILocation(line: 110, column: 2, scope: !14891)
!14900 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2657, file: !2657, line: 393, type: !14697, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14901)
!14901 = !{!14902}
!14902 = !DILocalVariable(name: "thread", arg: 1, scope: !14900, file: !2657, line: 393, type: !2552)
!14903 = !DILocation(line: 0, scope: !14900)
!14904 = !DILocation(line: 395, column: 6, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14900, file: !2657, line: 395, column: 6)
!14906 = !DILocation(line: 395, column: 6, scope: !14900)
!14907 = !DILocalVariable(name: "thread", arg: 1, scope: !14908, file: !2657, line: 264, type: !2552)
!14908 = distinct !DISubprogram(name: "dequeue_thread", scope: !2657, file: !2657, line: 264, type: !14697, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14909)
!14909 = !{!14907}
!14910 = !DILocation(line: 0, scope: !14908, inlinedAt: !14911)
!14911 = distinct !DILocation(line: 396, column: 3, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14905, file: !2657, line: 395, column: 34)
!14913 = !DILocation(line: 266, column: 15, scope: !14908, inlinedAt: !14911)
!14914 = !DILocation(line: 266, column: 28, scope: !14908, inlinedAt: !14911)
!14915 = !DILocalVariable(name: "thread", arg: 1, scope: !14916, file: !2657, line: 232, type: !2552)
!14916 = distinct !DISubprogram(name: "runq_remove", scope: !2657, file: !2657, line: 232, type: !14697, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14917)
!14917 = !{!14915}
!14918 = !DILocation(line: 0, scope: !14916, inlinedAt: !14919)
!14919 = distinct !DILocation(line: 268, column: 3, scope: !14920, inlinedAt: !14911)
!14920 = distinct !DILexicalBlock(scope: !14921, file: !2657, line: 267, column: 35)
!14921 = distinct !DILexicalBlock(scope: !14908, file: !2657, line: 267, column: 6)
!14922 = !DILocation(line: 234, column: 2, scope: !14916, inlinedAt: !14919)
!14923 = !DILocation(line: 397, column: 2, scope: !14912)
!14924 = !DILocalVariable(name: "thread", arg: 1, scope: !14925, file: !2657, line: 250, type: !2552)
!14925 = distinct !DISubprogram(name: "queue_thread", scope: !2657, file: !2657, line: 250, type: !14697, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14926)
!14926 = !{!14924}
!14927 = !DILocation(line: 0, scope: !14925, inlinedAt: !14928)
!14928 = distinct !DILocation(line: 398, column: 2, scope: !14900)
!14929 = !DILocation(line: 252, column: 15, scope: !14925, inlinedAt: !14928)
!14930 = !DILocation(line: 252, column: 28, scope: !14925, inlinedAt: !14928)
!14931 = !DILocalVariable(name: "thread", arg: 1, scope: !14932, file: !2657, line: 227, type: !2552)
!14932 = distinct !DISubprogram(name: "runq_add", scope: !2657, file: !2657, line: 227, type: !14697, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14933)
!14933 = !{!14931}
!14934 = !DILocation(line: 0, scope: !14932, inlinedAt: !14935)
!14935 = distinct !DILocation(line: 254, column: 3, scope: !14936, inlinedAt: !14928)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !2657, line: 253, column: 35)
!14937 = distinct !DILexicalBlock(scope: !14925, file: !2657, line: 253, column: 6)
!14938 = !DILocalVariable(name: "pq", arg: 1, scope: !14939, file: !2657, line: 181, type: !14942)
!14939 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2657, file: !2657, line: 181, type: !14940, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14943)
!14940 = !DISubroutineType(types: !14941)
!14941 = !{null, !14942, !2552}
!14942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!14943 = !{!14938, !14944, !14945}
!14944 = !DILocalVariable(name: "thread", arg: 2, scope: !14939, file: !2657, line: 182, type: !2552)
!14945 = !DILocalVariable(name: "t", scope: !14939, file: !2657, line: 184, type: !2552)
!14946 = !DILocation(line: 0, scope: !14939, inlinedAt: !14947)
!14947 = distinct !DILocation(line: 229, column: 2, scope: !14932, inlinedAt: !14935)
!14948 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !14947)
!14949 = distinct !DILexicalBlock(scope: !14939, file: !2657, line: 188, column: 2)
!14950 = !DILocation(line: 188, column: 2, scope: !14951, inlinedAt: !14947)
!14951 = distinct !DILexicalBlock(scope: !14949, file: !2657, line: 188, column: 2)
!14952 = !DILocation(line: 0, scope: !14949, inlinedAt: !14947)
!14953 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !14947)
!14954 = distinct !DILexicalBlock(scope: !14955, file: !2657, line: 189, column: 7)
!14955 = distinct !DILexicalBlock(scope: !14951, file: !2657, line: 188, column: 56)
!14956 = !DILocation(line: 189, column: 35, scope: !14954, inlinedAt: !14947)
!14957 = !DILocation(line: 189, column: 7, scope: !14955, inlinedAt: !14947)
!14958 = !DILocation(line: 191, column: 21, scope: !14959, inlinedAt: !14947)
!14959 = distinct !DILexicalBlock(scope: !14954, file: !2657, line: 189, column: 40)
!14960 = !DILocation(line: 190, column: 4, scope: !14959, inlinedAt: !14947)
!14961 = !DILocation(line: 192, column: 4, scope: !14959, inlinedAt: !14947)
!14962 = distinct !{!14962, !14948, !14963}
!14963 = !DILocation(line: 194, column: 2, scope: !14949, inlinedAt: !14947)
!14964 = !DILocation(line: 196, column: 37, scope: !14939, inlinedAt: !14947)
!14965 = !DILocation(line: 196, column: 2, scope: !14939, inlinedAt: !14947)
!14966 = !DILocation(line: 197, column: 1, scope: !14939, inlinedAt: !14947)
!14967 = !DILocation(line: 399, column: 25, scope: !14900)
!14968 = !DILocation(line: 399, column: 22, scope: !14900)
!14969 = !DILocation(line: 399, column: 2, scope: !14900)
!14970 = !DILocation(line: 400, column: 1, scope: !14900)
!14971 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14016, file: !14016, line: 136, type: !14857, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14972)
!14972 = !{!14973}
!14973 = !DILocalVariable(name: "thread", arg: 1, scope: !14971, file: !14016, line: 136, type: !2552)
!14974 = !DILocation(line: 0, scope: !14971)
!14975 = !DILocation(line: 138, column: 9, scope: !14971)
!14976 = !DILocation(line: 138, column: 2, scope: !14971)
!14977 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2657, file: !2657, line: 1137, type: !14940, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14978)
!14978 = !{!14979, !14980}
!14979 = !DILocalVariable(name: "pq", arg: 1, scope: !14977, file: !2657, line: 1137, type: !14942)
!14980 = !DILocalVariable(name: "thread", arg: 2, scope: !14977, file: !2657, line: 1137, type: !2552)
!14981 = !DILocation(line: 0, scope: !14977)
!14982 = !DILocation(line: 1141, column: 33, scope: !14977)
!14983 = !DILocation(line: 1141, column: 2, scope: !14977)
!14984 = !DILocation(line: 1142, column: 1, scope: !14977)
!14985 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !14986, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14988)
!14986 = !DISubroutineType(types: !14987)
!14987 = !{!2653, !14942}
!14988 = !{!14989}
!14989 = !DILocalVariable(name: "list", arg: 1, scope: !14985, file: !367, line: 294, type: !14942)
!14990 = !DILocation(line: 0, scope: !14985)
!14991 = !DILocation(line: 296, column: 9, scope: !14985)
!14992 = !DILocation(line: 296, column: 49, scope: !14985)
!14993 = !DILocation(line: 296, column: 2, scope: !14985)
!14994 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !14995, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !14997)
!14995 = !DISubroutineType(types: !14996)
!14996 = !{null, !2653, !2653}
!14997 = !{!14998, !14999, !15000}
!14998 = !DILocalVariable(name: "successor", arg: 1, scope: !14994, file: !367, line: 443, type: !2653)
!14999 = !DILocalVariable(name: "node", arg: 2, scope: !14994, file: !367, line: 443, type: !2653)
!15000 = !DILocalVariable(name: "prev", scope: !14994, file: !367, line: 445, type: !15001)
!15001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2653)
!15002 = !DILocation(line: 0, scope: !14994)
!15003 = !DILocation(line: 445, column: 39, scope: !14994)
!15004 = !DILocation(line: 447, column: 8, scope: !14994)
!15005 = !DILocation(line: 447, column: 13, scope: !14994)
!15006 = !DILocation(line: 448, column: 8, scope: !14994)
!15007 = !DILocation(line: 448, column: 13, scope: !14994)
!15008 = !DILocation(line: 449, column: 8, scope: !14994)
!15009 = !DILocation(line: 449, column: 13, scope: !14994)
!15010 = !DILocation(line: 450, column: 18, scope: !14994)
!15011 = !DILocation(line: 451, column: 1, scope: !14994)
!15012 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !15013, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15015)
!15013 = !DISubroutineType(types: !15014)
!15014 = !{!2653, !14942, !2653}
!15015 = !{!15016, !15017}
!15016 = !DILocalVariable(name: "list", arg: 1, scope: !15012, file: !367, line: 341, type: !14942)
!15017 = !DILocalVariable(name: "node", arg: 2, scope: !15012, file: !367, line: 342, type: !2653)
!15018 = !DILocation(line: 0, scope: !15012)
!15019 = !DILocation(line: 344, column: 15, scope: !15012)
!15020 = !DILocation(line: 344, column: 9, scope: !15012)
!15021 = !DILocation(line: 344, column: 26, scope: !15012)
!15022 = !DILocation(line: 344, column: 2, scope: !15012)
!15023 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !15024, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15026)
!15024 = !DISubroutineType(types: !15025)
!15025 = !{null, !14942, !2653}
!15026 = !{!15027, !15028, !15029}
!15027 = !DILocalVariable(name: "list", arg: 1, scope: !15023, file: !367, line: 404, type: !14942)
!15028 = !DILocalVariable(name: "node", arg: 2, scope: !15023, file: !367, line: 404, type: !2653)
!15029 = !DILocalVariable(name: "tail", scope: !15023, file: !367, line: 406, type: !15001)
!15030 = !DILocation(line: 0, scope: !15023)
!15031 = !DILocation(line: 406, column: 34, scope: !15023)
!15032 = !DILocation(line: 408, column: 8, scope: !15023)
!15033 = !DILocation(line: 408, column: 13, scope: !15023)
!15034 = !DILocation(line: 409, column: 8, scope: !15023)
!15035 = !DILocation(line: 409, column: 13, scope: !15023)
!15036 = !DILocation(line: 411, column: 8, scope: !15023)
!15037 = !DILocation(line: 411, column: 13, scope: !15023)
!15038 = !DILocation(line: 412, column: 13, scope: !15023)
!15039 = !DILocation(line: 413, column: 1, scope: !15023)
!15040 = distinct !DISubprogram(name: "update_cache", scope: !2657, file: !2657, line: 559, type: !9644, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15041)
!15041 = !{!15042, !15043}
!15042 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15040, file: !2657, line: 559, type: !108)
!15043 = !DILocalVariable(name: "thread", scope: !15040, file: !2657, line: 562, type: !2552)
!15044 = !DILocation(line: 0, scope: !15040)
!15045 = !DILocation(line: 239, column: 9, scope: !15046, inlinedAt: !15049)
!15046 = distinct !DISubprogram(name: "runq_best", scope: !2657, file: !2657, line: 237, type: !15047, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!15047 = !DISubroutineType(types: !15048)
!15048 = !{!2552}
!15049 = distinct !DILocation(line: 314, column: 28, scope: !15050, inlinedAt: !15053)
!15050 = distinct !DISubprogram(name: "next_up", scope: !2657, file: !2657, line: 312, type: !15047, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15051)
!15051 = !{!15052}
!15052 = !DILocalVariable(name: "thread", scope: !15050, file: !2657, line: 314, type: !2552)
!15053 = distinct !DILocation(line: 562, column: 28, scope: !15040)
!15054 = !DILocation(line: 0, scope: !15050, inlinedAt: !15053)
!15055 = !DILocation(line: 340, column: 17, scope: !15050, inlinedAt: !15053)
!15056 = !DILocation(line: 340, column: 9, scope: !15050, inlinedAt: !15053)
!15057 = !DILocalVariable(name: "thread", arg: 1, scope: !15058, file: !2657, line: 127, type: !2552)
!15058 = distinct !DISubprogram(name: "should_preempt", scope: !2657, file: !2657, line: 127, type: !15059, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15061)
!15059 = !DISubroutineType(types: !15060)
!15060 = !{!422, !2552, !108}
!15061 = !{!15057, !15062}
!15062 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15058, file: !2657, line: 128, type: !108)
!15063 = !DILocation(line: 0, scope: !15058, inlinedAt: !15064)
!15064 = distinct !DILocation(line: 564, column: 6, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15040, file: !2657, line: 564, column: 6)
!15066 = !DILocation(line: 133, column: 17, scope: !15067, inlinedAt: !15064)
!15067 = distinct !DILexicalBlock(scope: !15058, file: !2657, line: 133, column: 6)
!15068 = !DILocation(line: 0, scope: !15065)
!15069 = !DILocation(line: 133, column: 6, scope: !15058, inlinedAt: !15064)
!15070 = !DILocation(line: 140, column: 6, scope: !15071, inlinedAt: !15064)
!15071 = distinct !DILexicalBlock(scope: !15058, file: !2657, line: 140, column: 6)
!15072 = !DILocation(line: 140, column: 6, scope: !15058, inlinedAt: !15064)
!15073 = !DILocation(line: 150, column: 9, scope: !15074, inlinedAt: !15064)
!15074 = distinct !DILexicalBlock(scope: !15058, file: !2657, line: 149, column: 6)
!15075 = !DILocation(line: 149, column: 6, scope: !15058, inlinedAt: !15064)
!15076 = !DILocation(line: 157, column: 6, scope: !15077, inlinedAt: !15064)
!15077 = distinct !DILexicalBlock(scope: !15058, file: !2657, line: 157, column: 6)
!15078 = !DILocation(line: 564, column: 6, scope: !15040)
!15079 = !DILocation(line: 566, column: 14, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15081, file: !2657, line: 566, column: 7)
!15081 = distinct !DILexicalBlock(scope: !15065, file: !2657, line: 564, column: 42)
!15082 = !DILocation(line: 566, column: 7, scope: !15081)
!15083 = !DILocation(line: 567, column: 4, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15080, file: !2657, line: 566, column: 27)
!15085 = !DILocation(line: 568, column: 3, scope: !15084)
!15086 = !DILocation(line: 585, column: 1, scope: !15040)
!15087 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2657, file: !2657, line: 1144, type: !15088, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15090)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{!2552, !14942}
!15090 = !{!15091, !15092, !15093}
!15091 = !DILocalVariable(name: "pq", arg: 1, scope: !15087, file: !2657, line: 1144, type: !14942)
!15092 = !DILocalVariable(name: "thread", scope: !15087, file: !2657, line: 1146, type: !2552)
!15093 = !DILocalVariable(name: "n", scope: !15087, file: !2657, line: 1147, type: !2653)
!15094 = !DILocation(line: 0, scope: !15087)
!15095 = !DILocation(line: 1147, column: 19, scope: !15087)
!15096 = !DILocation(line: 1152, column: 2, scope: !15087)
!15097 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14016, file: !14016, line: 115, type: !14857, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15098)
!15098 = !{!15099}
!15099 = !DILocalVariable(name: "thread", arg: 1, scope: !15097, file: !14016, line: 115, type: !2552)
!15100 = !DILocation(line: 0, scope: !15097)
!15101 = !DILocation(line: 117, column: 46, scope: !15097)
!15102 = !DILocation(line: 117, column: 10, scope: !15097)
!15103 = !DILocation(line: 117, column: 9, scope: !15097)
!15104 = !DILocation(line: 117, column: 2, scope: !15097)
!15105 = distinct !DISubprogram(name: "is_preempt", scope: !2657, file: !2657, line: 62, type: !14715, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15106)
!15106 = !{!15107}
!15107 = !DILocalVariable(name: "thread", arg: 1, scope: !15105, file: !2657, line: 62, type: !2552)
!15108 = !DILocation(line: 0, scope: !15105)
!15109 = !DILocation(line: 65, column: 22, scope: !15105)
!15110 = !DILocation(line: 65, column: 30, scope: !15105)
!15111 = !DILocation(line: 65, column: 2, scope: !15105)
!15112 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14410, file: !14410, line: 35, type: !15113, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15117)
!15113 = !DISubroutineType(types: !15114)
!15114 = !{!422, !15115}
!15115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15116, size: 32)
!15116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2603)
!15117 = !{!15118}
!15118 = !DILocalVariable(name: "to", arg: 1, scope: !15112, file: !14410, line: 35, type: !15115)
!15119 = !DILocation(line: 0, scope: !15112)
!15120 = !DILocation(line: 37, column: 35, scope: !15112)
!15121 = !DILocation(line: 37, column: 10, scope: !15112)
!15122 = !DILocation(line: 37, column: 9, scope: !15112)
!15123 = !DILocation(line: 37, column: 2, scope: !15112)
!15124 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !15125, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15129)
!15125 = !DISubroutineType(types: !15126)
!15126 = !{!422, !15127}
!15127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15128, size: 32)
!15128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2562)
!15129 = !{!15130}
!15130 = !DILocalVariable(name: "node", arg: 1, scope: !15124, file: !367, line: 225, type: !15127)
!15131 = !DILocation(line: 0, scope: !15124)
!15132 = !DILocation(line: 227, column: 15, scope: !15124)
!15133 = !DILocation(line: 227, column: 20, scope: !15124)
!15134 = !DILocation(line: 227, column: 2, scope: !15124)
!15135 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !15013, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15136)
!15136 = !{!15137, !15138}
!15137 = !DILocalVariable(name: "list", arg: 1, scope: !15135, file: !367, line: 325, type: !14942)
!15138 = !DILocalVariable(name: "node", arg: 2, scope: !15135, file: !367, line: 326, type: !2653)
!15139 = !DILocation(line: 0, scope: !15135)
!15140 = !DILocation(line: 328, column: 24, scope: !15135)
!15141 = !DILocation(line: 328, column: 15, scope: !15135)
!15142 = !DILocation(line: 328, column: 9, scope: !15135)
!15143 = !DILocation(line: 328, column: 45, scope: !15135)
!15144 = !DILocation(line: 328, column: 2, scope: !15135)
!15145 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !15146, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15148)
!15146 = !DISubroutineType(types: !15147)
!15147 = !{!422, !14942}
!15148 = !{!15149}
!15149 = !DILocalVariable(name: "list", arg: 1, scope: !15145, file: !367, line: 266, type: !14942)
!15150 = !DILocation(line: 0, scope: !15145)
!15151 = !DILocation(line: 268, column: 15, scope: !15145)
!15152 = !DILocation(line: 268, column: 20, scope: !15145)
!15153 = !DILocation(line: 268, column: 2, scope: !15145)
!15154 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !15155, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15157)
!15155 = !DISubroutineType(types: !15156)
!15156 = !{null, !2653}
!15157 = !{!15158, !15159, !15160}
!15158 = !DILocalVariable(name: "node", arg: 1, scope: !15154, file: !367, line: 496, type: !2653)
!15159 = !DILocalVariable(name: "prev", scope: !15154, file: !367, line: 498, type: !15001)
!15160 = !DILocalVariable(name: "next", scope: !15154, file: !367, line: 499, type: !15001)
!15161 = !DILocation(line: 0, scope: !15154)
!15162 = !DILocation(line: 498, column: 34, scope: !15154)
!15163 = !DILocation(line: 499, column: 34, scope: !15154)
!15164 = !DILocation(line: 501, column: 8, scope: !15154)
!15165 = !DILocation(line: 501, column: 13, scope: !15154)
!15166 = !DILocation(line: 502, column: 8, scope: !15154)
!15167 = !DILocation(line: 502, column: 13, scope: !15154)
!15168 = !DILocation(line: 503, column: 2, scope: !15154)
!15169 = !DILocation(line: 504, column: 1, scope: !15154)
!15170 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !15155, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15171)
!15171 = !{!15172}
!15172 = !DILocalVariable(name: "node", arg: 1, scope: !15170, file: !367, line: 211, type: !2653)
!15173 = !DILocation(line: 0, scope: !15170)
!15174 = !DILocation(line: 213, column: 8, scope: !15170)
!15175 = !DILocation(line: 213, column: 13, scope: !15170)
!15176 = !DILocation(line: 214, column: 8, scope: !15170)
!15177 = !DILocation(line: 214, column: 13, scope: !15170)
!15178 = !DILocation(line: 215, column: 1, scope: !15170)
!15179 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14016, file: !14016, line: 131, type: !15180, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15182)
!15180 = !DISubroutineType(types: !15181)
!15181 = !{!422, !2552, !113}
!15182 = !{!15183, !15184}
!15183 = !DILocalVariable(name: "thread", arg: 1, scope: !15179, file: !14016, line: 131, type: !2552)
!15184 = !DILocalVariable(name: "state", arg: 2, scope: !15179, file: !14016, line: 131, type: !113)
!15185 = !DILocation(line: 0, scope: !15179)
!15186 = !DILocation(line: 133, column: 23, scope: !15179)
!15187 = !DILocation(line: 133, column: 45, scope: !15179)
!15188 = !DILocation(line: 133, column: 2, scope: !15179)
!15189 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14016, file: !14016, line: 211, type: !15190, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15192)
!15190 = !DISubroutineType(types: !15191)
!15191 = !{!422, !108, !108}
!15192 = !{!15193, !15194}
!15193 = !DILocalVariable(name: "prio", arg: 1, scope: !15189, file: !14016, line: 211, type: !108)
!15194 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15189, file: !14016, line: 211, type: !108)
!15195 = !DILocation(line: 0, scope: !15189)
!15196 = !DILocation(line: 213, column: 9, scope: !15189)
!15197 = !DILocation(line: 213, column: 2, scope: !15189)
!15198 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14016, file: !14016, line: 83, type: !14857, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15199)
!15199 = !{!15200}
!15200 = !DILocalVariable(name: "thread", arg: 1, scope: !15198, file: !14016, line: 83, type: !2552)
!15201 = !DILocation(line: 0, scope: !15198)
!15202 = !DILocation(line: 89, column: 16, scope: !15198)
!15203 = !DILocation(line: 89, column: 2, scope: !15198)
!15204 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14016, file: !14016, line: 206, type: !15190, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15205)
!15205 = !{!15206, !15207}
!15206 = !DILocalVariable(name: "prio1", arg: 1, scope: !15204, file: !14016, line: 206, type: !108)
!15207 = !DILocalVariable(name: "prio2", arg: 2, scope: !15204, file: !14016, line: 206, type: !108)
!15208 = !DILocation(line: 0, scope: !15204)
!15209 = !DILocation(line: 208, column: 15, scope: !15204)
!15210 = !DILocation(line: 208, column: 2, scope: !15204)
!15211 = distinct !DISubprogram(name: "z_ready_thread", scope: !2657, file: !2657, line: 635, type: !14697, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15212)
!15212 = !{!15213, !15214, !15216}
!15213 = !DILocalVariable(name: "thread", arg: 1, scope: !15211, file: !2657, line: 635, type: !2552)
!15214 = !DILocalVariable(name: "__i", scope: !15215, file: !2657, line: 637, type: !14731)
!15215 = distinct !DILexicalBlock(scope: !15211, file: !2657, line: 637, column: 2)
!15216 = !DILocalVariable(name: "__key", scope: !15215, file: !2657, line: 637, type: !14731)
!15217 = !DILocation(line: 0, scope: !15211)
!15218 = !DILocation(line: 0, scope: !15215)
!15219 = !DILocation(line: 0, scope: !14739, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 637, column: 2, scope: !15215)
!15221 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15220)
!15223 = !DILocation(line: 0, scope: !14748, inlinedAt: !15222)
!15224 = !DILocation(line: 639, column: 4, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15226, file: !2657, line: 638, column: 41)
!15226 = distinct !DILexicalBlock(scope: !15227, file: !2657, line: 638, column: 7)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !2657, line: 637, column: 26)
!15228 = distinct !DILexicalBlock(scope: !15215, file: !2657, line: 637, column: 2)
!15229 = !DILocation(line: 0, scope: !14766, inlinedAt: !15230)
!15230 = distinct !DILocation(line: 637, column: 2, scope: !15228)
!15231 = !DILocation(line: 0, scope: !14774, inlinedAt: !15232)
!15232 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15230)
!15233 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15232)
!15234 = !DILocation(line: 642, column: 1, scope: !15211)
!15235 = distinct !DISubprogram(name: "ready_thread", scope: !2657, file: !2657, line: 617, type: !14697, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15236)
!15236 = !{!15237}
!15237 = !DILocalVariable(name: "thread", arg: 1, scope: !15235, file: !2657, line: 617, type: !2552)
!15238 = !DILocation(line: 0, scope: !15235)
!15239 = !DILocation(line: 626, column: 7, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15235, file: !2657, line: 626, column: 6)
!15241 = !DILocation(line: 626, column: 34, scope: !15240)
!15242 = !DILocation(line: 626, column: 37, scope: !15240)
!15243 = !DILocation(line: 626, column: 6, scope: !15235)
!15244 = !DILocation(line: 0, scope: !14925, inlinedAt: !15245)
!15245 = distinct !DILocation(line: 629, column: 3, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15240, file: !2657, line: 626, column: 64)
!15247 = !DILocation(line: 252, column: 15, scope: !14925, inlinedAt: !15245)
!15248 = !DILocation(line: 252, column: 28, scope: !14925, inlinedAt: !15245)
!15249 = !DILocation(line: 0, scope: !14932, inlinedAt: !15250)
!15250 = distinct !DILocation(line: 254, column: 3, scope: !14936, inlinedAt: !15245)
!15251 = !DILocation(line: 0, scope: !14939, inlinedAt: !15252)
!15252 = distinct !DILocation(line: 229, column: 2, scope: !14932, inlinedAt: !15250)
!15253 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !15252)
!15254 = !DILocation(line: 188, column: 2, scope: !14951, inlinedAt: !15252)
!15255 = !DILocation(line: 0, scope: !14949, inlinedAt: !15252)
!15256 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !15252)
!15257 = !DILocation(line: 189, column: 35, scope: !14954, inlinedAt: !15252)
!15258 = !DILocation(line: 189, column: 7, scope: !14955, inlinedAt: !15252)
!15259 = !DILocation(line: 191, column: 21, scope: !14959, inlinedAt: !15252)
!15260 = !DILocation(line: 190, column: 4, scope: !14959, inlinedAt: !15252)
!15261 = !DILocation(line: 192, column: 4, scope: !14959, inlinedAt: !15252)
!15262 = distinct !{!15262, !15253, !15263}
!15263 = !DILocation(line: 194, column: 2, scope: !14949, inlinedAt: !15252)
!15264 = !DILocation(line: 196, column: 37, scope: !14939, inlinedAt: !15252)
!15265 = !DILocation(line: 196, column: 2, scope: !14939, inlinedAt: !15252)
!15266 = !DILocation(line: 197, column: 1, scope: !14939, inlinedAt: !15252)
!15267 = !DILocation(line: 630, column: 3, scope: !15246)
!15268 = !DILocation(line: 632, column: 2, scope: !15246)
!15269 = !DILocation(line: 633, column: 1, scope: !15235)
!15270 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14016, file: !14016, line: 120, type: !14857, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15271)
!15271 = !{!15272}
!15272 = !DILocalVariable(name: "thread", arg: 1, scope: !15270, file: !14016, line: 120, type: !2552)
!15273 = !DILocation(line: 0, scope: !15270)
!15274 = !DILocation(line: 122, column: 12, scope: !15270)
!15275 = !DILocation(line: 122, column: 62, scope: !15270)
!15276 = !DILocation(line: 123, column: 4, scope: !15270)
!15277 = !DILocation(line: 122, column: 2, scope: !15270)
!15278 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2657, file: !2657, line: 644, type: !14697, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15279)
!15279 = !{!15280, !15281, !15283}
!15280 = !DILocalVariable(name: "thread", arg: 1, scope: !15278, file: !2657, line: 644, type: !2552)
!15281 = !DILocalVariable(name: "__i", scope: !15282, file: !2657, line: 646, type: !14731)
!15282 = distinct !DILexicalBlock(scope: !15278, file: !2657, line: 646, column: 2)
!15283 = !DILocalVariable(name: "__key", scope: !15282, file: !2657, line: 646, type: !14731)
!15284 = !DILocation(line: 0, scope: !15278)
!15285 = !DILocation(line: 0, scope: !15282)
!15286 = !DILocation(line: 0, scope: !14739, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 646, column: 2, scope: !15282)
!15288 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15289)
!15289 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15287)
!15290 = !DILocation(line: 0, scope: !14748, inlinedAt: !15289)
!15291 = !DILocation(line: 647, column: 3, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15293, file: !2657, line: 646, column: 26)
!15293 = distinct !DILexicalBlock(scope: !15282, file: !2657, line: 646, column: 2)
!15294 = !DILocation(line: 0, scope: !14766, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 646, column: 2, scope: !15293)
!15296 = !DILocation(line: 0, scope: !14774, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15295)
!15298 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15297)
!15299 = !DILocation(line: 649, column: 1, scope: !15278)
!15300 = distinct !DISubprogram(name: "z_sched_start", scope: !2657, file: !2657, line: 651, type: !14697, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15301)
!15301 = !{!15302, !15303}
!15302 = !DILocalVariable(name: "thread", arg: 1, scope: !15300, file: !2657, line: 651, type: !2552)
!15303 = !DILocalVariable(name: "key", scope: !15300, file: !2657, line: 653, type: !14731)
!15304 = !DILocation(line: 0, scope: !15300)
!15305 = !DILocation(line: 0, scope: !14739, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 653, column: 25, scope: !15300)
!15307 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15306)
!15309 = !DILocation(line: 0, scope: !14748, inlinedAt: !15308)
!15310 = !DILocation(line: 655, column: 6, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15300, file: !2657, line: 655, column: 6)
!15312 = !DILocation(line: 655, column: 6, scope: !15300)
!15313 = !DILocation(line: 0, scope: !14766, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 656, column: 3, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !15311, file: !2657, line: 655, column: 36)
!15316 = !DILocation(line: 0, scope: !14774, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15314)
!15318 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15317)
!15319 = !DILocation(line: 657, column: 3, scope: !15315)
!15320 = !DILocation(line: 660, column: 2, scope: !15300)
!15321 = !DILocation(line: 661, column: 2, scope: !15300)
!15322 = !DILocation(line: 662, column: 2, scope: !15300)
!15323 = !DILocation(line: 663, column: 1, scope: !15300)
!15324 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14016, file: !14016, line: 126, type: !14857, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15325)
!15325 = !{!15326}
!15326 = !DILocalVariable(name: "thread", arg: 1, scope: !15324, file: !14016, line: 126, type: !2552)
!15327 = !DILocation(line: 0, scope: !15324)
!15328 = !DILocation(line: 128, column: 23, scope: !15324)
!15329 = !DILocation(line: 128, column: 36, scope: !15324)
!15330 = !DILocation(line: 128, column: 56, scope: !15324)
!15331 = !DILocation(line: 128, column: 2, scope: !15324)
!15332 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14016, file: !14016, line: 155, type: !14697, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15333)
!15333 = !{!15334}
!15334 = !DILocalVariable(name: "thread", arg: 1, scope: !15332, file: !14016, line: 155, type: !2552)
!15335 = !DILocation(line: 0, scope: !15332)
!15336 = !DILocation(line: 157, column: 15, scope: !15332)
!15337 = !DILocation(line: 157, column: 28, scope: !15332)
!15338 = !DILocation(line: 158, column: 1, scope: !15332)
!15339 = distinct !DISubprogram(name: "z_reschedule", scope: !2657, file: !2657, line: 967, type: !14767, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15340)
!15340 = !{!15341, !15342}
!15341 = !DILocalVariable(name: "lock", arg: 1, scope: !15339, file: !2657, line: 967, type: !14742)
!15342 = !DILocalVariable(name: "key", arg: 2, scope: !15339, file: !2657, line: 967, type: !14731)
!15343 = !DILocation(line: 0, scope: !15339)
!15344 = !DILocation(line: 969, column: 6, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15339, file: !2657, line: 969, column: 6)
!15346 = !DILocation(line: 969, column: 23, scope: !15345)
!15347 = !DILocation(line: 969, column: 26, scope: !15345)
!15348 = !DILocation(line: 969, column: 6, scope: !15339)
!15349 = !DILocalVariable(name: "key", arg: 2, scope: !15350, file: !14120, line: 193, type: !14731)
!15350 = distinct !DISubprogram(name: "z_swap", scope: !14120, file: !14120, line: 193, type: !15351, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15353)
!15351 = !DISubroutineType(types: !15352)
!15352 = !{!108, !14742, !14731}
!15353 = !{!15354, !15349}
!15354 = !DILocalVariable(name: "lock", arg: 1, scope: !15350, file: !14120, line: 193, type: !14742)
!15355 = !DILocation(line: 0, scope: !15350, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 970, column: 3, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15345, file: !2657, line: 969, column: 39)
!15358 = !DILocation(line: 196, column: 9, scope: !15350, inlinedAt: !15356)
!15359 = !DILocation(line: 971, column: 2, scope: !15357)
!15360 = !DILocation(line: 0, scope: !14766, inlinedAt: !15361)
!15361 = distinct !DILocation(line: 972, column: 3, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15345, file: !2657, line: 971, column: 9)
!15363 = !DILocation(line: 0, scope: !14774, inlinedAt: !15364)
!15364 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15361)
!15365 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15364)
!15366 = !DILocation(line: 975, column: 1, scope: !15339)
!15367 = distinct !DISubprogram(name: "resched", scope: !2657, file: !2657, line: 940, type: !15368, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15370)
!15368 = !DISubroutineType(types: !15369)
!15369 = !{!422, !113}
!15370 = !{!15371}
!15371 = !DILocalVariable(name: "key", arg: 1, scope: !15367, file: !2657, line: 940, type: !113)
!15372 = !DILocation(line: 0, scope: !15367)
!15373 = !DILocalVariable(name: "key", arg: 1, scope: !15374, file: !4080, line: 112, type: !32)
!15374 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4080, file: !4080, line: 112, type: !15375, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15377)
!15375 = !DISubroutineType(types: !15376)
!15376 = !{!422, !32}
!15377 = !{!15373}
!15378 = !DILocation(line: 0, scope: !15374, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 946, column: 9, scope: !15367)
!15380 = !DILocation(line: 115, column: 13, scope: !15374, inlinedAt: !15379)
!15381 = !DILocation(line: 946, column: 32, scope: !15367)
!15382 = !DILocation(line: 1031, column: 3, scope: !15383, inlinedAt: !15386)
!15383 = distinct !DISubprogram(name: "__get_IPSR", scope: !7064, file: !7064, line: 1027, type: !7145, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15384)
!15384 = !{!15385}
!15385 = !DILocalVariable(name: "result", scope: !15383, file: !7064, line: 1029, type: !113)
!15386 = distinct !DILocation(line: 48, column: 10, scope: !15387, inlinedAt: !15388)
!15387 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8082, file: !8082, line: 46, type: !8083, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!15388 = distinct !DILocation(line: 946, column: 36, scope: !15367)
!15389 = !{i64 3555521}
!15390 = !DILocation(line: 0, scope: !15383, inlinedAt: !15386)
!15391 = !DILocation(line: 48, column: 9, scope: !15387, inlinedAt: !15388)
!15392 = !DILocation(line: 946, column: 2, scope: !15367)
!15393 = distinct !DISubprogram(name: "need_swap", scope: !2657, file: !2657, line: 953, type: !8083, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15394)
!15394 = !{!15395}
!15395 = !DILocalVariable(name: "new_thread", scope: !15393, file: !2657, line: 959, type: !2552)
!15396 = !DILocation(line: 962, column: 31, scope: !15393)
!15397 = !DILocation(line: 0, scope: !15393)
!15398 = !DILocation(line: 963, column: 23, scope: !15393)
!15399 = !DILocation(line: 963, column: 20, scope: !15393)
!15400 = !DILocation(line: 963, column: 2, scope: !15393)
!15401 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14120, file: !14120, line: 181, type: !7074, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15402)
!15402 = !{!15403, !15404}
!15403 = !DILocalVariable(name: "key", arg: 1, scope: !15401, file: !14120, line: 181, type: !32)
!15404 = !DILocalVariable(name: "ret", scope: !15401, file: !14120, line: 183, type: !108)
!15405 = !DILocation(line: 0, scope: !15401)
!15406 = !DILocation(line: 185, column: 8, scope: !15401)
!15407 = !DILocation(line: 186, column: 2, scope: !15401)
!15408 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2657, file: !2657, line: 665, type: !14697, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15409)
!15409 = !{!15410, !15411, !15413}
!15410 = !DILocalVariable(name: "thread", arg: 1, scope: !15408, file: !2657, line: 665, type: !2552)
!15411 = !DILocalVariable(name: "__i", scope: !15412, file: !2657, line: 671, type: !14731)
!15412 = distinct !DILexicalBlock(scope: !15408, file: !2657, line: 671, column: 2)
!15413 = !DILocalVariable(name: "__key", scope: !15412, file: !2657, line: 671, type: !14731)
!15414 = !DILocation(line: 0, scope: !15408)
!15415 = !DILocation(line: 669, column: 8, scope: !15408)
!15416 = !DILocation(line: 0, scope: !15412)
!15417 = !DILocation(line: 0, scope: !14739, inlinedAt: !15418)
!15418 = distinct !DILocation(line: 671, column: 2, scope: !15412)
!15419 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15420)
!15420 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15418)
!15421 = !DILocation(line: 0, scope: !14748, inlinedAt: !15420)
!15422 = !DILocation(line: 672, column: 7, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15424, file: !2657, line: 672, column: 7)
!15424 = distinct !DILexicalBlock(scope: !15425, file: !2657, line: 671, column: 26)
!15425 = distinct !DILexicalBlock(scope: !15412, file: !2657, line: 671, column: 2)
!15426 = !DILocation(line: 672, column: 7, scope: !15424)
!15427 = !DILocation(line: 0, scope: !14908, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 673, column: 4, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15423, file: !2657, line: 672, column: 35)
!15430 = !DILocation(line: 266, column: 15, scope: !14908, inlinedAt: !15428)
!15431 = !DILocation(line: 266, column: 28, scope: !14908, inlinedAt: !15428)
!15432 = !DILocation(line: 0, scope: !14916, inlinedAt: !15433)
!15433 = distinct !DILocation(line: 268, column: 3, scope: !14920, inlinedAt: !15428)
!15434 = !DILocation(line: 234, column: 2, scope: !14916, inlinedAt: !15433)
!15435 = !DILocation(line: 674, column: 3, scope: !15429)
!15436 = !DILocation(line: 675, column: 3, scope: !15424)
!15437 = !DILocation(line: 676, column: 26, scope: !15424)
!15438 = !DILocation(line: 676, column: 23, scope: !15424)
!15439 = !DILocation(line: 676, column: 3, scope: !15424)
!15440 = !DILocation(line: 0, scope: !14766, inlinedAt: !15441)
!15441 = distinct !DILocation(line: 671, column: 2, scope: !15425)
!15442 = !DILocation(line: 0, scope: !14774, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15441)
!15444 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15443)
!15445 = !DILocation(line: 679, column: 16, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15408, file: !2657, line: 679, column: 6)
!15447 = !DILocation(line: 679, column: 13, scope: !15446)
!15448 = !DILocation(line: 679, column: 6, scope: !15408)
!15449 = !DILocation(line: 680, column: 3, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15446, file: !2657, line: 679, column: 26)
!15451 = !DILocation(line: 681, column: 2, scope: !15450)
!15452 = !DILocation(line: 684, column: 1, scope: !15408)
!15453 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14410, file: !14410, line: 52, type: !14715, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15454)
!15454 = !{!15455}
!15455 = !DILocalVariable(name: "thread", arg: 1, scope: !15453, file: !14410, line: 52, type: !2552)
!15456 = !DILocation(line: 0, scope: !15453)
!15457 = !DILocation(line: 54, column: 39, scope: !15453)
!15458 = !DILocation(line: 54, column: 9, scope: !15453)
!15459 = !DILocation(line: 54, column: 2, scope: !15453)
!15460 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14016, file: !14016, line: 141, type: !14697, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15461)
!15461 = !{!15462}
!15462 = !DILocalVariable(name: "thread", arg: 1, scope: !15460, file: !14016, line: 141, type: !2552)
!15463 = !DILocation(line: 0, scope: !15460)
!15464 = !DILocation(line: 143, column: 15, scope: !15460)
!15465 = !DILocation(line: 143, column: 28, scope: !15460)
!15466 = !DILocation(line: 146, column: 1, scope: !15460)
!15467 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14016, file: !14016, line: 73, type: !3406, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!15468 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 75, column: 30, scope: !15467)
!15470 = !DILocation(line: 0, scope: !14748, inlinedAt: !15469)
!15471 = !DILocation(line: 75, column: 9, scope: !15467)
!15472 = !DILocation(line: 76, column: 1, scope: !15467)
!15473 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2657, file: !2657, line: 977, type: !7155, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15474)
!15474 = !{!15475}
!15475 = !DILocalVariable(name: "key", arg: 1, scope: !15473, file: !2657, line: 977, type: !113)
!15476 = !DILocation(line: 0, scope: !15473)
!15477 = !DILocation(line: 979, column: 6, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15473, file: !2657, line: 979, column: 6)
!15479 = !DILocation(line: 979, column: 6, scope: !15473)
!15480 = !DILocation(line: 980, column: 3, scope: !15481)
!15481 = distinct !DILexicalBlock(scope: !15478, file: !2657, line: 979, column: 20)
!15482 = !DILocation(line: 981, column: 2, scope: !15481)
!15483 = !DILocation(line: 0, scope: !14774, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 982, column: 3, scope: !15485)
!15485 = distinct !DILexicalBlock(scope: !15478, file: !2657, line: 981, column: 9)
!15486 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15484)
!15487 = !DILocation(line: 985, column: 1, scope: !15473)
!15488 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2657, file: !2657, line: 695, type: !14697, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15489)
!15489 = !{!15490, !15491}
!15490 = !DILocalVariable(name: "thread", arg: 1, scope: !15488, file: !2657, line: 695, type: !2552)
!15491 = !DILocalVariable(name: "key", scope: !15488, file: !2657, line: 699, type: !14731)
!15492 = !DILocation(line: 0, scope: !15488)
!15493 = !DILocation(line: 0, scope: !14739, inlinedAt: !15494)
!15494 = distinct !DILocation(line: 699, column: 25, scope: !15488)
!15495 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15496)
!15496 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15494)
!15497 = !DILocation(line: 0, scope: !14748, inlinedAt: !15496)
!15498 = !DILocation(line: 702, column: 7, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15488, file: !2657, line: 702, column: 6)
!15500 = !DILocation(line: 702, column: 6, scope: !15488)
!15501 = !DILocation(line: 0, scope: !14766, inlinedAt: !15502)
!15502 = distinct !DILocation(line: 703, column: 3, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15499, file: !2657, line: 702, column: 38)
!15504 = !DILocation(line: 0, scope: !14774, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15502)
!15506 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15505)
!15507 = !DILocation(line: 704, column: 3, scope: !15503)
!15508 = !DILocation(line: 707, column: 2, scope: !15488)
!15509 = !DILocation(line: 708, column: 2, scope: !15488)
!15510 = !DILocation(line: 710, column: 2, scope: !15488)
!15511 = !DILocation(line: 713, column: 1, scope: !15488)
!15512 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14016, file: !14016, line: 96, type: !14857, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15513)
!15513 = !{!15514}
!15514 = !DILocalVariable(name: "thread", arg: 1, scope: !15512, file: !14016, line: 96, type: !2552)
!15515 = !DILocation(line: 0, scope: !15512)
!15516 = !DILocation(line: 98, column: 23, scope: !15512)
!15517 = !DILocation(line: 98, column: 36, scope: !15512)
!15518 = !DILocation(line: 98, column: 57, scope: !15512)
!15519 = !DILocation(line: 98, column: 2, scope: !15512)
!15520 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14016, file: !14016, line: 148, type: !14697, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15521)
!15521 = !{!15522}
!15522 = !DILocalVariable(name: "thread", arg: 1, scope: !15520, file: !14016, line: 148, type: !2552)
!15523 = !DILocation(line: 0, scope: !15520)
!15524 = !DILocation(line: 150, column: 15, scope: !15520)
!15525 = !DILocation(line: 150, column: 28, scope: !15520)
!15526 = !DILocation(line: 153, column: 1, scope: !15520)
!15527 = distinct !DISubprogram(name: "z_pend_thread", scope: !2657, file: !2657, line: 770, type: !15528, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15534)
!15528 = !DISubroutineType(types: !15529)
!15529 = !{null, !2552, !2583, !15530}
!15530 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !15531)
!15531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !15532)
!15532 = !{!15533}
!15533 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15531, file: !110, line: 66, baseType: !109, size: 64)
!15534 = !{!15535, !15536, !15537, !15538, !15540}
!15535 = !DILocalVariable(name: "thread", arg: 1, scope: !15527, file: !2657, line: 770, type: !2552)
!15536 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15527, file: !2657, line: 770, type: !2583)
!15537 = !DILocalVariable(name: "timeout", arg: 3, scope: !15527, file: !2657, line: 771, type: !15530)
!15538 = !DILocalVariable(name: "__i", scope: !15539, file: !2657, line: 774, type: !14731)
!15539 = distinct !DILexicalBlock(scope: !15527, file: !2657, line: 774, column: 2)
!15540 = !DILocalVariable(name: "__key", scope: !15539, file: !2657, line: 774, type: !14731)
!15541 = !DILocation(line: 0, scope: !15527)
!15542 = !DILocation(line: 0, scope: !15539)
!15543 = !DILocation(line: 0, scope: !14739, inlinedAt: !15544)
!15544 = distinct !DILocation(line: 774, column: 2, scope: !15539)
!15545 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15546)
!15546 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15544)
!15547 = !DILocation(line: 0, scope: !14748, inlinedAt: !15546)
!15548 = !DILocation(line: 775, column: 3, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15550, file: !2657, line: 774, column: 26)
!15550 = distinct !DILexicalBlock(scope: !15539, file: !2657, line: 774, column: 2)
!15551 = !DILocation(line: 0, scope: !14766, inlinedAt: !15552)
!15552 = distinct !DILocation(line: 774, column: 2, scope: !15550)
!15553 = !DILocation(line: 0, scope: !14774, inlinedAt: !15554)
!15554 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15552)
!15555 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15554)
!15556 = !DILocation(line: 777, column: 1, scope: !15527)
!15557 = distinct !DISubprogram(name: "pend_locked", scope: !2657, file: !2657, line: 760, type: !15528, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15558)
!15558 = !{!15559, !15560, !15561}
!15559 = !DILocalVariable(name: "thread", arg: 1, scope: !15557, file: !2657, line: 760, type: !2552)
!15560 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15557, file: !2657, line: 760, type: !2583)
!15561 = !DILocalVariable(name: "timeout", arg: 3, scope: !15557, file: !2657, line: 761, type: !15530)
!15562 = !DILocation(line: 0, scope: !15557)
!15563 = !DILocation(line: 766, column: 2, scope: !15557)
!15564 = !DILocation(line: 767, column: 2, scope: !15557)
!15565 = !DILocation(line: 768, column: 1, scope: !15557)
!15566 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2657, file: !2657, line: 740, type: !15567, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15569)
!15567 = !DISubroutineType(types: !15568)
!15568 = !{null, !2552, !2583}
!15569 = !{!15570, !15571}
!15570 = !DILocalVariable(name: "thread", arg: 1, scope: !15566, file: !2657, line: 740, type: !2552)
!15571 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15566, file: !2657, line: 740, type: !2583)
!15572 = !DILocation(line: 0, scope: !15566)
!15573 = !DILocation(line: 742, column: 2, scope: !15566)
!15574 = !DILocation(line: 743, column: 2, scope: !15566)
!15575 = !DILocation(line: 747, column: 13, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15566, file: !2657, line: 747, column: 6)
!15577 = !DILocation(line: 747, column: 6, scope: !15566)
!15578 = !DILocation(line: 748, column: 16, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15576, file: !2657, line: 747, column: 22)
!15580 = !DILocation(line: 748, column: 26, scope: !15579)
!15581 = !DILocation(line: 749, column: 28, scope: !15579)
!15582 = !DILocation(line: 0, scope: !14939, inlinedAt: !15583)
!15583 = distinct !DILocation(line: 749, column: 3, scope: !15579)
!15584 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !15583)
!15585 = !DILocation(line: 188, column: 2, scope: !14951, inlinedAt: !15583)
!15586 = !DILocation(line: 0, scope: !14949, inlinedAt: !15583)
!15587 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !15583)
!15588 = !DILocation(line: 189, column: 35, scope: !14954, inlinedAt: !15583)
!15589 = !DILocation(line: 189, column: 7, scope: !14955, inlinedAt: !15583)
!15590 = !DILocation(line: 191, column: 21, scope: !14959, inlinedAt: !15583)
!15591 = !DILocation(line: 190, column: 4, scope: !14959, inlinedAt: !15583)
!15592 = !DILocation(line: 192, column: 4, scope: !14959, inlinedAt: !15583)
!15593 = distinct !{!15593, !15584, !15594}
!15594 = !DILocation(line: 194, column: 2, scope: !14949, inlinedAt: !15583)
!15595 = !DILocation(line: 196, column: 37, scope: !14939, inlinedAt: !15583)
!15596 = !DILocation(line: 196, column: 2, scope: !14939, inlinedAt: !15583)
!15597 = !DILocation(line: 197, column: 1, scope: !14939, inlinedAt: !15583)
!15598 = !DILocation(line: 751, column: 1, scope: !15566)
!15599 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2657, file: !2657, line: 753, type: !15600, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15602)
!15600 = !DISubroutineType(types: !15601)
!15601 = !{null, !2552, !15530}
!15602 = !{!15603, !15604}
!15603 = !DILocalVariable(name: "thread", arg: 1, scope: !15599, file: !2657, line: 753, type: !2552)
!15604 = !DILocalVariable(name: "timeout", arg: 2, scope: !15599, file: !2657, line: 753, type: !15530)
!15605 = !DILocation(line: 0, scope: !15599)
!15606 = !DILocation(line: 755, column: 7, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15599, file: !2657, line: 755, column: 6)
!15608 = !DILocation(line: 755, column: 6, scope: !15599)
!15609 = !DILocation(line: 756, column: 3, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15607, file: !2657, line: 755, column: 41)
!15611 = !DILocation(line: 757, column: 2, scope: !15610)
!15612 = !DILocation(line: 758, column: 1, scope: !15599)
!15613 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14410, file: !14410, line: 47, type: !15600, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15614)
!15614 = !{!15615, !15616}
!15615 = !DILocalVariable(name: "thread", arg: 1, scope: !15613, file: !14410, line: 47, type: !2552)
!15616 = !DILocalVariable(name: "ticks", arg: 2, scope: !15613, file: !14410, line: 47, type: !15530)
!15617 = !DILocation(line: 0, scope: !15613)
!15618 = !DILocation(line: 49, column: 30, scope: !15613)
!15619 = !DILocation(line: 49, column: 2, scope: !15613)
!15620 = !DILocation(line: 50, column: 1, scope: !15613)
!15621 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2657, file: !2657, line: 795, type: !2609, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15622)
!15622 = !{!15623, !15624, !15625, !15627, !15628}
!15623 = !DILocalVariable(name: "timeout", arg: 1, scope: !15621, file: !2657, line: 795, type: !2611)
!15624 = !DILocalVariable(name: "thread", scope: !15621, file: !2657, line: 797, type: !2552)
!15625 = !DILocalVariable(name: "__i", scope: !15626, file: !2657, line: 800, type: !14731)
!15626 = distinct !DILexicalBlock(scope: !15621, file: !2657, line: 800, column: 2)
!15627 = !DILocalVariable(name: "__key", scope: !15626, file: !2657, line: 800, type: !14731)
!15628 = !DILocalVariable(name: "killed", scope: !15629, file: !2657, line: 801, type: !422)
!15629 = distinct !DILexicalBlock(scope: !15630, file: !2657, line: 800, column: 26)
!15630 = distinct !DILexicalBlock(scope: !15626, file: !2657, line: 800, column: 2)
!15631 = !DILocation(line: 0, scope: !15621)
!15632 = !DILocation(line: 797, column: 28, scope: !15621)
!15633 = !DILocation(line: 0, scope: !15626)
!15634 = !DILocation(line: 0, scope: !14739, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 800, column: 2, scope: !15626)
!15636 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15635)
!15638 = !DILocation(line: 0, scope: !14748, inlinedAt: !15637)
!15639 = !DILocation(line: 801, column: 27, scope: !15629)
!15640 = !DILocation(line: 801, column: 32, scope: !15629)
!15641 = !DILocation(line: 801, column: 61, scope: !15629)
!15642 = !DILocation(line: 0, scope: !15629)
!15643 = !DILocation(line: 804, column: 7, scope: !15629)
!15644 = !DILocation(line: 805, column: 21, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !2657, line: 805, column: 8)
!15646 = distinct !DILexicalBlock(scope: !15647, file: !2657, line: 804, column: 16)
!15647 = distinct !DILexicalBlock(scope: !15629, file: !2657, line: 804, column: 7)
!15648 = !DILocation(line: 805, column: 31, scope: !15645)
!15649 = !DILocation(line: 805, column: 8, scope: !15646)
!15650 = !DILocation(line: 806, column: 5, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15645, file: !2657, line: 805, column: 40)
!15652 = !DILocation(line: 807, column: 4, scope: !15651)
!15653 = !DILocation(line: 808, column: 4, scope: !15646)
!15654 = !DILocation(line: 809, column: 4, scope: !15646)
!15655 = !DILocation(line: 810, column: 4, scope: !15646)
!15656 = !DILocation(line: 811, column: 3, scope: !15646)
!15657 = !DILocation(line: 0, scope: !14766, inlinedAt: !15658)
!15658 = distinct !DILocation(line: 800, column: 2, scope: !15630)
!15659 = !DILocation(line: 0, scope: !14774, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15658)
!15661 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15660)
!15662 = !DILocation(line: 813, column: 1, scope: !15621)
!15663 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2657, file: !2657, line: 779, type: !14697, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15664)
!15664 = !{!15665}
!15665 = !DILocalVariable(name: "thread", arg: 1, scope: !15663, file: !2657, line: 779, type: !2552)
!15666 = !DILocation(line: 0, scope: !15663)
!15667 = !DILocation(line: 781, column: 2, scope: !15663)
!15668 = !DILocation(line: 782, column: 2, scope: !15663)
!15669 = !DILocation(line: 783, column: 15, scope: !15663)
!15670 = !DILocation(line: 783, column: 25, scope: !15663)
!15671 = !DILocation(line: 784, column: 1, scope: !15663)
!15672 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14016, file: !14016, line: 165, type: !14697, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15673)
!15673 = !{!15674}
!15674 = !DILocalVariable(name: "thread", arg: 1, scope: !15672, file: !14016, line: 165, type: !2552)
!15675 = !DILocation(line: 0, scope: !15672)
!15676 = !DILocation(line: 167, column: 15, scope: !15672)
!15677 = !DILocation(line: 167, column: 28, scope: !15672)
!15678 = !DILocation(line: 168, column: 1, scope: !15672)
!15679 = distinct !DISubprogram(name: "unready_thread", scope: !2657, file: !2657, line: 731, type: !14697, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15680)
!15680 = !{!15681}
!15681 = !DILocalVariable(name: "thread", arg: 1, scope: !15679, file: !2657, line: 731, type: !2552)
!15682 = !DILocation(line: 0, scope: !15679)
!15683 = !DILocation(line: 733, column: 6, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15679, file: !2657, line: 733, column: 6)
!15685 = !DILocation(line: 733, column: 6, scope: !15679)
!15686 = !DILocation(line: 0, scope: !14908, inlinedAt: !15687)
!15687 = distinct !DILocation(line: 734, column: 3, scope: !15688)
!15688 = distinct !DILexicalBlock(scope: !15684, file: !2657, line: 733, column: 34)
!15689 = !DILocation(line: 266, column: 15, scope: !14908, inlinedAt: !15687)
!15690 = !DILocation(line: 266, column: 28, scope: !14908, inlinedAt: !15687)
!15691 = !DILocation(line: 0, scope: !14916, inlinedAt: !15692)
!15692 = distinct !DILocation(line: 268, column: 3, scope: !14920, inlinedAt: !15687)
!15693 = !DILocation(line: 234, column: 2, scope: !14916, inlinedAt: !15692)
!15694 = !DILocation(line: 735, column: 2, scope: !15688)
!15695 = !DILocation(line: 736, column: 25, scope: !15679)
!15696 = !DILocation(line: 736, column: 22, scope: !15679)
!15697 = !DILocation(line: 736, column: 2, scope: !15679)
!15698 = !DILocation(line: 737, column: 1, scope: !15679)
!15699 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14016, file: !14016, line: 160, type: !14697, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15700)
!15700 = !{!15701}
!15701 = !DILocalVariable(name: "thread", arg: 1, scope: !15699, file: !14016, line: 160, type: !2552)
!15702 = !DILocation(line: 0, scope: !15699)
!15703 = !DILocation(line: 162, column: 15, scope: !15699)
!15704 = !DILocation(line: 162, column: 28, scope: !15699)
!15705 = !DILocation(line: 163, column: 1, scope: !15699)
!15706 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2657, file: !2657, line: 786, type: !14697, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15707)
!15707 = !{!15708, !15709, !15711}
!15708 = !DILocalVariable(name: "thread", arg: 1, scope: !15706, file: !2657, line: 786, type: !2552)
!15709 = !DILocalVariable(name: "__i", scope: !15710, file: !2657, line: 788, type: !14731)
!15710 = distinct !DILexicalBlock(scope: !15706, file: !2657, line: 788, column: 2)
!15711 = !DILocalVariable(name: "__key", scope: !15710, file: !2657, line: 788, type: !14731)
!15712 = !DILocation(line: 0, scope: !15706)
!15713 = !DILocation(line: 0, scope: !15710)
!15714 = !DILocation(line: 0, scope: !14739, inlinedAt: !15715)
!15715 = distinct !DILocation(line: 788, column: 2, scope: !15710)
!15716 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15717)
!15717 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15715)
!15718 = !DILocation(line: 0, scope: !14748, inlinedAt: !15717)
!15719 = !DILocation(line: 789, column: 3, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15721, file: !2657, line: 788, column: 26)
!15721 = distinct !DILexicalBlock(scope: !15710, file: !2657, line: 788, column: 2)
!15722 = !DILocation(line: 0, scope: !14766, inlinedAt: !15723)
!15723 = distinct !DILocation(line: 788, column: 2, scope: !15721)
!15724 = !DILocation(line: 0, scope: !14774, inlinedAt: !15725)
!15725 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15723)
!15726 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15725)
!15727 = !DILocation(line: 791, column: 1, scope: !15706)
!15728 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2657, file: !2657, line: 816, type: !15729, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15731)
!15729 = !DISubroutineType(types: !15730)
!15730 = !{!108, !113, !2583, !15530}
!15731 = !{!15732, !15733, !15734, !15735, !15736, !15738}
!15732 = !DILocalVariable(name: "key", arg: 1, scope: !15728, file: !2657, line: 816, type: !113)
!15733 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15728, file: !2657, line: 816, type: !2583)
!15734 = !DILocalVariable(name: "timeout", arg: 3, scope: !15728, file: !2657, line: 816, type: !15530)
!15735 = !DILocalVariable(name: "ret", scope: !15728, file: !2657, line: 828, type: !108)
!15736 = !DILocalVariable(name: "__i", scope: !15737, file: !2657, line: 829, type: !14731)
!15737 = distinct !DILexicalBlock(scope: !15728, file: !2657, line: 829, column: 2)
!15738 = !DILocalVariable(name: "__key", scope: !15737, file: !2657, line: 829, type: !14731)
!15739 = !DILocation(line: 0, scope: !15728)
!15740 = !DILocation(line: 823, column: 14, scope: !15728)
!15741 = !DILocation(line: 823, column: 2, scope: !15728)
!15742 = !DILocation(line: 826, column: 20, scope: !15728)
!15743 = !DILocation(line: 826, column: 18, scope: !15728)
!15744 = !DILocation(line: 828, column: 12, scope: !15728)
!15745 = !DILocation(line: 0, scope: !15737)
!15746 = !DILocation(line: 0, scope: !14739, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 829, column: 2, scope: !15737)
!15748 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15749)
!15749 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15747)
!15750 = !DILocation(line: 0, scope: !14748, inlinedAt: !15749)
!15751 = !DILocation(line: 830, column: 7, scope: !15752)
!15752 = distinct !DILexicalBlock(scope: !15753, file: !2657, line: 830, column: 7)
!15753 = distinct !DILexicalBlock(scope: !15754, file: !2657, line: 829, column: 26)
!15754 = distinct !DILexicalBlock(scope: !15737, file: !2657, line: 829, column: 2)
!15755 = !DILocation(line: 830, column: 26, scope: !15752)
!15756 = !DILocation(line: 830, column: 23, scope: !15752)
!15757 = !DILocation(line: 830, column: 7, scope: !15753)
!15758 = !DILocation(line: 831, column: 20, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15752, file: !2657, line: 830, column: 36)
!15760 = !DILocation(line: 832, column: 3, scope: !15759)
!15761 = !DILocation(line: 0, scope: !14766, inlinedAt: !15762)
!15762 = distinct !DILocation(line: 829, column: 2, scope: !15754)
!15763 = !DILocation(line: 0, scope: !14774, inlinedAt: !15764)
!15764 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15762)
!15765 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15764)
!15766 = !DILocation(line: 834, column: 2, scope: !15728)
!15767 = distinct !DISubprogram(name: "z_pend_curr", scope: !2657, file: !2657, line: 840, type: !15768, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15770)
!15768 = !DISubroutineType(types: !15769)
!15769 = !{!108, !14742, !14731, !2583, !15530}
!15770 = !{!15771, !15772, !15773, !15774}
!15771 = !DILocalVariable(name: "lock", arg: 1, scope: !15767, file: !2657, line: 840, type: !14742)
!15772 = !DILocalVariable(name: "key", arg: 2, scope: !15767, file: !2657, line: 840, type: !14731)
!15773 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15767, file: !2657, line: 841, type: !2583)
!15774 = !DILocalVariable(name: "timeout", arg: 4, scope: !15767, file: !2657, line: 841, type: !15530)
!15775 = !DILocation(line: 0, scope: !15767)
!15776 = !DILocation(line: 844, column: 20, scope: !15767)
!15777 = !DILocation(line: 844, column: 18, scope: !15767)
!15778 = !DILocation(line: 0, scope: !14739, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 856, column: 9, scope: !15767)
!15780 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15779)
!15782 = !DILocation(line: 0, scope: !14748, inlinedAt: !15781)
!15783 = !DILocation(line: 857, column: 14, scope: !15767)
!15784 = !DILocation(line: 857, column: 2, scope: !15767)
!15785 = !DILocation(line: 0, scope: !15350, inlinedAt: !15786)
!15786 = distinct !DILocation(line: 859, column: 9, scope: !15767)
!15787 = !DILocation(line: 196, column: 9, scope: !15350, inlinedAt: !15786)
!15788 = !DILocation(line: 859, column: 2, scope: !15767)
!15789 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2657, file: !2657, line: 862, type: !15790, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15792)
!15790 = !DISubroutineType(types: !15791)
!15791 = !{!2552, !2583}
!15792 = !{!15793, !15794, !15795, !15797}
!15793 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15789, file: !2657, line: 862, type: !2583)
!15794 = !DILocalVariable(name: "thread", scope: !15789, file: !2657, line: 864, type: !2552)
!15795 = !DILocalVariable(name: "__i", scope: !15796, file: !2657, line: 866, type: !14731)
!15796 = distinct !DILexicalBlock(scope: !15789, file: !2657, line: 866, column: 2)
!15797 = !DILocalVariable(name: "__key", scope: !15796, file: !2657, line: 866, type: !14731)
!15798 = !DILocation(line: 0, scope: !15789)
!15799 = !DILocation(line: 0, scope: !15796)
!15800 = !DILocation(line: 0, scope: !14739, inlinedAt: !15801)
!15801 = distinct !DILocation(line: 866, column: 2, scope: !15796)
!15802 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15801)
!15804 = !DILocation(line: 0, scope: !14748, inlinedAt: !15803)
!15805 = !DILocation(line: 867, column: 12, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15807, file: !2657, line: 866, column: 26)
!15807 = distinct !DILexicalBlock(scope: !15796, file: !2657, line: 866, column: 2)
!15808 = !DILocation(line: 869, column: 14, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15806, file: !2657, line: 869, column: 7)
!15810 = !DILocation(line: 869, column: 7, scope: !15806)
!15811 = !DILocation(line: 870, column: 4, scope: !15812)
!15812 = distinct !DILexicalBlock(scope: !15809, file: !2657, line: 869, column: 23)
!15813 = !DILocation(line: 871, column: 3, scope: !15812)
!15814 = !DILocation(line: 0, scope: !14766, inlinedAt: !15815)
!15815 = distinct !DILocation(line: 866, column: 2, scope: !15807)
!15816 = !DILocation(line: 0, scope: !14774, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15815)
!15818 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15817)
!15819 = !DILocation(line: 874, column: 2, scope: !15789)
!15820 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2657, file: !2657, line: 877, type: !15790, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15821)
!15821 = !{!15822, !15823, !15824, !15826}
!15822 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15820, file: !2657, line: 877, type: !2583)
!15823 = !DILocalVariable(name: "thread", scope: !15820, file: !2657, line: 879, type: !2552)
!15824 = !DILocalVariable(name: "__i", scope: !15825, file: !2657, line: 881, type: !14731)
!15825 = distinct !DILexicalBlock(scope: !15820, file: !2657, line: 881, column: 2)
!15826 = !DILocalVariable(name: "__key", scope: !15825, file: !2657, line: 881, type: !14731)
!15827 = !DILocation(line: 0, scope: !15820)
!15828 = !DILocation(line: 0, scope: !15825)
!15829 = !DILocation(line: 0, scope: !14739, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 881, column: 2, scope: !15825)
!15831 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15830)
!15833 = !DILocation(line: 0, scope: !14748, inlinedAt: !15832)
!15834 = !DILocation(line: 882, column: 12, scope: !15835)
!15835 = distinct !DILexicalBlock(scope: !15836, file: !2657, line: 881, column: 26)
!15836 = distinct !DILexicalBlock(scope: !15825, file: !2657, line: 881, column: 2)
!15837 = !DILocation(line: 884, column: 14, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15835, file: !2657, line: 884, column: 7)
!15839 = !DILocation(line: 884, column: 7, scope: !15835)
!15840 = !DILocation(line: 885, column: 4, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15838, file: !2657, line: 884, column: 23)
!15842 = !DILocation(line: 886, column: 10, scope: !15841)
!15843 = !DILocation(line: 887, column: 3, scope: !15841)
!15844 = !DILocation(line: 0, scope: !14766, inlinedAt: !15845)
!15845 = distinct !DILocation(line: 881, column: 2, scope: !15836)
!15846 = !DILocation(line: 0, scope: !14774, inlinedAt: !15847)
!15847 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15845)
!15848 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15847)
!15849 = !DILocation(line: 890, column: 2, scope: !15820)
!15850 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2657, file: !2657, line: 893, type: !14697, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15851)
!15851 = !{!15852}
!15852 = !DILocalVariable(name: "thread", arg: 1, scope: !15850, file: !2657, line: 893, type: !2552)
!15853 = !DILocation(line: 0, scope: !15850)
!15854 = !DILocation(line: 0, scope: !15706, inlinedAt: !15855)
!15855 = distinct !DILocation(line: 895, column: 2, scope: !15850)
!15856 = !DILocation(line: 0, scope: !15710, inlinedAt: !15855)
!15857 = !DILocation(line: 0, scope: !14739, inlinedAt: !15858)
!15858 = distinct !DILocation(line: 788, column: 2, scope: !15710, inlinedAt: !15855)
!15859 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15860)
!15860 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15858)
!15861 = !DILocation(line: 0, scope: !14748, inlinedAt: !15860)
!15862 = !DILocation(line: 789, column: 3, scope: !15720, inlinedAt: !15855)
!15863 = !DILocation(line: 0, scope: !14766, inlinedAt: !15864)
!15864 = distinct !DILocation(line: 788, column: 2, scope: !15721, inlinedAt: !15855)
!15865 = !DILocation(line: 0, scope: !14774, inlinedAt: !15866)
!15866 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15864)
!15867 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15866)
!15868 = !DILocation(line: 896, column: 8, scope: !15850)
!15869 = !DILocation(line: 897, column: 1, scope: !15850)
!15870 = distinct !DISubprogram(name: "z_set_prio", scope: !2657, file: !2657, line: 902, type: !15059, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15871)
!15871 = !{!15872, !15873, !15874, !15875, !15877}
!15872 = !DILocalVariable(name: "thread", arg: 1, scope: !15870, file: !2657, line: 902, type: !2552)
!15873 = !DILocalVariable(name: "prio", arg: 2, scope: !15870, file: !2657, line: 902, type: !108)
!15874 = !DILocalVariable(name: "need_sched", scope: !15870, file: !2657, line: 904, type: !422)
!15875 = !DILocalVariable(name: "__i", scope: !15876, file: !2657, line: 906, type: !14731)
!15876 = distinct !DILexicalBlock(scope: !15870, file: !2657, line: 906, column: 2)
!15877 = !DILocalVariable(name: "__key", scope: !15876, file: !2657, line: 906, type: !14731)
!15878 = !DILocation(line: 0, scope: !15870)
!15879 = !DILocation(line: 0, scope: !15876)
!15880 = !DILocation(line: 0, scope: !14739, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 906, column: 2, scope: !15876)
!15882 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15881)
!15884 = !DILocation(line: 0, scope: !14748, inlinedAt: !15883)
!15885 = !DILocation(line: 907, column: 16, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15887, file: !2657, line: 906, column: 26)
!15887 = distinct !DILexicalBlock(scope: !15876, file: !2657, line: 906, column: 2)
!15888 = !DILocation(line: 909, column: 7, scope: !15886)
!15889 = !DILocation(line: 0, scope: !14908, inlinedAt: !15890)
!15890 = distinct !DILocation(line: 912, column: 5, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15892, file: !2657, line: 911, column: 63)
!15892 = distinct !DILexicalBlock(scope: !15893, file: !2657, line: 911, column: 8)
!15893 = distinct !DILexicalBlock(scope: !15894, file: !2657, line: 909, column: 19)
!15894 = distinct !DILexicalBlock(scope: !15886, file: !2657, line: 909, column: 7)
!15895 = !DILocation(line: 266, column: 28, scope: !14908, inlinedAt: !15890)
!15896 = !DILocation(line: 0, scope: !14916, inlinedAt: !15897)
!15897 = distinct !DILocation(line: 268, column: 3, scope: !14920, inlinedAt: !15890)
!15898 = !DILocation(line: 234, column: 2, scope: !14916, inlinedAt: !15897)
!15899 = !DILocation(line: 913, column: 23, scope: !15891)
!15900 = !DILocation(line: 0, scope: !14925, inlinedAt: !15901)
!15901 = distinct !DILocation(line: 914, column: 5, scope: !15891)
!15902 = !DILocation(line: 252, column: 28, scope: !14925, inlinedAt: !15901)
!15903 = !DILocation(line: 0, scope: !14932, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 254, column: 3, scope: !14936, inlinedAt: !15901)
!15905 = !DILocation(line: 0, scope: !14939, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 229, column: 2, scope: !14932, inlinedAt: !15904)
!15907 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !15906)
!15908 = !DILocation(line: 188, column: 2, scope: !14951, inlinedAt: !15906)
!15909 = !DILocation(line: 0, scope: !14949, inlinedAt: !15906)
!15910 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !15906)
!15911 = !DILocation(line: 189, column: 35, scope: !14954, inlinedAt: !15906)
!15912 = !DILocation(line: 189, column: 7, scope: !14955, inlinedAt: !15906)
!15913 = !DILocation(line: 190, column: 4, scope: !14959, inlinedAt: !15906)
!15914 = !DILocation(line: 192, column: 4, scope: !14959, inlinedAt: !15906)
!15915 = distinct !{!15915, !15907, !15916}
!15916 = !DILocation(line: 194, column: 2, scope: !14949, inlinedAt: !15906)
!15917 = !DILocation(line: 196, column: 2, scope: !14939, inlinedAt: !15906)
!15918 = !DILocation(line: 197, column: 1, scope: !14939, inlinedAt: !15906)
!15919 = !DILocation(line: 918, column: 4, scope: !15893)
!15920 = !DILocation(line: 919, column: 3, scope: !15893)
!15921 = !DILocation(line: 920, column: 22, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15894, file: !2657, line: 919, column: 10)
!15923 = !DILocation(line: 0, scope: !14766, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 906, column: 2, scope: !15887)
!15925 = !DILocation(line: 0, scope: !14774, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15924)
!15927 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15926)
!15928 = !DILocation(line: 926, column: 2, scope: !15870)
!15929 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2657, file: !2657, line: 929, type: !15930, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15932)
!15930 = !DISubroutineType(types: !15931)
!15931 = !{null, !2552, !108}
!15932 = !{!15933, !15934, !15935}
!15933 = !DILocalVariable(name: "thread", arg: 1, scope: !15929, file: !2657, line: 929, type: !2552)
!15934 = !DILocalVariable(name: "prio", arg: 2, scope: !15929, file: !2657, line: 929, type: !108)
!15935 = !DILocalVariable(name: "need_sched", scope: !15929, file: !2657, line: 931, type: !422)
!15936 = !DILocation(line: 0, scope: !15929)
!15937 = !DILocation(line: 931, column: 20, scope: !15929)
!15938 = !DILocation(line: 935, column: 17, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15929, file: !2657, line: 935, column: 6)
!15940 = !DILocation(line: 935, column: 20, scope: !15939)
!15941 = !DILocation(line: 935, column: 35, scope: !15939)
!15942 = !DILocation(line: 935, column: 48, scope: !15939)
!15943 = !DILocation(line: 935, column: 6, scope: !15929)
!15944 = !DILocation(line: 936, column: 3, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15939, file: !2657, line: 935, column: 55)
!15946 = !DILocation(line: 937, column: 2, scope: !15945)
!15947 = !DILocation(line: 938, column: 1, scope: !15929)
!15948 = distinct !DISubprogram(name: "k_sched_lock", scope: !2657, file: !2657, line: 987, type: !3406, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15949)
!15949 = !{!15950, !15952}
!15950 = !DILocalVariable(name: "__i", scope: !15951, file: !2657, line: 989, type: !14731)
!15951 = distinct !DILexicalBlock(scope: !15948, file: !2657, line: 989, column: 2)
!15952 = !DILocalVariable(name: "__key", scope: !15951, file: !2657, line: 989, type: !14731)
!15953 = !DILocation(line: 0, scope: !15951)
!15954 = !DILocation(line: 0, scope: !14739, inlinedAt: !15955)
!15955 = distinct !DILocation(line: 989, column: 2, scope: !15951)
!15956 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15957)
!15957 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15955)
!15958 = !DILocation(line: 0, scope: !14748, inlinedAt: !15957)
!15959 = !DILocation(line: 992, column: 3, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15961, file: !2657, line: 989, column: 26)
!15961 = distinct !DILexicalBlock(scope: !15951, file: !2657, line: 989, column: 2)
!15962 = !DILocation(line: 0, scope: !14766, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 989, column: 2, scope: !15961)
!15964 = !DILocation(line: 0, scope: !14774, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15963)
!15966 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15965)
!15967 = !DILocation(line: 994, column: 1, scope: !15948)
!15968 = distinct !DISubprogram(name: "z_sched_lock", scope: !14016, file: !14016, line: 251, type: !3406, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!15969 = !DILocation(line: 256, column: 4, scope: !15968)
!15970 = !DILocation(line: 256, column: 19, scope: !15968)
!15971 = !DILocation(line: 256, column: 2, scope: !15968)
!15972 = !DILocation(line: 258, column: 2, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !15968, file: !14016, line: 258, column: 2)
!15974 = !{i64 2154883516}
!15975 = !DILocation(line: 259, column: 1, scope: !15968)
!15976 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2657, file: !2657, line: 996, type: !3406, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !15977)
!15977 = !{!15978, !15980}
!15978 = !DILocalVariable(name: "__i", scope: !15979, file: !2657, line: 998, type: !14731)
!15979 = distinct !DILexicalBlock(scope: !15976, file: !2657, line: 998, column: 2)
!15980 = !DILocalVariable(name: "__key", scope: !15979, file: !2657, line: 998, type: !14731)
!15981 = !DILocation(line: 0, scope: !15979)
!15982 = !DILocation(line: 0, scope: !14739, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 998, column: 2, scope: !15979)
!15984 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !15985)
!15985 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !15983)
!15986 = !DILocation(line: 0, scope: !14748, inlinedAt: !15985)
!15987 = !DILocation(line: 1002, column: 5, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15989, file: !2657, line: 998, column: 26)
!15989 = distinct !DILexicalBlock(scope: !15979, file: !2657, line: 998, column: 2)
!15990 = !DILocation(line: 1002, column: 20, scope: !15988)
!15991 = !DILocation(line: 1002, column: 3, scope: !15988)
!15992 = !DILocation(line: 1003, column: 3, scope: !15988)
!15993 = !DILocation(line: 0, scope: !14766, inlinedAt: !15994)
!15994 = distinct !DILocation(line: 998, column: 2, scope: !15989)
!15995 = !DILocation(line: 0, scope: !14774, inlinedAt: !15996)
!15996 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !15994)
!15997 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !15996)
!15998 = !DILocation(line: 1011, column: 2, scope: !15976)
!15999 = !DILocation(line: 1012, column: 1, scope: !15976)
!16000 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2657, file: !2657, line: 1014, type: !15047, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!16001 = !DILocation(line: 1028, column: 25, scope: !16000)
!16002 = !DILocation(line: 1028, column: 2, scope: !16000)
!16003 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2657, file: !2657, line: 1155, type: !16004, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16006)
!16004 = !DISubroutineType(types: !16005)
!16005 = !{!422, !2581, !2581}
!16006 = !{!16007, !16008, !16009, !16010, !16011}
!16007 = !DILocalVariable(name: "a", arg: 1, scope: !16003, file: !2657, line: 1155, type: !2581)
!16008 = !DILocalVariable(name: "b", arg: 2, scope: !16003, file: !2657, line: 1155, type: !2581)
!16009 = !DILocalVariable(name: "thread_a", scope: !16003, file: !2657, line: 1157, type: !2552)
!16010 = !DILocalVariable(name: "thread_b", scope: !16003, file: !2657, line: 1157, type: !2552)
!16011 = !DILocalVariable(name: "cmp", scope: !16003, file: !2657, line: 1158, type: !220)
!16012 = !DILocation(line: 0, scope: !16003)
!16013 = !DILocation(line: 1160, column: 13, scope: !16003)
!16014 = !DILocation(line: 1161, column: 13, scope: !16003)
!16015 = !DILocation(line: 1163, column: 8, scope: !16003)
!16016 = !DILocation(line: 1165, column: 10, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16003, file: !2657, line: 1165, column: 6)
!16018 = !DILocation(line: 1165, column: 6, scope: !16003)
!16019 = !DILocation(line: 1167, column: 17, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16017, file: !2657, line: 1167, column: 13)
!16021 = !DILocation(line: 1167, column: 13, scope: !16017)
!16022 = !DILocation(line: 1170, column: 25, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !16020, file: !2657, line: 1169, column: 9)
!16024 = !DILocation(line: 1170, column: 52, scope: !16023)
!16025 = !DILocation(line: 1170, column: 35, scope: !16023)
!16026 = !DILocation(line: 1170, column: 3, scope: !16023)
!16027 = !DILocation(line: 0, scope: !16017)
!16028 = !DILocation(line: 1173, column: 1, scope: !16003)
!16029 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2657, file: !2657, line: 1175, type: !16030, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16045)
!16030 = !DISubroutineType(types: !16031)
!16031 = !{null, !16032, !2552}
!16032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16033, size: 32)
!16033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16034, line: 37, size: 128, elements: !16035)
!16034 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16035 = !{!16036, !16044}
!16036 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16033, file: !16034, line: 38, baseType: !16037, size: 96)
!16037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !670, line: 83, size: 96, elements: !16038)
!16038 = !{!16039, !16040, !16043}
!16039 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16037, file: !670, line: 84, baseType: !2581, size: 32)
!16040 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16037, file: !670, line: 85, baseType: !16041, size: 32, offset: 32)
!16041 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !670, line: 81, baseType: !16042)
!16042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16004, size: 32)
!16043 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16037, file: !670, line: 86, baseType: !108, size: 32, offset: 64)
!16044 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16033, file: !16034, line: 39, baseType: !108, size: 32, offset: 96)
!16045 = !{!16046, !16047, !16048, !16049, !16058}
!16046 = !DILocalVariable(name: "pq", arg: 1, scope: !16029, file: !2657, line: 1175, type: !16032)
!16047 = !DILocalVariable(name: "thread", arg: 2, scope: !16029, file: !2657, line: 1175, type: !2552)
!16048 = !DILocalVariable(name: "t", scope: !16029, file: !2657, line: 1177, type: !2552)
!16049 = !DILocalVariable(name: "__f", scope: !16050, file: !2657, line: 1190, type: !16053)
!16050 = distinct !DILexicalBlock(scope: !16051, file: !2657, line: 1190, column: 3)
!16051 = distinct !DILexicalBlock(scope: !16052, file: !2657, line: 1189, column: 27)
!16052 = distinct !DILexicalBlock(scope: !16029, file: !2657, line: 1189, column: 6)
!16053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !670, line: 155, size: 96, elements: !16054)
!16054 = !{!16055, !16056, !16057}
!16055 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16053, file: !670, line: 156, baseType: !2652, size: 32)
!16056 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16053, file: !670, line: 157, baseType: !209, size: 32, offset: 32)
!16057 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16053, file: !670, line: 158, baseType: !220, size: 32, offset: 64)
!16058 = !DILocalVariable(name: "n", scope: !16059, file: !2657, line: 1190, type: !2581)
!16059 = distinct !DILexicalBlock(scope: !16060, file: !2657, line: 1190, column: 3)
!16060 = distinct !DILexicalBlock(scope: !16050, file: !2657, line: 1190, column: 3)
!16061 = !DILocation(line: 0, scope: !16029)
!16062 = !DILocation(line: 1181, column: 31, scope: !16029)
!16063 = !DILocation(line: 1181, column: 45, scope: !16029)
!16064 = !DILocation(line: 1181, column: 15, scope: !16029)
!16065 = !DILocation(line: 1181, column: 25, scope: !16029)
!16066 = !DILocation(line: 1189, column: 11, scope: !16052)
!16067 = !DILocation(line: 1189, column: 7, scope: !16052)
!16068 = !DILocation(line: 1189, column: 6, scope: !16029)
!16069 = !DILocation(line: 1190, column: 3, scope: !16050)
!16070 = !DILocation(line: 1190, column: 3, scope: !16059)
!16071 = !DILocation(line: 0, scope: !16059)
!16072 = !DILocation(line: 1190, column: 3, scope: !16060)
!16073 = !DILocation(line: 1193, column: 2, scope: !16051)
!16074 = !DILocation(line: 1191, column: 42, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16060, file: !2657, line: 1190, column: 54)
!16076 = !DILocation(line: 1191, column: 12, scope: !16075)
!16077 = !DILocation(line: 1191, column: 22, scope: !16075)
!16078 = distinct !{!16078, !16069, !16079}
!16079 = !DILocation(line: 1192, column: 3, scope: !16050)
!16080 = !DILocation(line: 1195, column: 17, scope: !16029)
!16081 = !DILocation(line: 1195, column: 37, scope: !16029)
!16082 = !DILocation(line: 1195, column: 2, scope: !16029)
!16083 = !DILocation(line: 1196, column: 1, scope: !16029)
!16084 = !DISubprogram(name: "z_rb_foreach_next", scope: !670, file: !670, line: 176, type: !16085, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16085 = !DISubroutineType(types: !16086)
!16086 = !{!2581, !16087, !16088}
!16087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16037, size: 32)
!16088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16053, size: 32)
!16089 = !DISubprogram(name: "rb_insert", scope: !670, file: !670, line: 105, type: !16090, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16090 = !DISubroutineType(types: !16091)
!16091 = !{null, !16087, !2581}
!16092 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2657, file: !2657, line: 1198, type: !16030, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16093)
!16093 = !{!16094, !16095}
!16094 = !DILocalVariable(name: "pq", arg: 1, scope: !16092, file: !2657, line: 1198, type: !16032)
!16095 = !DILocalVariable(name: "thread", arg: 2, scope: !16092, file: !2657, line: 1198, type: !2552)
!16096 = !DILocation(line: 0, scope: !16092)
!16097 = !DILocation(line: 1202, column: 17, scope: !16092)
!16098 = !DILocation(line: 1202, column: 37, scope: !16092)
!16099 = !DILocation(line: 1202, column: 2, scope: !16092)
!16100 = !DILocation(line: 1204, column: 16, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !16092, file: !2657, line: 1204, column: 6)
!16102 = !DILocation(line: 1204, column: 7, scope: !16101)
!16103 = !DILocation(line: 1204, column: 6, scope: !16092)
!16104 = !DILocation(line: 1205, column: 7, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16101, file: !2657, line: 1204, column: 22)
!16106 = !DILocation(line: 1205, column: 22, scope: !16105)
!16107 = !DILocation(line: 1206, column: 2, scope: !16105)
!16108 = !DILocation(line: 1207, column: 1, scope: !16092)
!16109 = !DISubprogram(name: "rb_remove", scope: !670, file: !670, line: 110, type: !16090, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16110 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2657, file: !2657, line: 1209, type: !16111, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16113)
!16111 = !DISubroutineType(types: !16112)
!16112 = !{!2552, !16032}
!16113 = !{!16114, !16115, !16116}
!16114 = !DILocalVariable(name: "pq", arg: 1, scope: !16110, file: !2657, line: 1209, type: !16032)
!16115 = !DILocalVariable(name: "thread", scope: !16110, file: !2657, line: 1211, type: !2552)
!16116 = !DILocalVariable(name: "n", scope: !16110, file: !2657, line: 1212, type: !2581)
!16117 = !DILocation(line: 0, scope: !16110)
!16118 = !DILocation(line: 1212, column: 37, scope: !16110)
!16119 = !DILocation(line: 1212, column: 21, scope: !16110)
!16120 = !DILocation(line: 1217, column: 2, scope: !16110)
!16121 = distinct !DISubprogram(name: "rb_get_min", scope: !670, file: !670, line: 115, type: !16122, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16124)
!16122 = !DISubroutineType(types: !16123)
!16123 = !{!2581, !16087}
!16124 = !{!16125}
!16125 = !DILocalVariable(name: "tree", arg: 1, scope: !16121, file: !670, line: 115, type: !16087)
!16126 = !DILocation(line: 0, scope: !16121)
!16127 = !DILocation(line: 117, column: 9, scope: !16121)
!16128 = !DILocation(line: 117, column: 2, scope: !16121)
!16129 = !DISubprogram(name: "z_rb_get_minmax", scope: !670, file: !670, line: 100, type: !16130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16130 = !DISubroutineType(types: !16131)
!16131 = !{!2581, !16087, !164}
!16132 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2657, file: !2657, line: 1246, type: !16133, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16143)
!16133 = !DISubroutineType(types: !16134)
!16134 = !{!2552, !16135}
!16135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16136, size: 32)
!16136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16034, line: 53, size: 2080, elements: !16137)
!16137 = !{!16138, !16142}
!16138 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16136, file: !16034, line: 54, baseType: !16139, size: 2048)
!16139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2588, size: 2048, elements: !16140)
!16140 = !{!16141}
!16141 = !DISubrange(count: 32)
!16142 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16136, file: !16034, line: 55, baseType: !32, size: 32, offset: 2048)
!16143 = !{!16144, !16145, !16146, !16147}
!16144 = !DILocalVariable(name: "pq", arg: 1, scope: !16132, file: !2657, line: 1246, type: !16135)
!16145 = !DILocalVariable(name: "thread", scope: !16132, file: !2657, line: 1252, type: !2552)
!16146 = !DILocalVariable(name: "l", scope: !16132, file: !2657, line: 1253, type: !14942)
!16147 = !DILocalVariable(name: "n", scope: !16132, file: !2657, line: 1254, type: !2653)
!16148 = !DILocation(line: 0, scope: !16132)
!16149 = !DILocation(line: 1248, column: 11, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16132, file: !2657, line: 1248, column: 6)
!16151 = !DILocation(line: 1248, column: 7, scope: !16150)
!16152 = !DILocation(line: 1248, column: 6, scope: !16132)
!16153 = !DILocation(line: 1253, column: 31, scope: !16132)
!16154 = !DILocation(line: 1253, column: 20, scope: !16132)
!16155 = !DILocation(line: 1254, column: 19, scope: !16132)
!16156 = !DILocation(line: 1260, column: 1, scope: !16132)
!16157 = distinct !DISubprogram(name: "z_unpend_all", scope: !2657, file: !2657, line: 1262, type: !16158, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16160)
!16158 = !DISubroutineType(types: !16159)
!16159 = !{!108, !2583}
!16160 = !{!16161, !16162, !16163}
!16161 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16157, file: !2657, line: 1262, type: !2583)
!16162 = !DILocalVariable(name: "need_sched", scope: !16157, file: !2657, line: 1264, type: !108)
!16163 = !DILocalVariable(name: "thread", scope: !16157, file: !2657, line: 1265, type: !2552)
!16164 = !DILocation(line: 0, scope: !16157)
!16165 = !DILocation(line: 1267, column: 19, scope: !16157)
!16166 = !DILocation(line: 1267, column: 41, scope: !16157)
!16167 = !DILocation(line: 1267, column: 2, scope: !16157)
!16168 = !DILocation(line: 1268, column: 3, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16157, file: !2657, line: 1267, column: 50)
!16170 = !DILocation(line: 1269, column: 3, scope: !16169)
!16171 = distinct !{!16171, !16167, !16172}
!16172 = !DILocation(line: 1271, column: 2, scope: !16157)
!16173 = !DILocation(line: 1273, column: 2, scope: !16157)
!16174 = distinct !DISubprogram(name: "z_waitq_head", scope: !14342, file: !14342, line: 52, type: !15790, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16175)
!16175 = !{!16176}
!16176 = !DILocalVariable(name: "w", arg: 1, scope: !16174, file: !14342, line: 52, type: !2583)
!16177 = !DILocation(line: 0, scope: !16174)
!16178 = !DILocation(line: 54, column: 52, scope: !16174)
!16179 = !DILocation(line: 54, column: 28, scope: !16174)
!16180 = !DILocation(line: 54, column: 9, scope: !16174)
!16181 = !DILocation(line: 54, column: 2, scope: !16174)
!16182 = distinct !DISubprogram(name: "init_ready_q", scope: !2657, file: !2657, line: 1276, type: !16183, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16190)
!16183 = !DISubroutineType(types: !16184)
!16184 = !{null, !16185}
!16185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16186, size: 32)
!16186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !16187)
!16187 = !{!16188, !16189}
!16188 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16186, file: !363, line: 86, baseType: !2552, size: 32)
!16189 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16186, file: !363, line: 90, baseType: !2588, size: 64, offset: 32)
!16190 = !{!16191}
!16191 = !DILocalVariable(name: "rq", arg: 1, scope: !16182, file: !2657, line: 1276, type: !16185)
!16192 = !DILocation(line: 0, scope: !16182)
!16193 = !DILocation(line: 1289, column: 22, scope: !16182)
!16194 = !DILocation(line: 1289, column: 2, scope: !16182)
!16195 = !DILocation(line: 1291, column: 1, scope: !16182)
!16196 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !16197, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16199)
!16197 = !DISubroutineType(types: !16198)
!16198 = !{null, !14942}
!16199 = !{!16200}
!16200 = !DILocalVariable(name: "list", arg: 1, scope: !16196, file: !367, line: 197, type: !14942)
!16201 = !DILocation(line: 0, scope: !16196)
!16202 = !DILocation(line: 199, column: 8, scope: !16196)
!16203 = !DILocation(line: 199, column: 13, scope: !16196)
!16204 = !DILocation(line: 200, column: 8, scope: !16196)
!16205 = !DILocation(line: 200, column: 13, scope: !16196)
!16206 = !DILocation(line: 201, column: 1, scope: !16196)
!16207 = distinct !DISubprogram(name: "z_sched_init", scope: !2657, file: !2657, line: 1293, type: !3406, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!16208 = !DILocation(line: 1302, column: 2, scope: !16207)
!16209 = !DILocation(line: 1306, column: 2, scope: !16207)
!16210 = !DILocation(line: 1309, column: 1, scope: !16207)
!16211 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2657, file: !2657, line: 1311, type: !16212, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16215)
!16212 = !DISubroutineType(types: !16213)
!16213 = !{!108, !16214}
!16214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !645, line: 347, baseType: !2552)
!16215 = !{!16216}
!16216 = !DILocalVariable(name: "thread", arg: 1, scope: !16211, file: !2657, line: 1311, type: !16214)
!16217 = !DILocation(line: 0, scope: !16211)
!16218 = !DILocation(line: 1313, column: 22, scope: !16211)
!16219 = !DILocation(line: 1313, column: 9, scope: !16211)
!16220 = !DILocation(line: 1313, column: 2, scope: !16211)
!16221 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2657, file: !2657, line: 1325, type: !16222, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16224)
!16222 = !DISubroutineType(types: !16223)
!16223 = !{null, !16214, !108}
!16224 = !{!16225, !16226, !16227}
!16225 = !DILocalVariable(name: "thread", arg: 1, scope: !16221, file: !2657, line: 1325, type: !16214)
!16226 = !DILocalVariable(name: "prio", arg: 2, scope: !16221, file: !2657, line: 1325, type: !108)
!16227 = !DILocalVariable(name: "th", scope: !16221, file: !2657, line: 1334, type: !2552)
!16228 = !DILocation(line: 0, scope: !16221)
!16229 = !DILocation(line: 1336, column: 2, scope: !16221)
!16230 = !DILocation(line: 1337, column: 1, scope: !16221)
!16231 = distinct !DISubprogram(name: "k_can_yield", scope: !2657, file: !2657, line: 1384, type: !8083, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!16232 = !DILocation(line: 1386, column: 11, scope: !16231)
!16233 = !DILocation(line: 1386, column: 29, scope: !16231)
!16234 = !DILocation(line: 1386, column: 32, scope: !16231)
!16235 = !DILocation(line: 1386, column: 46, scope: !16231)
!16236 = !DILocation(line: 1387, column: 28, scope: !16231)
!16237 = !DILocation(line: 1387, column: 4, scope: !16231)
!16238 = !DILocation(line: 1386, column: 2, scope: !16231)
!16239 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !359, file: !359, line: 989, type: !8083, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!16240 = !DILocation(line: 993, column: 10, scope: !16239)
!16241 = !DILocation(line: 993, column: 2, scope: !16239)
!16242 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2657, file: !2657, line: 1390, type: !3406, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16243)
!16243 = !{!16244}
!16244 = !DILocalVariable(name: "key", scope: !16242, file: !2657, line: 1396, type: !14731)
!16245 = !DILocation(line: 0, scope: !14739, inlinedAt: !16246)
!16246 = distinct !DILocation(line: 1396, column: 25, scope: !16242)
!16247 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !16246)
!16249 = !DILocation(line: 0, scope: !14748, inlinedAt: !16248)
!16250 = !DILocation(line: 0, scope: !16242)
!16251 = !DILocation(line: 1400, column: 18, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16253, file: !2657, line: 1399, column: 36)
!16253 = distinct !DILexicalBlock(scope: !16242, file: !2657, line: 1398, column: 6)
!16254 = !DILocation(line: 0, scope: !14908, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 1400, column: 3, scope: !16252)
!16256 = !DILocation(line: 266, column: 15, scope: !14908, inlinedAt: !16255)
!16257 = !DILocation(line: 266, column: 28, scope: !14908, inlinedAt: !16255)
!16258 = !DILocation(line: 0, scope: !14916, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 268, column: 3, scope: !14920, inlinedAt: !16255)
!16260 = !DILocation(line: 234, column: 2, scope: !14916, inlinedAt: !16259)
!16261 = !DILocation(line: 1402, column: 15, scope: !16242)
!16262 = !DILocation(line: 0, scope: !14925, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 1402, column: 2, scope: !16242)
!16264 = !DILocation(line: 252, column: 15, scope: !14925, inlinedAt: !16263)
!16265 = !DILocation(line: 252, column: 28, scope: !14925, inlinedAt: !16263)
!16266 = !DILocation(line: 0, scope: !14932, inlinedAt: !16267)
!16267 = distinct !DILocation(line: 254, column: 3, scope: !14936, inlinedAt: !16263)
!16268 = !DILocation(line: 0, scope: !14939, inlinedAt: !16269)
!16269 = distinct !DILocation(line: 229, column: 2, scope: !14932, inlinedAt: !16267)
!16270 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !16269)
!16271 = !DILocation(line: 188, column: 2, scope: !14951, inlinedAt: !16269)
!16272 = !DILocation(line: 0, scope: !14949, inlinedAt: !16269)
!16273 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !16269)
!16274 = !DILocation(line: 189, column: 35, scope: !14954, inlinedAt: !16269)
!16275 = !DILocation(line: 189, column: 7, scope: !14955, inlinedAt: !16269)
!16276 = !DILocation(line: 191, column: 21, scope: !14959, inlinedAt: !16269)
!16277 = !DILocation(line: 190, column: 4, scope: !14959, inlinedAt: !16269)
!16278 = !DILocation(line: 192, column: 4, scope: !14959, inlinedAt: !16269)
!16279 = distinct !{!16279, !16270, !16280}
!16280 = !DILocation(line: 194, column: 2, scope: !14949, inlinedAt: !16269)
!16281 = !DILocation(line: 196, column: 37, scope: !14939, inlinedAt: !16269)
!16282 = !DILocation(line: 196, column: 2, scope: !14939, inlinedAt: !16269)
!16283 = !DILocation(line: 197, column: 1, scope: !14939, inlinedAt: !16269)
!16284 = !DILocation(line: 1403, column: 2, scope: !16242)
!16285 = !DILocation(line: 0, scope: !15350, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 1404, column: 2, scope: !16242)
!16287 = !DILocation(line: 196, column: 9, scope: !15350, inlinedAt: !16286)
!16288 = !DILocation(line: 1405, column: 1, scope: !16242)
!16289 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2657, file: !2657, line: 1459, type: !16290, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16292)
!16290 = !DISubroutineType(types: !16291)
!16291 = !{!220, !15530}
!16292 = !{!16293, !16294, !16295}
!16293 = !DILocalVariable(name: "timeout", arg: 1, scope: !16289, file: !2657, line: 1459, type: !15530)
!16294 = !DILocalVariable(name: "ticks", scope: !16289, file: !2657, line: 1461, type: !109)
!16295 = !DILocalVariable(name: "ret", scope: !16289, file: !2657, line: 1480, type: !220)
!16296 = !DILocation(line: 0, scope: !16289)
!16297 = !DILocation(line: 1468, column: 6, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16289, file: !2657, line: 1468, column: 6)
!16299 = !DILocation(line: 1468, column: 6, scope: !16289)
!16300 = !DILocation(line: 1469, column: 20, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16298, file: !2657, line: 1468, column: 40)
!16302 = !DILocation(line: 1469, column: 3, scope: !16301)
!16303 = !DILocation(line: 1473, column: 3, scope: !16301)
!16304 = !DILocation(line: 1478, column: 10, scope: !16289)
!16305 = !DILocation(line: 1480, column: 16, scope: !16289)
!16306 = !DILocation(line: 1485, column: 1, scope: !16289)
!16307 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3802, file: !3802, line: 310, type: !16308, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16310)
!16308 = !DISubroutineType(types: !16309)
!16309 = !{null, !16214}
!16310 = !{!16311}
!16311 = !DILocalVariable(name: "thread", arg: 1, scope: !16307, file: !3802, line: 310, type: !16214)
!16312 = !DILocation(line: 0, scope: !16307)
!16313 = !DILocation(line: 319, column: 2, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16307, file: !3802, line: 319, column: 2)
!16315 = !{i64 2154801905}
!16316 = !DILocation(line: 320, column: 2, scope: !16307)
!16317 = !DILocation(line: 321, column: 1, scope: !16307)
!16318 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2657, file: !2657, line: 1415, type: !16319, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16321)
!16319 = !DISubroutineType(types: !16320)
!16320 = !{!220, !109}
!16321 = !{!16322, !16323, !16324, !16325}
!16322 = !DILocalVariable(name: "ticks", arg: 1, scope: !16318, file: !2657, line: 1415, type: !109)
!16323 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16318, file: !2657, line: 1418, type: !113)
!16324 = !DILocalVariable(name: "timeout", scope: !16318, file: !2657, line: 1430, type: !15530)
!16325 = !DILocalVariable(name: "key", scope: !16318, file: !2657, line: 1437, type: !14731)
!16326 = !DILocation(line: 0, scope: !16318)
!16327 = !DILocation(line: 1425, column: 12, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16318, file: !2657, line: 1425, column: 6)
!16329 = !DILocation(line: 1425, column: 6, scope: !16318)
!16330 = !DILocation(line: 1426, column: 3, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16328, file: !2657, line: 1425, column: 18)
!16332 = !DILocation(line: 1427, column: 3, scope: !16331)
!16333 = !DILocation(line: 1431, column: 24, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16318, file: !2657, line: 1431, column: 6)
!16335 = !DILocation(line: 1431, column: 6, scope: !16318)
!16336 = !DILocation(line: 1432, column: 35, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16334, file: !2657, line: 1431, column: 30)
!16338 = !DILocation(line: 1432, column: 27, scope: !16337)
!16339 = !DILocation(line: 1433, column: 2, scope: !16337)
!16340 = !DILocation(line: 1434, column: 27, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16334, file: !2657, line: 1433, column: 9)
!16342 = !DILocation(line: 0, scope: !16334)
!16343 = !DILocation(line: 0, scope: !14739, inlinedAt: !16344)
!16344 = distinct !DILocation(line: 1437, column: 25, scope: !16318)
!16345 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !16346)
!16346 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !16344)
!16347 = !DILocation(line: 0, scope: !14748, inlinedAt: !16346)
!16348 = !DILocation(line: 1440, column: 20, scope: !16318)
!16349 = !DILocation(line: 1440, column: 18, scope: !16318)
!16350 = !DILocation(line: 1442, column: 2, scope: !16318)
!16351 = !DILocation(line: 1443, column: 23, scope: !16318)
!16352 = !DILocation(line: 1443, column: 2, scope: !16318)
!16353 = !DILocation(line: 1444, column: 29, scope: !16318)
!16354 = !DILocation(line: 1444, column: 2, scope: !16318)
!16355 = !DILocation(line: 0, scope: !15350, inlinedAt: !16356)
!16356 = distinct !DILocation(line: 1446, column: 8, scope: !16318)
!16357 = !DILocation(line: 196, column: 9, scope: !15350, inlinedAt: !16356)
!16358 = !DILocation(line: 1450, column: 10, scope: !16318)
!16359 = !DILocation(line: 1450, column: 45, scope: !16318)
!16360 = !DILocation(line: 1450, column: 43, scope: !16318)
!16361 = !DILocation(line: 1451, column: 6, scope: !16318)
!16362 = !DILocation(line: 1457, column: 1, scope: !16318)
!16363 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3769, file: !3769, line: 1103, type: !3770, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16364)
!16364 = !{!16365}
!16365 = !DILocalVariable(name: "t", arg: 1, scope: !16363, file: !3769, line: 1103, type: !114)
!16366 = !DILocation(line: 0, scope: !16363)
!16367 = !DILocation(line: 0, scope: !14786, inlinedAt: !16368)
!16368 = distinct !DILocation(line: 1106, column: 9, scope: !16363)
!16369 = !DILocation(line: 139, column: 13, scope: !16370, inlinedAt: !16368)
!16370 = distinct !DILexicalBlock(scope: !16371, file: !3769, line: 138, column: 10)
!16371 = distinct !DILexicalBlock(scope: !16372, file: !3769, line: 136, column: 7)
!16372 = distinct !DILexicalBlock(scope: !14807, file: !3769, line: 134, column: 17)
!16373 = !DILocation(line: 1106, column: 2, scope: !16363)
!16374 = distinct !DISubprogram(name: "k_yield", scope: !3802, file: !3802, line: 140, type: !3406, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!16375 = !DILocation(line: 148, column: 2, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16374, file: !3802, line: 148, column: 2)
!16377 = !{i64 2154801225}
!16378 = !DILocation(line: 149, column: 2, scope: !16374)
!16379 = !DILocation(line: 150, column: 1, scope: !16374)
!16380 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2657, file: !2657, line: 1495, type: !16381, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16383)
!16381 = !DISubroutineType(types: !16382)
!16382 = !{!220, !108}
!16383 = !{!16384, !16385}
!16384 = !DILocalVariable(name: "us", arg: 1, scope: !16380, file: !2657, line: 1495, type: !108)
!16385 = !DILocalVariable(name: "ticks", scope: !16380, file: !2657, line: 1497, type: !220)
!16386 = !DILocation(line: 0, scope: !16380)
!16387 = !DILocation(line: 1501, column: 31, scope: !16380)
!16388 = !DILocation(line: 1501, column: 10, scope: !16380)
!16389 = !DILocation(line: 1502, column: 23, scope: !16380)
!16390 = !DILocation(line: 1502, column: 10, scope: !16380)
!16391 = !DILocation(line: 1506, column: 31, scope: !16380)
!16392 = !DILocation(line: 1506, column: 9, scope: !16380)
!16393 = !DILocation(line: 1506, column: 2, scope: !16380)
!16394 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3769, file: !3769, line: 571, type: !3770, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16395)
!16395 = !{!16396}
!16396 = !DILocalVariable(name: "t", arg: 1, scope: !16394, file: !3769, line: 571, type: !114)
!16397 = !DILocation(line: 0, scope: !16394)
!16398 = !DILocation(line: 0, scope: !14786, inlinedAt: !16399)
!16399 = distinct !DILocation(line: 574, column: 9, scope: !16394)
!16400 = !DILocation(line: 135, column: 5, scope: !16372, inlinedAt: !16399)
!16401 = !DILocation(line: 139, column: 13, scope: !16370, inlinedAt: !16399)
!16402 = !DILocation(line: 574, column: 2, scope: !16394)
!16403 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3769, file: !3769, line: 1187, type: !3770, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16404)
!16404 = !{!16405}
!16405 = !DILocalVariable(name: "t", arg: 1, scope: !16403, file: !3769, line: 1187, type: !114)
!16406 = !DILocation(line: 0, scope: !16403)
!16407 = !DILocation(line: 0, scope: !14786, inlinedAt: !16408)
!16408 = distinct !DILocation(line: 1190, column: 9, scope: !16403)
!16409 = !DILocation(line: 145, column: 13, scope: !16410, inlinedAt: !16408)
!16410 = distinct !DILexicalBlock(scope: !14804, file: !3769, line: 144, column: 10)
!16411 = !DILocation(line: 1190, column: 2, scope: !16403)
!16412 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2657, file: !2657, line: 1517, type: !16308, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16413)
!16413 = !{!16414}
!16414 = !DILocalVariable(name: "thread", arg: 1, scope: !16412, file: !2657, line: 1517, type: !16214)
!16415 = !DILocation(line: 0, scope: !16412)
!16416 = !DILocation(line: 1521, column: 6, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16412, file: !2657, line: 1521, column: 6)
!16418 = !DILocation(line: 1521, column: 6, scope: !16412)
!16419 = !DILocation(line: 1525, column: 6, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !16412, file: !2657, line: 1525, column: 6)
!16421 = !DILocation(line: 1525, column: 37, scope: !16420)
!16422 = !DILocation(line: 1525, column: 6, scope: !16412)
!16423 = !DILocation(line: 1527, column: 20, scope: !16424)
!16424 = distinct !DILexicalBlock(scope: !16425, file: !2657, line: 1527, column: 7)
!16425 = distinct !DILexicalBlock(scope: !16420, file: !2657, line: 1525, column: 42)
!16426 = !DILocation(line: 1527, column: 33, scope: !16424)
!16427 = !DILocation(line: 1527, column: 7, scope: !16425)
!16428 = !DILocation(line: 1532, column: 2, scope: !16412)
!16429 = !DILocation(line: 1533, column: 2, scope: !16412)
!16430 = !DILocation(line: 1031, column: 3, scope: !15383, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 48, column: 10, scope: !15387, inlinedAt: !16432)
!16432 = distinct !DILocation(line: 1537, column: 7, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16412, file: !2657, line: 1537, column: 6)
!16434 = !DILocation(line: 0, scope: !15383, inlinedAt: !16431)
!16435 = !DILocation(line: 48, column: 9, scope: !15387, inlinedAt: !16432)
!16436 = !DILocation(line: 1537, column: 6, scope: !16412)
!16437 = !DILocation(line: 1538, column: 3, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16433, file: !2657, line: 1537, column: 25)
!16439 = !DILocation(line: 1539, column: 2, scope: !16438)
!16440 = !DILocation(line: 1540, column: 1, scope: !16412)
!16441 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14016, file: !14016, line: 101, type: !14857, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16442)
!16442 = !{!16443}
!16443 = !DILocalVariable(name: "thread", arg: 1, scope: !16441, file: !14016, line: 101, type: !2552)
!16444 = !DILocation(line: 0, scope: !16441)
!16445 = !DILocation(line: 103, column: 23, scope: !16441)
!16446 = !DILocation(line: 103, column: 36, scope: !16441)
!16447 = !DILocation(line: 103, column: 55, scope: !16441)
!16448 = !DILocation(line: 103, column: 2, scope: !16441)
!16449 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2657, file: !2657, line: 1567, type: !16450, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16452)
!16450 = !DISubroutineType(types: !16451)
!16451 = !{!16214}
!16452 = !{!16453}
!16453 = !DILocalVariable(name: "ret", scope: !16449, file: !2657, line: 1577, type: !16214)
!16454 = !DILocation(line: 1577, column: 30, scope: !16449)
!16455 = !DILocation(line: 0, scope: !16449)
!16456 = !DILocation(line: 1582, column: 2, scope: !16449)
!16457 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2657, file: !2657, line: 1593, type: !8372, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !437)
!16458 = !DILocation(line: 1031, column: 3, scope: !15383, inlinedAt: !16459)
!16459 = distinct !DILocation(line: 48, column: 10, scope: !15387, inlinedAt: !16460)
!16460 = distinct !DILocation(line: 1595, column: 10, scope: !16457)
!16461 = !DILocation(line: 0, scope: !15383, inlinedAt: !16459)
!16462 = !DILocation(line: 48, column: 9, scope: !15387, inlinedAt: !16460)
!16463 = !DILocation(line: 1595, column: 27, scope: !16457)
!16464 = !DILocation(line: 1595, column: 41, scope: !16457)
!16465 = !DILocation(line: 1595, column: 30, scope: !16457)
!16466 = !DILocation(line: 1595, column: 2, scope: !16457)
!16467 = distinct !DISubprogram(name: "z_thread_abort", scope: !2657, file: !2657, line: 1725, type: !14697, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16468)
!16468 = !{!16469, !16470}
!16469 = !DILocalVariable(name: "thread", arg: 1, scope: !16467, file: !2657, line: 1725, type: !2552)
!16470 = !DILocalVariable(name: "key", scope: !16467, file: !2657, line: 1727, type: !14731)
!16471 = !DILocation(line: 0, scope: !16467)
!16472 = !DILocation(line: 0, scope: !14739, inlinedAt: !16473)
!16473 = distinct !DILocation(line: 1727, column: 25, scope: !16467)
!16474 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !16475)
!16475 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !16473)
!16476 = !DILocation(line: 0, scope: !14748, inlinedAt: !16475)
!16477 = !DILocation(line: 1729, column: 20, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16467, file: !2657, line: 1729, column: 6)
!16479 = !DILocation(line: 1729, column: 33, scope: !16478)
!16480 = !DILocation(line: 1729, column: 48, scope: !16478)
!16481 = !DILocation(line: 1729, column: 6, scope: !16467)
!16482 = !DILocation(line: 0, scope: !14766, inlinedAt: !16483)
!16483 = distinct !DILocation(line: 1730, column: 3, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16478, file: !2657, line: 1729, column: 54)
!16485 = !DILocation(line: 0, scope: !14774, inlinedAt: !16486)
!16486 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !16483)
!16487 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !16486)
!16488 = !DILocation(line: 1732, column: 3, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16484, file: !2657, line: 1732, column: 3)
!16490 = !{i64 2155537230, i64 2155537246, i64 2155537272, i64 2155537300, i64 2155537320}
!16491 = !DILocation(line: 1733, column: 3, scope: !16484)
!16492 = !DILocation(line: 1736, column: 20, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16467, file: !2657, line: 1736, column: 6)
!16494 = !DILocation(line: 1736, column: 33, scope: !16493)
!16495 = !DILocation(line: 1736, column: 49, scope: !16493)
!16496 = !DILocation(line: 1736, column: 6, scope: !16467)
!16497 = !DILocation(line: 0, scope: !14766, inlinedAt: !16498)
!16498 = distinct !DILocation(line: 1737, column: 3, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16493, file: !2657, line: 1736, column: 56)
!16500 = !DILocation(line: 0, scope: !14774, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !16498)
!16502 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !16501)
!16503 = !DILocation(line: 1738, column: 3, scope: !16499)
!16504 = !DILocation(line: 1775, column: 2, scope: !16467)
!16505 = !DILocation(line: 1776, column: 16, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16467, file: !2657, line: 1776, column: 6)
!16507 = !DILocation(line: 1776, column: 13, scope: !16506)
!16508 = !DILocation(line: 1776, column: 25, scope: !16506)
!16509 = !DILocation(line: 1031, column: 3, scope: !15383, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 48, column: 10, scope: !15387, inlinedAt: !16511)
!16511 = distinct !DILocation(line: 1776, column: 29, scope: !16506)
!16512 = !DILocation(line: 0, scope: !15383, inlinedAt: !16510)
!16513 = !DILocation(line: 48, column: 9, scope: !15387, inlinedAt: !16511)
!16514 = !DILocation(line: 1776, column: 6, scope: !16467)
!16515 = !DILocation(line: 0, scope: !15350, inlinedAt: !16516)
!16516 = distinct !DILocation(line: 1777, column: 3, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16506, file: !2657, line: 1776, column: 47)
!16518 = !DILocation(line: 196, column: 9, scope: !15350, inlinedAt: !16516)
!16519 = !DILocation(line: 1779, column: 2, scope: !16517)
!16520 = !DILocation(line: 0, scope: !14766, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 1780, column: 2, scope: !16467)
!16522 = !DILocation(line: 0, scope: !14774, inlinedAt: !16523)
!16523 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !16521)
!16524 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !16523)
!16525 = !DILocation(line: 1781, column: 1, scope: !16467)
!16526 = distinct !DISubprogram(name: "end_thread", scope: !2657, file: !2657, line: 1690, type: !14697, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16527)
!16527 = !{!16528}
!16528 = !DILocalVariable(name: "thread", arg: 1, scope: !16526, file: !2657, line: 1690, type: !2552)
!16529 = !DILocation(line: 0, scope: !16526)
!16530 = !DILocation(line: 1695, column: 20, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16526, file: !2657, line: 1695, column: 6)
!16532 = !DILocation(line: 1695, column: 33, scope: !16531)
!16533 = !DILocation(line: 1695, column: 49, scope: !16531)
!16534 = !DILocation(line: 1695, column: 6, scope: !16526)
!16535 = !DILocation(line: 1697, column: 29, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16531, file: !2657, line: 1695, column: 56)
!16537 = !DILocation(line: 1698, column: 7, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16536, file: !2657, line: 1698, column: 7)
!16539 = !DILocation(line: 1698, column: 7, scope: !16536)
!16540 = !DILocation(line: 0, scope: !14908, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 1699, column: 4, scope: !16542)
!16542 = distinct !DILexicalBlock(scope: !16538, file: !2657, line: 1698, column: 35)
!16543 = !DILocation(line: 266, column: 28, scope: !14908, inlinedAt: !16541)
!16544 = !DILocation(line: 0, scope: !14916, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 268, column: 3, scope: !14920, inlinedAt: !16541)
!16546 = !DILocation(line: 234, column: 2, scope: !14916, inlinedAt: !16545)
!16547 = !DILocation(line: 1700, column: 3, scope: !16542)
!16548 = !DILocation(line: 1701, column: 20, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16536, file: !2657, line: 1701, column: 7)
!16550 = !DILocation(line: 1701, column: 30, scope: !16549)
!16551 = !DILocation(line: 1701, column: 7, scope: !16536)
!16552 = !DILocation(line: 1702, column: 4, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16549, file: !2657, line: 1701, column: 39)
!16554 = !DILocation(line: 1703, column: 3, scope: !16553)
!16555 = !DILocation(line: 1704, column: 9, scope: !16536)
!16556 = !DILocation(line: 1705, column: 23, scope: !16536)
!16557 = !DILocation(line: 1705, column: 3, scope: !16536)
!16558 = !DILocation(line: 1706, column: 3, scope: !16536)
!16559 = !DILocation(line: 1722, column: 2, scope: !16536)
!16560 = !DILocation(line: 1723, column: 1, scope: !16526)
!16561 = distinct !DISubprogram(name: "unpend_all", scope: !2657, file: !2657, line: 1674, type: !16562, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16564)
!16562 = !DISubroutineType(types: !16563)
!16563 = !{null, !2583}
!16564 = !{!16565, !16566}
!16565 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16561, file: !2657, line: 1674, type: !2583)
!16566 = !DILocalVariable(name: "thread", scope: !16561, file: !2657, line: 1676, type: !2552)
!16567 = !DILocation(line: 0, scope: !16561)
!16568 = !DILocation(line: 1678, column: 19, scope: !16561)
!16569 = !DILocation(line: 1678, column: 41, scope: !16561)
!16570 = !DILocation(line: 1678, column: 2, scope: !16561)
!16571 = !DILocation(line: 1679, column: 3, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16561, file: !2657, line: 1678, column: 50)
!16573 = !DILocation(line: 1680, column: 9, scope: !16572)
!16574 = !DILocalVariable(name: "thread", arg: 1, scope: !16575, file: !14036, line: 65, type: !2552)
!16575 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14036, file: !14036, line: 65, type: !16576, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16578)
!16576 = !DISubroutineType(types: !16577)
!16577 = !{null, !2552, !32}
!16578 = !{!16574, !16579}
!16579 = !DILocalVariable(name: "value", arg: 2, scope: !16575, file: !14036, line: 65, type: !32)
!16580 = !DILocation(line: 0, scope: !16575, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 1681, column: 3, scope: !16572)
!16582 = !DILocation(line: 67, column: 15, scope: !16575, inlinedAt: !16581)
!16583 = !DILocation(line: 67, column: 33, scope: !16575, inlinedAt: !16581)
!16584 = !DILocation(line: 1682, column: 3, scope: !16572)
!16585 = distinct !{!16585, !16570, !16586}
!16586 = !DILocation(line: 1683, column: 2, scope: !16561)
!16587 = !DILocation(line: 1684, column: 1, scope: !16561)
!16588 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2657, file: !2657, line: 1794, type: !16589, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16591)
!16589 = !DISubroutineType(types: !16590)
!16590 = !{!108, !2552, !15530}
!16591 = !{!16592, !16593, !16594, !16595}
!16592 = !DILocalVariable(name: "thread", arg: 1, scope: !16588, file: !2657, line: 1794, type: !2552)
!16593 = !DILocalVariable(name: "timeout", arg: 2, scope: !16588, file: !2657, line: 1794, type: !15530)
!16594 = !DILocalVariable(name: "key", scope: !16588, file: !2657, line: 1796, type: !14731)
!16595 = !DILocalVariable(name: "ret", scope: !16588, file: !2657, line: 1797, type: !108)
!16596 = !DILocation(line: 0, scope: !16588)
!16597 = !DILocation(line: 0, scope: !14739, inlinedAt: !16598)
!16598 = distinct !DILocation(line: 1796, column: 25, scope: !16588)
!16599 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !16600)
!16600 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !16598)
!16601 = !DILocation(line: 0, scope: !14748, inlinedAt: !16600)
!16602 = !DILocation(line: 1801, column: 20, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16588, file: !2657, line: 1801, column: 6)
!16604 = !DILocation(line: 1801, column: 33, scope: !16603)
!16605 = !DILocation(line: 1801, column: 49, scope: !16603)
!16606 = !DILocation(line: 1801, column: 6, scope: !16588)
!16607 = !DILocation(line: 1803, column: 13, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16603, file: !2657, line: 1803, column: 13)
!16609 = !DILocation(line: 1803, column: 13, scope: !16603)
!16610 = !DILocation(line: 1805, column: 24, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16608, file: !2657, line: 1805, column: 13)
!16612 = !DILocation(line: 1805, column: 21, scope: !16611)
!16613 = !DILocation(line: 1805, column: 34, scope: !16611)
!16614 = !DILocation(line: 1806, column: 20, scope: !16611)
!16615 = !DILocation(line: 1806, column: 44, scope: !16611)
!16616 = !DILocation(line: 1806, column: 30, scope: !16611)
!16617 = !DILocation(line: 1805, column: 13, scope: !16608)
!16618 = !DILocation(line: 1810, column: 42, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16611, file: !2657, line: 1808, column: 9)
!16620 = !DILocation(line: 1810, column: 3, scope: !16619)
!16621 = !DILocation(line: 1811, column: 22, scope: !16619)
!16622 = !DILocation(line: 1811, column: 3, scope: !16619)
!16623 = !DILocation(line: 0, scope: !15350, inlinedAt: !16624)
!16624 = distinct !DILocation(line: 1814, column: 9, scope: !16619)
!16625 = !DILocation(line: 196, column: 9, scope: !15350, inlinedAt: !16624)
!16626 = !DILocation(line: 1817, column: 3, scope: !16619)
!16627 = !DILocation(line: 0, scope: !16603)
!16628 = !DILocation(line: 0, scope: !14766, inlinedAt: !16629)
!16629 = distinct !DILocation(line: 1822, column: 2, scope: !16588)
!16630 = !DILocation(line: 0, scope: !14774, inlinedAt: !16631)
!16631 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !16629)
!16632 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !16631)
!16633 = !DILocation(line: 1823, column: 2, scope: !16588)
!16634 = !DILocation(line: 1824, column: 1, scope: !16588)
!16635 = distinct !DISubprogram(name: "z_sched_wake", scope: !2657, file: !2657, line: 1882, type: !16636, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16638)
!16636 = !DISubroutineType(types: !16637)
!16637 = !{!422, !2583, !108, !104}
!16638 = !{!16639, !16640, !16641, !16642, !16643, !16644, !16646}
!16639 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16635, file: !2657, line: 1882, type: !2583)
!16640 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16635, file: !2657, line: 1882, type: !108)
!16641 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16635, file: !2657, line: 1882, type: !104)
!16642 = !DILocalVariable(name: "thread", scope: !16635, file: !2657, line: 1884, type: !2552)
!16643 = !DILocalVariable(name: "ret", scope: !16635, file: !2657, line: 1885, type: !422)
!16644 = !DILocalVariable(name: "__i", scope: !16645, file: !2657, line: 1887, type: !14731)
!16645 = distinct !DILexicalBlock(scope: !16635, file: !2657, line: 1887, column: 2)
!16646 = !DILocalVariable(name: "__key", scope: !16645, file: !2657, line: 1887, type: !14731)
!16647 = !DILocation(line: 0, scope: !16635)
!16648 = !DILocation(line: 0, scope: !16645)
!16649 = !DILocation(line: 0, scope: !14739, inlinedAt: !16650)
!16650 = distinct !DILocation(line: 1887, column: 2, scope: !16645)
!16651 = !DILocation(line: 55, column: 2, scope: !14748, inlinedAt: !16652)
!16652 = distinct !DILocation(line: 145, column: 10, scope: !14739, inlinedAt: !16650)
!16653 = !DILocation(line: 0, scope: !14748, inlinedAt: !16652)
!16654 = !DILocation(line: 1888, column: 12, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16656, file: !2657, line: 1887, column: 26)
!16656 = distinct !DILexicalBlock(scope: !16645, file: !2657, line: 1887, column: 2)
!16657 = !DILocation(line: 1890, column: 14, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16655, file: !2657, line: 1890, column: 7)
!16659 = !DILocation(line: 1890, column: 7, scope: !16655)
!16660 = !DILocalVariable(name: "thread", arg: 1, scope: !16661, file: !16662, line: 134, type: !2552)
!16661 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16662, file: !16662, line: 134, type: !16663, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16665)
!16662 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16663 = !DISubroutineType(types: !16664)
!16664 = !{null, !2552, !32, !104}
!16665 = !{!16660, !16666, !16667}
!16666 = !DILocalVariable(name: "value", arg: 2, scope: !16661, file: !16662, line: 135, type: !32)
!16667 = !DILocalVariable(name: "data", arg: 3, scope: !16661, file: !16662, line: 136, type: !104)
!16668 = !DILocation(line: 0, scope: !16661, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 1891, column: 4, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16658, file: !2657, line: 1890, column: 23)
!16671 = !DILocation(line: 0, scope: !16575, inlinedAt: !16672)
!16672 = distinct !DILocation(line: 138, column: 2, scope: !16661, inlinedAt: !16669)
!16673 = !DILocation(line: 67, column: 15, scope: !16575, inlinedAt: !16672)
!16674 = !DILocation(line: 67, column: 33, scope: !16575, inlinedAt: !16672)
!16675 = !DILocation(line: 139, column: 15, scope: !16661, inlinedAt: !16669)
!16676 = !DILocation(line: 139, column: 25, scope: !16661, inlinedAt: !16669)
!16677 = !DILocation(line: 1894, column: 4, scope: !16670)
!16678 = !DILocation(line: 1895, column: 10, scope: !16670)
!16679 = !DILocation(line: 1896, column: 4, scope: !16670)
!16680 = !DILocation(line: 1898, column: 3, scope: !16670)
!16681 = !DILocation(line: 0, scope: !14766, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 1887, column: 2, scope: !16656)
!16683 = !DILocation(line: 0, scope: !14774, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 215, column: 2, scope: !14766, inlinedAt: !16682)
!16685 = !DILocation(line: 95, column: 2, scope: !14774, inlinedAt: !16684)
!16686 = !DILocation(line: 1901, column: 2, scope: !16635)
!16687 = distinct !DISubprogram(name: "z_sched_wait", scope: !2657, file: !2657, line: 1904, type: !16688, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !16691)
!16688 = !DISubroutineType(types: !16689)
!16689 = !{!108, !14742, !14731, !2583, !15530, !16690}
!16690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!16691 = !{!16692, !16693, !16694, !16695, !16696, !16697}
!16692 = !DILocalVariable(name: "lock", arg: 1, scope: !16687, file: !2657, line: 1904, type: !14742)
!16693 = !DILocalVariable(name: "key", arg: 2, scope: !16687, file: !2657, line: 1904, type: !14731)
!16694 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16687, file: !2657, line: 1905, type: !2583)
!16695 = !DILocalVariable(name: "timeout", arg: 4, scope: !16687, file: !2657, line: 1905, type: !15530)
!16696 = !DILocalVariable(name: "data", arg: 5, scope: !16687, file: !2657, line: 1905, type: !16690)
!16697 = !DILocalVariable(name: "ret", scope: !16687, file: !2657, line: 1907, type: !108)
!16698 = !DILocation(line: 0, scope: !16687)
!16699 = !DILocation(line: 1907, column: 12, scope: !16687)
!16700 = !DILocation(line: 1909, column: 11, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16687, file: !2657, line: 1909, column: 6)
!16702 = !DILocation(line: 1909, column: 6, scope: !16687)
!16703 = !DILocation(line: 1910, column: 11, scope: !16704)
!16704 = distinct !DILexicalBlock(scope: !16701, file: !2657, line: 1909, column: 20)
!16705 = !DILocation(line: 1910, column: 26, scope: !16704)
!16706 = !DILocation(line: 1910, column: 9, scope: !16704)
!16707 = !DILocation(line: 1911, column: 2, scope: !16704)
!16708 = !DILocation(line: 1912, column: 2, scope: !16687)
!16709 = distinct !DISubprogram(name: "z_data_copy", scope: !16710, file: !16710, line: 22, type: !3406, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3389, retainedNodes: !437)
!16710 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16711 = !DILocation(line: 24, column: 2, scope: !16709)
!16712 = !DILocation(line: 27, column: 2, scope: !16709)
!16713 = !DILocation(line: 71, column: 1, scope: !16709)
!16714 = distinct !DISubprogram(name: "z_add_timeout", scope: !2694, file: !2694, line: 88, type: !16715, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16721)
!16715 = !DISubroutineType(types: !16716)
!16716 = !{null, !2667, !2686, !16717}
!16717 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !16718)
!16718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !16719)
!16719 = !{!16720}
!16720 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16718, file: !110, line: 66, baseType: !109, size: 64)
!16721 = !{!16722, !16723, !16724, !16725, !16731, !16732, !16735, !16738}
!16722 = !DILocalVariable(name: "to", arg: 1, scope: !16714, file: !2694, line: 88, type: !2667)
!16723 = !DILocalVariable(name: "fn", arg: 2, scope: !16714, file: !2694, line: 88, type: !2686)
!16724 = !DILocalVariable(name: "timeout", arg: 3, scope: !16714, file: !2694, line: 89, type: !16717)
!16725 = !DILocalVariable(name: "__i", scope: !16726, file: !2694, line: 102, type: !16727)
!16726 = distinct !DILexicalBlock(scope: !16714, file: !2694, line: 102, column: 2)
!16727 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !16728)
!16728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !16729)
!16729 = !{!16730}
!16730 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16728, file: !436, line: 33, baseType: !108, size: 32)
!16731 = !DILocalVariable(name: "__key", scope: !16726, file: !2694, line: 102, type: !16727)
!16732 = !DILocalVariable(name: "t", scope: !16733, file: !2694, line: 103, type: !2667)
!16733 = distinct !DILexicalBlock(scope: !16734, file: !2694, line: 102, column: 24)
!16734 = distinct !DILexicalBlock(scope: !16726, file: !2694, line: 102, column: 2)
!16735 = !DILocalVariable(name: "ticks", scope: !16736, file: !2694, line: 107, type: !109)
!16736 = distinct !DILexicalBlock(scope: !16737, file: !2694, line: 106, column: 39)
!16737 = distinct !DILexicalBlock(scope: !16733, file: !2694, line: 105, column: 7)
!16738 = !DILocalVariable(name: "next_time", scope: !16739, file: !2694, line: 137, type: !220)
!16739 = distinct !DILexicalBlock(scope: !16740, file: !2694, line: 127, column: 22)
!16740 = distinct !DILexicalBlock(scope: !16733, file: !2694, line: 127, column: 7)
!16741 = !DILocation(line: 0, scope: !16714)
!16742 = !DILocation(line: 91, column: 6, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16714, file: !2694, line: 91, column: 6)
!16744 = !DILocation(line: 91, column: 6, scope: !16714)
!16745 = !DILocation(line: 100, column: 6, scope: !16714)
!16746 = !DILocation(line: 100, column: 9, scope: !16714)
!16747 = !DILocation(line: 0, scope: !16726)
!16748 = !DILocalVariable(name: "l", arg: 1, scope: !16749, file: !436, line: 136, type: !16752)
!16749 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !16750, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16753)
!16750 = !DISubroutineType(types: !16751)
!16751 = !{!16727, !16752}
!16752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!16753 = !{!16748, !16754}
!16754 = !DILocalVariable(name: "k", scope: !16749, file: !436, line: 139, type: !16727)
!16755 = !DILocation(line: 0, scope: !16749, inlinedAt: !16756)
!16756 = distinct !DILocation(line: 102, column: 2, scope: !16726)
!16757 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !16762)
!16758 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16759)
!16759 = !{!16760, !16761}
!16760 = !DILocalVariable(name: "key", scope: !16758, file: !4080, line: 44, type: !32)
!16761 = !DILocalVariable(name: "tmp", scope: !16758, file: !4080, line: 53, type: !32)
!16762 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !16756)
!16763 = !{i64 2262192}
!16764 = !DILocation(line: 0, scope: !16758, inlinedAt: !16762)
!16765 = !DILocation(line: 106, column: 33, scope: !16737)
!16766 = !DILocation(line: 105, column: 7, scope: !16733)
!16767 = !DILocation(line: 107, column: 50, scope: !16736)
!16768 = !DILocation(line: 107, column: 48, scope: !16736)
!16769 = !DILocation(line: 0, scope: !16736)
!16770 = !DILocation(line: 109, column: 17, scope: !16736)
!16771 = !DILocation(line: 110, column: 3, scope: !16736)
!16772 = !DILocation(line: 111, column: 31, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16737, file: !2694, line: 110, column: 10)
!16774 = !DILocation(line: 111, column: 37, scope: !16773)
!16775 = !DILocation(line: 111, column: 35, scope: !16773)
!16776 = !DILocation(line: 0, scope: !16737)
!16777 = !DILocation(line: 109, column: 8, scope: !16736)
!16778 = !DILocation(line: 109, column: 15, scope: !16736)
!16779 = !DILocation(line: 114, column: 12, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16733, file: !2694, line: 114, column: 3)
!16781 = !DILocation(line: 0, scope: !16733)
!16782 = !DILocation(line: 114, column: 3, scope: !16780)
!16783 = !DILocation(line: 115, column: 24, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16785, file: !2694, line: 115, column: 8)
!16785 = distinct !DILexicalBlock(scope: !16786, file: !2694, line: 114, column: 45)
!16786 = distinct !DILexicalBlock(scope: !16780, file: !2694, line: 114, column: 3)
!16787 = !DILocation(line: 115, column: 11, scope: !16784)
!16788 = !DILocation(line: 115, column: 18, scope: !16784)
!16789 = !DILocation(line: 115, column: 8, scope: !16785)
!16790 = !DILocation(line: 116, column: 15, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16784, file: !2694, line: 115, column: 32)
!16792 = !DILocation(line: 117, column: 26, scope: !16791)
!16793 = !DILocation(line: 117, column: 37, scope: !16791)
!16794 = !DILocation(line: 117, column: 5, scope: !16791)
!16795 = !DILocation(line: 123, column: 7, scope: !16733)
!16796 = !DILocation(line: 120, column: 15, scope: !16785)
!16797 = !DILocation(line: 114, column: 36, scope: !16786)
!16798 = distinct !{!16798, !16782, !16799}
!16799 = !DILocation(line: 121, column: 3, scope: !16780)
!16800 = !DILocation(line: 124, column: 41, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16802, file: !2694, line: 123, column: 18)
!16802 = distinct !DILexicalBlock(scope: !16733, file: !2694, line: 123, column: 7)
!16803 = !DILocation(line: 124, column: 4, scope: !16801)
!16804 = !DILocation(line: 125, column: 3, scope: !16801)
!16805 = !DILocation(line: 127, column: 13, scope: !16740)
!16806 = !DILocation(line: 127, column: 10, scope: !16740)
!16807 = !DILocation(line: 127, column: 7, scope: !16733)
!16808 = !DILocation(line: 137, column: 24, scope: !16739)
!16809 = !DILocation(line: 0, scope: !16739)
!16810 = !DILocation(line: 139, column: 18, scope: !16811)
!16811 = distinct !DILexicalBlock(scope: !16739, file: !2694, line: 139, column: 8)
!16812 = !DILocation(line: 139, column: 23, scope: !16811)
!16813 = !DILocation(line: 141, column: 5, scope: !16814)
!16814 = distinct !DILexicalBlock(scope: !16811, file: !2694, line: 140, column: 48)
!16815 = !DILocation(line: 142, column: 4, scope: !16814)
!16816 = !DILocalVariable(name: "key", arg: 2, scope: !16817, file: !436, line: 190, type: !16727)
!16817 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !16818, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16820)
!16818 = !DISubroutineType(types: !16819)
!16819 = !{null, !16752, !16727}
!16820 = !{!16821, !16816}
!16821 = !DILocalVariable(name: "l", arg: 1, scope: !16817, file: !436, line: 189, type: !16752)
!16822 = !DILocation(line: 0, scope: !16817, inlinedAt: !16823)
!16823 = distinct !DILocation(line: 102, column: 2, scope: !16734)
!16824 = !DILocalVariable(name: "key", arg: 1, scope: !16825, file: !4080, line: 84, type: !32)
!16825 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16826)
!16826 = !{!16824}
!16827 = !DILocation(line: 0, scope: !16825, inlinedAt: !16828)
!16828 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !16823)
!16829 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !16828)
!16830 = !{i64 2263009}
!16831 = !DILocation(line: 148, column: 1, scope: !16714)
!16832 = distinct !DISubprogram(name: "elapsed", scope: !2694, file: !2694, line: 62, type: !16833, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !437)
!16833 = !DISubroutineType(types: !16834)
!16834 = !{!220}
!16835 = !DILocation(line: 64, column: 9, scope: !16832)
!16836 = !DILocation(line: 64, column: 28, scope: !16832)
!16837 = !DILocation(line: 64, column: 35, scope: !16832)
!16838 = !DILocation(line: 64, column: 2, scope: !16832)
!16839 = distinct !DISubprogram(name: "first", scope: !2694, file: !2694, line: 39, type: !16840, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16842)
!16840 = !DISubroutineType(types: !16841)
!16841 = !{!2667}
!16842 = !{!16843}
!16843 = !DILocalVariable(name: "t", scope: !16839, file: !2694, line: 41, type: !16844)
!16844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!16845 = !DILocation(line: 41, column: 19, scope: !16839)
!16846 = !DILocation(line: 0, scope: !16839)
!16847 = !DILocation(line: 43, column: 9, scope: !16839)
!16848 = !DILocation(line: 43, column: 2, scope: !16839)
!16849 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !16850, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16852)
!16850 = !DISubroutineType(types: !16851)
!16851 = !{null, !16844, !16844}
!16852 = !{!16853, !16854, !16855}
!16853 = !DILocalVariable(name: "successor", arg: 1, scope: !16849, file: !367, line: 443, type: !16844)
!16854 = !DILocalVariable(name: "node", arg: 2, scope: !16849, file: !367, line: 443, type: !16844)
!16855 = !DILocalVariable(name: "prev", scope: !16849, file: !367, line: 445, type: !16856)
!16856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16844)
!16857 = !DILocation(line: 0, scope: !16849)
!16858 = !DILocation(line: 445, column: 39, scope: !16849)
!16859 = !DILocation(line: 447, column: 8, scope: !16849)
!16860 = !DILocation(line: 447, column: 13, scope: !16849)
!16861 = !DILocation(line: 448, column: 8, scope: !16849)
!16862 = !DILocation(line: 448, column: 13, scope: !16849)
!16863 = !DILocation(line: 449, column: 8, scope: !16849)
!16864 = !DILocation(line: 449, column: 13, scope: !16849)
!16865 = !DILocation(line: 450, column: 18, scope: !16849)
!16866 = !DILocation(line: 451, column: 1, scope: !16849)
!16867 = distinct !DISubprogram(name: "next", scope: !2694, file: !2694, line: 46, type: !16868, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16870)
!16868 = !DISubroutineType(types: !16869)
!16869 = !{!2667, !2667}
!16870 = !{!16871, !16872}
!16871 = !DILocalVariable(name: "t", arg: 1, scope: !16867, file: !2694, line: 46, type: !2667)
!16872 = !DILocalVariable(name: "n", scope: !16867, file: !2694, line: 48, type: !16844)
!16873 = !DILocation(line: 0, scope: !16867)
!16874 = !DILocation(line: 48, column: 58, scope: !16867)
!16875 = !DILocation(line: 48, column: 19, scope: !16867)
!16876 = !DILocation(line: 50, column: 9, scope: !16867)
!16877 = !DILocation(line: 50, column: 2, scope: !16867)
!16878 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !16879, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16882)
!16879 = !DISubroutineType(types: !16880)
!16880 = !{null, !16881, !16844}
!16881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 32)
!16882 = !{!16883, !16884, !16885}
!16883 = !DILocalVariable(name: "list", arg: 1, scope: !16878, file: !367, line: 404, type: !16881)
!16884 = !DILocalVariable(name: "node", arg: 2, scope: !16878, file: !367, line: 404, type: !16844)
!16885 = !DILocalVariable(name: "tail", scope: !16878, file: !367, line: 406, type: !16856)
!16886 = !DILocation(line: 0, scope: !16878)
!16887 = !DILocation(line: 406, column: 34, scope: !16878)
!16888 = !DILocation(line: 408, column: 8, scope: !16878)
!16889 = !DILocation(line: 408, column: 13, scope: !16878)
!16890 = !DILocation(line: 409, column: 8, scope: !16878)
!16891 = !DILocation(line: 409, column: 13, scope: !16878)
!16892 = !DILocation(line: 411, column: 8, scope: !16878)
!16893 = !DILocation(line: 411, column: 13, scope: !16878)
!16894 = !DILocation(line: 412, column: 13, scope: !16878)
!16895 = !DILocation(line: 413, column: 1, scope: !16878)
!16896 = distinct !DISubprogram(name: "next_timeout", scope: !2694, file: !2694, line: 67, type: !16833, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16897)
!16897 = !{!16898, !16899, !16900}
!16898 = !DILocalVariable(name: "to", scope: !16896, file: !2694, line: 69, type: !2667)
!16899 = !DILocalVariable(name: "ticks_elapsed", scope: !16896, file: !2694, line: 70, type: !220)
!16900 = !DILocalVariable(name: "ret", scope: !16896, file: !2694, line: 71, type: !220)
!16901 = !DILocation(line: 69, column: 24, scope: !16896)
!16902 = !DILocation(line: 0, scope: !16896)
!16903 = !DILocation(line: 70, column: 26, scope: !16896)
!16904 = !DILocation(line: 73, column: 10, scope: !16905)
!16905 = distinct !DILexicalBlock(scope: !16896, file: !2694, line: 73, column: 6)
!16906 = !DILocation(line: 73, column: 19, scope: !16905)
!16907 = !DILocation(line: 74, column: 21, scope: !16905)
!16908 = !DILocation(line: 74, column: 30, scope: !16905)
!16909 = !DILocation(line: 74, column: 28, scope: !16905)
!16910 = !DILocation(line: 74, column: 45, scope: !16905)
!16911 = !DILocation(line: 73, column: 6, scope: !16896)
!16912 = !DILocation(line: 77, column: 9, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16905, file: !2694, line: 76, column: 9)
!16914 = !DILocation(line: 0, scope: !16905)
!16915 = !DILocation(line: 81, column: 20, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16896, file: !2694, line: 81, column: 6)
!16917 = !DILocation(line: 81, column: 6, scope: !16916)
!16918 = !DILocation(line: 81, column: 32, scope: !16916)
!16919 = !DILocation(line: 85, column: 2, scope: !16896)
!16920 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !16921, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16923)
!16921 = !DISubroutineType(types: !16922)
!16922 = !{!16844, !16881, !16844}
!16923 = !{!16924, !16925}
!16924 = !DILocalVariable(name: "list", arg: 1, scope: !16920, file: !367, line: 341, type: !16881)
!16925 = !DILocalVariable(name: "node", arg: 2, scope: !16920, file: !367, line: 342, type: !16844)
!16926 = !DILocation(line: 0, scope: !16920)
!16927 = !DILocation(line: 344, column: 15, scope: !16920)
!16928 = !DILocation(line: 344, column: 9, scope: !16920)
!16929 = !DILocation(line: 344, column: 26, scope: !16920)
!16930 = !DILocation(line: 344, column: 2, scope: !16920)
!16931 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !16921, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16932)
!16932 = !{!16933, !16934}
!16933 = !DILocalVariable(name: "list", arg: 1, scope: !16931, file: !367, line: 325, type: !16881)
!16934 = !DILocalVariable(name: "node", arg: 2, scope: !16931, file: !367, line: 326, type: !16844)
!16935 = !DILocation(line: 0, scope: !16931)
!16936 = !DILocation(line: 328, column: 24, scope: !16931)
!16937 = !DILocation(line: 328, column: 15, scope: !16931)
!16938 = !DILocation(line: 328, column: 9, scope: !16931)
!16939 = !DILocation(line: 328, column: 45, scope: !16931)
!16940 = !DILocation(line: 328, column: 2, scope: !16931)
!16941 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !16942, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16944)
!16942 = !DISubroutineType(types: !16943)
!16943 = !{!16844, !16881}
!16944 = !{!16945}
!16945 = !DILocalVariable(name: "list", arg: 1, scope: !16941, file: !367, line: 294, type: !16881)
!16946 = !DILocation(line: 0, scope: !16941)
!16947 = !DILocation(line: 296, column: 9, scope: !16941)
!16948 = !DILocation(line: 296, column: 2, scope: !16941)
!16949 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !16950, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16952)
!16950 = !DISubroutineType(types: !16951)
!16951 = !{!422, !16881}
!16952 = !{!16953}
!16953 = !DILocalVariable(name: "list", arg: 1, scope: !16949, file: !367, line: 266, type: !16881)
!16954 = !DILocation(line: 0, scope: !16949)
!16955 = !DILocation(line: 268, column: 15, scope: !16949)
!16956 = !DILocation(line: 268, column: 20, scope: !16949)
!16957 = !DILocation(line: 268, column: 2, scope: !16949)
!16958 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2694, file: !2694, line: 150, type: !16959, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16961)
!16959 = !DISubroutineType(types: !16960)
!16960 = !{!108, !2667}
!16961 = !{!16962, !16963, !16964, !16966}
!16962 = !DILocalVariable(name: "to", arg: 1, scope: !16958, file: !2694, line: 150, type: !2667)
!16963 = !DILocalVariable(name: "ret", scope: !16958, file: !2694, line: 152, type: !108)
!16964 = !DILocalVariable(name: "__i", scope: !16965, file: !2694, line: 154, type: !16727)
!16965 = distinct !DILexicalBlock(scope: !16958, file: !2694, line: 154, column: 2)
!16966 = !DILocalVariable(name: "__key", scope: !16965, file: !2694, line: 154, type: !16727)
!16967 = !DILocation(line: 0, scope: !16958)
!16968 = !DILocation(line: 0, scope: !16965)
!16969 = !DILocation(line: 0, scope: !16749, inlinedAt: !16970)
!16970 = distinct !DILocation(line: 154, column: 2, scope: !16965)
!16971 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !16972)
!16972 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !16970)
!16973 = !DILocation(line: 0, scope: !16758, inlinedAt: !16972)
!16974 = !DILocation(line: 155, column: 7, scope: !16975)
!16975 = distinct !DILexicalBlock(scope: !16976, file: !2694, line: 155, column: 7)
!16976 = distinct !DILexicalBlock(scope: !16977, file: !2694, line: 154, column: 24)
!16977 = distinct !DILexicalBlock(scope: !16965, file: !2694, line: 154, column: 2)
!16978 = !DILocation(line: 155, column: 7, scope: !16976)
!16979 = !DILocation(line: 156, column: 4, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16975, file: !2694, line: 155, column: 39)
!16981 = !DILocation(line: 158, column: 3, scope: !16980)
!16982 = !DILocation(line: 0, scope: !16817, inlinedAt: !16983)
!16983 = distinct !DILocation(line: 154, column: 2, scope: !16977)
!16984 = !DILocation(line: 0, scope: !16825, inlinedAt: !16985)
!16985 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !16983)
!16986 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !16985)
!16987 = !DILocation(line: 161, column: 2, scope: !16958)
!16988 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !16989, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !16993)
!16989 = !DISubroutineType(types: !16990)
!16990 = !{!422, !16991}
!16991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16992, size: 32)
!16992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2671)
!16993 = !{!16994}
!16994 = !DILocalVariable(name: "node", arg: 1, scope: !16988, file: !367, line: 225, type: !16991)
!16995 = !DILocation(line: 0, scope: !16988)
!16996 = !DILocation(line: 227, column: 15, scope: !16988)
!16997 = !DILocation(line: 227, column: 20, scope: !16988)
!16998 = !DILocation(line: 227, column: 2, scope: !16988)
!16999 = distinct !DISubprogram(name: "remove_timeout", scope: !2694, file: !2694, line: 53, type: !2688, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17000)
!17000 = !{!17001}
!17001 = !DILocalVariable(name: "t", arg: 1, scope: !16999, file: !2694, line: 53, type: !2667)
!17002 = !DILocation(line: 0, scope: !16999)
!17003 = !DILocation(line: 55, column: 6, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16999, file: !2694, line: 55, column: 6)
!17005 = !DILocation(line: 55, column: 14, scope: !17004)
!17006 = !DILocation(line: 55, column: 6, scope: !16999)
!17007 = !DILocation(line: 56, column: 25, scope: !17008)
!17008 = distinct !DILexicalBlock(scope: !17004, file: !2694, line: 55, column: 23)
!17009 = !DILocation(line: 56, column: 12, scope: !17008)
!17010 = !DILocation(line: 56, column: 19, scope: !17008)
!17011 = !DILocation(line: 57, column: 2, scope: !17008)
!17012 = !DILocation(line: 59, column: 23, scope: !16999)
!17013 = !DILocation(line: 59, column: 2, scope: !16999)
!17014 = !DILocation(line: 60, column: 1, scope: !16999)
!17015 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !17016, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17018)
!17016 = !DISubroutineType(types: !17017)
!17017 = !{null, !16844}
!17018 = !{!17019, !17020, !17021}
!17019 = !DILocalVariable(name: "node", arg: 1, scope: !17015, file: !367, line: 496, type: !16844)
!17020 = !DILocalVariable(name: "prev", scope: !17015, file: !367, line: 498, type: !16856)
!17021 = !DILocalVariable(name: "next", scope: !17015, file: !367, line: 499, type: !16856)
!17022 = !DILocation(line: 0, scope: !17015)
!17023 = !DILocation(line: 498, column: 34, scope: !17015)
!17024 = !DILocation(line: 499, column: 34, scope: !17015)
!17025 = !DILocation(line: 501, column: 8, scope: !17015)
!17026 = !DILocation(line: 501, column: 13, scope: !17015)
!17027 = !DILocation(line: 502, column: 8, scope: !17015)
!17028 = !DILocation(line: 502, column: 13, scope: !17015)
!17029 = !DILocation(line: 503, column: 2, scope: !17015)
!17030 = !DILocation(line: 504, column: 1, scope: !17015)
!17031 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17016, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17032)
!17032 = !{!17033}
!17033 = !DILocalVariable(name: "node", arg: 1, scope: !17031, file: !367, line: 211, type: !16844)
!17034 = !DILocation(line: 0, scope: !17031)
!17035 = !DILocation(line: 213, column: 8, scope: !17031)
!17036 = !DILocation(line: 213, column: 13, scope: !17031)
!17037 = !DILocation(line: 214, column: 8, scope: !17031)
!17038 = !DILocation(line: 214, column: 13, scope: !17031)
!17039 = !DILocation(line: 215, column: 1, scope: !17031)
!17040 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2694, file: !2694, line: 183, type: !17041, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17045)
!17041 = !DISubroutineType(types: !17042)
!17042 = !{!109, !17043}
!17043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17044, size: 32)
!17044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2668)
!17045 = !{!17046, !17047, !17048, !17050}
!17046 = !DILocalVariable(name: "timeout", arg: 1, scope: !17040, file: !2694, line: 183, type: !17043)
!17047 = !DILocalVariable(name: "ticks", scope: !17040, file: !2694, line: 185, type: !109)
!17048 = !DILocalVariable(name: "__i", scope: !17049, file: !2694, line: 187, type: !16727)
!17049 = distinct !DILexicalBlock(scope: !17040, file: !2694, line: 187, column: 2)
!17050 = !DILocalVariable(name: "__key", scope: !17049, file: !2694, line: 187, type: !16727)
!17051 = !DILocation(line: 0, scope: !17040)
!17052 = !DILocation(line: 0, scope: !17049)
!17053 = !DILocation(line: 0, scope: !16749, inlinedAt: !17054)
!17054 = distinct !DILocation(line: 187, column: 2, scope: !17049)
!17055 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !17056)
!17056 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !17054)
!17057 = !DILocation(line: 0, scope: !16758, inlinedAt: !17056)
!17058 = !DILocation(line: 188, column: 11, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17060, file: !2694, line: 187, column: 24)
!17060 = distinct !DILexicalBlock(scope: !17049, file: !2694, line: 187, column: 2)
!17061 = !DILocation(line: 0, scope: !16817, inlinedAt: !17062)
!17062 = distinct !DILocation(line: 187, column: 2, scope: !17060)
!17063 = !DILocation(line: 0, scope: !16825, inlinedAt: !17064)
!17064 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !17062)
!17065 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !17064)
!17066 = !DILocation(line: 191, column: 2, scope: !17040)
!17067 = distinct !DISubprogram(name: "timeout_rem", scope: !2694, file: !2694, line: 165, type: !17041, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17068)
!17068 = !{!17069, !17070, !17071}
!17069 = !DILocalVariable(name: "timeout", arg: 1, scope: !17067, file: !2694, line: 165, type: !17043)
!17070 = !DILocalVariable(name: "ticks", scope: !17067, file: !2694, line: 167, type: !109)
!17071 = !DILocalVariable(name: "t", scope: !17072, file: !2694, line: 173, type: !2667)
!17072 = distinct !DILexicalBlock(scope: !17067, file: !2694, line: 173, column: 2)
!17073 = !DILocation(line: 0, scope: !17067)
!17074 = !DILocation(line: 169, column: 6, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17067, file: !2694, line: 169, column: 6)
!17076 = !DILocation(line: 169, column: 6, scope: !17067)
!17077 = !DILocation(line: 173, column: 28, scope: !17072)
!17078 = !DILocation(line: 0, scope: !17072)
!17079 = !DILocation(line: 173, column: 39, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17072, file: !2694, line: 173, column: 2)
!17081 = !DILocation(line: 173, column: 2, scope: !17072)
!17082 = !DILocation(line: 174, column: 15, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17080, file: !2694, line: 173, column: 61)
!17084 = !DILocation(line: 174, column: 9, scope: !17083)
!17085 = !DILocation(line: 175, column: 15, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !17083, file: !2694, line: 175, column: 7)
!17087 = !DILocation(line: 175, column: 7, scope: !17083)
!17088 = !DILocation(line: 173, column: 52, scope: !17080)
!17089 = distinct !{!17089, !17081, !17090}
!17090 = !DILocation(line: 178, column: 2, scope: !17072)
!17091 = !DILocation(line: 180, column: 17, scope: !17067)
!17092 = !DILocation(line: 180, column: 15, scope: !17067)
!17093 = !DILocation(line: 180, column: 2, scope: !17067)
!17094 = !DILocation(line: 181, column: 1, scope: !17067)
!17095 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14410, file: !14410, line: 35, type: !17096, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17098)
!17096 = !DISubroutineType(types: !17097)
!17097 = !{!422, !17043}
!17098 = !{!17099}
!17099 = !DILocalVariable(name: "to", arg: 1, scope: !17095, file: !14410, line: 35, type: !17043)
!17100 = !DILocation(line: 0, scope: !17095)
!17101 = !DILocation(line: 37, column: 35, scope: !17095)
!17102 = !DILocation(line: 37, column: 10, scope: !17095)
!17103 = !DILocation(line: 37, column: 9, scope: !17095)
!17104 = !DILocation(line: 37, column: 2, scope: !17095)
!17105 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2694, file: !2694, line: 194, type: !17041, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17106)
!17106 = !{!17107, !17108, !17109, !17111}
!17107 = !DILocalVariable(name: "timeout", arg: 1, scope: !17105, file: !2694, line: 194, type: !17043)
!17108 = !DILocalVariable(name: "ticks", scope: !17105, file: !2694, line: 196, type: !109)
!17109 = !DILocalVariable(name: "__i", scope: !17110, file: !2694, line: 198, type: !16727)
!17110 = distinct !DILexicalBlock(scope: !17105, file: !2694, line: 198, column: 2)
!17111 = !DILocalVariable(name: "__key", scope: !17110, file: !2694, line: 198, type: !16727)
!17112 = !DILocation(line: 0, scope: !17105)
!17113 = !DILocation(line: 0, scope: !17110)
!17114 = !DILocation(line: 0, scope: !16749, inlinedAt: !17115)
!17115 = distinct !DILocation(line: 198, column: 2, scope: !17110)
!17116 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !17117)
!17117 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !17115)
!17118 = !DILocation(line: 0, scope: !16758, inlinedAt: !17117)
!17119 = !DILocation(line: 199, column: 11, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17121, file: !2694, line: 198, column: 24)
!17121 = distinct !DILexicalBlock(scope: !17110, file: !2694, line: 198, column: 2)
!17122 = !DILocation(line: 199, column: 23, scope: !17120)
!17123 = !DILocation(line: 0, scope: !16817, inlinedAt: !17124)
!17124 = distinct !DILocation(line: 198, column: 2, scope: !17121)
!17125 = !DILocation(line: 0, scope: !16825, inlinedAt: !17126)
!17126 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !17124)
!17127 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !17126)
!17128 = !DILocation(line: 199, column: 21, scope: !17120)
!17129 = !DILocation(line: 202, column: 2, scope: !17105)
!17130 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2694, file: !2694, line: 205, type: !16833, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17131)
!17131 = !{!17132, !17133, !17135}
!17132 = !DILocalVariable(name: "ret", scope: !17130, file: !2694, line: 207, type: !220)
!17133 = !DILocalVariable(name: "__i", scope: !17134, file: !2694, line: 209, type: !16727)
!17134 = distinct !DILexicalBlock(scope: !17130, file: !2694, line: 209, column: 2)
!17135 = !DILocalVariable(name: "__key", scope: !17134, file: !2694, line: 209, type: !16727)
!17136 = !DILocation(line: 0, scope: !17130)
!17137 = !DILocation(line: 0, scope: !17134)
!17138 = !DILocation(line: 0, scope: !16749, inlinedAt: !17139)
!17139 = distinct !DILocation(line: 209, column: 2, scope: !17134)
!17140 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !17141)
!17141 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !17139)
!17142 = !DILocation(line: 0, scope: !16758, inlinedAt: !17141)
!17143 = !DILocation(line: 210, column: 9, scope: !17144)
!17144 = distinct !DILexicalBlock(scope: !17145, file: !2694, line: 209, column: 24)
!17145 = distinct !DILexicalBlock(scope: !17134, file: !2694, line: 209, column: 2)
!17146 = !DILocation(line: 0, scope: !16817, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 209, column: 2, scope: !17145)
!17148 = !DILocation(line: 0, scope: !16825, inlinedAt: !17149)
!17149 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !17147)
!17150 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !17149)
!17151 = !DILocation(line: 212, column: 2, scope: !17130)
!17152 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2694, file: !2694, line: 215, type: !11984, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17153)
!17153 = !{!17154, !17155, !17156, !17158, !17159, !17162, !17163}
!17154 = !DILocalVariable(name: "ticks", arg: 1, scope: !17152, file: !2694, line: 215, type: !220)
!17155 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17152, file: !2694, line: 215, type: !422)
!17156 = !DILocalVariable(name: "__i", scope: !17157, file: !2694, line: 217, type: !16727)
!17157 = distinct !DILexicalBlock(scope: !17152, file: !2694, line: 217, column: 2)
!17158 = !DILocalVariable(name: "__key", scope: !17157, file: !2694, line: 217, type: !16727)
!17159 = !DILocalVariable(name: "next_to", scope: !17160, file: !2694, line: 218, type: !108)
!17160 = distinct !DILexicalBlock(scope: !17161, file: !2694, line: 217, column: 24)
!17161 = distinct !DILexicalBlock(scope: !17157, file: !2694, line: 217, column: 2)
!17162 = !DILocalVariable(name: "sooner", scope: !17160, file: !2694, line: 219, type: !422)
!17163 = !DILocalVariable(name: "imminent", scope: !17160, file: !2694, line: 221, type: !422)
!17164 = !DILocation(line: 0, scope: !17152)
!17165 = !DILocation(line: 0, scope: !17157)
!17166 = !DILocation(line: 0, scope: !16749, inlinedAt: !17167)
!17167 = distinct !DILocation(line: 217, column: 2, scope: !17157)
!17168 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !17169)
!17169 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !17167)
!17170 = !DILocation(line: 0, scope: !16758, inlinedAt: !17169)
!17171 = !DILocation(line: 218, column: 17, scope: !17160)
!17172 = !DILocation(line: 0, scope: !17160)
!17173 = !DILocation(line: 221, column: 27, scope: !17160)
!17174 = !DILocation(line: 233, column: 17, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17160, file: !2694, line: 233, column: 7)
!17176 = !DILocation(line: 234, column: 26, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17175, file: !2694, line: 233, column: 56)
!17178 = !DILocation(line: 234, column: 4, scope: !17177)
!17179 = !DILocation(line: 235, column: 3, scope: !17177)
!17180 = !DILocation(line: 0, scope: !16817, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 217, column: 2, scope: !17161)
!17182 = !DILocation(line: 0, scope: !16825, inlinedAt: !17183)
!17183 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !17181)
!17184 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !17183)
!17185 = !DILocation(line: 237, column: 1, scope: !17152)
!17186 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2694, file: !2694, line: 239, type: !17187, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17189)
!17187 = !DISubroutineType(types: !17188)
!17188 = !{null, !220}
!17189 = !{!17190, !17191, !17192, !17194}
!17190 = !DILocalVariable(name: "ticks", arg: 1, scope: !17186, file: !2694, line: 239, type: !220)
!17191 = !DILocalVariable(name: "key", scope: !17186, file: !2694, line: 245, type: !16727)
!17192 = !DILocalVariable(name: "t", scope: !17193, file: !2694, line: 262, type: !2667)
!17193 = distinct !DILexicalBlock(scope: !17186, file: !2694, line: 261, column: 67)
!17194 = !DILocalVariable(name: "dt", scope: !17193, file: !2694, line: 263, type: !108)
!17195 = !DILocation(line: 0, scope: !17186)
!17196 = !DILocation(line: 242, column: 2, scope: !17186)
!17197 = !DILocation(line: 0, scope: !16749, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 245, column: 25, scope: !17186)
!17199 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !17198)
!17201 = !DILocation(line: 0, scope: !16758, inlinedAt: !17200)
!17202 = !DILocation(line: 261, column: 9, scope: !17186)
!17203 = !DILocation(line: 261, column: 17, scope: !17186)
!17204 = !DILocation(line: 261, column: 25, scope: !17186)
!17205 = !DILocation(line: 261, column: 37, scope: !17186)
!17206 = !DILocation(line: 261, column: 47, scope: !17186)
!17207 = !DILocation(line: 261, column: 44, scope: !17186)
!17208 = !DILocation(line: 261, column: 2, scope: !17186)
!17209 = !DILocation(line: 0, scope: !17193)
!17210 = !DILocation(line: 263, column: 12, scope: !17193)
!17211 = !DILocation(line: 265, column: 16, scope: !17193)
!17212 = !DILocation(line: 265, column: 13, scope: !17193)
!17213 = !DILocation(line: 266, column: 13, scope: !17193)
!17214 = !DILocation(line: 267, column: 3, scope: !17193)
!17215 = !DILocation(line: 0, scope: !16817, inlinedAt: !17216)
!17216 = distinct !DILocation(line: 269, column: 3, scope: !17193)
!17217 = !DILocation(line: 0, scope: !16825, inlinedAt: !17218)
!17218 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !17216)
!17219 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !17218)
!17220 = !DILocation(line: 270, column: 6, scope: !17193)
!17221 = !DILocation(line: 270, column: 3, scope: !17193)
!17222 = !DILocation(line: 0, scope: !16749, inlinedAt: !17223)
!17223 = distinct !DILocation(line: 271, column: 9, scope: !17193)
!17224 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !17225)
!17225 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !17223)
!17226 = !DILocation(line: 0, scope: !16758, inlinedAt: !17225)
!17227 = !DILocation(line: 272, column: 22, scope: !17193)
!17228 = distinct !{!17228, !17208, !17229}
!17229 = !DILocation(line: 273, column: 2, scope: !17186)
!17230 = !DILocation(line: 276, column: 19, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17232, file: !2694, line: 275, column: 23)
!17232 = distinct !DILexicalBlock(scope: !17186, file: !2694, line: 275, column: 6)
!17233 = !DILocation(line: 277, column: 2, scope: !17231)
!17234 = !DILocation(line: 279, column: 15, scope: !17186)
!17235 = !DILocation(line: 279, column: 12, scope: !17186)
!17236 = !DILocation(line: 280, column: 21, scope: !17186)
!17237 = !DILocation(line: 282, column: 24, scope: !17186)
!17238 = !DILocation(line: 282, column: 2, scope: !17186)
!17239 = !DILocation(line: 0, scope: !16817, inlinedAt: !17240)
!17240 = distinct !DILocation(line: 284, column: 2, scope: !17186)
!17241 = !DILocation(line: 0, scope: !16825, inlinedAt: !17242)
!17242 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !17240)
!17243 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !17242)
!17244 = !DILocation(line: 285, column: 1, scope: !17186)
!17245 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2694, file: !2694, line: 287, type: !17246, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17248)
!17246 = !DISubroutineType(types: !17247)
!17247 = !{!111}
!17248 = !{!17249, !17250, !17252}
!17249 = !DILocalVariable(name: "t", scope: !17245, file: !2694, line: 289, type: !114)
!17250 = !DILocalVariable(name: "__i", scope: !17251, file: !2694, line: 291, type: !16727)
!17251 = distinct !DILexicalBlock(scope: !17245, file: !2694, line: 291, column: 2)
!17252 = !DILocalVariable(name: "__key", scope: !17251, file: !2694, line: 291, type: !16727)
!17253 = !DILocation(line: 0, scope: !17245)
!17254 = !DILocation(line: 0, scope: !17251)
!17255 = !DILocation(line: 0, scope: !16749, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 291, column: 2, scope: !17251)
!17257 = !DILocation(line: 55, column: 2, scope: !16758, inlinedAt: !17258)
!17258 = distinct !DILocation(line: 145, column: 10, scope: !16749, inlinedAt: !17256)
!17259 = !DILocation(line: 0, scope: !16758, inlinedAt: !17258)
!17260 = !DILocation(line: 292, column: 7, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17262, file: !2694, line: 291, column: 24)
!17262 = distinct !DILexicalBlock(scope: !17251, file: !2694, line: 291, column: 2)
!17263 = !DILocation(line: 292, column: 19, scope: !17261)
!17264 = !DILocation(line: 0, scope: !16817, inlinedAt: !17265)
!17265 = distinct !DILocation(line: 291, column: 2, scope: !17262)
!17266 = !DILocation(line: 0, scope: !16825, inlinedAt: !17267)
!17267 = distinct !DILocation(line: 215, column: 2, scope: !16817, inlinedAt: !17265)
!17268 = !DILocation(line: 95, column: 2, scope: !16825, inlinedAt: !17267)
!17269 = !DILocation(line: 292, column: 17, scope: !17261)
!17270 = !DILocation(line: 294, column: 2, scope: !17245)
!17271 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2694, file: !2694, line: 297, type: !7145, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !437)
!17272 = !DILocation(line: 300, column: 19, scope: !17271)
!17273 = !DILocation(line: 300, column: 9, scope: !17271)
!17274 = !DILocation(line: 300, column: 2, scope: !17271)
!17275 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2694, file: !2694, line: 306, type: !17246, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !437)
!17276 = !DILocation(line: 308, column: 9, scope: !17275)
!17277 = !DILocation(line: 308, column: 2, scope: !17275)
!17278 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2694, file: !2694, line: 319, type: !7155, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17279)
!17279 = !{!17280, !17281, !17282, !17283}
!17280 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17278, file: !2694, line: 319, type: !113)
!17281 = !DILocalVariable(name: "start_cycles", scope: !17278, file: !2694, line: 328, type: !113)
!17282 = !DILocalVariable(name: "cycles_to_wait", scope: !17278, file: !2694, line: 331, type: !113)
!17283 = !DILocalVariable(name: "current_cycles", scope: !17284, file: !2694, line: 338, type: !113)
!17284 = distinct !DILexicalBlock(scope: !17285, file: !2694, line: 337, column: 11)
!17285 = distinct !DILexicalBlock(scope: !17286, file: !2694, line: 337, column: 2)
!17286 = distinct !DILexicalBlock(scope: !17278, file: !2694, line: 337, column: 2)
!17287 = !DILocation(line: 0, scope: !17278)
!17288 = !DILocation(line: 322, column: 19, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17278, file: !2694, line: 322, column: 6)
!17290 = !DILocation(line: 322, column: 6, scope: !17278)
!17291 = !DILocation(line: 328, column: 26, scope: !17278)
!17292 = !DILocation(line: 333, column: 43, scope: !17278)
!17293 = !DILocation(line: 337, column: 2, scope: !17278)
!17294 = !DILocation(line: 338, column: 29, scope: !17284)
!17295 = !DILocation(line: 0, scope: !17284)
!17296 = !DILocation(line: 341, column: 23, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17284, file: !2694, line: 341, column: 7)
!17298 = !DILocation(line: 341, column: 39, scope: !17297)
!17299 = !DILocation(line: 349, column: 1, scope: !17278)
!17300 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !359, file: !359, line: 1675, type: !7145, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !437)
!17301 = !DILocation(line: 1677, column: 9, scope: !17300)
!17302 = !DILocation(line: 1677, column: 2, scope: !17300)
!17303 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17304, file: !17304, line: 24, type: !7145, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !437)
!17304 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17305 = !DILocation(line: 26, column: 9, scope: !17303)
!17306 = !DILocation(line: 26, column: 2, scope: !17303)
!17307 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2694, file: !2694, line: 364, type: !17308, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !17310)
!17308 = !DISubroutineType(types: !17309)
!17309 = !{!114, !16717}
!17310 = !{!17311, !17312}
!17311 = !DILocalVariable(name: "timeout", arg: 1, scope: !17307, file: !2694, line: 364, type: !16717)
!17312 = !DILocalVariable(name: "dt", scope: !17307, file: !2694, line: 366, type: !109)
!17313 = !DILocation(line: 0, scope: !17307)
!17314 = !DILocation(line: 368, column: 6, scope: !17307)
!17315 = !DILocation(line: 371, column: 10, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17317, file: !2694, line: 370, column: 47)
!17317 = distinct !DILexicalBlock(scope: !17318, file: !2694, line: 370, column: 13)
!17318 = distinct !DILexicalBlock(scope: !17307, file: !2694, line: 368, column: 6)
!17319 = !DILocation(line: 371, column: 3, scope: !17316)
!17320 = !DILocation(line: 376, column: 58, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17322, file: !2694, line: 376, column: 7)
!17322 = distinct !DILexicalBlock(scope: !17317, file: !2694, line: 372, column: 9)
!17323 = !DILocation(line: 376, column: 7, scope: !17322)
!17324 = !DILocation(line: 376, column: 43, scope: !17321)
!17325 = !DILocation(line: 377, column: 4, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17321, file: !2694, line: 376, column: 64)
!17327 = !DILocation(line: 379, column: 10, scope: !17322)
!17328 = !DILocation(line: 379, column: 33, scope: !17322)
!17329 = !DILocation(line: 379, column: 31, scope: !17322)
!17330 = !DILocation(line: 379, column: 3, scope: !17322)
!17331 = !DILocation(line: 0, scope: !17318)
!17332 = !DILocation(line: 381, column: 1, scope: !17307)
!17333 = distinct !DISubprogram(name: "z_timer_expiration_handler", scope: !2825, file: !2825, line: 23, type: !2730, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17334)
!17334 = !{!17335, !17336, !17337, !17338, !17343}
!17335 = !DILocalVariable(name: "t", arg: 1, scope: !17333, file: !2825, line: 23, type: !2732)
!17336 = !DILocalVariable(name: "timer", scope: !17333, file: !2825, line: 25, type: !2706)
!17337 = !DILocalVariable(name: "thread", scope: !17333, file: !2825, line: 26, type: !2752)
!17338 = !DILocalVariable(name: "key", scope: !17333, file: !2825, line: 27, type: !17339)
!17339 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !17340)
!17340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !17341)
!17341 = !{!17342}
!17342 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17340, file: !436, line: 33, baseType: !108, size: 32)
!17343 = !DILocalVariable(name: "next", scope: !17344, file: !2825, line: 35, type: !2746)
!17344 = distinct !DILexicalBlock(scope: !17345, file: !2825, line: 34, column: 47)
!17345 = distinct !DILexicalBlock(scope: !17333, file: !2825, line: 33, column: 6)
!17346 = !DILocation(line: 0, scope: !17333)
!17347 = !DILocation(line: 25, column: 26, scope: !17333)
!17348 = !DILocalVariable(name: "l", arg: 1, scope: !17349, file: !436, line: 136, type: !17352)
!17349 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !17350, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17353)
!17350 = !DISubroutineType(types: !17351)
!17351 = !{!17339, !17352}
!17352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 32)
!17353 = !{!17348, !17354}
!17354 = !DILocalVariable(name: "k", scope: !17349, file: !436, line: 139, type: !17339)
!17355 = !DILocation(line: 0, scope: !17349, inlinedAt: !17356)
!17356 = distinct !DILocation(line: 27, column: 25, scope: !17333)
!17357 = !DILocation(line: 55, column: 2, scope: !17358, inlinedAt: !17362)
!17358 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4080, file: !4080, line: 42, type: !4081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17359)
!17359 = !{!17360, !17361}
!17360 = !DILocalVariable(name: "key", scope: !17358, file: !4080, line: 44, type: !32)
!17361 = !DILocalVariable(name: "tmp", scope: !17358, file: !4080, line: 53, type: !32)
!17362 = distinct !DILocation(line: 145, column: 10, scope: !17349, inlinedAt: !17356)
!17363 = !{i64 2261243}
!17364 = !DILocation(line: 0, scope: !17358, inlinedAt: !17362)
!17365 = !DILocation(line: 33, column: 7, scope: !17345)
!17366 = !DILocation(line: 33, column: 46, scope: !17345)
!17367 = !DILocation(line: 0, scope: !17344)
!17368 = !DILocation(line: 49, column: 10, scope: !17344)
!17369 = !DILocation(line: 52, column: 3, scope: !17344)
!17370 = !DILocation(line: 54, column: 2, scope: !17344)
!17371 = !DILocation(line: 57, column: 9, scope: !17333)
!17372 = !DILocation(line: 57, column: 16, scope: !17333)
!17373 = !DILocation(line: 60, column: 13, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17333, file: !2825, line: 60, column: 6)
!17375 = !DILocation(line: 60, column: 23, scope: !17374)
!17376 = !DILocation(line: 60, column: 6, scope: !17333)
!17377 = !DILocalVariable(name: "key", arg: 2, scope: !17378, file: !436, line: 190, type: !17339)
!17378 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !17379, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17381)
!17379 = !DISubroutineType(types: !17380)
!17380 = !{null, !17352, !17339}
!17381 = !{!17382, !17377}
!17382 = !DILocalVariable(name: "l", arg: 1, scope: !17378, file: !436, line: 189, type: !17352)
!17383 = !DILocation(line: 0, scope: !17378, inlinedAt: !17384)
!17384 = distinct !DILocation(line: 62, column: 3, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17374, file: !2825, line: 60, column: 32)
!17386 = !DILocalVariable(name: "key", arg: 1, scope: !17387, file: !4080, line: 84, type: !32)
!17387 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4080, file: !4080, line: 84, type: !4093, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17388)
!17388 = !{!17386}
!17389 = !DILocation(line: 0, scope: !17387, inlinedAt: !17390)
!17390 = distinct !DILocation(line: 215, column: 2, scope: !17378, inlinedAt: !17384)
!17391 = !DILocation(line: 95, column: 2, scope: !17387, inlinedAt: !17390)
!17392 = !{i64 2262060}
!17393 = !DILocation(line: 63, column: 10, scope: !17385)
!17394 = !DILocation(line: 63, column: 3, scope: !17385)
!17395 = !DILocation(line: 0, scope: !17349, inlinedAt: !17396)
!17396 = distinct !DILocation(line: 64, column: 9, scope: !17385)
!17397 = !DILocation(line: 55, column: 2, scope: !17358, inlinedAt: !17398)
!17398 = distinct !DILocation(line: 145, column: 10, scope: !17349, inlinedAt: !17396)
!17399 = !DILocation(line: 0, scope: !17358, inlinedAt: !17398)
!17400 = !DILocation(line: 65, column: 2, scope: !17385)
!17401 = !DILocation(line: 72, column: 32, scope: !17333)
!17402 = !DILocation(line: 72, column: 11, scope: !17333)
!17403 = !DILocation(line: 74, column: 13, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17333, file: !2825, line: 74, column: 6)
!17405 = !DILocation(line: 74, column: 6, scope: !17333)
!17406 = !DILocation(line: 0, scope: !17378, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 75, column: 3, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17404, file: !2825, line: 74, column: 22)
!17409 = !DILocation(line: 0, scope: !17387, inlinedAt: !17410)
!17410 = distinct !DILocation(line: 215, column: 2, scope: !17378, inlinedAt: !17407)
!17411 = !DILocation(line: 95, column: 2, scope: !17387, inlinedAt: !17410)
!17412 = !DILocation(line: 76, column: 3, scope: !17408)
!17413 = !DILocation(line: 79, column: 2, scope: !17333)
!17414 = !DILocalVariable(name: "thread", arg: 1, scope: !17415, file: !14036, line: 65, type: !2752)
!17415 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14036, file: !14036, line: 65, type: !17416, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17418)
!17416 = !DISubroutineType(types: !17417)
!17417 = !{null, !2752, !32}
!17418 = !{!17414, !17419}
!17419 = !DILocalVariable(name: "value", arg: 2, scope: !17415, file: !14036, line: 65, type: !32)
!17420 = !DILocation(line: 0, scope: !17415, inlinedAt: !17421)
!17421 = distinct !DILocation(line: 81, column: 2, scope: !17333)
!17422 = !DILocation(line: 67, column: 15, scope: !17415, inlinedAt: !17421)
!17423 = !DILocation(line: 67, column: 33, scope: !17415, inlinedAt: !17421)
!17424 = !DILocation(line: 0, scope: !17378, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 83, column: 2, scope: !17333)
!17426 = !DILocation(line: 0, scope: !17387, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 215, column: 2, scope: !17378, inlinedAt: !17425)
!17428 = !DILocation(line: 95, column: 2, scope: !17387, inlinedAt: !17427)
!17429 = !DILocation(line: 85, column: 2, scope: !17333)
!17430 = !DILocation(line: 86, column: 1, scope: !17333)
!17431 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3802, file: !3802, line: 564, type: !17246, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !437)
!17432 = !DILocation(line: 573, column: 2, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17431, file: !3802, line: 573, column: 2)
!17434 = !{i64 2154763518}
!17435 = !DILocation(line: 574, column: 9, scope: !17431)
!17436 = !DILocation(line: 574, column: 2, scope: !17431)
!17437 = distinct !DISubprogram(name: "z_waitq_head", scope: !14342, file: !14342, line: 52, type: !17438, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17440)
!17438 = !DISubroutineType(types: !17439)
!17439 = !{!2752, !2769}
!17440 = !{!17441}
!17441 = !DILocalVariable(name: "w", arg: 1, scope: !17437, file: !14342, line: 52, type: !2769)
!17442 = !DILocation(line: 0, scope: !17437)
!17443 = !DILocation(line: 54, column: 52, scope: !17437)
!17444 = !DILocation(line: 54, column: 28, scope: !17437)
!17445 = !DILocation(line: 54, column: 9, scope: !17437)
!17446 = !DILocation(line: 54, column: 2, scope: !17437)
!17447 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17448, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17451)
!17448 = !DISubroutineType(types: !17449)
!17449 = !{!2823, !17450}
!17450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 32)
!17451 = !{!17452}
!17452 = !DILocalVariable(name: "list", arg: 1, scope: !17447, file: !367, line: 294, type: !17450)
!17453 = !DILocation(line: 0, scope: !17447)
!17454 = !DILocation(line: 296, column: 9, scope: !17447)
!17455 = !DILocation(line: 296, column: 49, scope: !17447)
!17456 = !DILocation(line: 296, column: 2, scope: !17447)
!17457 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17458, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17460)
!17458 = !DISubroutineType(types: !17459)
!17459 = !{!422, !17450}
!17460 = !{!17461}
!17461 = !DILocalVariable(name: "list", arg: 1, scope: !17457, file: !367, line: 266, type: !17450)
!17462 = !DILocation(line: 0, scope: !17457)
!17463 = !DILocation(line: 268, column: 15, scope: !17457)
!17464 = !DILocation(line: 268, column: 20, scope: !17457)
!17465 = !DILocation(line: 268, column: 2, scope: !17457)
!17466 = distinct !DISubprogram(name: "k_timer_init", scope: !2825, file: !2825, line: 89, type: !17467, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17471)
!17467 = !DISubroutineType(types: !17468)
!17468 = !{null, !2706, !17469, !17470}
!17469 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_expiry_t", file: !359, line: 1381, baseType: !2741)
!17470 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_stop_t", file: !359, line: 1397, baseType: !2741)
!17471 = !{!17472, !17473, !17474}
!17472 = !DILocalVariable(name: "timer", arg: 1, scope: !17466, file: !2825, line: 89, type: !2706)
!17473 = !DILocalVariable(name: "expiry_fn", arg: 2, scope: !17466, file: !2825, line: 90, type: !17469)
!17474 = !DILocalVariable(name: "stop_fn", arg: 3, scope: !17466, file: !2825, line: 91, type: !17470)
!17475 = !DILocation(line: 0, scope: !17466)
!17476 = !DILocation(line: 93, column: 9, scope: !17466)
!17477 = !DILocation(line: 93, column: 19, scope: !17466)
!17478 = !DILocation(line: 94, column: 9, scope: !17466)
!17479 = !DILocation(line: 94, column: 17, scope: !17466)
!17480 = !DILocation(line: 95, column: 9, scope: !17466)
!17481 = !DILocation(line: 95, column: 16, scope: !17466)
!17482 = !DILocation(line: 98, column: 24, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17484, file: !2825, line: 97, column: 41)
!17484 = distinct !DILexicalBlock(scope: !17466, file: !2825, line: 97, column: 6)
!17485 = !DILocation(line: 98, column: 3, scope: !17483)
!17486 = !DILocation(line: 101, column: 25, scope: !17466)
!17487 = !DILocation(line: 101, column: 2, scope: !17466)
!17488 = !DILocation(line: 105, column: 9, scope: !17466)
!17489 = !DILocation(line: 105, column: 19, scope: !17466)
!17490 = !DILocation(line: 108, column: 1, scope: !17466)
!17491 = distinct !DISubprogram(name: "z_waitq_init", scope: !14342, file: !14342, line: 47, type: !17492, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17494)
!17492 = !DISubroutineType(types: !17493)
!17493 = !{null, !2769}
!17494 = !{!17495}
!17495 = !DILocalVariable(name: "w", arg: 1, scope: !17491, file: !14342, line: 47, type: !2769)
!17496 = !DILocation(line: 0, scope: !17491)
!17497 = !DILocation(line: 49, column: 21, scope: !17491)
!17498 = !DILocation(line: 49, column: 2, scope: !17491)
!17499 = !DILocation(line: 50, column: 1, scope: !17491)
!17500 = distinct !DISubprogram(name: "z_init_timeout", scope: !14410, file: !14410, line: 25, type: !2730, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17501)
!17501 = !{!17502}
!17502 = !DILocalVariable(name: "to", arg: 1, scope: !17500, file: !14410, line: 25, type: !2732)
!17503 = !DILocation(line: 0, scope: !17500)
!17504 = !DILocation(line: 27, column: 22, scope: !17500)
!17505 = !DILocation(line: 27, column: 2, scope: !17500)
!17506 = !DILocation(line: 28, column: 1, scope: !17500)
!17507 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17508, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17510)
!17508 = !DISubroutineType(types: !17509)
!17509 = !{null, !2823}
!17510 = !{!17511}
!17511 = !DILocalVariable(name: "node", arg: 1, scope: !17507, file: !367, line: 211, type: !2823)
!17512 = !DILocation(line: 0, scope: !17507)
!17513 = !DILocation(line: 213, column: 8, scope: !17507)
!17514 = !DILocation(line: 213, column: 13, scope: !17507)
!17515 = !DILocation(line: 214, column: 8, scope: !17507)
!17516 = !DILocation(line: 214, column: 13, scope: !17507)
!17517 = !DILocation(line: 215, column: 1, scope: !17507)
!17518 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !17519, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17521)
!17519 = !DISubroutineType(types: !17520)
!17520 = !{null, !17450}
!17521 = !{!17522}
!17522 = !DILocalVariable(name: "list", arg: 1, scope: !17518, file: !367, line: 197, type: !17450)
!17523 = !DILocation(line: 0, scope: !17518)
!17524 = !DILocation(line: 199, column: 8, scope: !17518)
!17525 = !DILocation(line: 199, column: 13, scope: !17518)
!17526 = !DILocation(line: 200, column: 8, scope: !17518)
!17527 = !DILocation(line: 200, column: 13, scope: !17518)
!17528 = !DILocation(line: 201, column: 1, scope: !17518)
!17529 = distinct !DISubprogram(name: "z_impl_k_timer_start", scope: !2825, file: !2825, line: 111, type: !17530, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17532)
!17530 = !DISubroutineType(types: !17531)
!17531 = !{null, !2706, !2746, !2746}
!17532 = !{!17533, !17534, !17535}
!17533 = !DILocalVariable(name: "timer", arg: 1, scope: !17529, file: !2825, line: 111, type: !2706)
!17534 = !DILocalVariable(name: "duration", arg: 2, scope: !17529, file: !2825, line: 111, type: !2746)
!17535 = !DILocalVariable(name: "period", arg: 3, scope: !17529, file: !2825, line: 112, type: !2746)
!17536 = !DILocation(line: 0, scope: !17529)
!17537 = !DILocation(line: 116, column: 6, scope: !17538)
!17538 = distinct !DILexicalBlock(scope: !17529, file: !2825, line: 116, column: 6)
!17539 = !DILocation(line: 116, column: 6, scope: !17529)
!17540 = !DILocation(line: 133, column: 39, scope: !17541)
!17541 = distinct !DILexicalBlock(scope: !17529, file: !2825, line: 133, column: 6)
!17542 = !DILocation(line: 137, column: 33, scope: !17543)
!17543 = distinct !DILexicalBlock(scope: !17529, file: !2825, line: 137, column: 6)
!17544 = !DILocation(line: 137, column: 6, scope: !17529)
!17545 = !DILocation(line: 141, column: 32, scope: !17529)
!17546 = !DILocation(line: 141, column: 8, scope: !17529)
!17547 = !DILocation(line: 142, column: 18, scope: !17529)
!17548 = !DILocation(line: 143, column: 9, scope: !17529)
!17549 = !DILocation(line: 143, column: 16, scope: !17529)
!17550 = !DILocation(line: 145, column: 2, scope: !17529)
!17551 = !DILocation(line: 147, column: 1, scope: !17529)
!17552 = distinct !DISubprogram(name: "z_impl_k_timer_stop", scope: !2825, file: !2825, line: 160, type: !2742, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17553)
!17553 = !{!17554, !17555, !17556}
!17554 = !DILocalVariable(name: "timer", arg: 1, scope: !17552, file: !2825, line: 160, type: !2706)
!17555 = !DILocalVariable(name: "inactive", scope: !17552, file: !2825, line: 164, type: !422)
!17556 = !DILocalVariable(name: "pending_thread", scope: !17557, file: !2825, line: 175, type: !2752)
!17557 = distinct !DILexicalBlock(scope: !17558, file: !2825, line: 174, column: 41)
!17558 = distinct !DILexicalBlock(scope: !17552, file: !2825, line: 174, column: 6)
!17559 = !DILocation(line: 0, scope: !17552)
!17560 = !DILocation(line: 164, column: 43, scope: !17552)
!17561 = !DILocation(line: 164, column: 19, scope: !17552)
!17562 = !DILocation(line: 164, column: 52, scope: !17552)
!17563 = !DILocation(line: 166, column: 6, scope: !17552)
!17564 = !DILocation(line: 170, column: 13, scope: !17565)
!17565 = distinct !DILexicalBlock(scope: !17552, file: !2825, line: 170, column: 6)
!17566 = !DILocation(line: 170, column: 21, scope: !17565)
!17567 = !DILocation(line: 170, column: 6, scope: !17552)
!17568 = !DILocation(line: 171, column: 3, scope: !17569)
!17569 = distinct !DILexicalBlock(scope: !17565, file: !2825, line: 170, column: 30)
!17570 = !DILocation(line: 172, column: 2, scope: !17569)
!17571 = !DILocation(line: 175, column: 66, scope: !17557)
!17572 = !DILocation(line: 175, column: 37, scope: !17557)
!17573 = !DILocation(line: 0, scope: !17557)
!17574 = !DILocation(line: 177, column: 22, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17557, file: !2825, line: 177, column: 7)
!17576 = !DILocation(line: 177, column: 7, scope: !17557)
!17577 = !DILocation(line: 178, column: 4, scope: !17578)
!17578 = distinct !DILexicalBlock(scope: !17575, file: !2825, line: 177, column: 31)
!17579 = !DILocation(line: 179, column: 4, scope: !17578)
!17580 = !DILocation(line: 180, column: 3, scope: !17578)
!17581 = !DILocation(line: 182, column: 1, scope: !17552)
!17582 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14016, file: !14016, line: 73, type: !3406, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !437)
!17583 = !DILocation(line: 55, column: 2, scope: !17358, inlinedAt: !17584)
!17584 = distinct !DILocation(line: 75, column: 30, scope: !17582)
!17585 = !DILocation(line: 0, scope: !17358, inlinedAt: !17584)
!17586 = !DILocation(line: 75, column: 9, scope: !17582)
!17587 = !DILocation(line: 76, column: 1, scope: !17582)
!17588 = distinct !DISubprogram(name: "z_impl_k_timer_status_get", scope: !2825, file: !2825, line: 193, type: !17589, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17591)
!17589 = !DISubroutineType(types: !17590)
!17590 = !{!113, !2706}
!17591 = !{!17592, !17593, !17594}
!17592 = !DILocalVariable(name: "timer", arg: 1, scope: !17588, file: !2825, line: 193, type: !2706)
!17593 = !DILocalVariable(name: "key", scope: !17588, file: !2825, line: 195, type: !17339)
!17594 = !DILocalVariable(name: "result", scope: !17588, file: !2825, line: 196, type: !113)
!17595 = !DILocation(line: 0, scope: !17588)
!17596 = !DILocation(line: 0, scope: !17349, inlinedAt: !17597)
!17597 = distinct !DILocation(line: 195, column: 25, scope: !17588)
!17598 = !DILocation(line: 55, column: 2, scope: !17358, inlinedAt: !17599)
!17599 = distinct !DILocation(line: 145, column: 10, scope: !17349, inlinedAt: !17597)
!17600 = !DILocation(line: 0, scope: !17358, inlinedAt: !17599)
!17601 = !DILocation(line: 196, column: 27, scope: !17588)
!17602 = !DILocation(line: 198, column: 16, scope: !17588)
!17603 = !DILocation(line: 0, scope: !17378, inlinedAt: !17604)
!17604 = distinct !DILocation(line: 199, column: 2, scope: !17588)
!17605 = !DILocation(line: 0, scope: !17387, inlinedAt: !17606)
!17606 = distinct !DILocation(line: 215, column: 2, scope: !17378, inlinedAt: !17604)
!17607 = !DILocation(line: 95, column: 2, scope: !17387, inlinedAt: !17606)
!17608 = !DILocation(line: 201, column: 2, scope: !17588)
!17609 = distinct !DISubprogram(name: "z_impl_k_timer_status_sync", scope: !2825, file: !2825, line: 213, type: !17589, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17610)
!17610 = !{!17611, !17612, !17613}
!17611 = !DILocalVariable(name: "timer", arg: 1, scope: !17609, file: !2825, line: 213, type: !2706)
!17612 = !DILocalVariable(name: "key", scope: !17609, file: !2825, line: 241, type: !17339)
!17613 = !DILocalVariable(name: "result", scope: !17609, file: !2825, line: 242, type: !113)
!17614 = !DILocation(line: 0, scope: !17609)
!17615 = !DILocation(line: 0, scope: !17349, inlinedAt: !17616)
!17616 = distinct !DILocation(line: 241, column: 25, scope: !17609)
!17617 = !DILocation(line: 55, column: 2, scope: !17358, inlinedAt: !17618)
!17618 = distinct !DILocation(line: 145, column: 10, scope: !17349, inlinedAt: !17616)
!17619 = !DILocation(line: 0, scope: !17358, inlinedAt: !17618)
!17620 = !DILocation(line: 242, column: 27, scope: !17609)
!17621 = !DILocation(line: 244, column: 13, scope: !17622)
!17622 = distinct !DILexicalBlock(scope: !17609, file: !2825, line: 244, column: 6)
!17623 = !DILocation(line: 244, column: 6, scope: !17609)
!17624 = !DILocation(line: 245, column: 38, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17626, file: !2825, line: 245, column: 7)
!17626 = distinct !DILexicalBlock(scope: !17622, file: !2825, line: 244, column: 20)
!17627 = !DILocation(line: 245, column: 8, scope: !17625)
!17628 = !DILocation(line: 245, column: 7, scope: !17626)
!17629 = !DILocation(line: 249, column: 42, scope: !17630)
!17630 = distinct !DILexicalBlock(scope: !17625, file: !2825, line: 245, column: 48)
!17631 = !DILocation(line: 249, column: 10, scope: !17630)
!17632 = !DILocation(line: 0, scope: !17349, inlinedAt: !17633)
!17633 = distinct !DILocation(line: 252, column: 10, scope: !17630)
!17634 = !DILocation(line: 55, column: 2, scope: !17358, inlinedAt: !17635)
!17635 = distinct !DILocation(line: 145, column: 10, scope: !17349, inlinedAt: !17633)
!17636 = !DILocation(line: 0, scope: !17358, inlinedAt: !17635)
!17637 = !DILocation(line: 253, column: 20, scope: !17630)
!17638 = !DILocation(line: 254, column: 3, scope: !17630)
!17639 = !DILocation(line: 261, column: 16, scope: !17609)
!17640 = !DILocation(line: 0, scope: !17378, inlinedAt: !17641)
!17641 = distinct !DILocation(line: 262, column: 2, scope: !17609)
!17642 = !DILocation(line: 0, scope: !17387, inlinedAt: !17643)
!17643 = distinct !DILocation(line: 215, column: 2, scope: !17378, inlinedAt: !17641)
!17644 = !DILocation(line: 95, column: 2, scope: !17387, inlinedAt: !17643)
!17645 = !DILocation(line: 269, column: 2, scope: !17609)
!17646 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14410, file: !14410, line: 35, type: !17647, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17651)
!17647 = !DISubroutineType(types: !17648)
!17648 = !{!422, !17649}
!17649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17650, size: 32)
!17650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2710)
!17651 = !{!17652}
!17652 = !DILocalVariable(name: "to", arg: 1, scope: !17646, file: !14410, line: 35, type: !17649)
!17653 = !DILocation(line: 0, scope: !17646)
!17654 = !DILocation(line: 37, column: 35, scope: !17646)
!17655 = !DILocation(line: 37, column: 10, scope: !17646)
!17656 = !DILocation(line: 37, column: 9, scope: !17646)
!17657 = !DILocation(line: 37, column: 2, scope: !17646)
!17658 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17659, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !17663)
!17659 = !DISubroutineType(types: !17660)
!17660 = !{!422, !17661}
!17661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17662, size: 32)
!17662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2713)
!17663 = !{!17664}
!17664 = !DILocalVariable(name: "node", arg: 1, scope: !17658, file: !367, line: 225, type: !17661)
!17665 = !DILocation(line: 0, scope: !17658)
!17666 = !DILocation(line: 227, column: 15, scope: !17658)
!17667 = !DILocation(line: 227, column: 20, scope: !17658)
!17668 = !DILocation(line: 227, column: 2, scope: !17658)
!17669 = distinct !DISubprogram(name: "boot_banner", scope: !17670, file: !17670, line: 26, type: !3406, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3392, retainedNodes: !437)
!17670 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17671 = !DILocation(line: 34, column: 2, scope: !17669)
!17672 = !DILocation(line: 36, column: 1, scope: !17669)
